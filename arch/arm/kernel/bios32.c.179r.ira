
;; Function pci_fixup_unassign (pci_fixup_unassign)[0:1046] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 20.
verify found no changes in insn with uid = 20.
deleting insn with uid = 10.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a4 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 11(l0): point = 4
   Insn 20(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 2(l0): point = 12
 a0(r133): [1..12]
 a1(r136): [1..2]
 a2(r135): [3..8]
 a3(r134): [3..10]
 a4(r137): [5..6]
Compressing live ranges: from 15 to 8 - 53%
Ranges after the compression:
 a0(r133): [0..7]
 a1(r136): [0..1]
 a2(r135): [2..5]
 a3(r134): [2..6]
 a4(r137): [3..4]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r133,l0) conflicts: a1(r136,l0) a2(r135,l0) a3(r134,l0) a4(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r136,l0) conflicts: a0(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r135,l0) conflicts: a0(r133,l0) a3(r134,l0) a4(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r134,l0) conflicts: a0(r133,l0) a2(r135,l0) a4(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r137,l0) conflicts: a0(r133,l0) a2(r135,l0) a3(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r136)<->a3(r134)@125:shuffle
  cp1:a1(r136)<->a2(r135)@125:shuffle
  regions=1, blocks=3, points=8
    allocnos=5, copies=2, conflicts=1, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r133 1r136 2r135 3r134 4r137
    modified regnos: 133 134 135 136 137
    border:
    Pressure: GENERAL_REGS=5
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a4(r137,l0)
      Pushing a3(r134,l0)
      Pushing a2(r135,l0)
      Pushing a1(r136,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
      Popping a1(r136,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 3
      Popping a3(r134,l0)  -- assign reg 2
      Popping a4(r137,l0)  -- assign reg 1
Disposition:
    0:r133 l0     0    3:r134 l0     2    2:r135 l0     3    1:r136 l0     3
    4:r137 l0     1
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 133
insn=6, live_throughout: 13, 14, 133, dead_or_set: 134
insn=7, live_throughout: 13, 14, 133, 134, dead_or_set: 135
insn=20, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 137
insn=11, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 137
insn=8, live_throughout: 13, 14, 133, dead_or_set: 134, 135, 136
insn=9, live_throughout: 13, 14, dead_or_set: 133, 136
init_insns for 134: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 20 (nil))
changing reg in insn 2
changing reg in insn 11
changing reg in insn 9
changing reg in insn 7
changing reg in insn 6
changing reg in insn 8
changing reg in insn 6
changing reg in insn 6
changing reg in insn 8
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 20
changing reg in insn 11
Spilling for insn 11.
Spilling for insn 9.

Reloads for insn # 11
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


pci_fixup_unassign

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={1d,4u,2d} r1={2d,1u} r2={2d,1u} r3={3d,2u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 24{11d,11u,2e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/bios32.c:135 (set (reg:SI 2 r2 [orig:134 <variable>.end ] [134])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 7 6 20 2 arch/arm/kernel/bios32.c:135 (set (reg:SI 3 r3 [orig:135 <variable>.start ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 20 7 11 2 arch/arm/kernel/bios32.c:136 (set (reg:SI 1 r1 [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 11 20 8 2 arch/arm/kernel/bios32.c:136 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
        (reg:SI 1 r1 [137])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 8 11 9 2 arch/arm/kernel/bios32.c:135 (set (reg:SI 3 r3 [136])
        (minus:SI (reg:SI 2 r2 [orig:134 <variable>.end ] [134])
            (reg:SI 3 r3 [orig:135 <variable>.start ] [135]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 9 8 19 2 arch/arm/kernel/bios32.c:135 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [136])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 9 21 NOTE_INSN_DELETED)

(note 21 19 0 NOTE_INSN_DELETED)


;; Function pci_fixup_dec21285 (pci_fixup_dec21285)[0:1047] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a9 (r175,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r165,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a8(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r175,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r175: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS

  a0(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a8(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r175,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 45(l0): point = 1
   Insn 44(l0): point = 3
   Insn 49(l0): point = 5
   Insn 43(l0): point = 7
   Insn 46(l0): point = 9
   Insn 47(l0): point = 11
   Insn 40(l0): point = 14
   Insn 39(l0): point = 16
   Insn 38(l0): point = 18
   Insn 34(l0): point = 20
   Insn 59(l1): point = 23
   Insn 56(l1): point = 25
   Insn 54(l1): point = 27
   Insn 52(l1): point = 29
   Insn 58(l1): point = 31
   Insn 50(l1): point = 33
   Insn 55(l1): point = 35
 a0(r167): [2..20]
 a1(r171): [2..3]
 a2(r169): [4..7]
 a3(r175): [1..5]
 a4(r166): [1..11]
 a5(r165): [1..9]
 a6(r168): [12..18]
 a7(r165): [23..37]
 a8(r166): [23..37]
 a9(r175): [23..37]
Compressing live ranges: from 38 to 13 - 34%
Ranges after the compression:
 a0(r167): [1..10]
 a1(r171): [1..2]
 a2(r169): [3..5]
 a3(r175): [11..12] [0..4]
 a4(r166): [11..12] [0..7]
 a5(r165): [11..12] [0..6]
 a6(r168): [8..9]
+++Allocating 56 bytes for conflict table (uncompressed size 80)
;; a0(r167,l0) conflicts: a3(r175,l0) a4(r166,l0) a5(r165,l0) a1(r171,l0) a2(r169,l0) a6(r168,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r171,l0) conflicts: a3(r175,l0) a4(r166,l0) a5(r165,l0) a0(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r169,l0) conflicts: a3(r175,l0) a4(r166,l0) a5(r165,l0) a0(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r175,l0) conflicts: a4(r166,l0) a5(r165,l0) a1(r171,l0) a0(r167,l0) a2(r169,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r166,l0) conflicts: a3(r175,l0) a5(r165,l0) a1(r171,l0) a0(r167,l0) a2(r169,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r165,l0) conflicts: a3(r175,l0) a4(r166,l0) a1(r171,l0) a0(r167,l0) a2(r169,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r168,l0) conflicts: a0(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a4(r166)<->a6(r168)@1000:move
  cp1:a1(r171)<->a2(r169)@125:shuffle
  regions=2, blocks=6, points=13
    allocnos=10, copies=2, conflicts=1, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r167 1r171 2r169 3r175 4r166 5r165 6r168
    modified regnos: 165 166 167 168 169 171 175
    border:
    Pressure: GENERAL_REGS=6
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 171 of GENERAL_REGS has 1 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 175 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 1 regs less
      Pushing a2(r169,l0)
      Pushing a1(r171,l0)
      Pushing a6(r168,l0)
      Pushing a3(r175,l0)
      Pushing a4(r166,l0)
      Pushing a0(r167,l0)
      Pushing a5(r165,l0)
      Popping a5(r165,l0)  -- assign reg 3
      Popping a0(r167,l0)  -- assign reg 0
      Popping a4(r166,l0)  -- assign reg 2
      Popping a3(r175,l0)  -- assign reg 1
      Popping a6(r168,l0)  -- assign reg 2
      Popping a1(r171,l0)  -- assign reg 12
      Popping a2(r169,l0)  -- assign reg 12
Disposition:
    5:r165 l0     3    4:r166 l0     2    0:r167 l0     0    6:r168 l0     2
    2:r169 l0    12    1:r171 l0    12    3:r175 l0     1
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=34, live_throughout: 13, 14, dead_or_set: 0, 167
insn=38, live_throughout: 13, 14, 167, dead_or_set: 168
insn=39, live_throughout: 13, 14, 167, 168, dead_or_set: 
insn=40, live_throughout: 13, 14, 167, 168, dead_or_set: 
insn=47, live_throughout: 13, 14, 167, dead_or_set: 166, 168
insn=46, live_throughout: 13, 14, 166, 167, dead_or_set: 165
insn=43, live_throughout: 13, 14, 165, 166, 167, dead_or_set: 169
insn=49, live_throughout: 13, 14, 165, 166, 167, 169, dead_or_set: 175
insn=44, live_throughout: 13, 14, 165, 166, 167, 175, dead_or_set: 169, 171
insn=45, live_throughout: 13, 14, 165, 166, 175, dead_or_set: 167, 171
insn=57, live_throughout: 13, 14, 165, 166, 175, dead_or_set: 
insn=55, live_throughout: 13, 14, 165, 175, dead_or_set: 166
insn=50, live_throughout: 13, 14, 165, 166, 175, dead_or_set: 
insn=58, live_throughout: 13, 14, 165, 166, 175, dead_or_set: 
insn=52, live_throughout: 13, 14, 24, 165, 166, 175, dead_or_set: 
insn=54, live_throughout: 13, 14, 24, 165, 166, 175, dead_or_set: 
insn=56, live_throughout: 13, 14, 24, 166, 175, dead_or_set: 165
insn=59, live_throughout: 13, 14, 165, 166, 175, dead_or_set: 
insn=65, live_throughout: 13, 14, dead_or_set: 
init_insns for 171: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 175: (insn_list:REG_DEP_TRUE 49 (nil))
changing reg in insn 56
changing reg in insn 46
changing reg in insn 54
changing reg in insn 52
changing reg in insn 50
changing reg in insn 56
changing reg in insn 47
changing reg in insn 55
changing reg in insn 49
changing reg in insn 58
changing reg in insn 55
changing reg in insn 34
changing reg in insn 43
changing reg in insn 46
changing reg in insn 45
changing reg in insn 38
changing reg in insn 44
changing reg in insn 38
changing reg in insn 47
changing reg in insn 39
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 49
changing reg in insn 54
changing reg in insn 52
changing reg in insn 50
Spilling for insn 45.
Spilling for insn 50.
Spilling for insn 52.
Spilling for insn 54.

Reloads for insn # 45
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                                                        (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                                                        (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])

Reloads for insn # 50
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])

Reloads for insn # 52
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])

Reloads for insn # 54
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                                                        (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                                                        (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
deleting insn with uid = 34.
deleting insn with uid = 47.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


pci_fixup_dec21285

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={1d,4u,1d} r1={2d,3u} r2={3d,4u} r3={3d,4u} r12={3d,2u} r13={1d,5u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 42{16d,25u,1e} in 15{15 regular + 0 call} insns.
(note 33 0 36 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 33 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 35 36 38 2 NOTE_INSN_FUNCTION_BEG)

(insn 38 35 39 2 arch/arm/kernel/bios32.c:149 (set (reg:SI 2 r2 [orig:168 <variable>.devfn ] [168])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 arch/arm/kernel/bios32.c:149 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:168 <variable>.devfn ] [168])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 2 arch/arm/kernel/bios32.c:149 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  5 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 12 [ip]
;; live  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 12 [ip]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 42 41 46 3 NOTE_INSN_DELETED)

(insn 46 42 43 3 arch/arm/kernel/bios32.c:151 (set (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
        (reg/v/f:SI 0 r0 [orig:167 dev ] [167])) 167 {*arm_movsi_insn} (nil))

(insn 43 46 49 3 arch/arm/kernel/bios32.c:151 (set (reg:SI 12 ip [169])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                    (const_int 40 [0x28])) [0 <variable>.class+0 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 49 43 44 3 arch/arm/kernel/bios32.c:153 (set (reg:SI 1 r1 [175])
        (reg/v:SI 2 r2 [orig:166 i ] [166])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 44 49 45 3 arch/arm/kernel/bios32.c:151 (set (reg:SI 12 ip [171])
        (ior:SI (reg:SI 12 ip [169])
            (const_int 393216 [0x60000]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (nil)))

(insn 45 44 57 3 arch/arm/kernel/bios32.c:151 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:167 dev ] [167])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (reg:SI 12 ip [171])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [90.9%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 57 45 48 4 5 "" [1 uses])

(note 48 57 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 55 48 50 4 arch/arm/kernel/bios32.c:152 discrim 2 (set (reg/v:SI 2 r2 [orig:166 i ] [166])
        (plus:SI (reg/v:SI 2 r2 [orig:166 i ] [166])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 50 55 58 4 arch/arm/kernel/bios32.c:153 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (reg:SI 1 r1 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 58 50 52 4 arch/arm/kernel/bios32.c:152 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 2 r2 [orig:166 i ] [166])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(insn 52 58 54 4 arch/arm/kernel/bios32.c:154 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 1 r1 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 54 52 56 4 arch/arm/kernel/bios32.c:155 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 1 r1 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 54 59 4 arch/arm/kernel/bios32.c:152 discrim 2 (set (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
        (plus:SI (reg:SI 3 r3 [orig:165 ivtmp.375 ] [165])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn 59 56 65 4 arch/arm/kernel/bios32.c:152 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9091 [0x2383])
        (nil)))
;; End of basic block 4 -> ( 4 5)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [90.9%]  (dfs_back)
;; Succ edge  5 [9.1%]  (fallthru,loop_exit)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [9.1%]  (fallthru,loop_exit)
;; Pred edge  2 [39.0%] 
(code_label 65 59 68 5 6 "" [1 uses])

(note 68 65 91 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 91 68 92 NOTE_INSN_DELETED)

(note 92 91 0 NOTE_INSN_DELETED)


;; Function pci_fixup_ide_bases (pci_fixup_ide_bases)[0:1048] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
scanning new insn with uid = 43.
verify found no changes in insn with uid = 43.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)

Pass 0 for finding allocno costs

    a9 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a6(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a6(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 13(l0): point = 1
   Insn 12(l0): point = 3
   Insn 10(l0): point = 6
   Insn 9(l0): point = 8
   Insn 43(l0): point = 10
   Insn 6(l0): point = 12
   Insn 2(l0): point = 14
   Insn 29(l1): point = 17
   Insn 26(l1): point = 19
   Insn 28(l1): point = 21
   Insn 21(l1): point = 24
   Insn 22(l1): point = 26
   Insn 20(l1): point = 28
   Insn 18(l1): point = 31
   Insn 17(l1): point = 33
   Insn 16(l1): point = 35
   Insn 25(l1): point = 37
   Insn 15(l1): point = 39
 a0(r134): [1..1]
 a1(r133): [1..3]
 a2(r137): [4..14]
 a3(r140): [9..10]
 a4(r139): [9..12]
 a5(r133): [17..41]
 a6(r134): [17..41]
 a7(r135): [25..28]
 a8(r136): [29..39]
 a9(r141): [34..35]
 Rebuilding regno allocno list for 141
 Rebuilding regno allocno list for 136
 Rebuilding regno allocno list for 135
Compressing live ranges: from 42 to 15 - 35%
Ranges after the compression:
 a0(r134): [7..14] [0..0]
 a1(r133): [7..14] [0..1]
 a2(r137): [2..6]
 a3(r140): [3..4]
 a4(r139): [3..5]
 a7(r135): [8..9]
 a8(r136): [10..13]
 a9(r141): [11..12]
+++Allocating 64 bytes for conflict table (uncompressed size 80)
;; a0(r134,l0) conflicts: a1(r133,l0) a7(r135,l0) a8(r136,l0) a9(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a0(r134,l0) a7(r135,l0) a8(r136,l0) a9(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r137,l0) conflicts: a3(r140,l0) a4(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r140,l0) conflicts: a2(r137,l0) a4(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r139,l0) conflicts: a2(r137,l0) a3(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r135,l0) conflicts: a0(r134,l0) a1(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r136,l0) conflicts: a0(r134,l0) a1(r133,l0) a9(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r141,l0) conflicts: a0(r134,l0) a1(r133,l0) a8(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a7(r135)<->a8(r136)@125:shuffle
  cp1:a1(r133)<->a2(r137)@1000:move
  regions=2, blocks=8, points=15
    allocnos=10, copies=2, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r134 1r133 2r137 3r140 4r139 7r135 8r136 9r141
    modified regnos: 133 134 135 136 137 139 140 141
    border:
    Pressure: GENERAL_REGS=5
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
      Pushing a9(r141,l0)
      Pushing a4(r139,l0)
      Pushing a3(r140,l0)
      Pushing a8(r136,l0)
      Pushing a7(r135,l0)
      Pushing a2(r137,l0)
      Pushing a0(r134,l0)
      Pushing a1(r133,l0)
      Popping a1(r133,l0)  -- assign reg 0
      Popping a0(r134,l0)  -- assign reg 3
      Popping a2(r137,l0)  -- assign reg 0
      Popping a7(r135,l0)  -- assign reg 2
      Popping a8(r136,l0)  -- assign reg 2
      Popping a3(r140,l0)  -- assign reg 3
      Popping a4(r139,l0)  -- assign reg 2
      Popping a9(r141,l0)  -- assign reg 1
Disposition:
    1:r133 l0     0    0:r134 l0     3    7:r135 l0     2    8:r136 l0     2
    2:r137 l0     0    4:r139 l0     2    3:r140 l0     3    9:r141 l0     1
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 137
insn=6, live_throughout: 13, 14, 137, dead_or_set: 139
insn=43, live_throughout: 13, 14, 137, 139, dead_or_set: 140
insn=9, live_throughout: 13, 14, 137, dead_or_set: 139, 140
insn=10, live_throughout: 13, 14, 137, dead_or_set: 
insn=12, live_throughout: 13, 14, dead_or_set: 133, 137
insn=13, live_throughout: 13, 14, 133, dead_or_set: 134
insn=27, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=15, live_throughout: 13, 14, 133, 134, dead_or_set: 136
insn=25, live_throughout: 13, 14, 133, 136, dead_or_set: 134
insn=16, live_throughout: 13, 14, 133, 134, 136, dead_or_set: 141
insn=17, live_throughout: 13, 14, 133, 134, 136, dead_or_set: 141
insn=18, live_throughout: 13, 14, 133, 134, 136, dead_or_set: 
insn=20, live_throughout: 13, 14, 133, 134, dead_or_set: 135, 136
insn=22, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 
insn=21, live_throughout: 13, 14, 133, 134, dead_or_set: 135
insn=23, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=28, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=26, live_throughout: 13, 14, 24, 134, dead_or_set: 133
insn=29, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=35, live_throughout: 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 43 (nil))
changing reg in insn 26
changing reg in insn 12
changing reg in insn 26
changing reg in insn 22
changing reg in insn 21
changing reg in insn 15
changing reg in insn 20
changing reg in insn 25
changing reg in insn 13
changing reg in insn 28
changing reg in insn 25
changing reg in insn 20
changing reg in insn 22
changing reg in insn 21
changing reg in insn 15
changing reg in insn 20
changing reg in insn 16
changing reg in insn 2
changing reg in insn 12
changing reg in insn 6
changing reg in insn 6
changing reg in insn 6
changing reg in insn 9
changing reg in insn 43
changing reg in insn 9
changing reg in insn 16
changing reg in insn 17
Spilling for insn 22.
Spilling for insn 21.

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])

Reloads for insn # 21
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 12.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


pci_fixup_ide_bases

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={2d,5u,2d} r1={2d,1u} r2={4d,5u} r3={4d,3u} r12={1d} r13={1d,7u} r14={1d,1u} r24={3d,3u} 
;;    total ref usage 45{18d,25u,2e} in 16{16 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 6 2 NOTE_INSN_DELETED)

(insn 6 7 43 2 arch/arm/kernel/bios32.c:169 (set (reg:SI 2 r2 [orig:139 <variable>.class ] [139])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 dev ] [137])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (nil)))

(insn 43 6 9 2 arch/arm/kernel/bios32.c:169 (set (reg:SI 3 r3 [140])
        (const_int 257 [0x101])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 257 [0x101])
        (nil)))

(insn 9 43 10 2 arch/arm/kernel/bios32.c:169 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 2 r2 [orig:139 <variable>.class ] [139])
                (const_int 8 [0x8]))
            (reg:SI 3 r3 [140]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/bios32.c:169 (set (pc)
        (if_then_else (ne (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  7 [62.2%] 
;; Succ edge  3 [37.8%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 27 3 arch/arm/kernel/bios32.c:169 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 6 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  6 [90.9%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 27 13 14 4 12 "" [1 uses])

(note 14 27 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 25 4 arch/arm/kernel/bios32.c:174 (set (reg:SI 2 r2 [orig:136 D.18475 ] [136])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 15 16 4 arch/arm/kernel/bios32.c:172 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (plus:SI (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 16 25 17 4 arch/arm/kernel/bios32.c:174 (set (reg:SI 1 r1 [141])
        (and:SI (reg:SI 2 r2 [orig:136 D.18475 ] [136])
            (const_int -129 [0xffffffffffffff7f]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 4 arch/arm/kernel/bios32.c:174 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [141])
            (const_int 884 [0x374]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 4 arch/arm/kernel/bios32.c:174 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  4 [28.0%]  (fallthru)
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 22 5 arch/arm/kernel/bios32.c:175 (set (reg:SI 2 r2 [orig:135 D.18479 ] [135])
        (ior:SI (reg:SI 2 r2 [orig:136 D.18475 ] [136])
            (const_int 2 [0x2]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 22 20 21 5 arch/arm/kernel/bios32.c:176 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 2 r2 [orig:135 D.18479 ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 21 22 23 5 arch/arm/kernel/bios32.c:175 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (reg:SI 2 r2 [orig:135 D.18479 ] [135])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  4 [72.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 23 21 24 6 11 "" [1 uses])

(note 24 23 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 24 26 6 arch/arm/kernel/bios32.c:172 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(insn 26 28 29 6 arch/arm/kernel/bios32.c:172 (set (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
        (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.413 ] [133])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn 29 26 35 6 arch/arm/kernel/bios32.c:172 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9091 [0x2383])
        (nil)))
;; End of basic block 6 -> ( 4 7)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [90.9%]  (dfs_back)
;; Succ edge  7 [9.1%]  (fallthru,loop_exit)

;; Start of basic block ( 6 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [9.1%]  (fallthru,loop_exit)
;; Pred edge  2 [62.2%] 
(code_label 35 29 38 7 13 "" [1 uses])

(note 38 35 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 42 38 44 NOTE_INSN_DELETED)

(note 44 42 0 NOTE_INSN_DELETED)


;; Function pci_fixup_it8152 (pci_fixup_it8152)[0:1051] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a9 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a8(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r142: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a8(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 54(l0): point = 1
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 51(l0): point = 11
   Insn 29(l0): point = 13
   Insn 15(l0): point = 15
   Insn 16(l0): point = 17
   Insn 12(l0): point = 20
   Insn 11(l0): point = 22
   Insn 9(l0): point = 25
   Insn 8(l0): point = 27
   Insn 7(l0): point = 29
   Insn 6(l0): point = 31
   Insn 2(l0): point = 33
   Insn 38(l1): point = 36
   Insn 36(l1): point = 38
   Insn 34(l1): point = 40
   Insn 32(l1): point = 42
   Insn 37(l1): point = 44
   Insn 30(l1): point = 46
   Insn 35(l1): point = 48
 a0(r136): [16..33] [1..10]
 a1(r138): [7..8]
 a2(r135): [20..31] [7..10]
 a3(r142): [11..13]
 a4(r134): [11..17]
 a5(r133): [11..15]
 a6(r137): [28..29]
 a7(r133): [36..50]
 a8(r134): [36..50]
 a9(r142): [36..50]
Compressing live ranges: from 51 to 16 - 31%
Ranges after the compression:
 a0(r136): [7..13] [0..3]
 a1(r138): [1..2]
 a2(r135): [9..12] [1..3]
 a3(r142): [14..15] [4..5]
 a4(r134): [14..15] [4..8]
 a5(r133): [14..15] [4..6]
 a6(r137): [10..11]
+++Allocating 56 bytes for conflict table (uncompressed size 80)
;; a0(r136,l0) conflicts: a1(r138,l0) a2(r135,l0) a4(r134,l0) a6(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r138,l0) conflicts: a0(r136,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r135,l0) conflicts: a0(r136,l0) a1(r138,l0) a6(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r142,l0) conflicts: a4(r134,l0) a5(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r134,l0) conflicts: a0(r136,l0) a3(r142,l0) a5(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r133,l0) conflicts: a3(r142,l0) a4(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r137,l0) conflicts: a0(r136,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r136)<->a5(r133)@1000:move
  regions=2, blocks=9, points=16
    allocnos=10, copies=1, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r136 1r138 2r135 3r142 4r134 5r133 6r137
    modified regnos: 133 134 135 136 137 138 142
    border:
    Pressure: GENERAL_REGS=4
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a6(r137,l0)
      Pushing a1(r138,l0)
      Pushing a0(r136,l0)
      Pushing a3(r142,l0)
      Pushing a2(r135,l0)
      Pushing a4(r134,l0)
      Pushing a5(r133,l0)
      Popping a5(r133,l0)  -- assign reg 0
      Popping a4(r134,l0)  -- assign reg 3
      Popping a2(r135,l0)  -- assign reg 3
      Popping a3(r142,l0)  -- assign reg 2
      Popping a0(r136,l0)  -- assign reg 0
      Popping a1(r138,l0)  -- assign reg 2
      Popping a6(r137,l0)  -- assign reg 2
Disposition:
    5:r133 l0     0    4:r134 l0     3    2:r135 l0     3    0:r136 l0     0
    6:r137 l0     2    1:r138 l0     2    3:r142 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 136
insn=6, live_throughout: 13, 14, 136, dead_or_set: 135
insn=7, live_throughout: 13, 14, 135, 136, dead_or_set: 137
insn=8, live_throughout: 13, 14, 135, 136, dead_or_set: 137
insn=9, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=11, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=12, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=13, live_throughout: 13, 14, 136, dead_or_set: 
insn=16, live_throughout: 13, 14, 136, dead_or_set: 134
insn=15, live_throughout: 13, 14, 134, dead_or_set: 133, 136
insn=29, live_throughout: 13, 14, 133, 134, dead_or_set: 142
insn=51, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=19, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=21, live_throughout: 13, 14, 135, 136, dead_or_set: 138
insn=22, live_throughout: 13, 14, 136, dead_or_set: 135, 138
insn=23, live_throughout: 13, 14, 136, dead_or_set: 
insn=54, live_throughout: 13, 14, 136, dead_or_set: 
insn=27, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=35, live_throughout: 13, 14, 133, 142, dead_or_set: 134
insn=30, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=37, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=32, live_throughout: 13, 14, 24, 133, 134, 142, dead_or_set: 
insn=34, live_throughout: 13, 14, 24, 133, 134, 142, dead_or_set: 
insn=36, live_throughout: 13, 14, 24, 134, 142, dead_or_set: 133
insn=38, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=44, live_throughout: 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 29 (nil))
changing reg in insn 36
changing reg in insn 15
changing reg in insn 34
changing reg in insn 32
changing reg in insn 30
changing reg in insn 36
changing reg in insn 35
changing reg in insn 16
changing reg in insn 29
changing reg in insn 37
changing reg in insn 35
changing reg in insn 6
changing reg in insn 22
changing reg in insn 11
changing reg in insn 7
changing reg in insn 22
changing reg in insn 2
changing reg in insn 15
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 21
changing reg in insn 22
changing reg in insn 29
changing reg in insn 34
changing reg in insn 32
changing reg in insn 30
Spilling for insn 30.
Spilling for insn 32.
Spilling for insn 34.

Reloads for insn # 30
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])

Reloads for insn # 32
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                                                        (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                                                        (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 15.


try_optimize_cfg iteration 1

Forwarding edge 5->6 to 4 failed.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 16 (  1.8)


pci_fixup_it8152

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={2d,5u} r1={1d} r2={4d,5u} r3={4d,6u,1d} r12={1d} r13={1d,8u} r14={1d,1u} r24={4d,4u} 
;;    total ref usage 48{18d,29u,1e} in 20{20 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/bios32.c:262 (set (reg:SI 3 r3 [orig:135 D.18514 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:136 dev ] [136])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/bios32.c:262 (set (reg:SI 2 r2 [137])
        (lshiftrt:SI (reg:SI 3 r3 [orig:135 D.18514 ] [135])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 8 7 9 2 arch/arm/kernel/bios32.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [137])
            (const_int 1536 [0x600]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/bios32.c:262 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [28.0%] 
;; Succ edge  3 [72.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/bios32.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:135 D.18514 ] [135])
            (const_int 425984 [0x68000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 3 arch/arm/kernel/bios32.c:262 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 3 2 6) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  3 [28.0%]  (fallthru)
;; Pred edge  2 [28.0%] 
;; Pred edge  6 [100.0%] 
(code_label 13 12 14 4 16 "" [2 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 14 29 4 arch/arm/kernel/bios32.c:262 discrim 1 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 29 16 51 4 arch/arm/kernel/bios32.c:266 (set (reg:SI 2 r2 [142])
        (reg/v:SI 3 r3 [orig:134 i ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(jump_insn 51 29 52 4 (set (pc)
        (label_ref 27)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 52 51 19)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  3 [72.0%] 
(code_label 19 52 20 5 17 "" [1 uses])

(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 arch/arm/kernel/bios32.c:262 discrim 2 (set (reg:SI 2 r2 [138])
        (const_int 524547 [0x80103])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 524547 [0x80103])
        (nil)))

(insn 22 21 23 5 arch/arm/kernel/bios32.c:262 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:135 D.18514 ] [135])
            (reg:SI 2 r2 [138]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:135 D.18514 ] [135])
            (const_int 524547 [0x80103]))
        (nil)))

(jump_insn 23 22 53 5 arch/arm/kernel/bios32.c:262 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  6 [37.8%]  (fallthru)
;; Succ edge  8 [62.2%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [37.8%]  (fallthru)
(note 53 23 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 54 53 55 6 (set (pc)
        (label_ref 13)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%] 

(barrier 55 54 27)

;; Start of basic block ( 7 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  7 [91.7%]  (dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 27 55 28 7 18 "" [2 uses])

(note 28 27 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 28 30 7 arch/arm/kernel/bios32.c:265 discrim 2 (set (reg/v:SI 3 r3 [orig:134 i ] [134])
        (plus:SI (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 30 35 37 7 arch/arm/kernel/bios32.c:266 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (reg:SI 2 r2 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 37 30 32 7 arch/arm/kernel/bios32.c:265 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:134 i ] [134])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(insn 32 37 34 7 arch/arm/kernel/bios32.c:267 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 2 r2 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 32 36 7 arch/arm/kernel/bios32.c:268 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 2 r2 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 36 34 38 7 arch/arm/kernel/bios32.c:265 discrim 2 (set (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
        (plus:SI (reg:SI 0 r0 [orig:133 ivtmp.446 ] [133])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn 38 36 44 7 arch/arm/kernel/bios32.c:265 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
        (nil)))
;; End of basic block 7 -> ( 7 8)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [91.7%]  (dfs_back)
;; Succ edge  8 [8.3%]  (fallthru,loop_exit)

;; Start of basic block ( 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [8.3%]  (fallthru,loop_exit)
;; Pred edge  5 [62.2%] 
(code_label 44 38 47 8 20 "" [1 uses])

(note 47 44 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 57 47 58 NOTE_INSN_DELETED)

(note 58 57 0 NOTE_INSN_DELETED)


;; Function pcibios_resource_to_bus (pcibios_resource_to_bus)[0:1057]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 34(l0): point = 0
   Insn 33(l0): point = 2
   Insn 32(l0): point = 4
   Insn 31(l0): point = 6
   Insn 30(l0): point = 8
   Insn 29(l0): point = 10
   Insn 26(l0): point = 13
   Insn 24(l0): point = 16
   Insn 23(l0): point = 18
   Insn 19(l0): point = 21
   Insn 42(l0): point = 24
   Insn 14(l0): point = 26
   Insn 12(l0): point = 29
   Insn 11(l0): point = 31
   Insn 9(l0): point = 33
   Insn 8(l0): point = 35
   Insn 3(l0): point = 37
   Insn 4(l0): point = 39
 a0(r137): [1..37]
 a1(r144): [1..2]
 a2(r133): [24..26] [16..21] [3..13]
 a3(r143): [3..4]
 a4(r138): [5..39]
 a5(r142): [7..8]
 a6(r141): [9..10]
 a7(r134): [14..35]
 a8(r135): [19..33]
 a9(r139): [27..31]
Compressing live ranges: from 42 to 22 - 52%
Ranges after the compression:
 a0(r137): [0..20]
 a1(r144): [0..1]
 a2(r133): [14..15] [11..13] [2..9]
 a3(r143): [2..3]
 a4(r138): [4..21]
 a5(r142): [5..6]
 a6(r141): [7..8]
 a7(r134): [10..19]
 a8(r135): [12..18]
 a9(r139): [16..17]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r137,l0) conflicts: a1(r144,l0) a3(r143,l0) a2(r133,l0) a4(r138,l0) a5(r142,l0) a6(r141,l0) a7(r134,l0) a8(r135,l0) a9(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r144,l0) conflicts: a0(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r133,l0) conflicts: a0(r137,l0) a3(r143,l0) a4(r138,l0) a5(r142,l0) a6(r141,l0) a7(r134,l0) a8(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r143,l0) conflicts: a0(r137,l0) a2(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r138,l0) conflicts: a0(r137,l0) a2(r133,l0) a5(r142,l0) a6(r141,l0) a7(r134,l0) a8(r135,l0) a9(r139,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r142,l0) conflicts: a0(r137,l0) a2(r133,l0) a4(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r141,l0) conflicts: a0(r137,l0) a2(r133,l0) a4(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r134,l0) conflicts: a0(r137,l0) a2(r133,l0) a4(r138,l0) a8(r135,l0) a9(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r135,l0) conflicts: a0(r137,l0) a2(r133,l0) a4(r138,l0) a7(r134,l0) a9(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r139,l0) conflicts: a0(r137,l0) a4(r138,l0) a7(r134,l0) a8(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a5(r142)<->a6(r141)@125:shuffle
  cp1:a1(r144)<->a3(r143)@125:shuffle
  cp2:a1(r144)<->a2(r133)@125:shuffle
  cp3:a2(r133)<->a9(r139)@1000:move
  regions=1, blocks=8, points=22
    allocnos=10, copies=4, conflicts=1, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r137 1r144 2r133 3r143 4r138 5r142 6r141 7r134 8r135 9r139
    modified regnos: 133 134 135 137 138 139 141 142 143 144
    border:
    Pressure: GENERAL_REGS=6
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
      Pushing a9(r139,l0)
      Pushing a6(r141,l0)
      Pushing a5(r142,l0)
      Pushing a3(r143,l0)
      Pushing a1(r144,l0)
      Pushing a7(r134,l0)
      Pushing a8(r135,l0)
      Pushing a2(r133,l0)
      Pushing a0(r137,l0)
      Pushing a4(r138,l0)
      Popping a4(r138,l0)  -- assign reg 2
      Popping a0(r137,l0)  -- assign reg 1
      Popping a2(r133,l0)  -- assign reg 3
      Popping a8(r135,l0)  -- assign reg 0
      Popping a7(r134,l0)  -- assign reg 12
      Popping a1(r144,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 2
      Popping a5(r142,l0)  -- assign reg 0
      Popping a6(r141,l0)  -- assign reg 0
      Popping a9(r139,l0)  -- assign reg 3
Disposition:
    2:r133 l0     3    7:r134 l0    12    8:r135 l0     0    0:r137 l0     1
    4:r138 l0     2    9:r139 l0     3    6:r141 l0     0    5:r142 l0     0
    3:r143 l0     2    1:r144 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=4, live_throughout: 0, 1, 13, 14, dead_or_set: 2, 138
insn=3, live_throughout: 0, 13, 14, 138, dead_or_set: 1, 137
insn=8, live_throughout: 13, 14, 137, 138, dead_or_set: 0, 134
insn=9, live_throughout: 13, 14, 134, 137, 138, dead_or_set: 135
insn=11, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 139
insn=12, live_throughout: 13, 14, 134, 135, 137, 138, 139, dead_or_set: 
insn=14, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 133, 139
insn=42, live_throughout: 13, 14, 133, 134, 135, 137, 138, dead_or_set: 
insn=17, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 
insn=19, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 133
insn=20, live_throughout: 13, 14, 133, 134, 135, 137, 138, dead_or_set: 
insn=23, live_throughout: 13, 14, 133, 134, 137, 138, dead_or_set: 135
insn=24, live_throughout: 13, 14, 133, 134, 137, 138, dead_or_set: 
insn=26, live_throughout: 13, 14, 137, 138, dead_or_set: 133, 134
insn=27, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 
insn=29, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 141
insn=30, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 141, 142
insn=31, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 142
insn=32, live_throughout: 13, 14, 133, 137, dead_or_set: 138, 143
insn=33, live_throughout: 13, 14, 137, dead_or_set: 133, 143, 144
insn=34, live_throughout: 13, 14, dead_or_set: 137, 144
init_insns for 141: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 34 (nil))
changing reg in insn 14
changing reg in insn 26
changing reg in insn 19
changing reg in insn 33
changing reg in insn 30
changing reg in insn 8
changing reg in insn 26
changing reg in insn 19
changing reg in insn 9
changing reg in insn 23
changing reg in insn 11
changing reg in insn 11
changing reg in insn 3
changing reg in insn 34
changing reg in insn 31
changing reg in insn 33
changing reg in insn 30
changing reg in insn 4
changing reg in insn 32
changing reg in insn 29
changing reg in insn 9
changing reg in insn 29
changing reg in insn 11
changing reg in insn 14
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
Spilling for insn 31.
Spilling for insn 34.

Reloads for insn # 31
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137]) [0 <variable>.start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137]) [0 <variable>.start+0 S4 A32])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137])
                                                        (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137])
                                                        (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
deleting insn with uid = 4.
deleting insn with uid = 3.
deleting insn with uid = 14.


try_optimize_cfg iteration 1

Simplifying condjump 12 around jump 42
deleting insn with uid = 13.
deleting insn with uid = 42.
deleting insn with uid = 43.
deleting block 3
deleting insn with uid = 17.
Deleted label in block 4.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


pcibios_resource_to_bus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={4d,6u} r1={1d,2u,2d} r2={2d,4u,1d} r3={5d,3u} r12={2d,2u} r13={1d,6u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 47{18d,26u,3e} in 14{14 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 5 2 NOTE_INSN_DELETED)

(note 5 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 5 8 2 NOTE_INSN_DELETED)

(insn 8 10 9 2 arch/arm/kernel/bios32.c:423 (set (reg/v/f:SI 12 ip [orig:134 root ] [134])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 11 2 arch/arm/kernel/bios32.c:426 (set (reg:SI 0 r0 [orig:135 D.18655 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 9 12 2 arch/arm/kernel/bios32.c:426 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [orig:135 D.18655 ] [135])
                        (const_int 256 [0x100]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [139])
                (and:SI (reg:SI 0 r0 [orig:135 D.18655 ] [135])
                    (const_int 256 [0x100])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 12 11 18 2 arch/arm/kernel/bios32.c:426 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 4 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 18 12 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/bios32.c:427 (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                (const_int 24 [0x18])) [0 <variable>.io_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 20 19 21 5 26 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 22 21 23 5 NOTE_INSN_DELETED)

(insn 23 22 24 5 arch/arm/kernel/bios32.c:428 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:135 D.18655 ] [135])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 24 23 25 5 arch/arm/kernel/bios32.c:428 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  5 [61.0%]  (fallthru)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 arch/arm/kernel/bios32.c:429 (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  5 [39.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 27 26 28 7 27 "" [1 uses])

(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 7 arch/arm/kernel/bios32.c:431 (set (reg:SI 0 r0 [orig:141 <variable>.start ] [141])
        (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 30 29 31 7 arch/arm/kernel/bios32.c:431 (set (reg:SI 0 r0 [142])
        (minus:SI (reg:SI 0 r0 [orig:141 <variable>.start ] [141])
            (reg/v:SI 3 r3 [orig:133 offset ] [133]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 31 30 32 7 arch/arm/kernel/bios32.c:431 (set (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137]) [0 <variable>.start+0 S4 A32])
        (reg:SI 0 r0 [142])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 7 arch/arm/kernel/bios32.c:432 (set (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:138 res ] [138])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 7 arch/arm/kernel/bios32.c:432 (set (reg:SI 3 r3 [144])
        (minus:SI (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
            (reg/v:SI 3 r3 [orig:133 offset ] [133]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 34 33 44 7 arch/arm/kernel/bios32.c:432 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 region ] [137])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [144])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 44 34 45 NOTE_INSN_DELETED)

(note 45 44 0 NOTE_INSN_DELETED)


;; Function pcibios_bus_to_resource (pcibios_bus_to_resource)[0:1058] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 34(l0): point = 0
   Insn 33(l0): point = 2
   Insn 32(l0): point = 4
   Insn 31(l0): point = 6
   Insn 30(l0): point = 8
   Insn 29(l0): point = 10
   Insn 26(l0): point = 13
   Insn 24(l0): point = 16
   Insn 23(l0): point = 18
   Insn 19(l0): point = 21
   Insn 42(l0): point = 24
   Insn 14(l0): point = 26
   Insn 12(l0): point = 29
   Insn 11(l0): point = 31
   Insn 9(l0): point = 33
   Insn 8(l0): point = 35
   Insn 4(l0): point = 37
   Insn 3(l0): point = 39
 a0(r137): [1..39]
 a1(r144): [1..2]
 a2(r143): [3..4]
 a3(r133): [24..26] [16..21] [3..13]
 a4(r138): [5..37]
 a5(r142): [7..8]
 a6(r141): [9..10]
 a7(r134): [14..35]
 a8(r135): [19..33]
 a9(r139): [27..31]
Compressing live ranges: from 42 to 22 - 52%
Ranges after the compression:
 a0(r137): [0..21]
 a1(r144): [0..1]
 a2(r143): [2..3]
 a3(r133): [14..15] [11..13] [2..9]
 a4(r138): [4..20]
 a5(r142): [5..6]
 a6(r141): [7..8]
 a7(r134): [10..19]
 a8(r135): [12..18]
 a9(r139): [16..17]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r137,l0) conflicts: a1(r144,l0) a2(r143,l0) a3(r133,l0) a4(r138,l0) a5(r142,l0) a6(r141,l0) a7(r134,l0) a8(r135,l0) a9(r139,l0)
;;     total conflict hard regs: 0 2 14
;;     conflict hard regs: 0 2 14
;; a1(r144,l0) conflicts: a0(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r143,l0) conflicts: a0(r137,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r133,l0) conflicts: a0(r137,l0) a2(r143,l0) a4(r138,l0) a5(r142,l0) a6(r141,l0) a7(r134,l0) a8(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r138,l0) conflicts: a0(r137,l0) a3(r133,l0) a5(r142,l0) a6(r141,l0) a7(r134,l0) a8(r135,l0) a9(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a5(r142,l0) conflicts: a0(r137,l0) a3(r133,l0) a4(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r141,l0) conflicts: a0(r137,l0) a3(r133,l0) a4(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r134,l0) conflicts: a0(r137,l0) a3(r133,l0) a4(r138,l0) a8(r135,l0) a9(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r135,l0) conflicts: a0(r137,l0) a3(r133,l0) a4(r138,l0) a7(r134,l0) a9(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r139,l0) conflicts: a0(r137,l0) a4(r138,l0) a7(r134,l0) a8(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a5(r142)<->a6(r141)@125:shuffle
  cp1:a1(r144)<->a3(r133)@125:shuffle
  cp2:a1(r144)<->a2(r143)@125:shuffle
  cp3:a3(r133)<->a9(r139)@1000:move
  regions=1, blocks=8, points=22
    allocnos=10, copies=4, conflicts=1, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r137 1r144 2r143 3r133 4r138 5r142 6r141 7r134 8r135 9r139
    modified regnos: 133 134 135 137 138 139 141 142 143 144
    border:
    Pressure: GENERAL_REGS=6
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
      Pushing a9(r139,l0)
      Pushing a6(r141,l0)
      Pushing a5(r142,l0)
      Pushing a2(r143,l0)
      Pushing a1(r144,l0)
      Pushing a7(r134,l0)
      Pushing a8(r135,l0)
      Pushing a3(r133,l0)
      Pushing a4(r138,l0)
      Pushing a0(r137,l0)
      Popping a0(r137,l0)  -- assign reg 1
      Popping a4(r138,l0)  -- assign reg 2
      Popping a3(r133,l0)  -- assign reg 3
      Popping a8(r135,l0)  -- assign reg 0
      Popping a7(r134,l0)  -- assign reg 12
      Popping a1(r144,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 2
      Popping a5(r142,l0)  -- assign reg 0
      Popping a6(r141,l0)  -- assign reg 0
      Popping a9(r139,l0)  -- assign reg 3
Disposition:
    3:r133 l0     3    7:r134 l0    12    8:r135 l0     0    0:r137 l0     1
    4:r138 l0     2    9:r139 l0     3    6:r141 l0     0    5:r142 l0     0
    2:r143 l0     2    1:r144 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 2, 13, 14, dead_or_set: 1, 137
insn=4, live_throughout: 0, 13, 14, 137, dead_or_set: 2, 138
insn=8, live_throughout: 13, 14, 137, 138, dead_or_set: 0, 134
insn=9, live_throughout: 13, 14, 134, 137, 138, dead_or_set: 135
insn=11, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 139
insn=12, live_throughout: 13, 14, 134, 135, 137, 138, 139, dead_or_set: 
insn=14, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 133, 139
insn=42, live_throughout: 13, 14, 133, 134, 135, 137, 138, dead_or_set: 
insn=17, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 
insn=19, live_throughout: 13, 14, 134, 135, 137, 138, dead_or_set: 133
insn=20, live_throughout: 13, 14, 133, 134, 135, 137, 138, dead_or_set: 
insn=23, live_throughout: 13, 14, 133, 134, 137, 138, dead_or_set: 135
insn=24, live_throughout: 13, 14, 133, 134, 137, 138, dead_or_set: 
insn=26, live_throughout: 13, 14, 137, 138, dead_or_set: 133, 134
insn=27, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 
insn=29, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 141
insn=30, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 141, 142
insn=31, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 142
insn=32, live_throughout: 13, 14, 133, 137, dead_or_set: 138, 143
insn=33, live_throughout: 13, 14, 137, dead_or_set: 133, 143, 144
insn=34, live_throughout: 13, 14, dead_or_set: 137, 144
init_insns for 141: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 34 (nil))
changing reg in insn 14
changing reg in insn 26
changing reg in insn 19
changing reg in insn 33
changing reg in insn 30
changing reg in insn 8
changing reg in insn 26
changing reg in insn 19
changing reg in insn 9
changing reg in insn 23
changing reg in insn 11
changing reg in insn 11
changing reg in insn 3
changing reg in insn 34
changing reg in insn 31
changing reg in insn 9
changing reg in insn 33
changing reg in insn 30
changing reg in insn 4
changing reg in insn 32
changing reg in insn 29
changing reg in insn 29
changing reg in insn 11
changing reg in insn 14
changing reg in insn 29
changing reg in insn 30
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 34
Spilling for insn 31.
Spilling for insn 34.

Reloads for insn # 31
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137]) [0 <variable>.start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137]) [0 <variable>.start+0 S4 A32])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                                                        (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                                                        (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 14.


try_optimize_cfg iteration 1

Simplifying condjump 12 around jump 42
deleting insn with uid = 13.
deleting insn with uid = 42.
deleting insn with uid = 43.
deleting block 3
deleting insn with uid = 17.
Deleted label in block 4.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


pcibios_bus_to_resource

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 24[cc]
;;  ref usage 	r0={4d,6u} r1={1d,3u,2d} r2={2d,3u,1d} r3={5d,3u} r12={2d,2u} r13={1d,6u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 47{18d,26u,3e} in 14{14 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 5 2 NOTE_INSN_DELETED)

(note 5 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 5 8 2 NOTE_INSN_DELETED)

(insn 8 10 9 2 arch/arm/kernel/bios32.c:439 (set (reg/v/f:SI 12 ip [orig:134 root ] [134])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 11 2 arch/arm/kernel/bios32.c:442 (set (reg:SI 0 r0 [orig:135 D.18675 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 9 12 2 arch/arm/kernel/bios32.c:442 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [orig:135 D.18675 ] [135])
                        (const_int 256 [0x100]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [139])
                (and:SI (reg:SI 0 r0 [orig:135 D.18675 ] [135])
                    (const_int 256 [0x100])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 12 11 18 2 arch/arm/kernel/bios32.c:442 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 4 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 18 12 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/bios32.c:443 (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                (const_int 24 [0x18])) [0 <variable>.io_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 20 19 21 5 31 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 22 21 23 5 NOTE_INSN_DELETED)

(insn 23 22 24 5 arch/arm/kernel/bios32.c:444 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:135 D.18675 ] [135])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 24 23 25 5 arch/arm/kernel/bios32.c:444 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  5 [61.0%]  (fallthru)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 arch/arm/kernel/bios32.c:445 (set (reg/v:SI 3 r3 [orig:133 offset ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:134 root ] [134])
                (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  5 [39.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 27 26 28 7 32 "" [1 uses])

(note 28 27 29 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 7 arch/arm/kernel/bios32.c:447 (set (reg:SI 0 r0 [orig:141 <variable>.start ] [141])
        (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 region ] [138]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:138 region ] [138]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 30 29 31 7 arch/arm/kernel/bios32.c:447 (set (reg:SI 0 r0 [142])
        (plus:SI (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (reg:SI 0 r0 [orig:141 <variable>.start ] [141]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 31 30 32 7 arch/arm/kernel/bios32.c:447 (set (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137]) [0 <variable>.start+0 S4 A32])
        (reg:SI 0 r0 [142])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 7 arch/arm/kernel/bios32.c:448 (set (reg:SI 2 r2 [orig:143 <variable>.end ] [143])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:138 region ] [138])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 7 arch/arm/kernel/bios32.c:448 (set (reg:SI 3 r3 [144])
        (plus:SI (reg/v:SI 3 r3 [orig:133 offset ] [133])
            (reg:SI 2 r2 [orig:143 <variable>.end ] [143]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 34 33 44 7 arch/arm/kernel/bios32.c:448 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:137 res ] [137])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [144])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 44 34 45 NOTE_INSN_DELETED)

(note 45 44 0 NOTE_INSN_DELETED)


;; Function pcibios_align_resource (pcibios_align_resource)[0:1064]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 39(l0): point = 0
   Insn 33(l0): point = 2
   Insn 26(l0): point = 4
   Insn 27(l0): point = 6
   Insn 25(l0): point = 8
   Insn 44(l0): point = 11
   Insn 43(l0): point = 13
   Insn 20(l0): point = 15
   Insn 19(l0): point = 17
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 13(l0): point = 25
   Insn 12(l0): point = 27
   Insn 9(l0): point = 29
   Insn 10(l0): point = 31
   Insn 5(l0): point = 33
   Insn 3(l0): point = 35
 a0(r148): [3..6]
 a1(r134): [3..4]
 a2(r133): [18..29] [5..13]
 a3(r146): [5..8]
 a4(r140): [7..33]
 a5(r135): [14..15]
 a6(r144): [16..17]
 a7(r142): [28..31]
 a8(r138): [30..35]
Compressing live ranges: from 38 to 18 - 47%
Ranges after the compression:
 a0(r148): [0..3]
 a1(r134): [0..1]
 a2(r133): [11..13] [2..6]
 a3(r146): [2..5]
 a4(r140): [4..16]
 a5(r135): [7..8]
 a6(r144): [9..10]
 a7(r142): [12..15]
 a8(r138): [14..17]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r148,l0) conflicts: a1(r134,l0) a3(r146,l0) a2(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts: a0(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r133,l0) conflicts: a0(r148,l0) a3(r146,l0) a4(r140,l0) a7(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r146,l0) conflicts: a0(r148,l0) a2(r133,l0) a4(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r140,l0) conflicts: a3(r146,l0) a2(r133,l0) a5(r135,l0) a6(r144,l0) a7(r142,l0) a8(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r135,l0) conflicts: a4(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r144,l0) conflicts: a4(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r142,l0) conflicts: a2(r133,l0) a4(r140,l0) a8(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r138,l0) conflicts: a4(r140,l0) a7(r142,l0)
;;     total conflict hard regs: 3 14
;;     conflict hard regs: 3 14

  cp0:a0(r148)<->a4(r140)@125:shuffle
  cp1:a1(r134)<->a3(r146)@125:shuffle
  cp2:a1(r134)<->a2(r133)@125:shuffle
  cp3:a2(r133)<->a6(r144)@125:shuffle
  cp4:a5(r135)<->a6(r144)@125:shuffle
  cp5:a2(r133)<->a5(r135)@125:shuffle
  regions=1, blocks=6, points=18
    allocnos=9, copies=6, conflicts=3, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r148 1r134 2r133 3r146 4r140 5r135 6r144 7r142 8r138
    modified regnos: 133 134 135 138 140 142 144 146 148
    border:
    Pressure: GENERAL_REGS=4
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
      Pushing a7(r142,l0)
      Pushing a6(r144,l0)
      Pushing a5(r135,l0)
      Pushing a3(r146,l0)
      Pushing a1(r134,l0)
      Pushing a0(r148,l0)
      Pushing a4(r140,l0)
      Pushing a2(r133,l0)
      Pushing a8(r138,l0)
      Popping a8(r138,l0)  -- assign reg 1
      Popping a2(r133,l0)  -- assign reg 2
      Popping a4(r140,l0)  -- assign reg 3
      Popping a0(r148,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 2
      Popping a3(r146,l0)  -- assign reg 1
      Popping a5(r135,l0)  -- assign reg 2
      Popping a6(r144,l0)  -- assign reg 2
      Popping a7(r142,l0)  -- assign reg 0
Disposition:
    2:r133 l0     2    1:r134 l0     2    5:r135 l0     2    8:r138 l0     1
    4:r140 l0     3    7:r142 l0     0    6:r144 l0     2    3:r146 l0     1
    0:r148 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 3, 13, 14, dead_or_set: 1, 138
insn=5, live_throughout: 13, 14, 138, dead_or_set: 3, 140
insn=10, live_throughout: 13, 14, 138, 140, dead_or_set: 142
insn=9, live_throughout: 13, 14, 140, 142, dead_or_set: 133, 138
insn=12, live_throughout: 13, 14, 133, 140, dead_or_set: 142
insn=13, live_throughout: 13, 14, 133, 140, dead_or_set: 
insn=16, live_throughout: 13, 14, 133, 140, dead_or_set: 
insn=17, live_throughout: 13, 14, 133, 140, dead_or_set: 
insn=19, live_throughout: 13, 14, 140, dead_or_set: 133, 144
insn=20, live_throughout: 13, 14, 140, dead_or_set: 135, 144
insn=43, live_throughout: 13, 14, 140, dead_or_set: 133, 135
insn=44, live_throughout: 13, 14, 140, dead_or_set: 133
insn=23, live_throughout: 13, 14, 133, 140, dead_or_set: 
insn=25, live_throughout: 13, 14, 133, 140, dead_or_set: 146
insn=27, live_throughout: 13, 14, 133, 146, dead_or_set: 140, 148
insn=26, live_throughout: 13, 14, 148, dead_or_set: 133, 134, 146
insn=33, live_throughout: 13, 14, dead_or_set: 0, 134, 148
insn=39, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 44
changing reg in insn 43
changing reg in insn 9
changing reg in insn 44
changing reg in insn 16
changing reg in insn 26
changing reg in insn 19
changing reg in insn 20
changing reg in insn 26
changing reg in insn 33
changing reg in insn 20
changing reg in insn 43
changing reg in insn 3
changing reg in insn 10
changing reg in insn 9
changing reg in insn 5
changing reg in insn 27
changing reg in insn 25
changing reg in insn 10
changing reg in insn 12
changing reg in insn 19
changing reg in insn 20
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 33
deleting insn with uid = 3.
deleting insn with uid = 5.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


pcibios_align_resource

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d,3u} r2={7d,7u,1d} r3={2d,3u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 44{19d,24u,1e} in 15{15 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 10 2 NOTE_INSN_DELETED)

(insn 10 11 9 2 arch/arm/kernel/bios32.c:607 (set (reg:SI 0 r0 [orig:142 <variable>.flags ] [142])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:138 res ] [138])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 10 12 2 arch/arm/kernel/bios32.c:605 (set (reg/v:SI 2 r2 [orig:133 start ] [133])
        (mem/s/j:SI (reg/v/f:SI 1 r1 [orig:138 res ] [138]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 9 13 2 arch/arm/kernel/bios32.c:607 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:142 <variable>.flags ] [142])
                (const_int 1 [0x1])
                (const_int 8 [0x8]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 13 12 14 2 arch/arm/kernel/bios32.c:607 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  5 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 15 14 16 3 NOTE_INSN_DELETED)

(insn 16 15 17 3 arch/arm/kernel/bios32.c:607 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
                        (const_int 768 [0x300]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 17 16 18 3 arch/arm/kernel/bios32.c:607 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  5 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 18 17 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 18 19 4 NOTE_INSN_DELETED)

(insn 19 21 20 4 arch/arm/kernel/bios32.c:608 (set (reg:SI 2 r2 [144])
        (plus:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 20 19 43 4 arch/arm/kernel/bios32.c:608 (set (reg:SI 2 r2 [orig:135 D.18811 ] [135])
        (plus:SI (reg:SI 2 r2 [144])
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
            (const_int 1023 [0x3ff]))
        (nil)))

(insn 43 20 44 4 arch/arm/kernel/bios32.c:608 (set (reg/v:SI 2 r2 [orig:133 start ] [133])
        (and:SI (reg:SI 2 r2 [orig:135 D.18811 ] [135])
            (const_int -1021 [0xfffffffffffffc03]))) 67 {*arm_andsi3_insn} (nil))

(insn 44 43 23 4 arch/arm/kernel/bios32.c:608 (set (reg/v:SI 2 r2 [orig:133 start ] [133])
        (and:SI (reg/v:SI 2 r2 [orig:133 start ] [133])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 23 44 24 5 35 "" [2 uses])

(note 24 23 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 28 24 25 5 NOTE_INSN_DELETED)

(insn 25 28 27 5 arch/arm/kernel/bios32.c:610 (set (reg:SI 1 r1 [146])
        (plus:SI (reg/v:SI 3 r3 [orig:140 align ] [140])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 27 25 26 5 arch/arm/kernel/bios32.c:613 (set (reg:SI 3 r3 [148])
        (neg:SI (reg/v:SI 3 r3 [orig:140 align ] [140]))) 127 {*arm_negsi2} (nil))

(insn 26 27 33 5 arch/arm/kernel/bios32.c:610 (set (reg:SI 2 r2 [orig:134 D.18813 ] [134])
        (plus:SI (reg:SI 1 r1 [146])
            (reg/v:SI 2 r2 [orig:133 start ] [133]))) 4 {*arm_addsi3} (nil))

(insn 33 26 39 5 arch/arm/kernel/bios32.c:613 (set (reg/i:SI 0 r0)
        (and:SI (reg:SI 2 r2 [orig:134 D.18813 ] [134])
            (reg:SI 3 r3 [148]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 33 45 5 arch/arm/kernel/bios32.c:613 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 39 46 NOTE_INSN_DELETED)

(note 46 45 0 NOTE_INSN_DELETED)


;; Function pci_fixup_dec21142 (pci_fixup_dec21142)[0:1049] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 10(l0): point = 0
   Insn 6(l0): point = 2
   Insn 7(l0): point = 4
   Insn 9(l0): point = 6
   Insn 8(l0): point = 8
   Insn 2(l0): point = 10
 a0(r133): [3..10]
Compressing live ranges: from 13 to 2 - 15%
Ranges after the compression:
 a0(r133): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r133,l0) conflicts:
;;     total conflict hard regs: 1-3 14
;;     conflict hard regs: 1-3 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r133
    modified regnos: 133
    border:
    Pressure: GENERAL_REGS=5
    Reg 133 of GENERAL_REGS has 4 regs less
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
Disposition:
    0:r133 l0     0
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 133
insn=8, live_throughout: 13, 14, 133, dead_or_set: 2
insn=9, live_throughout: 2, 13, 14, 133, dead_or_set: 3
insn=7, live_throughout: 2, 3, 13, 14, 133, dead_or_set: 1
insn=6, live_throughout: 1, 2, 3, 13, 14, dead_or_set: 0, 133
insn=10, live_throughout: 13, 14, dead_or_set: 0, 1, 2, 3
changing reg in insn 2
changing reg in insn 7
changing reg in insn 6
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


pci_fixup_dec21142

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 137{127d,10u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 9 2 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 7 2 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 7 9 6 2 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 6 7 10 2 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:133 dev ] [133])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 10 6 11 2 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 11 10 19)

(note 19 11 0 NOTE_INSN_DELETED)


;; Function pci_fixup_cy82c693 (pci_fixup_cy82c693)[0:1050] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 102.
verify found no changes in insn with uid = 102.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:220000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:220000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 83(l0): point = 1
   Insn 82(l0): point = 3
   Insn 81(l0): point = 5
   Insn 79(l0): point = 7
   Insn 80(l0): point = 9
   Insn 78(l0): point = 11
   Insn 74(l0): point = 13
   Insn 77(l0): point = 15
   Insn 76(l0): point = 17
   Insn 75(l0): point = 19
   Insn 73(l0): point = 21
   Insn 69(l0): point = 23
   Insn 72(l0): point = 25
   Insn 71(l0): point = 27
   Insn 70(l0): point = 29
   Insn 68(l0): point = 31
   Insn 64(l0): point = 33
   Insn 67(l0): point = 35
   Insn 66(l0): point = 37
   Insn 65(l0): point = 39
   Insn 63(l0): point = 41
   Insn 59(l0): point = 43
   Insn 62(l0): point = 45
   Insn 61(l0): point = 47
   Insn 60(l0): point = 49
   Insn 57(l0): point = 52
   Insn 56(l0): point = 54
   Insn 54(l0): point = 56
   Insn 98(l0): point = 59
   Insn 47(l0): point = 61
   Insn 45(l0): point = 63
   Insn 43(l0): point = 65
   Insn 41(l0): point = 67
   Insn 39(l0): point = 69
   Insn 49(l0): point = 71
   Insn 38(l0): point = 73
   Insn 37(l0): point = 75
   Insn 34(l0): point = 77
   Insn 35(l0): point = 79
   Insn 33(l0): point = 81
   Insn 36(l0): point = 83
   Insn 31(l0): point = 85
   Insn 27(l0): point = 87
   Insn 30(l0): point = 89
   Insn 95(l0): point = 91
   Insn 97(l0): point = 93
   Insn 29(l0): point = 95
   Insn 13(l0): point = 97
   Insn 28(l0): point = 99
   Insn 12(l0): point = 101
   Insn 10(l0): point = 104
   Insn 9(l0): point = 106
   Insn 102(l0): point = 108
   Insn 6(l0): point = 110
   Insn 2(l0): point = 112
 a0(r137): [62..112] [8..58]
 a1(r135): [50..56]
 a2(r143): [62..73]
 a3(r133): [84..91]
 a4(r134): [90..93]
 a5(r140): [98..101]
 a6(r136): [102..110]
 a7(r139): [107..108]
Compressing live ranges: from 115 to 17 - 14%
Ranges after the compression:
 a0(r137): [4..16] [0..3]
 a1(r135): [1..2]
 a2(r143): [4..5]
 a3(r133): [6..8]
 a4(r134): [7..9]
 a5(r140): [10..11]
 a6(r136): [12..15]
 a7(r139): [13..14]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r137,l0) conflicts: a1(r135,l0) a2(r143,l0) a3(r133,l0) a4(r134,l0) a5(r140,l0) a6(r136,l0) a7(r139,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r135,l0) conflicts: a0(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r143,l0) conflicts: a0(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r133,l0) conflicts: a0(r137,l0) a4(r134,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r134,l0) conflicts: a0(r137,l0) a3(r133,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a5(r140,l0) conflicts: a0(r137,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a6(r136,l0) conflicts: a0(r137,l0) a7(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r139,l0) conflicts: a0(r137,l0) a6(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a5(r140)<->a6(r136)@125:shuffle
  regions=1, blocks=7, points=17
    allocnos=8, copies=1, conflicts=3, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r137 1r135 2r143 3r133 4r134 5r140 6r136 7r139
    modified regnos: 133 134 135 136 137 139 140 143
    border:
    Pressure: GENERAL_REGS=7
    Reg 137 of GENERAL_REGS has 5 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 5 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
      Pushing a7(r139,l0)
      Pushing a5(r140,l0)
      Pushing a6(r136,l0)
      Pushing a1(r135,l0)
      Pushing a2(r143,l0)
      Pushing a4(r134,l0)
      Pushing a3(r133,l0)
      Pushing a0(r137,l0)
      Popping a0(r137,l0)  -- assign reg 4
      Popping a3(r133,l0)  -- assign reg 5
      Popping a4(r134,l0)  -- assign reg 3
      Popping a2(r143,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 1
      Popping a6(r136,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 3
      Popping a7(r139,l0)  -- assign reg 2
Disposition:
    3:r133 l0     5    4:r134 l0     3    1:r135 l0     1    6:r136 l0     3
    0:r137 l0     4    7:r139 l0     2    5:r140 l0     3    2:r143 l0     3
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 137
insn=6, live_throughout: 13, 14, 137, dead_or_set: 136
insn=102, live_throughout: 13, 14, 136, 137, dead_or_set: 139
insn=9, live_throughout: 13, 14, 136, 137, dead_or_set: 139
insn=10, live_throughout: 13, 14, 136, 137, dead_or_set: 
insn=12, live_throughout: 13, 137, dead_or_set: 136, 140
insn=28, live_throughout: 13, 137, 140, dead_or_set: 1
insn=13, live_throughout: 1, 13, 137, dead_or_set: 140
insn=29, live_throughout: 1, 13, 24, 137, dead_or_set: 2
insn=97, live_throughout: 1, 2, 13, 24, 137, dead_or_set: 134
insn=95, live_throughout: 1, 2, 13, 134, 137, dead_or_set: 133
insn=30, live_throughout: 1, 2, 13, 133, 137, dead_or_set: 3, 134
insn=27, live_throughout: 1, 2, 3, 13, 133, 137, dead_or_set: 0
insn=31, live_throughout: 13, 133, 137, dead_or_set: 0, 1, 2, 3, 14
insn=36, live_throughout: 13, 137, dead_or_set: 3, 133
insn=33, live_throughout: 3, 13, 137, dead_or_set: 0
insn=35, live_throughout: 0, 3, 13, 137, dead_or_set: 2
insn=34, live_throughout: 0, 2, 3, 13, 137, dead_or_set: 1
insn=37, live_throughout: 13, 137, dead_or_set: 0, 1, 2, 3, 14
insn=38, live_throughout: 13, 14, 137, dead_or_set: 143
insn=49, live_throughout: 13, 14, 137, 143, dead_or_set: 
insn=39, live_throughout: 13, 14, 137, 143, dead_or_set: 
insn=41, live_throughout: 13, 14, 137, 143, dead_or_set: 
insn=43, live_throughout: 13, 14, 137, 143, dead_or_set: 
insn=45, live_throughout: 13, 14, 137, 143, dead_or_set: 
insn=47, live_throughout: 13, 14, dead_or_set: 137, 143
insn=98, live_throughout: 13, 14, dead_or_set: 
insn=52, live_throughout: 13, 14, 137, dead_or_set: 
insn=54, live_throughout: 13, 14, 137, dead_or_set: 135
insn=56, live_throughout: 13, 14, 135, 137, dead_or_set: 
insn=57, live_throughout: 13, 14, 135, 137, dead_or_set: 
insn=60, live_throughout: 13, 137, dead_or_set: 1, 135
insn=61, live_throughout: 1, 13, 137, dead_or_set: 2
insn=62, live_throughout: 1, 2, 13, 137, dead_or_set: 3
insn=59, live_throughout: 1, 2, 3, 13, 137, dead_or_set: 0
insn=63, live_throughout: 13, 137, dead_or_set: 0, 1, 2, 3, 14
insn=65, live_throughout: 13, 137, dead_or_set: 1
insn=66, live_throughout: 1, 13, 137, dead_or_set: 2
insn=67, live_throughout: 1, 2, 13, 137, dead_or_set: 3
insn=64, live_throughout: 1, 2, 3, 13, 137, dead_or_set: 0
insn=68, live_throughout: 13, 137, dead_or_set: 0, 1, 2, 3, 14
insn=70, live_throughout: 13, 137, dead_or_set: 1
insn=71, live_throughout: 1, 13, 137, dead_or_set: 2
insn=72, live_throughout: 1, 2, 13, 137, dead_or_set: 3
insn=69, live_throughout: 1, 2, 3, 13, 137, dead_or_set: 0
insn=73, live_throughout: 13, 137, dead_or_set: 0, 1, 2, 3, 14
insn=75, live_throughout: 13, 137, dead_or_set: 1
insn=76, live_throughout: 1, 13, 137, dead_or_set: 2
insn=77, live_throughout: 1, 2, 13, 137, dead_or_set: 3
insn=74, live_throughout: 1, 2, 3, 13, 137, dead_or_set: 0
insn=78, live_throughout: 13, 137, dead_or_set: 0, 1, 2, 3, 14
insn=80, live_throughout: 13, 14, 137, dead_or_set: 1
insn=79, live_throughout: 1, 13, 14, dead_or_set: 0, 137
insn=81, live_throughout: 0, 1, 13, 14, dead_or_set: 2
insn=82, live_throughout: 0, 1, 2, 13, 14, dead_or_set: 3
insn=83, live_throughout: 13, 14, dead_or_set: 0, 1, 2, 3
insn=90, live_throughout: 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 102 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 38 (nil))
changing reg in insn 95
changing reg in insn 36
changing reg in insn 97
changing reg in insn 30
changing reg in insn 54
changing reg in insn 56
changing reg in insn 60
changing reg in insn 6
changing reg in insn 9
changing reg in insn 12
changing reg in insn 2
changing reg in insn 49
changing reg in insn 47
changing reg in insn 45
changing reg in insn 43
changing reg in insn 41
changing reg in insn 80
changing reg in insn 79
changing reg in insn 75
changing reg in insn 74
changing reg in insn 70
changing reg in insn 69
changing reg in insn 65
changing reg in insn 64
changing reg in insn 59
changing reg in insn 54
changing reg in insn 39
changing reg in insn 34
changing reg in insn 33
changing reg in insn 28
changing reg in insn 27
changing reg in insn 6
changing reg in insn 102
changing reg in insn 9
changing reg in insn 12
changing reg in insn 13
changing reg in insn 38
changing reg in insn 49
changing reg in insn 47
changing reg in insn 45
changing reg in insn 43
changing reg in insn 41
changing reg in insn 39
Spilling for insn 49.
Spilling for insn 39.
Spilling for insn 41.
Spilling for insn 43.
Spilling for insn 45.
Spilling for insn 47.

Reloads for insn # 49
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 504 [0x1f8])) [0 <variable>.flags+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 504 [0x1f8])) [0 <variable>.flags+0 S4 A64])

Reloads for insn # 39
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])

Reloads for insn # 41
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])

Reloads for insn # 43
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])

Reloads for insn # 45
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 492 [0x1ec])) [0 <variable>.start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 492 [0x1ec])) [0 <variable>.start+0 S4 A32])

Reloads for insn # 47
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 496 [0x1f0])) [0 <variable>.end+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                                                        (const_int 496 [0x1f0])) [0 <variable>.end+0 S4 A64])
deleting insn with uid = 60.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 83.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


pci_fixup_cy82c693

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,8u} r1={15d,8u} r2={16d,8u} r3={19d,17u} r4={1d,21u} r5={1d,1u} r12={8d} r13={1d,13u} r14={7d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={10d,4u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 944{863d,81u,0e} in 54{47 regular + 7 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 2 2 NOTE_INSN_DELETED)

(insn 2 7 6 2 arch/arm/kernel/bios32.c:208 (set (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 102 2 arch/arm/kernel/bios32.c:209 (set (reg:SI 3 r3 [orig:136 D.18490 ] [136])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 102 6 9 2 arch/arm/kernel/bios32.c:209 (set (reg:SI 2 r2 [139])
        (const_int 257 [0x101])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 257 [0x101])
        (nil)))

(insn 9 102 10 2 arch/arm/kernel/bios32.c:209 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 3 r3 [orig:136 D.18490 ] [136])
                (const_int 8 [0x8]))
            (reg:SI 2 r2 [139]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/bios32.c:209 (set (pc)
        (if_then_else (ne (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [28.0%]  (fallthru)
(note 11 10 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 26 11 32 3 NOTE_INSN_DELETED)

(note 32 26 12 3 NOTE_INSN_DELETED)

(insn 12 32 28 3 arch/arm/kernel/bios32.c:212 (set (reg:SI 3 r3 [140])
        (and:SI (reg:SI 3 r3 [orig:136 D.18490 ] [136])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 12 13 3 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 28 29 3 arch/arm/kernel/bios32.c:212 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 29 13 97 3 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(insn 97 29 95 3 arch/arm/kernel/bios32.c:217 (set (reg/v:SI 3 r3 [orig:134 base0 ] [134])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 496 [0x1f0])
            (const_int 368 [0x170]))) 240 {*movsicc_insn} (nil))

(insn 95 97 30 3 arch/arm/kernel/bios32.c:217 (set (reg/v:SI 5 r5 [orig:133 base1 ] [133])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 1012 [0x3f4])
            (const_int 884 [0x374]))) 240 {*movsicc_insn} (nil))

(insn 30 95 27 3 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (ior:SI (reg/v:SI 3 r3 [orig:134 base0 ] [134])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 27 30 31 3 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 27 36 3 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 36 31 33 3 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (ior:SI (reg/v:SI 5 r5 [orig:133 base1 ] [133])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 33 36 35 3 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 35 33 34 3 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(insn 34 35 37 3 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 34 38 3 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 38 37 49 3 arch/arm/kernel/bios32.c:225 (set (reg:SI 3 r3 [143])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 49 38 39 3 arch/arm/kernel/bios32.c:231 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 504 [0x1f8])) [0 <variable>.flags+0 S4 A64])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 39 49 41 3 arch/arm/kernel/bios32.c:225 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 41 39 43 3 arch/arm/kernel/bios32.c:226 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 43 41 45 3 arch/arm/kernel/bios32.c:227 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 45 43 47 3 arch/arm/kernel/bios32.c:229 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 492 [0x1ec])) [0 <variable>.start+0 S4 A32])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 47 45 98 3 arch/arm/kernel/bios32.c:230 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 496 [0x1f0])) [0 <variable>.end+0 S4 A64])
        (reg:SI 3 r3 [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 98 47 99 3 (set (pc)
        (label_ref 90)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 99 98 52)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 52 99 53 4 40 "" [1 uses])

(note 53 52 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 55 53 54 4 NOTE_INSN_DELETED)

(insn 54 55 56 4 arch/arm/kernel/bios32.c:232 (set (reg:SI 1 r1 [orig:135 D.18501 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 56 54 57 4 arch/arm/kernel/bios32.c:232 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 1 r1 [orig:135 D.18501 ] [135])
                (const_int 3 [0x3])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 57 56 58 4 arch/arm/kernel/bios32.c:232 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  4 [39.0%]  (fallthru)
(note 58 57 61 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 61 58 62 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 75 [0x4b])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 59 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn 59 62 63 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 63 59 65 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 65 63 66 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 76 [0x4c])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 64 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn 64 67 68 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 68 64 70 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 70 68 71 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 77 [0x4d])) 167 {*arm_movsi_insn} (nil))

(insn 72 71 69 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 65 [0x41])) 167 {*arm_movsi_insn} (nil))

(insn 69 72 73 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 73 69 75 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 75 73 76 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 68 [0x44])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 74 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 23 [0x17])) 167 {*arm_movsi_insn} (nil))

(insn 74 77 78 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 78 74 80 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 80 78 79 5 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 79 80 81 5 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 81 79 82 5 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 69 [0x45])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 5 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 83 82 84 5 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 84 83 90)

;; Start of basic block ( 4 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [61.0%] 
;; Pred edge  3 [100.0%] 
(code_label 90 84 93 6 44 "" [2 uses])

(note 93 90 101 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 101 93 103 NOTE_INSN_DELETED)

(note 103 101 0 NOTE_INSN_DELETED)


;; Function pci_fixup_83c553 (pci_fixup_83c553)[0:1045] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 84.
verify found no changes in insn with uid = 84.
deleting insn with uid = 70.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a0 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:240000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:240000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 73(l0): point = 0
   Insn 72(l0): point = 2
   Insn 84(l0): point = 4
   Insn 67(l0): point = 6
   Insn 66(l0): point = 8
   Insn 63(l0): point = 11
   Insn 61(l0): point = 14
   Insn 60(l0): point = 16
   Insn 59(l0): point = 18
   Insn 58(l0): point = 20
   Insn 57(l0): point = 22
   Insn 56(l0): point = 24
   Insn 55(l0): point = 26
   Insn 54(l0): point = 28
   Insn 52(l0): point = 30
   Insn 53(l0): point = 32
   Insn 51(l0): point = 34
   Insn 47(l0): point = 36
   Insn 49(l0): point = 38
   Insn 48(l0): point = 40
   Insn 50(l0): point = 42
   Insn 46(l0): point = 44
   Insn 45(l0): point = 46
   Insn 44(l0): point = 48
   Insn 42(l0): point = 50
   Insn 43(l0): point = 52
   Insn 41(l0): point = 54
   Insn 40(l0): point = 56
   Insn 39(l0): point = 58
   Insn 37(l0): point = 60
   Insn 38(l0): point = 62
   Insn 36(l0): point = 64
   Insn 35(l0): point = 66
   Insn 34(l0): point = 68
   Insn 32(l0): point = 70
   Insn 33(l0): point = 72
   Insn 31(l0): point = 74
   Insn 30(l0): point = 76
   Insn 29(l0): point = 78
   Insn 27(l0): point = 80
   Insn 28(l0): point = 82
   Insn 26(l0): point = 84
   Insn 22(l0): point = 86
   Insn 23(l0): point = 88
   Insn 19(l0): point = 90
   Insn 18(l0): point = 92
   Insn 25(l0): point = 94
   Insn 21(l0): point = 96
   Insn 24(l0): point = 98
   Insn 17(l0): point = 100
   Insn 16(l0): point = 102
   Insn 15(l0): point = 104
   Insn 14(l0): point = 106
   Insn 13(l0): point = 108
   Insn 11(l0): point = 110
   Insn 12(l0): point = 112
   Insn 10(l0): point = 114
   Insn 6(l0): point = 116
   Insn 7(l0): point = 118
   Insn 20(l0): point = 120
   Insn 9(l0): point = 122
   Insn 8(l0): point = 124
   Insn 2(l0): point = 126
 a0(r148): [0..0]
 a1(r143): [1..6]
 a2(r145): [3..4]
 a3(r142): [7..8]
 a4(r133): [12..18]
 a5(r141): [19..20]
 a6(r136): [31..126]
 a7(r140): [43..120]
 a8(r139): [91..92]
 a9(r138): [93..100]
 a10(r137): [93..102]
Compressing live ranges: from 129 to 20 - 15%
Ranges after the compression:
 a0(r148): [0..0]
 a1(r143): [1..4]
 a2(r145): [2..3]
 a3(r142): [5..6]
 a4(r133): [7..8]
 a5(r141): [9..10]
 a6(r136): [11..19]
 a7(r140): [12..18]
 a8(r139): [13..14]
 a9(r138): [15..16]
 a10(r137): [15..17]
+++Allocating 56 bytes for conflict table (uncompressed size 88)
;; a0(r148,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r143,l0) conflicts: a2(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r145,l0) conflicts: a1(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r142,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r141,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r136,l0) conflicts: a7(r140,l0) a8(r139,l0) a9(r138,l0) a10(r137,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a7(r140,l0) conflicts: a6(r136,l0) a8(r139,l0) a9(r138,l0) a10(r137,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a8(r139,l0) conflicts: a6(r136,l0) a7(r140,l0)
;;     total conflict hard regs: 2 3
;;     conflict hard regs: 2 3
;; a9(r138,l0) conflicts: a6(r136,l0) a7(r140,l0) a10(r137,l0)
;;     total conflict hard regs: 2 3
;;     conflict hard regs: 2 3
;; a10(r137,l0) conflicts: a6(r136,l0) a7(r140,l0) a9(r138,l0)
;;     total conflict hard regs: 2 3
;;     conflict hard regs: 2 3

  cp0:a8(r139)<->a10(r137)@125:shuffle
  cp1:a8(r139)<->a9(r138)@125:shuffle
  regions=1, blocks=5, points=20
    allocnos=11, copies=2, conflicts=2, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r148 1r143 2r145 3r142 4r133 5r141 6r136 7r140 8r139 9r138 10r137
    modified regnos: 133 136 137 138 139 140 141 142 143 145 148
    border:
    Pressure: GENERAL_REGS=7
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 5 regs less
    Reg 140 of GENERAL_REGS has 5 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
      Pushing a0(r148,l0)
      Pushing a5(r141,l0)
      Pushing a3(r142,l0)
      Pushing a2(r145,l0)
      Pushing a4(r133,l0)
      Pushing a1(r143,l0)
      Pushing a10(r137,l0)
      Pushing a9(r138,l0)
      Pushing a8(r139,l0)
      Pushing a7(r140,l0)
      Pushing a6(r136,l0)
      Popping a6(r136,l0)  -- assign reg 4
      Popping a7(r140,l0)  -- assign reg 5
      Popping a8(r139,l0)  -- assign reg 1
      Popping a9(r138,l0)  -- assign reg 1
      Popping a10(r137,l0)  -- assign reg 0
      Popping a1(r143,l0)  -- assign reg 3
      Popping a4(r133,l0)  -- assign reg 3
      Popping a2(r145,l0)  -- assign reg 2
      Popping a3(r142,l0)  -- assign reg 3
      Popping a5(r141,l0)  -- assign reg 3
      Popping a0(r148,l0)  -- assign reg 3
Disposition:
    4:r133 l0     3    6:r136 l0     4   10:r137 l0     0    9:r138 l0     1
    8:r139 l0     1    7:r140 l0     5    5:r141 l0     3    3:r142 l0     3
    1:r143 l0     3    2:r145 l0     2    0:r148 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 136
insn=8, live_throughout: 13, 136, dead_or_set: 2
insn=9, live_throughout: 2, 13, 136, dead_or_set: 3
insn=20, live_throughout: 2, 3, 13, 136, dead_or_set: 140
insn=7, live_throughout: 2, 3, 13, 136, 140, dead_or_set: 1
insn=6, live_throughout: 1, 2, 3, 13, 136, 140, dead_or_set: 0
insn=10, live_throughout: 13, 136, 140, dead_or_set: 0, 1, 2, 3, 14
insn=12, live_throughout: 13, 136, 140, dead_or_set: 1
insn=11, live_throughout: 1, 13, 136, 140, dead_or_set: 0
insn=13, live_throughout: 0, 1, 13, 136, 140, dead_or_set: 2
insn=14, live_throughout: 0, 1, 2, 13, 136, 140, dead_or_set: 3
insn=15, live_throughout: 13, 136, 140, dead_or_set: 0, 1, 2, 3, 14
insn=16, live_throughout: 13, 136, 140, dead_or_set: 137
insn=17, live_throughout: 13, 136, 137, 140, dead_or_set: 138
insn=24, live_throughout: 13, 136, 137, 138, 140, dead_or_set: 2
insn=21, live_throughout: 2, 13, 136, 137, 138, 140, dead_or_set: 
insn=25, live_throughout: 2, 13, 136, 137, 138, 140, dead_or_set: 3
insn=18, live_throughout: 2, 3, 13, 136, 140, dead_or_set: 137, 138, 139
insn=19, live_throughout: 2, 3, 13, 136, 140, dead_or_set: 139
insn=23, live_throughout: 2, 3, 13, 136, 140, dead_or_set: 1
insn=22, live_throughout: 1, 2, 3, 13, 136, 140, dead_or_set: 0
insn=26, live_throughout: 13, 136, 140, dead_or_set: 0, 1, 2, 3, 14
insn=28, live_throughout: 13, 136, 140, dead_or_set: 1
insn=27, live_throughout: 1, 13, 136, 140, dead_or_set: 0
insn=29, live_throughout: 0, 1, 13, 136, 140, dead_or_set: 2
insn=30, live_throughout: 0, 1, 2, 13, 136, 140, dead_or_set: 3
insn=31, live_throughout: 13, 136, 140, dead_or_set: 0, 1, 2, 3, 14
insn=33, live_throughout: 13, 136, 140, dead_or_set: 1
insn=32, live_throughout: 1, 13, 136, 140, dead_or_set: 0
insn=34, live_throughout: 0, 1, 13, 136, 140, dead_or_set: 2
insn=35, live_throughout: 0, 1, 2, 13, 136, 140, dead_or_set: 3
insn=36, live_throughout: 13, 136, 140, dead_or_set: 0, 1, 2, 3, 14
insn=38, live_throughout: 13, 136, 140, dead_or_set: 1
insn=37, live_throughout: 1, 13, 136, 140, dead_or_set: 0
insn=39, live_throughout: 0, 1, 13, 136, 140, dead_or_set: 2
insn=40, live_throughout: 0, 1, 2, 13, 136, 140, dead_or_set: 3
insn=41, live_throughout: 13, 136, 140, dead_or_set: 0, 1, 2, 3, 14
insn=43, live_throughout: 13, 136, 140, dead_or_set: 1
insn=42, live_throughout: 1, 13, 136, 140, dead_or_set: 0
insn=44, live_throughout: 0, 1, 13, 136, 140, dead_or_set: 2
insn=45, live_throughout: 0, 1, 2, 13, 136, 140, dead_or_set: 3
insn=46, live_throughout: 13, 136, 140, dead_or_set: 0, 1, 2, 3, 14
insn=50, live_throughout: 13, 136, dead_or_set: 3, 140
insn=48, live_throughout: 3, 13, 136, dead_or_set: 1
insn=49, live_throughout: 1, 3, 13, 136, dead_or_set: 2
insn=47, live_throughout: 1, 2, 3, 13, 136, dead_or_set: 0
insn=51, live_throughout: 13, 136, dead_or_set: 0, 1, 2, 3, 14
insn=53, live_throughout: 13, 136, dead_or_set: 1
insn=52, live_throughout: 1, 13, dead_or_set: 0, 136
insn=54, live_throughout: 0, 1, 13, dead_or_set: 2
insn=55, live_throughout: 0, 1, 2, 13, dead_or_set: 3
insn=56, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=57, live_throughout: 13, 14, dead_or_set: 
insn=58, live_throughout: 13, 14, dead_or_set: 141
insn=59, live_throughout: 13, 14, dead_or_set: 133, 141
insn=60, live_throughout: 13, 14, 133, dead_or_set: 
insn=61, live_throughout: 13, 14, 133, dead_or_set: 
insn=63, live_throughout: 13, dead_or_set: 14, 133
insn=64, live_throughout: 13, 14, dead_or_set: 
insn=66, live_throughout: 13, 14, dead_or_set: 142
insn=67, live_throughout: 13, 14, dead_or_set: 142, 143
insn=84, live_throughout: 13, 14, 143, dead_or_set: 145
insn=72, live_throughout: 13, 14, 143, dead_or_set: 145
insn=73, live_throughout: 13, 14, dead_or_set: 143, 148
init_insns for 137: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 58 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 66 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 84 (nil))
changing reg in insn 59
changing reg in insn 63
changing reg in insn 60
changing reg in insn 2
changing reg in insn 53
changing reg in insn 52
changing reg in insn 48
changing reg in insn 47
changing reg in insn 43
changing reg in insn 42
changing reg in insn 38
changing reg in insn 37
changing reg in insn 33
changing reg in insn 32
changing reg in insn 28
changing reg in insn 27
changing reg in insn 23
changing reg in insn 22
changing reg in insn 21
changing reg in insn 19
changing reg in insn 17
changing reg in insn 16
changing reg in insn 12
changing reg in insn 11
changing reg in insn 7
changing reg in insn 6
changing reg in insn 18
changing reg in insn 16
changing reg in insn 16
changing reg in insn 18
changing reg in insn 17
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 50
changing reg in insn 21
changing reg in insn 58
changing reg in insn 59
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 73
changing reg in insn 72
changing reg in insn 84
changing reg in insn 73
Spilling for insn 21.
Spilling for insn 19.
Spilling for insn 72.

Reloads for insn # 21
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])

Reloads for insn # 72
Reload 0: reload_out (QI) = (mem/v:QI (plus:SI (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
                                                        (const_int 1233 [0x4d1])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/v:QI (plus:SI (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
                                                        (const_int 1233 [0x4d1])) [0 S1 A8])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 56.
rescanning insn with uid = 63.
deleting insn with uid = 63.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


pci_fixup_83c553

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,11u} r1={22d,11u} r2={21d,10u} r3={25d,15u} r4={1d,22u,2d} r5={1d,2u} r12={11d} r13={1d,14u} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={11d,1u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1314{1225d,87u,2e} in 63{53 regular + 10 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 8 2 arch/arm/kernel/bios32.c:82 (set (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 8 2 9 2 include/linux/pci.h:773 (set (reg:SI 2 r2)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 20 2 include/linux/pci.h:773 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 20 9 7 2 arch/arm/kernel/bios32.c:90 (set (reg:SI 5 r5 [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 7 20 6 2 include/linux/pci.h:773 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 6 7 10 2 include/linux/pci.h:773 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 6 12 2 include/linux/pci.h:773 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_dword") [flags 0x41] <function_decl 0x10f95880 pci_bus_write_config_dword>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 12 10 11 2 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 12 13 2 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 13 11 14 2 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 include/linux/pci.h:768 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 2 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 15 17 2 arch/arm/kernel/bios32.c:89 (set (reg:SI 0 r0 [orig:137 <variable>.end ] [137])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 17 16 24 2 arch/arm/kernel/bios32.c:89 (set (reg:SI 1 r1 [orig:138 <variable>.start ] [138])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 24 17 21 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 21 24 25 2 arch/arm/kernel/bios32.c:90 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A64])
        (reg:SI 5 r5 [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 25 21 18 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 255 [0xff])) 167 {*arm_movsi_insn} (nil))

(insn 18 25 19 2 arch/arm/kernel/bios32.c:89 (set (reg:SI 1 r1 [139])
        (minus:SI (reg:SI 0 r0 [orig:137 <variable>.end ] [137])
            (reg:SI 1 r1 [orig:138 <variable>.start ] [138]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 19 18 23 2 arch/arm/kernel/bios32.c:89 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 1 r1 [139])) 167 {*arm_movsi_insn} (nil))

(insn 23 19 22 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 23 26 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 22 28 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 28 26 27 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 28 29 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 29 27 30 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 66 [0x42])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 33 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 33 31 32 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 33 34 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 34 32 35 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 34 [0x22])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 38 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 38 36 37 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 38 39 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 39 37 40 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 131 [0x83])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 43 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 43 41 42 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 43 44 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 44 42 45 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 50 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 50 46 48 2 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (reg:SI 5 r5 [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 48 50 49 2 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 47 2 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 129 [0x81])) 167 {*arm_movsi_insn} (nil))

(insn 47 49 51 2 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 47 53 2 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 53 51 52 2 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 53 54 2 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 dev ] [136])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 54 52 55 2 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 68 [0x44])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 2 include/linux/pci.h:768 (set (reg:SI 3 r3)
        (const_int 45056 [0xb000])) 167 {*arm_movsi_insn} (nil))

(call_insn 56 55 57 2 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 57 56 58 2 arch/arm/kernel/bios32.c:129 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8785836)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 58 57 59 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
        (nil)))

(insn 59 58 60 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [orig:133 D.19037 ] [133])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [141])
                (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                    (const_int 24 [0x18]))) [0 outer_cache.sync+0 S4 A32])
        (nil)))

(insn 60 59 61 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:133 D.19037 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 62 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 62 61 63 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 63 62 64 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:95 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:133 D.19037 ] [133]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [21.6%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 64 63 65 4 46 "" [1 uses])

(note 65 64 66 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 4 arch/arm/kernel/bios32.c:129 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>)
        (nil)))

(insn 67 66 84 4 arch/arm/kernel/bios32.c:129 (set (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [142]) [0 tegra_pcie_io_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>) [0 tegra_pcie_io_base+0 S4 A32])
        (nil)))

(insn 84 67 72 4 arch/arm/kernel/bios32.c:129 (set (reg:SI 2 r2 [145])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))

(insn 72 84 73 4 arch/arm/kernel/bios32.c:129 (set (mem/v:QI (plus:SI (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
                (const_int 1233 [0x4d1])) [0 S1 A8])
        (reg:QI 2 r2 [145])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(insn 73 72 83 4 arch/arm/kernel/bios32.c:129 (set (reg:SI 3 r3 [148])
        (zero_extend:SI (mem/v:QI (plus:SI (reg/f:SI 3 r3 [orig:143 tegra_pcie_io_base ] [143])
                    (const_int 1233 [0x4d1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 83 73 85 NOTE_INSN_DELETED)

(note 85 83 0 NOTE_INSN_DELETED)


;; Function pci_mmap_page_range (pci_mmap_page_range)[0:1066]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a6 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a4(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r156: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a4(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 62(l0): point = 0
   Insn 56(l0): point = 2
   Insn 67(l0): point = 5
   Insn 41(l0): point = 7
   Insn 39(l0): point = 9
   Insn 34(l0): point = 11
   Insn 30(l0): point = 13
   Insn 38(l0): point = 15
   Insn 29(l0): point = 17
   Insn 37(l0): point = 19
   Insn 36(l0): point = 21
   Insn 32(l0): point = 23
   Insn 23(l0): point = 25
   Insn 26(l0): point = 27
   Insn 28(l0): point = 29
   Insn 22(l0): point = 31
   Insn 31(l0): point = 33
   Insn 19(l0): point = 35
   Insn 35(l0): point = 37
   Insn 21(l0): point = 39
   Insn 68(l0): point = 42
   Insn 13(l0): point = 44
   Insn 11(l0): point = 47
   Insn 9(l0): point = 49
   Insn 3(l0): point = 51
   Insn 10(l0): point = 53
 a0(r137): [42..44] [3..5]
 a1(r134): [6..7]
 a2(r136): [12..17]
 a3(r141): [47..51] [14..41]
 a4(r154): [16..23]
 a5(r152): [18..29]
 a6(r156): [20..31]
 a7(r151): [20..27]
 a8(r135): [22..33]
 a9(r148): [26..35]
 a10(r149): [32..39]
 a11(r138): [47..49] [36..41]
Compressing live ranges: from 56 to 27 - 48%
Ranges after the compression:
 a0(r137): [22..23] [0..1]
 a1(r134): [2..3]
 a2(r136): [4..7]
 a3(r141): [24..26] [5..21]
 a4(r154): [6..11]
 a5(r152): [8..14]
 a6(r156): [9..15]
 a7(r151): [9..13]
 a8(r135): [10..17]
 a9(r148): [12..18]
 a10(r149): [16..20]
 a11(r138): [24..25] [19..21]
+++Allocating 96 bytes for conflict table (uncompressed size 96)
;; a0(r137,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r136,l0) conflicts: a3(r141,l0) a4(r154,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a3(r141,l0) conflicts: a2(r136,l0) a4(r154,l0) a5(r152,l0) a7(r151,l0) a6(r156,l0) a8(r135,l0) a9(r148,l0) a10(r149,l0) a11(r138,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r154,l0) conflicts: a2(r136,l0) a3(r141,l0) a5(r152,l0) a7(r151,l0) a6(r156,l0) a8(r135,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a5(r152,l0) conflicts: a3(r141,l0) a4(r154,l0) a7(r151,l0) a6(r156,l0) a8(r135,l0) a9(r148,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a6(r156,l0) conflicts: a3(r141,l0) a4(r154,l0) a5(r152,l0) a7(r151,l0) a8(r135,l0) a9(r148,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a7(r151,l0) conflicts: a3(r141,l0) a4(r154,l0) a5(r152,l0) a6(r156,l0) a8(r135,l0) a9(r148,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a8(r135,l0) conflicts: a3(r141,l0) a4(r154,l0) a5(r152,l0) a7(r151,l0) a6(r156,l0) a9(r148,l0) a10(r149,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a9(r148,l0) conflicts: a3(r141,l0) a5(r152,l0) a7(r151,l0) a6(r156,l0) a8(r135,l0) a10(r149,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a10(r149,l0) conflicts: a3(r141,l0) a8(r135,l0) a9(r148,l0) a11(r138,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a11(r138,l0) conflicts: a3(r141,l0) a10(r149,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a6(r156)<->a10(r149)@125:shuffle
  cp1:a2(r136)<->a5(r152)@125:shuffle
  cp2:a0(r137)<->a1(r134)@125:shuffle
  regions=1, blocks=6, points=27
    allocnos=12, copies=3, conflicts=0, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r137 1r134 2r136 3r141 4r154 5r152 6r156 7r151 8r135 9r148 10r149 11r138
    modified regnos: 134 135 136 137 138 141 148 149 151 152 154 156
    border:
    Pressure: GENERAL_REGS=7
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 4 regs less
    Reg 141 of GENERAL_REGS has 5 regs less
    Reg 154 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 3 regs less
    Reg 156 of GENERAL_REGS has 2 regs less
    Reg 151 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
      Pushing a10(r149,l0)
      Pushing a9(r148,l0)
      Pushing a8(r135,l0)
      Pushing a1(r134,l0)
      Pushing a0(r137,l0)
      Pushing a7(r151,l0)
      Pushing a11(r138,l0)
      Pushing a6(r156,l0)
      Pushing a5(r152,l0)
      Pushing a4(r154,l0)
      Pushing a2(r136,l0)
      Pushing a3(r141,l0)
      Popping a3(r141,l0)  -- assign reg 12
      Popping a2(r136,l0)  -- assign reg 14
      Popping a4(r154,l0)  -- assign reg 3
      Popping a5(r152,l0)  -- assign reg 14
      Popping a6(r156,l0)  -- assign reg 2
      Popping a11(r138,l0)  -- assign reg 3
      Popping a7(r151,l0)  -- assign reg 4
      Popping a0(r137,l0)  -- assign reg 0
      Popping a1(r134,l0)  -- assign reg 0
      Popping a8(r135,l0)  -- assign reg 1
      Popping a9(r148,l0)  -- assign reg 3
      Popping a10(r149,l0)  -- assign reg 2
Disposition:
    1:r134 l0     0    8:r135 l0     1    2:r136 l0    14    0:r137 l0     0
   11:r138 l0     3    3:r141 l0    12    9:r148 l0     3   10:r149 l0     2
    7:r151 l0     4    5:r152 l0    14    4:r154 l0     3    6:r156 l0     2
New iteration of spill/restore move
+++Costs: overall -8750, reg -8750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=10, live_throughout: 0, 1, 13, 14, dead_or_set: 2
insn=3, live_throughout: 0, 13, 14, 24, dead_or_set: 1, 141
insn=9, live_throughout: 13, 14, 24, 141, dead_or_set: 0, 138
insn=11, live_throughout: 13, 14, 138, 141, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 137
insn=68, live_throughout: 13, 14, 137, dead_or_set: 
insn=16, live_throughout: 13, 138, 141, dead_or_set: 
insn=21, live_throughout: 13, 138, 141, dead_or_set: 149
insn=35, live_throughout: 13, 138, 141, 149, dead_or_set: 0
insn=19, live_throughout: 0, 13, 141, 149, dead_or_set: 138, 148
insn=31, live_throughout: 0, 13, 141, 148, 149, dead_or_set: 135
insn=22, live_throughout: 0, 13, 135, 141, 148, dead_or_set: 149, 156
insn=28, live_throughout: 0, 13, 135, 141, 148, 156, dead_or_set: 152
insn=26, live_throughout: 0, 13, 135, 141, 148, 152, 156, dead_or_set: 151
insn=23, live_throughout: 0, 13, 135, 141, 151, 152, dead_or_set: 148, 156
insn=32, live_throughout: 0, 13, 135, 141, 151, 152, 156, dead_or_set: 154
insn=36, live_throughout: 0, 13, 141, 151, 152, 154, 156, dead_or_set: 1, 135
insn=37, live_throughout: 0, 1, 13, 141, 152, 154, dead_or_set: 2, 151, 156
insn=29, live_throughout: 0, 1, 2, 13, 141, 154, dead_or_set: 136, 152
insn=38, live_throughout: 0, 1, 2, 13, 136, 141, dead_or_set: 3, 154
insn=30, live_throughout: 0, 1, 2, 3, 13, 136, dead_or_set: 141
insn=34, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 136
insn=39, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=41, live_throughout: 13, 14, dead_or_set: 0, 134
insn=67, live_throughout: 13, 14, dead_or_set: 134, 137
insn=50, live_throughout: 13, 14, 137, dead_or_set: 
insn=56, live_throughout: 13, 14, dead_or_set: 0, 137
insn=62, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 32 (nil))
changing reg in insn 41
changing reg in insn 67
changing reg in insn 31
changing reg in insn 36
changing reg in insn 29
changing reg in insn 34
changing reg in insn 30
changing reg in insn 67
changing reg in insn 13
changing reg in insn 56
changing reg in insn 9
changing reg in insn 21
changing reg in insn 19
changing reg in insn 3
changing reg in insn 35
changing reg in insn 32
changing reg in insn 31
changing reg in insn 30
changing reg in insn 28
changing reg in insn 26
changing reg in insn 32
changing reg in insn 26
changing reg in insn 28
changing reg in insn 31
changing reg in insn 19
changing reg in insn 23
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 37
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 38
changing reg in insn 23
changing reg in insn 22
changing reg in insn 37
changing reg in insn 23
Spilling for insn 30.
Spilling for insn 34.

Reloads for insn # 30
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                                                        (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                                                        (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 36.
deleting insn with uid = 56.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 39.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


pci_mmap_page_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={3d,3u} r2={6d,5u} r3={6d,5u} r4={1d,1u} r12={3d,6u,4d} r13={1d,7u} r14={4d,4u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 187{143d,40u,4e} in 24{23 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 7 4 2 NOTE_INSN_DELETED)

(note 4 2 6 2 NOTE_INSN_DELETED)

(note 6 4 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 3 2 arch/arm/kernel/bios32.c:664 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [ mmap_state ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 3 10 9 2 arch/arm/kernel/bios32.c:660 (set (reg/v/f:SI 12 ip [orig:141 vma ] [141])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 9 3 11 2 arch/arm/kernel/bios32.c:661 (set (reg/f:SI 3 r3 [orig:138 D.18871 ] [138])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [ dev ])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(jump_insn 11 9 12 2 arch/arm/kernel/bios32.c:664 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 167 [0xa7])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [98.3%]  (fallthru)
;; Succ edge  4 [1.7%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [98.3%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 68 3 arch/arm/kernel/bios32.c:665 (set (reg:SI 0 r0 [orig:137 D.18874 ] [137])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 68 13 69 3 (set (pc)
        (label_ref 50)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 69 68 16)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [1.7%] 
(code_label 16 69 17 4 51 "" [1 uses])

(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 20 17 27 4 NOTE_INSN_DELETED)

(note 27 20 33 4 NOTE_INSN_DELETED)

(note 33 27 40 4 NOTE_INSN_DELETED)

(note 40 33 21 4 NOTE_INSN_DELETED)

(insn 21 40 35 4 arch/arm/kernel/bios32.c:667 (set (reg:SI 2 r2 [orig:149 <variable>.mem_offset ] [149])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:138 D.18871 ] [138])
                (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 35 21 19 4 arch/arm/kernel/bios32.c:675 (set (reg:SI 0 r0)
        (reg/v/f:SI 12 ip [orig:141 vma ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 19 35 31 4 arch/arm/kernel/bios32.c:667 (set (reg:SI 3 r3 [orig:148 <variable>.mem_offset+4 ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:138 D.18871 ] [138])
                (const_int 20 [0x14])) [0 <variable>.mem_offset+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 19 22 4 arch/arm/kernel/bios32.c:675 (set (reg:SI 1 r1 [orig:135 D.18881 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])
        (nil)))

(insn 22 31 28 4 arch/arm/kernel/bios32.c:667 (set (reg:SI 2 r2 [156])
        (lshiftrt:SI (reg:SI 2 r2 [orig:149 <variable>.mem_offset ] [149])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 28 22 26 4 arch/arm/kernel/bios32.c:673 (set (reg:SI 14 lr [orig:152 <variable>.vm_page_prot ] [152])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (nil)))

(insn 26 28 23 4 arch/arm/kernel/bios32.c:667 (set (reg:SI 4 r4 [orig:151 <variable>.vm_pgoff ] [151])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 72 [0x48])) [0 <variable>.vm_pgoff+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 72 [0x48])) [0 <variable>.vm_pgoff+0 S4 A32])
        (nil)))

(insn 23 26 32 4 arch/arm/kernel/bios32.c:667 (set (reg:SI 2 r2 [156])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:148 <variable>.mem_offset+4 ] [148])
                (const_int 20 [0x14]))
            (reg:SI 2 r2 [156]))) 270 {*arith_shiftsi} (nil))

(insn 32 23 37 4 arch/arm/kernel/bios32.c:675 (set (reg:SI 3 r3 [orig:154 <variable>.vm_end ] [154])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])
        (nil)))

(insn 37 32 29 4 arch/arm/kernel/bios32.c:675 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 4 r4 [orig:151 <variable>.vm_pgoff ] [151])
            (reg:SI 2 r2 [156]))) 4 {*arm_addsi3} (nil))

(insn 29 37 38 4 arch/arm/kernel/bios32.c:673 (set (reg:SI 14 lr [orig:136 D.18880 ] [136])
        (and:SI (reg:SI 14 lr [orig:152 <variable>.vm_page_prot ] [152])
            (const_int -61 [0xffffffffffffffc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 29 30 4 arch/arm/kernel/bios32.c:675 (set (reg:SI 3 r3)
        (minus:SI (reg:SI 3 r3 [orig:154 <variable>.vm_end ] [154])
            (reg:SI 1 r1))) 28 {*arm_subsi3_insn} (nil))

(insn 30 38 34 4 arch/arm/kernel/bios32.c:673 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 12 ip [orig:141 vma ] [141])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (reg:SI 14 lr [orig:136 D.18880 ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 34 30 39 4 arch/arm/kernel/bios32.c:675 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 14 lr [orig:136 D.18880 ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 34 41 4 arch/arm/kernel/bios32.c:675 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("remap_pfn_range") [flags 0x41] <function_decl 0x1112fe80 remap_pfn_range>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 41 39 67 4 arch/arm/kernel/bios32.c:675 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [orig:134 D.18884 ] [134])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(insn 67 41 50 4 arch/arm/kernel/bios32.c:680 (set (reg:SI 0 r0 [orig:137 D.18874 ] [137])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 0 r0 [orig:134 D.18884 ] [134])
            (const_int -11 [0xfffffffffffffff5]))) 240 {*movsicc_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 50 67 51 5 52 "" [1 uses])

(note 51 50 62 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 62 51 70 5 arch/arm/kernel/bios32.c:681 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 70 62 71 NOTE_INSN_DELETED)

(note 71 70 0 NOTE_INSN_DELETED)


;; Function pcibios_map_irq (pcibios_map_irq)[0:1060]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a5 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 56(l0): point = 0
   Insn 50(l0): point = 2
   Insn 43(l0): point = 5
   Insn 38(l0): point = 7
   Insn 39(l0): point = 9
   Insn 42(l0): point = 11
   Insn 41(l0): point = 13
   Insn 40(l0): point = 15
   Insn 34(l0): point = 18
   Insn 32(l0): point = 21
   Insn 31(l0): point = 23
   Insn 30(l0): point = 25
   Insn 28(l0): point = 28
   Insn 27(l0): point = 30
   Insn 26(l0): point = 32
   Insn 25(l0): point = 34
   Insn 22(l0): point = 37
   Insn 21(l0): point = 39
   Insn 60(l0): point = 42
   Insn 13(l0): point = 44
   Insn 11(l0): point = 47
   Insn 10(l0): point = 49
   Insn 9(l0): point = 51
   Insn 8(l0): point = 53
   Insn 4(l0): point = 55
   Insn 3(l0): point = 57
   Insn 2(l0): point = 59
 a0(r134): [42..44] [3..37]
 a1(r139): [12..55]
 a2(r138): [14..57]
 a3(r133): [21..25] [16..18]
 a4(r137): [19..59]
 a5(r142): [31..32]
 a6(r141): [33..34]
 a7(r135): [47..51] [40..41]
 a8(r140): [52..53]
Compressing live ranges: from 62 to 24 - 38%
Ranges after the compression:
 a0(r134): [15..16] [0..12]
 a1(r139): [1..21]
 a2(r138): [2..22]
 a3(r133): [6..7] [3..4]
 a4(r137): [5..23]
 a5(r142): [8..9]
 a6(r141): [10..11]
 a7(r135): [17..18] [13..14]
 a8(r140): [19..20]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r134,l0) conflicts: a1(r139,l0) a2(r138,l0) a3(r133,l0) a4(r137,l0) a5(r142,l0) a6(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r139,l0) conflicts: a0(r134,l0) a2(r138,l0) a3(r133,l0) a4(r137,l0) a5(r142,l0) a6(r141,l0) a7(r135,l0) a8(r140,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r138,l0) conflicts: a0(r134,l0) a1(r139,l0) a3(r133,l0) a4(r137,l0) a5(r142,l0) a6(r141,l0) a7(r135,l0) a8(r140,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r133,l0) conflicts: a0(r134,l0) a1(r139,l0) a2(r138,l0) a4(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r137,l0) conflicts: a0(r134,l0) a1(r139,l0) a2(r138,l0) a3(r133,l0) a5(r142,l0) a6(r141,l0) a7(r135,l0) a8(r140,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a5(r142,l0) conflicts: a0(r134,l0) a1(r139,l0) a2(r138,l0) a4(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r141,l0) conflicts: a0(r134,l0) a1(r139,l0) a2(r138,l0) a4(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r135,l0) conflicts: a1(r139,l0) a2(r138,l0) a4(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a8(r140,l0) conflicts: a1(r139,l0) a2(r138,l0) a4(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14

  regions=1, blocks=10, points=24
    allocnos=9, copies=0, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r134 1r139 2r138 3r133 4r137 5r142 6r141 7r135 8r140
    modified regnos: 133 134 135 137 138 139 140 141 142
    border:
    Pressure: GENERAL_REGS=8
    Reg 134 of GENERAL_REGS has 5 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 4 regs less
      Pushing a3(r133,l0)
      Pushing a6(r141,l0)
      Pushing a5(r142,l0)
      Pushing a8(r140,l0)
      Pushing a2(r138,l0)
      Pushing a1(r139,l0)
      Pushing a7(r135,l0)
      Pushing a4(r137,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 4
      Popping a4(r137,l0)  -- assign reg 5
      Popping a7(r135,l0)  -- assign reg 12
      Popping a1(r139,l0)  -- assign reg 6
      Popping a2(r138,l0)  -- assign reg 7
      Popping a8(r140,l0)  -- assign reg 3
      Popping a5(r142,l0)  -- assign reg 3
      Popping a6(r141,l0)  -- assign reg 3
      Popping a3(r133,l0)  -- assign reg 1
Disposition:
    3:r133 l0     1    0:r134 l0     4    7:r135 l0    12    4:r137 l0     5
    2:r138 l0     7    1:r139 l0     6    8:r140 l0     3    6:r141 l0     3
    5:r142 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 0, 1, 2, 13, 14, dead_or_set: 137
insn=3, live_throughout: 0, 1, 2, 13, 14, 137, dead_or_set: 138
insn=4, live_throughout: 0, 1, 2, 13, 14, 137, 138, dead_or_set: 139
insn=8, live_throughout: 0, 1, 2, 13, 14, 137, 138, 139, dead_or_set: 140
insn=9, live_throughout: 0, 1, 2, 13, 14, 137, 138, 139, dead_or_set: 135, 140
insn=10, live_throughout: 0, 1, 2, 13, 14, 135, 137, 138, 139, dead_or_set: 
insn=11, live_throughout: 0, 1, 2, 13, 14, 135, 137, 138, 139, dead_or_set: 
insn=13, live_throughout: 13, 14, 137, 138, 139, dead_or_set: 134
insn=60, live_throughout: 13, 14, 134, 137, 138, 139, dead_or_set: 
insn=16, live_throughout: 0, 1, 2, 13, 135, 137, 138, 139, dead_or_set: 
insn=21, live_throughout: 13, 137, 138, 139, dead_or_set: 0, 1, 2, 14, 135
insn=22, live_throughout: 13, 14, 137, 138, 139, dead_or_set: 0, 134
insn=23, live_throughout: 13, 14, 134, 137, 138, 139, dead_or_set: 
insn=25, live_throughout: 13, 14, 134, 137, 138, 139, dead_or_set: 141
insn=26, live_throughout: 13, 14, 134, 137, 138, 139, dead_or_set: 141, 142
insn=27, live_throughout: 13, 14, 134, 137, 138, 139, dead_or_set: 142
insn=28, live_throughout: 13, 14, 134, 137, 138, 139, dead_or_set: 
insn=30, live_throughout: 13, 134, 137, 138, 139, dead_or_set: 133
insn=31, live_throughout: 13, 133, 134, 137, 138, 139, dead_or_set: 
insn=32, live_throughout: 13, 133, 134, 137, 138, 139, dead_or_set: 
insn=34, live_throughout: 13, 134, 138, 139, dead_or_set: 133, 137
insn=35, live_throughout: 13, 133, 134, 138, 139, dead_or_set: 
insn=40, live_throughout: 13, 134, 138, 139, dead_or_set: 1, 133
insn=41, live_throughout: 1, 13, 134, 139, dead_or_set: 2, 138
insn=42, live_throughout: 1, 2, 13, 134, dead_or_set: 3, 139
insn=39, live_throughout: 1, 2, 3, 13, 134, dead_or_set: 0
insn=38, live_throughout: 0, 1, 2, 3, 13, 134, dead_or_set: 
insn=43, live_throughout: 13, 134, dead_or_set: 0, 1, 2, 3, 14
insn=44, live_throughout: 13, 14, 134, dead_or_set: 
insn=50, live_throughout: 13, 14, dead_or_set: 0, 134
insn=56, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 25 (nil))
changing reg in insn 34
changing reg in insn 30
changing reg in insn 40
changing reg in insn 31
changing reg in insn 22
changing reg in insn 13
changing reg in insn 50
changing reg in insn 38
changing reg in insn 9
changing reg in insn 21
changing reg in insn 10
changing reg in insn 2
changing reg in insn 34
changing reg in insn 30
changing reg in insn 8
changing reg in insn 8
changing reg in insn 3
changing reg in insn 41
changing reg in insn 4
changing reg in insn 42
changing reg in insn 8
changing reg in insn 9
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
Spilling for insn 38.

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 40.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 21.
deleting insn with uid = 21.
verify found no changes in insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 18 (  1.8)


pcibios_map_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,4u} r2={4d,3u} r3={7d,4u} r4={2d,2u} r5={1d,3u,1d} r6={1d,1u} r7={1d,1u} r12={4d,2u} r13={1d,12u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 302{259d,42u,1e} in 26{24 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 5 3 2 arch/arm/kernel/bios32.c:480 (set (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/bios32.c:480 (set (reg/v:SI 7 r7 [orig:138 slot ] [138])
        (reg:SI 1 r1 [ slot ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 8 2 arch/arm/kernel/bios32.c:480 (set (reg/v:SI 6 r6 [orig:139 pin ] [139])
        (reg:SI 2 r2 [ pin ])) 167 {*arm_movsi_insn} (nil))

(insn 8 4 9 2 arch/arm/kernel/bios32.c:484 (set (reg/f:SI 3 r3 [orig:140 <variable>.sysdata ] [140])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/bios32.c:484 (set (reg/f:SI 12 ip [orig:135 D.18723 ] [135])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 <variable>.sysdata ] [140])
                (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/bios32.c:484 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 12 ip [orig:135 D.18723 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/kernel/bios32.c:484 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6983 [0x1b47])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [69.8%] 
;; Succ edge  3 [30.2%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  2 [30.2%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 60 3 arch/arm/kernel/bios32.c:482 (set (reg/v:SI 4 r4 [orig:134 irq ] [134])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(jump_insn 60 13 61 3 (set (pc)
        (label_ref 23)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 61 60 16)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [69.8%] 
(code_label 16 61 17 4 56 "" [1 uses])

(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 21 17 22 4 arch/arm/kernel/bios32.c:485 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 12 ip [orig:135 D.18723 ] [135]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 21 23 4 arch/arm/kernel/bios32.c:485 (set (reg/v:SI 4 r4 [orig:134 irq ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 23 22 24 5 57 "" [1 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/kernel/bios32.c:487 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 26 25 27 5 arch/arm/kernel/bios32.c:487 (set (reg:SI 3 r3 [orig:142 debug_pci ] [142])
        (mem/c/i:SI (reg/f:SI 3 r3 [141]) [0 debug_pci+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_pci+0 S4 A32])
        (nil)))

(insn 27 26 28 5 arch/arm/kernel/bios32.c:487 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:142 debug_pci ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 5 arch/arm/kernel/bios32.c:487 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  5 [0.0%]  (fallthru)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 6 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:133 D.19046 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 6 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:133 D.19046 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 6 include/linux/device.h:620 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [85.0%] 
;; Succ edge  7 [15.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  6 [15.0%]  (fallthru)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 7 include/linux/kobject.h:82 (set (reg/f:SI 1 r1 [orig:133 D.19046 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:137 dev ] [137])
                (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  6 [85.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 35 34 36 8 59 "" [1 uses])

(note 36 35 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 36 42 8 arch/arm/kernel/bios32.c:488 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:138 slot ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 39 8 arch/arm/kernel/bios32.c:488 (set (reg:SI 3 r3)
        (reg/v:SI 6 r6 [orig:139 pin ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 39 42 38 8 arch/arm/kernel/bios32.c:488 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1138f690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1138f690>)
        (nil)))

(insn 38 39 43 8 arch/arm/kernel/bios32.c:488 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 4 r4 [orig:134 irq ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 38 44 8 arch/arm/kernel/bios32.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 44 43 45 9 58 "" [1 uses])

(note 45 44 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 9 arch/arm/kernel/bios32.c:492 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:134 irq ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 56 50 62 9 arch/arm/kernel/bios32.c:492 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 56 63 NOTE_INSN_DELETED)

(note 63 62 0 NOTE_INSN_DELETED)


;; Function pcibios_swizzle (pcibios_swizzle)[0:1059] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a6(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a6(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 60(l0): point = 0
   Insn 54(l0): point = 2
   Insn 45(l0): point = 5
   Insn 40(l0): point = 7
   Insn 44(l0): point = 9
   Insn 41(l0): point = 11
   Insn 43(l0): point = 13
   Insn 42(l0): point = 15
   Insn 39(l0): point = 17
   Insn 35(l0): point = 20
   Insn 33(l0): point = 23
   Insn 32(l0): point = 25
   Insn 31(l0): point = 27
   Insn 29(l0): point = 30
   Insn 28(l0): point = 32
   Insn 27(l0): point = 34
   Insn 26(l0): point = 36
   Insn 21(l0): point = 39
   Insn 20(l0): point = 41
   Insn 64(l0): point = 44
   Insn 13(l0): point = 46
   Insn 11(l0): point = 49
   Insn 10(l0): point = 51
   Insn 9(l0): point = 53
   Insn 7(l0): point = 55
   Insn 8(l0): point = 57
   Insn 3(l0): point = 59
   Insn 2(l0): point = 61
 a0(r134): [44..46] [3..39]
 a1(r146): [10..17]
 a2(r137): [14..55]
 a3(r133): [23..27] [16..20]
 a4(r140): [18..59]
 a5(r139): [21..61]
 a6(r144): [33..34]
 a7(r143): [35..36]
 a8(r136): [47..53] [42..43]
 a9(r141): [54..57]
Compressing live ranges: from 64 to 26 - 40%
Ranges after the compression:
 a0(r134): [17..18] [0..14]
 a1(r146): [1..4]
 a2(r137): [2..22]
 a3(r133): [8..9] [3..6]
 a4(r140): [5..24]
 a5(r139): [7..25]
 a6(r144): [10..11]
 a7(r143): [12..13]
 a8(r136): [19..20] [15..16]
 a9(r141): [21..23]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r134,l0) conflicts: a1(r146,l0) a2(r137,l0) a3(r133,l0) a4(r140,l0) a5(r139,l0) a6(r144,l0) a7(r143,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r146,l0) conflicts: a0(r134,l0) a2(r137,l0) a3(r133,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a2(r137,l0) conflicts: a0(r134,l0) a1(r146,l0) a3(r133,l0) a4(r140,l0) a5(r139,l0) a6(r144,l0) a7(r143,l0) a8(r136,l0) a9(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r133,l0) conflicts: a0(r134,l0) a1(r146,l0) a2(r137,l0) a4(r140,l0) a5(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r140,l0) conflicts: a0(r134,l0) a2(r137,l0) a3(r133,l0) a5(r139,l0) a6(r144,l0) a7(r143,l0) a8(r136,l0) a9(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r139,l0) conflicts: a0(r134,l0) a2(r137,l0) a3(r133,l0) a4(r140,l0) a6(r144,l0) a7(r143,l0) a8(r136,l0) a9(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a6(r144,l0) conflicts: a0(r134,l0) a2(r137,l0) a4(r140,l0) a5(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r143,l0) conflicts: a0(r134,l0) a2(r137,l0) a4(r140,l0) a5(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r136,l0) conflicts: a2(r137,l0) a4(r140,l0) a5(r139,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a9(r141,l0) conflicts: a2(r137,l0) a4(r140,l0) a5(r139,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a0(r134)<->a8(r136)@1000:move
  regions=1, blocks=10, points=26
    allocnos=10, copies=1, conflicts=0, ranges=13

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r134 1r146 2r137 3r133 4r140 5r139 6r144 7r143 8r136 9r141
    modified regnos: 133 134 136 137 139 140 141 143 144 146
    border:
    Pressure: GENERAL_REGS=7
    Reg 134 of GENERAL_REGS has 5 regs less
    Reg 146 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
      Pushing a3(r133,l0)
      Pushing a7(r143,l0)
      Pushing a6(r144,l0)
      Pushing a9(r141,l0)
      Pushing a2(r137,l0)
      Pushing a1(r146,l0)
      Pushing a4(r140,l0)
      Pushing a8(r136,l0)
      Pushing a5(r139,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 4
      Popping a5(r139,l0)  -- assign reg 5
      Popping a8(r136,l0)  -- assign reg 4
      Popping a4(r140,l0)  -- assign reg 6
      Popping a1(r146,l0)  -- assign reg 3
      Popping a2(r137,l0)  -- assign reg 7
      Popping a9(r141,l0)  -- assign reg 3
      Popping a6(r144,l0)  -- assign reg 3
      Popping a7(r143,l0)  -- assign reg 3
      Popping a3(r133,l0)  -- assign reg 1
Disposition:
    3:r133 l0     1    0:r134 l0     4    8:r136 l0     4    2:r137 l0     7
    5:r139 l0     5    4:r140 l0     6    9:r141 l0     3    7:r143 l0     3
    6:r144 l0     3    1:r146 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 0, 1, 13, 14, dead_or_set: 139
insn=3, live_throughout: 0, 1, 13, 14, 139, dead_or_set: 140
insn=8, live_throughout: 0, 1, 13, 14, 139, 140, dead_or_set: 141
insn=7, live_throughout: 0, 1, 13, 14, 139, 140, 141, dead_or_set: 137
insn=9, live_throughout: 0, 1, 13, 14, 137, 139, 140, dead_or_set: 136, 141
insn=10, live_throughout: 0, 1, 13, 14, 136, 137, 139, 140, dead_or_set: 
insn=11, live_throughout: 0, 1, 13, 14, 136, 137, 139, 140, dead_or_set: 
insn=13, live_throughout: 13, 14, 137, 139, 140, dead_or_set: 134, 136
insn=64, live_throughout: 13, 14, 134, 137, 139, 140, dead_or_set: 
insn=16, live_throughout: 0, 1, 13, 136, 137, 139, 140, dead_or_set: 
insn=20, live_throughout: 13, 137, 139, 140, dead_or_set: 0, 1, 14, 136
insn=21, live_throughout: 13, 14, 137, 139, 140, dead_or_set: 0, 134
insn=24, live_throughout: 13, 14, 134, 137, 139, 140, dead_or_set: 
insn=26, live_throughout: 13, 14, 134, 137, 139, 140, dead_or_set: 143
insn=27, live_throughout: 13, 14, 134, 137, 139, 140, dead_or_set: 143, 144
insn=28, live_throughout: 13, 14, 134, 137, 139, 140, dead_or_set: 144
insn=29, live_throughout: 13, 14, 134, 137, 139, 140, dead_or_set: 
insn=31, live_throughout: 13, 134, 137, 139, 140, dead_or_set: 133
insn=32, live_throughout: 13, 133, 134, 137, 139, 140, dead_or_set: 
insn=33, live_throughout: 13, 133, 134, 137, 139, 140, dead_or_set: 
insn=35, live_throughout: 13, 134, 137, 140, dead_or_set: 133, 139
insn=36, live_throughout: 13, 133, 134, 137, 140, dead_or_set: 
insn=39, live_throughout: 13, 133, 134, 137, dead_or_set: 140, 146
insn=42, live_throughout: 13, 134, 137, 146, dead_or_set: 1, 133
insn=43, live_throughout: 1, 13, 134, 146, dead_or_set: 2, 137
insn=41, live_throughout: 1, 2, 13, 134, 146, dead_or_set: 0
insn=44, live_throughout: 0, 1, 2, 13, 134, dead_or_set: 3, 146
insn=40, live_throughout: 0, 1, 2, 3, 13, 134, dead_or_set: 
insn=45, live_throughout: 13, 134, dead_or_set: 0, 1, 2, 3, 14
insn=46, live_throughout: 13, 14, 134, dead_or_set: 
insn=54, live_throughout: 13, 14, dead_or_set: 0, 134
insn=60, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 141: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 26 (nil))
changing reg in insn 35
changing reg in insn 31
changing reg in insn 42
changing reg in insn 32
changing reg in insn 21
changing reg in insn 13
changing reg in insn 40
changing reg in insn 9
changing reg in insn 13
changing reg in insn 20
changing reg in insn 10
changing reg in insn 7
changing reg in insn 43
changing reg in insn 2
changing reg in insn 35
changing reg in insn 31
changing reg in insn 8
changing reg in insn 8
changing reg in insn 3
changing reg in insn 39
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 39
changing reg in insn 44
Spilling for insn 40.

Reloads for insn # 40
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 13.
deleting insn with uid = 42.
deleting insn with uid = 44.


try_optimize_cfg iteration 1

Simplifying condjump 11 around jump 64
deleting insn with uid = 12.
deleting insn with uid = 64.
deleting insn with uid = 65.
deleting block 3
deleting insn with uid = 16.
Deleted label in block 4.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 20.
deleting insn with uid = 20.
verify found no changes in insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 15 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


pcibios_swizzle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,4u} r2={4d,1u} r3={7d,4u} r4={2d,4u} r5={1d,3u,1d} r6={1d,2u} r7={1d,1u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 299{258d,40u,1e} in 24{22 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/bios32.c:462 (set (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 8 2 arch/arm/kernel/bios32.c:462 (set (reg/v/f:SI 6 r6 [orig:140 pin ] [140])
        (reg:SI 1 r1 [ pin ])) 167 {*arm_movsi_insn} (nil))

(insn 8 3 7 2 arch/arm/kernel/bios32.c:466 (set (reg/f:SI 3 r3 [orig:141 <variable>.sysdata ] [141])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
                (const_int 16 [0x10])) [0 <variable>.sysdata+0 S4 A64])
        (nil)))

(insn 7 8 9 2 arch/arm/kernel/bios32.c:464 (set (reg:SI 7 r7 [orig:137 D.18704 ] [137])
        (zero_extend:SI (mem:QI (reg/v/f:SI 6 r6 [orig:140 pin ] [140]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 9 7 10 2 arch/arm/kernel/bios32.c:466 (set (reg/f:SI 4 r4 [orig:136 D.18705 ] [136])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:141 <variable>.sysdata ] [141])
                (const_int 44 [0x2c])) [0 <variable>.swizzle+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/bios32.c:466 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 4 r4 [orig:136 D.18705 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 17 2 arch/arm/kernel/bios32.c:466 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 2 -> ( 4 5)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [69.8%]  (fallthru)
(note 17 11 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 20 17 21 4 arch/arm/kernel/bios32.c:467 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 4 r4 [orig:136 D.18705 ] [136]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 21 20 24 4 arch/arm/kernel/bios32.c:467 (set (reg/v:SI 4 r4 [orig:134 slot ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  2 [30.2%] 
(code_label 24 21 25 5 65 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 arch/arm/kernel/bios32.c:469 (set (reg/f:SI 3 r3 [143])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 27 26 28 5 arch/arm/kernel/bios32.c:469 (set (reg:SI 3 r3 [orig:144 debug_pci ] [144])
        (mem/c/i:SI (reg/f:SI 3 r3 [143]) [0 debug_pci+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_pci+0 S4 A32])
        (nil)))

(insn 28 27 29 5 arch/arm/kernel/bios32.c:469 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:144 debug_pci ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 5 arch/arm/kernel/bios32.c:469 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  5 [0.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:133 D.19052 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:133 D.19052 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 33 32 34 6 include/linux/device.h:620 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [85.0%] 
;; Succ edge  7 [15.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  6 [15.0%]  (fallthru)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 include/linux/kobject.h:82 (set (reg/f:SI 1 r1 [orig:133 D.19052 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 dev ] [139])
                (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  6 [85.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 36 35 37 8 67 "" [1 uses])

(note 37 36 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 37 43 8 arch/arm/kernel/bios32.c:470 (set (reg:SI 3 r3 [146])
        (zero_extend:SI (mem:QI (reg/v/f:SI 6 r6 [orig:140 pin ] [140]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 43 39 41 8 arch/arm/kernel/bios32.c:470 (set (reg:SI 2 r2)
        (reg:SI 7 r7 [orig:137 D.18704 ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 41 43 40 8 arch/arm/kernel/bios32.c:470 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1138f820>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1138f820>)
        (nil)))

(insn 40 41 45 8 arch/arm/kernel/bios32.c:470 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 4 r4 [orig:134 slot ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 40 46 8 arch/arm/kernel/bios32.c:470 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 46 45 47 9 66 "" [1 uses])

(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 48 47 49 9 NOTE_INSN_DELETED)

(note 49 48 54 9 NOTE_INSN_DELETED)

(insn 54 49 60 9 arch/arm/kernel/bios32.c:474 (set (reg/i:SI 0 r0)
        (zero_extend:SI (reg:QI 4 r4 [orig:134 slot ] [134]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 60 54 66 9 arch/arm/kernel/bios32.c:474 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 66 60 67 NOTE_INSN_DELETED)

(note 67 66 0 NOTE_INSN_DELETED)


;; Function pcibios_update_irq (pcibios_update_irq)[0:1052] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 40.
verify found no changes in insn with uid = 40.
deleting insn with uid = 7.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 31(l0): point = 0
   Insn 29(l0): point = 2
   Insn 27(l0): point = 4
   Insn 30(l0): point = 6
   Insn 28(l0): point = 8
   Insn 23(l0): point = 11
   Insn 21(l0): point = 13
   Insn 20(l0): point = 15
   Insn 22(l0): point = 17
   Insn 16(l0): point = 20
   Insn 14(l0): point = 23
   Insn 13(l0): point = 25
   Insn 12(l0): point = 27
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 40(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r134): [5..40]
 a1(r135): [7..38]
 a2(r133): [23..27] [18..20]
 a3(r137): [33..34]
 a4(r136): [35..36]
Compressing live ranges: from 43 to 12 - 27%
Ranges after the compression:
 a0(r134): [0..11]
 a1(r135): [1..10]
 a2(r133): [4..5] [2..3]
 a3(r137): [6..7]
 a4(r136): [8..9]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r134,l0) conflicts: a1(r135,l0) a2(r133,l0) a3(r137,l0) a4(r136,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r135,l0) conflicts: a0(r134,l0) a2(r133,l0) a3(r137,l0) a4(r136,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r133,l0) conflicts: a0(r134,l0) a1(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r137,l0) conflicts: a0(r134,l0) a1(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r136,l0) conflicts: a0(r134,l0) a1(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=7, points=12
    allocnos=5, copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r134 1r135 2r133 3r137 4r136
    modified regnos: 133 134 135 136 137
    border:
    Pressure: GENERAL_REGS=6
    Reg 134 of GENERAL_REGS has 5 regs less
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a2(r133,l0)
      Pushing a4(r136,l0)
      Pushing a3(r137,l0)
      Pushing a1(r135,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 4
      Popping a1(r135,l0)  -- assign reg 5
      Popping a3(r137,l0)  -- assign reg 3
      Popping a4(r136,l0)  -- assign reg 3
      Popping a2(r133,l0)  -- assign reg 2
Disposition:
    2:r133 l0     2    0:r134 l0     4    1:r135 l0     5    4:r136 l0     3
    3:r137 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 134
insn=3, live_throughout: 13, 14, 134, dead_or_set: 1, 135
insn=40, live_throughout: 13, 14, 134, 135, dead_or_set: 136
insn=8, live_throughout: 13, 14, 134, 135, dead_or_set: 136, 137
insn=9, live_throughout: 13, 14, 134, 135, dead_or_set: 137
insn=10, live_throughout: 13, 14, 134, 135, dead_or_set: 
insn=12, live_throughout: 13, 134, 135, dead_or_set: 133
insn=13, live_throughout: 13, 133, 134, 135, dead_or_set: 
insn=14, live_throughout: 13, 133, 134, 135, dead_or_set: 
insn=16, live_throughout: 13, 134, 135, dead_or_set: 133
insn=17, live_throughout: 13, 133, 134, 135, dead_or_set: 
insn=22, live_throughout: 13, 134, 135, dead_or_set: 2, 133
insn=20, live_throughout: 2, 13, 134, 135, dead_or_set: 0
insn=21, live_throughout: 0, 2, 13, 134, 135, dead_or_set: 1
insn=23, live_throughout: 13, 134, 135, dead_or_set: 0, 1, 2, 14
insn=24, live_throughout: 13, 14, 134, 135, dead_or_set: 
insn=28, live_throughout: 13, 14, 134, 135, dead_or_set: 1
insn=30, live_throughout: 1, 13, 14, 134, dead_or_set: 3, 135
insn=27, live_throughout: 1, 3, 13, 14, dead_or_set: 0, 134
insn=29, live_throughout: 0, 1, 3, 13, 14, dead_or_set: 2
insn=31, live_throughout: 13, 14, dead_or_set: 0, 1, 2, 3
init_insns for 136: (insn_list:REG_DEP_TRUE 40 (nil))
changing reg in insn 16
changing reg in insn 12
changing reg in insn 22
changing reg in insn 13
changing reg in insn 2
changing reg in insn 28
changing reg in insn 27
changing reg in insn 16
changing reg in insn 12
changing reg in insn 3
changing reg in insn 21
changing reg in insn 40
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
deleting insn with uid = 22.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


pcibios_update_irq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={6d,3u} r3={6d,3u} r4={1d,4u} r5={1d,2u} r12={3d} r13={1d,8u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 283{254d,29u,0e} in 18{16 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/bios32.c:277 (set (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 40 2 arch/arm/kernel/bios32.c:277 (set (reg/v:SI 5 r5 [orig:135 irq ] [135])
        (reg:SI 1 r1 [ irq ])) 167 {*arm_movsi_insn} (nil))

(insn 40 3 8 2 arch/arm/kernel/bios32.c:278 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 40 9 2 arch/arm/kernel/bios32.c:278 (set (reg:SI 3 r3 [orig:137 debug_pci ] [137])
        (mem/c/i:SI (reg/f:SI 3 r3 [136]) [0 debug_pci+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_pci+0 S4 A32])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/bios32.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:137 debug_pci ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/bios32.c:278 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 include/linux/device.h:620 (set (reg/f:SI 2 r2 [orig:133 D.19058 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:133 D.19058 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 3 include/linux/device.h:620 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [85.0%] 
;; Succ edge  4 [15.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  3 [15.0%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 include/linux/kobject.h:82 (set (reg/f:SI 2 r2 [orig:133 D.19058 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
                (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 2 [r2] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [85.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 17 16 18 5 73 "" [1 uses])

(note 18 17 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 18 21 5 arch/arm/kernel/bios32.c:279 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x113f96c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x113f96c0>)
        (nil)))

(insn 21 20 23 5 arch/arm/kernel/bios32.c:279 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:135 irq ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 23 21 24 5 arch/arm/kernel/bios32.c:279 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 24 23 25 6 72 "" [1 uses])

(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 26 25 28 6 NOTE_INSN_DELETED)

(insn 28 26 30 6 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 28 27 6 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (zero_extend:SI (reg:QI 5 r5 [orig:135 irq ] [135]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 27 30 29 6 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 29 27 31 6 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 60 [0x3c])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 31 29 32 6 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 32 31 41)

(note 41 32 0 NOTE_INSN_DELETED)


;; Function pcibios_enable_device (pcibios_enable_device)[0:1065]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 38 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 53 (  2.4)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a5 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r159,l1) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r158,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r156,l1) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r154,l1) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r153,l1) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r145,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a13(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a15(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r156,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a13(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a15(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r156,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 127(l0): point = 0
   Insn 121(l0): point = 2
   Insn 114(l0): point = 5
   Insn 113(l0): point = 7
   Insn 112(l0): point = 9
   Insn 111(l0): point = 11
   Insn 109(l0): point = 13
   Insn 110(l0): point = 15
   Insn 107(l0): point = 17
   Insn 103(l0): point = 19
   Insn 106(l0): point = 21
   Insn 105(l0): point = 23
   Insn 104(l0): point = 25
   Insn 99(l0): point = 28
   Insn 97(l0): point = 31
   Insn 96(l0): point = 33
   Insn 95(l0): point = 35
   Insn 135(l0): point = 38
   Insn 90(l0): point = 40
   Insn 88(l0): point = 43
   Insn 87(l0): point = 45
   Insn 86(l0): point = 47
   Insn 83(l0): point = 50
   Insn 82(l0): point = 52
   Insn 80(l0): point = 54
   Insn 78(l0): point = 57
   Insn 77(l0): point = 59
   Insn 76(l0): point = 61
   Insn 133(l0): point = 64
   Insn 42(l0): point = 66
   Insn 41(l0): point = 68
   Insn 39(l0): point = 70
   Insn 40(l0): point = 72
   Insn 35(l0): point = 75
   Insn 33(l0): point = 78
   Insn 32(l0): point = 80
   Insn 31(l0): point = 82
   Insn 16(l0): point = 85
   Insn 15(l0): point = 87
   Insn 14(l0): point = 89
   Insn 13(l0): point = 91
   Insn 10(l0): point = 93
   Insn 9(l0): point = 95
   Insn 12(l0): point = 97
   Insn 11(l0): point = 99
   Insn 4(l0): point = 101
   Insn 3(l0): point = 103
   Insn 73(l1): point = 106
   Insn 70(l1): point = 108
   Insn 72(l1): point = 110
   Insn 66(l1): point = 113
   Insn 65(l1): point = 115
   Insn 63(l1): point = 117
   Insn 61(l1): point = 120
   Insn 60(l1): point = 122
   Insn 58(l1): point = 124
   Insn 55(l1): point = 127
   Insn 54(l1): point = 129
   Insn 52(l1): point = 131
   Insn 50(l1): point = 134
   Insn 49(l1): point = 136
   Insn 47(l1): point = 138
   Insn 29(l1): point = 141
   Insn 28(l1): point = 143
   Insn 27(l1): point = 145
   Insn 25(l1): point = 148
   Insn 24(l1): point = 150
   Insn 23(l1): point = 152
   Insn 21(l1): point = 155
   Insn 20(l1): point = 157
   Insn 69(l1): point = 159
   Insn 18(l1): point = 161
 a0(r140): [64..66] [38..40] [3..5]
 a1(r142): [76..103] [43..63] [14..37]
 a2(r134): [43..47] [22..37]
 a3(r139): [85..89] [43..63] [24..37]
 a4(r136): [31..35] [26..28]
 a5(r164): [51..52]
 a6(r163): [53..54]
 a7(r160): [60..61]
 a8(r137): [78..82] [73..75]
 a9(r138): [85..85]
 a10(r135): [85..87]
 a11(r143): [85..101]
 a12(r135): [106..163]
 a13(r138): [106..163]
 a14(r139): [106..163]
 a15(r142): [106..163]
 a16(r143): [106..163]
 a17(r159): [114..115]
 a18(r158): [116..117]
 a19(r156): [123..124]
 a20(r154): [128..129]
 a21(r153): [130..131]
 a22(r151): [137..138]
 a23(r148): [144..145]
 a24(r147): [151..152]
 a25(r145): [158..161]
 Rebuilding regno allocno list for 159
 Rebuilding regno allocno list for 158
 Rebuilding regno allocno list for 156
 Rebuilding regno allocno list for 154
 Rebuilding regno allocno list for 153
 Rebuilding regno allocno list for 151
 Rebuilding regno allocno list for 148
 Rebuilding regno allocno list for 147
 Rebuilding regno allocno list for 145
Compressing live ranges: from 164 to 53 - 32%
Ranges after the compression:
 a0(r140): [21..22] [10..11] [0..1]
 a1(r142): [33..52] [25..32] [12..20] [2..9]
 a2(r134): [12..13] [3..9]
 a3(r139): [33..52] [28..30] [12..20] [4..9]
 a4(r136): [7..8] [5..6]
 a5(r164): [14..15]
 a6(r163): [16..17]
 a7(r160): [18..19]
 a8(r137): [26..27] [23..24]
 a9(r138): [33..52] [28..28]
 a10(r135): [33..52] [28..29]
 a11(r143): [33..52] [28..31]
 a17(r159): [34..35]
 a18(r158): [36..37]
 a19(r156): [38..39]
 a20(r154): [40..41]
 a21(r153): [42..43]
 a22(r151): [44..45]
 a23(r148): [46..47]
 a24(r147): [48..49]
 a25(r145): [50..51]
+++Allocating 168 bytes for conflict table (uncompressed size 208)
;; a0(r140,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r142,l0) conflicts: a2(r134,l0) a3(r139,l0) a4(r136,l0) a5(r164,l0) a6(r163,l0) a7(r160,l0) a8(r137,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0) a17(r159,l0) a18(r158,l0) a19(r156,l0) a20(r154,l0) a21(r153,l0) a22(r151,l0) a23(r148,l0) a24(r147,l0) a25(r145,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r134,l0) conflicts: a1(r142,l0) a3(r139,l0) a4(r136,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14
;; a3(r139,l0) conflicts: a1(r142,l0) a2(r134,l0) a4(r136,l0) a5(r164,l0) a6(r163,l0) a7(r160,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0) a17(r159,l0) a18(r158,l0) a19(r156,l0) a20(r154,l0) a21(r153,l0) a22(r151,l0) a23(r148,l0) a24(r147,l0) a25(r145,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a4(r136,l0) conflicts: a1(r142,l0) a2(r134,l0) a3(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r164,l0) conflicts: a1(r142,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r163,l0) conflicts: a1(r142,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r160,l0) conflicts: a1(r142,l0) a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r137,l0) conflicts: a1(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r138,l0) conflicts: a1(r142,l0) a3(r139,l0) a10(r135,l0) a11(r143,l0) a17(r159,l0) a18(r158,l0) a19(r156,l0) a20(r154,l0) a21(r153,l0) a22(r151,l0) a23(r148,l0) a24(r147,l0) a25(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r135,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a11(r143,l0) a17(r159,l0) a18(r158,l0) a19(r156,l0) a20(r154,l0) a21(r153,l0) a22(r151,l0) a23(r148,l0) a24(r147,l0) a25(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r143,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a17(r159,l0) a18(r158,l0) a19(r156,l0) a20(r154,l0) a21(r153,l0) a22(r151,l0) a23(r148,l0) a24(r147,l0) a25(r145,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a17(r159,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r158,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r156,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r154,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r153,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r151,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r148,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r147,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a25(r145,l0) conflicts: a1(r142,l0) a3(r139,l0) a9(r138,l0) a10(r135,l0) a11(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a5(r164)<->a6(r163)@125:shuffle
  cp1:a17(r159)<->a18(r158)@125:shuffle
  cp2:a20(r154)<->a21(r153)@125:shuffle
  regions=2, blocks=22, points=53
    allocnos=26, copies=3, conflicts=1, ranges=35

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 21 20 19 18 17 16 15 14 8 7 6 13 12 11 10 9 5 4 3 2
    all: 0r140 1r142 2r134 3r139 4r136 5r164 6r163 7r160 8r137 9r138 10r135 11r143 17r159 18r158 19r156 20r154 21r153 22r151 23r148 24r147 25r145
    modified regnos: 134 135 136 137 138 139 140 142 143 145 147 148 151 153 154 156 158 159 160 163 164
    border:
    Pressure: GENERAL_REGS=7
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 5 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 5 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
      Pushing a8(r137,l0)
      Pushing a4(r136,l0)
      Pushing a25(r145,l0)
      Pushing a24(r147,l0)
      Pushing a23(r148,l0)
      Pushing a22(r151,l0)
      Pushing a21(r153,l0)
      Pushing a20(r154,l0)
      Pushing a19(r156,l0)
      Pushing a18(r158,l0)
      Pushing a17(r159,l0)
      Pushing a7(r160,l0)
      Pushing a6(r163,l0)
      Pushing a5(r164,l0)
      Pushing a0(r140,l0)
      Pushing a9(r138,l0)
      Pushing a10(r135,l0)
      Pushing a3(r139,l0)
      Pushing a2(r134,l0)
      Pushing a11(r143,l0)
      Pushing a1(r142,l0)
      Popping a1(r142,l0)  -- assign reg 4
      Popping a11(r143,l0)  -- assign reg 5
      Popping a2(r134,l0)  -- assign reg 3
      Popping a3(r139,l0)  -- assign reg 2
      Popping a10(r135,l0)  -- assign reg 3
      Popping a9(r138,l0)  -- assign reg 1
      Popping a0(r140,l0)  -- assign reg 0
      Popping a5(r164,l0)  -- assign reg 3
      Popping a6(r163,l0)  -- assign reg 3
      Popping a7(r160,l0)  -- assign reg 3
      Popping a17(r159,l0)  -- assign reg 0
      Popping a18(r158,l0)  -- assign reg 0
      Popping a19(r156,l0)  -- assign reg 0
      Popping a20(r154,l0)  -- assign reg 0
      Popping a21(r153,l0)  -- assign reg 0
      Popping a22(r151,l0)  -- assign reg 0
      Popping a23(r148,l0)  -- assign reg 0
      Popping a24(r147,l0)  -- assign reg 0
      Popping a25(r145,l0)  -- assign reg 0
      Popping a4(r136,l0)  -- assign reg 1
      Popping a8(r137,l0)  -- assign reg 1
Disposition:
    2:r134 l0     3   10:r135 l0     3    4:r136 l0     1    8:r137 l0     1
    9:r138 l0     1    3:r139 l0     2    0:r140 l0     0    1:r142 l0     4
   11:r143 l0     5   25:r145 l0     0   24:r147 l0     0   23:r148 l0     0
   22:r151 l0     0   21:r153 l0     0   20:r154 l0     0   19:r156 l0     0
   18:r158 l0     0   17:r159 l0     0    7:r160 l0     3    6:r163 l0     3
    5:r164 l0     3
New iteration of spill/restore move
+++Costs: overall -20000, reg -20000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 1, 13, dead_or_set: 0, 142
insn=4, live_throughout: 13, 142, dead_or_set: 1, 143
insn=11, live_throughout: 13, 142, 143, dead_or_set: 2
insn=12, live_throughout: 2, 13, 142, 143, dead_or_set: 3
insn=9, live_throughout: 2, 3, 13, 142, 143, dead_or_set: 0
insn=10, live_throughout: 0, 2, 3, 13, 142, 143, dead_or_set: 1
insn=13, live_throughout: 13, 142, 143, dead_or_set: 0, 1, 2, 3, 14
insn=14, live_throughout: 13, 14, 142, 143, dead_or_set: 139
insn=15, live_throughout: 13, 14, 139, 142, 143, dead_or_set: 135
insn=16, live_throughout: 13, 14, 135, 139, 142, 143, dead_or_set: 138
insn=71, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=18, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 145
insn=69, live_throughout: 13, 14, 135, 139, 142, 143, 145, dead_or_set: 138
insn=20, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 145
insn=21, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=23, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 147
insn=24, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 147
insn=25, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=27, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 148
insn=28, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 148
insn=29, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=31, live_throughout: 13, 142, dead_or_set: 137
insn=32, live_throughout: 13, 137, 142, dead_or_set: 
insn=33, live_throughout: 13, 137, 142, dead_or_set: 
insn=35, live_throughout: 13, dead_or_set: 137, 142
insn=36, live_throughout: 13, 137, dead_or_set: 
insn=40, live_throughout: 13, dead_or_set: 1, 137
insn=39, live_throughout: 1, 13, dead_or_set: 0
insn=41, live_throughout: 13, dead_or_set: 0, 1, 14
insn=42, live_throughout: 13, 14, dead_or_set: 140
insn=133, live_throughout: 13, 14, 140, dead_or_set: 
insn=45, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=47, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 151
insn=49, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 151
insn=50, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=52, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 153
insn=54, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 153, 154
insn=55, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 154
insn=56, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=58, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 156
insn=60, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 156
insn=61, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=63, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 158
insn=65, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 158, 159
insn=66, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 159
insn=67, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=72, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=70, live_throughout: 13, 14, 24, 138, 139, 142, 143, dead_or_set: 135
insn=73, live_throughout: 13, 14, 135, 138, 139, 142, 143, dead_or_set: 
insn=76, live_throughout: 13, 14, 139, 142, dead_or_set: 160
insn=77, live_throughout: 13, 14, 139, 142, dead_or_set: 160
insn=78, live_throughout: 13, 14, 139, 142, dead_or_set: 
insn=80, live_throughout: 13, 14, 139, 142, dead_or_set: 163
insn=82, live_throughout: 13, 14, 139, 142, dead_or_set: 163, 164
insn=83, live_throughout: 13, 14, 139, 142, dead_or_set: 164
insn=84, live_throughout: 13, 14, 139, 142, dead_or_set: 
insn=86, live_throughout: 13, 14, 139, 142, dead_or_set: 134
insn=87, live_throughout: 13, 14, 134, 139, 142, dead_or_set: 
insn=88, live_throughout: 13, 14, 134, 139, 142, dead_or_set: 
insn=90, live_throughout: 13, 14, dead_or_set: 140
insn=135, live_throughout: 13, 14, 140, dead_or_set: 
insn=93, live_throughout: 13, 134, 139, 142, dead_or_set: 
insn=95, live_throughout: 13, 134, 139, 142, dead_or_set: 136
insn=96, live_throughout: 13, 134, 136, 139, 142, dead_or_set: 
insn=97, live_throughout: 13, 134, 136, 139, 142, dead_or_set: 
insn=99, live_throughout: 13, 134, 139, 142, dead_or_set: 136
insn=100, live_throughout: 13, 134, 136, 139, 142, dead_or_set: 
insn=104, live_throughout: 13, 134, 139, 142, dead_or_set: 1, 136
insn=105, live_throughout: 1, 13, 134, 142, dead_or_set: 2, 139
insn=106, live_throughout: 1, 2, 13, 142, dead_or_set: 3, 134
insn=103, live_throughout: 1, 2, 3, 13, 142, dead_or_set: 0
insn=107, live_throughout: 13, 142, dead_or_set: 0, 1, 2, 3, 14
insn=110, live_throughout: 13, 142, dead_or_set: 1
insn=109, live_throughout: 1, 13, dead_or_set: 0, 142
insn=111, live_throughout: 0, 1, 13, dead_or_set: 2
insn=112, live_throughout: 0, 1, 2, 13, dead_or_set: 3
insn=113, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=114, live_throughout: 13, 14, dead_or_set: 140
insn=115, live_throughout: 13, 14, 140, dead_or_set: 
insn=121, live_throughout: 13, 14, dead_or_set: 0, 140
insn=127, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 147: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 58 (nil))
changing reg in insn 86
changing reg in insn 106
changing reg in insn 87
changing reg in insn 70
changing reg in insn 15
changing reg in insn 70
changing reg in insn 58
changing reg in insn 47
changing reg in insn 27
changing reg in insn 23
changing reg in insn 58
changing reg in insn 47
changing reg in insn 27
changing reg in insn 23
changing reg in insn 99
changing reg in insn 95
changing reg in insn 104
changing reg in insn 96
changing reg in insn 35
changing reg in insn 31
changing reg in insn 40
changing reg in insn 32
changing reg in insn 69
changing reg in insn 16
changing reg in insn 72
changing reg in insn 69
changing reg in insn 18
changing reg in insn 14
changing reg in insn 105
changing reg in insn 87
changing reg in insn 114
changing reg in insn 90
changing reg in insn 42
changing reg in insn 121
changing reg in insn 3
changing reg in insn 76
changing reg in insn 110
changing reg in insn 109
changing reg in insn 99
changing reg in insn 95
changing reg in insn 35
changing reg in insn 31
changing reg in insn 15
changing reg in insn 10
changing reg in insn 9
changing reg in insn 4
changing reg in insn 18
changing reg in insn 18
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 27
changing reg in insn 28
changing reg in insn 47
changing reg in insn 49
changing reg in insn 52
changing reg in insn 54
changing reg in insn 54
changing reg in insn 58
changing reg in insn 60
changing reg in insn 63
changing reg in insn 65
changing reg in insn 65
changing reg in insn 76
changing reg in insn 77
changing reg in insn 80
changing reg in insn 82
changing reg in insn 82
Spilling for insn 55.
Spilling for insn 66.
Spilling for insn 83.

Reloads for insn # 55
Reload 0: reload_out (HI) = (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

Reloads for insn # 66
Reload 0: reload_out (HI) = (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

Reloads for insn # 83
Reload 0: reload_out (HI) = (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
deleting insn with uid = 40.
deleting insn with uid = 104.
deleting insn with uid = 105.
deleting insn with uid = 106.
deleting insn with uid = 121.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 41.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 113.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 38 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 31 count 53 (  2.4)


pcibios_enable_device

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,16u} r1={13d,10u} r2={8d,4u} r3={13d,12u,4d} r4={1d,10u} r5={1d,1u} r12={5d} r13={1d,35u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={14d,10u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 625{522d,99u,4e} in 67{63 regular + 4 call} insns.
(note 2 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 2 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 3 2 NOTE_INSN_DELETED)

(insn 3 8 4 2 arch/arm/kernel/bios32.c:620 (set (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 11 2 arch/arm/kernel/bios32.c:620 (set (reg/v:SI 5 r5 [orig:143 mask ] [143])
        (reg:SI 1 r1 [ mask ])) 167 {*arm_movsi_insn} (nil))

(insn 11 4 12 2 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 9 2 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (nil))

(insn 9 12 10 2 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 13 2 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 10 14 2 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 14 13 15 2 arch/arm/kernel/bios32.c:626 (set (reg/v:SI 2 r2 [orig:139 old_cmd ] [139])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 15 14 16 2 arch/arm/kernel/bios32.c:626 (set (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
        (reg/v/f:SI 4 r4 [orig:142 dev ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 71 2 arch/arm/kernel/bios32.c:627 (set (reg/v:SI 1 r1 [orig:138 idx ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 13 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  13 [83.3%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 71 16 17 3 83 "" [1 uses])

(note 17 71 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 19 17 18 3 NOTE_INSN_DELETED)

(insn 18 19 69 3 arch/arm/kernel/bios32.c:629 (set (reg:SI 0 r0 [145])
        (ashiftrt:SI (reg/v:SI 5 r5 [orig:143 mask ] [143])
            (reg/v:SI 1 r1 [orig:138 idx ] [138]))) 117 {*arm_shiftsi3} (nil))

(insn 69 18 20 3 arch/arm/kernel/bios32.c:627 (set (reg/v:SI 1 r1 [orig:138 idx ] [138])
        (plus:SI (reg/v:SI 1 r1 [orig:138 idx ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 20 69 21 3 arch/arm/kernel/bios32.c:629 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [145])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 21 20 22 3 arch/arm/kernel/bios32.c:629 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 13 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  13 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/kernel/bios32.c:633 (set (reg:SI 0 r0 [orig:147 <variable>.start ] [147])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/bios32.c:633 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:147 <variable>.start ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 4 arch/arm/kernel/bios32.c:633 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 9)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 5 arch/arm/kernel/bios32.c:633 discrim 1 (set (reg:SI 0 r0 [orig:148 <variable>.end ] [148])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 28 27 29 5 arch/arm/kernel/bios32.c:633 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:148 <variable>.end ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 5 arch/arm/kernel/bios32.c:633 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [0.0%]  (fallthru,loop_exit)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  5 [0.0%]  (fallthru,loop_exit)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:137 D.19078 ] [137])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:137 D.19078 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 33 32 34 6 include/linux/device.h:620 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  8 [85.0%] 
;; Succ edge  7 [15.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  6 [15.0%]  (fallthru)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 include/linux/kobject.h:82 (set (reg/f:SI 1 r1 [orig:137 D.19078 ] [137])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 1 [r1] 13 [sp]
;; live  out 	 1 [r1] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [85.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 36 35 37 8 80 "" [1 uses])

(note 37 36 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 37 41 8 arch/arm/kernel/bios32.c:634 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11068d80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11068d80>)
        (nil)))

(call_insn 41 39 42 8 arch/arm/kernel/bios32.c:634 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 42 41 133 8 arch/arm/kernel/bios32.c:636 (set (reg:SI 0 r0 [orig:140 D.18842 ] [140])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 133 42 134 8 arch/arm/kernel/bios32.c:636 (set (pc)
        (label_ref 115)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 134 133 45)

;; Start of basic block ( 4 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%] 
(code_label 45 134 46 9 79 "" [2 uses])

(note 46 45 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 48 46 47 9 NOTE_INSN_DELETED)

(insn 47 48 49 9 arch/arm/kernel/bios32.c:638 (set (reg:SI 0 r0 [orig:151 <variable>.flags ] [151])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (nil)))

(insn 49 47 50 9 arch/arm/kernel/bios32.c:638 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:151 <variable>.flags ] [151])
                (const_int 1 [0x1])
                (const_int 8 [0x8]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 50 49 51 9 arch/arm/kernel/bios32.c:638 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 54 10 arch/arm/kernel/bios32.c:639 (set (reg:SI 0 r0 [orig:153 cmd ] [153])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 54 52 55 10 arch/arm/kernel/bios32.c:639 (set (reg:SI 0 r0 [154])
        (ior:SI (reg:SI 0 r0 [orig:153 cmd ] [153])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 55 54 56 10 arch/arm/kernel/bios32.c:639 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 cmd+0 S2 A16])
        (reg:HI 0 r0 [154])) 176 {*movhi_insn_arch4} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 56 55 57 11 82 "" [1 uses])

(note 57 56 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 59 57 58 11 NOTE_INSN_DELETED)

(insn 58 59 60 11 arch/arm/kernel/bios32.c:640 (set (reg:SI 0 r0 [orig:156 <variable>.flags ] [156])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (nil)))

(insn 60 58 61 11 arch/arm/kernel/bios32.c:640 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 0 r0 [orig:156 <variable>.flags ] [156])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 61 60 62 11 arch/arm/kernel/bios32.c:640 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 65 12 arch/arm/kernel/bios32.c:641 (set (reg:SI 0 r0 [orig:158 cmd ] [158])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 65 63 66 12 arch/arm/kernel/bios32.c:641 (set (reg:SI 0 r0 [159])
        (ior:SI (reg:SI 0 r0 [orig:158 cmd ] [158])
            (const_int 2 [0x2]))) 89 {*arm_iorsi3} (nil))

(insn 66 65 67 12 arch/arm/kernel/bios32.c:641 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 cmd+0 S2 A16])
        (reg:HI 0 r0 [159])) 176 {*movhi_insn_arch4} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 3 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 67 66 68 13 78 "" [2 uses])

(note 68 67 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 72 68 70 13 arch/arm/kernel/bios32.c:627 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 1 r1 [orig:138 idx ] [138])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(insn 70 72 73 13 arch/arm/kernel/bios32.c:627 (set (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
        (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.717 ] [135])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(jump_insn 73 70 74 13 arch/arm/kernel/bios32.c:627 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8333 [0x208d])
        (nil)))
;; End of basic block 13 -> ( 3 14)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [83.3%]  (dfs_back)
;; Succ edge  14 [16.7%]  (fallthru,loop_exit)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [16.7%]  (fallthru,loop_exit)
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 75 74 76 14 NOTE_INSN_DELETED)

(insn 76 75 77 14 arch/arm/kernel/bios32.c:647 (set (reg:SI 3 r3 [160])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                    (const_int 42 [0x2a])) [0 <variable>.class+2 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 77 76 78 14 arch/arm/kernel/bios32.c:647 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [160])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 78 77 79 14 arch/arm/kernel/bios32.c:647 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 13 [sp]


;; Succ edge  15 [28.0%]  (fallthru)
;; Succ edge  16 [72.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  14 [28.0%]  (fallthru)
(note 79 78 80 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 82 15 arch/arm/kernel/bios32.c:648 (set (reg:SI 3 r3 [orig:163 cmd ] [163])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 82 80 83 15 arch/arm/kernel/bios32.c:648 (set (reg:SI 3 r3 [164])
        (ior:SI (reg:SI 3 r3 [orig:163 cmd ] [163])
            (const_int 3 [0x3]))) 89 {*arm_iorsi3} (nil))

(insn 83 82 84 15 arch/arm/kernel/bios32.c:648 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 cmd+0 S2 A16])
        (reg:HI 3 r3 [164])) 176 {*movhi_insn_arch4} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [72.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 84 83 85 16 84 "" [1 uses])

(note 85 84 86 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 16 arch/arm/kernel/bios32.c:650 (set (reg:SI 3 r3 [orig:134 cmd.723 ] [134])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 87 86 88 16 arch/arm/kernel/bios32.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:134 cmd.723 ] [134])
            (reg/v:SI 2 r2 [orig:139 old_cmd ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 16 arch/arm/kernel/bios32.c:650 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  18 [0.0%] 
;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
(note 89 88 90 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 135 17 arch/arm/kernel/bios32.c:655 (set (reg:SI 0 r0 [orig:140 D.18842 ] [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 135 90 136 17 (set (pc)
        (label_ref 115)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 136 135 93)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  16 [0.0%] 
(code_label 93 136 94 18 85 "" [1 uses])

(note 94 93 95 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 18 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:136 D.19084 ] [136])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 18 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:136 D.19084 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 98 18 include/linux/device.h:620 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 18 -> ( 20 19)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  20 [85.0%] 
;; Succ edge  19 [15.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  18 [15.0%]  (fallthru)
(note 98 97 99 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 19 include/linux/kobject.h:82 (set (reg/f:SI 1 r1 [orig:136 D.19084 ] [136])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  18 [85.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 100 99 101 20 86 "" [1 uses])

(note 101 100 108 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 108 101 103 20 NOTE_INSN_DELETED)

(insn 103 108 107 20 arch/arm/kernel/bios32.c:651 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1138fb40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1138fb40>)
        (nil)))

(call_insn 107 103 110 20 arch/arm/kernel/bios32.c:651 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 110 107 109 20 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 109 110 111 20 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 dev ] [142])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 111 109 112 20 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 112 111 113 20 include/linux/pci.h:768 (set (reg:SI 3 r3)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn 113 112 114 20 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 114 113 115 20 arch/arm/kernel/bios32.c:655 (set (reg:SI 0 r0 [orig:140 D.18842 ] [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 8 20 17) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  8 [100.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 115 114 116 21 81 "" [2 uses])

(note 116 115 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 127 116 137 21 arch/arm/kernel/bios32.c:656 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 137 127 138 NOTE_INSN_DELETED)

(note 138 137 0 NOTE_INSN_DELETED)


;; Function pcibios_fixup_bus (pcibios_fixup_bus)[0:1056]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 86 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 90 (  2.6)
scanning new insn with uid = 312.
verify found no changes in insn with uid = 312.
deleting insn with uid = 259.
scanning new insn with uid = 313.
verify found no changes in insn with uid = 313.
deleting insn with uid = 258.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 86 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 90 (  2.6)

Pass 0 for finding allocno costs

    a68 (r226,l3) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r226,l1) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r226,l0) best GENERAL_REGS, cover GENERAL_REGS
    a67 (r224,l3) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r224,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r224,l0) best GENERAL_REGS, cover GENERAL_REGS
    a66 (r223,l3) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r223,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r223,l0) best GENERAL_REGS, cover GENERAL_REGS
    a65 (r222,l3) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r222,l1) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r222,l0) best GENERAL_REGS, cover GENERAL_REGS
    a64 (r221,l3) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r221,l1) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r221,l0) best GENERAL_REGS, cover GENERAL_REGS
    a63 (r219,l3) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r219,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r214,l2) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r214,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r212,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r208,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r199,l2) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r195,l1) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r191,l1) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r189,l1) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r184,l1) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r183,l1) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r181,l1) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r163,l1) best GENERAL_REGS, cover GENERAL_REGS
    a69 (r161,l3) best GENERAL_REGS, cover GENERAL_REGS
    a71 (r160,l3) best GENERAL_REGS, cover GENERAL_REGS
    a72 (r159,l3) best GENERAL_REGS, cover GENERAL_REGS
    a74 (r158,l3) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a62 (r152,l3) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r152,l1) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r152,l2) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a61 (r150,l3) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r150,l2) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r149,l2) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a60 (r144,l3) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a59 (r143,l3) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a58 (r142,l3) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r142,l2) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r139,l3) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a70 (r138,l3) best GENERAL_REGS, cover GENERAL_REGS
    a73 (r137,l3) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r135,l3) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r134,l2) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r212,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r226,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a21(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r134,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a26(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r152,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r214,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r149,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a31(r199,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a33(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:200000
  a34(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a35(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a37(r219,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r221,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r222,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a40(r223,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r226,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a43(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a46(r195,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a48(r191,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r183,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a51(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a52(r181,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a53(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a54(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a56(r135,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a57(r139,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a58(r142,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a59(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a60(r144,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r150,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a62(r152,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a63(r219,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a64(r221,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a65(r222,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a66(r223,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a67(r224,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a68(r226,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a69(r161,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a70(r138,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a71(r160,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a72(r159,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a73(r137,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a74(r158,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r226: preferred GENERAL_REGS, alternative NO_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r212,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r208,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r226,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a21(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r134,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a26(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a27(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r152,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r214,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r149,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a31(r199,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a33(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:200000
  a34(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a35(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a37(r219,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r221,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r222,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a40(r223,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r226,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a43(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a45(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a46(r195,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a48(r191,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r183,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a51(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a52(r181,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a53(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a54(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a56(r135,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a57(r139,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a58(r142,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a59(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a60(r144,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r150,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a62(r152,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a63(r219,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a64(r221,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a65(r222,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a66(r223,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a67(r224,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a68(r226,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a69(r161,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a70(r138,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a71(r160,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a72(r159,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a73(r137,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a74(r158,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 248(l0): point = 0
   Insn 245(l0): point = 2
   Insn 247(l0): point = 4
   Insn 313(l0): point = 6
   Insn 312(l0): point = 8
   Insn 246(l0): point = 10
   Insn 260(l0): point = 12
   Insn 228(l0): point = 15
   Insn 227(l0): point = 17
   Insn 225(l0): point = 19
   Insn 223(l0): point = 22
   Insn 222(l0): point = 24
   Insn 218(l0): point = 27
   Insn 217(l0): point = 29
   Insn 215(l0): point = 31
   Insn 213(l0): point = 34
   Insn 212(l0): point = 36
   Insn 208(l0): point = 39
   Insn 207(l0): point = 41
   Insn 206(l0): point = 43
   Insn 204(l0): point = 46
   Insn 203(l0): point = 48
   Insn 202(l0): point = 50
   Insn 295(l0): point = 53
   Insn 173(l0): point = 55
   Insn 169(l0): point = 57
   Insn 284(l0): point = 60
   Insn 109(l0): point = 62
   Insn 106(l0): point = 64
   Insn 94(l0): point = 66
   Insn 78(l0): point = 68
   Insn 19(l0): point = 70
   Insn 70(l0): point = 72
   Insn 55(l0): point = 74
   Insn 21(l0): point = 76
   Insn 283(l0): point = 78
   Insn 16(l0): point = 81
   Insn 15(l0): point = 83
   Insn 14(l0): point = 85
   Insn 13(l0): point = 87
   Insn 12(l0): point = 89
   Insn 11(l0): point = 91
   Insn 9(l0): point = 94
   Insn 8(l0): point = 96
   Insn 6(l0): point = 98
   Insn 7(l0): point = 100
   Insn 2(l0): point = 102
   Insn 200(l2): point = 105
   Insn 199(l2): point = 107
   Insn 177(l2): point = 109
   Insn 265(l2): point = 111
   Insn 194(l2): point = 114
   Insn 193(l2): point = 116
   Insn 268(l2): point = 118
   Insn 267(l2): point = 120
   Insn 190(l2): point = 122
   Insn 189(l2): point = 124
   Insn 188(l2): point = 126
   Insn 184(l2): point = 128
   Insn 185(l2): point = 130
   Insn 187(l2): point = 132
   Insn 183(l2): point = 134
   Insn 182(l2): point = 136
   Insn 266(l2): point = 138
   Insn 179(l2): point = 140
   Insn 178(l2): point = 142
   Insn 174(l2): point = 144
   Insn 175(l2): point = 146
   Insn 293(l1): point = 149
   Insn 269(l1): point = 151
   Insn 163(l1): point = 153
   Insn 161(l1): point = 156
   Insn 160(l1): point = 158
   Insn 156(l1): point = 161
   Insn 153(l1): point = 164
   Insn 150(l1): point = 166
   Insn 149(l1): point = 168
   Insn 152(l1): point = 170
   Insn 148(l1): point = 172
   Insn 147(l1): point = 174
   Insn 282(l1): point = 176
   Insn 144(l1): point = 178
   Insn 143(l1): point = 180
   Insn 139(l1): point = 182
   Insn 142(l1): point = 184
   Insn 281(l1): point = 186
   Insn 140(l1): point = 188
   Insn 291(l1): point = 191
   Insn 133(l1): point = 193
   Insn 130(l1): point = 195
   Insn 129(l1): point = 197
   Insn 132(l1): point = 199
   Insn 128(l1): point = 201
   Insn 298(l1): point = 203
   Insn 125(l1): point = 205
   Insn 278(l1): point = 207
   Insn 297(l1): point = 209
   Insn 122(l1): point = 211
   Insn 121(l1): point = 213
   Insn 277(l1): point = 215
   Insn 117(l1): point = 217
   Insn 120(l1): point = 219
   Insn 118(l1): point = 221
   Insn 289(l1): point = 224
   Insn 111(l1): point = 227
   Insn 110(l1): point = 229
   Insn 108(l1): point = 232
   Insn 107(l1): point = 234
   Insn 105(l1): point = 236
   Insn 104(l1): point = 238
   Insn 302(l1): point = 241
   Insn 301(l1): point = 243
   Insn 300(l1): point = 245
   Insn 97(l1): point = 248
   Insn 96(l1): point = 250
   Insn 95(l1): point = 252
   Insn 91(l1): point = 255
   Insn 90(l1): point = 257
   Insn 77(l1): point = 259
   Insn 75(l1): point = 262
   Insn 74(l1): point = 264
   Insn 72(l1): point = 266
   Insn 305(l1): point = 269
   Insn 304(l1): point = 271
   Insn 303(l1): point = 273
   Insn 64(l1): point = 276
   Insn 63(l1): point = 278
   Insn 61(l1): point = 280
   Insn 60(l1): point = 282
   Insn 59(l1): point = 284
   Insn 57(l1): point = 286
   Insn 271(l1): point = 288
   Insn 56(l1): point = 290
   Insn 53(l3): point = 293
   Insn 52(l3): point = 295
   Insn 50(l3): point = 297
   Insn 49(l3): point = 299
   Insn 46(l3): point = 302
   Insn 45(l3): point = 304
   Insn 43(l3): point = 306
   Insn 42(l3): point = 308
   Insn 44(l3): point = 310
   Insn 39(l3): point = 313
   Insn 286(l3): point = 316
   Insn 34(l3): point = 318
   Insn 32(l3): point = 321
   Insn 31(l3): point = 323
   Insn 29(l3): point = 325
   Insn 27(l3): point = 328
   Insn 26(l3): point = 330
   Insn 25(l3): point = 332
 a0(r213): [5..8]
 a1(r212): [5..6]
 a2(r152): [11..102]
 a3(r142): [13..76]
 a4(r209): [16..17]
 a5(r208): [18..19]
 a6(r205): [28..29]
 a7(r204): [30..31]
 a8(r201): [42..43]
 a9(r148): [44..50]
 a10(r214): [53..55]
 a11(r134): [53..57]
 a12(r150): [53..78]
 a13(r226): [60..62]
 a14(r224): [60..64]
 a15(r222): [60..66]
 a16(r223): [60..68]
 a17(r143): [60..70]
 a18(r221): [60..72]
 a19(r219): [60..74]
 a20(r144): [60..98]
 a21(r156): [82..83]
 a22(r155): [86..87]
 a23(r154): [90..91]
 a24(r153): [97..100]
 a25(r134): [105..148]
 a26(r142): [105..148]
 a27(r150): [105..148]
 a28(r152): [105..148]
 a29(r214): [105..148]
 a30(r149): [133..136]
 a31(r199): [137..140]
 a32(r142): [149..292]
 a33(r143): [149..292]
 a34(r144): [149..292]
 a35(r150): [149..292]
 a36(r152): [149..292]
 a37(r219): [149..292]
 a38(r221): [149..292]
 a39(r222): [149..292]
 a40(r223): [149..292]
 a41(r224): [149..292]
 a42(r226): [149..292]
 a43(r139): [149..151]
 a44(r135): [149..153]
 a45(r133): [171..174]
 a46(r195): [175..178]
 a47(r151): [200..209]
 a48(r191): [204..205]
 a49(r189): [206..211]
 a50(r183): [230..236]
 a51(r184): [237..238]
 a52(r181): [251..252]
 a53(r136): [258..259]
 a54(r168): [265..266]
 a55(r163): [279..280]
 a56(r135): [293..334]
 a57(r139): [293..334]
 a58(r142): [293..334]
 a59(r143): [293..334]
 a60(r144): [293..334]
 a61(r150): [293..334]
 a62(r152): [293..334]
 a63(r219): [293..334]
 a64(r221): [293..334]
 a65(r222): [293..334]
 a66(r223): [293..334]
 a67(r224): [293..334]
 a68(r226): [293..334]
 a69(r161): [303..304]
 a70(r138): [316..318] [305..313]
 a71(r160): [305..310]
 a72(r159): [307..308]
 a73(r137): [309..332]
 a74(r158): [324..325]
Compressing live ranges: from 335 to 87 - 25%
Ranges after the compression:
 a0(r213): [0..2]
 a1(r212): [0..1]
 a2(r152): [3..39]
 a3(r142): [4..28]
 a4(r209): [5..6]
 a5(r208): [7..8]
 a6(r205): [9..10]
 a7(r204): [11..12]
 a8(r201): [13..14]
 a9(r148): [15..16]
 a10(r214): [17..18]
 a11(r134): [17..19]
 a12(r150): [17..29]
 a13(r226): [20..21]
 a14(r224): [20..22]
 a15(r222): [20..23]
 a16(r223): [20..24]
 a17(r143): [20..25]
 a18(r221): [20..26]
 a19(r219): [20..27]
 a20(r144): [20..37]
 a21(r156): [30..31]
 a22(r155): [32..33]
 a23(r154): [34..35]
 a24(r153): [36..38]
 a25(r134): [40..45]
 a26(r142): [40..45]
 a27(r150): [40..45]
 a28(r152): [40..45]
 a29(r214): [40..45]
 a30(r149): [41..42]
 a31(r199): [43..44]
 a32(r142): [46..71]
 a33(r143): [46..71]
 a34(r144): [46..71]
 a35(r150): [46..71]
 a36(r152): [46..71]
 a37(r219): [46..71]
 a38(r221): [46..71]
 a39(r222): [46..71]
 a40(r223): [46..71]
 a41(r224): [46..71]
 a42(r226): [46..71]
 a43(r139): [46..47]
 a44(r135): [46..48]
 a45(r133): [49..50]
 a46(r195): [51..52]
 a47(r151): [53..57]
 a48(r191): [54..55]
 a49(r189): [56..58]
 a50(r183): [59..60]
 a51(r184): [61..62]
 a52(r181): [63..64]
 a53(r136): [65..66]
 a54(r168): [67..68]
 a55(r163): [69..70]
 a56(r135): [72..86]
 a57(r139): [72..86]
 a58(r142): [72..86]
 a59(r143): [72..86]
 a60(r144): [72..86]
 a61(r150): [72..86]
 a62(r152): [72..86]
 a63(r219): [72..86]
 a64(r221): [72..86]
 a65(r222): [72..86]
 a66(r223): [72..86]
 a67(r224): [72..86]
 a68(r226): [72..86]
 a69(r161): [73..74]
 a70(r138): [81..82] [75..80]
 a71(r160): [75..79]
 a72(r159): [76..77]
 a73(r137): [78..85]
 a74(r158): [83..84]
    Creating cap  a75(r149,l0: a30(r149,l2))
    Creating cap  a76(r199,l0: a31(r199,l2))
    Creating cap  a77(r139,l0: a43(r139,l1))
    Creating cap  a78(r135,l0: a44(r135,l1))
    Creating cap  a79(r133,l0: a45(r133,l1))
    Creating cap  a80(r195,l0: a46(r195,l1))
    Creating cap  a81(r151,l0: a47(r151,l1))
    Creating cap  a82(r191,l0: a48(r191,l1))
    Creating cap  a83(r189,l0: a49(r189,l1))
    Creating cap  a84(r183,l0: a50(r183,l1))
    Creating cap  a85(r184,l0: a51(r184,l1))
    Creating cap  a86(r181,l0: a52(r181,l1))
    Creating cap  a87(r136,l0: a53(r136,l1))
    Creating cap  a88(r168,l0: a54(r168,l1))
    Creating cap  a89(r163,l0: a55(r163,l1))
    Creating cap  a90(r161,l1: a69(r161,l3))
    Creating cap  a91(r138,l1: a70(r138,l3))
    Creating cap  a92(r160,l1: a71(r160,l3))
    Creating cap  a93(r159,l1: a72(r159,l3))
    Creating cap  a94(r137,l1: a73(r137,l3))
    Creating cap  a95(r158,l1: a74(r158,l3))
    Creating cap  a96(r161,l0: a90(r161,l1: a69(r161,l3)))
    Creating cap  a97(r138,l0: a91(r138,l1: a70(r138,l3)))
    Creating cap  a98(r160,l0: a92(r160,l1: a71(r160,l3)))
    Creating cap  a99(r159,l0: a93(r159,l1: a72(r159,l3)))
    Creating cap  a100(r137,l0: a94(r137,l1: a73(r137,l3)))
    Creating cap  a101(r158,l0: a95(r158,l1: a74(r158,l3)))
+++Allocating 1312 bytes for conflict table (uncompressed size 1632)
;; a0(r213,l0) conflicts: a1(r212,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a1(r212,l0) conflicts: a0(r213,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a2(r152,l0) conflicts: a3(r142,l0) a4(r209,l0) a5(r208,l0) a6(r205,l0) a7(r204,l0) a8(r201,l0) a9(r148,l0) a10(r214,l0) a11(r134,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a21(r156,l0) a22(r155,l0) a23(r154,l0) a24(r153,l0) a75(r149,l0) a76(r199,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a3(r142,l0) conflicts: a2(r152,l0) a4(r209,l0) a5(r208,l0) a6(r205,l0) a7(r204,l0) a8(r201,l0) a9(r148,l0) a10(r214,l0) a11(r134,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a75(r149,l0) a76(r199,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a4(r209,l0) conflicts: a2(r152,l0) a3(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r208,l0) conflicts: a2(r152,l0) a3(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r205,l0) conflicts: a2(r152,l0) a3(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r204,l0) conflicts: a2(r152,l0) a3(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r201,l0) conflicts: a2(r152,l0) a3(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r148,l0) conflicts: a2(r152,l0) a3(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r214,l0) conflicts: a2(r152,l0) a3(r142,l0) a11(r134,l0) a12(r150,l0) a75(r149,l0) a76(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a11(r134,l0) conflicts: a2(r152,l0) a3(r142,l0) a10(r214,l0) a12(r150,l0) a75(r149,l0) a76(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a12(r150,l0) conflicts: a2(r152,l0) a3(r142,l0) a10(r214,l0) a11(r134,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a75(r149,l0) a76(r199,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a13(r226,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a14(r224,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a15(r222,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a16(r223,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a17(r143,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a18(r221,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a19(r219,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a20(r144,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a21(r156,l0) a22(r155,l0) a23(r154,l0) a24(r153,l0) a77(r139,l0) a78(r135,l0) a79(r133,l0) a80(r195,l0) a81(r151,l0) a82(r191,l0) a83(r189,l0) a84(r183,l0) a85(r184,l0) a86(r181,l0) a87(r136,l0) a88(r168,l0) a89(r163,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a21(r156,l0) conflicts: a2(r152,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a22(r155,l0) conflicts: a2(r152,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a23(r154,l0) conflicts: a2(r152,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a24(r153,l0) conflicts: a2(r152,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r134,l2) conflicts: a26(r142,l2) a27(r150,l2) a28(r152,l2) a29(r214,l2) a30(r149,l2) a31(r199,l2)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a26(r142,l2) conflicts: a25(r134,l2) a27(r150,l2) a28(r152,l2) a29(r214,l2) a30(r149,l2) a31(r199,l2)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a27(r150,l2) conflicts: a25(r134,l2) a26(r142,l2) a28(r152,l2) a29(r214,l2) a30(r149,l2) a31(r199,l2)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a28(r152,l2) conflicts: a25(r134,l2) a26(r142,l2) a27(r150,l2) a29(r214,l2) a30(r149,l2) a31(r199,l2)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a29(r214,l2) conflicts: a25(r134,l2) a26(r142,l2) a27(r150,l2) a28(r152,l2) a30(r149,l2) a31(r199,l2)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a30(r149,l2) conflicts: a25(r134,l2) a26(r142,l2) a27(r150,l2) a28(r152,l2) a29(r214,l2)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a31(r199,l2) conflicts: a25(r134,l2) a26(r142,l2) a27(r150,l2) a28(r152,l2) a29(r214,l2)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a32(r142,l1) conflicts: a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a33(r143,l1) conflicts: a32(r142,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a34(r144,l1) conflicts: a32(r142,l1) a33(r143,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a35(r150,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a36(r152,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a37(r219,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a38(r221,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a39(r222,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a40(r223,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a41(r224,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a42(r226,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a43(r139,l1) a44(r135,l1) a45(r133,l1) a46(r195,l1) a47(r151,l1) a48(r191,l1) a49(r189,l1) a50(r183,l1) a51(r184,l1) a52(r181,l1) a53(r136,l1) a54(r168,l1) a55(r163,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a43(r139,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a44(r135,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a44(r135,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a90(r161,l1) a92(r160,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1) a95(r158,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a45(r133,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a46(r195,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a47(r151,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a48(r191,l1) a49(r189,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a48(r191,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a47(r151,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a49(r189,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a47(r151,l1)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a50(r183,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a51(r184,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a52(r181,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a53(r136,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a54(r168,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a55(r163,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a56(r135,l3) conflicts: a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a57(r139,l3) conflicts: a56(r135,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a58(r142,l3) conflicts: a56(r135,l3) a57(r139,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a59(r143,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a60(r144,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a61(r150,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a62(r152,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a63(r219,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a64(r221,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a65(r222,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a66(r223,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a67(r224,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a67(r224,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a68(r226,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a68(r226,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a69(r161,l3) a71(r160,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a69(r161,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a70(r138,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a71(r160,l3) a72(r159,l3) a73(r137,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a71(r160,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a70(r138,l3) a72(r159,l3) a73(r137,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a72(r159,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a71(r160,l3) a70(r138,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a73(r137,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a71(r160,l3) a70(r138,l3) a74(r158,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a74(r158,l3) conflicts: a56(r135,l3) a57(r139,l3) a58(r142,l3) a59(r143,l3) a60(r144,l3) a61(r150,l3) a62(r152,l3) a63(r219,l3) a64(r221,l3) a65(r222,l3) a66(r223,l3) a67(r224,l3) a68(r226,l3) a73(r137,l3)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a75(r149,l0) conflicts: a2(r152,l0) a3(r142,l0) a10(r214,l0) a11(r134,l0) a12(r150,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a76(r199,l0) conflicts: a2(r152,l0) a3(r142,l0) a10(r214,l0) a11(r134,l0) a12(r150,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a77(r139,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a78(r135,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a78(r135,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a96(r161,l0) a98(r160,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0) a101(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a79(r133,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a80(r195,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a81(r151,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a82(r191,l0) a83(r189,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a82(r191,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a81(r151,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a83(r189,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a81(r151,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a84(r183,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a85(r184,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a86(r181,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a87(r136,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a88(r168,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a89(r163,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a90(r161,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a91(r138,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a92(r160,l1) a93(r159,l1) a94(r137,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a92(r160,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a91(r138,l1) a93(r159,l1) a94(r137,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a93(r159,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a92(r160,l1) a91(r138,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a94(r137,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a92(r160,l1) a91(r138,l1) a95(r158,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a95(r158,l1) conflicts: a32(r142,l1) a33(r143,l1) a34(r144,l1) a35(r150,l1) a36(r152,l1) a37(r219,l1) a38(r221,l1) a39(r222,l1) a40(r223,l1) a41(r224,l1) a42(r226,l1) a43(r139,l1) a44(r135,l1) a94(r137,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a96(r161,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a97(r138,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a98(r160,l0) a99(r159,l0) a100(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a98(r160,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a97(r138,l0) a99(r159,l0) a100(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a99(r159,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a98(r160,l0) a97(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a100(r137,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a98(r160,l0) a97(r138,l0) a101(r158,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a101(r158,l0) conflicts: a2(r152,l0) a3(r142,l0) a12(r150,l0) a13(r226,l0) a14(r224,l0) a15(r222,l0) a16(r223,l0) a17(r143,l0) a18(r221,l0) a19(r219,l0) a20(r144,l0) a77(r139,l0) a78(r135,l0) a100(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r209)<->a5(r208)@125:shuffle
  cp1:a6(r205)<->a7(r204)@125:shuffle
  cp2:a30(r149)<->a31(r199)@125:shuffle
  cp3:a45(r133)<->a46(r195)@125:shuffle
  cp4:a48(r191)<->a49(r189)@125:shuffle
  cp5:a50(r183)<->a51(r184)@125:shuffle
  cp6:a72(r159)<->a73(r137)@125:shuffle
  cp7:a69(r161)<->a71(r160)@125:shuffle
  cp8:a69(r161)<->a70(r138)@125:shuffle
  cp9:a75(r149)<->a76(r199)@125:shuffle
  cp10:a79(r133)<->a80(r195)@125:shuffle
  cp11:a82(r191)<->a83(r189)@125:shuffle
  cp12:a84(r183)<->a85(r184)@125:shuffle
  cp13:a93(r159)<->a94(r137)@125:shuffle
  cp14:a90(r161)<->a92(r160)@125:shuffle
  cp15:a90(r161)<->a91(r138)@125:shuffle
  cp16:a99(r159)<->a100(r137)@125:shuffle
  cp17:a96(r161)<->a98(r160)@125:shuffle
  cp18:a96(r161)<->a97(r138)@125:shuffle
  regions=4, blocks=35, points=87
    allocnos=102, copies=19, conflicts=2, ranges=76

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 34 33 32 31 30 29 28 25(->27:l2) 4(->23:l1) 3 2
    all: 0r213 1r212 2r152 3r142 4r209 5r208 6r205 7r204 8r201 9r148 10r214 11r134 12r150 13r226 14r224 15r222 16r223 17r143 18r221 19r219 20r144 21r156 22r155 23r154 24r153 75r149 76r199 77r139 78r135 79r133 80r195 81r151 82r191 83r189 84r183 85r184 86r181 87r136 88r168 89r163 96r161 97r138 98r160 99r159 100r137 101r158
    modified regnos: 133 134 135 136 137 138 139 142 143 144 148 149 150 151 152 153 154 155 156 158 159 160 161 163 168 181 183 184 189 191 195 199 201 204 205 208 209 212 213 214 219 221 222 223 224 226
    border:
    Pressure: GENERAL_REGS=16
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 212 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 5 regs less
    Reg 142 of GENERAL_REGS has 5 regs less
    Reg 214 of GENERAL_REGS has 5 regs less
    Reg 134 of GENERAL_REGS has 5 regs less
    Reg 150 of GENERAL_REGS has 5 regs less
    Reg 226 of GENERAL_REGS has 5 regs less
    Reg 224 of GENERAL_REGS has 5 regs less
    Reg 222 of GENERAL_REGS has 5 regs less
    Reg 223 of GENERAL_REGS has 5 regs less
    Reg 143 of GENERAL_REGS has 5 regs less
    Reg 221 of GENERAL_REGS has 5 regs less
    Reg 219 of GENERAL_REGS has 5 regs less
    Reg 144 of GENERAL_REGS has 5 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 199 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
      Pushing a96(r161,l0: a90(r161,l1: a69(r161,l3)))
      Pushing a89(r163,l0: a55(r163,l1))
      Pushing a88(r168,l0: a54(r168,l1))
      Pushing a86(r181,l0: a52(r181,l1))
      Pushing a85(r184,l0: a51(r184,l1))
      Pushing a24(r153,l0)
      Pushing a23(r154,l0)
      Pushing a22(r155,l0)
      Pushing a21(r156,l0)
      Pushing a8(r201,l0)
      Pushing a7(r204,l0)
      Pushing a6(r205,l0)
      Pushing a5(r208,l0)
      Pushing a4(r209,l0)
      Pushing a87(r136,l0: a53(r136,l1))
      Pushing a84(r183,l0: a50(r183,l1))
      Pushing a9(r148,l0)
      Pushing a80(r195,l0: a46(r195,l1))
      Pushing a76(r199,l0: a31(r199,l2))
      Pushing a1(r212,l0)
      Pushing a0(r213,l0)
      Pushing a79(r133,l0: a45(r133,l1))
      Pushing a75(r149,l0: a30(r149,l2))
      Pushing a98(r160,l0: a92(r160,l1: a71(r160,l3)))(potential spill: pri=588, cost=10000)
      Pushing a13(r226,l0)(potential spill: pri=800, cost=20000)
      Pushing a101(r158,l0: a95(r158,l1: a74(r158,l3)))
      Pushing a99(r159,l0: a93(r159,l1: a72(r159,l3)))
      Pushing a100(r137,l0: a94(r137,l1: a73(r137,l3)))
      Pushing a97(r138,l0: a91(r138,l1: a70(r138,l3)))
      Pushing a77(r139,l0: a43(r139,l1))
      Pushing a78(r135,l0: a44(r135,l1))
      Pushing a83(r189,l0: a49(r189,l1))
      Pushing a82(r191,l0: a48(r191,l1))
      Pushing a81(r151,l0: a47(r151,l1))
      Pushing a14(r224,l0)(potential spill: pri=1333, cost=20000)
      Pushing a15(r222,l0)(potential spill: pri=1428, cost=20000)
      Pushing a16(r223,l0)(potential spill: pri=1538, cost=20000)
      Pushing a18(r221,l0)(potential spill: pri=1666, cost=20000)
      Pushing a10(r214,l0)(potential spill: pri=2000, cost=20000)
      Pushing a11(r134,l0)
      Pushing a19(r219,l0)(potential spill: pri=3636, cost=40000)
      Pushing a12(r150,l0)(potential spill: pri=5000, cost=50000)
      Pushing a20(r144,l0)
      Pushing a2(r152,l0)
      Pushing a3(r142,l0)
      Pushing a17(r143,l0)
      Popping a17(r143,l0)  -- assign reg 4
      Popping a3(r142,l0)  -- assign reg 5
      Popping a2(r152,l0)  -- assign reg 6
      Popping a20(r144,l0)  -- assign reg 7
      Popping a12(r150,l0)  -- assign reg 8
      Popping a19(r219,l0)  -- assign reg 10
      Popping a11(r134,l0)  -- assign reg 4
      Popping a10(r214,l0)  -- assign reg 7
      Popping a18(r221,l0)  -- assign reg 9
      Popping a16(r223,l0)  -- assign reg 11
      Popping a15(r222,l0)  -- (memory is more profitable 20000 vs 60000) spill
      Popping a14(r224,l0)  -- (memory is more profitable 20000 vs 60000) spill
      Popping a81(r151,l0: a47(r151,l1))  -- assign reg 3
      Popping a82(r191,l0: a48(r191,l1))  -- assign reg 1
      Popping a83(r189,l0: a49(r189,l1))  -- assign reg 1
      Popping a78(r135,l0: a44(r135,l1))  -- assign reg 3
      Popping a77(r139,l0: a43(r139,l1))  -- assign reg 2
      Popping a97(r138,l0: a91(r138,l1: a70(r138,l3)))  -- assign reg 1
      Popping a100(r137,l0: a94(r137,l1: a73(r137,l3)))  -- assign reg 0
      Popping a99(r159,l0: a93(r159,l1: a72(r159,l3)))  -- assign reg 0
      Popping a101(r158,l0: a95(r158,l1: a74(r158,l3)))  -- assign reg 1
      Popping a13(r226,l0)  -- (memory is more profitable 20000 vs 60000) spill
      Popping a98(r160,l0: a92(r160,l1: a71(r160,l3)))  -- assign reg 12
      Popping a75(r149,l0: a30(r149,l2))  -- assign reg 3
      Popping a79(r133,l0: a45(r133,l1))  -- assign reg 3
      Popping a0(r213,l0)  -- assign reg 3
      Popping a1(r212,l0)  -- assign reg 2
      Popping a76(r199,l0: a31(r199,l2))  -- assign reg 3
      Popping a80(r195,l0: a46(r195,l1))  -- assign reg 3
      Popping a9(r148,l0)  -- assign reg 3
      Popping a84(r183,l0: a50(r183,l1))  -- assign reg 3
      Popping a87(r136,l0: a53(r136,l1))  -- assign reg 3
      Popping a4(r209,l0)  -- assign reg 3
      Popping a5(r208,l0)  -- assign reg 3
      Popping a6(r205,l0)  -- assign reg 3
      Popping a7(r204,l0)  -- assign reg 3
      Popping a8(r201,l0)  -- assign reg 3
      Popping a21(r156,l0)  -- assign reg 3
      Popping a22(r155,l0)  -- assign reg 3
      Popping a23(r154,l0)  -- assign reg 3
      Popping a24(r153,l0)  -- assign reg 3
      Popping a85(r184,l0: a51(r184,l1))  -- assign reg 3
      Popping a86(r181,l0: a52(r181,l1))  -- assign reg 3
      Popping a88(r168,l0: a54(r168,l1))  -- assign reg 3
      Popping a89(r163,l0: a55(r163,l1))  -- assign reg 3
      Popping a96(r161,l0: a90(r161,l1: a69(r161,l3)))  -- assign reg 1

  Loop 2 (parent 0, header bb27, depth 1)
    bbs: 27(->28:l0) 26
    all: 25r134 26r142 27r150 28r152 29r214 30r149 31r199
    modified regnos: 134 149 199
    border: 25r134 26r142 27r150 28r152 29r214
    Pressure: GENERAL_REGS=10
    Reg 134 of GENERAL_REGS has 5 regs less
    Reg 142 of GENERAL_REGS has 5 regs less
    Reg 150 of GENERAL_REGS has 5 regs less
    Reg 152 of GENERAL_REGS has 5 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 199 of GENERAL_REGS has 1 regs less
      Pushing a31(r199,l2)
      Pushing a30(r149,l2)
      Pushing a28(r152,l2)(potential spill: pri=4000, cost=40000)
      Pushing a27(r150,l2)
      Pushing a26(r142,l2)
      Pushing a25(r134,l2)
      Popping a25(r134,l2)  -- assign reg 4
      Popping a26(r142,l2)  -- assign reg 5
      Popping a27(r150,l2)  -- assign reg 8
      Popping a28(r152,l2)  -- assign reg 6
      Popping a30(r149,l2)  -- assign reg 3
      Popping a31(r199,l2)  -- assign reg 3

  Loop 1 (parent 0, header bb23, depth 1)
    bbs: 24(->5:l3) 23(->25:l0) 22 21 20 19 18 17 16 15 14 13 12 11
    all: 32r142 33r143 34r144 35r150 36r152 37r219 38r221 39r222 40r223 41r224 42r226 43r139 44r135 45r133 46r195 47r151 48r191 49r189 50r183 51r184 52r181 53r136 54r168 55r163 90r161 91r138 92r160 93r159 94r137 95r158
    modified regnos: 133 135 136 137 138 139 142 143 151 158 159 160 161 163 168 181 183 184 189 191 195
    border: 32r142 33r143 34r144 35r150 36r152 37r219 38r221 39r222 40r223 41r224 42r226
    Pressure: GENERAL_REGS=16
    Reg 142 of GENERAL_REGS has 5 regs less
    Reg 143 of GENERAL_REGS has 5 regs less
    Reg 144 of GENERAL_REGS has 5 regs less
    Reg 150 of GENERAL_REGS has 5 regs less
    Reg 152 of GENERAL_REGS has 5 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
      Pushing a95(r158,l1: a74(r158,l3))
      Pushing a93(r159,l1: a72(r159,l3))
      Pushing a92(r160,l1: a71(r160,l3))
      Pushing a90(r161,l1: a69(r161,l3))
      Pushing a55(r163,l1)
      Pushing a54(r168,l1)
      Pushing a52(r181,l1)
      Pushing a51(r184,l1)
      Pushing a94(r137,l1: a73(r137,l3))
      Pushing a53(r136,l1)
      Pushing a50(r183,l1)
      Pushing a91(r138,l1: a70(r138,l3))
      Pushing a43(r139,l1)
      Pushing a44(r135,l1)
      Pushing a49(r189,l1)
      Pushing a48(r191,l1)
      Pushing a46(r195,l1)
      Pushing a45(r133,l1)
      Pushing a47(r151,l1)
      Pushing a36(r152,l1)(potential spill: pri=3076, cost=40000)
      Pushing a35(r150,l1)(potential spill: pri=4166, cost=50000)
      Pushing a34(r144,l1)(potential spill: pri=5454, cost=60000)
      Pushing a32(r142,l1)(potential spill: pri=16000, cost=160000)
      Pushing a33(r143,l1)
      Popping a33(r143,l1)  -- assign reg 4
      Popping a32(r142,l1)  -- assign reg 5
      Popping a34(r144,l1)  -- assign reg 7
      Popping a35(r150,l1)  -- assign reg 8
      Popping a36(r152,l1)  -- assign reg 6
      Popping a47(r151,l1)  -- assign reg 3
      Popping a45(r133,l1)  -- assign reg 3
      Popping a46(r195,l1)  -- assign reg 3
      Popping a48(r191,l1)  -- assign reg 1
      Popping a49(r189,l1)  -- assign reg 1
      Popping a44(r135,l1)  -- assign reg 3
      Popping a43(r139,l1)  -- assign reg 2
      Popping a91(r138,l1: a70(r138,l3))  -- assign reg 1
      Popping a50(r183,l1)  -- assign reg 3
      Popping a53(r136,l1)  -- assign reg 3
      Popping a94(r137,l1: a73(r137,l3))  -- assign reg 0
      Popping a51(r184,l1)  -- assign reg 3
      Popping a52(r181,l1)  -- assign reg 3
      Popping a54(r168,l1)  -- assign reg 3
      Popping a55(r163,l1)  -- assign reg 3
      Popping a90(r161,l1: a69(r161,l3))  -- assign reg 1
      Popping a92(r160,l1: a71(r160,l3))  -- assign reg 12
      Popping a93(r159,l1: a72(r159,l3))  -- assign reg 0
      Popping a95(r158,l1: a74(r158,l3))  -- assign reg 1

  Loop 3 (parent 1, header bb5, depth 2)
    bbs: 10(->11:l1) 9 8 7 6 5
    all: 56r135 57r139 58r142 59r143 60r144 61r150 62r152 63r219 64r221 65r222 66r223 67r224 68r226 69r161 70r138 71r160 72r159 73r137 74r158
    modified regnos: 135 137 138 139 158 159 160 161
    border: 56r135 57r139 58r142 59r143 60r144 61r150 62r152 63r219 64r221 65r222 66r223 67r224 68r226
    Pressure: GENERAL_REGS=16
      Pushing a74(r158,l3)
      Pushing a72(r159,l3)
      Pushing a62(r152,l3)
      Pushing a61(r150,l3)
      Pushing a59(r143,l3)
      Pushing a58(r142,l3)
      Pushing a71(r160,l3)
      Pushing a69(r161,l3)
      Pushing a60(r144,l3)
      Pushing a73(r137,l3)
      Pushing a57(r139,l3)
      Pushing a70(r138,l3)
      Pushing a56(r135,l3)
      Popping a56(r135,l3)  -- assign reg 3
      Popping a70(r138,l3)  -- assign reg 1
      Popping a57(r139,l3)  -- assign reg 2
      Popping a73(r137,l3)  -- assign reg 0
      Popping a60(r144,l3)  -- assign reg 7
      Popping a69(r161,l3)  -- assign reg 1
      Popping a71(r160,l3)  -- assign reg 12
      Popping a58(r142,l3)  -- assign reg 5
      Popping a59(r143,l3)  -- assign reg 4
      Popping a61(r150,l3)  -- assign reg 8
      Popping a62(r152,l3)  -- assign reg 6
      Popping a72(r159,l3)  -- assign reg 0
      Popping a74(r158,l3)  -- assign reg 1
Disposition:
   45:r133 l1     3   25:r134 l2     4   11:r134 l0     4   56:r135 l3     3
   44:r135 l1     3   53:r136 l1     3   73:r137 l3     0   70:r138 l3     1
   57:r139 l3     2   43:r139 l1     2   58:r142 l3     5   32:r142 l1     5
   26:r142 l2     5    3:r142 l0     5   59:r143 l3     4   33:r143 l1     4
   17:r143 l0     4   60:r144 l3     7   34:r144 l1     7   20:r144 l0     7
    9:r148 l0     3   30:r149 l2     3   61:r150 l3     8   35:r150 l1     8
   27:r150 l2     8   12:r150 l0     8   47:r151 l1     3   62:r152 l3     6
   36:r152 l1     6   28:r152 l2     6    2:r152 l0     6   24:r153 l0     3
   23:r154 l0     3   22:r155 l0     3   21:r156 l0     3   74:r158 l3     1
   72:r159 l3     0   71:r160 l3    12   69:r161 l3     1   55:r163 l1     3
   54:r168 l1     3   52:r181 l1     3   50:r183 l1     3   51:r184 l1     3
   49:r189 l1     1   48:r191 l1     1   46:r195 l1     3   31:r199 l2     3
    8:r201 l0     3    7:r204 l0     3    6:r205 l0     3    5:r208 l0     3
    4:r209 l0     3    1:r212 l0     2    0:r213 l0     3   29:r214 l2     7
   10:r214 l0     7   63:r219 l3    10   37:r219 l1    10   19:r219 l0    10
   64:r221 l3     9   38:r221 l1     9   18:r221 l0     9   65:r222 l3   mem
   39:r222 l1   mem   15:r222 l0   mem   66:r223 l3    11   40:r223 l1    11
   16:r223 l0    11   67:r224 l3   mem   41:r224 l1   mem   14:r224 l0   mem
   68:r226 l3   mem   42:r226 l1   mem   13:r226 l0   mem
New iteration of spill/restore move
      Changing RTL for loop 2 (header bb27)
  4 vs parent 4:      Creating newreg=227 from oldreg=134
  5 vs parent 5:      Creating newreg=228 from oldreg=142
  8 vs parent 8:      Creating newreg=229 from oldreg=150
  6 vs parent 6:      Creating newreg=230 from oldreg=152
rescanning insn with uid = 199.
deleting insn with uid = 199.
rescanning insn with uid = 175.
deleting insn with uid = 175.
rescanning insn with uid = 174.
deleting insn with uid = 174.
rescanning insn with uid = 182.
deleting insn with uid = 182.
rescanning insn with uid = 185.
deleting insn with uid = 185.
rescanning insn with uid = 184.
deleting insn with uid = 184.
rescanning insn with uid = 189.
deleting insn with uid = 189.
rescanning insn with uid = 190.
deleting insn with uid = 190.
rescanning insn with uid = 194.
deleting insn with uid = 194.
      Changing RTL for loop 1 (header bb23)
  5 vs parent 5:      Creating newreg=231 from oldreg=142
  4 vs parent 4:      Creating newreg=232 from oldreg=143
  7 vs parent 7:      Creating newreg=233 from oldreg=144
  8 vs parent 8:      Creating newreg=234 from oldreg=150
  6 vs parent 6:      Creating newreg=235 from oldreg=152
rescanning insn with uid = 163.
deleting insn with uid = 163.
rescanning insn with uid = 160.
deleting insn with uid = 160.
rescanning insn with uid = 156.
deleting insn with uid = 156.
rescanning insn with uid = 140.
deleting insn with uid = 140.
rescanning insn with uid = 139.
deleting insn with uid = 139.
rescanning insn with uid = 149.
deleting insn with uid = 149.
rescanning insn with uid = 150.
deleting insn with uid = 150.
rescanning insn with uid = 118.
deleting insn with uid = 118.
rescanning insn with uid = 117.
deleting insn with uid = 117.
rescanning insn with uid = 129.
deleting insn with uid = 129.
rescanning insn with uid = 130.
deleting insn with uid = 130.
rescanning insn with uid = 104.
deleting insn with uid = 104.
rescanning insn with uid = 300.
deleting insn with uid = 300.
rescanning insn with uid = 301.
deleting insn with uid = 301.
rescanning insn with uid = 302.
deleting insn with uid = 302.
rescanning insn with uid = 95.
deleting insn with uid = 95.
rescanning insn with uid = 77.
deleting insn with uid = 77.
rescanning insn with uid = 72.
deleting insn with uid = 72.
rescanning insn with uid = 303.
deleting insn with uid = 303.
rescanning insn with uid = 304.
deleting insn with uid = 304.
rescanning insn with uid = 305.
deleting insn with uid = 305.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 57.
deleting insn with uid = 57.
      Changing RTL for loop 3 (header bb5)
  3 vs parent 3:      Creating newreg=236 from oldreg=135
  2 vs parent 2:      Creating newreg=237 from oldreg=139
  5 vs parent 5:      Creating newreg=238 from oldreg=231
  4 vs parent 4:      Creating newreg=239 from oldreg=232
  7 vs parent 7:      Creating newreg=240 from oldreg=233
  8 vs parent 8:      Creating newreg=241 from oldreg=234
  6 vs parent 6:      Creating newreg=242 from oldreg=235
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 50.
deleting insn with uid = 50.
rescanning insn with uid = 52.
deleting insn with uid = 52.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 43.
deleting insn with uid = 43.
rescanning insn with uid = 45.
deleting insn with uid = 45.
rescanning insn with uid = 46.
deleting insn with uid = 46.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 25.
deleting insn with uid = 25.
scanning new insn with uid = 319.
scanning new insn with uid = 320.
scanning new insn with uid = 321.
scanning new insn with uid = 322.
scanning new insn with uid = 323.
scanning new insn with uid = 331.
scanning new insn with uid = 332.
scanning new insn with uid = 333.
scanning new insn with uid = 338.
scanning new insn with uid = 339.
    Adding cp19:a3r142-a32r231
    Adding range [88..88] to allocno a3r142
    Adding cp20:a17r143-a33r232
    Adding range [88..90] to allocno a17r143
    Adding cp21:a20r144-a34r233
    Adding range [88..92] to allocno a20r144
    Adding cp22:a12r150-a35r234
    Adding range [88..94] to allocno a12r150
    Adding cp23:a2r152-a36r235
    Adding range [88..96] to allocno a2r152
    Adding range [89..97] to allocno a32r231
    Adding range [91..97] to allocno a33r232
    Adding range [93..97] to allocno a34r233
    Adding range [95..97] to allocno a35r234
    Adding range [97..97] to allocno a36r235
    Adding range [88..97] to live through  allocno a19r219
    Adding range [88..97] to live through  allocno a18r221
    Adding range [88..97] to live through  allocno a15r222
    Adding range [88..97] to live through  allocno a16r223
    Adding range [88..97] to live through  allocno a14r224
    Adding range [88..97] to live through  allocno a13r226
    Adding cp24:a32r231-a58r238
    Adding range [99..99] to allocno a58r238
    Adding cp25:a33r232-a59r239
    Adding range [99..101] to allocno a59r239
    Adding cp26:a34r233-a60r240
    Adding range [99..103] to allocno a60r240
    Adding cp27:a35r234-a61r241
    Adding range [99..105] to allocno a61r241
    Adding cp28:a36r235-a62r242
    Adding range [99..107] to allocno a62r242
    Adding range [100..108] to allocno a32r231
    Adding range [102..108] to allocno a33r232
    Adding range [104..108] to allocno a34r233
    Adding range [106..108] to allocno a35r234
    Adding range [108..108] to allocno a36r235
    Adding range [99..108] to live through  allocno a37r219
    Adding range [99..108] to live through  allocno a38r221
    Adding range [99..108] to live through  allocno a39r222
    Adding range [99..108] to live through  allocno a40r223
    Adding range [99..108] to live through  allocno a41r224
    Adding range [99..108] to live through  allocno a42r226
    Adding cp29:a44r135-a56r236
    Adding range [110..110] to allocno a44r135
    Adding cp30:a43r139-a57r237
    Adding range [110..112] to allocno a43r139
    Adding cp31:a32r231-a58r238
    Adding range [110..114] to allocno a32r231
    Adding cp32:a33r232-a59r239
    Adding range [110..116] to allocno a33r232
    Adding cp33:a34r233-a60r240
    Adding range [110..118] to allocno a34r233
    Adding cp34:a35r234-a61r241
    Adding range [110..120] to allocno a35r234
    Adding cp35:a36r235-a62r242
    Adding range [110..122] to allocno a36r235
    Adding range [111..123] to allocno a56r236
    Adding range [113..123] to allocno a57r237
    Adding range [115..123] to allocno a58r238
    Adding range [117..123] to allocno a59r239
    Adding range [119..123] to allocno a60r240
    Adding range [121..123] to allocno a61r241
    Adding range [123..123] to allocno a62r242
    Adding range [110..123] to live through  allocno a37r219
    Adding range [110..123] to live through  allocno a38r221
    Adding range [110..123] to live through  allocno a39r222
    Adding range [110..123] to live through  allocno a40r223
    Adding range [110..123] to live through  allocno a41r224
    Adding range [110..123] to live through  allocno a42r226
    Adding cp36:a3r142-a32r231
    Adding range [125..125] to allocno a32r231
    Adding cp37:a12r150-a35r234
    Adding range [125..127] to allocno a35r234
    Adding cp38:a2r152-a36r235
    Adding range [125..129] to allocno a36r235
    Adding range [126..130] to allocno a3r142
    Adding range [128..130] to allocno a12r150
    Adding range [130..130] to allocno a2r152
    Adding cp39:a11r134-a25r227
    Adding range [132..132] to allocno a11r134
    Adding cp40:a3r142-a26r228
    Adding range [132..134] to allocno a3r142
    Adding cp41:a12r150-a27r229
    Adding range [132..136] to allocno a12r150
    Adding cp42:a2r152-a28r230
    Adding range [132..138] to allocno a2r152
    Adding range [133..139] to allocno a25r227
    Adding range [135..139] to allocno a26r228
    Adding range [137..139] to allocno a27r229
    Adding range [139..139] to allocno a28r230
    Adding range [132..139] to live through  allocno a10r214
    Adding cp43:a3r142-a26r228
    Adding range [141..141] to allocno a26r228
    Adding cp44:a2r152-a28r230
    Adding range [141..143] to allocno a28r230
    Adding range [142..144] to allocno a3r142
    Adding range [144..144] to allocno a2r152
scanning new insn with uid = 314.
scanning new insn with uid = 315.
scanning new insn with uid = 316.
scanning new insn with uid = 317.
scanning new insn with uid = 318.
scanning new insn with uid = 324.
scanning new insn with uid = 325.
scanning new insn with uid = 326.
scanning new insn with uid = 327.
scanning new insn with uid = 328.
scanning new insn with uid = 329.
scanning new insn with uid = 330.
scanning new insn with uid = 334.
scanning new insn with uid = 335.
scanning new insn with uid = 336.
scanning new insn with uid = 337.
    New r227: setting preferred GENERAL_REGS, alternative NO_REGS
    New r228: setting preferred GENERAL_REGS, alternative NO_REGS
    New r229: setting preferred GENERAL_REGS, alternative NO_REGS
    New r230: setting preferred GENERAL_REGS, alternative NO_REGS
    New r231: setting preferred GENERAL_REGS, alternative NO_REGS
    New r232: setting preferred GENERAL_REGS, alternative NO_REGS
    New r233: setting preferred GENERAL_REGS, alternative NO_REGS
    New r234: setting preferred GENERAL_REGS, alternative NO_REGS
    New r235: setting preferred GENERAL_REGS, alternative NO_REGS
    New r236: setting preferred GENERAL_REGS, alternative NO_REGS
    New r237: setting preferred GENERAL_REGS, alternative NO_REGS
    New r238: setting preferred GENERAL_REGS, alternative NO_REGS
    New r239: setting preferred GENERAL_REGS, alternative NO_REGS
    New r240: setting preferred GENERAL_REGS, alternative NO_REGS
    New r241: setting preferred GENERAL_REGS, alternative NO_REGS
    New r242: setting preferred GENERAL_REGS, alternative NO_REGS
Flattening IR
      Moving ranges of a68r226 to a42r226:  [72..86]
      Moving ranges of a42r226 to a13r226:  [110..123] [99..108] [46..86]
      Moving ranges of a67r224 to a41r224:  [72..86]
      Moving ranges of a41r224 to a14r224:  [110..123] [99..108] [46..86]
      Moving ranges of a66r223 to a40r223:  [72..86]
      Moving ranges of a40r223 to a16r223:  [110..123] [99..108] [46..86]
      Moving ranges of a65r222 to a39r222:  [72..86]
      Moving ranges of a39r222 to a15r222:  [110..123] [99..108] [46..86]
      Moving ranges of a64r221 to a38r221:  [72..86]
      Moving ranges of a38r221 to a18r221:  [110..123] [99..108] [46..86]
      Moving ranges of a63r219 to a37r219:  [72..86]
      Moving ranges of a37r219 to a19r219:  [110..123] [99..108] [46..86]
      Moving ranges of a29r214 to a10r214:  [40..45]
      Remove cp9:c75r149-c76r199
      Remove cp10:c79r133-c80r195
      Remove cp11:c82r191-c83r189
      Remove cp12:c84r183-c85r184
      Remove cp13:c93r159-c94r137
      Remove cp14:c90r161-c92r160
      Remove cp15:c90r161-c91r138
      Remove cp16:c99r159-c100r137
      Remove cp17:c96r161-c98r160
      Remove cp18:c96r161-c97r138
      Remove a29r214
      Remove a37r219
      Remove a38r221
      Remove a39r222
      Remove a40r223
      Remove a41r224
      Remove a42r226
      Remove a63r219
      Remove a64r221
      Remove a65r222
      Remove a66r223
      Remove a67r224
      Remove a68r226
      Remove a75r149
      Remove a76r199
      Remove a77r139
      Remove a78r135
      Remove a79r133
      Remove a80r195
      Remove a81r151
      Remove a82r191
      Remove a83r189
      Remove a84r183
      Remove a85r184
      Remove a86r181
      Remove a87r136
      Remove a88r168
      Remove a89r163
      Remove a90r161
      Remove a91r138
      Remove a92r160
      Remove a93r159
      Remove a94r137
      Remove a95r158
      Remove a96r161
      Remove a97r138
      Remove a98r160
      Remove a99r159
      Remove a100r137
      Remove a101r158
Compressing live ranges: from 145 to 139 - 95%
Ranges after the compression:
 a0(r213): [0..2]
 a1(r212): [0..1]
 a2(r152): [138..138] [127..133] [126..126] [87..95] [3..39]
 a3(r142): [136..138] [127..129] [122..126] [87..87] [4..28]
 a4(r209): [5..6]
 a5(r208): [7..8]
 a6(r205): [9..10]
 a7(r204): [11..12]
 a8(r201): [13..14]
 a9(r148): [15..16]
 a10(r214): [127..134] [40..45] [17..18]
 a11(r134): [127..127] [17..19]
 a12(r150): [127..131] [124..126] [87..93] [17..29]
 a13(r226): [107..120] [97..106] [87..96] [46..86] [20..21]
 a14(r224): [107..120] [97..106] [87..96] [46..86] [20..22]
 a15(r222): [107..120] [97..106] [87..96] [46..86] [20..23]
 a16(r223): [107..120] [97..106] [87..96] [46..86] [20..24]
 a17(r143): [87..89] [20..25]
 a18(r221): [107..120] [97..106] [87..96] [46..86] [20..26]
 a19(r219): [107..120] [97..106] [87..96] [46..86] [20..27]
 a20(r144): [87..91] [20..37]
 a21(r156): [30..31]
 a22(r155): [32..33]
 a23(r154): [34..35]
 a24(r153): [36..38]
 a25(r227): [128..134] [40..45]
 a26(r228): [135..135] [130..134] [40..45]
 a27(r229): [132..134] [40..45]
 a28(r230): [135..137] [134..134] [40..45]
 a30(r149): [41..42]
 a31(r199): [43..44]
 a32(r231): [121..121] [107..111] [98..106] [88..96] [46..71]
 a33(r232): [107..113] [100..106] [90..96] [46..71]
 a34(r233): [107..115] [102..106] [92..96] [46..71]
 a35(r234): [121..123] [107..117] [104..106] [94..96] [46..71]
 a36(r235): [121..125] [107..119] [106..106] [96..96] [46..71]
 a43(r139): [107..109] [46..47]
 a44(r135): [107..107] [46..48]
 a45(r133): [49..50]
 a46(r195): [51..52]
 a47(r151): [53..57]
 a48(r191): [54..55]
 a49(r189): [56..58]
 a50(r183): [59..60]
 a51(r184): [61..62]
 a52(r181): [63..64]
 a53(r136): [65..66]
 a54(r168): [67..68]
 a55(r163): [69..70]
 a56(r236): [108..120] [72..86]
 a57(r237): [110..120] [72..86]
 a58(r238): [112..120] [97..97] [72..86]
 a59(r239): [114..120] [97..99] [72..86]
 a60(r240): [116..120] [97..101] [72..86]
 a61(r241): [118..120] [97..103] [72..86]
 a62(r242): [120..120] [97..105] [72..86]
 a69(r161): [73..74]
 a70(r138): [81..82] [75..80]
 a71(r160): [75..79]
 a72(r159): [76..77]
 a73(r137): [78..85]
 a74(r158): [83..84]
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 76 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 88 (  2.5)
+++Costs: overall 47750, reg -12250, mem 60000, ld 0, st 0, move 52000
+++       move loops 0, new jumps 3
insn=2, live_throughout: 13, dead_or_set: 0, 152
insn=7, live_throughout: 13, 152, dead_or_set: 153
insn=6, live_throughout: 13, 152, 153, dead_or_set: 144
insn=8, live_throughout: 13, 144, 152, dead_or_set: 153
insn=9, live_throughout: 13, 144, 152, dead_or_set: 
insn=11, live_throughout: 13, 144, 152, dead_or_set: 154
insn=12, live_throughout: 13, 144, 152, dead_or_set: 154
insn=13, live_throughout: 13, 144, 152, dead_or_set: 155
insn=14, live_throughout: 13, 144, 152, dead_or_set: 155
insn=15, live_throughout: 13, 144, 152, dead_or_set: 156
insn=16, live_throughout: 13, 144, 152, dead_or_set: 156
insn=17, live_throughout: 13, 144, 152, dead_or_set: 
insn=283, live_throughout: 13, 144, 152, dead_or_set: 150
insn=21, live_throughout: 13, 144, 150, 152, dead_or_set: 142
insn=55, live_throughout: 13, 142, 144, 150, 152, dead_or_set: 219
insn=70, live_throughout: 13, 142, 144, 150, 152, 219, dead_or_set: 221
insn=19, live_throughout: 13, 142, 144, 152, 219, 221, dead_or_set: 143, 150
insn=78, live_throughout: 13, 142, 143, 144, 150, 152, 219, 221, dead_or_set: 223
insn=94, live_throughout: 13, 142, 143, 144, 150, 152, 219, 221, 223, dead_or_set: 222
insn=106, live_throughout: 13, 142, 143, 144, 150, 152, 219, 221, 222, 223, dead_or_set: 224
insn=109, live_throughout: 13, 142, 143, 144, 150, 152, 219, 221, 222, 223, 224, dead_or_set: 226
insn=314, live_throughout: 13, 143, 144, 150, 152, 219, 221, 222, 223, 224, 226, dead_or_set: 142, 231
insn=315, live_throughout: 13, 144, 150, 152, 219, 221, 222, 223, 224, 226, 231, dead_or_set: 143, 232
insn=316, live_throughout: 13, 150, 152, 219, 221, 222, 223, 224, 226, 231, 232, dead_or_set: 144, 233
insn=317, live_throughout: 13, 152, 219, 221, 222, 223, 224, 226, 231, 232, 233, dead_or_set: 150, 234
insn=318, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, dead_or_set: 152, 235
insn=284, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=51, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=25, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 137
insn=26, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=27, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=29, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 158
insn=31, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 158
insn=32, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=34, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 138
insn=286, live_throughout: 13, 137, 138, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=37, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=39, live_throughout: 13, 137, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 138
insn=40, live_throughout: 13, 137, 138, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=44, live_throughout: 13, 137, 138, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 160
insn=42, live_throughout: 13, 138, 160, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 137, 159
insn=43, live_throughout: 13, 138, 160, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 159
insn=45, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 138, 160, 161
insn=46, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 161
insn=47, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=49, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 238, 239, 240, 241, 242, dead_or_set: 237
insn=50, live_throughout: 13, 219, 221, 222, 223, 224, 226, 237, 238, 239, 240, 241, 242, dead_or_set: 236
insn=52, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=53, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=319, live_throughout: 13, 219, 221, 222, 223, 224, 226, 239, 240, 241, 242, dead_or_set: 231, 238
insn=320, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 240, 241, 242, dead_or_set: 232, 239
insn=321, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 241, 242, dead_or_set: 233, 240
insn=322, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 242, dead_or_set: 234, 241
insn=323, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, dead_or_set: 235, 242
insn=56, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0
insn=271, live_throughout: 0, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 2
insn=57, live_throughout: 0, 2, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 1
insn=59, live_throughout: 0, 1, 2, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 3
insn=60, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0, 1, 2, 3, 14
insn=61, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 163
insn=63, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 163
insn=64, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=303, live_throughout: 13, 219, 221, 222, 223, 224, 226, 232, 233, 234, 235, dead_or_set: 231
insn=304, live_throughout: 13, 219, 221, 222, 223, 224, 226, 232, 233, 234, 235, dead_or_set: 231
insn=305, live_throughout: 13, 219, 221, 222, 223, 224, 226, 232, 233, 234, 235, dead_or_set: 231
insn=68, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=72, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 168
insn=74, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 168
insn=75, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=77, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 136
insn=90, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 136
insn=91, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=92, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=95, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 181
insn=96, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 181
insn=97, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=98, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=300, live_throughout: 13, 219, 221, 222, 223, 224, 226, 232, 233, 234, 235, dead_or_set: 231
insn=301, live_throughout: 13, 219, 221, 222, 223, 224, 226, 232, 233, 234, 235, dead_or_set: 231
insn=302, live_throughout: 13, 219, 221, 222, 223, 224, 226, 232, 233, 234, 235, dead_or_set: 231
insn=102, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=104, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 184
insn=105, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 183, 184
insn=107, live_throughout: 13, 183, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=108, live_throughout: 13, 183, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=110, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 183
insn=111, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=289, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=114, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=118, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 1
insn=120, live_throughout: 1, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 3
insn=117, live_throughout: 1, 3, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0
insn=277, live_throughout: 0, 1, 3, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 2
insn=121, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0, 1, 2, 3, 14
insn=122, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 189
insn=297, live_throughout: 13, 189, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 151
insn=278, live_throughout: 13, 151, 189, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 2
insn=125, live_throughout: 2, 13, 151, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 189, 191
insn=298, live_throughout: 2, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 151, 191
insn=128, live_throughout: 2, 13, 151, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=132, live_throughout: 2, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 3, 151
insn=129, live_throughout: 2, 3, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0
insn=130, live_throughout: 0, 2, 3, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 1
insn=133, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0, 1, 2, 3, 14
insn=291, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=136, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=140, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 1
insn=281, live_throughout: 1, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 2
insn=142, live_throughout: 1, 2, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 3
insn=139, live_throughout: 1, 2, 3, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0
insn=143, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0, 1, 2, 3, 14
insn=144, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 195
insn=282, live_throughout: 13, 195, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 2
insn=147, live_throughout: 2, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 133, 195
insn=148, live_throughout: 2, 13, 133, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=152, live_throughout: 2, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 3, 133
insn=149, live_throughout: 2, 3, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0
insn=150, live_throughout: 0, 2, 3, 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 1
insn=153, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 0, 1, 2, 3, 14
insn=154, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=156, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 233, 234, 235, dead_or_set: 232
insn=158, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=160, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=161, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 
insn=163, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 135
insn=269, live_throughout: 13, 135, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 139
insn=324, live_throughout: 13, 139, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, dead_or_set: 135, 236
insn=325, live_throughout: 13, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 235, 236, dead_or_set: 139, 237
insn=326, live_throughout: 13, 219, 221, 222, 223, 224, 226, 232, 233, 234, 235, 236, 237, dead_or_set: 231, 238
insn=327, live_throughout: 13, 219, 221, 222, 223, 224, 226, 233, 234, 235, 236, 237, 238, dead_or_set: 232, 239
insn=328, live_throughout: 13, 219, 221, 222, 223, 224, 226, 234, 235, 236, 237, 238, 239, dead_or_set: 233, 240
insn=329, live_throughout: 13, 219, 221, 222, 223, 224, 226, 235, 236, 237, 238, 239, 240, dead_or_set: 234, 241
insn=330, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, dead_or_set: 235, 242
insn=293, live_throughout: 13, 219, 221, 222, 223, 224, 226, 236, 237, 238, 239, 240, 241, 242, dead_or_set: 
insn=167, live_throughout: 13, 231, 234, 235, dead_or_set: 
insn=331, live_throughout: 13, 234, 235, dead_or_set: 142, 231
insn=332, live_throughout: 13, 142, 235, dead_or_set: 150, 234
insn=333, live_throughout: 13, 142, 150, dead_or_set: 152, 235
insn=169, live_throughout: 13, 142, 150, 152, dead_or_set: 134
insn=173, live_throughout: 13, 134, 142, 150, 152, dead_or_set: 214
insn=334, live_throughout: 13, 142, 150, 152, 214, dead_or_set: 134, 227
insn=335, live_throughout: 13, 150, 152, 214, 227, dead_or_set: 142, 228
insn=336, live_throughout: 13, 152, 214, 227, 228, dead_or_set: 150, 229
insn=337, live_throughout: 13, 214, 227, 228, 229, dead_or_set: 152, 230
insn=295, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 
insn=198, live_throughout: 2, 3, 13, 214, 227, 228, 229, 230, dead_or_set: 
insn=175, live_throughout: 2, 3, 13, 214, 227, 228, 229, 230, dead_or_set: 1
insn=174, live_throughout: 1, 2, 3, 13, 214, 227, 228, 229, 230, dead_or_set: 0
insn=178, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 0, 1, 2, 3, 14
insn=179, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 199
insn=266, live_throughout: 13, 199, 214, 227, 228, 229, 230, dead_or_set: 2
insn=182, live_throughout: 2, 13, 214, 227, 228, 229, 230, dead_or_set: 149, 199
insn=183, live_throughout: 2, 13, 149, 214, 227, 228, 229, 230, dead_or_set: 
insn=187, live_throughout: 2, 13, 214, 227, 228, 229, 230, dead_or_set: 3, 149
insn=185, live_throughout: 2, 3, 13, 214, 227, 228, 229, 230, dead_or_set: 1
insn=184, live_throughout: 1, 2, 3, 13, 214, 227, 228, 229, 230, dead_or_set: 0
insn=188, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 0, 1, 2, 3, 14
insn=189, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 0
insn=190, live_throughout: 0, 13, 214, 227, 228, 229, 230, dead_or_set: 1
insn=267, live_throughout: 0, 1, 13, 214, 227, 228, 229, 230, dead_or_set: 2
insn=268, live_throughout: 0, 1, 2, 13, 214, 227, 228, 229, 230, dead_or_set: 3
insn=193, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 0, 1, 2, 3, 14
insn=194, live_throughout: 13, 214, 228, 229, 230, dead_or_set: 227
insn=196, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 
insn=265, live_throughout: 13, 214, 227, 228, 229, 230, dead_or_set: 2
insn=177, live_throughout: 2, 13, 214, 227, 228, 229, 230, dead_or_set: 3
insn=199, live_throughout: 2, 3, 13, 214, 227, 228, 229, 230, dead_or_set: 
insn=200, live_throughout: 2, 3, 13, 214, 227, 228, 229, 230, dead_or_set: 
insn=338, live_throughout: 13, 230, dead_or_set: 142, 228
insn=339, live_throughout: 13, 142, dead_or_set: 152, 230
insn=202, live_throughout: 13, 142, 152, dead_or_set: 148
insn=203, live_throughout: 13, 142, 148, 152, dead_or_set: 
insn=204, live_throughout: 13, 142, 148, 152, dead_or_set: 
insn=206, live_throughout: 13, 142, 152, dead_or_set: 148, 201
insn=207, live_throughout: 13, 142, 152, dead_or_set: 201
insn=208, live_throughout: 13, 142, 152, dead_or_set: 
insn=212, live_throughout: 13, 142, 152, dead_or_set: 
insn=213, live_throughout: 13, 142, 152, dead_or_set: 
insn=215, live_throughout: 13, 142, 152, dead_or_set: 204
insn=217, live_throughout: 13, 142, 152, dead_or_set: 204, 205
insn=218, live_throughout: 13, 142, 152, dead_or_set: 205
insn=219, live_throughout: 13, 142, 152, dead_or_set: 
insn=222, live_throughout: 13, 142, 152, dead_or_set: 
insn=223, live_throughout: 13, 142, 152, dead_or_set: 
insn=225, live_throughout: 13, 142, 152, dead_or_set: 208
insn=227, live_throughout: 13, 142, 152, dead_or_set: 208, 209
insn=228, live_throughout: 13, 142, 152, dead_or_set: 209
insn=229, live_throughout: 13, 142, 152, dead_or_set: 
insn=260, live_throughout: 13, 152, dead_or_set: 142
insn=246, live_throughout: 13, 24, dead_or_set: 1, 152
insn=312, live_throughout: 1, 13, 24, dead_or_set: 213
insn=313, live_throughout: 1, 13, 24, 213, dead_or_set: 212
insn=247, live_throughout: 1, 13, dead_or_set: 2, 212, 213
insn=245, live_throughout: 1, 2, 13, dead_or_set: 0
insn=248, live_throughout: 13, dead_or_set: 0, 1, 2, 14
init_insns for 153: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 158: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 159: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 95 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 104 (nil))
init_insns for 212: (insn_list:REG_DEP_TRUE 313 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 312 (nil))
init_insns for 214: (insn_list:REG_DEP_TRUE 173 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 55 (nil))
init_insns for 221: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 222: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 223: (insn_list:REG_DEP_TRUE 78 (nil))
init_insns for 224: (insn_list:REG_DEP_TRUE 106 (nil))
init_insns for 226: (insn_list:REG_DEP_TRUE 109 (nil))
changing reg in insn 147
changing reg in insn 152
changing reg in insn 169
changing reg in insn 334
changing reg in insn 163
changing reg in insn 324
changing reg in insn 77
changing reg in insn 90
changing reg in insn 90
changing reg in insn 25
changing reg in insn 42
changing reg in insn 26
changing reg in insn 34
changing reg in insn 39
changing reg in insn 45
changing reg in insn 42
changing reg in insn 269
changing reg in insn 325
changing reg in insn 338
changing reg in insn 331
changing reg in insn 21
changing reg in insn 335
changing reg in insn 314
changing reg in insn 260
changing reg in insn 222
changing reg in insn 212
changing reg in insn 19
changing reg in insn 315
changing reg in insn 6
changing reg in insn 316
changing reg in insn 15
changing reg in insn 13
changing reg in insn 11
changing reg in insn 15
changing reg in insn 13
changing reg in insn 11
changing reg in insn 202
changing reg in insn 206
changing reg in insn 203
changing reg in insn 182
changing reg in insn 187
changing reg in insn 332
changing reg in insn 283
changing reg in insn 19
changing reg in insn 336
changing reg in insn 317
changing reg in insn 19
changing reg in insn 19
changing reg in insn 298
changing reg in insn 297
changing reg in insn 298
changing reg in insn 132
changing reg in insn 339
changing reg in insn 333
changing reg in insn 2
changing reg in insn 337
changing reg in insn 318
changing reg in insn 246
changing reg in insn 283
changing reg in insn 228
changing reg in insn 225
changing reg in insn 218
changing reg in insn 215
changing reg in insn 202
changing reg in insn 169
changing reg in insn 16
changing reg in insn 14
changing reg in insn 12
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 29
changing reg in insn 31
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 61
changing reg in insn 63
changing reg in insn 72
changing reg in insn 74
changing reg in insn 74
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 105
changing reg in insn 110
changing reg in insn 107
changing reg in insn 110
changing reg in insn 107
changing reg in insn 104
changing reg in insn 105
changing reg in insn 122
changing reg in insn 125
changing reg in insn 125
changing reg in insn 298
changing reg in insn 144
changing reg in insn 147
changing reg in insn 179
changing reg in insn 182
changing reg in insn 206
changing reg in insn 207
changing reg in insn 215
changing reg in insn 217
changing reg in insn 217
changing reg in insn 225
changing reg in insn 227
changing reg in insn 227
changing reg in insn 313
changing reg in insn 247
changing reg in insn 312
changing reg in insn 247
changing reg in insn 173
changing reg in insn 177
changing reg in insn 55
changing reg in insn 142
changing reg in insn 120
changing reg in insn 59
changing reg in insn 70
changing reg in insn 74
changing reg in insn 78
changing reg in insn 90
changing reg in insn 334
changing reg in insn 194
changing reg in insn 194
changing reg in insn 190
changing reg in insn 189
changing reg in insn 184
changing reg in insn 185
changing reg in insn 174
changing reg in insn 175
changing reg in insn 199
changing reg in insn 335
changing reg in insn 338
changing reg in insn 182
changing reg in insn 336
changing reg in insn 199
changing reg in insn 337
changing reg in insn 339
changing reg in insn 314
changing reg in insn 319
changing reg in insn 305
changing reg in insn 304
changing reg in insn 303
changing reg in insn 302
changing reg in insn 301
changing reg in insn 300
changing reg in insn 326
changing reg in insn 331
changing reg in insn 305
changing reg in insn 304
changing reg in insn 303
changing reg in insn 302
changing reg in insn 301
changing reg in insn 300
changing reg in insn 315
changing reg in insn 320
changing reg in insn 156
changing reg in insn 327
changing reg in insn 57
changing reg in insn 56
changing reg in insn 72
changing reg in insn 77
changing reg in insn 95
changing reg in insn 104
changing reg in insn 130
changing reg in insn 129
changing reg in insn 117
changing reg in insn 118
changing reg in insn 150
changing reg in insn 149
changing reg in insn 139
changing reg in insn 140
changing reg in insn 156
changing reg in insn 160
changing reg in insn 163
changing reg in insn 95
changing reg in insn 104
changing reg in insn 316
changing reg in insn 321
changing reg in insn 328
changing reg in insn 317
changing reg in insn 322
changing reg in insn 329
changing reg in insn 332
changing reg in insn 160
changing reg in insn 318
changing reg in insn 323
changing reg in insn 330
changing reg in insn 333
changing reg in insn 324
changing reg in insn 50
changing reg in insn 25
changing reg in insn 29
changing reg in insn 46
changing reg in insn 43
changing reg in insn 44
changing reg in insn 50
changing reg in insn 29
changing reg in insn 45
changing reg in insn 42
changing reg in insn 44
changing reg in insn 325
changing reg in insn 49
changing reg in insn 52
changing reg in insn 49
changing reg in insn 326
changing reg in insn 319
changing reg in insn 327
changing reg in insn 320
changing reg in insn 328
changing reg in insn 321
changing reg in insn 34
changing reg in insn 39
changing reg in insn 329
changing reg in insn 322
changing reg in insn 330
changing reg in insn 323
Spilling for insn 12.
Spilling for insn 14.
Spilling for insn 16.
Spilling for insn 43.
Spilling for insn 46.
Spilling for insn 96.
Using reg 2 for reload 0
Spilling for insn 107.
Using reg 2 for reload 0
Spilling for insn 110.
Using reg 2 for reload 0
Spilling for insn 128.
Spilling for insn 148.
Spilling for insn 183.
Spilling for insn 218.
Spilling for insn 228.
deleting insn with uid = 94.
deleting insn with uid = 106.
deleting insn with uid = 109.

Reloads for insn # 12
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 40 [0x28])) [0 <variable>.resource+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 40 [0x28])) [0 <variable>.resource+0 S4 A64])

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 44 [0x2c])) [0 <variable>.resource+4 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 44 [0x2c])) [0 <variable>.resource+4 S4 A32])

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 48 [0x30])) [0 <variable>.resource+8 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 48 [0x30])) [0 <variable>.resource+8 S4 A64])

Reloads for insn # 43
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                                                        (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])

Reloads for insn # 46
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                                                        (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])

Reloads for insn # 96
Reload 0: reload_in (SI) = (const_int -2125327741 [0xffffffff81521283])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), can't combine
	reload_in_reg: (reg:SI 222)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 107
Reload 0: reload_in (SI) = (const_int 1540 [0x604])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), can't combine
	reload_in_reg: (reg:SI 224)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 110
Reload 0: reload_in (SI) = (const_int 1543 [0x607])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), can't combine
	reload_in_reg: (reg:SI 226)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 128
Reload 0: reload_out (HI) = (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 status+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 status+0 S2 A16])

Reloads for insn # 148
Reload 0: reload_out (HI) = (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 status+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 status+0 S2 A16])

Reloads for insn # 183
Reload 0: reload_out (HI) = (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 6 [0x6])) [0 cmd+0 S2 A16])

Reloads for insn # 218
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])

Reloads for insn # 228
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                                                        (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])
deleting insn with uid = 314.
deleting insn with uid = 315.
deleting insn with uid = 316.
deleting insn with uid = 317.
deleting insn with uid = 318.
deleting insn with uid = 319.
deleting insn with uid = 320.
deleting insn with uid = 321.
deleting insn with uid = 322.
deleting insn with uid = 323.
deleting insn with uid = 132.
deleting insn with uid = 152.
deleting insn with uid = 324.
deleting insn with uid = 325.
deleting insn with uid = 326.
deleting insn with uid = 327.
deleting insn with uid = 328.
deleting insn with uid = 329.
deleting insn with uid = 330.
deleting insn with uid = 331.
deleting insn with uid = 332.
deleting insn with uid = 333.
deleting insn with uid = 334.
deleting insn with uid = 335.
deleting insn with uid = 336.
deleting insn with uid = 337.
deleting insn with uid = 187.
deleting insn with uid = 338.
deleting insn with uid = 339.


try_optimize_cfg iteration 1

Forwarding edge 18->19 to 21 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 121.
verify found no changes in insn with uid = 133.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 188.
verify found no changes in insn with uid = 193.
verify found no changes in insn with uid = 248.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 86 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 35 n_edges 50 count 90 (  2.6)


pcibios_fixup_bus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,13u} r1={25d,15u} r2={25d,15u} r3={40d,40u,8d} r4={4d,25u,2d} r5={7d,10u} r6={1d,13u,1d} r7={2d,6u,3d} r8={2d,4u} r9={1d,1u} r10={1d,3u} r11={1d,1u} r12={11d,1u} r13={1d,52u,2d} r14={10d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={26d,17u} r25={4d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} 
;;    total ref usage 1405{1168d,217u,20e} in 148{139 regular + 9 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 7 2 arch/arm/kernel/bios32.c:339 (set (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
        (reg:SI 0 r0 [ bus ])) 167 {*arm_movsi_insn} (nil))

(insn 7 2 6 2 arch/arm/kernel/bios32.c:322 (set (reg/f:SI 3 r3 [orig:153 <variable>.self ] [153])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 28 [0x1c])) [0 <variable>.self+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 28 [0x1c])) [0 <variable>.self+0 S4 A32])
        (nil)))

(insn 6 7 8 2 arch/arm/kernel/bios32.c:340 (set (reg/v/f:SI 7 r7 [orig:144 root ] [144])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 68 [0x44])) [0 <variable>.sysdata+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 6 9 2 arch/arm/kernel/bios32.c:322 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:153 <variable>.self ] [153])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/bios32.c:322 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [15.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/bios32.c:330 (set (reg/f:SI 3 r3 [orig:154 <variable>.resource ] [154])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/bios32.c:330 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 40 [0x28])) [0 <variable>.resource+0 S4 A64])
        (reg/f:SI 3 r3 [orig:154 <variable>.resource ] [154])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/bios32.c:330 (set (reg/f:SI 3 r3 [orig:155 <variable>.resource+4 ] [155])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/bios32.c:330 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 44 [0x2c])) [0 <variable>.resource+4 S4 A32])
        (reg/f:SI 3 r3 [orig:155 <variable>.resource+4 ] [155])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/kernel/bios32.c:330 (set (reg/f:SI 3 r3 [orig:156 <variable>.resource+8 ] [156])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 40 [0x28])) [0 <variable>.resource+8 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 40 [0x28])) [0 <variable>.resource+8 S4 A64])
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/bios32.c:330 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 48 [0x30])) [0 <variable>.resource+8 S4 A64])
        (reg/f:SI 3 r3 [orig:156 <variable>.resource+8 ] [156])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [85.0%] 
(code_label 17 16 18 4 93 "" [1 uses])

(note 18 17 283 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 283 18 21 4 arch/arm/kernel/bios32.c:350 (set (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
        (reg/v/f:SI 6 r6 [orig:152 bus ] [152])) 167 {*arm_movsi_insn} (nil))

(insn 21 283 55 4 arch/arm/kernel/bios32.c:342 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (const_int 832 [0x340])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 832 [0x340])
        (nil)))

(insn 55 21 70 4 include/linux/pci.h:755 (set (reg/f:SI 10 sl [219])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))
        (nil)))

(insn 70 55 19 4 arch/arm/kernel/bios32.c:289 (set (reg:SI 9 r9 [221])
        (const_int 4330 [0x10ea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4330 [0x10ea])
        (nil)))

(insn 19 70 78 4 arch/arm/kernel/bios32.c:350 (set (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
        (mem/s/f/j:SI (pre_modify:SI (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
                (plus:SI (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
                    (const_int 20 [0x14]))) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 8 r8 [orig:150 D.18622 ] [150])
        (nil)))

(insn 78 19 94 4 arch/arm/kernel/bios32.c:289 discrim 1 (set (reg:SI 11 fp [223])
        (const_int 8208 [0x2010])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8208 [0x2010])
        (nil)))

(note 94 78 106 4 NOTE_INSN_DELETED)

(note 106 94 109 4 NOTE_INSN_DELETED)

(note 109 106 284 4 NOTE_INSN_DELETED)

(jump_insn 284 109 285 4 arch/arm/kernel/bios32.c:350 (set (pc)
        (label_ref 158)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [100.0%] 

(barrier 285 284 51)

;; Start of basic block ( 10 24) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  10 [91.7%]  (dfs_back)
;; Pred edge  24 [100.0%] 
(code_label 51 285 24 5 98 "" [2 uses])

(note 24 51 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/kernel/bios32.c:307 (set (reg:SI 0 r0 [orig:137 D.19109 ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/kernel/bios32.c:307 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:137 D.19109 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 5 arch/arm/kernel/bios32.c:307 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 28 27 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 30 28 29 6 NOTE_INSN_DELETED)

(insn 29 30 31 6 arch/arm/kernel/bios32.c:309 (set (reg:SI 1 r1 [orig:158 <variable>.flags ] [158])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 476 [0x1dc])) [0 <variable>.flags+0 S4 A32])
        (nil)))

(insn 31 29 32 6 arch/arm/kernel/bios32.c:309 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 1 r1 [orig:158 <variable>.flags ] [158])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 32 31 33 6 arch/arm/kernel/bios32.c:309 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 286 7 arch/arm/kernel/bios32.c:310 (set (reg/v:SI 1 r1 [orig:138 offset ] [138])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 16 [0x10])) [0 <variable>.mem_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(jump_insn 286 34 287 7 (set (pc)
        (label_ref 40)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%] 

(barrier 287 286 37)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  6 [50.0%] 
(code_label 37 287 38 8 96 "" [1 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 arch/arm/kernel/bios32.c:312 (set (reg/v:SI 1 r1 [orig:138 offset ] [138])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:144 root ] [144])
                (const_int 24 [0x18])) [0 <variable>.io_offset+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 12 [ip]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 12 [ip]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 40 39 41 9 97 "" [1 uses])

(note 41 40 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 41 42 9 arch/arm/kernel/bios32.c:315 (set (reg:SI 12 ip [orig:160 <variable>.end ] [160])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 42 44 43 9 arch/arm/kernel/bios32.c:314 (set (reg:SI 0 r0 [159])
        (plus:SI (reg/v:SI 1 r1 [orig:138 offset ] [138])
            (reg:SI 0 r0 [orig:137 D.19109 ] [137]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 43 42 45 9 arch/arm/kernel/bios32.c:314 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
        (reg:SI 0 r0 [159])) 167 {*arm_movsi_insn} (nil))

(insn 45 43 46 9 arch/arm/kernel/bios32.c:315 (set (reg:SI 1 r1 [161])
        (plus:SI (reg:SI 12 ip [orig:160 <variable>.end ] [160])
            (reg/v:SI 1 r1 [orig:138 offset ] [138]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 46 45 47 9 arch/arm/kernel/bios32.c:315 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
                (const_int 468 [0x1d4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 1 r1 [161])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 5 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 47 46 48 10 95 "" [1 uses])

(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 10 arch/arm/kernel/bios32.c:306 (set (reg/v:SI 2 r2 [orig:139 i ] [139])
        (plus:SI (reg/v:SI 2 r2 [orig:139 i ] [139])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 50 49 52 10 arch/arm/kernel/bios32.c:306 (set (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
        (plus:SI (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 52 50 53 10 arch/arm/kernel/bios32.c:306 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 2 r2 [orig:139 i ] [139])
            (const_int 11 [0xb]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 10 arch/arm/kernel/bios32.c:306 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9167 [0x23cf])
        (nil)))
;; End of basic block 10 -> ( 5 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [91.7%]  (dfs_back)
;; Succ edge  11 [8.3%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [8.3%]  (fallthru,loop_exit)
(note 54 53 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 62 54 56 11 NOTE_INSN_DELETED)

(insn 56 62 271 11 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 271 56 57 11 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 57 271 59 11 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 59 57 60 11 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [219])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(call_insn 60 59 61 11 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 61 60 63 11 arch/arm/kernel/bios32.c:363 (set (reg:SI 3 r3 [orig:163 status ] [163])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 63 61 64 11 arch/arm/kernel/bios32.c:363 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:163 status ] [163])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 64 63 65 11 arch/arm/kernel/bios32.c:363 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 65 64 303 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 303 65 304 12 arch/arm/kernel/bios32.c:364 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (and:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 4294966783 [0xfffffdff]))) 67 {*arm_andsi3_insn} (nil))

(insn 304 303 305 12 arch/arm/kernel/bios32.c:364 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (ashift:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 305 304 68 12 arch/arm/kernel/bios32.c:364 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 68 305 69 13 99 "" [1 uses])

(note 69 68 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 72 69 74 13 arch/arm/kernel/bios32.c:289 (set (reg:SI 3 r3 [orig:168 <variable>.vendor ] [168])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                    (const_int 32 [0x20])) [0 <variable>.vendor+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 74 72 75 13 arch/arm/kernel/bios32.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:168 <variable>.vendor ] [168])
            (reg:SI 9 r9 [221]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:168 <variable>.vendor ] [168])
            (const_int 4330 [0x10ea]))
        (nil)))

(jump_insn 75 74 76 13 arch/arm/kernel/bios32.c:289 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [28.0%]  (fallthru)
(note 76 75 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 81 76 82 14 NOTE_INSN_DELETED)

(note 82 81 84 14 NOTE_INSN_DELETED)

(note 84 82 85 14 NOTE_INSN_DELETED)

(note 85 84 87 14 NOTE_INSN_DELETED)

(note 87 85 88 14 NOTE_INSN_DELETED)

(note 88 87 89 14 NOTE_INSN_DELETED)

(note 89 88 77 14 NOTE_INSN_DELETED)

(insn 77 89 90 14 arch/arm/kernel/bios32.c:290 (set (reg:SI 3 r3 [orig:136 D.19123 ] [136])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                    (const_int 34 [0x22])) [0 <variable>.device+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 90 77 91 14 arch/arm/kernel/bios32.c:290 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg:SI 3 r3 [orig:136 D.19123 ] [136])
                    (reg:SI 11 fp [223]))
                (eq:SI (reg:SI 3 r3 [orig:136 D.19123 ] [136])
                    (const_int 8192 [0x2000])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (nil))

(jump_insn 91 90 92 14 arch/arm/kernel/bios32.c:290 (set (pc)
        (if_then_else (ne (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [72.0%] 
;; Pred edge  14 [50.0%]  (fallthru)
(code_label 92 91 93 15 100 "" [1 uses])

(note 93 92 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 93 341 15 arch/arm/kernel/bios32.c:292 (set (reg:SI 3 r3 [181])
        (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 32 [0x20])) [0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 32 [0x20])) [0 S4 A64])
        (nil)))

(insn 341 95 96 15 arch/arm/kernel/bios32.c:292 (set (reg:SI 2 r2)
        (const_int -2125327741 [0xffffffff81521283])) 167 {*arm_movsi_insn} (nil))

(insn 96 341 97 15 arch/arm/kernel/bios32.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [181])
            (reg:SI 2 r2))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [181])
            (const_int -2125327741 [0xffffffff81521283]))
        (nil)))

(jump_insn 97 96 98 15 arch/arm/kernel/bios32.c:292 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [28.0%]  (fallthru)
;; Succ edge  17 [72.0%] 

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  14 [50.0%] 
;; Pred edge  15 [28.0%]  (fallthru)
(code_label 98 97 99 16 101 "" [1 uses])

(note 99 98 300 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 300 99 301 16 arch/arm/kernel/bios32.c:367 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (and:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 4294966975 [0xfffffebf]))) 67 {*arm_andsi3_insn} (nil))

(insn 301 300 302 16 arch/arm/kernel/bios32.c:367 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (ashift:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 302 301 102 16 arch/arm/kernel/bios32.c:367 (set (reg/v:SI 5 r5 [orig:142 features ] [142])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  15 [72.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 102 302 103 17 102 "" [1 uses])

(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 17 arch/arm/kernel/bios32.c:369 (set (reg:SI 3 r3 [orig:184 <variable>.class ] [184])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 40 [0x28])) [0 <variable>.class+0 S4 A64])
        (nil)))

(insn 105 104 342 17 arch/arm/kernel/bios32.c:369 (set (reg:SI 3 r3 [183])
        (lshiftrt:SI (reg:SI 3 r3 [orig:184 <variable>.class ] [184])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 342 105 107 17 arch/arm/kernel/bios32.c:369 (set (reg:SI 2 r2)
        (const_int 1540 [0x604])) 167 {*arm_movsi_insn} (nil))

(insn 107 342 108 17 arch/arm/kernel/bios32.c:369 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [183])
            (reg:SI 2 r2))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [183])
            (const_int 1540 [0x604]))
        (nil)))

(jump_insn 108 107 254 17 arch/arm/kernel/bios32.c:369 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 17 -> ( 20 18)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [29.0%] 
;; Succ edge  18 [71.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  17 [71.0%]  (fallthru)
(note 254 108 343 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 343 254 110 18 arch/arm/kernel/bios32.c:369 (set (reg:SI 2 r2)
        (const_int 1543 [0x607])) 167 {*arm_movsi_insn} (nil))

(insn 110 343 111 18 arch/arm/kernel/bios32.c:369 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [183])
            (reg:SI 2 r2))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [183])
            (const_int 1543 [0x607]))
        (nil)))

(jump_insn 111 110 288 18 arch/arm/kernel/bios32.c:369 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 18 -> ( 19 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [29.0%]  (fallthru)
;; Succ edge  22 [71.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [29.0%]  (fallthru)
(note 288 111 289 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 289 288 290 19 (set (pc)
        (label_ref 136)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 290 289 114)

;; Start of basic block ( 17) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  17 [29.0%] 
(code_label 114 290 115 20 104 "" [1 uses])

(note 115 114 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 124 115 118 20 NOTE_INSN_DELETED)

(insn 118 124 120 20 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 120 118 117 20 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [219])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 117 120 277 20 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 277 117 121 20 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(call_insn 121 277 122 20 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 122 121 297 20 arch/arm/kernel/bios32.c:373 (set (reg:SI 1 r1 [orig:189 status ] [189])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 297 122 278 20 arch/arm/kernel/bios32.c:373 (set (reg:SI 3 r3 [orig:151 status.302 ] [151])
        (const_int 65343 [0xff3f])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 65343 [0xff3f])
        (nil)))

(insn 278 297 125 20 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(insn 125 278 298 20 arch/arm/kernel/bios32.c:373 (set (reg:SI 1 r1 [191])
        (ior:SI (reg:SI 1 r1 [orig:189 status ] [189])
            (const_int 33 [0x21]))) 89 {*arm_iorsi3} (nil))

(insn 298 125 128 20 arch/arm/kernel/bios32.c:373 (set (reg:SI 3 r3 [orig:151 status.302 ] [151])
        (and:SI (reg:SI 1 r1 [191])
            (reg:SI 3 r3 [orig:151 status.302 ] [151]))) 67 {*arm_andsi3_insn} (nil))

(insn 128 298 129 20 arch/arm/kernel/bios32.c:373 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 status+0 S2 A16])
        (reg:HI 3 r3 [orig:151 status.302 ] [151])) 176 {*movhi_insn_arch4} (nil))

(insn 129 128 130 20 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 133 20 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 133 130 291 20 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 291 133 292 20 arch/arm/kernel/bios32.c:375 (set (pc)
        (label_ref 154)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [100.0%] 

(barrier 292 291 136)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  19 [100.0%] 
(code_label 136 292 137 21 105 "" [1 uses])

(note 137 136 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 146 137 140 21 NOTE_INSN_DELETED)

(insn 140 146 281 21 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 281 140 142 21 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(insn 142 281 139 21 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [219])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 139 142 143 21 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 143 139 144 21 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 144 143 282 21 arch/arm/kernel/bios32.c:379 (set (reg:SI 3 r3 [orig:195 status ] [195])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 282 144 147 21 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 62 [0x3e])) 167 {*arm_movsi_insn} (nil))

(insn 147 282 148 21 arch/arm/kernel/bios32.c:379 (set (reg:SI 3 r3 [orig:133 status.767 ] [133])
        (ior:SI (reg:SI 3 r3 [orig:195 status ] [195])
            (const_int 33 [0x21]))) 89 {*arm_iorsi3} (nil))

(insn 148 147 149 21 arch/arm/kernel/bios32.c:379 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 status+0 S2 A16])
        (reg:HI 3 r3 [orig:133 status.767 ] [133])) 176 {*movhi_insn_arch4} (nil))

(insn 149 148 150 21 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 153 21 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 153 150 154 21 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 21 -> ( 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 18 21 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  18 [71.0%] 
;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 154 153 155 22 103 "" [2 uses])

(note 155 154 156 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 158 22 arch/arm/kernel/bios32.c:350 (set (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:143 dev ] [143]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 22 4) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 158 156 159 23 94 "" [1 uses])

(note 159 158 160 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 23 arch/arm/kernel/bios32.c:350 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:143 dev ] [143])
            (reg/f:SI 8 r8 [orig:150 D.18622 ] [150]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 161 160 162 23 arch/arm/kernel/bios32.c:350 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 167)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [0.0%]  (fallthru)
;; Succ edge  25 [100.0%]  (loop_exit)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  23 [0.0%]  (fallthru)
(note 162 161 163 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 269 24 arch/arm/kernel/bios32.c:350 discrim 1 (set (reg:SI 3 r3 [orig:135 ivtmp.761 ] [135])
        (reg/v/f:SI 4 r4 [orig:143 dev ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 269 163 293 24 arch/arm/kernel/bios32.c:350 discrim 1 (set (reg/v:SI 2 r2 [orig:139 i ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 293 269 294 24 (set (pc)
        (label_ref 51)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 5)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 294 293 167)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 4 [r4] 7 [r7]
;; live  in  	 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 4 [r4] 7 [r7]
;; live  kill	

;; Pred edge  23 [100.0%]  (loop_exit)
(code_label 167 294 168 25 106 "" [1 uses])

(note 168 167 169 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 173 25 arch/arm/kernel/bios32.c:388 (set (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 20 [0x14])) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 173 169 295 25 include/linux/pci.h:755 (set (reg/f:SI 7 r7 [214])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))
        (nil)))

(jump_insn 295 173 296 25 arch/arm/kernel/bios32.c:388 (set (pc)
        (label_ref 196)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  27 [100.0%] 

(barrier 296 295 198)

;; Start of basic block ( 27) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  27 [91.0%] 
(code_label 198 296 172 26 108 "" [1 uses])

(note 172 198 181 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 181 172 175 26 NOTE_INSN_DELETED)

(insn 175 181 174 26 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 174 175 178 26 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 178 174 179 26 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 179 178 266 26 arch/arm/kernel/bios32.c:392 (set (reg:SI 3 r3 [orig:199 cmd ] [199])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 cmd+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 266 179 182 26 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 182 266 183 26 arch/arm/kernel/bios32.c:392 (set (reg:SI 3 r3 [orig:149 cmd.306 ] [149])
        (ior:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
            (reg:SI 3 r3 [orig:199 cmd ] [199]))) 89 {*arm_iorsi3} (nil))

(insn 183 182 185 26 arch/arm/kernel/bios32.c:392 (set (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 6 [0x6])) [0 cmd+0 S2 A16])
        (reg:HI 3 r3 [orig:149 cmd.306 ] [149])) 176 {*movhi_insn_arch4} (nil))

(insn 185 183 184 26 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 184 185 188 26 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(call_insn 188 184 189 26 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 189 188 190 26 include/linux/pci.h:764 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 190 189 267 26 include/linux/pci.h:764 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 267 190 268 26 include/linux/pci.h:764 (set (reg:SI 2 r2)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 268 267 193 26 include/linux/pci.h:764 (set (reg:SI 3 r3)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn 193 268 194 26 include/linux/pci.h:764 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_byte") [flags 0x41] <function_decl 0x10f95780 pci_bus_write_config_byte>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 194 193 196 26 arch/arm/kernel/bios32.c:388 discrim 2 (set (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 26 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
;; Pred edge  25 [100.0%] 
(code_label 196 194 197 27 107 "" [1 uses])

(note 197 196 265 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 265 197 177 27 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 177 265 199 27 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 7 r7 [214])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 199 177 200 27 arch/arm/kernel/bios32.c:388 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:134 dev.764 ] [134])
            (reg/f:SI 8 r8 [orig:150 D.18622 ] [150]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 200 199 201 27 arch/arm/kernel/bios32.c:388 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 27 -> ( 26 28)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  26 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  27 [9.0%]  (fallthru,loop_exit)
(note 201 200 202 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 28 arch/arm/kernel/bios32.c:402 (set (reg/f:SI 3 r3 [orig:148 D.18625 ] [148])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 28 [0x1c])) [0 <variable>.self+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 203 202 204 28 arch/arm/kernel/bios32.c:402 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:148 D.18625 ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 204 203 205 28 arch/arm/kernel/bios32.c:402 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 28 -> ( 29 34)
;; lr  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  29 [85.0%]  (fallthru)
;; Succ edge  34 [15.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  28 [85.0%]  (fallthru)
(note 205 204 206 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 206 205 207 29 arch/arm/kernel/bios32.c:402 (set (reg:SI 3 r3 [orig:201 <variable>.hdr_type ] [201])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 3 r3 [orig:148 D.18625 ] [148])
                    (const_int 45 [0x2d])) [0 <variable>.hdr_type+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 207 206 208 29 arch/arm/kernel/bios32.c:402 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:201 <variable>.hdr_type ] [201])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 208 207 209 29 arch/arm/kernel/bios32.c:402 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 29 -> ( 30 34)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  30 [28.0%]  (fallthru)
;; Succ edge  34 [72.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  29 [28.0%]  (fallthru)
(note 209 208 211 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 211 209 212 30 NOTE_INSN_DELETED)

(insn 212 211 213 30 arch/arm/kernel/bios32.c:403 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 213 212 214 30 arch/arm/kernel/bios32.c:403 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 214 213 215 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 217 31 arch/arm/kernel/bios32.c:404 (set (reg:SI 3 r3 [orig:204 <variable>.bridge_ctl ] [204])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                    (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 217 215 218 31 arch/arm/kernel/bios32.c:404 (set (reg:SI 3 r3 [205])
        (ior:SI (reg:SI 3 r3 [orig:204 <variable>.bridge_ctl ] [204])
            (const_int 128 [0x80]))) 89 {*arm_iorsi3} (nil))

(insn 218 217 219 31 arch/arm/kernel/bios32.c:404 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])
        (reg:HI 3 r3 [205])) 176 {*movhi_insn_arch4} (nil))
;; End of basic block 31 -> ( 32)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 30 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  30 [50.0%] 
;; Pred edge  31 [100.0%]  (fallthru)
(code_label 219 218 220 32 110 "" [1 uses])

(note 220 219 221 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 221 220 222 32 NOTE_INSN_DELETED)

(insn 222 221 223 32 arch/arm/kernel/bios32.c:405 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 1 [0x1])
                (const_int 6 [0x6]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 223 222 224 32 arch/arm/kernel/bios32.c:405 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 224 223 225 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 227 33 arch/arm/kernel/bios32.c:406 (set (reg:SI 3 r3 [orig:208 <variable>.bridge_ctl ] [208])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                    (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 227 225 228 33 arch/arm/kernel/bios32.c:406 (set (reg:SI 3 r3 [209])
        (ior:SI (reg:SI 3 r3 [orig:208 <variable>.bridge_ctl ] [208])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 228 227 229 33 arch/arm/kernel/bios32.c:406 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                (const_int 130 [0x82])) [0 <variable>.bridge_ctl+0 S2 A16])
        (reg:HI 3 r3 [209])) 176 {*movhi_insn_arch4} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 28 29 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  28 [15.0%] 
;; Pred edge  29 [72.0%] 
;; Pred edge  32 [50.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 229 228 230 34 109 "" [3 uses])

(note 230 229 231 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 231 230 232 34 NOTE_INSN_DELETED)

(note 232 231 261 34 NOTE_INSN_DELETED)

(note 261 232 260 34 NOTE_INSN_DELETED)

(insn 260 261 246 34 arch/arm/kernel/bios32.c:412 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:142 features ] [142])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 246 260 312 34 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 6 r6 [orig:152 bus ] [152])
                    (const_int 76 [0x4c])) [0 <variable>.number+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 312 246 313 34 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg/f:SI 3 r3 [213])
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1141f500>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1141f500>)
        (nil)))

(insn 313 312 247 34 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg/f:SI 2 r2 [212])
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1141f460>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1141f460>)
        (nil)))

(insn 247 313 245 34 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg:SI 2 r2)
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 2 r2 [212])
            (reg/f:SI 3 r3 [213]))) 240 {*movsicc_insn} (nil))

(insn 245 247 248 34 arch/arm/kernel/bios32.c:412 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1138fc30>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1138fc30>)
        (nil)))

(call_insn 248 245 311 34 arch/arm/kernel/bios32.c:412 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 34 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 311 248 340 NOTE_INSN_DELETED)

(note 340 311 0 NOTE_INSN_DELETED)


;; Function pcibios_bus_report_status (pcibios_bus_report_status)[0:1043]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 48 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 48 (  2.5)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a19 (r157,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r155,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r149,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r145,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r144,l2) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r143,l2) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l2) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r138,l2) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r133,l2) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r133,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r139,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r143,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r144,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a14(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r155,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r157,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a21(r149,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r157: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r133,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r139,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r143,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r144,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a14(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r155,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r157,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a21(r149,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 109(l0): point = 1
   Insn 72(l0): point = 3
   Insn 107(l0): point = 6
   Insn 8(l0): point = 8
   Insn 30(l0): point = 10
   Insn 23(l0): point = 12
   Insn 4(l0): point = 14
   Insn 106(l0): point = 16
   Insn 3(l0): point = 18
   Insn 2(l0): point = 20
   Insn 92(l2): point = 23
   Insn 91(l2): point = 25
   Insn 82(l2): point = 27
   Insn 81(l2): point = 29
   Insn 86(l2): point = 32
   Insn 83(l2): point = 35
   Insn 78(l2): point = 38
   Insn 77(l2): point = 40
   Insn 80(l2): point = 42
   Insn 76(l2): point = 44
   Insn 70(l1): point = 47
   Insn 69(l1): point = 49
   Insn 27(l1): point = 51
   Insn 102(l1): point = 53
   Insn 64(l1): point = 56
   Insn 61(l1): point = 59
   Insn 60(l1): point = 61
   Insn 59(l1): point = 63
   Insn 105(l1): point = 65
   Insn 53(l1): point = 68
   Insn 51(l1): point = 71
   Insn 50(l1): point = 73
   Insn 49(l1): point = 75
   Insn 47(l1): point = 78
   Insn 46(l1): point = 80
   Insn 45(l1): point = 82
   Insn 104(l1): point = 84
   Insn 41(l1): point = 86
   Insn 42(l1): point = 88
   Insn 44(l1): point = 90
   Insn 36(l1): point = 93
   Insn 35(l1): point = 95
   Insn 32(l1): point = 98
   Insn 31(l1): point = 100
   Insn 29(l1): point = 102
   Insn 28(l1): point = 104
   Insn 25(l1): point = 106
   Insn 20(l1): point = 109
   Insn 19(l1): point = 111
   Insn 18(l1): point = 113
   Insn 16(l1): point = 116
   Insn 15(l1): point = 118
   Insn 14(l1): point = 120
   Insn 24(l1): point = 122
   Insn 13(l1): point = 124
 a0(r133): [1..3]
 a1(r142): [4..20]
 a2(r139): [1..16]
 a3(r143): [1..18]
 a4(r144): [1..14]
 a5(r137): [6..8]
 a6(r157): [6..10]
 a7(r155): [6..12]
 a8(r133): [23..46]
 a9(r139): [23..46]
 a10(r143): [23..46]
 a11(r144): [23..46]
 a12(r138): [41..44]
 a13(r137): [47..126]
 a14(r139): [47..126]
 a15(r142): [47..126]
 a16(r143): [47..126]
 a17(r144): [47..126]
 a18(r155): [47..126]
 a19(r157): [47..126]
 a20(r134): [71..75] [64..68]
 a21(r149): [91..95]
 a22(r140): [96..102]
 a23(r146): [112..113]
 a24(r145): [119..120]
 a25(r141): [121..124]
 Rebuilding regno allocno list for 149
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 145
 Rebuilding regno allocno list for 141
 Rebuilding regno allocno list for 140
 Rebuilding regno allocno list for 138
 Rebuilding regno allocno list for 134
Compressing live ranges: from 127 to 31 - 24%
Ranges after the compression:
 a0(r133): [11..14] [0..1]
 a1(r142): [15..30] [2..10]
 a2(r139): [11..30] [0..8]
 a3(r143): [11..30] [0..9]
 a4(r144): [11..30] [0..7]
 a5(r137): [15..30] [3..4]
 a6(r157): [15..30] [3..5]
 a7(r155): [15..30] [3..6]
 a12(r138): [12..13]
 a20(r134): [18..19] [16..17]
 a21(r149): [20..21]
 a22(r140): [22..23]
 a23(r146): [24..25]
 a24(r145): [26..27]
 a25(r141): [28..29]
+++Allocating 120 bytes for conflict table (uncompressed size 208)
;; a0(r133,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a12(r138,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r142,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0) a20(r134,l0) a21(r149,l0) a22(r140,l0) a23(r146,l0) a24(r145,l0) a25(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r139,l0) conflicts: a0(r133,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0) a12(r138,l0) a20(r134,l0) a21(r149,l0) a22(r140,l0) a23(r146,l0) a24(r145,l0) a25(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a3(r143,l0) conflicts: a0(r133,l0) a2(r139,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0) a12(r138,l0) a20(r134,l0) a21(r149,l0) a22(r140,l0) a23(r146,l0) a24(r145,l0) a25(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r144,l0) conflicts: a0(r133,l0) a2(r139,l0) a3(r143,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0) a12(r138,l0) a20(r134,l0) a21(r149,l0) a22(r140,l0) a23(r146,l0) a24(r145,l0) a25(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a5(r137,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a6(r157,l0) a7(r155,l0) a20(r134,l0) a21(r149,l0) a22(r140,l0) a23(r146,l0) a24(r145,l0) a25(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a6(r157,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a7(r155,l0) a20(r134,l0) a21(r149,l0) a22(r140,l0) a23(r146,l0) a24(r145,l0) a25(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a7(r155,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a20(r134,l0) a21(r149,l0) a22(r140,l0) a23(r146,l0) a24(r145,l0) a25(r141,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a12(r138,l0) conflicts: a0(r133,l0) a2(r139,l0) a3(r143,l0) a4(r144,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a20(r134,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a21(r149,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r140,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r146,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0)
;;     total conflict hard regs: 0 2 3 14
;;     conflict hard regs: 0 2 3 14
;; a24(r145,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0)
;;     total conflict hard regs: 0 2 3 14
;;     conflict hard regs: 0 2 3 14
;; a25(r141,l0) conflicts: a2(r139,l0) a3(r143,l0) a4(r144,l0) a1(r142,l0) a5(r137,l0) a6(r157,l0) a7(r155,l0)
;;     total conflict hard regs: 0 2 3 14
;;     conflict hard regs: 0 2 3 14

  cp0:a21(r149)<->a22(r140)@125:shuffle
  regions=3, blocks=19, points=31
    allocnos=26, copies=1, conflicts=0, ranges=24

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r133 1r142 2r139 3r143 4r144 5r137 6r157 7r155 12r138 20r134 21r149 22r140 23r146 24r145 25r141
    modified regnos: 133 134 137 138 139 140 141 142 143 144 145 146 149 155 157
    border:
    Pressure: GENERAL_REGS=12
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 5 regs less
    Reg 139 of GENERAL_REGS has 5 regs less
    Reg 143 of GENERAL_REGS has 5 regs less
    Reg 144 of GENERAL_REGS has 5 regs less
    Reg 137 of GENERAL_REGS has 5 regs less
    Reg 157 of GENERAL_REGS has 5 regs less
    Reg 155 of GENERAL_REGS has 5 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 4 regs less
    Reg 145 of GENERAL_REGS has 4 regs less
    Reg 141 of GENERAL_REGS has 4 regs less
      Pushing a21(r149,l0)
      Pushing a22(r140,l0)
      Pushing a20(r134,l0)
      Pushing a12(r138,l0)
      Pushing a0(r133,l0)
      Pushing a6(r157,l0)(potential spill: pri=1333, cost=20000)
      Pushing a7(r155,l0)(potential spill: pri=1428, cost=20000)
      Pushing a24(r145,l0)
      Pushing a23(r146,l0)
      Pushing a25(r141,l0)
      Pushing a1(r142,l0)(potential spill: pri=3000, cost=30000)
      Pushing a4(r144,l0)
      Pushing a3(r143,l0)
      Pushing a2(r139,l0)
      Pushing a5(r137,l0)
      Popping a5(r137,l0)  -- assign reg 4
      Popping a2(r139,l0)  -- assign reg 5
      Popping a3(r143,l0)  -- assign reg 6
      Popping a4(r144,l0)  -- assign reg 7
      Popping a1(r142,l0)  -- assign reg 8
      Popping a25(r141,l0)  -- assign reg 1
      Popping a23(r146,l0)  -- assign reg 1
      Popping a24(r145,l0)  -- assign reg 1
      Popping a7(r155,l0)  -- assign reg 10
      Popping a6(r157,l0)  -- assign reg 9
      Popping a0(r133,l0)  -- assign reg 4
      Popping a12(r138,l0)  -- assign reg 3
      Popping a20(r134,l0)  -- assign reg 1
      Popping a22(r140,l0)  -- assign reg 3
      Popping a21(r149,l0)  -- assign reg 3
Disposition:
    0:r133 l0     4   20:r134 l0     1    5:r137 l0     4   12:r138 l0     3
    2:r139 l0     5   22:r140 l0     3   25:r141 l0     1    1:r142 l0     8
    3:r143 l0     6    4:r144 l0     7   24:r145 l0     1   23:r146 l0     1
   21:r149 l0     3    7:r155 l0    10    6:r157 l0     9
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, 14, dead_or_set: 0, 142
insn=3, live_throughout: 2, 13, 14, 142, dead_or_set: 1, 143
insn=106, live_throughout: 2, 13, 14, 142, 143, dead_or_set: 139
insn=4, live_throughout: 13, 14, 139, 142, 143, dead_or_set: 2, 144
insn=23, live_throughout: 13, 14, 139, 142, 143, 144, dead_or_set: 155
insn=30, live_throughout: 13, 14, 139, 142, 143, 144, 155, dead_or_set: 157
insn=8, live_throughout: 13, 14, 142, 143, 144, 155, 157, dead_or_set: 137, 139
insn=107, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=68, live_throughout: 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=13, live_throughout: 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 141
insn=24, live_throughout: 2, 3, 13, 14, 137, 139, 141, 142, 143, 144, 155, 157, dead_or_set: 0
insn=14, live_throughout: 0, 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 141, 145
insn=15, live_throughout: 0, 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 145
insn=16, live_throughout: 0, 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=18, live_throughout: 0, 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 146
insn=19, live_throughout: 0, 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 146
insn=20, live_throughout: 0, 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=21, live_throughout: 0, 2, 3, 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=25, live_throughout: 0, 2, 3, 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 1
insn=28, live_throughout: 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 0, 1, 2, 3, 14
insn=29, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 140
insn=31, live_throughout: 13, 14, 137, 139, 140, 142, 143, 144, 155, 157, dead_or_set: 
insn=32, live_throughout: 13, 14, 137, 139, 140, 142, 143, 144, 155, 157, dead_or_set: 
insn=35, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 140, 149
insn=36, live_throughout: 13, 14, 137, 139, 142, 143, 144, 149, 155, 157, dead_or_set: 
insn=44, live_throughout: 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 3, 149
insn=42, live_throughout: 3, 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 1
insn=41, live_throughout: 1, 3, 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 0
insn=104, live_throughout: 0, 1, 3, 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 2
insn=45, live_throughout: 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 0, 1, 2, 3, 14
insn=46, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=47, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=49, live_throughout: 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 134
insn=50, live_throughout: 13, 134, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=51, live_throughout: 13, 134, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=53, live_throughout: 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 134
insn=54, live_throughout: 13, 134, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=105, live_throughout: 13, 134, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 0
insn=59, live_throughout: 0, 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 1, 134
insn=60, live_throughout: 0, 1, 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 2
insn=61, live_throughout: 13, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 0, 1, 2, 14
insn=62, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=64, live_throughout: 13, 14, 139, 142, 143, 144, 155, 157, dead_or_set: 137
insn=66, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=102, live_throughout: 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 2
insn=27, live_throughout: 2, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 3
insn=69, live_throughout: 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=70, live_throughout: 2, 3, 13, 14, 137, 139, 142, 143, 144, 155, 157, dead_or_set: 
insn=72, live_throughout: 13, 14, 139, 143, 144, dead_or_set: 133, 142
insn=109, live_throughout: 13, 14, 133, 139, 143, 144, dead_or_set: 
insn=90, live_throughout: 1, 2, 13, 14, 133, 139, 143, 144, dead_or_set: 
insn=76, live_throughout: 1, 2, 13, 14, 133, 139, 143, 144, dead_or_set: 138
insn=80, live_throughout: 1, 2, 13, 14, 133, 138, 139, 143, 144, dead_or_set: 0
insn=77, live_throughout: 0, 1, 2, 13, 14, 133, 139, 143, 144, dead_or_set: 138
insn=78, live_throughout: 0, 1, 2, 13, 14, 133, 139, 143, 144, dead_or_set: 
insn=83, live_throughout: 13, 133, 139, 143, 144, dead_or_set: 0, 1, 2, 14
insn=84, live_throughout: 13, 14, 133, 139, 143, 144, dead_or_set: 
insn=86, live_throughout: 13, 14, 139, 143, 144, dead_or_set: 133
insn=88, live_throughout: 13, 14, 133, 139, 143, 144, dead_or_set: 
insn=81, live_throughout: 13, 14, 133, 139, 143, 144, dead_or_set: 1
insn=82, live_throughout: 1, 13, 14, 133, 139, 143, 144, dead_or_set: 2
insn=91, live_throughout: 1, 2, 13, 14, 133, 139, 143, 144, dead_or_set: 
insn=92, live_throughout: 1, 2, 13, 14, 133, 139, 143, 144, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 76 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 157: (insn_list:REG_DEP_TRUE 30 (nil))
changing reg in insn 86
changing reg in insn 72
changing reg in insn 86
changing reg in insn 91
changing reg in insn 76
changing reg in insn 76
changing reg in insn 53
changing reg in insn 49
changing reg in insn 59
changing reg in insn 50
changing reg in insn 8
changing reg in insn 64
changing reg in insn 64
changing reg in insn 69
changing reg in insn 53
changing reg in insn 49
changing reg in insn 42
changing reg in insn 41
changing reg in insn 25
changing reg in insn 18
changing reg in insn 13
changing reg in insn 18
changing reg in insn 13
changing reg in insn 76
changing reg in insn 80
changing reg in insn 77
changing reg in insn 106
changing reg in insn 8
changing reg in insn 8
changing reg in insn 8
changing reg in insn 91
changing reg in insn 69
changing reg in insn 29
changing reg in insn 35
changing reg in insn 35
changing reg in insn 31
changing reg in insn 31
changing reg in insn 13
changing reg in insn 24
changing reg in insn 14
changing reg in insn 2
changing reg in insn 106
changing reg in insn 72
changing reg in insn 3
changing reg in insn 35
changing reg in insn 35
changing reg in insn 81
changing reg in insn 4
changing reg in insn 82
changing reg in insn 46
changing reg in insn 14
changing reg in insn 15
changing reg in insn 18
changing reg in insn 19
changing reg in insn 35
changing reg in insn 44
changing reg in insn 23
changing reg in insn 27
changing reg in insn 30
changing reg in insn 31
deleting insn with uid = 44.
deleting insn with uid = 59.


try_optimize_cfg iteration 1

Deleting fallthru block 18.
deleting insn with uid = 100.
deleting block 18


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 83.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 47 (  2.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 46 (  2.6)


pcibios_bus_report_status

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,5u} r1={13d,10u} r2={9d,5u} r3={9d,7u,1d} r4={4d,12u,3d} r5={2d,4u} r6={1d,3u} r7={1d,2u} r8={1d,2u} r9={1d,1u} r10={1d,1u} r12={5d} r13={1d,24u,1d} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={13d,9u} r25={1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 607{515d,86u,6e} in 53{49 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 5 3 2 arch/arm/kernel/bios32.c:26 (set (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
        (reg:SI 0 r0 [ bus ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 106 2 arch/arm/kernel/bios32.c:26 (set (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
        (reg:SI 1 r1 [ status_mask ])) 167 {*arm_movsi_insn} (nil))

(insn 106 3 4 2 arch/arm/kernel/bios32.c:29 (set (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
        (reg/v/f:SI 8 r8 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 4 106 23 2 arch/arm/kernel/bios32.c:26 (set (reg/v:SI 7 r7 [orig:144 warn ] [144])
        (reg:SI 2 r2 [ warn ])) 167 {*arm_movsi_insn} (nil))

(insn 23 4 30 2 include/linux/pci.h:755 (set (reg/f:SI 10 sl [155])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 6 [0x6]))
        (nil)))

(insn 30 23 8 2 arch/arm/kernel/bios32.c:40 (set (reg:SI 9 r9 [157])
        (const_int 65535 [0xffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 65535 [0xffff])
        (nil)))

(insn 8 30 107 2 arch/arm/kernel/bios32.c:29 (set (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
        (mem/s/f/j:SI (pre_modify:SI (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
                (plus:SI (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
                    (const_int 20 [0x14]))) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 5 r5 [orig:139 D.18413 ] [139])
        (nil)))

(jump_insn 107 8 108 2 arch/arm/kernel/bios32.c:29 (set (pc)
        (label_ref 66)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 108 107 68)

;; Start of basic block ( 12) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  12 [91.0%] 
(code_label 68 108 12 3 125 "" [1 uses])

(note 12 68 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 24 3 arch/arm/kernel/bios32.c:36 (set (reg/f:SI 1 r1 [orig:141 D.18392 ] [141])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])
        (nil)))

(insn 24 13 14 3 include/linux/pci.h:755 (set (reg:SI 0 r0)
        (reg/f:SI 1 r1 [orig:141 D.18392 ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 14 24 15 3 arch/arm/kernel/bios32.c:36 (set (reg:SI 1 r1 [orig:145 <variable>.number ] [145])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 1 r1 [orig:141 D.18392 ] [141])
                    (const_int 76 [0x4c])) [0 <variable>.number+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 15 14 16 3 arch/arm/kernel/bios32.c:36 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:145 <variable>.number ] [145])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 arch/arm/kernel/bios32.c:36 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  4 [71.0%]  (fallthru)
;; Succ edge  5 [29.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  3 [71.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 arch/arm/kernel/bios32.c:36 (set (reg:SI 1 r1 [orig:146 <variable>.devfn ] [146])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])
        (nil)))

(insn 19 18 20 4 arch/arm/kernel/bios32.c:36 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:146 <variable>.devfn ] [146])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 4 arch/arm/kernel/bios32.c:36 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 11 5)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  11 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%]  (fallthru)
;; Pred edge  3 [29.0%] 
(code_label 21 20 22 5 122 "" [1 uses])

(note 22 21 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 22 28 5 include/linux/pci.h:755 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 25 29 5 include/linux/pci.h:755 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_read_config_word") [flags 0x41] <function_decl 0x10f95680 pci_bus_read_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 28 31 5 arch/arm/kernel/bios32.c:40 (set (reg:SI 3 r3 [orig:140 status.287 ] [140])
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 31 29 32 5 arch/arm/kernel/bios32.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:140 status.287 ] [140])
            (reg:SI 9 r9 [157]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [orig:140 status.287 ] [140])
            (const_int 65535 [0xffff]))
        (nil)))

(jump_insn 32 31 33 5 arch/arm/kernel/bios32.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 5 -> ( 11 6)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  11 [28.0%] 
;; Succ edge  6 [72.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [72.0%]  (fallthru)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 6 NOTE_INSN_DELETED)

(insn 35 34 36 6 arch/arm/kernel/bios32.c:43 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
                        (reg:SI 3 r3 [orig:140 status.287 ] [140]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [149])
                (and:SI (reg/v:SI 6 r6 [orig:143 status_mask ] [143])
                    (reg:SI 3 r3 [orig:140 status.287 ] [140])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 36 35 37 6 arch/arm/kernel/bios32.c:43 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 6 -> ( 11 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  11 [71.0%] 
;; Succ edge  7 [29.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 37 36 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 40 37 42 7 NOTE_INSN_DELETED)

(insn 42 40 41 7 include/linux/pci.h:768 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 28 [0x1c])) [0 <variable>.devfn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 42 104 7 include/linux/pci.h:768 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 8 [0x8])) [0 <variable>.bus+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 104 41 45 7 include/linux/pci.h:768 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 104 46 7 include/linux/pci.h:768 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pci_bus_write_config_word") [flags 0x41] <function_decl 0x10f95800 pci_bus_write_config_word>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 46 45 47 7 arch/arm/kernel/bios32.c:49 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:144 warn ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 7 arch/arm/kernel/bios32.c:49 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  7 [0.0%]  (fallthru)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 8 include/linux/device.h:620 (set (reg/f:SI 1 r1 [orig:134 D.19194 ] [134])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 140 [0x8c])) [0 <variable>.dev.init_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 8 include/linux/device.h:620 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:134 D.19194 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 8 include/linux/device.h:620 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  10 [85.0%] 
;; Succ edge  9 [15.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  8 [15.0%]  (fallthru)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 include/linux/kobject.h:82 (set (reg/f:SI 1 r1 [orig:134 D.19194 ] [134])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
                (const_int 104 [0x68])) [0 <variable>.dev.kobj.name+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  8 [85.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 54 53 55 10 124 "" [1 uses])

(note 55 54 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 57 55 105 10 NOTE_INSN_DELETED)

(insn 105 57 60 10 arch/arm/kernel/bios32.c:50 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1143a9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 60 105 61 10 arch/arm/kernel/bios32.c:50 (set (reg:SI 2 r2)
        (zero_extend:SI (mem/c/i:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 6 [0x6])) [0 status+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(call_insn 61 60 62 10 arch/arm/kernel/bios32.c:50 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6 7 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [28.0%] 
;; Pred edge  6 [71.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 62 61 63 11 123 "" [4 uses])

(note 63 62 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 66 11 arch/arm/kernel/bios32.c:29 (set (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:137 dev ] [137]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 66 64 67 12 121 "" [1 uses])

(note 67 66 102 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 102 67 27 12 include/linux/pci.h:755 (set (reg:SI 2 r2)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 27 102 69 12 include/linux/pci.h:755 (set (reg:SI 3 r3)
        (reg/f:SI 10 sl [155])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -2 [0xfffffffffffffffe]))
        (nil)))

(insn 69 27 70 12 arch/arm/kernel/bios32.c:29 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:137 dev ] [137])
            (reg/f:SI 5 r5 [orig:139 D.18413 ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 70 69 71 12 arch/arm/kernel/bios32.c:29 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 12 -> ( 3 13)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  3 [91.0%] 
;; Succ edge  13 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  12 [9.0%]  (fallthru,loop_exit)
(note 71 70 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 109 13 arch/arm/kernel/bios32.c:53 (set (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:142 bus ] [142])
                (const_int 20 [0x14])) [0 <variable>.devices.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 109 72 110 13 arch/arm/kernel/bios32.c:53 (set (pc)
        (label_ref 88)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%] 

(barrier 110 109 90)

;; Start of basic block ( 17) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  17 [91.0%] 
(code_label 90 110 75 14 128 "" [1 uses])

(note 75 90 76 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 80 14 arch/arm/kernel/bios32.c:54 (set (reg/f:SI 3 r3 [orig:138 D.18414 ] [138])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
                (const_int 12 [0xc])) [0 <variable>.subordinate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
                (const_int 12 [0xc])) [0 <variable>.subordinate+0 S4 A32])
        (nil)))

(insn 80 76 77 14 arch/arm/kernel/bios32.c:55 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:138 D.18414 ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 77 80 78 14 arch/arm/kernel/bios32.c:54 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:138 D.18414 ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 78 77 79 14 arch/arm/kernel/bios32.c:54 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  15 [69.8%]  (fallthru)
;; Succ edge  16 [30.2%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  14 [69.8%]  (fallthru)
(note 79 78 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(call_insn 83 79 84 15 arch/arm/kernel/bios32.c:55 (parallel [
            (call (mem:SI (symbol_ref:SI ("pcibios_bus_report_status") [flags 0x3] <function_decl 0x111deb00 pcibios_bus_report_status>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  14 [30.2%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 84 83 85 16 127 "" [1 uses])

(note 85 84 86 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 88 16 arch/arm/kernel/bios32.c:53 (set (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133]) [0 <variable>.bus_list.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 16 13) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru,dfs_back)
;; Pred edge  13 [100.0%] 
(code_label 88 86 89 17 126 "" [1 uses])

(note 89 88 81 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 81 89 82 17 arch/arm/kernel/bios32.c:55 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:143 status_mask ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 91 17 arch/arm/kernel/bios32.c:55 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:144 warn ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 91 82 92 17 arch/arm/kernel/bios32.c:53 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:133 dev.798 ] [133])
            (reg/f:SI 5 r5 [orig:139 D.18413 ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 112 17 arch/arm/kernel/bios32.c:53 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 17 -> ( 14 1)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  14 [91.0%] 
;; Succ edge  EXIT [9.0%]  (fallthru,loop_exit)

(note 112 92 113 NOTE_INSN_DELETED)

(note 113 112 0 NOTE_INSN_DELETED)


;; Function pcibios_report_status (pcibios_report_status)[0:1044]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a8 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 32(l0): point = 1
   Insn 8(l0): point = 3
   Insn 20(l0): point = 5
   Insn 3(l0): point = 7
   Insn 2(l0): point = 9
   Insn 7(l0): point = 11
   Insn 22(l1): point = 14
   Insn 21(l1): point = 16
   Insn 14(l1): point = 18
   Insn 13(l1): point = 20
   Insn 12(l1): point = 22
   Insn 16(l1): point = 25
   Insn 15(l1): point = 27
 a0(r133): [1..3]
 a1(r136): [4..11]
 a2(r138): [1..5]
 a3(r135): [1..7]
 a4(r134): [1..9]
 a5(r133): [14..29]
 a6(r134): [14..29]
 a7(r135): [14..29]
 a8(r138): [14..29]
Compressing live ranges: from 30 to 9 - 30%
Ranges after the compression:
 a0(r133): [7..8] [0..1]
 a1(r136): [2..6]
 a2(r138): [7..8] [0..3]
 a3(r135): [7..8] [0..4]
 a4(r134): [7..8] [0..5]
+++Allocating 40 bytes for conflict table (uncompressed size 72)
;; a0(r133,l0) conflicts: a2(r138,l0) a3(r135,l0) a4(r134,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r136,l0) conflicts: a2(r138,l0) a3(r135,l0) a4(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r138,l0) conflicts: a0(r133,l0) a3(r135,l0) a4(r134,l0) a1(r136,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r135,l0) conflicts: a0(r133,l0) a2(r138,l0) a4(r134,l0) a1(r136,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r134,l0) conflicts: a0(r133,l0) a2(r138,l0) a3(r135,l0) a1(r136,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14

  regions=2, blocks=6, points=9
    allocnos=9, copies=0, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r133 1r136 2r138 3r135 4r134
    modified regnos: 133 134 135 136 138
    border:
    Pressure: GENERAL_REGS=8
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 134 of GENERAL_REGS has 4 regs less
      Pushing a1(r136,l0)
      Pushing a4(r134,l0)
      Pushing a3(r135,l0)
      Pushing a2(r138,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 4
      Popping a2(r138,l0)  -- assign reg 5
      Popping a3(r135,l0)  -- assign reg 6
      Popping a4(r134,l0)  -- assign reg 7
      Popping a1(r136,l0)  -- assign reg 3
Disposition:
    0:r133 l0     4    4:r134 l0     7    3:r135 l0     6    1:r136 l0     3
    2:r138 l0     5
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 1, 13, 14, dead_or_set: 136
insn=2, live_throughout: 1, 13, 14, 136, dead_or_set: 0, 134
insn=3, live_throughout: 13, 14, 134, 136, dead_or_set: 1, 135
insn=20, live_throughout: 13, 14, 134, 135, 136, dead_or_set: 138
insn=8, live_throughout: 13, 14, 134, 135, 138, dead_or_set: 133, 136
insn=32, live_throughout: 13, 14, 133, 134, 135, 138, dead_or_set: 
insn=19, live_throughout: 0, 1, 2, 13, 133, 134, 135, 138, dead_or_set: 
insn=15, live_throughout: 13, 133, 134, 135, 138, dead_or_set: 0, 1, 2, 14
insn=16, live_throughout: 13, 14, 134, 135, 138, dead_or_set: 133
insn=17, live_throughout: 13, 14, 133, 134, 135, 138, dead_or_set: 
insn=12, live_throughout: 13, 14, 133, 134, 135, 138, dead_or_set: 0
insn=13, live_throughout: 0, 13, 14, 133, 134, 135, 138, dead_or_set: 1
insn=14, live_throughout: 0, 1, 13, 14, 133, 134, 135, 138, dead_or_set: 2
insn=21, live_throughout: 0, 1, 2, 13, 14, 133, 134, 135, 138, dead_or_set: 
insn=22, live_throughout: 0, 1, 2, 13, 14, 133, 134, 135, 138, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 138: (insn_list:REG_DEP_TRUE 20 (nil))
changing reg in insn 16
changing reg in insn 8
changing reg in insn 21
changing reg in insn 16
changing reg in insn 12
changing reg in insn 21
changing reg in insn 2
changing reg in insn 13
changing reg in insn 3
changing reg in insn 14
changing reg in insn 7
changing reg in insn 20
changing reg in insn 8
changing reg in insn 20
changing reg in insn 21


try_optimize_cfg iteration 1

Deleting fallthru block 5.
deleting insn with uid = 30.
deleting block 5


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 9 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 9 (  1.8)


pcibios_report_status

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={3d,2u} r4={2d,3u,1d} r5={1d,1u} r6={1d,1u} r7={1d,1u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 155{134d,20u,1e} in 13{12 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 2 2 arch/arm/kernel/bios32.c:62 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>)
        (nil)))

(insn 2 7 3 2 arch/arm/kernel/bios32.c:59 (set (reg/v:SI 7 r7 [orig:134 status_mask ] [134])
        (reg:SI 0 r0 [ status_mask ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 20 2 arch/arm/kernel/bios32.c:59 (set (reg/v:SI 6 r6 [orig:135 warn ] [135])
        (reg:SI 1 r1 [ warn ])) 167 {*arm_movsi_insn} (nil))

(insn 20 3 8 2 arch/arm/kernel/bios32.c:62 (set (reg/f:SI 5 r5 [138])
        (reg/f:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>)
        (nil)))

(insn 8 20 32 2 arch/arm/kernel/bios32.c:62 (set (reg/v/f:SI 4 r4 [orig:133 l ] [133])
        (mem/s/f/j/c:SI (reg/f:SI 3 r3 [136]) [0 pci_root_buses.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>) [0 pci_root_buses.next+0 S4 A32])
        (nil)))

(jump_insn 32 8 33 2 arch/arm/kernel/bios32.c:62 (set (pc)
        (label_ref 17)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%] 

(barrier 33 32 19)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 19 33 11 3 134 "" [1 uses])

(note 11 19 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 15 11 16 3 arch/arm/kernel/bios32.c:65 (parallel [
            (call (mem:SI (symbol_ref:SI ("pcibios_bus_report_status") [flags 0x3] <function_decl 0x111deb00 pcibios_bus_report_status>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 15 17 3 arch/arm/kernel/bios32.c:62 discrim 2 (set (reg/v/f:SI 4 r4 [orig:133 l ] [133])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:133 l ] [133]) [0 <variable>.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 17 16 18 4 133 "" [1 uses])

(note 18 17 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 12 18 13 4 arch/arm/kernel/bios32.c:65 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:133 l ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 4 arch/arm/kernel/bios32.c:65 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:134 status_mask ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 21 4 arch/arm/kernel/bios32.c:65 (set (reg:SI 2 r2)
        (reg/v:SI 6 r6 [orig:135 warn ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 21 14 22 4 arch/arm/kernel/bios32.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:133 l ] [133])
            (reg/f:SI 5 r5 [138]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:133 l ] [133])
            (symbol_ref:SI ("pci_root_buses") [flags 0xc0] <var_decl 0x10f887e0 pci_root_buses>))
        (nil)))

(jump_insn 22 21 34 4 arch/arm/kernel/bios32.c:62 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 1)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  3 [91.0%] 
;; Succ edge  EXIT [9.0%]  (fallthru,loop_exit)

(note 34 22 35 NOTE_INSN_DELETED)

(note 35 34 0 NOTE_INSN_DELETED)


;; Function pcibios_setup (pcibios_setup)[0:1063] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 55.
verify found no changes in insn with uid = 55.
deleting insn with uid = 32.
scanning new insn with uid = 56.
verify found no changes in insn with uid = 56.
deleting insn with uid = 15.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a2 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 48(l0): point = 0
   Insn 42(l0): point = 2
   Insn 34(l0): point = 5
   Insn 55(l0): point = 7
   Insn 33(l0): point = 9
   Insn 35(l0): point = 11
   Insn 30(l0): point = 14
   Insn 29(l0): point = 16
   Insn 26(l0): point = 18
   Insn 25(l0): point = 20
   Insn 24(l0): point = 22
   Insn 52(l0): point = 25
   Insn 17(l0): point = 27
   Insn 56(l0): point = 29
   Insn 16(l0): point = 31
   Insn 18(l0): point = 33
   Insn 13(l0): point = 36
   Insn 12(l0): point = 38
   Insn 9(l0): point = 40
   Insn 2(l0): point = 42
   Insn 8(l0): point = 44
 a0(r136): [36..42] [14..33] [3..11]
 a1(r143): [6..7]
 a2(r144): [6..9]
 a3(r142): [12..16]
 a4(r139): [28..29]
 a5(r140): [28..31]
 a6(r138): [34..38]
Compressing live ranges: from 47 to 16 - 34%
Ranges after the compression:
 a0(r136): [13..15] [6..11] [0..4]
 a1(r143): [1..2]
 a2(r144): [1..3]
 a3(r142): [5..7]
 a4(r139): [8..9]
 a5(r140): [8..10]
 a6(r138): [12..14]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r136,l0) conflicts: a1(r143,l0) a2(r144,l0) a3(r142,l0) a4(r139,l0) a5(r140,l0) a6(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r143,l0) conflicts: a0(r136,l0) a2(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r144,l0) conflicts: a0(r136,l0) a1(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r142,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r139,l0) conflicts: a0(r136,l0) a5(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r140,l0) conflicts: a0(r136,l0) a4(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r138,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=7, points=16
    allocnos=7, copies=0, conflicts=2, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r136 1r143 2r144 3r142 4r139 5r140 6r138
    modified regnos: 136 138 139 140 142 143 144
    border:
    Pressure: GENERAL_REGS=4
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a6(r138,l0)
      Pushing a5(r140,l0)
      Pushing a4(r139,l0)
      Pushing a3(r142,l0)
      Pushing a2(r144,l0)
      Pushing a1(r143,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a1(r143,l0)  -- assign reg 3
      Popping a2(r144,l0)  -- assign reg 2
      Popping a3(r142,l0)  -- assign reg 0
      Popping a4(r139,l0)  -- assign reg 3
      Popping a5(r140,l0)  -- assign reg 2
      Popping a6(r138,l0)  -- assign reg 0
Disposition:
    0:r136 l0     4    6:r138 l0     0    4:r139 l0     3    5:r140 l0     2
    3:r142 l0     0    1:r143 l0     3    2:r144 l0     2
New iteration of spill/restore move
+++Costs: overall -500, reg -500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 0, 13, dead_or_set: 1
insn=2, live_throughout: 0, 1, 13, dead_or_set: 136
insn=9, live_throughout: 13, 136, dead_or_set: 0, 1, 14
insn=12, live_throughout: 13, 14, 136, dead_or_set: 0, 138
insn=13, live_throughout: 13, 14, 136, 138, dead_or_set: 
insn=18, live_throughout: 13, 14, dead_or_set: 136, 138
insn=16, live_throughout: 13, 14, 136, dead_or_set: 140
insn=56, live_throughout: 13, 14, 136, 140, dead_or_set: 139
insn=17, live_throughout: 13, 14, 136, dead_or_set: 139, 140
insn=52, live_throughout: 13, 14, 136, dead_or_set: 
insn=21, live_throughout: 13, 136, dead_or_set: 
insn=24, live_throughout: 13, 136, dead_or_set: 0
insn=25, live_throughout: 0, 13, 136, dead_or_set: 1
insn=26, live_throughout: 13, 136, dead_or_set: 0, 1, 14
insn=29, live_throughout: 13, 14, 136, dead_or_set: 0, 142
insn=30, live_throughout: 13, 14, 136, 142, dead_or_set: 
insn=35, live_throughout: 13, 14, dead_or_set: 136, 142
insn=33, live_throughout: 13, 14, 136, dead_or_set: 144
insn=55, live_throughout: 13, 14, 136, 144, dead_or_set: 143
insn=34, live_throughout: 13, 14, 136, dead_or_set: 143, 144
insn=36, live_throughout: 13, 14, 136, dead_or_set: 
insn=42, live_throughout: 13, 14, dead_or_set: 0, 136
insn=48, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 56 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 55 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 33 (nil))
changing reg in insn 35
changing reg in insn 18
changing reg in insn 2
changing reg in insn 42
changing reg in insn 24
changing reg in insn 12
changing reg in insn 18
changing reg in insn 56
changing reg in insn 17
changing reg in insn 16
changing reg in insn 17
changing reg in insn 29
changing reg in insn 35
changing reg in insn 55
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
Spilling for insn 17.
Spilling for insn 34.

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 debug_pci+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 debug_pci+0 S4 A32])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [143])
                                                        (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


pcibios_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,11u} r1={5d,2u} r2={5d,2u} r3={5d,2u} r4={3d,2u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 286{256d,30u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 8 2 NOTE_INSN_DELETED)

(insn 8 10 2 2 arch/arm/kernel/bios32.c:577 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1144a480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1144a480>)
        (nil)))

(insn 2 8 9 2 arch/arm/kernel/bios32.c:576 (set (reg/v/f:SI 4 r4 [orig:136 str ] [136])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 9 2 12 2 arch/arm/kernel/bios32.c:577 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 9 13 2 arch/arm/kernel/bios32.c:577 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [138])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 13 12 14 2 arch/arm/kernel/bios32.c:577 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  3 [10.0%]  (fallthru)
;; Succ edge  4 [90.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  2 [10.0%]  (fallthru)
(note 14 13 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 14 16 3 arch/arm/kernel/bios32.c:579 (set (reg/v/f:SI 4 r4 [orig:136 str ] [136])
        (reg:SI 0 r0 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 16 18 56 3 arch/arm/kernel/bios32.c:578 (set (reg:SI 2 r2 [140])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 56 16 17 3 arch/arm/kernel/bios32.c:578 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 17 56 52 3 arch/arm/kernel/bios32.c:578 (set (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 debug_pci+0 S4 A32])
        (reg:SI 2 r2 [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 52 17 53 3 arch/arm/kernel/bios32.c:579 (set (pc)
        (label_ref 36)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 53 52 21)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [90.0%] 
(code_label 21 53 22 4 139 "" [1 uses])

(note 22 21 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 27 22 24 4 NOTE_INSN_DELETED)

(insn 24 27 25 4 arch/arm/kernel/bios32.c:580 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 str ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/kernel/bios32.c:580 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1144b2d0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1144b2d0>)
        (nil)))

(call_insn/i 26 25 29 4 arch/arm/kernel/bios32.c:580 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 26 30 4 arch/arm/kernel/bios32.c:580 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [142])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 30 29 31 4 arch/arm/kernel/bios32.c:580 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  5 [10.0%]  (fallthru)
;; Succ edge  6 [90.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  4 [10.0%]  (fallthru)
(note 31 30 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 31 33 5 arch/arm/kernel/bios32.c:582 (set (reg/v/f:SI 4 r4 [orig:136 str ] [136])
        (reg:SI 0 r0 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 33 35 55 5 arch/arm/kernel/bios32.c:581 (set (reg:SI 2 r2 [144])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 55 33 34 5 arch/arm/kernel/bios32.c:581 (set (reg/f:SI 3 r3 [143])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 34 55 36 5 arch/arm/kernel/bios32.c:581 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [143])
                (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])
        (reg:SI 2 r2 [144])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [90.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 36 34 37 6 140 "" [2 uses])

(note 37 36 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 37 48 6 arch/arm/kernel/bios32.c:585 (set (reg/i:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 str ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 48 42 54 6 arch/arm/kernel/bios32.c:585 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 54 48 57 NOTE_INSN_DELETED)

(note 57 54 0 NOTE_INSN_DELETED)


;; Function pci_common_init (pci_common_init)[0:1062] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a20 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r165,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r164,l2) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r163,l2) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r159,l1) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r158,l1) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r152,l1) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r147,l2) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r143,l2) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r142,l2) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a2(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r143,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a11(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r164,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r163,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a16(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a18(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a24(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a27(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a2(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r143,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a11(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r164,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r163,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a16(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a18(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a24(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a27(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 153(l0): point = 1
   Insn 109(l0): point = 3
   Insn 114(l0): point = 5
   Insn 108(l0): point = 7
   Insn 107(l0): point = 9
   Insn 106(l0): point = 11
   Insn 101(l0): point = 14
   Insn 99(l0): point = 17
   Insn 98(l0): point = 19
   Insn 97(l0): point = 21
   Insn 67(l0): point = 24
   Insn 66(l0): point = 26
   Insn 34(l0): point = 29
   Insn 33(l0): point = 31
   Insn 149(l0): point = 34
   Insn 46(l0): point = 36
   Insn 44(l0): point = 38
   Insn 17(l0): point = 40
   Insn 22(l0): point = 42
   Insn 16(l0): point = 44
   Insn 13(l0): point = 47
   Insn 11(l0): point = 50
   Insn 8(l0): point = 52
   Insn 10(l0): point = 54
   Insn 7(l0): point = 56
   Insn 9(l0): point = 58
   Insn 2(l0): point = 60
   Insn 135(l2): point = 63
   Insn 134(l2): point = 65
   Insn 129(l2): point = 68
   Insn 128(l2): point = 70
   Insn 127(l2): point = 72
   Insn 124(l2): point = 75
   Insn 123(l2): point = 77
   Insn 122(l2): point = 79
   Insn 121(l2): point = 81
   Insn 120(l2): point = 83
   Insn 119(l2): point = 85
   Insn 117(l2): point = 88
   Insn 116(l2): point = 90
   Insn 113(l2): point = 92
   Insn 115(l2): point = 94
   Insn 94(l1): point = 97
   Insn 93(l1): point = 99
   Insn 92(l1): point = 101
   Insn 89(l1): point = 104
   Insn 86(l1): point = 107
   Insn 85(l1): point = 109
   Insn 84(l1): point = 111
   Insn 83(l1): point = 113
   Insn 151(l1): point = 116
   Insn 78(l1): point = 118
   Insn 77(l1): point = 120
   Insn 76(l1): point = 122
   Insn 72(l1): point = 124
   Insn 75(l1): point = 126
   Insn 71(l1): point = 128
   Insn 74(l1): point = 130
   Insn 63(l1): point = 133
   Insn 61(l1): point = 135
   Insn 62(l1): point = 137
   Insn 60(l1): point = 139
   Insn 59(l1): point = 141
   Insn 58(l1): point = 143
   Insn 57(l1): point = 145
   Insn 54(l1): point = 148
   Insn 53(l1): point = 150
   Insn 51(l1): point = 152
   Insn 43(l1): point = 154
   Insn 47(l1): point = 156
   Insn 45(l1): point = 158
   Insn 42(l1): point = 160
   Insn 41(l1): point = 162
   Insn 40(l1): point = 164
   Insn 50(l1): point = 166
   Insn 39(l1): point = 168
   Insn 49(l1): point = 170
   Insn 38(l1): point = 172
   Insn 30(l1): point = 175
   Insn 29(l1): point = 177
   Insn 26(l1): point = 179
   Insn 146(l1): point = 181
   Insn 24(l1): point = 183
 a0(r143): [1..3]
 a1(r147): [34..60] [1..23]
 a2(r164): [1..5]
 a3(r144): [15..21]
 a4(r168): [34..36]
 a5(r167): [34..38]
 a6(r137): [34..40]
 a7(r138): [34..44]
 a8(r165): [34..42]
 a9(r145): [48..58]
 a10(r143): [63..96]
 a11(r147): [63..96]
 a12(r164): [63..96]
 a13(r142): [73..92]
 a14(r163): [91..94]
 a15(r137): [97..185]
 a16(r138): [148..185] [97..124]
 a17(r147): [97..185]
 a18(r165): [97..185]
 a19(r167): [97..185]
 a20(r168): [97..185]
 a21(r159): [100..101]
 a22(r136): [148..150] [110..115]
 a23(r139): [119..177] [114..115]
 a24(r140): [123..130]
 a25(r158): [125..128]
 a26(r133): [129..139]
 a27(r152): [155..160]
 a28(r151): [163..164]
 Rebuilding regno allocno list for 163
 Rebuilding regno allocno list for 159
 Rebuilding regno allocno list for 158
 Rebuilding regno allocno list for 152
 Rebuilding regno allocno list for 151
 Rebuilding regno allocno list for 142
 Rebuilding regno allocno list for 140
 Rebuilding regno allocno list for 139
 Rebuilding regno allocno list for 136
 Rebuilding regno allocno list for 133
Compressing live ranges: from 186 to 43 - 23%
Ranges after the compression:
 a0(r143): [15..20] [0..1]
 a1(r147): [15..42] [6..14] [0..5]
 a2(r164): [15..20] [0..2]
 a3(r144): [3..4]
 a4(r168): [21..42] [6..7]
 a5(r167): [21..42] [6..8]
 a6(r137): [21..42] [6..9]
 a7(r138): [35..42] [21..29] [6..11]
 a8(r165): [21..42] [6..10]
 a9(r145): [12..13]
 a13(r142): [16..18]
 a14(r163): [17..19]
 a21(r159): [22..23]
 a22(r136): [35..36] [24..26]
 a23(r139): [27..41] [25..26]
 a24(r140): [28..33]
 a25(r158): [30..31]
 a26(r133): [32..34]
 a27(r152): [37..38]
 a28(r151): [39..40]
+++Allocating 160 bytes for conflict table (uncompressed size 232)
;; a0(r143,l0) conflicts: a2(r164,l0) a1(r147,l0) a13(r142,l0) a14(r163,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r147,l0) conflicts: a0(r143,l0) a2(r164,l0) a3(r144,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a9(r145,l0) a13(r142,l0) a14(r163,l0) a21(r159,l0) a22(r136,l0) a23(r139,l0) a24(r140,l0) a25(r158,l0) a26(r133,l0) a27(r152,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r164,l0) conflicts: a0(r143,l0) a1(r147,l0) a13(r142,l0) a14(r163,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r144,l0) conflicts: a1(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r168,l0) conflicts: a1(r147,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a21(r159,l0) a22(r136,l0) a23(r139,l0) a24(r140,l0) a25(r158,l0) a26(r133,l0) a27(r152,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r167,l0) conflicts: a1(r147,l0) a4(r168,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a21(r159,l0) a22(r136,l0) a23(r139,l0) a24(r140,l0) a25(r158,l0) a26(r133,l0) a27(r152,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a6(r137,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a7(r138,l0) a8(r165,l0) a21(r159,l0) a22(r136,l0) a23(r139,l0) a24(r140,l0) a25(r158,l0) a26(r133,l0) a27(r152,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a7(r138,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a8(r165,l0) a21(r159,l0) a22(r136,l0) a23(r139,l0) a24(r140,l0) a27(r152,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r165,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a21(r159,l0) a22(r136,l0) a23(r139,l0) a24(r140,l0) a25(r158,l0) a26(r133,l0) a27(r152,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a9(r145,l0) conflicts: a1(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r142,l0) conflicts: a0(r143,l0) a2(r164,l0) a1(r147,l0) a14(r163,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a14(r163,l0) conflicts: a0(r143,l0) a2(r164,l0) a1(r147,l0) a13(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r159,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a22(r136,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a23(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a23(r139,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a22(r136,l0) a24(r140,l0) a25(r158,l0) a26(r133,l0) a27(r152,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a24(r140,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a23(r139,l0) a25(r158,l0) a26(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r158,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a8(r165,l0) a23(r139,l0) a24(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a26(r133,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a8(r165,l0) a23(r139,l0) a24(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a27(r152,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a23(r139,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a28(r151,l0) conflicts: a1(r147,l0) a4(r168,l0) a5(r167,l0) a6(r137,l0) a7(r138,l0) a8(r165,l0) a23(r139,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1

  cp0:a7(r138)<->a25(r158)@125:shuffle
  regions=3, blocks=22, points=43
    allocnos=29, copies=1, conflicts=2, ranges=32

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 21 20 19 18 17 16 15 14 9 6 13 12 11 10 8 7 5 4 3 2
    all: 0r143 1r147 2r164 3r144 4r168 5r167 6r137 7r138 8r165 9r145 13r142 14r163 21r159 22r136 23r139 24r140 25r158 26r133 27r152 28r151
    modified regnos: 133 136 137 138 139 140 142 143 144 145 147 151 152 158 159 163 164 165 167 168
    border:
    Pressure: GENERAL_REGS=10
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 147 of GENERAL_REGS has 3 regs less
    Reg 164 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 3 regs less
    Reg 167 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 165 of GENERAL_REGS has 3 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 2 regs less
    Reg 151 of GENERAL_REGS has 2 regs less
      Pushing a25(r158,l0)
      Pushing a21(r159,l0)
      Pushing a14(r163,l0)
      Pushing a24(r140,l0)
      Pushing a26(r133,l0)
      Pushing a9(r145,l0)
      Pushing a3(r144,l0)
      Pushing a28(r151,l0)
      Pushing a27(r152,l0)
      Pushing a22(r136,l0)
      Pushing a2(r164,l0)
      Pushing a13(r142,l0)
      Pushing a0(r143,l0)
      Pushing a8(r165,l0)
      Pushing a5(r167,l0)
      Pushing a4(r168,l0)
      Pushing a7(r138,l0)
      Pushing a6(r137,l0)
      Pushing a23(r139,l0)
      Pushing a1(r147,l0)
      Popping a1(r147,l0)  -- assign reg 4
      Popping a23(r139,l0)  -- assign reg 5
      Popping a6(r137,l0)  -- assign reg 6
      Popping a7(r138,l0)  -- assign reg 7
      Popping a4(r168,l0)  -- assign reg 8
      Popping a5(r167,l0)  -- assign reg 10
      Popping a8(r165,l0)  -- assign reg 9
      Popping a0(r143,l0)  -- assign reg 5
      Popping a13(r142,l0)  -- assign reg 6
      Popping a2(r164,l0)  -- assign reg 7
      Popping a22(r136,l0)  -- assign reg 11
      Popping a27(r152,l0)  -- assign reg 3
      Popping a28(r151,l0)  -- assign reg 3
      Popping a3(r144,l0)  -- assign reg 3
      Popping a9(r145,l0)  -- assign reg 3
      Popping a26(r133,l0)  -- assign reg 0
      Popping a24(r140,l0)  -- assign reg 3
      Popping a14(r163,l0)  -- assign reg 3
      Popping a21(r159,l0)  -- assign reg 3
      Popping a25(r158,l0)  -- assign reg 7
Disposition:
   26:r133 l0     0   22:r136 l0    11    6:r137 l0     6    7:r138 l0     7
   23:r139 l0     5   24:r140 l0     3   13:r142 l0     6    0:r143 l0     5
    3:r144 l0     3    9:r145 l0     3    1:r147 l0     4   28:r151 l0     3
   27:r152 l0     3   25:r158 l0     7   21:r159 l0     3   14:r163 l0     3
    2:r164 l0     7    8:r165 l0     9    5:r167 l0    10    4:r168 l0     8
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 147
insn=9, live_throughout: 13, 147, dead_or_set: 145
insn=7, live_throughout: 13, 145, 147, dead_or_set: 
insn=10, live_throughout: 13, 145, 147, dead_or_set: 
insn=8, live_throughout: 13, 24, 145, 147, dead_or_set: 
insn=11, live_throughout: 13, 145, 147, dead_or_set: 
insn=13, live_throughout: 13, 147, dead_or_set: 14, 145
insn=14, live_throughout: 13, 147, dead_or_set: 
insn=16, live_throughout: 13, 147, dead_or_set: 138
insn=22, live_throughout: 13, 138, 147, dead_or_set: 165
insn=17, live_throughout: 13, 138, 147, 165, dead_or_set: 137
insn=44, live_throughout: 13, 137, 138, 147, 165, dead_or_set: 167
insn=46, live_throughout: 13, 137, 138, 147, 165, 167, dead_or_set: 168
insn=149, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 
insn=20, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 
insn=24, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 0
insn=146, live_throughout: 0, 13, 137, 138, 147, 165, 167, 168, dead_or_set: 1
insn=26, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 0, 1, 14
insn=29, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 0, 139
insn=30, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 
insn=33, live_throughout: 13, dead_or_set: 0
insn=34, live_throughout: 13, dead_or_set: 0, 14
insn=36, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 
insn=38, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 
insn=49, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 0
insn=39, live_throughout: 0, 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 
insn=50, live_throughout: 0, 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 1
insn=40, live_throughout: 0, 1, 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 151
insn=41, live_throughout: 0, 1, 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 151
insn=42, live_throughout: 0, 1, 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 152
insn=45, live_throughout: 0, 1, 13, 137, 138, 139, 147, 152, 165, 167, 168, dead_or_set: 
insn=47, live_throughout: 0, 1, 13, 137, 138, 139, 147, 152, 165, 167, 168, dead_or_set: 
insn=43, live_throughout: 0, 1, 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 152
insn=51, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 0, 1, 14
insn=53, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 0, 136
insn=54, live_throughout: 13, 136, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 
insn=57, live_throughout: 13, 137, 139, 147, 165, 167, 168, dead_or_set: 0
insn=58, live_throughout: 0, 13, 137, 139, 147, 165, 167, 168, dead_or_set: 1
insn=59, live_throughout: 13, 137, 139, 147, 165, 167, 168, dead_or_set: 0, 1, 14
insn=60, live_throughout: 13, 137, 139, 147, 165, 167, 168, dead_or_set: 0, 133
insn=62, live_throughout: 13, 133, 137, 139, 147, 165, 167, 168, dead_or_set: 
insn=61, live_throughout: 13, 24, 133, 137, 139, 147, 165, 167, 168, dead_or_set: 
insn=63, live_throughout: 13, 133, 137, 139, 147, 165, 167, 168, dead_or_set: 
insn=66, live_throughout: 13, dead_or_set: 0
insn=67, live_throughout: 13, dead_or_set: 0, 14
insn=69, live_throughout: 13, 133, 137, 139, 147, 165, 167, 168, dead_or_set: 
insn=74, live_throughout: 13, 133, 137, 139, 147, 165, 167, 168, dead_or_set: 140
insn=71, live_throughout: 13, 137, 139, 140, 147, 165, 167, 168, dead_or_set: 133, 158
insn=75, live_throughout: 13, 137, 139, 140, 147, 158, 165, 167, 168, dead_or_set: 
insn=72, live_throughout: 13, 137, 139, 140, 147, 165, 167, 168, dead_or_set: 138, 158
insn=76, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 140
insn=77, live_throughout: 13, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 
insn=78, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 139
insn=151, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 
insn=81, live_throughout: 13, 136, 137, 138, 139, 147, 165, 167, 168, dead_or_set: 
insn=83, live_throughout: 13, 136, 137, 138, 147, 165, 167, 168, dead_or_set: 0, 139
insn=84, live_throughout: 13, 136, 137, 138, 147, 165, 167, 168, dead_or_set: 0, 14
insn=85, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 136
insn=86, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 
insn=87, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 
insn=89, live_throughout: 13, 138, 147, 165, 167, 168, dead_or_set: 137
insn=90, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 
insn=92, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 159
insn=93, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 159
insn=94, live_throughout: 13, 137, 138, 147, 165, 167, 168, dead_or_set: 
insn=95, live_throughout: 13, 147, dead_or_set: 
insn=97, live_throughout: 13, 147, dead_or_set: 144
insn=98, live_throughout: 13, 144, 147, dead_or_set: 
insn=99, live_throughout: 13, 144, 147, dead_or_set: 
insn=101, live_throughout: 13, 147, dead_or_set: 14, 144
insn=102, live_throughout: 13, 147, dead_or_set: 
insn=106, live_throughout: 13, 147, dead_or_set: 0
insn=107, live_throughout: 0, 13, 147, dead_or_set: 1
insn=108, live_throughout: 13, 147, dead_or_set: 0, 1, 14
insn=114, live_throughout: 13, 14, 147, dead_or_set: 164
insn=109, live_throughout: 13, 14, 147, 164, dead_or_set: 143
insn=153, live_throughout: 13, 14, 143, 147, 164, dead_or_set: 
insn=133, live_throughout: 13, 143, 147, 164, dead_or_set: 
insn=115, live_throughout: 13, 143, 147, 164, dead_or_set: 163
insn=113, live_throughout: 13, 143, 147, 163, 164, dead_or_set: 142
insn=116, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 163
insn=117, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 
insn=119, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 0
insn=120, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 0, 14
insn=121, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 0
insn=122, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 0, 14
insn=123, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 0
insn=124, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 0, 14
insn=125, live_throughout: 13, 142, 143, 147, 164, dead_or_set: 
insn=127, live_throughout: 13, 143, 147, 164, dead_or_set: 0, 142
insn=128, live_throughout: 13, 143, 147, 164, dead_or_set: 0, 14
insn=129, live_throughout: 13, 14, 147, 164, dead_or_set: 143
insn=131, live_throughout: 13, 14, 143, 147, 164, dead_or_set: 
insn=134, live_throughout: 13, 14, 143, 147, 164, dead_or_set: 
insn=135, live_throughout: 13, 14, 143, 147, 164, dead_or_set: 
init_insns for 151: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 159: (insn_list:REG_DEP_TRUE 92 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 115 (nil))
init_insns for 164: (insn_list:REG_DEP_TRUE 114 (nil))
init_insns for 165: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 46 (nil))
changing reg in insn 60
changing reg in insn 61
changing reg in insn 71
changing reg in insn 62
changing reg in insn 53
changing reg in insn 85
changing reg in insn 17
changing reg in insn 89
changing reg in insn 93
changing reg in insn 89
changing reg in insn 57
changing reg in insn 49
changing reg in insn 72
changing reg in insn 16
changing reg in insn 17
changing reg in insn 39
changing reg in insn 29
changing reg in insn 47
changing reg in insn 45
changing reg in insn 77
changing reg in insn 83
changing reg in insn 78
changing reg in insn 76
changing reg in insn 75
changing reg in insn 61
changing reg in insn 58
changing reg in insn 50
changing reg in insn 43
changing reg in insn 41
changing reg in insn 39
changing reg in insn 38
changing reg in insn 42
changing reg in insn 74
changing reg in insn 76
changing reg in insn 75
changing reg in insn 113
changing reg in insn 127
changing reg in insn 123
changing reg in insn 121
changing reg in insn 119
changing reg in insn 129
changing reg in insn 109
changing reg in insn 129
changing reg in insn 134
changing reg in insn 113
changing reg in insn 97
changing reg in insn 101
changing reg in insn 98
changing reg in insn 9
changing reg in insn 13
changing reg in insn 10
changing reg in insn 2
changing reg in insn 59
changing reg in insn 51
changing reg in insn 77
changing reg in insn 78
changing reg in insn 38
changing reg in insn 8
changing reg in insn 8
changing reg in insn 7
changing reg in insn 7
changing reg in insn 134
changing reg in insn 109
changing reg in insn 97
changing reg in insn 92
changing reg in insn 74
changing reg in insn 42
changing reg in insn 40
changing reg in insn 9
changing reg in insn 92
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 71
changing reg in insn 72
changing reg in insn 92
changing reg in insn 93
changing reg in insn 115
changing reg in insn 116
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 22
changing reg in insn 24
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
Spilling for insn 7.
Spilling for insn 8.
Spilling for insn 38.
Spilling for insn 39.
Spilling for insn 41.
Spilling for insn 45.
Spilling for insn 47.
Spilling for insn 43.
Spilling for insn 61.
Spilling for insn 75.
Spilling for insn 76.
Spilling for insn 77.
Spilling for insn 78.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                                                        (const_int 4 [0x4])) [0 <variable>.buses.prev+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                                                        (const_int 4 [0x4])) [0 <variable>.buses.prev+0 S4 A32])

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 52 [0x34])) [0 <variable>.hw+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 52 [0x34])) [0 <variable>.hw+0 S4 A32])

Reloads for insn # 39
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 8 [0x8])) [0 <variable>.busnr+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 8 [0x8])) [0 <variable>.busnr+0 S4 A64])

Reloads for insn # 41
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 44 [0x2c])) [0 <variable>.swizzle+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 44 [0x2c])) [0 <variable>.swizzle+0 S4 A32])

Reloads for insn # 45
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])

Reloads for insn # 47
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])

Reloads for insn # 43
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])

Reloads for insn # 61
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 28 [0x1c])) [0 <variable>.bus+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 28 [0x1c])) [0 <variable>.bus+0 S4 A32])

Reloads for insn # 75
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])
                                                        (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])
                                                        (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])

Reloads for insn # 76
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139]) [0 <variable>.node.next+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139]) [0 <variable>.node.next+0 S4 A64])

Reloads for insn # 77
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])

Reloads for insn # 78
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])
deleting insn with uid = 60.


try_optimize_cfg iteration 1

Deleting fallthru block 21.
deleting insn with uid = 143.
deleting block 21


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 13.
deleting insn with uid = 13.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 34.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 59.
deleting insn with uid = 59.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 84.
rescanning insn with uid = 101.
deleting insn with uid = 101.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 120.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 124.
verify found no changes in insn with uid = 128.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 27 count 43 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 27 count 51 (  2.4)


pci_common_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={25d,19u} r1={18d,4u} r2={14d} r3={21d,10u} r4={1d,17u,2d} r5={3d,17u,1d} r6={3d,8u} r7={4d,4u,1d} r8={1d,1u} r9={1d,1u} r10={1d,1u} r11={1d,1u} r12={14d} r13={1d,33u} r14={14d,1u} r15={13d} r16={13d} r17={13d} r18={13d} r19={13d} r20={13d} r21={13d} r22={13d} r23={13d} r24={22d,9u} r27={13d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={13d} r38={13d} r39={13d} r40={13d} r41={13d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r81={13d} r82={13d} r83={13d} r84={13d} r85={13d} r86={13d} r87={13d} r88={13d} r89={13d} r90={13d} r91={13d} r92={13d} r93={13d} r94={13d} r95={13d} r96={13d} r97={13d} r98={13d} r99={13d} r100={13d} r101={13d} r102={13d} r103={13d} r104={13d} r105={13d} r106={13d} r107={13d} r108={13d} r109={13d} r110={13d} r111={13d} r112={13d} r113={13d} r114={13d} r115={13d} r116={13d} r117={13d} r118={13d} r119={13d} r120={13d} r121={13d} r122={13d} r123={13d} r124={13d} r125={13d} r126={13d} r127={13d} 
;;    total ref usage 1704{1574d,126u,4e} in 82{69 regular + 13 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 9 2 arch/arm/kernel/bios32.c:535 (set (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
        (reg:SI 0 r0 [ hw ])) 167 {*arm_movsi_insn} (nil))

(insn 9 2 7 2 arch/arm/kernel/bios32.c:540 (set (reg/f:SI 3 r3 [orig:145 D.18778 ] [145])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 20 [0x14])) [0 <variable>.preinit+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 9 10 2 include/linux/list.h:26 (set (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 10 7 8 2 arch/arm/kernel/bios32.c:540 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:145 D.18778 ] [145])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 8 10 11 2 include/linux/list.h:27 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 4 [0x4])) [0 <variable>.buses.prev+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (nil))

(jump_insn 11 8 12 2 arch/arm/kernel/bios32.c:540 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  3 [69.8%]  (fallthru)
;; Succ edge  4 [30.2%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [69.8%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 13 12 14 3 arch/arm/kernel/bios32.c:541 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:145 D.18778 ] [145]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [30.2%] 
(code_label 14 13 15 4 145 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 22 4 arch/arm/kernel/bios32.c:541 (set (reg/v:SI 7 r7 [orig:138 busnr ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 22 16 17 4 include/linux/slab_def.h:122 (set (reg/f:SI 9 r9 [165])
        (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x111d99c0 malloc_sizes>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x111d99c0 malloc_sizes>)
        (nil)))

(insn 17 22 44 4 arch/arm/kernel/bios32.c:541 (set (reg/v:SI 6 r6 [orig:137 nr ] [137])
        (reg/v:SI 7 r7 [orig:138 busnr ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 44 17 46 4 arch/arm/kernel/bios32.c:512 (set (reg/f:SI 10 sl [167])
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e6a3c0 ioport_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e6a3c0 ioport_resource>)
        (nil)))

(insn 46 44 149 4 arch/arm/kernel/bios32.c:513 (set (reg/f:SI 8 r8 [168])
        (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e6a360 iomem_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e6a360 iomem_resource>)
        (nil)))

(jump_insn 149 46 150 4 (set (pc)
        (label_ref 90)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 150 149 20)

;; Start of basic block ( 13) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  13 [97.8%] 
(code_label 20 150 21 5 147 ("found") [1 uses])

(note 21 20 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 21 24 5 NOTE_INSN_DELETED)

(insn 24 27 146 5 include/linux/slab_def.h:122 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 9 r9 [165])
                (const_int 12 [0xc])) [0 <variable>.cs_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (const:SI (plus:SI (symbol_ref:SI ("malloc_sizes") [flags 0xc0] <var_decl 0x111d99c0 malloc_sizes>)
                    (const_int 12 [0xc]))) [0 <variable>.cs_cachep+0 S4 A32])
        (nil)))

(insn 146 24 26 5 include/linux/slab_def.h:122 (set (reg:SI 1 r1)
        (const_int 32976 [0x80d0])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 146 29 5 include/linux/slab_def.h:122 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmem_cache_alloc") [flags 0x41] <function_decl 0x111cff00 kmem_cache_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 26 30 5 arch/arm/kernel/bios32.c:502 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 30 29 31 5 arch/arm/kernel/bios32.c:502 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  6 [0.0%]  (fallthru,loop_exit)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru,loop_exit)
(note 31 30 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 31 34 6 arch/arm/kernel/bios32.c:503 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1144d800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1144d800>)
        (nil)))

(call_insn 34 33 35 6 arch/arm/kernel/bios32.c:503 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 35 34 36)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%] 
(code_label 36 35 37 7 148 "" [1 uses])

(note 37 36 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 48 37 52 7 NOTE_INSN_DELETED)

(note 52 48 38 7 NOTE_INSN_DELETED)

(insn 38 52 49 7 arch/arm/kernel/bios32.c:508 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 52 [0x34])) [0 <variable>.hw+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 49 38 39 7 arch/arm/kernel/bios32.c:515 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:137 nr ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 39 49 50 7 arch/arm/kernel/bios32.c:509 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 8 [0x8])) [0 <variable>.busnr+0 S4 A64])
        (reg/v:SI 7 r7 [orig:138 busnr ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 50 39 40 7 arch/arm/kernel/bios32.c:515 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 40 50 41 7 arch/arm/kernel/bios32.c:510 (set (reg/f:SI 3 r3 [orig:151 <variable>.swizzle ] [151])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 28 [0x1c])) [0 <variable>.swizzle+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 28 [0x1c])) [0 <variable>.swizzle+0 S4 A32])
        (nil)))

(insn 41 40 42 7 arch/arm/kernel/bios32.c:510 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 44 [0x2c])) [0 <variable>.swizzle+0 S4 A32])
        (reg/f:SI 3 r3 [orig:151 <variable>.swizzle ] [151])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 45 7 arch/arm/kernel/bios32.c:511 (set (reg/f:SI 3 r3 [orig:152 <variable>.map_irq ] [152])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 32 [0x20])) [0 <variable>.map_irq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])
        (nil)))

(insn 45 42 47 7 arch/arm/kernel/bios32.c:512 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 32 [0x20])) [0 <variable>.resource+0 S4 A64])
        (reg/f:SI 10 sl [167])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e6a3c0 ioport_resource>)
        (nil)))

(insn 47 45 43 7 arch/arm/kernel/bios32.c:513 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 36 [0x24])) [0 <variable>.resource+4 S4 A32])
        (reg/f:SI 8 r8 [168])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e6a360 iomem_resource>)
        (nil)))

(insn 43 47 51 7 arch/arm/kernel/bios32.c:511 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 48 [0x30])) [0 <variable>.map_irq+0 S4 A64])
        (reg/f:SI 3 r3 [orig:152 <variable>.map_irq ] [152])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 43 53 7 arch/arm/kernel/bios32.c:515 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                                (const_int 12 [0xc])) [0 <variable>.setup+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 53 51 54 7 arch/arm/kernel/bios32.c:517 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 11 fp [orig:136 ret ] [136])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 54 53 55 7 arch/arm/kernel/bios32.c:517 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2699 [0xa8b])
        (nil)))
;; End of basic block 7 -> ( 8 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [73.0%]  (fallthru)
;; Succ edge  11 [27.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [73.0%]  (fallthru)
(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 8 NOTE_INSN_DELETED)

(insn 57 56 58 8 arch/arm/kernel/bios32.c:518 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:137 nr ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 8 arch/arm/kernel/bios32.c:518 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 59 58 62 8 arch/arm/kernel/bios32.c:518 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                                (const_int 16 [0x10])) [0 <variable>.scan+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 62 59 61 8 arch/arm/kernel/bios32.c:520 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:133 D.19246 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 61 62 63 8 arch/arm/kernel/bios32.c:518 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 28 [0x1c])) [0 <variable>.bus+0 S4 A32])
        (reg/f:SI 0 r0 [orig:133 D.19246 ] [133])) 167 {*arm_movsi_insn} (nil))

(jump_insn 63 61 64 8 arch/arm/kernel/bios32.c:520 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  9 [0.0%]  (fallthru,loop_exit)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  8 [0.0%]  (fallthru,loop_exit)
(note 64 63 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 66 64 67 9 arch/arm/kernel/bios32.c:521 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1139b940>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x1139b940>)
        (nil)))

(call_insn 67 66 68 9 arch/arm/kernel/bios32.c:521 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10a67680 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 9 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 68 67 69)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7]
;; live  kill	

;; Pred edge  8 [100.0%] 
(code_label 69 68 70 10 150 "" [1 uses])

(note 70 69 74 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 74 70 71 10 include/linux/list.h:62 (set (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 74 75 10 arch/arm/kernel/bios32.c:523 (set (reg:SI 7 r7 [orig:158 <variable>.subordinate ] [158])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 0 r0 [orig:133 D.19246 ] [133])
                    (const_int 79 [0x4f])) [0 <variable>.subordinate+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 75 71 72 10 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 72 75 76 10 arch/arm/kernel/bios32.c:523 (set (reg/v:SI 7 r7 [orig:138 busnr ] [138])
        (plus:SI (reg:SI 7 r7 [orig:158 <variable>.subordinate ] [158])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 76 72 77 10 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139]) [0 <variable>.node.next+0 S4 A64])
        (reg/f:SI 3 r3 [orig:140 D.19239 ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 10 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:139 ret ] [139])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:147 hw ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 151 10 include/linux/list.h:44 (set (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(jump_insn 151 78 152 10 (set (pc)
        (label_ref 87)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 152 151 81)

;; Start of basic block ( 7) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [27.0%] 
(code_label 81 152 82 11 149 "" [1 uses])

(note 82 81 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 11 arch/arm/kernel/bios32.c:527 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 84 83 85 11 arch/arm/kernel/bios32.c:527 (parallel [
            (call (mem:SI (symbol_ref:SI ("kfree") [flags 0x41] <function_decl 0x10d75880 kfree>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 85 84 86 11 arch/arm/kernel/bios32.c:528 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 11 fp [orig:136 ret ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 86 85 87 11 arch/arm/kernel/bios32.c:528 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 95)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 225 [0xe1])
        (nil)))
;; End of basic block 11 -> ( 14 12)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  14 [2.2%]  (loop_exit)
;; Succ edge  12 [97.8%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  11 [97.8%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 87 86 88 12 151 "" [1 uses])

(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 12 arch/arm/kernel/bios32.c:500 (set (reg/v:SI 6 r6 [orig:137 nr ] [137])
        (plus:SI (reg/v:SI 6 r6 [orig:137 nr ] [137])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 12 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 90 89 91 13 146 "" [1 uses])

(note 91 90 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 13 arch/arm/kernel/bios32.c:500 discrim 1 (set (reg:SI 3 r3 [orig:159 <variable>.nr_controllers ] [159])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 8 [0x8])) [0 <variable>.nr_controllers+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 8 [0x8])) [0 <variable>.nr_controllers+0 S4 A32])
        (nil)))

(insn 93 92 94 13 arch/arm/kernel/bios32.c:500 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:137 nr ] [137])
            (reg:SI 3 r3 [orig:159 <variable>.nr_controllers ] [159]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 94 93 95 13 arch/arm/kernel/bios32.c:500 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil)))
;; End of basic block 13 -> ( 5 14)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  5 [97.8%] 
;; Succ edge  14 [2.2%]  (fallthru,loop_exit)

;; Start of basic block ( 13 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [2.2%]  (fallthru,loop_exit)
;; Pred edge  11 [2.2%]  (loop_exit)
(code_label 95 94 96 14 152 "" [1 uses])

(note 96 95 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 98 14 arch/arm/kernel/bios32.c:543 (set (reg/f:SI 3 r3 [orig:144 D.18781 ] [144])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147])
                (const_int 24 [0x18])) [0 <variable>.postinit+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 14 arch/arm/kernel/bios32.c:543 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:144 D.18781 ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 14 arch/arm/kernel/bios32.c:543 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  15 [69.8%]  (fallthru)
;; Succ edge  16 [30.2%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  14 [69.8%]  (fallthru)
(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(call_insn 101 100 102 15 arch/arm/kernel/bios32.c:544 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:144 D.18781 ] [144]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 7 [r7]
;; live  kill	 14 [lr]

;; Pred edge  14 [30.2%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 102 101 103 16 153 "" [1 uses])

(note 103 102 106 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 106 103 107 16 arch/arm/kernel/bios32.c:546 (set (reg:SI 0 r0)
        (symbol_ref:SI ("pcibios_swizzle") [flags 0x3] <function_decl 0x1126cd00 pcibios_swizzle>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("pcibios_swizzle") [flags 0x3] <function_decl 0x1126cd00 pcibios_swizzle>)
        (nil)))

(insn 107 106 108 16 arch/arm/kernel/bios32.c:546 (set (reg:SI 1 r1)
        (symbol_ref:SI ("pcibios_map_irq") [flags 0x3] <function_decl 0x1126ce00 pcibios_map_irq>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("pcibios_map_irq") [flags 0x3] <function_decl 0x1126ce00 pcibios_map_irq>)
        (nil)))

(call_insn 108 107 114 16 arch/arm/kernel/bios32.c:546 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_fixup_irqs") [flags 0x41] <function_decl 0x10faa900 pci_fixup_irqs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 114 108 109 16 arch/arm/kernel/bios32.c:551 (set (reg/f:SI 7 r7 [164])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 109 114 153 16 arch/arm/kernel/bios32.c:548 (set (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:147 hw ] [147]) [0 <variable>.buses.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 153 109 154 16 arch/arm/kernel/bios32.c:548 (set (pc)
        (label_ref 131)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 20)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  20 [100.0%] 

(barrier 154 153 133)

;; Start of basic block ( 20) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  20 [91.0%] 
(code_label 133 154 112 17 156 "" [1 uses])

(note 112 133 115 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 115 112 113 17 arch/arm/kernel/bios32.c:551 (set (reg:SI 3 r3 [orig:163 use_firmware ] [163])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [164])
                (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [164])
                (const_int 4 [0x4])) [0 use_firmware+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 use_firmware+0 S4 A32])
            (nil))))

(insn 113 115 116 17 arch/arm/kernel/bios32.c:549 (set (reg/v/f:SI 6 r6 [orig:142 bus ] [142])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
                (const_int 28 [0x1c])) [0 <variable>.bus+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 116 113 117 17 arch/arm/kernel/bios32.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:163 use_firmware ] [163])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 117 116 118 17 arch/arm/kernel/bios32.c:551 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  18 [29.0%]  (fallthru)
;; Succ edge  19 [71.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  17 [29.0%]  (fallthru)
(note 118 117 119 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 18 arch/arm/kernel/bios32.c:555 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn 120 119 121 18 arch/arm/kernel/bios32.c:555 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_bus_size_bridges") [flags 0x41] <function_decl 0x10faa580 pci_bus_size_bridges>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 121 120 122 18 arch/arm/kernel/bios32.c:560 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn 122 121 123 18 arch/arm/kernel/bios32.c:560 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_bus_assign_resources") [flags 0x41] <function_decl 0x10faa500 pci_bus_assign_resources>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 123 122 124 18 arch/arm/kernel/bios32.c:565 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn 124 123 125 18 arch/arm/kernel/bios32.c:565 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_enable_bridges") [flags 0x41] <function_decl 0x10fb1000 pci_enable_bridges>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 18 -> ( 19)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 17 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  17 [71.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 125 124 126 19 155 "" [1 uses])

(note 126 125 127 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 19 arch/arm/kernel/bios32.c:571 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:142 bus ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn 128 127 129 19 arch/arm/kernel/bios32.c:571 (parallel [
            (call (mem:SI (symbol_ref:SI ("pci_bus_add_devices") [flags 0x41] <function_decl 0x10f8e080 pci_bus_add_devices>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 129 128 131 19 arch/arm/kernel/bios32.c:548 (set (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
        (mem/s/f/j:SI (reg/v/f:SI 5 r5 [orig:143 sys ] [143]) [0 <variable>.node.next+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 19 16) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru,dfs_back)
;; Pred edge  16 [100.0%] 
(code_label 131 129 132 20 154 "" [1 uses])

(note 132 131 134 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 134 132 135 20 arch/arm/kernel/bios32.c:548 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:143 sys ] [143])
            (reg/v/f:SI 4 r4 [orig:147 hw ] [147]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 135 134 156 20 arch/arm/kernel/bios32.c:548 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 20 -> ( 17 1)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]


;; Succ edge  17 [91.0%] 
;; Succ edge  EXIT [9.0%]  (fallthru,loop_exit)

(note 156 135 157 NOTE_INSN_DELETED)

(note 157 156 0 NOTE_INSN_DELETED)

