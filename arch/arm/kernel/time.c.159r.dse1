
;; Function timer_init_syscore_ops (timer_init_syscore_ops)[0:1075] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x11049480 register_syscore_ops>)

   after canon_rtx address: (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x11049480 register_syscore_ops>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


timer_init_syscore_ops

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,3u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 145{131d,14u,0e} in 6{5 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/time.c:143 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/time.c:143 (set (reg:SI 0 r0)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(call_insn 7 6 8 2 arch/arm/kernel/time.c:143 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_syscore_ops") [flags 0x41] <function_decl 0x11049480 register_syscore_ops>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 8 7 12 2 arch/arm/kernel/time.c:146 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 arch/arm/kernel/time.c:146 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 18 12 0 2 arch/arm/kernel/time.c:146 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function time_init (time_init)[0:1076] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (reg/f:SI 135)

   after canon_rtx address: (symbol_ref:SI ("machine_desc") [flags 0xc0] <var_decl 0x112f9060 machine_desc>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (plus:SI (reg/f:SI 134 [ machine_desc ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/f:SI 134 [ machine_desc ])
    (const_int 52 [0x34]))
expanding: r134 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 134 [ machine_desc ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/f:SI 134 [ machine_desc ])
    (const_int 52 [0x34]))
  varying cselib base=1 offset = 52
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ machine_desc ])
        (const_int 52 [0x34])) [0 <variable>.timer+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (plus:SI (reg/f:SI 136)
    (const_int 20 [0x14]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 20 [0x14])))
  gid=1 offset=20 
 processing const base store gid=1[20..24)
mems_found = 1, cannot_delete = false

**scanning insn=10
  mem: (reg/f:SI 133 [ system_timer.290 ])

   after canon_rtx address: (reg/f:SI 133 [ system_timer.290 ])
expanding: r133 into: NULL

   after cselib_expand address: (reg/f:SI 133 [ system_timer.290 ])

   after canon_rtx address: (reg/f:SI 133 [ system_timer.290 ])
  varying cselib base=2 offset = 0
 processing cselib load mem:(mem/s/f/j:SI (reg/f:SI 133 [ system_timer.290 ]) [0 <variable>.init+0 S4 A32])
 processing cselib load against insn 9
removing from active insn=9 has store
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (reg/f:SI 137 [ <variable>.init ])

   after canon_rtx address: (reg/f:SI 137 [ <variable>.init ])
expanding: r137 into: NULL

   after cselib_expand address: (reg/f:SI 137 [ <variable>.init ])

   after canon_rtx address: (reg/f:SI 137 [ <variable>.init ])
  varying cselib base=3 offset = 0
 processing cselib load mem:(mem:SI (reg/f:SI 137 [ <variable>.init ]) [0 S4 A32])

**scanning insn=12
  mem: (symbol_ref:SI ("sched_clock_postinit") [flags 0x41] <function_decl 0x112e9c00 sched_clock_postinit>)

   after canon_rtx address: (symbol_ref:SI ("sched_clock_postinit") [flags 0x41] <function_decl 0x112e9c00 sched_clock_postinit>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


time_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp] 14[lr]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 264{248d,16u,0e} in 8{6 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135 136 137
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/time.c:152 (set (reg/f:SI 135)
        (symbol_ref:SI ("machine_desc") [flags 0xc0] <var_decl 0x112f9060 machine_desc>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/time.c:152 (set (reg/f:SI 134 [ machine_desc ])
        (mem/f/c/i:SI (reg/f:SI 135) [0 machine_desc+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/time.c:152 (set (reg/f:SI 133 [ system_timer.290 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ machine_desc ])
                (const_int 52 [0x34])) [0 <variable>.timer+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ machine_desc ])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/time.c:152 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/time.c:152 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 20 [0x14])) [0 system_timer+0 S4 A32])
        (reg/f:SI 133 [ system_timer.290 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/time.c:153 (set (reg/f:SI 137 [ <variable>.init ])
        (mem/s/f/j:SI (reg/f:SI 133 [ system_timer.290 ]) [0 <variable>.init+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ system_timer.290 ])
        (nil)))

(call_insn 11 10 12 2 arch/arm/kernel/time.c:153 (parallel [
            (call (mem:SI (reg/f:SI 137 [ <variable>.init ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 137 [ <variable>.init ])
        (nil))
    (nil))

(call_insn/j 12 11 0 2 arch/arm/kernel/time.c:155 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_clock_postinit") [flags 0x41] <function_decl 0x112e9c00 sched_clock_postinit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function profile_pc (profile_pc)[0:1074]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 60 [0x3c]))
expanding: r138 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0 [ regs ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0 [ regs ])
    (const_int 60 [0x3c]))
  varying cselib base=1 offset = 60
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (symbol_ref:SI ("in_lock_functions") [flags 0x41] <function_decl 0x10ad9980 in_lock_functions>)

   after canon_rtx address: (symbol_ref:SI ("in_lock_functions") [flags 0x41] <function_decl 0x10ad9980 in_lock_functions>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=82
  mem: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 60 [0x3c]))
expanding: r138 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 60 [0x3c]))
  varying cselib base=1 offset = 60
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 44 [0x2c]))
expanding: r138 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 44 [0x2c]))
  varying cselib base=1 offset = 44
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
        (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
  gid=1 offset=-16 
 processing const base store gid=1[-16..-12)
mems_found = 1, cannot_delete = false

**scanning insn=19
  mem: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 52 [0x34]))
expanding: r138 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 52 [0x34]))
  varying cselib base=1 offset = 52
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
        (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
 processing cselib load against insn 18
removing from active insn=18 has store
mems_found = 0, cannot_delete = true

**scanning insn=20
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -12 [0xfffffffffffffff4]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -12 [0xfffffffffffffff4]))
  gid=1 offset=-12 
 processing const base store gid=1[-12..-8)
mems_found = 1, cannot_delete = false

**scanning insn=21
  mem: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 56 [0x38]))
expanding: r138 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ regs ])
    (const_int 56 [0x38]))
  varying cselib base=1 offset = 56
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
        (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
 processing cselib load against insn 20
removing from active insn=20 has store
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -8 [0xfffffffffffffff8]))
  gid=1 offset=-8 
 processing const base store gid=1[-8..-4)
mems_found = 1, cannot_delete = false

**scanning insn=24
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))
  gid=1 offset=-4 
 processing const base store gid=1[-4..0)
    trying store in insn=22 gid=1[-8..-4)
mems_found = 1, cannot_delete = false

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x112e9c80 unwind_frame>)

   after canon_rtx address: (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x112e9c80 unwind_frame>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=38
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))
  gid=1 offset=-4 
 processing const load gid=1[-4..0)
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (symbol_ref:SI ("in_lock_functions") [flags 0x41] <function_decl 0x10ad9980 in_lock_functions>)

   after canon_rtx address: (symbol_ref:SI ("in_lock_functions") [flags 0x41] <function_decl 0x10ad9980 in_lock_functions>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=45
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))
  gid=1 offset=-4 
 processing const load gid=1[-4..0)
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1 is frame related group 1(16+0): n 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 p 
group 2(0+0): n  p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 19 (  1.9)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 0 )->[2]->( 3 4 )
  in:   
  gen:  
  kill: *MISSING*
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16

( 2 )->[3]->( 10 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16

( 2 )->[4]->( 5 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  kill: 
  out:  

( 4 7 )->[5]->( 6 7 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 5 )->[6]->( 10 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16

( 5 )->[7]->( 5 9 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 7 )->[9]->( 10 )
  in:   5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  gen:  
  kill: 1, 2, 3, 4
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16

( 3 6 9 )->[10]->( 1 )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  gen:  
  kill: 
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16

( 10 )->[1]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 10
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 82
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 9
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 8
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 7
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
wild read
starting to process insn 6
  v:  
regular read
starting to process insn 2
  v:  
starting to process insn 83
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 26
  v:  
starting to process insn 24
  v:  
starting to process insn 22
  v:  1, 2, 3, 4
i = -8, index = 8
failing at i = -8
starting to process insn 21
  v:  1, 2, 3, 4, 5, 6, 7, 8
regular read
starting to process insn 20
  v:  1, 2, 3, 4, 5, 6, 7, 8
i = -12, index = 12
failing at i = -12
starting to process insn 19
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
regular read
starting to process insn 18
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
i = -16, index = 16
failing at i = -16
starting to process insn 17
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 31
  v:  
starting to process insn 30
  v:  
starting to process insn 29
  v:  
starting to process insn 28
  v:  
wild read
starting to process insn 27
  v:  
starting to process insn 33
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 43
  v:  
starting to process insn 42
  v:  
starting to process insn 40
  v:  
starting to process insn 39
  v:  
wild read
starting to process insn 38
  v:  
regular read
starting to process insn 45
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
regular read
starting to process insn 58
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
starting to process insn 52
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
dse: local deletions = 0, global deletions = 0, spill deletions = 0


profile_pc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,9u} r1={4d} r2={4d} r3={4d} r11={1d,9u} r12={4d} r13={1d,12u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,16u,1d} r26={1d,8u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,1u} r135={3d,1u} r136={1d,1u} r138={1d,5u,1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r145={1d,2u} r146={1d,1u} 
;;    total ref usage 455{380d,73u,2e} in 30{27 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 138 145
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 136 138 145
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/time.c:56 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/time.c:59 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 7 6 8 2 arch/arm/kernel/time.c:59 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("in_lock_functions") [flags 0x41] <function_decl 0x10ad9980 in_lock_functions>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/time.c:59 (set (reg:SI 136 [ D.21909 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 9 8 82 2 arch/arm/kernel/time.c:59 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.21909 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.21909 ])
        (nil)))

(insn 82 9 10 2 (set (reg:SI 145 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) -1 (nil))

(jump_insn 10 82 11 2 arch/arm/kernel/time.c:59 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 145


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 11 10 83 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 83 11 15 3 arch/arm/kernel/time.c:60 (set (reg:SI 135 [ D.21912 ])
        (reg:SI 145 [ <variable>.uregs+60 ])) -1 (expr_list:REG_DEAD (reg:SI 145 [ <variable>.uregs+60 ])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                    (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
            (nil))))
;; End of basic block 3 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 145
;; lr  def 	 139 140 141 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 145
;; live  gen 	 139 140 141 146
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 15 83 16 4 10 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/time.c:62 (set (reg:SI 139 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 arch/arm/kernel/time.c:62 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 frame.fp+0 S4 A64])
        (reg:SI 139 [ <variable>.uregs+44 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ <variable>.uregs+44 ])
        (nil)))

(insn 19 18 20 4 arch/arm/kernel/time.c:63 (set (reg:SI 140 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/kernel/time.c:63 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])
        (reg:SI 140 [ <variable>.uregs+52 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.uregs+52 ])
        (nil)))

(insn 21 20 22 4 arch/arm/kernel/time.c:64 (set (reg:SI 141 [ <variable>.uregs+56 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(insn 22 21 24 4 arch/arm/kernel/time.c:64 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 frame.lr+0 S4 A64])
        (reg:SI 141 [ <variable>.uregs+56 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.uregs+56 ])
        (nil)))

(insn 24 22 26 4 arch/arm/kernel/time.c:65 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
        (reg:SI 145 [ <variable>.uregs+60 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ <variable>.uregs+60 ])
        (nil)))

(insn 26 24 41 4 arch/arm/kernel/time.c:67 (set (reg/f:SI 146)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 7) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  7 [86.0%]  (dfs_back)
(code_label 41 26 25 5 13 "" [1 uses])

(note 25 41 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 25 28 5 arch/arm/kernel/time.c:67 (set (reg:SI 0 r0)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn 28 27 29 5 arch/arm/kernel/time.c:67 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x112e9c80 unwind_frame>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 28 30 5 arch/arm/kernel/time.c:67 (set (reg/v:SI 133 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 30 29 31 5 arch/arm/kernel/time.c:68 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(jump_insn 31 30 32 5 arch/arm/kernel/time.c:68 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  6 [4.5%]  (fallthru,loop_exit)
;; Succ edge  7 [95.5%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  5 [4.5%]  (fallthru,loop_exit)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 36 6 arch/arm/kernel/time.c:69 (set (reg:SI 135 [ D.21912 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]

;; Pred edge  5 [95.5%] 
(code_label 36 33 37 7 12 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 arch/arm/kernel/time.c:70 (set (reg:SI 0 r0)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 40 7 arch/arm/kernel/time.c:70 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("in_lock_functions") [flags 0x41] <function_decl 0x10ad9980 in_lock_functions>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 40 39 42 7 arch/arm/kernel/time.c:70 (set (reg:SI 134 [ D.21920 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 42 40 43 7 arch/arm/kernel/time.c:70 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.21920 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.21920 ])
        (nil)))

(jump_insn 43 42 44 7 arch/arm/kernel/time.c:70 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 7 -> ( 5 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  5 [86.0%]  (dfs_back)
;; Succ edge  9 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  7 [14.0%]  (fallthru,loop_exit)
(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 9 arch/arm/kernel/time.c:72 (set (reg:SI 135 [ D.21912 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 3 6 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 46 45 47 10 11 "" [0 uses])

(note 47 46 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 52 47 58 10 arch/arm/kernel/time.c:73 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.21912 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.21912 ])
        (nil)))

(insn 58 52 0 10 arch/arm/kernel/time.c:73 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
