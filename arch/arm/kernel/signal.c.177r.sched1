
;; Function setup_return (setup_return)[0:1448]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)


setup_return

Dataflow summary:
def_info->table_size = 186, use_info->table_size = 167
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,20u} r12={2d} r13={1d,21u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={11d,8u} r25={1d,20u} r26={1d,20u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u,1d} r134={2d,2u} r136={2d,3u} r137={2d,4u,1d} r138={4d,5u} r139={3d,3u} r140={3d,1u} r141={1d,3u} r142={2d,1u} r143={1d,1u} r144={1d,3u} r146={1d,6u} r147={1d,3u} r148={1d,5u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,2u} r157={1d,1u} r160={1d,2u} r161={1d,1u} r164={1d,1u,1d} r165={1d,1u} r166={1d,1u} r169={1d,1u} r171={1d,1u} 
;;    total ref usage 341{180d,156u,5e} in 69{68 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d37(25){ }d38(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 141 144 146 147 148 149 150 151 152
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 141 144 146 147 148 149 150 151 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 138 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150

( 2 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 154 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 154 155 156
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 133 138 139 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 133 138 139 157
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150

( 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150

( 8 5 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150

( 9 )->[10]->( 18 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; live  gen 	 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150

( 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; live  gen 	 24 [cc] 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150

( 11 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150

( 11 12 )->[13]->( 19 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 148
;; lr  def 	 24 [cc] 136 160 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc] 136 160 161 162
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160

( 13 )->[14]->( 19 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 148 160
;; lr  def 	 24 [cc] 134 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  gen 	 24 [cc] 134 164 165 166
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150

( 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 140 169
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; live  gen 	 140 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150

( 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; live  gen 	 0 [r0] 1 [r1] 140 171
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150

( 17 10 16 )->[18]->( 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142

( 14 13 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142

( 19 18 )->[20]->( 1 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 20 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u162(0){ }u163(11){ }u164(13){ }u165(14){ }u166(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 27 to worklist
  Adding insn 149 to worklist
  Adding insn 36 to worklist
  Adding insn 151 to worklist
  Adding insn 51 to worklist
  Adding insn 153 to worklist
  Adding insn 61 to worklist
  Adding insn 72 to worklist
  Adding insn 70 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 85 to worklist
  Adding insn 155 to worklist
  Adding insn 99 to worklist
  Adding insn 157 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 126 to worklist
Finished finding needed instructions:
processing block 20 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 120 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
  Adding insn 108 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
  Adding insn 53 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
  Adding insn 113 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
  Adding insn 89 to worklist
  Adding insn 87 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 94 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
  Adding insn 84 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
  Adding insn 80 to worklist
  Adding insn 159 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
  Adding insn 71 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
  Adding insn 63 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
  Adding insn 60 to worklist
  Adding insn 58 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
  Adding insn 50 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
  Adding insn 46 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
  Adding insn 35 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
  Adding insn 29 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 2 to 17 -- before reload
;;   ======================================================

;;	  0-->     3 r147=r1                           :cortex_a8_default
;;	  0-->     2 r146=r0                           :cortex_a8_default
;;	  1-->     4 r148=r2                           :cortex_a8_default
;;	  1-->     5 r149=r3                           :cortex_a8_default
;;	  2-->    14 r144=[r147+0x4]                   :cortex_a8_load_store_1
;;	  3-->    11 r151=[r146+0x40]                  :cortex_a8_load_store_1
;;	  4-->    16 cc=cmp(zxt(r144,0x1,0x19),0x0)    :cortex_a8_default
;;	  4-->     6 r150=[afp+0x4]                    :cortex_a8_load_store_1
;;	  5-->    12 r152=r151&0xffffff                :cortex_a8_default
;;	  5-->    10 r141=[r147]                       :cortex_a8_load_store_1
;;	  6-->    13 r138=r152&0xfffffffffffffdff      :cortex_a8_default
;;	  6-->    17 pc={(cc==0x0)?L21:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 17

;;   ======================================================
;;   -- basic block 3 from 19 to 20 -- before reload
;;   ======================================================

;;	  0-->    19 r143=r138&0xffffffffffffffe0      :cortex_a8_default
;;	  1-->    20 r138=r143|0x10                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 19
;;   new tail = 20

;;   ======================================================
;;   -- basic block 4 from 23 to 27 -- before reload
;;   ======================================================

;;	  0-->    23 r154=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  3-->    24 r156=[r154]                       :cortex_a8_load_store_1
;;	  5-->    26 {cc=cmp(r156&0x4,0x0);r155=r156&0x:cortex_a8_default
;;	  7-->    27 pc={(cc!=0x0)?L32:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 23
;;   new tail = 27

;;   ======================================================
;;   -- basic block 5 from 29 to 149 -- before reload
;;   ======================================================

;;	  0-->    29 r139=r155                         :cortex_a8_default
;;	  0-->   149 pc=L47                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 29
;;   new tail = 149

;;   ======================================================
;;   -- basic block 6 from 35 to 36 -- before reload
;;   ======================================================

;;	  0-->    35 {cc=cmp(r141&0x1,0x0);r139=r141&0x:cortex_a8_default
;;	  2-->    36 pc={(cc==0x0)?L44:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 35
;;   new tail = 36

;;   ======================================================
;;   -- basic block 7 from 38 to 151 -- before reload
;;   ======================================================

;;	  0-->    38 r133=r138|0x20                    :cortex_a8_default
;;	  0-->    41 r139=0x1                          :cortex_a8_default
;;	  1-->    39 r157=r133&0xfffffffff9ffffff      :cortex_a8_default
;;	  2-->    40 r138=r157&0xffffffffffff03ff      :cortex_a8_default
;;	  2-->   151 pc=L47                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 38
;;   new tail = 151

;;   ======================================================
;;   -- basic block 8 from 46 to 46 -- before reload
;;   ======================================================

;;	  0-->    46 r138=r138&0xffffffffffffffdf      :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 46
;;   new tail = 46

;;   ======================================================
;;   -- basic block 9 from 50 to 51 -- before reload
;;   ======================================================

;;	  0-->    50 cc=cmp(zxt(r144,0x1,0x1a),0x0)    :cortex_a8_default
;;	  2-->    51 pc={(cc==0x0)?L56:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 50
;;   new tail = 51

;;   ======================================================
;;   -- basic block 10 from 53 to 153 -- before reload
;;   ======================================================

;;	  0-->    53 r140=[r147+0x8]                   :cortex_a8_load_store_1
;;	  0-->   153 pc=L101                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 53
;;   new tail = 153

;;   ======================================================
;;   -- basic block 11 from 58 to 61 -- before reload
;;   ======================================================

;;	  0-->    60 cc=cmp(zxt(r144,0x1,0x2),0x0)     :cortex_a8_default
;;	  0-->    58 r137=r139<<0x1                    :cortex_a8_default
;;	  2-->    61 pc={(cc==0x0)?L64:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 58
;;   new tail = 61

;;   ======================================================
;;   -- basic block 12 from 63 to 63 -- before reload
;;   ======================================================

;;	  0-->    63 r137=r137+0x3                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 63
;;   new tail = 63

;;   ======================================================
;;   -- basic block 13 from 67 to 72 -- before reload
;;   ======================================================

;;	  0-->    67 r160=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->    69 r136=0x0                          :cortex_a8_default
;;	  3-->    68 r161=[r137*0x4+r160]              :cortex_a8_load_store_1
;;	  4-->    70 {r136=asm_operands;clobber cc;}   :nothing
;;	  5-->    71 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  7-->    72 pc={(cc!=0x0)?L111:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 67
;;   new tail = 72

;;   ======================================================
;;   -- basic block 14 from 75 to 81 -- before reload
;;   ======================================================

;;	  0-->    75 r164=r137+0x1                     :cortex_a8_default
;;	  0-->   159 r134=r136                         :cortex_a8_default
;;	  1-->    77 r166=r148+0x4                     :cortex_a8_default
;;	  2-->    76 r165=[r164*0x4+r160]              :cortex_a8_load_store_1
;;	  3-->    79 {r134=asm_operands;clobber cc;}   :nothing
;;	  4-->    80 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  6-->    81 pc={(cc!=0x0)?L111:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 75
;;   new tail = 81

;;   ======================================================
;;   -- basic block 15 from 84 to 85 -- before reload
;;   ======================================================

;;	  0-->    84 cc=cmp(zxt(r138,0x1,0x4),0x0)     :cortex_a8_default
;;	  2-->    85 pc={(cc==0x0)?L92:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 84
;;   new tail = 85

;;   ======================================================
;;   -- basic block 16 from 87 to 155 -- before reload
;;   ======================================================

;;	  0-->    87 r169=r139-0xfb00                  :cortex_a8_default
;;	  1-->    89 r140=r137*0x4+r169                :cortex_a8_default
;;	  1-->   155 pc=L101                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 87
;;   new tail = 155

;;   ======================================================
;;   -- basic block 17 from 94 to 100 -- before reload
;;   ======================================================

;;	  0-->    94 r171=`cpu_cache'                  :cortex_a8_load_store_1
;;	  0-->    97 r0=r148                           :cortex_a8_default
;;	  1-->    98 r1=r148+0x8                       :cortex_a8_default
;;	  2-->    99 call [[r171+0x10]]                :cortex_a8_issue_branch
;;	  2-->   100 r140=r139+r148                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 94
;;   new tail = 100

;;   ======================================================
;;   -- basic block 18 from 103 to 157 -- before reload
;;   ======================================================

;;	  0-->   107 [r146+0x40]=r138                  :cortex_a8_load_store_1
;;	  0-->   108 r142=0x0                          :cortex_a8_default
;;	  1-->   103 [r146]=r150                       :cortex_a8_load_store_1
;;	  2-->   104 [r146+0x34]=r149                  :cortex_a8_load_store_1
;;	  3-->   105 [r146+0x38]=r140                  :cortex_a8_load_store_1
;;	  4-->   106 [r146+0x3c]=r141                  :cortex_a8_load_store_1
;;	  4-->   157 pc=L114                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 103
;;   new tail = 157

;;   ======================================================
;;   -- basic block 19 from 113 to 113 -- before reload
;;   ======================================================

;;	  0-->   113 r142=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 113
;;   new tail = 113

;;   ======================================================
;;   -- basic block 20 from 120 to 126 -- before reload
;;   ======================================================

;;	  0-->   120 r0=r142                           :cortex_a8_default
;;	  0-->   126 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 120
;;   new tail = 126


;; Procedure interblock/speculative motions == 0/0 




setup_return

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,20u} r12={2d} r13={1d,21u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={11d,8u} r25={1d,20u} r26={1d,20u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u,1d} r134={2d,2u} r136={2d,3u} r137={2d,4u,1d} r138={4d,5u} r139={3d,3u} r140={3d,1u} r141={1d,3u} r142={2d,1u} r143={1d,1u} r144={1d,3u} r146={1d,6u} r147={1d,3u} r148={1d,5u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,2u} r157={1d,1u} r160={1d,2u} r161={1d,1u} r164={1d,1u,1d} r165={1d,1u} r166={1d,1u} r169={1d,1u} r171={1d,1u} 
;;    total ref usage 341{180d,156u,5e} in 69{68 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 141 144 146 147 148 149 150 151 152
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 141 144 146 147 148 149 150 151 152
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 7 8 15 2 NOTE_INSN_FUNCTION_BEG)

(note 15 7 3 2 NOTE_INSN_DELETED)

(insn 3 15 2 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 147 [ ka ])
        (reg:SI 1 r1 [ ka ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ ka ])
        (nil)))

(insn 2 3 4 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 146 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 4 2 5 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 148 [ rc ])
        (reg:SI 2 r2 [ rc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ rc ])
        (nil)))

(insn 5 4 14 2 arch/arm/kernel/signal.c:468 (set (reg/v/f:SI 149 [ frame ])
        (reg:SI 3 r3 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ frame ])
        (nil)))

(insn 14 5 11 2 arch/arm/kernel/signal.c:479 (set (reg:SI 144 [ D.24830 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ ka ])
                (const_int 4 [0x4])) [0 <variable>.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 14 16 2 arch/arm/kernel/signal.c:472 (set (reg:SI 151 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 11 6 2 arch/arm/kernel/signal.c:479 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 144 [ D.24830 ])
                (const_int 1 [0x1])
                (const_int 25 [0x19]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 6 16 12 2 arch/arm/kernel/signal.c:468 (set (reg/v:SI 150 [ usig ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 usig+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 usig+0 S4 A32])
        (nil)))

(insn 12 6 10 2 arch/arm/kernel/signal.c:472 (set (reg:SI 152)
        (and:SI (reg:SI 151 [ <variable>.uregs+64 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.uregs+64 ])
        (nil)))

(insn 10 12 13 2 arch/arm/kernel/signal.c:469 (set (reg/v:SI 141 [ handler ])
        (mem/s/f/j:SI (reg/v/f:SI 147 [ ka ]) [0 <variable>.sa.sa_handler+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 10 17 2 arch/arm/kernel/signal.c:472 (set (reg/v:SI 138 [ cpsr ])
        (and:SI (reg:SI 152)
            (const_int -513 [0xfffffffffffffdff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg:SI 151 [ <variable>.uregs+64 ])
                (const_int 16776703 [0xfffdff]))
            (nil))))

(jump_insn 17 13 18 2 arch/arm/kernel/signal.c:479 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 138 143
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 arch/arm/kernel/signal.c:480 (set (reg:SI 143 [ D.24834 ])
        (and:SI (reg/v:SI 138 [ cpsr ])
            (const_int -32 [0xffffffffffffffe0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ cpsr ])
        (nil)))

(insn 20 19 21 3 arch/arm/kernel/signal.c:480 (set (reg/v:SI 138 [ cpsr ])
        (ior:SI (reg:SI 143 [ D.24834 ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 143 [ D.24834 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 154 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 154 155 156
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 21 20 22 4 2 "" [1 uses])

(note 22 21 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 22 23 4 NOTE_INSN_DELETED)

(insn 23 25 24 4 arch/arm/kernel/signal.c:483 (set (reg/f:SI 154)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 26 4 arch/arm/kernel/signal.c:483 (set (reg:SI 156 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 154) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 26 24 27 4 arch/arm/kernel/signal.c:483 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 156 [ elf_hwcap ])
                        (const_int 4 [0x4]))
                    (const_int 0 [0x0])))
            (set (reg:SI 155)
                (and:SI (reg:SI 156 [ elf_hwcap ])
                    (const_int 4 [0x4])))
        ]) 69 {*andsi3_compare0} (expr_list:REG_DEAD (reg:SI 156 [ elf_hwcap ])
        (nil)))

(jump_insn 27 26 28 4 arch/arm/kernel/signal.c:483 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150 155
;; live  gen 	 139
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 149 5 arch/arm/kernel/signal.c:471 (set (reg/v:SI 139 [ thumb ])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 149 29 150 5 (set (pc)
        (label_ref 47)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150


;; Succ edge  9 [100.0%] 

(barrier 150 149 32)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 24 [cc] 139
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 32 150 33 6 3 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 6 NOTE_INSN_DELETED)

(insn 35 34 36 6 arch/arm/kernel/signal.c:490 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 141 [ handler ])
                        (const_int 1 [0x1]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 139 [ thumb ])
                (and:SI (reg/v:SI 141 [ handler ])
                    (const_int 1 [0x1])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 36 35 37 6 arch/arm/kernel/signal.c:490 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 133 138 139 157
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 144 146 147 148 149 150
;; live  gen 	 133 138 139 157
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 41 7 arch/arm/kernel/signal.c:491 (set (reg/v:SI 133 [ cpsr.358 ])
        (ior:SI (reg/v:SI 138 [ cpsr ])
            (const_int 32 [0x20]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ cpsr ])
        (nil)))

(insn 41 38 39 7 arch/arm/kernel/signal.c:494 (set (reg/v:SI 139 [ thumb ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 39 41 40 7 arch/arm/kernel/signal.c:494 (set (reg:SI 157)
        (and:SI (reg/v:SI 133 [ cpsr.358 ])
            (const_int -100663297 [0xfffffffff9ffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ cpsr.358 ])
        (nil)))

(insn 40 39 151 7 arch/arm/kernel/signal.c:494 (set (reg/v:SI 138 [ cpsr ])
        (and:SI (reg:SI 157)
            (const_int -64513 [0xffffffffffff03ff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 133 [ cpsr.358 ])
                (const_int -100727809 [0xfffffffff9ff03ff]))
            (nil))))

(jump_insn 151 40 152 7 (set (pc)
        (label_ref 47)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150


;; Succ edge  9 [100.0%] 

(barrier 152 151 44)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 138
;; live  kill	

;; Pred edge  6 [50.0%] 
(code_label 44 152 45 8 5 "" [1 uses])

(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 arch/arm/kernel/signal.c:497 (set (reg/v:SI 138 [ cpsr ])
        (and:SI (reg/v:SI 138 [ cpsr ])
            (const_int -33 [0xffffffffffffffdf]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 47 46 48 9 4 "" [2 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 49 48 50 9 NOTE_INSN_DELETED)

(insn 50 49 51 9 arch/arm/kernel/signal.c:501 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 144 [ D.24830 ])
                (const_int 1 [0x1])
                (const_int 26 [0x1a]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 51 50 52 9 arch/arm/kernel/signal.c:501 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 147 148 149 150


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 146 147 149 150
;; live  gen 	 140
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 153 10 arch/arm/kernel/signal.c:502 (set (reg/v:SI 140 [ retcode ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ ka ])
                (const_int 8 [0x8])) [0 <variable>.sa.sa_restorer+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ ka ])
        (nil)))

(jump_insn 153 53 154 10 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150


;; Succ edge  18 [100.0%] 

(barrier 154 153 56)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 141 144 146 148 149 150
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  9 [50.0%] 
(code_label 56 154 57 11 6 "" [1 uses])

(note 57 56 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 59 57 60 11 NOTE_INSN_DELETED)

(insn 60 59 58 11 arch/arm/kernel/signal.c:506 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 144 [ D.24830 ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 144 [ D.24830 ])
        (nil)))

(insn 58 60 61 11 arch/arm/kernel/signal.c:504 (set (reg/v:SI 137 [ idx ])
        (ashift:SI (reg/v:SI 139 [ thumb ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(jump_insn 61 58 62 11 arch/arm/kernel/signal.c:506 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 137
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 12 arch/arm/kernel/signal.c:507 (set (reg/v:SI 137 [ idx ])
        (plus:SI (reg/v:SI 137 [ idx ])
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 148
;; lr  def 	 24 [cc] 136 160 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc] 136 160 161
;; live  kill	 24 [cc]

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 64 63 65 13 8 "" [1 uses])

(note 65 64 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 67 65 69 13 arch/arm/kernel/signal.c:509 discrim 4 (set (reg/f:SI 160)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 69 67 68 13 arch/arm/kernel/signal.c:509 discrim 4 (set (reg/v:SI 136 [ __pu_err ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 68 69 70 13 arch/arm/kernel/signal.c:509 discrim 4 (set (reg:SI 161)
        (mem/s/u/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 160)) [0 sigreturn_codes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/u/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ idx ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 sigreturn_codes S4 A32])
        (nil)))

(insn 70 68 71 13 arch/arm/kernel/signal.c:509 discrim 4 (parallel [
            (set (reg/v:SI 136 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 161)
                        (reg/v/f:SI 148 [ rc ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 136 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691006))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 71 70 72 13 arch/arm/kernel/signal.c:509 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 13 arch/arm/kernel/signal.c:509 discrim 6 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 13 -> ( 19 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160


;; Succ edge  19 [39.0%] 
;; Succ edge  14 [61.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u95(11){ }u96(13){ }u97(25){ }u98(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 148 160
;; lr  def 	 24 [cc] 134 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139 141 146 148 149 150 160
;; live  gen 	 24 [cc] 134 164 165 166
;; live  kill	 24 [cc]

;; Pred edge  13 [61.0%]  (fallthru)
(note 73 72 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 75 73 159 14 arch/arm/kernel/signal.c:510 discrim 4 (set (reg:SI 164)
        (plus:SI (reg/v:SI 137 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 159 75 77 14 arch/arm/kernel/signal.c:510 discrim 4 (set (reg/v:SI 134 [ __pu_err ])
        (reg/v:SI 136 [ __pu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ __pu_err ])
        (nil)))

(insn 77 159 76 14 arch/arm/kernel/signal.c:510 discrim 4 (set (reg/f:SI 166)
        (plus:SI (reg/v/f:SI 148 [ rc ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 76 77 79 14 arch/arm/kernel/signal.c:510 discrim 4 (set (reg:SI 165)
        (mem/s/u/j:SI (plus:SI (mult:SI (reg:SI 164)
                    (const_int 4 [0x4]))
                (reg/f:SI 160)) [0 sigreturn_codes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 160)
            (expr_list:REG_EQUAL (mem/s/u/j:SI (plus:SI (mult:SI (reg:SI 164)
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 sigreturn_codes S4 A32])
                (nil)))))

(insn 79 76 80 14 arch/arm/kernel/signal.c:510 discrim 4 (parallel [
            (set (reg/v:SI 134 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 165)
                        (reg/f:SI 166)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691012))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 166)
        (expr_list:REG_DEAD (reg:SI 165)
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 80 79 81 14 arch/arm/kernel/signal.c:509 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ __pu_err ])
        (nil)))

(jump_insn 81 80 82 14 arch/arm/kernel/signal.c:509 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 14 -> ( 19 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150


;; Succ edge  19 [39.0%] 
;; Succ edge  15 [61.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [61.0%]  (fallthru)
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 83 82 84 15 NOTE_INSN_DELETED)

(insn 84 83 85 15 arch/arm/kernel/signal.c:513 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 138 [ cpsr ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 85 84 86 15 arch/arm/kernel/signal.c:513 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 148 149 150


;; Succ edge  16 [71.0%]  (fallthru)
;; Succ edge  17 [29.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 140 169
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138 139 141 146 149 150
;; live  gen 	 140 169
;; live  kill	

;; Pred edge  15 [71.0%]  (fallthru)
(note 86 85 88 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 88 86 87 16 NOTE_INSN_DELETED)

(insn 87 88 89 16 arch/arm/kernel/signal.c:518 (set (reg:SI 169)
        (plus:SI (reg/v:SI 139 [ thumb ])
            (const_int -64256 [0xffffffffffff0500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ thumb ])
        (nil)))

(insn 89 87 155 16 arch/arm/kernel/signal.c:518 (set (reg/v:SI 140 [ retcode ])
        (plus:SI (mult:SI (reg/v:SI 137 [ idx ])
                (const_int 4 [0x4]))
            (reg:SI 169))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg/v:SI 137 [ idx ])
            (nil))))

(jump_insn 155 89 156 16 (set (pc)
        (label_ref 101)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150


;; Succ edge  18 [100.0%] 

(barrier 156 155 92)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 146 148 149 150
;; live  gen 	 0 [r0] 1 [r1] 140 171
;; live  kill	 14 [lr]

;; Pred edge  15 [29.0%] 
(code_label 92 156 93 17 10 "" [1 uses])

(note 93 92 95 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 95 93 96 17 NOTE_INSN_DELETED)

(note 96 95 94 17 NOTE_INSN_DELETED)

(insn 94 96 97 17 arch/arm/kernel/signal.c:524 (set (reg/f:SI 171)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x113df900 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 97 94 98 17 arch/arm/kernel/signal.c:524 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ rc ])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 17 arch/arm/kernel/signal.c:524 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 148 [ rc ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 99 98 100 17 arch/arm/kernel/signal.c:524 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 171)
                            (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 100 99 101 17 arch/arm/kernel/signal.c:527 (set (reg/v:SI 140 [ retcode ])
        (plus:SI (reg/v:SI 139 [ thumb ])
            (reg/v/f:SI 148 [ rc ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 148 [ rc ])
        (expr_list:REG_DEAD (reg/v:SI 139 [ thumb ])
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17 10 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 140 141 146 149 150
;; live  gen 	 142
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  16 [100.0%] 
(code_label 101 100 102 18 7 "" [2 uses])

(note 102 101 107 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 107 102 108 18 arch/arm/kernel/signal.c:535 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg/v:SI 138 [ cpsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ regs ])
        (expr_list:REG_DEAD (reg/v:SI 138 [ cpsr ])
            (nil))))

(insn 108 107 103 18 arch/arm/kernel/signal.c:537 (set (reg:SI 142 [ D.24862 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 103 108 104 18 arch/arm/kernel/signal.c:531 (set (mem/s/j:SI (reg/v/f:SI 146 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg/v:SI 150 [ usig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ usig ])
        (nil)))

(insn 104 103 105 18 arch/arm/kernel/signal.c:532 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (reg/v/f:SI 149 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ frame ])
        (nil)))

(insn 105 104 106 18 arch/arm/kernel/signal.c:533 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (reg/v:SI 140 [ retcode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ retcode ])
        (nil)))

(insn 106 105 157 18 arch/arm/kernel/signal.c:534 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 141 [ handler ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ handler ])
        (nil)))

(jump_insn 157 106 158 18 arch/arm/kernel/signal.c:537 (set (pc)
        (label_ref 114)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142


;; Succ edge  20 [100.0%] 

(barrier 158 157 111)

;; Start of basic block ( 14 13) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 142
;; live  kill	

;; Pred edge  14 [39.0%] 
;; Pred edge  13 [39.0%] 
(code_label 111 158 112 19 9 "" [2 uses])

(note 112 111 113 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 19 arch/arm/kernel/signal.c:511 (set (reg:SI 142 [ D.24862 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
(code_label 114 113 115 20 11 "" [1 uses])

(note 115 114 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 120 115 126 20 arch/arm/kernel/signal.c:538 (set (reg/i:SI 0 r0)
        (reg:SI 142 [ D.24862 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.24862 ])
        (nil)))

(insn 126 120 160 20 arch/arm/kernel/signal.c:538 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 20 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 160 126 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_sigframe (setup_sigframe)[0:1446]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)


setup_sigframe

Dataflow summary:
def_info->table_size = 499, use_info->table_size = 192
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,10u} r1={6d,3u} r2={6d,3u} r3={4d} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={33d,2u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={5d,5u} r134={22d,23u} r138={3d,3u} r143={2d,2u} r144={1d,2u} r148={1d,29u} r149={1d,17u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={2d,8u} r188={1d,3u} r189={1d,1u} r190={1d,1u} r194={1d,1u} r195={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r205={1d,1u} r207={1d,1u} r208={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} 
;;    total ref usage 681{494d,187u,0e} in 109{106 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d13(1){ }d19(2){ }d23(3){ }d24(11){ }d28(12){ }d29(13){ }d33(14){ }d94(25){ }d95(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 143 144 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 188 189 190 194 195 199 200 201 202
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 134 143 144 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 188 189 190 194 195 199 200 201 202
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 148 186
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 138 143 205 207 208 211 212 213 214 215 216 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 138 143 205 207 208 211 212 213 214 215 216 217 218
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 24 [cc] 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 219 220
;; live  kill	 24 [cc]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u187(0){ }u188(11){ }u189(13){ }u190(14){ }u191(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 94 to worklist
  Adding insn 88 to worklist
  Adding insn 83 to worklist
  Adding insn 80 to worklist
  Adding insn 73 to worklist
  Adding insn 66 to worklist
  Adding insn 59 to worklist
  Adding insn 56 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 127 to worklist
  Adding insn 124 to worklist
  Adding insn 121 to worklist
  Adding insn 118 to worklist
  Adding insn 112 to worklist
  Adding insn 106 to worklist
  Adding insn 103 to worklist
  Adding insn 100 to worklist
  Adding insn 147 to worklist
  Adding insn 141 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 157 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
  Adding insn 152 to worklist
  Adding insn 128 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 114 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 156 to worklist
  Adding insn 101 to worklist
  Adding insn 99 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 148 186
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 155 to worklist
  Adding insn 154 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 2 to 94 -- before reload
;;   ======================================================

;;	  0-->     3 r149=r1                           :cortex_a8_default
;;	  0-->     2 r148=r0                           :cortex_a8_default
;;	  1-->     4 r150=r2                           :cortex_a8_default
;;	  1-->     9 r152=r148+0x20                    :cortex_a8_default
;;	  2-->     8 r151=[r149]                       :cortex_a8_load_store_1
;;	  2-->    10 r134=0x0                          :cortex_a8_default
;;	  3-->    11 {r134=asm_operands;clobber cc;}   :nothing
;;	  4-->    12 r154=[r149+0x4]                   :cortex_a8_load_store_1
;;	  4-->    13 r155=r148+0x24                    :cortex_a8_default
;;	  5-->    14 {r134=asm_operands;clobber cc;}   :nothing
;;	  6-->    15 r156=[r149+0x8]                   :cortex_a8_load_store_1
;;	  6-->    16 r157=r148+0x28                    :cortex_a8_default
;;	  7-->    17 {r134=asm_operands;clobber cc;}   :nothing
;;	  8-->    18 r158=[r149+0xc]                   :cortex_a8_load_store_1
;;	  8-->    19 r159=r148+0x2c                    :cortex_a8_default
;;	  9-->    20 {r134=asm_operands;clobber cc;}   :nothing
;;	 10-->    21 r160=[r149+0x10]                  :cortex_a8_load_store_1
;;	 10-->    22 r161=r148+0x30                    :cortex_a8_default
;;	 11-->    23 {r134=asm_operands;clobber cc;}   :nothing
;;	 12-->    24 r162=[r149+0x14]                  :cortex_a8_load_store_1
;;	 12-->    25 r163=r148+0x34                    :cortex_a8_default
;;	 13-->    26 {r134=asm_operands;clobber cc;}   :nothing
;;	 14-->    27 r164=[r149+0x18]                  :cortex_a8_load_store_1
;;	 14-->    28 r165=r148+0x38                    :cortex_a8_default
;;	 15-->    29 {r134=asm_operands;clobber cc;}   :nothing
;;	 16-->    30 r166=[r149+0x1c]                  :cortex_a8_load_store_1
;;	 16-->    31 r167=r148+0x3c                    :cortex_a8_default
;;	 17-->    32 {r134=asm_operands;clobber cc;}   :nothing
;;	 18-->    33 r168=[r149+0x20]                  :cortex_a8_load_store_1
;;	 18-->    34 r169=r148+0x40                    :cortex_a8_default
;;	 19-->    35 {r134=asm_operands;clobber cc;}   :nothing
;;	 20-->    36 r170=[r149+0x24]                  :cortex_a8_load_store_1
;;	 20-->    37 r171=r148+0x44                    :cortex_a8_default
;;	 21-->    38 {r134=asm_operands;clobber cc;}   :nothing
;;	 22-->    39 r172=[r149+0x28]                  :cortex_a8_load_store_1
;;	 22-->    40 r173=r148+0x48                    :cortex_a8_default
;;	 23-->    41 {r134=asm_operands;clobber cc;}   :nothing
;;	 24-->    42 r174=[r149+0x2c]                  :cortex_a8_load_store_1
;;	 24-->    43 r175=r148+0x4c                    :cortex_a8_default
;;	 25-->    44 {r134=asm_operands;clobber cc;}   :nothing
;;	 26-->    45 r176=[r149+0x30]                  :cortex_a8_load_store_1
;;	 26-->    46 r177=r148+0x50                    :cortex_a8_default
;;	 27-->    47 {r134=asm_operands;clobber cc;}   :nothing
;;	 28-->    48 r178=[r149+0x34]                  :cortex_a8_load_store_1
;;	 28-->    49 r179=r148+0x54                    :cortex_a8_default
;;	 29-->    50 {r134=asm_operands;clobber cc;}   :nothing
;;	 30-->    51 r180=[r149+0x38]                  :cortex_a8_load_store_1
;;	 30-->    52 r181=r148+0x58                    :cortex_a8_default
;;	 31-->    53 {r134=asm_operands;clobber cc;}   :nothing
;;	 32-->    54 r182=[r149+0x3c]                  :cortex_a8_load_store_1
;;	 32-->    55 r183=r148+0x5c                    :cortex_a8_default
;;	 33-->    56 {r134=asm_operands;clobber cc;}   :nothing
;;	 34-->    57 r184=[r149+0x40]                  :cortex_a8_load_store_1
;;	 34-->    58 r185=r148+0x60                    :cortex_a8_default
;;	 35-->    59 {r134=asm_operands;clobber cc;}   :nothing
;;	 36-->   154 r186=sp&0xffffffffffffe03f        :cortex_a8_default
;;	 36-->    65 r190=r148+0x14                    :cortex_a8_default
;;	 37-->   155 r186=r186&0xffffffffffffffc0      :cortex_a8_default
;;	 39-->    63 r188=[r186+0xc]                   :cortex_a8_load_store_1
;;	 42-->    64 r189=[r188+0x314]                 :cortex_a8_load_store_1
;;	 43-->    66 {r134=asm_operands;clobber cc;}   :nothing
;;	 44-->    71 r194=[r188+0x318]                 :cortex_a8_load_store_1
;;	 44-->    72 r195=r148+0x18                    :cortex_a8_default
;;	 45-->    73 {r134=asm_operands;clobber cc;}   :nothing
;;	 46-->    78 r199=[r188+0x310]                 :cortex_a8_load_store_1
;;	 46-->    79 r200=r148+0x64                    :cortex_a8_default
;;	 47-->    80 {r134=asm_operands;clobber cc;}   :nothing
;;	 48-->    81 r201=[r150]                       :cortex_a8_load_store_1
;;	 48-->    82 r202=r148+0x1c                    :cortex_a8_default
;;	 49-->    83 {r134=asm_operands;clobber cc;}   :nothing
;;	 50-->    86 r1=r150                           :cortex_a8_default
;;	 50-->    85 r0=r148+0x68                      :cortex_a8_default
;;	 51-->    87 r2=0x8                            :cortex_a8_default
;;	 51-->    92 r144=r148+0xe8                    :cortex_a8_default
;;	 52-->    88 r0=call [`__copy_to_user']        :cortex_a8_issue_branch
;;	 84-->    93 {cc=cmp(r134|r0,0x0);r143=r134|r0;:cortex_a8_default
;;	 86-->    94 pc={(cc!=0x0)?L132:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 86
;;   new head = 2
;;   new tail = 94

;;   ======================================================
;;   -- basic block 3 from 99 to 152 -- before reload
;;   ======================================================

;;	  0-->    99 r0=r186                           :cortex_a8_default
;;	  0-->   156 r138=r143                         :cortex_a8_default
;;	  1-->   100 call [`vfp_sync_hwstate']         :cortex_a8_issue_branch
;;	  1-->   101 r205=0x56465001                   :cortex_a8_load_store_1
;;	  2-->   103 {r138=asm_operands;clobber cc;}   :nothing
;;	  3-->   104 r207=0x120                        :cortex_a8_default
;;	  3-->   105 r208=r148+0xec                    :cortex_a8_default
;;	  4-->   106 {r138=asm_operands;clobber cc;}   :nothing
;;	  5-->   111 r2=0x100                          :cortex_a8_default
;;	  5-->   109 r0=r148+0xf0                      :cortex_a8_default
;;	  6-->   110 r1=r186+0x1b0                     :cortex_a8_default
;;	  7-->   112 r0=call [`__copy_to_user']        :cortex_a8_issue_branch
;;	  7-->   116 r211=[r186+0x2b4]                 :cortex_a8_load_store_1
;;	  8-->   117 r212=r148+0x1f0                   :cortex_a8_default
;;	 39-->   114 r133=r138|r0                      :cortex_a8_default
;;	 40-->   118 {r133=asm_operands;clobber cc;}   :nothing
;;	 41-->   119 r213=[r186+0x2b0]                 :cortex_a8_load_store_1
;;	 41-->   120 r214=r148+0x1f8                   :cortex_a8_default
;;	 42-->   121 {r133=asm_operands;clobber cc;}   :nothing
;;	 43-->   122 r215=[r186+0x2b8]                 :cortex_a8_load_store_1
;;	 43-->   123 r216=r148+0x1fc                   :cortex_a8_default
;;	 44-->   124 {r133=asm_operands;clobber cc;}   :nothing
;;	 45-->   125 r217=[r186+0x2bc]                 :cortex_a8_load_store_1
;;	 45-->   126 r218=r148+0x200                   :cortex_a8_default
;;	 46-->   127 {r133=asm_operands;clobber cc;}   :nothing
;;	 47-->   128 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	 48-->   152 r143={(cc==0x0)?0x0:0xffffffffffff:cortex_a8_default
;;	Ready list (final):  
;;   total time = 48
;;   new head = 99
;;   new tail = 152

;;   ======================================================
;;   -- basic block 4 from 134 to 147 -- before reload
;;   ======================================================

;;	  0-->   135 r220=r144+0x120                   :cortex_a8_default
;;	  0-->   157 r0=r143                           :cortex_a8_default
;;	  1-->   134 r219=0x0                          :cortex_a8_default
;;	  2-->   141 {r0=asm_operands;clobber cc;}     :nothing
;;	  3-->   147 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 134
;;   new tail = 147


;; Procedure interblock/speculative motions == 0/0 




setup_sigframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,10u} r1={6d,3u} r2={6d,3u} r3={4d} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={33d,2u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={5d,5u} r134={22d,23u} r138={3d,3u} r143={2d,2u} r144={1d,2u} r148={1d,29u} r149={1d,17u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={2d,8u} r188={1d,3u} r189={1d,1u} r190={1d,1u} r194={1d,1u} r195={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r205={1d,1u} r207={1d,1u} r208={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} 
;;    total ref usage 681{494d,187u,0e} in 109{106 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 143 144 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 188 189 190 194 195 199 200 201 202
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 134 143 144 148 149 150 151 152 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 188 189 190 194 195 199 200 201 202
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 61 2 NOTE_INSN_FUNCTION_BEG)

(note 61 5 84 2 NOTE_INSN_DELETED)

(note 84 61 89 2 NOTE_INSN_DELETED)

(note 89 84 90 2 NOTE_INSN_DELETED)

(note 90 89 3 2 NOTE_INSN_DELETED)

(insn 3 90 2 2 arch/arm/kernel/signal.c:392 (set (reg/v/f:SI 149 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(insn 2 3 4 2 arch/arm/kernel/signal.c:392 (set (reg/v/f:SI 148 [ sf ])
        (reg:SI 0 r0 [ sf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sf ])
        (nil)))

(insn 4 2 9 2 arch/arm/kernel/signal.c:392 (set (reg/v/f:SI 150 [ set ])
        (reg:SI 2 r2 [ set ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ set ])
        (nil)))

(insn 9 4 8 2 arch/arm/kernel/signal.c:396 discrim 4 (set (reg/f:SI 152)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 8 9 10 2 arch/arm/kernel/signal.c:396 discrim 4 (set (reg:SI 151 [ <variable>.uregs ])
        (mem/s/j:SI (reg/v/f:SI 149 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 arch/arm/kernel/signal.c:396 discrim 4 (set (reg/v:SI 134 [ err.382 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/signal.c:396 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 151 [ <variable>.uregs ])
                        (reg/f:SI 152)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690863))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_DEAD (reg:SI 151 [ <variable>.uregs ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 12 11 13 2 arch/arm/kernel/signal.c:397 discrim 4 (set (reg:SI 154 [ <variable>.uregs+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/signal.c:397 discrim 4 (set (reg/f:SI 155)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 2 arch/arm/kernel/signal.c:397 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 154 [ <variable>.uregs+4 ])
                        (reg/f:SI 155)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690868))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg:SI 154 [ <variable>.uregs+4 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 15 14 16 2 arch/arm/kernel/signal.c:398 discrim 4 (set (reg:SI 156 [ <variable>.uregs+8 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/signal.c:398 discrim 4 (set (reg/f:SI 157)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 2 arch/arm/kernel/signal.c:398 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 156 [ <variable>.uregs+8 ])
                        (reg/f:SI 157)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690873))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_DEAD (reg:SI 156 [ <variable>.uregs+8 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 18 17 19 2 arch/arm/kernel/signal.c:399 discrim 4 (set (reg:SI 158 [ <variable>.uregs+12 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/signal.c:399 discrim 4 (set (reg/f:SI 159)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 44 [0x2c]))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 2 arch/arm/kernel/signal.c:399 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 158 [ <variable>.uregs+12 ])
                        (reg/f:SI 159)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690878))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 159)
        (expr_list:REG_DEAD (reg:SI 158 [ <variable>.uregs+12 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 21 20 22 2 arch/arm/kernel/signal.c:400 discrim 4 (set (reg:SI 160 [ <variable>.uregs+16 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 2 arch/arm/kernel/signal.c:400 discrim 4 (set (reg/f:SI 161)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 2 arch/arm/kernel/signal.c:400 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 160 [ <variable>.uregs+16 ])
                        (reg/f:SI 161)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690883))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_DEAD (reg:SI 160 [ <variable>.uregs+16 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 24 23 25 2 arch/arm/kernel/signal.c:401 discrim 4 (set (reg:SI 162 [ <variable>.uregs+20 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 2 arch/arm/kernel/signal.c:401 discrim 4 (set (reg/f:SI 163)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 52 [0x34]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 2 arch/arm/kernel/signal.c:401 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 162 [ <variable>.uregs+20 ])
                        (reg/f:SI 163)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690888))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_DEAD (reg:SI 162 [ <variable>.uregs+20 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 27 26 28 2 arch/arm/kernel/signal.c:402 discrim 4 (set (reg:SI 164 [ <variable>.uregs+24 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 2 arch/arm/kernel/signal.c:402 discrim 4 (set (reg/f:SI 165)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 29 28 30 2 arch/arm/kernel/signal.c:402 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 164 [ <variable>.uregs+24 ])
                        (reg/f:SI 165)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690893))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 165)
        (expr_list:REG_DEAD (reg:SI 164 [ <variable>.uregs+24 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 30 29 31 2 arch/arm/kernel/signal.c:403 discrim 4 (set (reg:SI 166 [ <variable>.uregs+28 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 2 arch/arm/kernel/signal.c:403 discrim 4 (set (reg/f:SI 167)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 2 arch/arm/kernel/signal.c:403 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 166 [ <variable>.uregs+28 ])
                        (reg/f:SI 167)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690898))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 167)
        (expr_list:REG_DEAD (reg:SI 166 [ <variable>.uregs+28 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 33 32 34 2 arch/arm/kernel/signal.c:404 discrim 4 (set (reg:SI 168 [ <variable>.uregs+32 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 2 arch/arm/kernel/signal.c:404 discrim 4 (set (reg/f:SI 169)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 35 34 36 2 arch/arm/kernel/signal.c:404 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 168 [ <variable>.uregs+32 ])
                        (reg/f:SI 169)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690903))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 169)
        (expr_list:REG_DEAD (reg:SI 168 [ <variable>.uregs+32 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 36 35 37 2 arch/arm/kernel/signal.c:405 discrim 4 (set (reg:SI 170 [ <variable>.uregs+36 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 2 arch/arm/kernel/signal.c:405 discrim 4 (set (reg/f:SI 171)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 68 [0x44]))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 2 arch/arm/kernel/signal.c:405 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 170 [ <variable>.uregs+36 ])
                        (reg/f:SI 171)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690908))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_DEAD (reg:SI 170 [ <variable>.uregs+36 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 39 38 40 2 arch/arm/kernel/signal.c:406 discrim 4 (set (reg:SI 172 [ <variable>.uregs+40 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 2 arch/arm/kernel/signal.c:406 discrim 4 (set (reg/f:SI 173)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 72 [0x48]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 2 arch/arm/kernel/signal.c:406 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 172 [ <variable>.uregs+40 ])
                        (reg/f:SI 173)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690913))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_DEAD (reg:SI 172 [ <variable>.uregs+40 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 42 41 43 2 arch/arm/kernel/signal.c:407 discrim 4 (set (reg:SI 174 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 2 arch/arm/kernel/signal.c:407 discrim 4 (set (reg/f:SI 175)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 76 [0x4c]))) 4 {*arm_addsi3} (nil))

(insn 44 43 45 2 arch/arm/kernel/signal.c:407 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 174 [ <variable>.uregs+44 ])
                        (reg/f:SI 175)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690918))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 175)
        (expr_list:REG_DEAD (reg:SI 174 [ <variable>.uregs+44 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 45 44 46 2 arch/arm/kernel/signal.c:408 discrim 4 (set (reg:SI 176 [ <variable>.uregs+48 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 2 arch/arm/kernel/signal.c:408 discrim 4 (set (reg/f:SI 177)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 47 46 48 2 arch/arm/kernel/signal.c:408 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 176 [ <variable>.uregs+48 ])
                        (reg/f:SI 177)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690923))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 177)
        (expr_list:REG_DEAD (reg:SI 176 [ <variable>.uregs+48 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 48 47 49 2 arch/arm/kernel/signal.c:409 discrim 4 (set (reg:SI 178 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 arch/arm/kernel/signal.c:409 discrim 4 (set (reg/f:SI 179)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 84 [0x54]))) 4 {*arm_addsi3} (nil))

(insn 50 49 51 2 arch/arm/kernel/signal.c:409 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 178 [ <variable>.uregs+52 ])
                        (reg/f:SI 179)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690928))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_DEAD (reg:SI 178 [ <variable>.uregs+52 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 51 50 52 2 arch/arm/kernel/signal.c:410 discrim 4 (set (reg:SI 180 [ <variable>.uregs+56 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 2 arch/arm/kernel/signal.c:410 discrim 4 (set (reg/f:SI 181)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 88 [0x58]))) 4 {*arm_addsi3} (nil))

(insn 53 52 54 2 arch/arm/kernel/signal.c:410 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 180 [ <variable>.uregs+56 ])
                        (reg/f:SI 181)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690933))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 181)
        (expr_list:REG_DEAD (reg:SI 180 [ <variable>.uregs+56 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 54 53 55 2 arch/arm/kernel/signal.c:411 discrim 4 (set (reg:SI 182 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 2 arch/arm/kernel/signal.c:411 discrim 4 (set (reg/f:SI 183)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 92 [0x5c]))) 4 {*arm_addsi3} (nil))

(insn 56 55 57 2 arch/arm/kernel/signal.c:411 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 182 [ <variable>.uregs+60 ])
                        (reg/f:SI 183)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690938))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_DEAD (reg:SI 182 [ <variable>.uregs+60 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 57 56 58 2 arch/arm/kernel/signal.c:412 discrim 4 (set (reg:SI 184 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ regs ])
        (nil)))

(insn 58 57 59 2 arch/arm/kernel/signal.c:412 discrim 4 (set (reg/f:SI 185)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(insn 59 58 154 2 arch/arm/kernel/signal.c:412 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 184 [ <variable>.uregs+64 ])
                        (reg/f:SI 185)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690943))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 185)
        (expr_list:REG_DEAD (reg:SI 184 [ <variable>.uregs+64 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 154 59 65 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg:SI 186)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 154 155 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg/f:SI 190)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (nil))

(insn 155 65 63 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg:SI 186)
        (and:SI (reg:SI 186)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 63 155 64 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg/f:SI 188 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 186)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 66 2 arch/arm/kernel/signal.c:414 discrim 4 (set (reg:SI 189 [ <variable>.thread.trap_no ])
        (mem/s/j:SI (plus:SI (reg/f:SI 188 [ <variable>.task ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 64 71 2 arch/arm/kernel/signal.c:414 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 189 [ <variable>.thread.trap_no ])
                        (reg/f:SI 190)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690948))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 190)
        (expr_list:REG_DEAD (reg:SI 189 [ <variable>.thread.trap_no ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 71 66 72 2 arch/arm/kernel/signal.c:415 discrim 4 (set (reg:SI 194 [ <variable>.thread.error_code ])
        (mem/s/j:SI (plus:SI (reg/f:SI 188 [ <variable>.task ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 2 arch/arm/kernel/signal.c:415 discrim 4 (set (reg/f:SI 195)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 73 72 78 2 arch/arm/kernel/signal.c:415 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 194 [ <variable>.thread.error_code ])
                        (reg/f:SI 195)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690953))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 195)
        (expr_list:REG_DEAD (reg:SI 194 [ <variable>.thread.error_code ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 78 73 79 2 arch/arm/kernel/signal.c:416 discrim 4 (set (reg:SI 199 [ <variable>.thread.address ])
        (mem/s/j:SI (plus:SI (reg/f:SI 188 [ <variable>.task ])
                (const_int 784 [0x310])) [0 <variable>.thread.address+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 188 [ <variable>.task ])
        (nil)))

(insn 79 78 80 2 arch/arm/kernel/signal.c:416 discrim 4 (set (reg/f:SI 200)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 100 [0x64]))) 4 {*arm_addsi3} (nil))

(insn 80 79 81 2 arch/arm/kernel/signal.c:416 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 199 [ <variable>.thread.address ])
                        (reg/f:SI 200)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690958))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_DEAD (reg:SI 199 [ <variable>.thread.address ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 81 80 82 2 arch/arm/kernel/signal.c:417 discrim 4 (set (reg:SI 201 [ <variable>.sig ])
        (mem/s/j:SI (reg/v/f:SI 150 [ set ]) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 2 arch/arm/kernel/signal.c:417 discrim 4 (set (reg/f:SI 202)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 83 82 86 2 arch/arm/kernel/signal.c:417 discrim 4 (parallel [
            (set (reg/v:SI 134 [ err.382 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 201 [ <variable>.sig ])
                        (reg/f:SI 202)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 134 [ err.382 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690963))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_DEAD (reg:SI 201 [ <variable>.sig ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 86 83 85 2 arch/arm/kernel/signal.c:419 (set (reg:SI 1 r1)
        (reg/v/f:SI 150 [ set ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ set ])
        (nil)))

(insn 85 86 87 2 arch/arm/kernel/signal.c:419 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn 87 85 92 2 arch/arm/kernel/signal.c:419 (set (reg:SI 2 r2)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(insn 92 87 88 2 arch/arm/kernel/signal.c:421 (set (reg/v/f:SI 144 [ aux ])
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 232 [0xe8]))) 4 {*arm_addsi3} (nil))

(call_insn 88 92 93 2 arch/arm/kernel/signal.c:419 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x10f3df00 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 93 88 94 2 arch/arm/kernel/signal.c:431 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg/v:SI 134 [ err.382 ])
                        (reg:SI 0 r0))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 143 [ err ])
                (ior:SI (reg/v:SI 134 [ err.382 ])
                    (reg:SI 0 r0)))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg/v:SI 134 [ err.382 ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(jump_insn 94 93 95 2 arch/arm/kernel/signal.c:431 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 132)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 148 186
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 138 143 205 207 208 211 212 213 214 215 216 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 148 186
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 138 143 205 207 208 211 212 213 214 215 216 217 218
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [39.0%]  (fallthru)
(note 95 94 107 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 107 95 108 3 NOTE_INSN_DELETED)

(note 108 107 113 3 NOTE_INSN_DELETED)

(note 113 108 99 3 NOTE_INSN_DELETED)

(insn 99 113 156 3 arch/arm/kernel/signal.c:188 (set (reg:SI 0 r0)
        (reg:SI 186)) 167 {*arm_movsi_insn} (nil))

(insn 156 99 100 3 arch/arm/kernel/signal.c:189 discrim 4 (set (reg/v:SI 138 [ err ])
        (reg/v:SI 143 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ err ])
        (nil)))

(call_insn 100 156 101 3 arch/arm/kernel/signal.c:188 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10b07680 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 101 100 103 3 arch/arm/kernel/signal.c:189 discrim 4 (set (reg:SI 205)
        (const_int 1447448577 [0x56465001])) 167 {*arm_movsi_insn} (nil))

(insn 103 101 104 3 arch/arm/kernel/signal.c:189 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 205)
                        (reg/v/f:SI 144 [ aux ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690973))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 104 103 105 3 arch/arm/kernel/signal.c:190 discrim 4 (set (reg:SI 207)
        (const_int 288 [0x120])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 3 arch/arm/kernel/signal.c:190 discrim 4 (set (reg/f:SI 208)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 236 [0xec]))) 4 {*arm_addsi3} (nil))

(insn 106 105 111 3 arch/arm/kernel/signal.c:190 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 207)
                        (reg/f:SI 208)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690978))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_DEAD (reg:SI 207)
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 111 106 109 3 arch/arm/kernel/signal.c:196 (set (reg:SI 2 r2)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(insn 109 111 110 3 arch/arm/kernel/signal.c:196 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 240 [0xf0]))) 4 {*arm_addsi3} (nil))

(insn 110 109 112 3 arch/arm/kernel/signal.c:196 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 186)
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(call_insn 112 110 116 3 arch/arm/kernel/signal.c:196 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x10f3df00 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 116 112 117 3 arch/arm/kernel/signal.c:201 discrim 4 (set (reg:SI 211 [ <variable>.vfpstate.hard.fpscr ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 692 [0x2b4])) [0 <variable>.vfpstate.hard.fpscr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 117 116 114 3 arch/arm/kernel/signal.c:201 discrim 4 (set (reg/f:SI 212)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 496 [0x1f0]))) 4 {*arm_addsi3} (nil))

(insn 114 117 118 3 arch/arm/kernel/signal.c:196 (set (reg/v:SI 133 [ err.383 ])
        (ior:SI (reg/v:SI 138 [ err ])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ err ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 118 114 119 3 arch/arm/kernel/signal.c:201 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 211 [ <variable>.vfpstate.hard.fpscr ])
                        (reg/f:SI 212)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.383 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690983))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 212)
        (expr_list:REG_DEAD (reg:SI 211 [ <variable>.vfpstate.hard.fpscr ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 119 118 120 3 arch/arm/kernel/signal.c:206 discrim 4 (set (reg:SI 213 [ <variable>.vfpstate.hard.fpexc ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 688 [0x2b0])) [0 <variable>.vfpstate.hard.fpexc+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 121 3 arch/arm/kernel/signal.c:206 discrim 4 (set (reg/f:SI 214)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 504 [0x1f8]))) 4 {*arm_addsi3} (nil))

(insn 121 120 122 3 arch/arm/kernel/signal.c:206 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 213 [ <variable>.vfpstate.hard.fpexc ])
                        (reg/f:SI 214)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.383 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690988))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_DEAD (reg:SI 213 [ <variable>.vfpstate.hard.fpexc ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 122 121 123 3 arch/arm/kernel/signal.c:207 discrim 4 (set (reg:SI 215 [ <variable>.vfpstate.hard.fpinst ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 696 [0x2b8])) [0 <variable>.vfpstate.hard.fpinst+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 124 3 arch/arm/kernel/signal.c:207 discrim 4 (set (reg/f:SI 216)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 508 [0x1fc]))) 4 {*arm_addsi3} (nil))

(insn 124 123 125 3 arch/arm/kernel/signal.c:207 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 215 [ <variable>.vfpstate.hard.fpinst ])
                        (reg/f:SI 216)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.383 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690993))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 216)
        (expr_list:REG_DEAD (reg:SI 215 [ <variable>.vfpstate.hard.fpinst ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 125 124 126 3 arch/arm/kernel/signal.c:208 discrim 4 (set (reg:SI 217 [ <variable>.vfpstate.hard.fpinst2 ])
        (mem/s/j:SI (plus:SI (reg:SI 186)
                (const_int 700 [0x2bc])) [0 <variable>.vfpstate.hard.fpinst2+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(insn 126 125 127 3 arch/arm/kernel/signal.c:208 discrim 4 (set (reg/f:SI 218)
        (plus:SI (reg/v/f:SI 148 [ sf ])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 148 [ sf ])
        (nil)))

(insn 127 126 128 3 arch/arm/kernel/signal.c:208 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.383 ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 217 [ <variable>.vfpstate.hard.fpinst2 ])
                        (reg/f:SI 218)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.383 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690998))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 218)
        (expr_list:REG_DEAD (reg:SI 217 [ <variable>.vfpstate.hard.fpinst2 ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 128 127 152 3 arch/arm/kernel/signal.c:210 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ err.383 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ err.383 ])
        (nil)))

(insn 152 128 132 3 arch/arm/kernel/signal.c:210 discrim 1 (set (reg/v:SI 143 [ err ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 0 [0x0])
            (const_int -14 [0xfffffffffffffff2]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 24 [cc] 219 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 219 220
;; live  kill	 24 [cc]

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 132 152 133 4 17 "" [1 uses])

(note 133 132 136 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 136 133 135 4 NOTE_INSN_DELETED)

(insn 135 136 157 4 arch/arm/kernel/signal.c:434 discrim 4 (set (reg/f:SI 220)
        (plus:SI (reg/v/f:SI 144 [ aux ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 144 [ aux ])
        (nil)))

(insn 157 135 134 4 arch/arm/kernel/signal.c:437 (set (reg/i:SI 0 r0)
        (reg/v:SI 143 [ err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ err ])
        (nil)))

(insn 134 157 141 4 arch/arm/kernel/signal.c:434 discrim 4 (set (reg:SI 219)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 141 134 147 4 arch/arm/kernel/signal.c:437 (parallel [
            (set (reg/i:SI 0 r0)
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 219)
                        (reg/f:SI 220)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/i:SI 0 r0)
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690968))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 220)
        (expr_list:REG_DEAD (reg:SI 219)
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 147 141 158 4 arch/arm/kernel/signal.c:437 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 158 147 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_signal (do_signal)[0:1452]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 73 n_edges 116 count 142 (  1.9)


do_signal

Dataflow summary:
def_info->table_size = 2158, use_info->table_size = 740
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,26u} r1={29d,13u} r2={24d,7u} r3={20d,3u} r11={1d,72u} r12={17d} r13={1d,102u} r14={17d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={68d,45u} r25={1d,87u} r26={1d,71u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} r133={2d,2u} r136={2d,4u} r137={1d,1u} r140={2d,3u} r141={1d,1u} r143={1d,2u} r144={1d,2u} r146={1d,2u} r147={1d,9u} r148={5d,1u} r156={3d,1u} r158={2d,3u} r159={2d,11u} r160={2d,2u} r161={1d} r169={3d,3u} r172={1d,2u} r174={1d,2u} r177={2d,3u} r178={1d,6u} r179={2d,3u} r180={1d} r188={2d,3u} r191={3d,1u} r192={1d,2u} r193={1d,2u} r194={1d,2u} r195={1d,3u} r196={1d,1u} r197={1d,2u} r200={2d,3u} r201={1d,1u} r204={1d,2u} r205={1d,1u} r206={2d,2u} r207={1d,5u} r208={2d,2u} r209={2d,5u} r210={2d,5u,2d} r211={1d,1u} r212={1d,2u} r213={1d,29u,2d} r214={1d,5u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={2d,2u} r223={1d,1u} r224={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r231={1d,1u} r240={2d,3u} r246={2d,2u} r248={1d,2u} r249={1d,2u} r253={1d,2u} r257={1d,1u} r263={1d,1u} r264={2d,3u} r266={1d,1u} r268={1d,3u} r269={1d,1u} r271={1d,1u} r275={1d,3u} r276={1d,1u} r280={1d,2u} r284={1d,2u} r288={1d,1u} r296={2d,2u} r298={1d,1u} r299={1d,1u} r302={1d,2u} r307={2d,2u} r309={1d,2u} r310={1d,2u} r314={1d,2u} r318={1d,1u} r324={1d,1u} r325={2d,2u} r327={1d,1u} r328={1d,1u} r335={1d,1u} r337={1d,1u} r339={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,2u} r347={1d,1u} r348={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r360={1d,1u} r361={1d,2u} r363={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r369={1d,1u} r370={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,2u} r378={1d,1u} r380={1d,1u} r383={1d,1u} r391={1d,1u} r392={2d,2u} r394={1d,2u} r398={1d,1u} r399={1d,1u} r400={2d,2u} r402={1d,2u} r406={1d,1u} r407={1d,1u} r408={1d,2u} r409={1d,2u} r410={1d,2u} 
;;    total ref usage 2819{2130d,685u,4e} in 330{314 regular + 16 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d30(0){ }d59(1){ }d83(2){ }d103(3){ }d104(11){ }d121(12){ }d122(13){ }d139(14){ }d352(25){ }d353(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 72 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 212 213 214
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 212 213 214
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; live  gen 	 208 209 210
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214

( 3 )->[5]->( 9 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213
;; lr  def 	 24 [cc] 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc] 208 209 210 211
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214

( 5 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214

( 6 )->[7]->( 10 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 217 218
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 219
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214

( 5 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 220
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214

( 6 7 4 9 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 204 205 221 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 204 205 221 223 224
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224

( 10 )->[11]->( 62 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214

( 10 )->[12]->( 13 62 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 224
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 207
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 207 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213 214

( 12 )->[13]->( 14 18 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; live  gen 	 24 [cc] 227
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213

( 13 )->[14]->( 17 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc] 228
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213

( 14 )->[15]->( 16 18 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213

( 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 24 [cc] 230
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213

( 14 16 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 231
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213

( 15 13 17 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 200 201 408
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  gen 	 24 [cc] 200 201 408
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408

( 18 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213

( 18 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213

( 20 19 )->[21]->( 22 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 24 [cc] 147 240
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  gen 	 24 [cc] 147 240
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240

( 21 )->[22]->( 23 25 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 240
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  gen 	 24 [cc] 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213

( 22 )->[23]->( 24 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  gen 	 24 [cc] 144
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213

( 23 )->[24]->( 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213

( 21 22 23 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; live  gen 	 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213

( 25 24 )->[26]->( 27 40 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 146 409 410
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 24 [cc] 146 409 410
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410

( 26 )->[27]->( 28 31 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 158
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213

( 27 )->[28]->( 29 31 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 246 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 246 248 249
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249

( 28 )->[29]->( 30 70 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 248
;; lr  def 	 24 [cc] 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  gen 	 24 [cc] 253
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253

( 29 )->[30]->( 31 70 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 249 253
;; lr  def 	 24 [cc] 257
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  gen 	 24 [cc] 257
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213

( 27 30 28 70 )->[31]->( 48 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 159 160 161 263 264 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 159 160 161 263 264 266
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264

( 31 )->[32]->( 34 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 264
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 174 268 269 271 275 276 280
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 169 174 268 269 271 275 276 280
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280

( 32 )->[33]->( 37 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u295(11){ }u296(13){ }u297(25){ }u298(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; live  gen 	 156
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213

( 32 )->[34]->( 36 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u299(11){ }u300(13){ }u301(25){ }u302(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 275
;; lr  def 	 24 [cc] 284
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  gen 	 24 [cc] 284
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284

( 34 )->[35]->( 37 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u307(11){ }u308(13){ }u309(25){ }u310(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 268
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; live  gen 	 156
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213

( 34 )->[36]->( 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u312(11){ }u313(13){ }u314(25){ }u315(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 280 284
;; lr  def 	 24 [cc] 156 288
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; live  gen 	 156 288
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213

( 36 33 35 )->[37]->( 38 49 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 159 169 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 172 296 298 299 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 172 296 298 299 302
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302

( 37 )->[38]->( 39 49 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u359(11){ }u360(13){ }u361(25){ }u362(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 159 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 148
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302

( 38 )->[39]->( 49 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u380(11){ }u381(13){ }u382(25){ }u383(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 302
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213

( 26 )->[40]->( 41 44 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213

( 40 )->[41]->( 42 44 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u396(11){ }u397(13){ }u398(25){ }u399(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 307 309 310
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 307 309 310
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310

( 41 )->[42]->( 43 71 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u407(11){ }u408(13){ }u409(25){ }u410(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 309
;; lr  def 	 24 [cc] 314
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  gen 	 24 [cc] 314
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314

( 42 )->[43]->( 44 71 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u415(11){ }u416(13){ }u417(25){ }u418(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 310 314
;; lr  def 	 24 [cc] 318
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  gen 	 24 [cc] 318
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213

( 40 43 41 71 )->[44]->( 48 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 178 179 180 324 325 327
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 178 179 180 324 325 327
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213

( 44 )->[45]->( 48 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u438(11){ }u439(13){ }u440(25){ }u441(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213

( 45 )->[46]->( 47 49 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u444(11){ }u445(13){ }u446(25){ }u447(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 188 328
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 188 328
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213

( 46 )->[47]->( 49 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u463(11){ }u464(13){ }u465(25){ }u466(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 178 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 148
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213

( 31 45 44 )->[48]->( 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u482(11){ }u483(13){ }u484(25){ }u485(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; live  gen 	 148
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213

( 48 37 38 39 46 47 )->[49]->( 50 52 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u486(11){ }u487(13){ }u488(25){ }u489(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 194 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  gen 	 24 [cc] 194 195
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213

( 49 )->[50]->( 55 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u497(11){ }u498(13){ }u499(25){ }u500(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  gen 	 24 [cc] 192
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213

( 50 )->[51]->( 55 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u504(11){ }u505(13){ }u506(25){ }u507(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; lr  def 	 24 [cc] 335 337 339 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  gen 	 24 [cc] 335 337 339 343
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213

( 49 51 )->[52]->( 54 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u519(11){ }u520(13){ }u521(25){ }u522(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194 213
;; lr  def 	 24 [cc] 193 344 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  gen 	 24 [cc] 193 344 345 346
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345

( 52 )->[53]->( 56 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u530(11){ }u531(13){ }u532(25){ }u533(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207

( 52 )->[54]->( 56 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u534(11){ }u535(13){ }u536(25){ }u537(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 193 213 345
;; lr  def 	 191 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  gen 	 191 347
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207

( 50 51 )->[55]->( 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u542(11){ }u543(13){ }u544(25){ }u545(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207

( 55 53 54 )->[56]->( 57 58 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u546(11){ }u547(13){ }u548(25){ }u549(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 191
;; lr  def 	 24 [cc] 348
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  gen 	 24 [cc] 348
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207

( 56 )->[57]->( 72 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u555(11){ }u556(13){ }u557(25){ }u558(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 56 )->[58]->( 59 60 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u564(11){ }u565(13){ }u566(25){ }u567(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 351 352 353 354 355 356 357 358 360
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 24 [cc] 351 352 353 354 355 356 357 358 360
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207

( 58 )->[59]->( 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u591(11){ }u592(13){ }u593(25){ }u594(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 196 197 361 363 365 366 367
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 196 197 361 363 365 366 367
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 58 59 )->[60]->( 61 72 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u609(11){ }u610(13){ }u611(25){ }u612(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 369 370
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 24 [cc] 140 141 369 370
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140

( 60 )->[61]->( 72 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u628(11){ }u629(13){ }u630(25){ }u631(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 12 11 )->[62]->( 63 72 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u636(11){ }u637(13){ }u638(25){ }u639(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213

( 62 )->[63]->( 64 68 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u642(11){ }u643(13){ }u644(25){ }u645(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213

( 63 )->[64]->( 65 68 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u648(11){ }u649(13){ }u650(25){ }u651(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 24 [cc] 375
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 375
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213

( 64 )->[65]->( 66 67 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u656(11){ }u657(13){ }u658(25){ }u659(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 376 377
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 376 377
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376

( 65 )->[66]->( 68 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u664(11){ }u665(13){ }u666(25){ }u667(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 378 380
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 378 380
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 65 )->[67]->( 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u673(11){ }u674(13){ }u675(25){ }u676(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; lr  def 	 383
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; live  gen 	 383
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 64 63 67 66 )->[68]->( 69 72 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u682(11){ }u683(13){ }u684(25){ }u685(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 68 )->[69]->( 72 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u693(11){ }u694(13){ }u695(25){ }u696(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 391
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 391
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 29 30 )->[70]->( 31 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u708(11){ }u709(13){ }u710(25){ }u711(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 158 392 394 398 399
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 158 392 394 398 399
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213

( 42 43 )->[71]->( 44 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u720(11){ }u721(13){ }u722(25){ }u723(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177 400 402 406 407
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 177 400 402 406 407
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213

( 61 2 68 60 57 62 69 )->[72]->( 1 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u732(11){ }u733(13){ }u734(25){ }u735(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 72 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u736(11){ }u737(13){ }u738(14){ }u739(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 13 to worklist
  Adding insn 638 to worklist
  Adding insn 38 to worklist
  Adding insn 40 to worklist
  Adding insn 44 to worklist
  Adding insn 640 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 59 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 642 to worklist
  Adding insn 72 to worklist
  Adding insn 86 to worklist
  Adding insn 83 to worklist
  Adding insn 90 to worklist
  Adding insn 94 to worklist
  Adding insn 97 to worklist
  Adding insn 102 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 116 to worklist
  Adding insn 113 to worklist
  Adding insn 644 to worklist
  Adding insn 140 to worklist
  Adding insn 146 to worklist
  Adding insn 150 to worklist
  Adding insn 646 to worklist
  Adding insn 164 to worklist
  Adding insn 169 to worklist
  Adding insn 177 to worklist
  Adding insn 185 to worklist
  Adding insn 199 to worklist
  Adding insn 217 to worklist
  Adding insn 248 to worklist
  Adding insn 240 to worklist
  Adding insn 234 to worklist
  Adding insn 230 to worklist
  Adding insn 227 to worklist
  Adding insn 223 to worklist
  Adding insn 648 to worklist
  Adding insn 261 to worklist
  Adding insn 650 to worklist
  Adding insn 307 to worklist
  Adding insn 303 to worklist
  Adding insn 296 to worklist
  Adding insn 290 to worklist
  Adding insn 284 to worklist
  Adding insn 319 to worklist
  Adding insn 316 to worklist
  Adding insn 311 to worklist
  Adding insn 652 to worklist
  Adding insn 323 to worklist
  Adding insn 321 to worklist
  Adding insn 331 to worklist
  Adding insn 339 to worklist
  Adding insn 347 to worklist
  Adding insn 361 to worklist
  Adding insn 372 to worklist
  Adding insn 379 to worklist
  Adding insn 391 to worklist
  Adding insn 387 to worklist
  Adding insn 383 to worklist
  Adding insn 654 to worklist
  Adding insn 400 to worklist
  Adding insn 395 to worklist
  Adding insn 414 to worklist
  Adding insn 411 to worklist
  Adding insn 418 to worklist
  Adding insn 433 to worklist
  Adding insn 442 to worklist
  Adding insn 437 to worklist
  Adding insn 656 to worklist
  Adding insn 658 to worklist
  Adding insn 450 to worklist
  Adding insn 462 to worklist
  Adding insn 660 to worklist
  Adding insn 466 to worklist
  Adding insn 487 to worklist
  Adding insn 483 to worklist
  Adding insn 479 to worklist
  Adding insn 475 to worklist
  Adding insn 498 to worklist
  Adding insn 513 to worklist
  Adding insn 510 to worklist
  Adding insn 506 to worklist
  Adding insn 501 to worklist
  Adding insn 662 to worklist
  Adding insn 520 to worklist
  Adding insn 526 to worklist
  Adding insn 529 to worklist
  Adding insn 533 to worklist
  Adding insn 538 to worklist
  Adding insn 664 to worklist
  Adding insn 544 to worklist
  Adding insn 541 to worklist
  Adding insn 553 to worklist
  Adding insn 550 to worklist
  Adding insn 562 to worklist
  Adding insn 559 to worklist
  Adding insn 666 to worklist
  Adding insn 578 to worklist
  Adding insn 569 to worklist
  Adding insn 668 to worklist
  Adding insn 670 to worklist
Finished finding needed instructions:
processing block 72 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 69 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 577 to worklist
  Adding insn 576 to worklist
  Adding insn 575 to worklist
  Adding insn 573 to worklist
  Adding insn 568 to worklist
  Adding insn 567 to worklist
processing block 68 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 561 to worklist
  Adding insn 677 to worklist
  Adding insn 676 to worklist
processing block 66 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 543 to worklist
  Adding insn 540 to worklist
processing block 67 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 552 to worklist
processing block 65 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
  Adding insn 537 to worklist
  Adding insn 535 to worklist
processing block 64 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
  Adding insn 532 to worklist
  Adding insn 531 to worklist
processing block 63 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
  Adding insn 528 to worklist
processing block 62 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
  Adding insn 525 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
processing block 57 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 465 to worklist
  Adding insn 464 to worklist
processing block 61 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 519 to worklist
  Adding insn 518 to worklist
processing block 60 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 512 to worklist
  Adding insn 679 to worklist
  Adding insn 678 to worklist
  Adding insn 505 to worklist
  Adding insn 503 to worklist
  Adding insn 502 to worklist
processing block 59 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
  Adding insn 497 to worklist
  Adding insn 496 to worklist
  Adding insn 494 to worklist
  Adding insn 493 to worklist
  Adding insn 491 to worklist
  Adding insn 490 to worklist
  Adding insn 489 to worklist
processing block 58 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
  Adding insn 486 to worklist
  Adding insn 484 to worklist
  Adding insn 482 to worklist
  Adding insn 481 to worklist
  Adding insn 480 to worklist
  Adding insn 478 to worklist
  Adding insn 477 to worklist
  Adding insn 476 to worklist
  Adding insn 474 to worklist
  Adding insn 472 to worklist
  Adding insn 471 to worklist
processing block 56 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
  Adding insn 461 to worklist
  Adding insn 459 to worklist
processing block 55 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
  Adding insn 456 to worklist
processing block 54 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
  Adding insn 451 to worklist
  Adding insn 449 to worklist
processing block 53 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
  Adding insn 444 to worklist
processing block 52 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
  Adding insn 441 to worklist
  Adding insn 439 to worklist
  Adding insn 438 to worklist
  Adding insn 436 to worklist
processing block 51 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
  Adding insn 432 to worklist
  Adding insn 431 to worklist
  Adding insn 427 to worklist
  Adding insn 424 to worklist
  Adding insn 423 to worklist
processing block 50 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
  Adding insn 417 to worklist
  Adding insn 416 to worklist
processing block 49 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
  Adding insn 413 to worklist
  Adding insn 410 to worklist
  Adding insn 409 to worklist
processing block 48 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
  Adding insn 406 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
  Adding insn 318 to worklist
  Adding insn 315 to worklist
  Adding insn 314 to worklist
  Adding insn 313 to worklist
  Adding insn 312 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302
  Adding insn 306 to worklist
  Adding insn 302 to worklist
  Adding insn 301 to worklist
  Adding insn 300 to worklist
  Adding insn 299 to worklist
  Adding insn 298 to worklist
  Adding insn 295 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 289 to worklist
  Adding insn 288 to worklist
  Adding insn 686 to worklist
  Adding insn 685 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
  Adding insn 280 to worklist
  Adding insn 274 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
  Adding insn 263 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284
  Adding insn 260 to worklist
  Adding insn 259 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
  Adding insn 250 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 241 to worklist
  Adding insn 239 to worklist
  Adding insn 238 to worklist
  Adding insn 233 to worklist
  Adding insn 232 to worklist
  Adding insn 229 to worklist
  Adding insn 699 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 222 to worklist
  Adding insn 221 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
  Adding insn 216 to worklist
  Adding insn 637 to worklist
  Adding insn 208 to worklist
  Adding insn 698 to worklist
  Adding insn 207 to worklist
  Adding insn 688 to worklist
  Adding insn 687 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
processing block 70 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
  Adding insn 595 to worklist
  Adding insn 594 to worklist
  Adding insn 593 to worklist
  Adding insn 589 to worklist
  Adding insn 675 to worklist
  Adding insn 674 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
  Adding insn 198 to worklist
  Adding insn 193 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
  Adding insn 184 to worklist
  Adding insn 183 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
  Adding insn 690 to worklist
  Adding insn 689 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
  Adding insn 168 to worklist
  Adding insn 629 to worklist
processing block 47 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
  Adding insn 401 to worklist
  Adding insn 399 to worklist
  Adding insn 398 to worklist
  Adding insn 397 to worklist
  Adding insn 396 to worklist
processing block 46 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213
  Adding insn 390 to worklist
  Adding insn 386 to worklist
  Adding insn 385 to worklist
  Adding insn 384 to worklist
  Adding insn 701 to worklist
  Adding insn 381 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
  Adding insn 378 to worklist
processing block 44 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
  Adding insn 371 to worklist
  Adding insn 370 to worklist
  Adding insn 700 to worklist
  Adding insn 369 to worklist
  Adding insn 682 to worklist
  Adding insn 681 to worklist
  Adding insn 365 to worklist
  Adding insn 364 to worklist
processing block 71 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
  Adding insn 610 to worklist
  Adding insn 609 to worklist
  Adding insn 608 to worklist
  Adding insn 604 to worklist
  Adding insn 673 to worklist
  Adding insn 672 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
  Adding insn 360 to worklist
  Adding insn 355 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
  Adding insn 346 to worklist
  Adding insn 345 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
  Adding insn 338 to worklist
  Adding insn 337 to worklist
  Adding insn 336 to worklist
  Adding insn 684 to worklist
  Adding insn 683 to worklist
processing block 40 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
  Adding insn 330 to worklist
  Adding insn 627 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
  Adding insn 631 to worklist
  Adding insn 628 to worklist
  Adding insn 163 to worklist
  Adding insn 161 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
  Adding insn 152 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
  Adding insn 158 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
  Adding insn 149 to worklist
  Adding insn 148 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
  Adding insn 145 to worklist
  Adding insn 144 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 692 to worklist
  Adding insn 691 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
  Adding insn 122 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
  Adding insn 131 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
  Adding insn 625 to worklist
  Adding insn 115 to worklist
  Adding insn 694 to worklist
  Adding insn 693 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
  Adding insn 105 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
  Adding insn 101 to worklist
  Adding insn 99 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
  Adding insn 96 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
  Adding insn 93 to worklist
  Adding insn 92 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
  Adding insn 89 to worklist
  Adding insn 88 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 207 208 209 210 213 214
  Adding insn 85 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 697 to worklist
  Adding insn 696 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
  Adding insn 58 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
  Adding insn 51 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
processing block 5 lr out =  11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 635 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
  Adding insn 12 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 73 n_edges 116 count 144 (    2)
;;   ======================================================
;;   -- basic block 2 from 2 to 10 -- before reload
;;   ======================================================

;;	  0-->     2 r213=r0                           :cortex_a8_default
;;	  0-->     3 r214=r1                           :cortex_a8_default
;;	  2-->     7 r212=[r213+0x40]                  :cortex_a8_load_store_1
;;	  4-->     9 cc=cmp(zxt(r212,0x4,0x0),0x0)     :cortex_a8_default
;;	  6-->    10 pc={(cc!=0x0)?L616:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 12 to 13 -- before reload
;;   ======================================================

;;	  0-->    12 cc=cmp(r214,0x0)                  :cortex_a8_default
;;	  2-->    13 pc={(cc!=0x0)?L20:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 12
;;   new tail = 13

;;   ======================================================
;;   -- basic block 4 from 15 to 638 -- before reload
;;   ======================================================

;;	  0-->    15 r208=r214                         :cortex_a8_default
;;	  0-->    16 r209=r214                         :cortex_a8_default
;;	  1-->    17 r210=r214                         :cortex_a8_default
;;	  1-->   638 pc=L60                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 15
;;   new tail = 638

;;   ======================================================
;;   -- basic block 5 from 22 to 38 -- before reload
;;   ======================================================

;;	  0-->    36 r210=[r213]                       :cortex_a8_load_store_1
;;	  0-->    24 cc=cmp(zxt(r212,0x1,0x5),0x0)     :cortex_a8_default
;;	  1-->   635 r211={(cc!=0x0)?0x2:0x4}          :cortex_a8_default
;;	  1-->    22 r209=[r213+0x3c]                  :cortex_a8_load_store_1
;;	  2-->    37 cc=cmp(r210,0xfffffffffffffdfc)   :cortex_a8_default
;;	  3-->    35 r208=r209-r211                    :cortex_a8_default
;;	  4-->    38 pc={(cc==0x0)?L56:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 22
;;   new tail = 38

;;   ======================================================
;;   -- basic block 6 from 40 to 40 -- before reload
;;   ======================================================

;;	  0-->    40 pc={(ltu(cc,0x0))?L60:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 40
;;   new tail = 40

;;   ======================================================
;;   -- basic block 7 from 41 to 44 -- before reload
;;   ======================================================

;;	  0-->    41 r218=r210+0x200                   :cortex_a8_default
;;	  1-->    42 r217=r218+0x2                     :cortex_a8_default
;;	  2-->    43 cc=cmp(r217,0x2)                  :cortex_a8_default
;;	  4-->    44 pc={(gtu(cc,0x0))?L60:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 41
;;   new tail = 44

;;   ======================================================
;;   -- basic block 8 from 51 to 640 -- before reload
;;   ======================================================

;;	  0-->    51 r219=[r213+0x44]                  :cortex_a8_load_store_1
;;	  1-->    53 [r213+0x3c]=r208                  :cortex_a8_load_store_1
;;	  3-->    52 [r213]=r219                       :cortex_a8_load_store_1
;;	  3-->   640 pc=L60                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 51
;;   new tail = 640

;;   ======================================================
;;   -- basic block 9 from 58 to 59 -- before reload
;;   ======================================================

;;	  0-->    58 r220=0xfffffffffffffffc           :cortex_a8_default
;;	  0-->    59 [r213]=r220                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 58
;;   new tail = 59

;;   ======================================================
;;   -- basic block 10 from 696 to 70 -- before reload
;;   ======================================================

;;	  0-->   696 r221=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   697 r221=r221&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->    65 r223=[r221+0xc]                   :cortex_a8_load_store_1
;;	  6-->    66 r205=[r223+0x4]                   :cortex_a8_load_store_1
;;	  9-->    67 r204=[r205]                       :cortex_a8_load_store_1
;;	 11-->    69 {cc=cmp(r204&0x80000,0x0);r224=r20:cortex_a8_default
;;	 13-->    70 pc={(cc==0x0)?L75:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 13
;;   new head = 696
;;   new tail = 70

;;   ======================================================
;;   -- basic block 11 from 72 to 642 -- before reload
;;   ======================================================

;;	  0-->    72 call [`refrigerator']             :cortex_a8_issue_branch
;;	  0-->   642 pc=L523                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 72
;;   new tail = 642

;;   ======================================================
;;   -- basic block 12 from 79 to 86 -- before reload
;;   ======================================================

;;	  0-->    82 r3=r224                           :cortex_a8_default
;;	  0-->    79 r0=sfp-0xa0                       :cortex_a8_default
;;	  1-->    80 r1=sfp-0x20                       :cortex_a8_default
;;	  1-->    81 r2=r213                           :cortex_a8_default
;;	  2-->    83 r0=call [`get_signal_to_deliver'] :cortex_a8_issue_branch
;;	 34-->    85 {cc=cmp(r0,0x0);r207=r0;}         :cortex_a8_default
;;	 36-->    86 pc={(cc<=0x0)?L523:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 79
;;   new tail = 86

;;   ======================================================
;;   -- basic block 13 from 88 to 90 -- before reload
;;   ======================================================

;;	  0-->    88 r227=[r213+0x3c]                  :cortex_a8_load_store_1
;;	  2-->    89 cc=cmp(r227,r208)                 :cortex_a8_default
;;	  4-->    90 pc={(cc!=0x0)?L108:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 88
;;   new tail = 90

;;   ======================================================
;;   -- basic block 14 from 92 to 94 -- before reload
;;   ======================================================

;;	  0-->    92 r228=0xfffffffffffffdfe           :cortex_a8_load_store_1
;;	  2-->    93 cc=cmp(r210,r228)                 :cortex_a8_default
;;	  4-->    94 pc={(cc==0x0)?L103:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 92
;;   new tail = 94

;;   ======================================================
;;   -- basic block 15 from 96 to 97 -- before reload
;;   ======================================================

;;	  0-->    96 cc=cmp(r210,0xfffffffffffffe00)   :cortex_a8_default
;;	  2-->    97 pc={(cc!=0x0)?L108:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 96
;;   new tail = 97

;;   ======================================================
;;   -- basic block 16 from 99 to 102 -- before reload
;;   ======================================================

;;	  0-->    99 r230=[sfp-0x1c]                   :cortex_a8_load_store_1
;;	  2-->   101 cc=cmp(zxt(r230,0x1,0x1c),0x0)    :cortex_a8_default
;;	  4-->   102 pc={(cc!=0x0)?L108:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 99
;;   new tail = 102

;;   ======================================================
;;   -- basic block 17 from 105 to 107 -- before reload
;;   ======================================================

;;	  0-->   107 [r213+0x3c]=r209                  :cortex_a8_load_store_1
;;	  0-->   105 r231=0xfffffffffffffffc           :cortex_a8_default
;;	  1-->   106 [r213]=r231                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 105
;;   new tail = 107

;;   ======================================================
;;   -- basic block 18 from 693 to 116 -- before reload
;;   ======================================================

;;	  0-->   693 r200=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   694 r200=r200&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->   113 r201=[r200]                       :cortex_a8_load_store_1
;;	  4-->   625 r408=[r200+0xc]                   :cortex_a8_load_store_1
;;	  5-->   115 cc=cmp(zxt(r201,0x1,0x14),0x0)    :cortex_a8_default
;;	  7-->   116 pc={(cc==0x0)?L125:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 693
;;   new tail = 116

;;   ======================================================
;;   -- basic block 19 from 122 to 644 -- before reload
;;   ======================================================

;;	  0-->   122 r206=r408+0x3c0                   :cortex_a8_default
;;	  0-->   644 pc=L132                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 122
;;   new tail = 644

;;   ======================================================
;;   -- basic block 20 from 131 to 131 -- before reload
;;   ======================================================

;;	  0-->   131 r206=r408+0x3b0                   :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 131
;;   new tail = 131

;;   ======================================================
;;   -- basic block 21 from 691 to 140 -- before reload
;;   ======================================================

;;	  0-->   691 r240=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->   139 cc=cmp(r207,0x1f)                 :cortex_a8_default
;;	  1-->   692 r240=r240&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->   138 r147=[r240+0xc]                   :cortex_a8_load_store_1
;;	  3-->   140 pc={(cc>0x0)?L156:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 691
;;   new tail = 140

;;   ======================================================
;;   -- basic block 22 from 144 to 146 -- before reload
;;   ======================================================

;;	  0-->   144 r143=[r240+0x10]                  :cortex_a8_load_store_1
;;	  2-->   145 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  4-->   146 pc={(cc==0x0)?L156:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 144
;;   new tail = 146

;;   ======================================================
;;   -- basic block 23 from 148 to 150 -- before reload
;;   ======================================================

;;	  0-->   148 r144=[r143+0x10]                  :cortex_a8_load_store_1
;;	  2-->   149 cc=cmp(r144,0x0)                  :cortex_a8_default
;;	  4-->   150 pc={(cc==0x0)?L156:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 148
;;   new tail = 150

;;   ======================================================
;;   -- basic block 24 from 152 to 646 -- before reload
;;   ======================================================

;;	  0-->   152 r133=[r207*0x4+r144]              :cortex_a8_load_store_1
;;	  0-->   646 pc=L159                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 152
;;   new tail = 646

;;   ======================================================
;;   -- basic block 25 from 158 to 158 -- before reload
;;   ======================================================

;;	  0-->   158 r133=r207                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 158
;;   new tail = 158

;;   ======================================================
;;   -- basic block 26 from 161 to 164 -- before reload
;;   ======================================================

;;	  0-->   161 r146=[sfp-0x1c]                   :cortex_a8_load_store_1
;;	  1-->   628 r409=[r213+0x34]                  :cortex_a8_load_store_1
;;	  2-->   163 cc=cmp(zxt(r146,0x1,0x2),0x0)     :cortex_a8_default
;;	  2-->   631 r410=r146&0x8000000               :cortex_a8_default
;;	  4-->   164 pc={(cc==0x0)?L326:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 161
;;   new tail = 164

;;   ======================================================
;;   -- basic block 27 from 629 to 169 -- before reload
;;   ======================================================

;;	  0-->   168 cc=cmp(r410,0x0)                  :cortex_a8_default
;;	  0-->   629 r158=r409                         :cortex_a8_default
;;	  2-->   169 pc={(cc==0x0)?L200:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 629
;;   new tail = 169

;;   ======================================================
;;   -- basic block 28 from 689 to 177 -- before reload
;;   ======================================================

;;	  0-->   689 r246=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   690 r246=r246&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->   174 r248=[r246+0xc]                   :cortex_a8_load_store_1
;;	  6-->   175 r249=[r248+0x3dc]                 :cortex_a8_load_store_1
;;	  8-->   176 cc=cmp(r249,0x0)                  :cortex_a8_default
;;	 10-->   177 pc={(cc==0x0)?L200:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 689
;;   new tail = 177

;;   ======================================================
;;   -- basic block 29 from 183 to 185 -- before reload
;;   ======================================================

;;	  0-->   183 r253=[r248+0x3d8]                 :cortex_a8_load_store_1
;;	  2-->   184 cc=cmp(r158,r253)                 :cortex_a8_default
;;	  4-->   185 pc={(leu(cc,0x0))?L583:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 183
;;   new tail = 185

;;   ======================================================
;;   -- basic block 30 from 193 to 199 -- before reload
;;   ======================================================

;;	  0-->   193 r257=r158-r253                    :cortex_a8_default
;;	  1-->   198 cc=cmp(r257,r249)                 :cortex_a8_default
;;	  3-->   199 pc={(gtu(cc,0x0))?L583:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 193
;;   new tail = 199

;;   ======================================================
;;   -- basic block 31 from 202 to 217 -- before reload
;;   ======================================================

;;	  0-->   687 r264=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->   202 r263=r158-0x370                   :cortex_a8_default
;;	  1-->   688 r264=r264&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->   203 r159=r263&0xfffffffffffffff8      :cortex_a8_default
;;	  3-->   207 r266=[r264+0x8]                   :cortex_a8_load_store_1
;;	  5-->   698 r160=r266                         :cortex_a8_default
;;	  6-->   208 {r160=asm_operands;r161=asm_operan:nothing
;;	  7-->   637 {r159={(r160==0x0)?r159:0x0};clobb:cortex_a8_default
;;	  8-->   216 cc=cmp(r159,0x0)                  :cortex_a8_default
;;	 10-->   217 pc={(cc==0x0)?L404:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 202
;;   new tail = 217

;;   ======================================================
;;   -- basic block 32 from 221 to 248 -- before reload
;;   ======================================================

;;	  0-->   221 r0=r159                           :cortex_a8_default
;;	  0-->   222 r1=sfp-0xa0                       :cortex_a8_default
;;	  1-->   223 r0=call [`copy_siginfo_to_user']  :cortex_a8_issue_branch
;;	  1-->   225 r268=0x0                          :cortex_a8_default
;;	  2-->   226 r269=r159+0x80                    :cortex_a8_default
;;	 33-->   699 r169=r0                           :cortex_a8_default
;;	 34-->   227 {r169=asm_operands;clobber cc;}   :nothing
;;	 35-->   229 r271=r159+0x84                    :cortex_a8_default
;;	 36-->   230 {r169=asm_operands;clobber cc;}   :nothing
;;	 37-->   233 r1=0xc                            :cortex_a8_default
;;	 37-->   232 r0=sfp-0xc                        :cortex_a8_default
;;	 38-->   234 call [`__memzero']                :cortex_a8_issue_branch
;;	 38-->   238 r275=[r264+0xc]                   :cortex_a8_load_store_1
;;	 39-->   241 r174=[r213+0x34]                  :cortex_a8_load_store_1
;;	 41-->   239 r276=[r275+0x3d8]                 :cortex_a8_load_store_1
;;	 44-->   240 [sfp-0xc]=r276                    :cortex_a8_load_store_1
;;	 45-->   246 r280=[r275+0x3dc]                 :cortex_a8_load_store_1
;;	 47-->   247 cc=cmp(r280,0x0)                  :cortex_a8_default
;;	 49-->   248 pc={(cc!=0x0)?L253:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 49
;;   new head = 221
;;   new tail = 248

;;   ======================================================
;;   -- basic block 33 from 250 to 648 -- before reload
;;   ======================================================

;;	  0-->   250 r156=0x2                          :cortex_a8_default
;;	  0-->   648 pc=L282                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 250
;;   new tail = 648

;;   ======================================================
;;   -- basic block 34 from 259 to 261 -- before reload
;;   ======================================================

;;	  0-->   259 r284=[r275+0x3d8]                 :cortex_a8_load_store_1
;;	  2-->   260 cc=cmp(r174,r284)                 :cortex_a8_default
;;	  4-->   261 pc={(gtu(cc,0x0))?L266:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 259
;;   new tail = 261

;;   ======================================================
;;   -- basic block 35 from 263 to 650 -- before reload
;;   ======================================================

;;	  0-->   263 r156=r268                         :cortex_a8_default
;;	  0-->   650 pc=L282                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 263
;;   new tail = 650

;;   ======================================================
;;   -- basic block 36 from 274 to 280 -- before reload
;;   ======================================================

;;	  0-->   274 r288=r174-r284                    :cortex_a8_default
;;	  1-->   280 {r156=leu(r288,r280);clobber cc;} :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 274
;;   new tail = 280

;;   ======================================================
;;   -- basic block 37 from 284 to 307 -- before reload
;;   ======================================================

;;	  0-->   685 r296=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->   284 [sfp-0x8]=r156                    :cortex_a8_load_store_1
;;	  1-->   686 r296=r296&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->   294 r1=sfp-0xc                        :cortex_a8_default
;;	  2-->   295 r2=0xc                            :cortex_a8_default
;;	  2-->   293 r0=r159+0x88                      :cortex_a8_default
;;	  3-->   288 r298=[r296+0xc]                   :cortex_a8_load_store_1
;;	  3-->   299 r302=r159+0x80                    :cortex_a8_default
;;	  6-->   289 r299=[r298+0x3dc]                 :cortex_a8_load_store_1
;;	  9-->   290 [sfp-0x4]=r299                    :cortex_a8_load_store_1
;;	  9-->   296 r0=call [`__copy_to_user']        :cortex_a8_issue_branch
;;	 10-->   302 r2=r206                           :cortex_a8_default
;;	 10-->   301 r1=r213                           :cortex_a8_default
;;	 41-->   298 r172=r0|r169                      :cortex_a8_default
;;	 41-->   300 r0=r302                           :cortex_a8_default
;;	 42-->   303 r0=call [`setup_sigframe']        :cortex_a8_issue_branch
;;	 74-->   306 {cc=cmp(r172|r0,0x0);r148=r172|r0;:cortex_a8_default
;;	 76-->   307 pc={(cc!=0x0)?L407:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 76
;;   new head = 284
;;   new tail = 307

;;   ======================================================
;;   -- basic block 38 from 311 to 319 -- before reload
;;   ======================================================

;;	  0-->   312 r0=r213                           :cortex_a8_default
;;	  0-->   313 r1=sfp-0x20                       :cortex_a8_default
;;	  1-->   314 r2=r159+0x368                     :cortex_a8_default
;;	  1-->   315 r3=r159                           :cortex_a8_default
;;	  2-->   311 [sp]=r133                         :cortex_a8_load_store_1
;;	  2-->   316 r0=call [`setup_return']          :cortex_a8_issue_branch
;;	 34-->   318 {cc=cmp(r0,0x0);r148=r0;}         :cortex_a8_default
;;	 36-->   319 pc={(cc!=0x0)?L407:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 311
;;   new tail = 319

;;   ======================================================
;;   -- basic block 39 from 321 to 652 -- before reload
;;   ======================================================

;;	  0-->   321 [r213+0x4]=r159                   :cortex_a8_load_store_1
;;	  1-->   323 [r213+0x8]=r302                   :cortex_a8_load_store_1
;;	  1-->   652 pc=L407                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 321
;;   new tail = 652

;;   ======================================================
;;   -- basic block 40 from 627 to 331 -- before reload
;;   ======================================================

;;	  0-->   330 cc=cmp(r410,0x0)                  :cortex_a8_default
;;	  0-->   627 r177=r409                         :cortex_a8_default
;;	  2-->   331 pc={(cc==0x0)?L362:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 627
;;   new tail = 331

;;   ======================================================
;;   -- basic block 41 from 683 to 339 -- before reload
;;   ======================================================

;;	  0-->   683 r307=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   684 r307=r307&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->   336 r309=[r307+0xc]                   :cortex_a8_load_store_1
;;	  6-->   337 r310=[r309+0x3dc]                 :cortex_a8_load_store_1
;;	  8-->   338 cc=cmp(r310,0x0)                  :cortex_a8_default
;;	 10-->   339 pc={(cc==0x0)?L362:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 683
;;   new tail = 339

;;   ======================================================
;;   -- basic block 42 from 345 to 347 -- before reload
;;   ======================================================

;;	  0-->   345 r314=[r309+0x3d8]                 :cortex_a8_load_store_1
;;	  2-->   346 cc=cmp(r177,r314)                 :cortex_a8_default
;;	  4-->   347 pc={(leu(cc,0x0))?L598:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 345
;;   new tail = 347

;;   ======================================================
;;   -- basic block 43 from 355 to 361 -- before reload
;;   ======================================================

;;	  0-->   355 r318=r177-r314                    :cortex_a8_default
;;	  1-->   360 cc=cmp(r318,r310)                 :cortex_a8_default
;;	  3-->   361 pc={(gtu(cc,0x0))?L598:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 355
;;   new tail = 361

;;   ======================================================
;;   -- basic block 44 from 364 to 372 -- before reload
;;   ======================================================

;;	  0-->   681 r325=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->   364 r324=r177-0x2f0                   :cortex_a8_default
;;	  1-->   682 r325=r325&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->   365 r178=r324&0xfffffffffffffff8      :cortex_a8_default
;;	  3-->   369 r327=[r325+0x8]                   :cortex_a8_load_store_1
;;	  5-->   700 r179=r327                         :cortex_a8_default
;;	  6-->   370 {r179=asm_operands;r180=asm_operan:nothing
;;	  7-->   371 cc=cmp(r179,0x0)                  :cortex_a8_default
;;	  9-->   372 pc={(cc!=0x0)?L404:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 364
;;   new tail = 372

;;   ======================================================
;;   -- basic block 45 from 378 to 379 -- before reload
;;   ======================================================

;;	  0-->   378 cc=cmp(r178,0x0)                  :cortex_a8_default
;;	  2-->   379 pc={(cc==0x0)?L404:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 378
;;   new tail = 379

;;   ======================================================
;;   -- basic block 46 from 381 to 391 -- before reload
;;   ======================================================

;;	  0-->   701 r188=r179                         :cortex_a8_default
;;	  0-->   381 r328=0x5ac3c35a                   :cortex_a8_load_store_1
;;	  1-->   383 {r188=asm_operands;clobber cc;}   :nothing
;;	  2-->   386 r2=r206                           :cortex_a8_default
;;	  2-->   384 r0=r178                           :cortex_a8_default
;;	  3-->   385 r1=r213                           :cortex_a8_default
;;	  4-->   387 r0=call [`setup_sigframe']        :cortex_a8_issue_branch
;;	 36-->   390 {cc=cmp(r0|r188,0x0);r148=r0|r188;:cortex_a8_default
;;	 38-->   391 pc={(cc!=0x0)?L407:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 38
;;   new head = 381
;;   new tail = 391

;;   ======================================================
;;   -- basic block 47 from 395 to 654 -- before reload
;;   ======================================================

;;	  0-->   399 r3=r178                           :cortex_a8_default
;;	  0-->   396 r0=r213                           :cortex_a8_default
;;	  1-->   397 r1=sfp-0x20                       :cortex_a8_default
;;	  1-->   398 r2=r178+0x2e8                     :cortex_a8_default
;;	  2-->   395 [sp]=r133                         :cortex_a8_load_store_1
;;	  2-->   400 r0=call [`setup_return']          :cortex_a8_issue_branch
;;	  3-->   401 r148=r0                           :cortex_a8_default
;;	  3-->   654 pc=L407                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 395
;;   new tail = 654

;;   ======================================================
;;   -- basic block 48 from 406 to 406 -- before reload
;;   ======================================================

;;	  0-->   406 r148=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 406
;;   new tail = 406

;;   ======================================================
;;   -- basic block 49 from 409 to 414 -- before reload
;;   ======================================================

;;	  0-->   409 r195=[r213+0x40]                  :cortex_a8_load_store_1
;;	  2-->   413 cc=cmp(zxt(r195,0x1,0x7),0x0)     :cortex_a8_default
;;	  2-->   410 r194=r195&0xfffffffffffffebf      :cortex_a8_default
;;	  3-->   411 [r213+0x40]=r194                  :cortex_a8_load_store_1
;;	  4-->   414 pc={(cc!=0x0)?L434:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 409
;;   new tail = 414

;;   ======================================================
;;   -- basic block 50 from 416 to 418 -- before reload
;;   ======================================================

;;	  0-->   416 r192=r195&0x1f                    :cortex_a8_default
;;	  1-->   417 cc=cmp(r192,0x10)                 :cortex_a8_default
;;	  3-->   418 pc={(cc==0x0)?L454:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 416
;;   new tail = 418

;;   ======================================================
;;   -- basic block 51 from 423 to 433 -- before reload
;;   ======================================================

;;	  0-->   423 r335=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  3-->   424 r337=[r335]                       :cortex_a8_load_store_1
;;	  5-->   427 r339=zxt(r337,0x1,0x3)            :cortex_a8_default
;;	  6-->   431 {r343=r192==0x0&r339;clobber cc;} :cortex_a8_default
;;	  7-->   432 cc=cmp(r343,0x0)                  :cortex_a8_default
;;	  9-->   433 pc={(cc!=0x0)?L454:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 423
;;   new tail = 433

;;   ======================================================
;;   -- basic block 52 from 436 to 442 -- before reload
;;   ======================================================

;;	  0-->   438 r344=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  0-->   436 r193=r194&0xffffffffffffff30      :cortex_a8_default
;;	  1-->   437 [r213+0x40]=r193                  :cortex_a8_load_store_1
;;	  3-->   439 r346=[r344]                       :cortex_a8_load_store_1
;;	  5-->   441 {cc=cmp(r346&0x8,0x0);r345=r346&0x:cortex_a8_default
;;	  7-->   442 pc={(cc==0x0)?L447:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 436
;;   new tail = 442

;;   ======================================================
;;   -- basic block 53 from 444 to 656 -- before reload
;;   ======================================================

;;	  0-->   444 r191=0x0                          :cortex_a8_default
;;	  0-->   656 pc=L457                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 444
;;   new tail = 656

;;   ======================================================
;;   -- basic block 54 from 449 to 658 -- before reload
;;   ======================================================

;;	  0-->   449 r347=r193|0x10                    :cortex_a8_default
;;	  0-->   450 [r213+0x40]=r347                  :cortex_a8_load_store_1
;;	  1-->   451 r191=r345                         :cortex_a8_default
;;	  1-->   658 pc=L457                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 449
;;   new tail = 658

;;   ======================================================
;;   -- basic block 55 from 456 to 456 -- before reload
;;   ======================================================

;;	  0-->   456 r191=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 456
;;   new tail = 456

;;   ======================================================
;;   -- basic block 56 from 459 to 462 -- before reload
;;   ======================================================

;;	  0-->   459 r348=r191^0x1                     :cortex_a8_default
;;	  1-->   461 {cc=cmp(r348|r148,0x0);clobber scr:cortex_a8_default
;;	  3-->   462 pc={(cc==0x0)?L469:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 459
;;   new tail = 462

;;   ======================================================
;;   -- basic block 57 from 464 to 660 -- before reload
;;   ======================================================

;;	  0-->   464 r0=r207                           :cortex_a8_default
;;	  0-->   465 r1=r147                           :cortex_a8_default
;;	  1-->   466 r0=call [`force_sigsegv']         :cortex_a8_issue_branch
;;	  1-->   660 pc=L616                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 464
;;   new tail = 660

;;   ======================================================
;;   -- basic block 58 from 471 to 487 -- before reload
;;   ======================================================

;;	  0-->   471 r351=[r147+0x3ac]                 :cortex_a8_load_store_1
;;	  2-->   472 r352=r351+0x500                   :cortex_a8_default
;;	  3-->   474 r0=r352+0x4                       :cortex_a8_default
;;	  4-->   475 call [`_raw_spin_lock_irq']       :cortex_a8_issue_branch
;;	  4-->   477 r354=[sfp-0x10]                   :cortex_a8_load_store_1
;;	  5-->   476 r353=[r147+0x3b4]                 :cortex_a8_load_store_1
;;	  6-->   480 r356=[r147+0x3b0]                 :cortex_a8_load_store_1
;;	  7-->   478 r355=r353|r354                    :cortex_a8_default
;;	  7-->   479 [r147+0x3b4]=r355                 :cortex_a8_load_store_1
;;	  8-->   481 r357=[sfp-0x14]                   :cortex_a8_load_store_1
;;	 10-->   482 r358=r356|r357                    :cortex_a8_default
;;	 10-->   483 [r147+0x3b0]=r358                 :cortex_a8_load_store_1
;;	 11-->   484 r360=[sfp-0x1c]                   :cortex_a8_load_store_1
;;	 13-->   486 cc=cmp(zxt(r360,0x1,0x1e),0x0)    :cortex_a8_default
;;	 15-->   487 pc={(cc!=0x0)?L499:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 15
;;   new head = 471
;;   new tail = 487

;;   ======================================================
;;   -- basic block 59 from 489 to 498 -- before reload
;;   ======================================================

;;	  0-->   489 r197=r207-0x1                     :cortex_a8_default
;;	  0-->   494 r365=0x1                          :cortex_a8_default
;;	  1-->   493 r363=r197&0x1f                    :cortex_a8_default
;;	  2-->   490 r196=r197 0>>0x5                  :cortex_a8_default
;;	  3-->   491 r361=r196+0xec                    :cortex_a8_default
;;	  5-->   496 r366=[r361*0x4+r147]              :cortex_a8_load_store_1
;;	  7-->   497 r367=r365<<r363|r366              :cortex_a8_default
;;	  7-->   498 [r361*0x4+r147]=r367              :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 7
;;   new head = 489
;;   new tail = 498

;;   ======================================================
;;   -- basic block 60 from 501 to 513 -- before reload
;;   ======================================================

;;	  0-->   501 call [`recalc_sigpending']        :cortex_a8_issue_branch
;;	  0-->   502 r369=[r147+0x3ac]                 :cortex_a8_load_store_1
;;	  2-->   503 r370=r369+0x500                   :cortex_a8_default
;;	  3-->   505 r0=r370+0x4                       :cortex_a8_default
;;	  4-->   506 call [`_raw_spin_unlock_irq']     :cortex_a8_issue_branch
;;	  4-->   678 r140=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  5-->   679 r140=r140&0xffffffffffffffc0      :cortex_a8_default
;;	  7-->   510 r141=[r140]                       :cortex_a8_load_store_1
;;	  9-->   512 cc=cmp(zxt(r141,0x1,0x14),0x0)    :cortex_a8_default
;;	 11-->   513 pc={(cc==0x0)?L616:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 501
;;   new tail = 513

;;   ======================================================
;;   -- basic block 61 from 518 to 662 -- before reload
;;   ======================================================

;;	  0-->   519 r1=r140                           :cortex_a8_default
;;	  0-->   518 r0=0x14                           :cortex_a8_default
;;	  1-->   520 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  1-->   662 pc=L616                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 518
;;   new tail = 662

;;   ======================================================
;;   -- basic block 62 from 525 to 526 -- before reload
;;   ======================================================

;;	  0-->   525 cc=cmp(r214,0x0)                  :cortex_a8_default
;;	  2-->   526 pc={(cc==0x0)?L616:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 525
;;   new tail = 526

;;   ======================================================
;;   -- basic block 63 from 528 to 529 -- before reload
;;   ======================================================

;;	  0-->   528 cc=cmp(r210,0xfffffffffffffdfc)   :cortex_a8_default
;;	  2-->   529 pc={(cc!=0x0)?L554:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 528
;;   new tail = 529

;;   ======================================================
;;   -- basic block 64 from 531 to 533 -- before reload
;;   ======================================================

;;	  0-->   531 r375=[r213+0x3c]                  :cortex_a8_load_store_1
;;	  2-->   532 cc=cmp(r375,r209)                 :cortex_a8_default
;;	  4-->   533 pc={(cc!=0x0)?L554:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 531
;;   new tail = 533

;;   ======================================================
;;   -- basic block 65 from 535 to 538 -- before reload
;;   ======================================================

;;	  0-->   535 r377=[r213+0x40]                  :cortex_a8_load_store_1
;;	  2-->   537 {cc=cmp(r377&0x20,0x0);r376=r377&0:cortex_a8_default
;;	  4-->   538 pc={(cc==0x0)?L547:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 535
;;   new tail = 538

;;   ======================================================
;;   -- basic block 66 from 540 to 664 -- before reload
;;   ======================================================

;;	  0-->   543 r380=r209-0x2                     :cortex_a8_default
;;	  0-->   544 [r213+0x3c]=r380                  :cortex_a8_load_store_1
;;	  1-->   540 r378=0x0                          :cortex_a8_default
;;	  1-->   541 [r213+0x1c]=r378                  :cortex_a8_load_store_1
;;	  2-->   664 pc=L554                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 540
;;   new tail = 664

;;   ======================================================
;;   -- basic block 67 from 550 to 553 -- before reload
;;   ======================================================

;;	  0-->   550 [r213+0x1c]=r376                  :cortex_a8_load_store_1
;;	  0-->   552 r383=r209-0x4                     :cortex_a8_default
;;	  1-->   553 [r213+0x3c]=r383                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 550
;;   new tail = 553

;;   ======================================================
;;   -- basic block 68 from 676 to 562 -- before reload
;;   ======================================================

;;	  0-->   676 r136=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   677 r136=r136&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->   559 r137=[r136]                       :cortex_a8_load_store_1
;;	  5-->   561 cc=cmp(zxt(r137,0x1,0x14),0x0)    :cortex_a8_default
;;	  7-->   562 pc={(cc==0x0)?L616:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 676
;;   new tail = 562

;;   ======================================================
;;   -- basic block 69 from 567 to 666 -- before reload
;;   ======================================================

;;	  0-->   568 r1=r136                           :cortex_a8_default
;;	  0-->   567 r0=0x14                           :cortex_a8_default
;;	  1-->   569 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  1-->   573 r391=[r136+0xc]                   :cortex_a8_load_store_1
;;	  2-->   577 r2=0x0                            :cortex_a8_default
;;	  2-->   575 r0=0x2                            :cortex_a8_default
;;	  3-->   576 r1=r391+0x3c0                     :cortex_a8_default
;;	  4-->   578 r0=call [`sigprocmask']           :cortex_a8_issue_branch
;;	  4-->   666 pc=L616                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 567
;;   new tail = 666

;;   ======================================================
;;   -- basic block 70 from 674 to 668 -- before reload
;;   ======================================================

;;	  0-->   674 r392=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   675 r392=r392&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->   589 r394=[r392+0xc]                   :cortex_a8_load_store_1
;;	  6-->   594 r399=[r394+0x3d8]                 :cortex_a8_load_store_1
;;	  7-->   593 r398=[r394+0x3dc]                 :cortex_a8_load_store_1
;;	  9-->   595 r158=r398+r399                    :cortex_a8_default
;;	  9-->   668 pc=L200                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 9
;;   new head = 674
;;   new tail = 668

;;   ======================================================
;;   -- basic block 71 from 672 to 670 -- before reload
;;   ======================================================

;;	  0-->   672 r400=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   673 r400=r400&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->   604 r402=[r400+0xc]                   :cortex_a8_load_store_1
;;	  6-->   609 r407=[r402+0x3d8]                 :cortex_a8_load_store_1
;;	  7-->   608 r406=[r402+0x3dc]                 :cortex_a8_load_store_1
;;	  9-->   610 r177=r406+r407                    :cortex_a8_default
;;	  9-->   670 pc=L362                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 9
;;   new head = 672
;;   new tail = 670


;; Procedure interblock/speculative motions == 0/0 




do_signal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,26u} r1={29d,13u} r2={24d,7u} r3={20d,3u} r11={1d,72u} r12={17d} r13={1d,102u} r14={17d,1u} r15={16d} r16={16d} r17={16d} r18={16d} r19={16d} r20={16d} r21={16d} r22={16d} r23={16d} r24={68d,45u} r25={1d,87u} r26={1d,71u} r27={16d} r28={16d} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={16d} r38={16d} r39={16d} r40={16d} r41={16d} r42={16d} r43={16d} r44={16d} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} r81={16d} r82={16d} r83={16d} r84={16d} r85={16d} r86={16d} r87={16d} r88={16d} r89={16d} r90={16d} r91={16d} r92={16d} r93={16d} r94={16d} r95={16d} r96={16d} r97={16d} r98={16d} r99={16d} r100={16d} r101={16d} r102={16d} r103={16d} r104={16d} r105={16d} r106={16d} r107={16d} r108={16d} r109={16d} r110={16d} r111={16d} r112={16d} r113={16d} r114={16d} r115={16d} r116={16d} r117={16d} r118={16d} r119={16d} r120={16d} r121={16d} r122={16d} r123={16d} r124={16d} r125={16d} r126={16d} r127={16d} r133={2d,2u} r136={2d,4u} r137={1d,1u} r140={2d,3u} r141={1d,1u} r143={1d,2u} r144={1d,2u} r146={1d,2u} r147={1d,9u} r148={5d,1u} r156={3d,1u} r158={2d,3u} r159={2d,11u} r160={2d,2u} r161={1d} r169={3d,3u} r172={1d,2u} r174={1d,2u} r177={2d,3u} r178={1d,6u} r179={2d,3u} r180={1d} r188={2d,3u} r191={3d,1u} r192={1d,2u} r193={1d,2u} r194={1d,2u} r195={1d,3u} r196={1d,1u} r197={1d,2u} r200={2d,3u} r201={1d,1u} r204={1d,2u} r205={1d,1u} r206={2d,2u} r207={1d,5u} r208={2d,2u} r209={2d,5u} r210={2d,5u,2d} r211={1d,1u} r212={1d,2u} r213={1d,29u,2d} r214={1d,5u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={2d,2u} r223={1d,1u} r224={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r231={1d,1u} r240={2d,3u} r246={2d,2u} r248={1d,2u} r249={1d,2u} r253={1d,2u} r257={1d,1u} r263={1d,1u} r264={2d,3u} r266={1d,1u} r268={1d,3u} r269={1d,1u} r271={1d,1u} r275={1d,3u} r276={1d,1u} r280={1d,2u} r284={1d,2u} r288={1d,1u} r296={2d,2u} r298={1d,1u} r299={1d,1u} r302={1d,2u} r307={2d,2u} r309={1d,2u} r310={1d,2u} r314={1d,2u} r318={1d,1u} r324={1d,1u} r325={2d,2u} r327={1d,1u} r328={1d,1u} r335={1d,1u} r337={1d,1u} r339={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,2u} r347={1d,1u} r348={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r360={1d,1u} r361={1d,2u} r363={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r369={1d,1u} r370={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,2u} r378={1d,1u} r380={1d,1u} r383={1d,1u} r391={1d,1u} r392={2d,2u} r394={1d,2u} r398={1d,1u} r399={1d,1u} r400={2d,2u} r402={1d,2u} r406={1d,1u} r407={1d,1u} r408={1d,2u} r409={1d,2u} r410={1d,2u} 
;;    total ref usage 2819{2130d,685u,4e} in 330{314 regular + 16 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 212 213 214
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 212 213 214
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 2 2 NOTE_INSN_DELETED)

(insn 2 8 3 2 arch/arm/kernel/signal.c:661 (set (reg/v/f:SI 213 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 3 2 7 2 arch/arm/kernel/signal.c:661 (set (reg/v:SI 214 [ syscall ])
        (reg:SI 1 r1 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ syscall ])
        (nil)))

(insn 7 3 9 2 arch/arm/kernel/signal.c:673 (set (reg:SI 212 [ D.25035 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 7 10 2 arch/arm/kernel/signal.c:673 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 212 [ D.25035 ])
                (const_int 4 [0x4])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/signal.c:673 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 72 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 212 213 214


;; Succ edge  72 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/kernel/signal.c:679 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 214 [ syscall ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/signal.c:679 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 214
;; live  gen 	 208 209 210
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 arch/arm/kernel/signal.c:662 (set (reg/v:SI 208 [ restart_addr ])
        (reg/v:SI 214 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 16 15 17 4 arch/arm/kernel/signal.c:662 (set (reg/v:SI 209 [ continue_addr ])
        (reg/v:SI 214 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 17 16 638 4 arch/arm/kernel/signal.c:662 (set (reg/v:SI 210 [ retval ])
        (reg/v:SI 214 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 638 17 639 4 (set (pc)
        (label_ref 60)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214


;; Succ edge  10 [100.0%] 

(barrier 639 638 20)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213
;; lr  def 	 24 [cc] 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 212 213 214
;; live  gen 	 24 [cc] 208 209 210 211
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 20 639 21 5 23 "" [1 uses])

(note 21 20 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 23 21 36 5 NOTE_INSN_DELETED)

(insn 36 23 24 5 arch/arm/kernel/signal.c:682 (set (reg/v:SI 210 [ retval ])
        (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 36 635 5 arch/arm/kernel/signal.c:681 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 212 [ D.25035 ])
                (const_int 1 [0x1])
                (const_int 5 [0x5]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 212 [ D.25035 ])
        (nil)))

(insn 635 24 22 5 arch/arm/kernel/signal.c:681 discrim 2 (set (reg:SI 211 [ iftmp.331 ])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 22 635 37 5 arch/arm/kernel/signal.c:680 (set (reg/v:SI 209 [ continue_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 22 35 5 arch/arm/kernel/signal.c:688 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (const_int -516 [0xfffffffffffffdfc]))) 219 {*arm_cmpsi_insn} (nil))

(insn 35 37 38 5 arch/arm/kernel/signal.c:681 discrim 3 (set (reg/v:SI 208 [ restart_addr ])
        (minus:SI (reg/v:SI 209 [ continue_addr ])
            (reg:SI 211 [ iftmp.331 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 211 [ iftmp.331 ])
        (nil)))

(jump_insn 38 35 618 5 arch/arm/kernel/signal.c:688 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214


;; Succ edge  9 [29.0%] 
;; Succ edge  6 [71.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	
;; live  kill	

;; Pred edge  5 [71.0%]  (fallthru)
(note 618 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 40 618 619 6 arch/arm/kernel/signal.c:688 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214


;; Succ edge  10 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 217 218
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 619 40 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 619 42 7 arch/arm/kernel/signal.c:688 (set (reg:SI 218)
        (plus:SI (reg/v:SI 210 [ retval ])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (nil))

(insn 42 41 43 7 arch/arm/kernel/signal.c:688 (set (reg:SI 217)
        (plus:SI (reg:SI 218)
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 210 [ retval ])
                (const_int 514 [0x202]))
            (nil))))

(insn 43 42 44 7 arch/arm/kernel/signal.c:688 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 217)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(jump_insn 44 43 50 7 arch/arm/kernel/signal.c:688 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 10 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214


;; Succ edge  10 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 219
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 50 44 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 53 8 arch/arm/kernel/signal.c:692 (set (reg:SI 219 [ <variable>.uregs+68 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 68 [0x44])) [0 <variable>.uregs+68 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 53 51 52 8 arch/arm/kernel/signal.c:693 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 208 [ restart_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 52 53 640 8 arch/arm/kernel/signal.c:692 (set (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 219 [ <variable>.uregs+68 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 219 [ <variable>.uregs+68 ])
        (nil)))

(jump_insn 640 52 641 8 arch/arm/kernel/signal.c:694 (set (pc)
        (label_ref 60)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214


;; Succ edge  10 [100.0%] 

(barrier 641 640 56)

;; Start of basic block ( 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 220
;; live  kill	

;; Pred edge  5 [29.0%] 
(code_label 56 641 57 9 27 "" [1 uses])

(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 9 arch/arm/kernel/signal.c:696 (set (reg:SI 220)
        (const_int -4 [0xfffffffffffffffc])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 9 arch/arm/kernel/signal.c:696 (set (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_EQUAL (const_int -4 [0xfffffffffffffffc])
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 6 7 4 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 204 205 221 223 224
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214
;; live  gen 	 24 [cc] 204 205 221 223 224
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [50.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 60 59 61 10 24 "" [4 uses])

(note 61 60 63 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 63 61 68 10 NOTE_INSN_DELETED)

(note 68 63 696 10 NOTE_INSN_DELETED)

(insn 696 68 697 10 include/linux/thread_info.h:84 (set (reg:SI 221)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 697 696 65 10 include/linux/thread_info.h:84 (set (reg:SI 221)
        (and:SI (reg:SI 221)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 697 66 10 include/linux/thread_info.h:84 (set (reg/f:SI 223 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 221)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(insn 66 65 67 10 include/linux/thread_info.h:84 (set (reg/f:SI 205 [ D.25743 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 223 [ <variable>.task ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 223 [ <variable>.task ])
        (nil)))

(insn 67 66 69 10 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 204 [ D.25746 ])
        (mem/v:SI (reg/f:SI 205 [ D.25743 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 205 [ D.25743 ])
        (nil)))

(insn 69 67 70 10 include/linux/freezer.h:56 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 204 [ D.25746 ])
                        (const_int 524288 [0x80000]))
                    (const_int 0 [0x0])))
            (set (reg:SI 224)
                (and:SI (reg:SI 204 [ D.25746 ])
                    (const_int 524288 [0x80000])))
        ]) 69 {*andsi3_compare0} (expr_list:REG_DEAD (reg:SI 204 [ D.25746 ])
        (nil)))

(jump_insn 70 69 71 10 include/linux/freezer.h:56 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(call_insn 72 71 642 11 include/linux/freezer.h:57 (parallel [
            (call (mem:SI (symbol_ref:SI ("refrigerator") [flags 0x41] <function_decl 0x10f34f80 refrigerator>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 642 72 643 11 (set (pc)
        (label_ref 523)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 62)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214


;; Succ edge  62 [100.0%] 

(barrier 643 642 75)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213 224
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 209 210 213 214 224
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 207
;; live  kill	 14 [lr]

;; Pred edge  10 [71.0%] 
(code_label 75 643 76 12 29 "" [1 uses])

(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 77 76 78 12 NOTE_INSN_DELETED)

(note 78 77 84 12 NOTE_INSN_DELETED)

(note 84 78 82 12 NOTE_INSN_DELETED)

(insn 82 84 79 12 arch/arm/kernel/signal.c:708 (set (reg:SI 3 r3)
        (reg:SI 224)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 79 82 80 12 arch/arm/kernel/signal.c:708 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -160 [0xffffffffffffff60]))) 4 {*arm_addsi3} (nil))

(insn 80 79 81 12 arch/arm/kernel/signal.c:708 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 81 80 83 12 arch/arm/kernel/signal.c:708 (set (reg:SI 2 r2)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 83 81 85 12 arch/arm/kernel/signal.c:708 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_signal_to_deliver") [flags 0x41] <function_decl 0x10a8d580 get_signal_to_deliver>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 85 83 86 12 arch/arm/kernel/signal.c:709 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 207 [ signr ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 86 85 87 12 arch/arm/kernel/signal.c:709 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 523)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 12 -> ( 13 62)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 207 208 209 210 213 214
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213 214


;; Succ edge  13 [73.0%]  (fallthru)
;; Succ edge  62 [27.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 208 213
;; lr  def 	 24 [cc] 227
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 208 209 210 213
;; live  gen 	 24 [cc] 227
;; live  kill	

;; Pred edge  12 [73.0%]  (fallthru)
(note 87 86 88 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 13 arch/arm/kernel/signal.c:717 (set (reg:SI 227 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 13 arch/arm/kernel/signal.c:717 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 227 [ <variable>.uregs+60 ])
            (reg/v:SI 208 [ restart_addr ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 227 [ <variable>.uregs+60 ])
        (expr_list:REG_DEAD (reg/v:SI 208 [ restart_addr ])
            (nil))))

(jump_insn 90 89 91 13 arch/arm/kernel/signal.c:717 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 13 -> ( 14 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213


;; Succ edge  14 [28.0%]  (fallthru)
;; Succ edge  18 [72.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc] 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc] 228
;; live  kill	

;; Pred edge  13 [28.0%]  (fallthru)
(note 91 90 92 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 92 91 93 14 arch/arm/kernel/signal.c:718 (set (reg:SI 228)
        (const_int -514 [0xfffffffffffffdfe])) 167 {*arm_movsi_insn} (nil))

(insn 93 92 94 14 arch/arm/kernel/signal.c:718 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (reg:SI 228))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 210 [ retval ])
                (const_int -514 [0xfffffffffffffdfe]))
            (nil))))

(jump_insn 94 93 95 14 arch/arm/kernel/signal.c:718 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 14 -> ( 17 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213


;; Succ edge  17 [28.0%] 
;; Succ edge  15 [72.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [72.0%]  (fallthru)
(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 15 arch/arm/kernel/signal.c:718 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (const_int -512 [0xfffffffffffffe00]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 210 [ retval ])
        (nil)))

(jump_insn 97 96 98 15 arch/arm/kernel/signal.c:718 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 15 -> ( 16 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213


;; Succ edge  16 [28.0%]  (fallthru)
;; Succ edge  18 [72.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 24 [cc] 230
;; live  kill	

;; Pred edge  15 [28.0%]  (fallthru)
(note 98 97 100 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 100 98 99 16 NOTE_INSN_DELETED)

(insn 99 100 101 16 arch/arm/kernel/signal.c:720 (set (reg:SI 230 [ ka.sa.sa_flags ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 101 99 102 16 arch/arm/kernel/signal.c:720 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 230 [ ka.sa.sa_flags ])
                (const_int 1 [0x1])
                (const_int 28 [0x1c]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 230 [ ka.sa.sa_flags ])
        (nil)))

(jump_insn 102 101 103 16 arch/arm/kernel/signal.c:720 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 14 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 209 213
;; live  gen 	 231
;; live  kill	

;; Pred edge  14 [28.0%] 
;; Pred edge  16 [50.0%]  (fallthru)
(code_label 103 102 104 17 32 "" [1 uses])

(note 104 103 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 107 104 105 17 arch/arm/kernel/signal.c:722 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 209 [ continue_addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 209 [ continue_addr ])
        (nil)))

(insn 105 107 106 17 arch/arm/kernel/signal.c:721 (set (reg:SI 231)
        (const_int -4 [0xfffffffffffffffc])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 108 17 arch/arm/kernel/signal.c:721 (set (mem/s/j:SI (reg/v/f:SI 213 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 231)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_EQUAL (const_int -4 [0xfffffffffffffffc])
            (nil))))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 15 13 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 200 201 408
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213
;; live  gen 	 24 [cc] 200 201 408
;; live  kill	

;; Pred edge  15 [72.0%] 
;; Pred edge  13 [72.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [50.0%] 
(code_label 108 106 109 18 31 "" [3 uses])

(note 109 108 111 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 111 109 114 18 NOTE_INSN_DELETED)

(note 114 111 693 18 NOTE_INSN_DELETED)

(insn 693 114 694 18 include/linux/thread_info.h:84 (set (reg/f:SI 200 [ D.25774 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 694 693 113 18 include/linux/thread_info.h:84 (set (reg/f:SI 200 [ D.25774 ])
        (and:SI (reg/f:SI 200 [ D.25774 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 113 694 625 18 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 201 [ D.25769 ])
        (mem/v:SI (reg/f:SI 200 [ D.25774 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 625 113 115 18 (set (reg/f:SI 408 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 200 [ D.25774 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 200 [ D.25774 ])
        (nil)))

(insn 115 625 116 18 arch/arm/kernel/signal.c:726 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 201 [ D.25769 ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 201 [ D.25769 ])
        (nil)))

(jump_insn 116 115 117 18 arch/arm/kernel/signal.c:726 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 117 116 122 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 122 117 644 19 arch/arm/kernel/signal.c:727 (set (reg/v/f:SI 206 [ oldset ])
        (plus:SI (reg/f:SI 408 [ <variable>.task ])
            (const_int 960 [0x3c0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 408 [ <variable>.task ])
        (nil)))

(jump_insn 644 122 645 19 (set (pc)
        (label_ref 132)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213


;; Succ edge  21 [100.0%] 

(barrier 645 644 125)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 408
;; lr  def 	 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207 213 408
;; live  gen 	 206
;; live  kill	

;; Pred edge  18 [50.0%] 
(code_label 125 645 126 20 33 "" [1 uses])

(note 126 125 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 131 126 132 20 arch/arm/kernel/signal.c:729 (set (reg/v/f:SI 206 [ oldset ])
        (plus:SI (reg/f:SI 408 [ <variable>.task ])
            (const_int 944 [0x3b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 408 [ <variable>.task ])
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 24 [cc] 147 240
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206 207 213
;; live  gen 	 24 [cc] 147 240
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 132 131 133 21 34 "" [1 uses])

(note 133 132 136 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 136 133 691 21 NOTE_INSN_DELETED)

(insn 691 136 139 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 240)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 139 691 692 21 arch/arm/kernel/signal.c:616 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 207 [ signr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(insn 692 139 138 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 240)
        (and:SI (reg:SI 240)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 138 692 140 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 147 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 240)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 140 138 141 21 arch/arm/kernel/signal.c:616 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  25 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 240
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213 240
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 141 140 144 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 144 141 145 22 arch/arm/kernel/signal.c:616 discrim 1 (set (reg/f:SI 143 [ D.26019 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 240)
                (const_int 16 [0x10])) [0 <variable>.exec_domain+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 240)
        (nil)))

(insn 145 144 146 22 arch/arm/kernel/signal.c:616 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ D.26019 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 146 145 147 22 arch/arm/kernel/signal.c:616 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 22 -> ( 23 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213


;; Succ edge  23 [85.0%]  (fallthru)
;; Succ edge  25 [15.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 147 206 207 213
;; live  gen 	 24 [cc] 144
;; live  kill	

;; Pred edge  22 [85.0%]  (fallthru)
(note 147 146 148 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 23 arch/arm/kernel/signal.c:616 discrim 2 (set (reg/f:SI 144 [ D.26018 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 143 [ D.26019 ])
                (const_int 16 [0x10])) [0 <variable>.signal_invmap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ D.26019 ])
        (nil)))

(insn 149 148 150 23 arch/arm/kernel/signal.c:616 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 144 [ D.26018 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 150 149 151 23 arch/arm/kernel/signal.c:616 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213


;; Succ edge  24 [85.0%]  (fallthru)
;; Succ edge  25 [15.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 147 206 207 213
;; live  gen 	 133
;; live  kill	

;; Pred edge  23 [85.0%]  (fallthru)
(note 151 150 152 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 646 24 arch/arm/kernel/signal.c:617 (set (reg/v:SI 133 [ signr.423 ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 207 [ signr ])
                    (const_int 4 [0x4]))
                (reg/f:SI 144 [ D.26018 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ D.26018 ])
        (nil)))

(jump_insn 646 152 647 24 (set (pc)
        (label_ref 159)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213


;; Succ edge  26 [100.0%] 

(barrier 647 646 156)

;; Start of basic block ( 21 22 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u193(11){ }u194(13){ }u195(25){ }u196(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 207
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 206 207 213
;; live  gen 	 133
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [15.0%] 
;; Pred edge  23 [15.0%] 
(code_label 156 647 157 25 35 "" [3 uses])

(note 157 156 158 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 159 25 arch/arm/kernel/signal.c:617 (set (reg/v:SI 133 [ signr.423 ])
        (reg/v:SI 207 [ signr ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 146 409 410
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 24 [cc] 146 409 410
;; live  kill	

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 159 158 160 26 36 "" [1 uses])

(note 160 159 162 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 162 160 161 26 NOTE_INSN_DELETED)

(insn 161 162 628 26 arch/arm/kernel/signal.c:622 (set (reg:SI 146 [ D.26013 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 628 161 163 26 (set (reg:SI 409 [ sp ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 163 628 631 26 arch/arm/kernel/signal.c:622 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 146 [ D.26013 ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 631 163 164 26 (set (reg:SI 410)
        (and:SI (reg:SI 146 [ D.26013 ])
            (const_int 134217728 [0x8000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.26013 ])
        (nil)))

(jump_insn 164 631 165 26 arch/arm/kernel/signal.c:622 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 326)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  40 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 158
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 165 164 168 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 168 165 629 27 arch/arm/kernel/signal.c:448 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 410)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 410)
        (nil)))

(insn 629 168 169 27 arch/arm/kernel/signal.c:442 (set (reg/v:SI 158 [ sp ])
        (reg:SI 409 [ sp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 409 [ sp ])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                    (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
            (nil))))

(jump_insn 169 629 170 27 arch/arm/kernel/signal.c:448 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 246 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 246 248 249
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 170 169 172 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 172 170 689 28 NOTE_INSN_DELETED)

(insn 689 172 690 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 246)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 690 689 174 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 246)
        (and:SI (reg:SI 246)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 174 690 175 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 248 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 246)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 246)
        (nil)))

(insn 175 174 176 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 249 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 248 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 176 175 177 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 249 [ <variable>.sas_ss_size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 177 176 178 28 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 200)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u227(11){ }u228(13){ }u229(25){ }u230(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 248
;; lr  def 	 24 [cc] 253
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 248 249
;; live  gen 	 24 [cc] 253
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 178 177 183 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 183 178 184 29 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 253 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 248 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 248 [ <variable>.task ])
        (nil)))

(insn 184 183 185 29 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ sp ])
            (reg:SI 253 [ <variable>.sas_ss_sp ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 185 184 186 29 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 583)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 30 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  70 [50.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 249 253
;; lr  def 	 24 [cc] 257
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213 249 253
;; live  gen 	 24 [cc] 257
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 186 185 193 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 193 186 198 30 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 257)
        (minus:SI (reg/v:SI 158 [ sp ])
            (reg:SI 253 [ <variable>.sas_ss_sp ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 253 [ <variable>.sas_ss_sp ])
        (nil)))

(insn 198 193 199 30 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 257)
            (reg:SI 249 [ <variable>.sas_ss_size ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 257)
        (expr_list:REG_DEAD (reg:SI 249 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 199 198 200 30 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 583)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 31 70)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  70 [50.0%] 

;; Start of basic block ( 27 30 28 70) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 159 160 161 263 264 266
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  gen 	 24 [cc] 159 160 161 263 264 266
;; live  kill	 24 [cc]

;; Pred edge  27 [50.0%] 
;; Pred edge  30 [50.0%]  (fallthru)
;; Pred edge  28 [50.0%] 
;; Pred edge  70 [100.0%] 
(code_label 200 199 201 31 38 "" [3 uses])

(note 201 200 205 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 205 201 209 31 NOTE_INSN_DELETED)

(note 209 205 687 31 NOTE_INSN_DELETED)

(insn 687 209 202 31 arch/arm/kernel/signal.c:459 (set (reg:SI 264)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 202 687 688 31 arch/arm/kernel/signal.c:454 (set (reg:SI 263)
        (plus:SI (reg/v:SI 158 [ sp ])
            (const_int -880 [0xfffffffffffffc90]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 158 [ sp ])
        (nil)))

(insn 688 202 203 31 arch/arm/kernel/signal.c:459 (set (reg:SI 264)
        (and:SI (reg:SI 264)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 203 688 207 31 arch/arm/kernel/signal.c:454 (set (reg/v/f:SI 159 [ frame ])
        (and:SI (reg:SI 263)
            (const_int -8 [0xfffffffffffffff8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 263)
        (nil)))

(insn 207 203 698 31 arch/arm/kernel/signal.c:459 (set (reg:SI 266 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 264)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 698 207 208 31 arch/arm/kernel/signal.c:459 (set (reg/v:SI 160 [ flag ])
        (reg:SI 266 [ <variable>.addr_limit ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 266 [ <variable>.addr_limit ])
        (nil)))

(insn 208 698 637 31 arch/arm/kernel/signal.c:459 (parallel [
            (set (reg/v:SI 160 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 159 [ frame ])
                        (const_int 880 [0x370])
                        (reg/v:SI 160 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (set (reg/v:SI 161 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 159 [ frame ])
                        (const_int 880 [0x370])
                        (reg/v:SI 160 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg/v:SI 161 [ roksum ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 637 208 216 31 arch/arm/kernel/signal.c:460 (parallel [
            (set (reg/v/f:SI 159 [ frame ])
                (if_then_else:SI (eq (reg/v:SI 160 [ flag ])
                        (const_int 0 [0x0]))
                    (reg/v/f:SI 159 [ frame ])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg/v:SI 160 [ flag ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 216 637 217 31 arch/arm/kernel/signal.c:569 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 159 [ frame ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 217 216 218 31 arch/arm/kernel/signal.c:569 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 31 -> ( 48 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264


;; Succ edge  48 [30.2%] 
;; Succ edge  32 [69.8%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 264
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 169 174 268 269 271 275 276 280
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 206 207 213 264
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 169 174 268 269 271 275 276 280
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  31 [69.8%]  (fallthru)
(note 218 217 220 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 220 218 224 32 NOTE_INSN_DELETED)

(note 224 220 231 32 NOTE_INSN_DELETED)

(note 231 224 221 32 NOTE_INSN_DELETED)

(insn 221 231 222 32 arch/arm/kernel/signal.c:572 (set (reg:SI 0 r0)
        (reg/v/f:SI 159 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 222 221 223 32 arch/arm/kernel/signal.c:572 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -160 [0xffffffffffffff60]))) 4 {*arm_addsi3} (nil))

(call_insn 223 222 225 32 arch/arm/kernel/signal.c:572 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("copy_siginfo_to_user") [flags 0x41] <function_decl 0x512b7280 copy_siginfo_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 225 223 226 32 arch/arm/kernel/signal.c:574 discrim 4 (set (reg:SI 268)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 699 32 arch/arm/kernel/signal.c:574 discrim 4 (set (reg/f:SI 269)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 699 226 227 32 arch/arm/kernel/signal.c:574 discrim 4 (set (reg/v:SI 169 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 227 699 229 32 arch/arm/kernel/signal.c:574 discrim 4 (parallel [
            (set (reg/v:SI 169 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 268)
                        (reg/f:SI 269)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 169 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690844))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 269)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 229 227 230 32 arch/arm/kernel/signal.c:575 discrim 4 (set (reg/f:SI 271)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 132 [0x84]))) 4 {*arm_addsi3} (nil))

(insn 230 229 233 32 arch/arm/kernel/signal.c:575 discrim 4 (parallel [
            (set (reg/v:SI 169 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 268)
                        (reg/f:SI 271)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 169 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8690849))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 271)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 233 230 232 32 arch/arm/kernel/signal.c:577 discrim 1 (set (reg:SI 1 r1)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 232 233 234 32 arch/arm/kernel/signal.c:577 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(call_insn 234 232 238 32 arch/arm/kernel/signal.c:577 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x5118a980 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 238 234 241 32 arch/arm/kernel/signal.c:578 (set (reg/f:SI 275 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 264)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 264)
        (nil)))

(insn 241 238 239 32 arch/arm/kernel/signal.c:579 (set (reg:SI 174 [ D.25921 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 239 241 240 32 arch/arm/kernel/signal.c:578 (set (reg:SI 276 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 275 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 240 239 246 32 arch/arm/kernel/signal.c:578 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 stack.ss_sp+0 S4 A32])
        (reg:SI 276 [ <variable>.sas_ss_sp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 276 [ <variable>.sas_ss_sp ])
        (nil)))

(insn 246 240 247 32 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 280 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 275 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 32 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 280 [ <variable>.sas_ss_size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 248 247 249 32 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32 -> ( 34 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280


;; Succ edge  34 [50.0%] 
;; Succ edge  33 [50.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u295(11){ }u296(13){ }u297(25){ }u298(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213
;; live  gen 	 156
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 249 248 250 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 250 249 648 33 include/linux/sched.h:2213 discrim 1 (set (reg:SI 156 [ D.25977 ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 648 250 649 33 (set (pc)
        (label_ref 282)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213


;; Succ edge  37 [100.0%] 

(barrier 649 648 253)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u299(11){ }u300(13){ }u301(25){ }u302(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 275
;; lr  def 	 24 [cc] 284
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 275 280
;; live  gen 	 24 [cc] 284
;; live  kill	

;; Pred edge  32 [50.0%] 
(code_label 253 649 254 34 42 "" [1 uses])

(note 254 253 259 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 259 254 260 34 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 284 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 275 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 275 [ <variable>.task ])
        (nil)))

(insn 260 259 261 34 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174 [ D.25921 ])
            (reg:SI 284 [ <variable>.sas_ss_sp ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 261 260 262 34 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 36 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 268 280 284


;; Succ edge  36 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u307(11){ }u308(13){ }u309(25){ }u310(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 268
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 206 207 213 268
;; live  gen 	 156
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 262 261 263 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 650 35 include/linux/sched.h:2206 discrim 2 (set (reg:SI 156 [ D.25977 ])
        (reg:SI 268)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 268)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 650 263 651 35 (set (pc)
        (label_ref 282)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213


;; Succ edge  37 [100.0%] 

(barrier 651 650 266)

;; Start of basic block ( 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u312(11){ }u313(13){ }u314(25){ }u315(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174 280 284
;; lr  def 	 24 [cc] 156 288
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 169 174 206 207 213 280 284
;; live  gen 	 156 288
;; live  kill	 24 [cc]

;; Pred edge  34 [50.0%] 
(code_label 266 651 267 36 44 "" [1 uses])

(note 267 266 279 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 279 267 274 36 NOTE_INSN_DELETED)

(insn 274 279 280 36 include/linux/sched.h:2206 discrim 3 (set (reg:SI 288)
        (minus:SI (reg:SI 174 [ D.25921 ])
            (reg:SI 284 [ <variable>.sas_ss_sp ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 284 [ <variable>.sas_ss_sp ])
        (expr_list:REG_DEAD (reg:SI 174 [ D.25921 ])
            (nil))))

(insn 280 274 282 36 include/linux/sched.h:2206 discrim 3 (parallel [
            (set (reg:SI 156 [ D.25977 ])
                (leu:SI (reg:SI 288)
                    (reg:SI 280 [ <variable>.sas_ss_size ])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 288)
        (expr_list:REG_DEAD (reg:SI 280 [ <variable>.sas_ss_size ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 36 33 35) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 159 169 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 172 296 298 299 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 156 159 169 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 172 296 298 299 302
;; live  kill	 14 [lr]

;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
;; Pred edge  35 [100.0%] 
(code_label 282 280 283 37 43 "" [2 uses])

(note 283 282 286 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(note 286 283 291 37 NOTE_INSN_DELETED)

(note 291 286 292 37 NOTE_INSN_DELETED)

(note 292 291 297 37 NOTE_INSN_DELETED)

(note 297 292 304 37 NOTE_INSN_DELETED)

(note 304 297 305 37 NOTE_INSN_DELETED)

(note 305 304 685 37 NOTE_INSN_DELETED)

(insn 685 305 284 37 arch/arm/kernel/signal.c:580 (set (reg:SI 296)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 284 685 686 37 arch/arm/kernel/signal.c:579 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 stack.ss_flags+0 S4 A32])
        (reg:SI 156 [ D.25977 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 156 [ D.25977 ])
        (nil)))

(insn 686 284 294 37 arch/arm/kernel/signal.c:580 (set (reg:SI 296)
        (and:SI (reg:SI 296)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 294 686 295 37 arch/arm/kernel/signal.c:581 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 295 294 293 37 arch/arm/kernel/signal.c:581 (set (reg:SI 2 r2)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 293 295 288 37 arch/arm/kernel/signal.c:581 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 136 [0x88]))) 4 {*arm_addsi3} (nil))

(insn 288 293 299 37 arch/arm/kernel/signal.c:580 (set (reg/f:SI 298 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 296)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 296)
        (nil)))

(insn 299 288 289 37 arch/arm/kernel/signal.c:583 (set (reg/f:SI 302)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn 289 299 290 37 arch/arm/kernel/signal.c:580 (set (reg:SI 299 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 298 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 298 [ <variable>.task ])
        (nil)))

(insn 290 289 296 37 arch/arm/kernel/signal.c:580 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 stack.ss_size+0 S4 A32])
        (reg:SI 299 [ <variable>.sas_ss_size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 299 [ <variable>.sas_ss_size ])
        (nil)))

(call_insn 296 290 302 37 arch/arm/kernel/signal.c:581 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x10f3df00 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 302 296 301 37 arch/arm/kernel/signal.c:583 (set (reg:SI 2 r2)
        (reg/v/f:SI 206 [ oldset ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 206 [ oldset ])
        (nil)))

(insn 301 302 298 37 arch/arm/kernel/signal.c:583 (set (reg:SI 1 r1)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 298 301 300 37 arch/arm/kernel/signal.c:581 (set (reg:SI 172 [ D.25926 ])
        (ior:SI (reg:SI 0 r0)
            (reg/v:SI 169 [ err ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 169 [ err ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 300 298 303 37 arch/arm/kernel/signal.c:583 (set (reg:SI 0 r0)
        (reg/f:SI 302)) 167 {*arm_movsi_insn} (nil))

(call_insn 303 300 306 37 arch/arm/kernel/signal.c:583 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_sigframe") [flags 0x3] <function_decl 0x1140a680 setup_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 306 303 307 37 arch/arm/kernel/signal.c:584 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 172 [ D.25926 ])
                        (reg:SI 0 r0))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 148 [ ret ])
                (ior:SI (reg:SI 172 [ D.25926 ])
                    (reg:SI 0 r0)))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg:SI 172 [ D.25926 ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(jump_insn 307 306 308 37 arch/arm/kernel/signal.c:584 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 407)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 37 -> ( 38 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 159 207 213 302


;; Succ edge  38 [29.0%]  (fallthru)
;; Succ edge  49 [71.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u359(11){ }u360(13){ }u361(25){ }u362(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 159 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 159 207 213 302
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 148
;; live  kill	 14 [lr]

;; Pred edge  37 [29.0%]  (fallthru)
(note 308 307 309 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note 309 308 310 38 NOTE_INSN_DELETED)

(note 310 309 317 38 NOTE_INSN_DELETED)

(note 317 310 312 38 NOTE_INSN_DELETED)

(insn 312 317 313 38 arch/arm/kernel/signal.c:585 (set (reg:SI 0 r0)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 313 312 314 38 arch/arm/kernel/signal.c:585 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 314 313 315 38 arch/arm/kernel/signal.c:585 (set (reg:SI 2 r2)
        (plus:SI (reg/v/f:SI 159 [ frame ])
            (const_int 872 [0x368]))) 4 {*arm_addsi3} (nil))

(insn 315 314 311 38 arch/arm/kernel/signal.c:585 (set (reg:SI 3 r3)
        (reg/v/f:SI 159 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 311 315 316 38 arch/arm/kernel/signal.c:585 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 133 [ signr.423 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ signr.423 ])
        (nil)))

(call_insn 316 311 318 38 arch/arm/kernel/signal.c:585 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_return") [flags 0x3] <function_decl 0x1140a880 setup_return>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 318 316 319 38 arch/arm/kernel/signal.c:587 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 148 [ ret ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 319 318 320 38 arch/arm/kernel/signal.c:587 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 407)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 38 -> ( 39 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302


;; Succ edge  39 [100.0%]  (fallthru)
;; Succ edge  49

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u380(11){ }u381(13){ }u382(25){ }u383(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 159 213 302
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 159 207 213 302
;; live  gen 	
;; live  kill	

;; Pred edge  38 [100.0%]  (fallthru)
(note 320 319 321 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 321 320 323 39 arch/arm/kernel/signal.c:593 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])
        (reg/v/f:SI 159 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 159 [ frame ])
        (nil)))

(insn 323 321 652 39 arch/arm/kernel/signal.c:594 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])
        (reg/f:SI 302)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 302)
        (nil)))

(jump_insn 652 323 653 39 (set (pc)
        (label_ref 407)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213


;; Succ edge  49 [100.0%] 

(barrier 653 652 326)

;; Start of basic block ( 26) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 409 410
;; lr  def 	 24 [cc] 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213 409 410
;; live  gen 	 24 [cc] 177
;; live  kill	

;; Pred edge  26 [50.0%] 
(code_label 326 653 327 40 37 "" [1 uses])

(note 327 326 330 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 330 327 627 40 arch/arm/kernel/signal.c:448 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 410)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 410)
        (nil)))

(insn 627 330 331 40 arch/arm/kernel/signal.c:442 (set (reg/v:SI 177 [ sp ])
        (reg:SI 409 [ sp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 409 [ sp ])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                    (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
            (nil))))

(jump_insn 331 627 332 40 arch/arm/kernel/signal.c:448 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 362)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 40 -> ( 41 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213


;; Succ edge  41 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u396(11){ }u397(13){ }u398(25){ }u399(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 307 309 310
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 307 309 310
;; live  kill	

;; Pred edge  40 [50.0%]  (fallthru)
(note 332 331 334 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note 334 332 683 41 NOTE_INSN_DELETED)

(insn 683 334 684 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 307)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 684 683 336 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 307)
        (and:SI (reg:SI 307)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 336 684 337 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 309 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 307)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 307)
        (nil)))

(insn 337 336 338 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 310 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 309 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 338 337 339 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 310 [ <variable>.sas_ss_size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 339 338 340 41 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 362)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 41 -> ( 42 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310


;; Succ edge  42 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u407(11){ }u408(13){ }u409(25){ }u410(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 309
;; lr  def 	 24 [cc] 314
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 309 310
;; live  gen 	 24 [cc] 314
;; live  kill	

;; Pred edge  41 [50.0%]  (fallthru)
(note 340 339 345 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 345 340 346 42 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 314 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 309 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 309 [ <variable>.task ])
        (nil)))

(insn 346 345 347 42 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 177 [ sp ])
            (reg:SI 314 [ <variable>.sas_ss_sp ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 347 346 348 42 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 598)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 43 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314


;; Succ edge  43 [50.0%]  (fallthru)
;; Succ edge  71 [50.0%] 

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u415(11){ }u416(13){ }u417(25){ }u418(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 310 314
;; lr  def 	 24 [cc] 318
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213 310 314
;; live  gen 	 24 [cc] 318
;; live  kill	

;; Pred edge  42 [50.0%]  (fallthru)
(note 348 347 355 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 355 348 360 43 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 318)
        (minus:SI (reg/v:SI 177 [ sp ])
            (reg:SI 314 [ <variable>.sas_ss_sp ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 314 [ <variable>.sas_ss_sp ])
        (nil)))

(insn 360 355 361 43 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 318)
            (reg:SI 310 [ <variable>.sas_ss_size ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 318)
        (expr_list:REG_DEAD (reg:SI 310 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 361 360 362 43 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 598)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 43 -> ( 44 71)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213


;; Succ edge  44 [50.0%]  (fallthru)
;; Succ edge  71 [50.0%] 

;; Start of basic block ( 40 43 41 71) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u424(11){ }u425(13){ }u426(25){ }u427(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177
;; lr  def 	 24 [cc] 178 179 180 324 325 327
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  gen 	 24 [cc] 178 179 180 324 325 327
;; live  kill	 24 [cc]

;; Pred edge  40 [50.0%] 
;; Pred edge  43 [50.0%]  (fallthru)
;; Pred edge  41 [50.0%] 
;; Pred edge  71 [100.0%] 
(code_label 362 361 363 44 46 "" [3 uses])

(note 363 362 367 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(note 367 363 681 44 NOTE_INSN_DELETED)

(insn 681 367 364 44 arch/arm/kernel/signal.c:459 (set (reg:SI 325)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 364 681 682 44 arch/arm/kernel/signal.c:454 (set (reg:SI 324)
        (plus:SI (reg/v:SI 177 [ sp ])
            (const_int -752 [0xfffffffffffffd10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 177 [ sp ])
        (nil)))

(insn 682 364 365 44 arch/arm/kernel/signal.c:459 (set (reg:SI 325)
        (and:SI (reg:SI 325)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 365 682 369 44 arch/arm/kernel/signal.c:454 (set (reg/v/f:SI 178 [ frame ])
        (and:SI (reg:SI 324)
            (const_int -8 [0xfffffffffffffff8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 324)
        (nil)))

(insn 369 365 700 44 arch/arm/kernel/signal.c:459 (set (reg:SI 327 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 325)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 325)
        (nil)))

(insn 700 369 370 44 arch/arm/kernel/signal.c:459 (set (reg/v:SI 179 [ flag ])
        (reg:SI 327 [ <variable>.addr_limit ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 327 [ <variable>.addr_limit ])
        (nil)))

(insn 370 700 371 44 arch/arm/kernel/signal.c:459 (parallel [
            (set (reg/v:SI 179 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 178 [ frame ])
                        (const_int 752 [0x2f0])
                        (reg/v:SI 179 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (set (reg/v:SI 180 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 178 [ frame ])
                        (const_int 752 [0x2f0])
                        (reg/v:SI 179 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8647573))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg/v:SI 180 [ roksum ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 371 370 372 44 arch/arm/kernel/signal.c:459 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 179 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 372 371 375 44 arch/arm/kernel/signal.c:459 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 44 -> ( 48 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213


;; Succ edge  48 [50.0%] 
;; Succ edge  45 [50.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u438(11){ }u439(13){ }u440(25){ }u441(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  44 [50.0%]  (fallthru)
(code_label 375 372 376 45 48 "" [0 uses])

(note 376 375 378 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 378 376 379 45 arch/arm/kernel/signal.c:546 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 178 [ frame ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 379 378 380 45 arch/arm/kernel/signal.c:546 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 45 -> ( 48 46)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213


;; Succ edge  48 [30.2%] 
;; Succ edge  46 [69.8%]  (fallthru)

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u444(11){ }u445(13){ }u446(25){ }u447(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 178 179 206 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 188 328
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 179 206 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 148 188 328
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  45 [69.8%]  (fallthru)
(note 380 379 388 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note 388 380 389 46 NOTE_INSN_DELETED)

(note 389 388 701 46 NOTE_INSN_DELETED)

(insn 701 389 381 46 arch/arm/kernel/signal.c:552 discrim 4 (set (reg/v:SI 188 [ err ])
        (reg/v:SI 179 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 179 [ flag ])
        (nil)))

(insn 381 701 383 46 arch/arm/kernel/signal.c:552 discrim 4 (set (reg:SI 328)
        (const_int 1522778970 [0x5ac3c35a])) 167 {*arm_movsi_insn} (nil))

(insn 383 381 386 46 arch/arm/kernel/signal.c:552 discrim 4 (parallel [
            (set (reg/v:SI 188 [ err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 328)
                        (reg/v/f:SI 178 [ frame ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 188 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691018))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 328)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 386 383 384 46 arch/arm/kernel/signal.c:554 (set (reg:SI 2 r2)
        (reg/v/f:SI 206 [ oldset ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 206 [ oldset ])
        (nil)))

(insn 384 386 385 46 arch/arm/kernel/signal.c:554 (set (reg:SI 0 r0)
        (reg/v/f:SI 178 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 385 384 387 46 arch/arm/kernel/signal.c:554 (set (reg:SI 1 r1)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 387 385 390 46 arch/arm/kernel/signal.c:554 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_sigframe") [flags 0x3] <function_decl 0x1140a680 setup_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 390 387 391 46 arch/arm/kernel/signal.c:555 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0)
                        (reg/v:SI 188 [ err ]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 148 [ ret ])
                (ior:SI (reg:SI 0 r0)
                    (reg/v:SI 188 [ err ])))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg/v:SI 188 [ err ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(jump_insn 391 390 392 46 arch/arm/kernel/signal.c:555 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 407)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 46 -> ( 47 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 178 207 213


;; Succ edge  47 [29.0%]  (fallthru)
;; Succ edge  49 [71.0%] 

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u463(11){ }u464(13){ }u465(25){ }u466(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 178 213
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 178 207 213
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 148
;; live  kill	 14 [lr]

;; Pred edge  46 [29.0%]  (fallthru)
(note 392 391 393 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note 393 392 394 47 NOTE_INSN_DELETED)

(note 394 393 399 47 NOTE_INSN_DELETED)

(insn 399 394 396 47 arch/arm/kernel/signal.c:556 (set (reg:SI 3 r3)
        (reg/v/f:SI 178 [ frame ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 178 [ frame ])
        (nil)))

(insn 396 399 397 47 arch/arm/kernel/signal.c:556 (set (reg:SI 0 r0)
        (reg/v/f:SI 213 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 397 396 398 47 arch/arm/kernel/signal.c:556 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))) 4 {*arm_addsi3} (nil))

(insn 398 397 395 47 arch/arm/kernel/signal.c:556 (set (reg:SI 2 r2)
        (plus:SI (reg/v/f:SI 178 [ frame ])
            (const_int 744 [0x2e8]))) 4 {*arm_addsi3} (nil))

(insn 395 398 400 47 arch/arm/kernel/signal.c:556 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 133 [ signr.423 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ signr.423 ])
        (nil)))

(call_insn 400 395 401 47 arch/arm/kernel/signal.c:556 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("setup_return") [flags 0x3] <function_decl 0x1140a880 setup_return>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 401 400 654 47 arch/arm/kernel/signal.c:556 (set (reg/v:SI 148 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 654 401 655 47 (set (pc)
        (label_ref 407)) 242 {*arm_jump} (nil))
;; End of basic block 47 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213


;; Succ edge  49 [100.0%] 

(barrier 655 654 404)

;; Start of basic block ( 31 45 44) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u482(11){ }u483(13){ }u484(25){ }u485(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207 213
;; live  gen 	 148
;; live  kill	

;; Pred edge  31 [30.2%] 
;; Pred edge  45 [30.2%] 
;; Pred edge  44 [50.0%] 
(code_label 404 655 405 48 41 "" [3 uses])

(note 405 404 406 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 406 405 407 48 arch/arm/kernel/signal.c:547 (set (reg/v:SI 148 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 48 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 48 37 38 39 46 47) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u486(11){ }u487(13){ }u488(25){ }u489(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 194 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207 213
;; live  gen 	 24 [cc] 194 195
;; live  kill	

;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  37 [71.0%] 
;; Pred edge  38
;; Pred edge  39 [100.0%] 
;; Pred edge  46 [71.0%] 
;; Pred edge  47 [100.0%] 
(code_label 407 406 408 49 45 "" [5 uses])

(note 408 407 412 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(note 412 408 409 49 NOTE_INSN_DELETED)

(insn 409 412 413 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 195 [ D.25861 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 413 409 410 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 195 [ D.25861 ])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 410 413 411 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 194 [ D.25862 ])
        (and:SI (reg:SI 195 [ D.25861 ])
            (const_int -321 [0xfffffffffffffebf]))) 67 {*arm_andsi3_insn} (nil))

(insn 411 410 414 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 194 [ D.25862 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 414 411 415 49 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 434)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 49 -> ( 50 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213


;; Succ edge  50 [50.0%]  (fallthru)
;; Succ edge  52 [50.0%] 

;; Start of basic block ( 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u497(11){ }u498(13){ }u499(25){ }u500(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 195
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 195 207 213
;; live  gen 	 24 [cc] 192
;; live  kill	

;; Pred edge  49 [50.0%]  (fallthru)
(note 415 414 416 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 416 415 417 50 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 192 [ mode ])
        (and:SI (reg:SI 195 [ D.25861 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 195 [ D.25861 ])
        (nil)))

(insn 417 416 418 50 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 192 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 418 417 419 50 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 454)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 50 -> ( 55 51)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213


;; Succ edge  55 [28.0%] 
;; Succ edge  51 [72.0%]  (fallthru)

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u504(11){ }u505(13){ }u506(25){ }u507(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 192
;; lr  def 	 24 [cc] 335 337 339 343
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 192 194 207 213
;; live  gen 	 24 [cc] 335 337 339 343
;; live  kill	 24 [cc]

;; Pred edge  50 [72.0%]  (fallthru)
(note 419 418 420 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(note 420 419 421 51 NOTE_INSN_DELETED)

(note 421 420 425 51 NOTE_INSN_DELETED)

(note 425 421 429 51 NOTE_INSN_DELETED)

(note 429 425 430 51 NOTE_INSN_DELETED)

(note 430 429 423 51 NOTE_INSN_DELETED)

(insn 423 430 424 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 335)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 424 423 427 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 337 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 335) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 335)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 427 424 431 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 339)
        (zero_extract:SI (reg:SI 337 [ elf_hwcap ])
            (const_int 1 [0x1])
            (const_int 3 [0x3]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 337 [ elf_hwcap ])
        (nil)))

(insn 431 427 432 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (parallel [
            (set (reg:SI 343)
                (and:SI (eq:SI (reg/v:SI 192 [ mode ])
                        (const_int 0 [0x0]))
                    (reg:SI 339)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 339)
        (expr_list:REG_DEAD (reg/v:SI 192 [ mode ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 432 431 433 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 343)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 343)
        (nil)))

(jump_insn 433 432 434 51 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 454)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 51 -> ( 55 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213


;; Succ edge  55 [50.0%] 
;; Succ edge  52 [50.0%]  (fallthru)

;; Start of basic block ( 49 51) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u519(11){ }u520(13){ }u521(25){ }u522(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 194 213
;; lr  def 	 24 [cc] 193 344 345 346
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 194 207 213
;; live  gen 	 24 [cc] 193 344 345 346
;; live  kill	

;; Pred edge  49 [50.0%] 
;; Pred edge  51 [50.0%]  (fallthru)
(code_label 434 433 435 52 49 "" [1 uses])

(note 435 434 440 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note 440 435 438 52 NOTE_INSN_DELETED)

(insn 438 440 436 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg/f:SI 344)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 436 438 437 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (reg:SI 193 [ D.25869 ])
        (and:SI (reg:SI 194 [ D.25862 ])
            (const_int -208 [0xffffffffffffff30]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 194 [ D.25862 ])
        (nil)))

(insn 437 436 439 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 193 [ D.25869 ])) 167 {*arm_movsi_insn} (nil))

(insn 439 437 441 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:SI 346 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 344) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 344)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 441 439 442 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 346 [ elf_hwcap ])
                        (const_int 8 [0x8]))
                    (const_int 0 [0x0])))
            (set (reg:SI 345)
                (and:SI (reg:SI 346 [ elf_hwcap ])
                    (const_int 8 [0x8])))
        ]) 69 {*andsi3_compare0} (expr_list:REG_DEAD (reg:SI 346 [ elf_hwcap ])
        (nil)))

(jump_insn 442 441 443 52 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 447)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 52 -> ( 54 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345


;; Succ edge  54 [50.0%] 
;; Succ edge  53 [50.0%]  (fallthru)

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u530(11){ }u531(13){ }u532(25){ }u533(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	

;; Pred edge  52 [50.0%]  (fallthru)
(note 443 442 444 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 444 443 656 53 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 191 [ D.25871 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 656 444 657 53 (set (pc)
        (label_ref 457)) 242 {*arm_jump} (nil))
;; End of basic block 53 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207


;; Succ edge  56 [100.0%] 

(barrier 657 656 447)

;; Start of basic block ( 52) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u534(11){ }u535(13){ }u536(25){ }u537(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 193 213 345
;; lr  def 	 191 347
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 193 207 213 345
;; live  gen 	 191 347
;; live  kill	

;; Pred edge  52 [50.0%] 
(code_label 447 657 448 54 51 "" [1 uses])

(note 448 447 449 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 449 448 450 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (reg:SI 347)
        (ior:SI (reg:SI 193 [ D.25869 ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 193 [ D.25869 ])
        (nil)))

(insn 450 449 451 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 347)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 347)
        (expr_list:REG_DEAD (reg/v/f:SI 213 [ regs ])
            (nil))))

(insn 451 450 658 54 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 191 [ D.25871 ])
        (reg:SI 345)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 345)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 658 451 659 54 (set (pc)
        (label_ref 457)) 242 {*arm_jump} (nil))
;; End of basic block 54 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207


;; Succ edge  56 [100.0%] 

(barrier 659 658 454)

;; Start of basic block ( 50 51) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u542(11){ }u543(13){ }u544(25){ }u545(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 207
;; live  gen 	 191
;; live  kill	

;; Pred edge  50 [28.0%] 
;; Pred edge  51 [50.0%] 
(code_label 454 659 455 55 50 "" [2 uses])

(note 455 454 456 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 456 455 457 55 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:177 (set (reg:SI 191 [ D.25871 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 55 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207


;; Succ edge  56 [100.0%]  (fallthru)

;; Start of basic block ( 55 53 54) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u546(11){ }u547(13){ }u548(25){ }u549(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 191
;; lr  def 	 24 [cc] 348
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 191 207
;; live  gen 	 24 [cc] 348
;; live  kill	

;; Pred edge  55 [100.0%]  (fallthru)
;; Pred edge  53 [100.0%] 
;; Pred edge  54 [100.0%] 
(code_label 457 456 458 56 52 "" [2 uses])

(note 458 457 460 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(note 460 458 459 56 NOTE_INSN_DELETED)

(insn 459 460 461 56 arch/arm/kernel/signal.c:630 (set (reg:SI 348)
        (xor:SI (reg:SI 191 [ D.25871 ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 191 [ D.25871 ])
        (nil)))

(insn 461 459 462 56 arch/arm/kernel/signal.c:630 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 348)
                        (reg/v:SI 148 [ ret ]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 348)
        (expr_list:REG_DEAD (reg/v:SI 148 [ ret ])
            (nil))))

(jump_insn 462 461 463 56 arch/arm/kernel/signal.c:630 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 469)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 56 -> ( 57 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207


;; Succ edge  57 [50.0%]  (fallthru)
;; Succ edge  58 [50.0%] 

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u555(11){ }u556(13){ }u557(25){ }u558(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  56 [50.0%]  (fallthru)
(note 463 462 464 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 464 463 465 57 arch/arm/kernel/signal.c:633 (set (reg:SI 0 r0)
        (reg/v:SI 207 [ signr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 207 [ signr ])
        (nil)))

(insn 465 464 466 57 arch/arm/kernel/signal.c:633 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ tsk ])
        (nil)))

(call_insn 466 465 660 57 arch/arm/kernel/signal.c:633 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sigsegv") [flags 0x41] <function_decl 0x10f06780 force_sigsegv>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 660 466 661 57 (set (pc)
        (label_ref 616)) 242 {*arm_jump} (nil))
;; End of basic block 57 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  72 [100.0%] 

(barrier 661 660 469)

;; Start of basic block ( 56) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u564(11){ }u565(13){ }u566(25){ }u567(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 351 352 353 354 355 356 357 358 360
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 0 [r0] 24 [cc] 351 352 353 354 355 356 357 358 360
;; live  kill	 14 [lr]

;; Pred edge  56 [50.0%] 
(code_label 469 661 470 58 53 "" [1 uses])

(note 470 469 473 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(note 473 470 485 58 NOTE_INSN_DELETED)

(note 485 473 471 58 NOTE_INSN_DELETED)

(insn 471 485 472 58 include/linux/spinlock.h:310 (set (reg/f:SI 351 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 472 471 474 58 include/linux/spinlock.h:310 (set (reg/f:SI 352)
        (plus:SI (reg/f:SI 351 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 351 [ <variable>.sighand ])
        (nil)))

(insn 474 472 475 58 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 352)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 352)
        (nil)))

(call_insn 475 474 477 58 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b48280 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 477 475 476 58 include/linux/signal.h:123 discrim 3 (set (reg:SI 354 [ ka.sa.sa_mask.sig+4 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 ka.sa.sa_mask.sig+4 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 476 477 480 58 include/linux/signal.h:123 discrim 3 (set (reg:SI 353 [ <variable>.blocked.sig+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 948 [0x3b4])) [0 <variable>.blocked.sig+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 480 476 478 58 include/linux/signal.h:123 discrim 2 (set (reg:SI 356 [ <variable>.blocked.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 944 [0x3b0])) [0 <variable>.blocked.sig+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 478 480 479 58 include/linux/signal.h:123 discrim 3 (set (reg:SI 355)
        (ior:SI (reg:SI 353 [ <variable>.blocked.sig+4 ])
            (reg:SI 354 [ ka.sa.sa_mask.sig+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 354 [ ka.sa.sa_mask.sig+4 ])
        (expr_list:REG_DEAD (reg:SI 353 [ <variable>.blocked.sig+4 ])
            (nil))))

(insn 479 478 481 58 include/linux/signal.h:123 discrim 3 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 948 [0x3b4])) [0 <variable>.blocked.sig+4 S4 A32])
        (reg:SI 355)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 355)
        (nil)))

(insn 481 479 482 58 include/linux/signal.h:123 discrim 2 (set (reg:SI 357 [ ka.sa.sa_mask.sig ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 ka.sa.sa_mask.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 482 481 483 58 include/linux/signal.h:123 discrim 2 (set (reg:SI 358)
        (ior:SI (reg:SI 356 [ <variable>.blocked.sig ])
            (reg:SI 357 [ ka.sa.sa_mask.sig ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 357 [ ka.sa.sa_mask.sig ])
        (expr_list:REG_DEAD (reg:SI 356 [ <variable>.blocked.sig ])
            (nil))))

(insn 483 482 484 58 include/linux/signal.h:123 discrim 2 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 944 [0x3b0])) [0 <variable>.blocked.sig+0 S4 A64])
        (reg:SI 358)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 358)
        (nil)))

(insn 484 483 486 58 arch/arm/kernel/signal.c:643 (set (reg:SI 360 [ ka.sa.sa_flags ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 486 484 487 58 arch/arm/kernel/signal.c:643 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 360 [ ka.sa.sa_flags ])
                (const_int 1 [0x1])
                (const_int 30 [0x1e]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 360 [ ka.sa.sa_flags ])
        (nil)))

(jump_insn 487 486 488 58 arch/arm/kernel/signal.c:643 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 499)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 58 -> ( 59 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207


;; Succ edge  59 [50.0%]  (fallthru)
;; Succ edge  60 [50.0%] 

;; Start of basic block ( 58) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u591(11){ }u592(13){ }u593(25){ }u594(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; lr  def 	 196 197 361 363 365 366 367
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 207
;; live  gen 	 196 197 361 363 365 366 367
;; live  kill	

;; Pred edge  58 [50.0%]  (fallthru)
(note 488 487 495 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(note 495 488 489 59 NOTE_INSN_DELETED)

(insn 489 495 494 59 include/linux/signal.h:44 (set (reg:SI 197 [ D.25851 ])
        (plus:SI (reg/v:SI 207 [ signr ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 207 [ signr ])
        (nil)))

(insn 494 489 493 59 include/linux/signal.h:48 (set (reg:SI 365)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 493 494 490 59 include/linux/signal.h:48 (set (reg:SI 363)
        (and:SI (reg:SI 197 [ D.25851 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 197 [ D.25851 ])
        (nil)))

(insn 490 493 491 59 include/linux/signal.h:48 (set (reg:SI 196 [ D.25853 ])
        (lshiftrt:SI (reg:SI 197 [ D.25851 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 491 490 496 59 include/linux/signal.h:48 (set (reg:SI 361)
        (plus:SI (reg:SI 196 [ D.25853 ])
            (const_int 236 [0xec]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 196 [ D.25853 ])
        (nil)))

(insn 496 491 497 59 include/linux/signal.h:48 (set (reg:SI 366)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 361)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 147 [ tsk ])) [0 <variable>.blocked.sig S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 497 496 498 59 include/linux/signal.h:48 (set (reg:SI 367)
        (ior:SI (ashift:SI (reg:SI 365)
                (reg:SI 363))
            (reg:SI 366))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 366)
        (expr_list:REG_DEAD (reg:SI 365)
            (expr_list:REG_DEAD (reg:SI 363)
                (nil)))))

(insn 498 497 499 59 include/linux/signal.h:48 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 361)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 147 [ tsk ])) [0 <variable>.blocked.sig S4 A32])
        (reg:SI 367)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 367)
        (expr_list:REG_DEAD (reg:SI 361)
            (nil))))
;; End of basic block 59 -> ( 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 58 59) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u609(11){ }u610(13){ }u611(25){ }u612(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 369 370
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 24 [cc] 140 141 369 370
;; live  kill	 14 [lr]

;; Pred edge  58 [50.0%] 
;; Pred edge  59 [100.0%]  (fallthru)
(code_label 499 498 500 60 54 "" [1 uses])

(note 500 499 504 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(note 504 500 508 60 NOTE_INSN_DELETED)

(note 508 504 511 60 NOTE_INSN_DELETED)

(note 511 508 501 60 NOTE_INSN_DELETED)

(call_insn 501 511 502 60 arch/arm/kernel/signal.c:645 (parallel [
            (call (mem:SI (symbol_ref:SI ("recalc_sigpending") [flags 0x41] <function_decl 0x10f2c680 recalc_sigpending>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 502 501 503 60 include/linux/spinlock.h:335 (set (reg/f:SI 369 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ tsk ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ tsk ])
        (nil)))

(insn 503 502 505 60 include/linux/spinlock.h:335 (set (reg/f:SI 370)
        (plus:SI (reg/f:SI 369 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 369 [ <variable>.sighand ])
        (nil)))

(insn 505 503 506 60 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 370)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 370)
        (nil)))

(call_insn 506 505 678 60 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b48600 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 678 506 679 60 include/linux/thread_info.h:84 (set (reg/f:SI 140 [ D.26039 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 679 678 510 60 include/linux/thread_info.h:84 (set (reg/f:SI 140 [ D.26039 ])
        (and:SI (reg/f:SI 140 [ D.26039 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 510 679 512 60 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 141 [ D.26034 ])
        (mem/v:SI (reg/f:SI 140 [ D.26039 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 512 510 513 60 arch/arm/kernel/signal.c:737 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 141 [ D.26034 ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 141 [ D.26034 ])
        (nil)))

(jump_insn 513 512 514 60 arch/arm/kernel/signal.c:737 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 60 -> ( 61 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  61 [29.0%]  (fallthru)
;; Succ edge  72 [71.0%] 

;; Start of basic block ( 60) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u628(11){ }u629(13){ }u630(25){ }u631(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  60 [29.0%]  (fallthru)
(note 514 513 519 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 519 514 518 61 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (reg/f:SI 140 [ D.26039 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.26039 ])
        (nil)))

(insn 518 519 520 61 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(call_insn 520 518 662 61 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109cef00 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 662 520 663 61 (set (pc)
        (label_ref 616)) 242 {*arm_jump} (nil))
;; End of basic block 61 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  72 [100.0%] 

(barrier 663 662 523)

;; Start of basic block ( 12 11) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u636(11){ }u637(13){ }u638(25){ }u639(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213 214
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 214
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213 214
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [27.0%] 
;; Pred edge  11 [100.0%] 
(code_label 523 663 524 62 30 ("no_signal") [2 uses])

(note 524 523 525 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 525 524 526 62 arch/arm/kernel/signal.c:744 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 214 [ syscall ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 214 [ syscall ])
        (nil)))

(jump_insn 526 525 527 62 arch/arm/kernel/signal.c:744 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 62 -> ( 63 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213


;; Succ edge  63 [61.0%]  (fallthru)
;; Succ edge  72 [39.0%] 

;; Start of basic block ( 62) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u642(11){ }u643(13){ }u644(25){ }u645(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 210 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 210
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 210 213
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  62 [61.0%]  (fallthru)
(note 527 526 528 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 528 527 529 63 arch/arm/kernel/signal.c:750 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 210 [ retval ])
            (const_int -516 [0xfffffffffffffdfc]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 210 [ retval ])
        (nil)))

(jump_insn 529 528 530 63 arch/arm/kernel/signal.c:750 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 554)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 63 -> ( 64 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213


;; Succ edge  64 [28.0%]  (fallthru)
;; Succ edge  68 [72.0%] 

;; Start of basic block ( 63) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u648(11){ }u649(13){ }u650(25){ }u651(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 24 [cc] 375
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 375
;; live  kill	

;; Pred edge  63 [28.0%]  (fallthru)
(note 530 529 531 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 531 530 532 64 arch/arm/kernel/signal.c:751 (set (reg:SI 375 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 532 531 533 64 arch/arm/kernel/signal.c:751 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 375 [ <variable>.uregs+60 ])
            (reg/v:SI 209 [ continue_addr ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 375 [ <variable>.uregs+60 ])
        (nil)))

(jump_insn 533 532 534 64 arch/arm/kernel/signal.c:751 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 554)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 64 -> ( 65 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213


;; Succ edge  65 [28.0%]  (fallthru)
;; Succ edge  68 [72.0%] 

;; Start of basic block ( 64) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u656(11){ }u657(13){ }u658(25){ }u659(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 213
;; lr  def 	 24 [cc] 376 377
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 24 [cc] 376 377
;; live  kill	

;; Pred edge  64 [28.0%]  (fallthru)
(note 534 533 536 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(note 536 534 535 65 NOTE_INSN_DELETED)

(insn 535 536 537 65 arch/arm/kernel/signal.c:752 (set (reg:SI 377 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 537 535 538 65 arch/arm/kernel/signal.c:752 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 377 [ <variable>.uregs+64 ])
                        (const_int 32 [0x20]))
                    (const_int 0 [0x0])))
            (set (reg:SI 376)
                (and:SI (reg:SI 377 [ <variable>.uregs+64 ])
                    (const_int 32 [0x20])))
        ]) 69 {*andsi3_compare0} (expr_list:REG_DEAD (reg:SI 377 [ <variable>.uregs+64 ])
        (nil)))

(jump_insn 538 537 539 65 arch/arm/kernel/signal.c:752 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 547)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 65 -> ( 66 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376


;; Succ edge  66 [50.0%]  (fallthru)
;; Succ edge  67 [50.0%] 

;; Start of basic block ( 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u664(11){ }u665(13){ }u666(25){ }u667(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; lr  def 	 378 380
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213
;; live  gen 	 378 380
;; live  kill	

;; Pred edge  65 [50.0%]  (fallthru)
(note 539 538 543 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 543 539 544 66 arch/arm/kernel/signal.c:754 (set (reg:SI 380)
        (plus:SI (reg/v:SI 209 [ continue_addr ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 209 [ continue_addr ])
        (nil)))

(insn 544 543 540 66 arch/arm/kernel/signal.c:754 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 380)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 380)
        (expr_list:REG_DEAD (reg/v/f:SI 213 [ regs ])
            (nil))))

(insn 540 544 541 66 arch/arm/kernel/signal.c:753 (set (reg:SI 378)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 541 540 664 66 arch/arm/kernel/signal.c:753 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (reg:SI 378)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 378)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 664 541 665 66 (set (pc)
        (label_ref 554)) 242 {*arm_jump} (nil))
;; End of basic block 66 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  68 [100.0%] 

(barrier 665 664 547)

;; Start of basic block ( 65) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u673(11){ }u674(13){ }u675(25){ }u676(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 209 213 376
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; lr  def 	 383
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 209 213 376
;; live  gen 	 383
;; live  kill	

;; Pred edge  65 [50.0%] 
(code_label 547 665 548 67 56 "" [1 uses])

(note 548 547 550 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 550 548 552 67 arch/arm/kernel/signal.c:757 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (reg:SI 376)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 376)
        (nil)))

(insn 552 550 553 67 arch/arm/kernel/signal.c:758 (set (reg:SI 383)
        (plus:SI (reg/v:SI 209 [ continue_addr ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 209 [ continue_addr ])
        (nil)))

(insn 553 552 554 67 arch/arm/kernel/signal.c:758 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 213 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 383)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 383)
        (expr_list:REG_DEAD (reg/v/f:SI 213 [ regs ])
            (nil))))
;; End of basic block 67 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 64 63 67 66) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u682(11){ }u683(13){ }u684(25){ }u685(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137
;; live  kill	

;; Pred edge  64 [72.0%] 
;; Pred edge  63 [72.0%] 
;; Pred edge  67 [100.0%]  (fallthru)
;; Pred edge  66 [100.0%] 
(code_label 554 553 555 68 55 "" [3 uses])

(note 555 554 557 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(note 557 555 560 68 NOTE_INSN_DELETED)

(note 560 557 676 68 NOTE_INSN_DELETED)

(insn 676 560 677 68 include/linux/thread_info.h:84 (set (reg/f:SI 136 [ D.26069 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 677 676 559 68 include/linux/thread_info.h:84 (set (reg/f:SI 136 [ D.26069 ])
        (and:SI (reg/f:SI 136 [ D.26069 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 559 677 561 68 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 137 [ D.26064 ])
        (mem/v:SI (reg/f:SI 136 [ D.26069 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 561 559 562 68 arch/arm/kernel/signal.c:778 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 137 [ D.26064 ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 137 [ D.26064 ])
        (nil)))

(jump_insn 562 561 563 68 arch/arm/kernel/signal.c:778 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 616)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 68 -> ( 69 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  69 [39.0%]  (fallthru)
;; Succ edge  72 [61.0%] 

;; Start of basic block ( 68) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u693(11){ }u694(13){ }u695(25){ }u696(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 391
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 391
;; live  kill	 14 [lr]

;; Pred edge  68 [39.0%]  (fallthru)
(note 563 562 574 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(note 574 563 568 69 NOTE_INSN_DELETED)

(insn 568 574 567 69 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (reg/f:SI 136 [ D.26069 ])) 167 {*arm_movsi_insn} (nil))

(insn 567 568 569 69 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(call_insn 569 567 573 69 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109cef00 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 573 569 577 69 arch/arm/kernel/signal.c:780 (set (reg/f:SI 391 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 136 [ D.26069 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ D.26069 ])
        (nil)))

(insn 577 573 575 69 arch/arm/kernel/signal.c:780 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 575 577 576 69 arch/arm/kernel/signal.c:780 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 576 575 578 69 arch/arm/kernel/signal.c:780 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 391 [ <variable>.task ])
            (const_int 960 [0x3c0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 391 [ <variable>.task ])
        (nil)))

(call_insn 578 576 666 69 arch/arm/kernel/signal.c:780 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sigprocmask") [flags 0x41] <function_decl 0x10a8d480 sigprocmask>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 666 578 667 69 (set (pc)
        (label_ref 616)) 242 {*arm_jump} (nil))
;; End of basic block 69 -> ( 72)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  72 [100.0%] 

(barrier 667 666 583)

;; Start of basic block ( 29 30) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u708(11){ }u709(13){ }u710(25){ }u711(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 158 392 394 398 399
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 158 392 394 398 399
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  30 [50.0%] 
(code_label 583 667 584 70 39 "" [2 uses])

(note 584 583 587 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(note 587 584 674 70 NOTE_INSN_DELETED)

(insn 674 587 675 70 arch/arm/kernel/signal.c:449 (set (reg:SI 392)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 675 674 589 70 arch/arm/kernel/signal.c:449 (set (reg:SI 392)
        (and:SI (reg:SI 392)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 589 675 594 70 arch/arm/kernel/signal.c:449 (set (reg/f:SI 394 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 392)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 392)
        (nil)))

(insn 594 589 593 70 arch/arm/kernel/signal.c:449 (set (reg:SI 399 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 394 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 394 [ <variable>.task ])
        (nil)))

(insn 593 594 595 70 arch/arm/kernel/signal.c:449 (set (reg:SI 398 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 394 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 595 593 668 70 arch/arm/kernel/signal.c:449 (set (reg/v:SI 158 [ sp ])
        (plus:SI (reg:SI 398 [ <variable>.sas_ss_size ])
            (reg:SI 399 [ <variable>.sas_ss_sp ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 399 [ <variable>.sas_ss_sp ])
        (expr_list:REG_DEAD (reg:SI 398 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 668 595 669 70 (set (pc)
        (label_ref 200)) 242 {*arm_jump} (nil))
;; End of basic block 70 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 158 206 207 213


;; Succ edge  31 [100.0%] 

(barrier 669 668 598)

;; Start of basic block ( 42 43) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u720(11){ }u721(13){ }u722(25){ }u723(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 177 400 402 406 407
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 206 207 213
;; live  gen 	 177 400 402 406 407
;; live  kill	

;; Pred edge  42 [50.0%] 
;; Pred edge  43 [50.0%] 
(code_label 598 669 599 71 47 "" [2 uses])

(note 599 598 602 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(note 602 599 672 71 NOTE_INSN_DELETED)

(insn 672 602 673 71 arch/arm/kernel/signal.c:449 (set (reg:SI 400)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 673 672 604 71 arch/arm/kernel/signal.c:449 (set (reg:SI 400)
        (and:SI (reg:SI 400)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 604 673 609 71 arch/arm/kernel/signal.c:449 (set (reg/f:SI 402 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 400)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 400)
        (nil)))

(insn 609 604 608 71 arch/arm/kernel/signal.c:449 (set (reg:SI 407 [ <variable>.sas_ss_sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 402 [ <variable>.task ])
                (const_int 984 [0x3d8])) [0 <variable>.sas_ss_sp+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 402 [ <variable>.task ])
        (nil)))

(insn 608 609 610 71 arch/arm/kernel/signal.c:449 (set (reg:SI 406 [ <variable>.sas_ss_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 402 [ <variable>.task ])
                (const_int 988 [0x3dc])) [0 <variable>.sas_ss_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 610 608 670 71 arch/arm/kernel/signal.c:449 (set (reg/v:SI 177 [ sp ])
        (plus:SI (reg:SI 406 [ <variable>.sas_ss_size ])
            (reg:SI 407 [ <variable>.sas_ss_sp ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 407 [ <variable>.sas_ss_sp ])
        (expr_list:REG_DEAD (reg:SI 406 [ <variable>.sas_ss_size ])
            (nil))))

(jump_insn 670 610 671 71 (set (pc)
        (label_ref 362)) 242 {*arm_jump} (nil))
;; End of basic block 71 -> ( 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 177 206 207 213


;; Succ edge  44 [100.0%] 

(barrier 671 670 616)

;; Start of basic block ( 61 2 68 60 57 62 69) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u732(11){ }u733(13){ }u734(25){ }u735(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  61 [100.0%] 
;; Pred edge  2 [39.0%] 
;; Pred edge  68 [61.0%] 
;; Pred edge  60 [71.0%] 
;; Pred edge  57 [100.0%] 
;; Pred edge  62 [39.0%] 
;; Pred edge  69 [100.0%] 
(code_label 616 671 623 72 57 "" [7 uses])

(note 623 616 702 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 72 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 702 623 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_notify_resume (do_notify_resume)[0:1453]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)


do_notify_resume

Dataflow summary:
def_info->table_size = 254, use_info->table_size = 43
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={6d,4u} r2={3d,1u} r3={3d} r11={1d,6u} r12={3d} r13={1d,9u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,2u} r136={1d,1u} 
;;    total ref usage 290{251d,39u,0e} in 12{10 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d21(14){ }d44(25){ }d45(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 5 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u39(11){ }u40(13){ }u41(14){ }u42(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 24 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 18 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 13 to worklist
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
  Adding insn 9 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;;   ======================================================
;;   -- basic block 2 from 3 to 10 -- before reload
;;   ======================================================

;;	  0-->     3 r135=r1                           :cortex_a8_default
;;	  0-->     4 r136=r2                           :cortex_a8_default
;;	  1-->     9 cc=cmp(zxt(r135,0x1,0x0),0x0)     :cortex_a8_default
;;	  3-->    10 pc={(cc==0x0)?L15:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 3
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 13 to 14 -- before reload
;;   ======================================================

;;	  0-->    13 r1=r136                           :cortex_a8_default
;;	  1-->    14 call [`do_signal']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 13
;;   new tail = 14

;;   ======================================================
;;   -- basic block 4 from 18 to 19 -- before reload
;;   ======================================================

;;	  0-->    18 cc=cmp(zxt(r135,0x1,0x2),0x0)     :cortex_a8_default
;;	  2-->    19 pc={(cc==0x0)?L33:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 18
;;   new tail = 19

;;   ======================================================
;;   -- basic block 5 from 24 to 26 -- before reload
;;   ======================================================

;;	  0-->    37 r1=sp&0xffffffffffffe03f          :cortex_a8_default
;;	  0-->    24 r0=0x2                            :cortex_a8_default
;;	  1-->    38 r1=r1&0xffffffffffffffc0          :cortex_a8_default
;;	  2-->    26 call [`_clear_bit']               :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 24
;;   new tail = 26


;; Procedure interblock/speculative motions == 0/0 




do_notify_resume

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={6d,4u} r2={3d,1u} r3={3d} r11={1d,6u} r12={3d} r13={1d,9u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r25={1d,6u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,2u} r136={1d,1u} 
;;    total ref usage 290{251d,39u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 3 2 NOTE_INSN_DELETED)

(insn 3 8 4 2 arch/arm/kernel/signal.c:787 (set (reg/v:SI 135 [ thread_flags ])
        (reg:SI 1 r1 [ thread_flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ thread_flags ])
        (nil)))

(insn 4 3 9 2 arch/arm/kernel/signal.c:787 (set (reg/v:SI 136 [ syscall ])
        (reg:SI 2 r2 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ syscall ])
        (nil)))

(insn 9 4 10 2 arch/arm/kernel/signal.c:788 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 135 [ thread_flags ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/signal.c:788 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 14 3 arch/arm/kernel/signal.c:789 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ syscall ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ syscall ])
        (nil)))

(call_insn 14 13 15 3 arch/arm/kernel/signal.c:789 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_signal") [flags 0x3] <function_decl 0x1140ac80 do_signal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 62 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 16 18 4 NOTE_INSN_DELETED)

(insn 18 17 19 4 arch/arm/kernel/signal.c:791 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 135 [ thread_flags ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 135 [ thread_flags ])
        (nil)))

(jump_insn 19 18 20 4 arch/arm/kernel/signal.c:791 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  4 [39.0%]  (fallthru)
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 22 20 23 5 NOTE_INSN_DELETED)

(note 23 22 37 5 NOTE_INSN_DELETED)

(insn 37 23 24 5 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 24 37 38 5 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 38 24 26 5 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(call_insn/j 26 38 27 5 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109cef00 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 27 26 33)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [61.0%] 
(code_label 33 27 36 6 64 "" [1 uses])

(note 36 33 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 39 36 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function restore_sigframe (restore_sigframe)[0:1443]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 35 (  1.8)


restore_sigframe

Dataflow summary:
def_info->table_size = 885, use_info->table_size = 302
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,12u} r1={10d,4u} r2={9d,2u} r3={7d} r11={1d,18u} r12={7d} r13={1d,26u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={39d,9u} r25={1d,21u,1d} r26={1d,17u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={5d,5u} r134={3d,2u} r136={2d,7u} r137={1d,1u} r138={3d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={3d,1u} r153={1d,3u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={18d,19u} r171={1d,1u} r174={1d,19u} r175={1d,25u} r176={1d,3u} r178={1d,1u,1d} r179={1d,1u} r180={1d,1u} r181={2d,4u} r183={1d,1u} r185={1d,1u} r186={1d,1u} r189={1d,1u} r190={1d,2u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r218={1d,1u} r220={1d,1u} r222={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,2u} r230={1d,1u} r231={1d,2u} r233={1d,1u} r237={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} 
;;    total ref usage 1148{868d,278u,2e} in 150{144 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d13(0){ }d23(1){ }d32(2){ }d39(3){ }d40(11){ }d47(12){ }d48(13){ }d55(14){ }d151(25){ }d152(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 170 174 175 176
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 170 174 175 176
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 180 181 183 185 186 189 190 194 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; live  gen 	 0 [r0] 1 [r1] 178 179 180 181 183 185 186 189 190 194 196 197
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175

( 2 3 )->[4]->( 5 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; lr  def 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; live  gen 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175

( 4 )->[5]->( 10 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u149(11){ }u150(13){ }u151(25){ }u152(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  gen 	 24 [cc] 148
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175

( 5 )->[6]->( 10 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 218 220 222 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  gen 	 24 [cc] 218 220 222 226
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175

( 4 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 174
;; lr  def 	 24 [cc] 147 227 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175
;; live  gen 	 24 [cc] 147 227 228 229
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228

( 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175

( 7 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u186(11){ }u187(13){ }u188(25){ }u189(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 174 228
;; lr  def 	 149 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  gen 	 149 230
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175

( 5 6 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175

( 10 8 9 )->[11]->( 12 18 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; lr  def 	 24 [cc] 134 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; live  gen 	 24 [cc] 134 231
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175

( 11 )->[12]->( 17 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  def 	 24 [cc] 138 139 140 171 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 24 [cc] 138 139 140 171 233
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175

( 12 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175
;; live  gen 	 24 [cc] 237
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175

( 13 )->[14]->( 18 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134

( 13 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 137 141 142 143 144 245 246 247 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 137 141 142 143 144 245 246 247 248 249
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136

( 15 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u280(11){ }u281(13){ }u282(25){ }u283(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134

( 12 15 )->[17]->( 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134

( 11 14 17 16 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u297(0){ }u298(11){ }u299(13){ }u300(14){ }u301(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 48 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 30 to worklist
  Adding insn 21 to worklist
  Adding insn 105 to worklist
  Adding insn 102 to worklist
  Adding insn 100 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 109 to worklist
  Adding insn 124 to worklist
  Adding insn 133 to worklist
  Adding insn 128 to worklist
  Adding insn 232 to worklist
  Adding insn 234 to worklist
  Adding insn 141 to worklist
  Adding insn 153 to worklist
  Adding insn 162 to worklist
  Adding insn 160 to worklist
  Adding insn 158 to worklist
  Adding insn 175 to worklist
  Adding insn 236 to worklist
  Adding insn 207 to worklist
  Adding insn 205 to worklist
  Adding insn 204 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 199 to worklist
  Adding insn 196 to worklist
  Adding insn 194 to worklist
  Adding insn 193 to worklist
  Adding insn 189 to worklist
  Adding insn 238 to worklist
  Adding insn 210 to worklist
  Adding insn 228 to worklist
Finished finding needed instructions:
processing block 18 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 222 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 215 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 177 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 209 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136
  Adding insn 206 to worklist
  Adding insn 203 to worklist
  Adding insn 200 to worklist
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 195 to worklist
  Adding insn 246 to worklist
  Adding insn 192 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 186 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
  Adding insn 174 to worklist
  Adding insn 167 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
  Adding insn 161 to worklist
  Adding insn 159 to worklist
  Adding insn 245 to worklist
  Adding insn 155 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
  Adding insn 152 to worklist
  Adding insn 150 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
  Adding insn 147 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
  Adding insn 142 to worklist
  Adding insn 140 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
  Adding insn 135 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
  Adding insn 132 to worklist
  Adding insn 130 to worklist
  Adding insn 129 to worklist
  Adding insn 127 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
  Adding insn 123 to worklist
  Adding insn 122 to worklist
  Adding insn 118 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
  Adding insn 108 to worklist
  Adding insn 107 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
  Adding insn 104 to worklist
  Adding insn 101 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 87 to worklist
  Adding insn 84 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 63 to worklist
  Adding insn 60 to worklist
  Adding insn 57 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175 176
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 27 count 36 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 2 to 16 -- before reload
;;   ======================================================

;;	  0-->     3 r175=r1                           :cortex_a8_default
;;	  0-->     7 r176=sfp-0x8                      :cortex_a8_default
;;	  1-->     2 r174=r0                           :cortex_a8_default
;;	  1-->    10 r1=r175+0x68                      :cortex_a8_default
;;	  2-->     9 r0=r176                           :cortex_a8_default
;;	  2-->    11 r2=0x8                            :cortex_a8_default
;;	  3-->    12 r0=call [`__copy_from_user']      :cortex_a8_issue_branch
;;	 35-->    15 {cc=cmp(r0,0x0);r170=r0;}         :cortex_a8_default
;;	 37-->    16 pc={(cc!=0x0)?L49:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 37
;;   new head = 2
;;   new tail = 16

;;   ======================================================
;;   -- basic block 3 from 18 to 48 -- before reload
;;   ======================================================

;;	  0-->   243 r181=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    18 r178=[sfp-0x8]                    :cortex_a8_load_store_1
;;	  1-->   244 r181=r181&0xffffffffffffffc0      :cortex_a8_default
;;	  2-->    19 r180=r178&0xfffffffffffbffff      :cortex_a8_default
;;	  3-->    25 r183=[r181+0xc]                   :cortex_a8_load_store_1
;;	  3-->    20 r179=r180&0xfffffffffffffeff      :cortex_a8_default
;;	  4-->    21 [sfp-0x8]=r179                    :cortex_a8_load_store_1
;;	  6-->    26 r185=[r183+0x3ac]                 :cortex_a8_load_store_1
;;	  8-->    27 r186=r185+0x500                   :cortex_a8_default
;;	  9-->    29 r0=r186+0x4                       :cortex_a8_default
;;	 10-->    30 call [`_raw_spin_lock_irq']       :cortex_a8_issue_branch
;;	 10-->    34 r189=[r181+0xc]                   :cortex_a8_load_store_1
;;	 11-->    37 {r0=[r176];r1=[r176+0x4];}        :cortex_a8_load_store_1
;;	 12-->    35 r190=r189+0x3b0                   :cortex_a8_default
;;	 14-->    38 {[r190]=r0;[r190+0x4]=r1;}        :cortex_a8_load_store_1
;;	 15-->    39 call [`recalc_sigpending']        :cortex_a8_issue_branch
;;	 15-->    43 r194=[r181+0xc]                   :cortex_a8_load_store_1
;;	 18-->    44 r196=[r194+0x3ac]                 :cortex_a8_load_store_1
;;	 20-->    45 r197=r196+0x500                   :cortex_a8_default
;;	 21-->    47 r0=r197+0x4                       :cortex_a8_default
;;	 22-->    48 call [`_raw_spin_unlock_irq']     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 22
;;   new head = 18
;;   new tail = 48

;;   ======================================================
;;   -- basic block 4 from 51 to 105 -- before reload
;;   ======================================================

;;	  0-->    51 r198=r175+0x20                    :cortex_a8_default
;;	  1-->    52 {r170=asm_operands;r169=asm_operan:nothing
;;	  2-->    53 [r174]=r169                       :cortex_a8_load_store_1
;;	  2-->    54 r199=r175+0x24                    :cortex_a8_default
;;	  3-->    55 {r170=asm_operands;r168=asm_operan:nothing
;;	  4-->    56 [r174+0x4]=r168                   :cortex_a8_load_store_1
;;	  4-->    57 r200=r175+0x28                    :cortex_a8_default
;;	  5-->    58 {r170=asm_operands;r167=asm_operan:nothing
;;	  6-->    59 [r174+0x8]=r167                   :cortex_a8_load_store_1
;;	  6-->    60 r201=r175+0x2c                    :cortex_a8_default
;;	  7-->    61 {r170=asm_operands;r166=asm_operan:nothing
;;	  8-->    62 [r174+0xc]=r166                   :cortex_a8_load_store_1
;;	  8-->    63 r202=r175+0x30                    :cortex_a8_default
;;	  9-->    64 {r170=asm_operands;r165=asm_operan:nothing
;;	 10-->    65 [r174+0x10]=r165                  :cortex_a8_load_store_1
;;	 10-->    66 r203=r175+0x34                    :cortex_a8_default
;;	 11-->    67 {r170=asm_operands;r164=asm_operan:nothing
;;	 12-->    68 [r174+0x14]=r164                  :cortex_a8_load_store_1
;;	 12-->    69 r204=r175+0x38                    :cortex_a8_default
;;	 13-->    70 {r170=asm_operands;r163=asm_operan:nothing
;;	 14-->    71 [r174+0x18]=r163                  :cortex_a8_load_store_1
;;	 14-->    72 r205=r175+0x3c                    :cortex_a8_default
;;	 15-->    73 {r170=asm_operands;r162=asm_operan:nothing
;;	 16-->    74 [r174+0x1c]=r162                  :cortex_a8_load_store_1
;;	 16-->    75 r206=r175+0x40                    :cortex_a8_default
;;	 17-->    76 {r170=asm_operands;r161=asm_operan:nothing
;;	 18-->    77 [r174+0x20]=r161                  :cortex_a8_load_store_1
;;	 18-->    78 r207=r175+0x44                    :cortex_a8_default
;;	 19-->    79 {r170=asm_operands;r160=asm_operan:nothing
;;	 20-->    80 [r174+0x24]=r160                  :cortex_a8_load_store_1
;;	 20-->    81 r208=r175+0x48                    :cortex_a8_default
;;	 21-->    82 {r170=asm_operands;r159=asm_operan:nothing
;;	 22-->    83 [r174+0x28]=r159                  :cortex_a8_load_store_1
;;	 22-->    84 r209=r175+0x4c                    :cortex_a8_default
;;	 23-->    85 {r170=asm_operands;r158=asm_operan:nothing
;;	 24-->    86 [r174+0x2c]=r158                  :cortex_a8_load_store_1
;;	 24-->    87 r210=r175+0x50                    :cortex_a8_default
;;	 25-->    88 {r170=asm_operands;r157=asm_operan:nothing
;;	 26-->    89 [r174+0x30]=r157                  :cortex_a8_load_store_1
;;	 26-->    90 r211=r175+0x54                    :cortex_a8_default
;;	 27-->    91 {r170=asm_operands;r156=asm_operan:nothing
;;	 28-->    92 [r174+0x34]=r156                  :cortex_a8_load_store_1
;;	 28-->    93 r212=r175+0x58                    :cortex_a8_default
;;	 29-->    94 {r170=asm_operands;r155=asm_operan:nothing
;;	 30-->    95 [r174+0x38]=r155                  :cortex_a8_load_store_1
;;	 30-->    96 r213=r175+0x5c                    :cortex_a8_default
;;	 31-->    97 {r170=asm_operands;r154=asm_operan:nothing
;;	 32-->    98 [r174+0x3c]=r154                  :cortex_a8_load_store_1
;;	 32-->    99 r214=r175+0x60                    :cortex_a8_default
;;	 33-->   100 {r170=asm_operands;r153=asm_operan:nothing
;;	 34-->   104 cc=cmp(zxt(r153,0x1,0x7),0x0)     :cortex_a8_default
;;	 34-->   101 r146=r153&0xfffffffffffffebf      :cortex_a8_default
;;	 35-->   102 [r174+0x40]=r146                  :cortex_a8_load_store_1
;;	 36-->   105 pc={(cc!=0x0)?L125:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 51
;;   new tail = 105

;;   ======================================================
;;   -- basic block 5 from 107 to 109 -- before reload
;;   ======================================================

;;	  0-->   107 r148=r153&0x1f                    :cortex_a8_default
;;	  1-->   108 cc=cmp(r148,0x10)                 :cortex_a8_default
;;	  3-->   109 pc={(cc==0x0)?L145:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 107
;;   new tail = 109

;;   ======================================================
;;   -- basic block 6 from 114 to 124 -- before reload
;;   ======================================================

;;	  0-->   114 r218=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  3-->   115 r220=[r218]                       :cortex_a8_load_store_1
;;	  5-->   118 r222=zxt(r220,0x1,0x3)            :cortex_a8_default
;;	  6-->   122 {r226=r148==0x0&r222;clobber cc;} :cortex_a8_default
;;	  7-->   123 cc=cmp(r226,0x0)                  :cortex_a8_default
;;	  9-->   124 pc={(cc!=0x0)?L145:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 114
;;   new tail = 124

;;   ======================================================
;;   -- basic block 7 from 127 to 133 -- before reload
;;   ======================================================

;;	  0-->   129 r227=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  0-->   127 r147=r146&0xffffffffffffff30      :cortex_a8_default
;;	  1-->   128 [r174+0x40]=r147                  :cortex_a8_load_store_1
;;	  3-->   130 r229=[r227]                       :cortex_a8_load_store_1
;;	  5-->   132 {cc=cmp(r229&0x8,0x0);r228=r229&0x:cortex_a8_default
;;	  7-->   133 pc={(cc==0x0)?L138:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 127
;;   new tail = 133

;;   ======================================================
;;   -- basic block 8 from 135 to 232 -- before reload
;;   ======================================================

;;	  0-->   135 r149=0x0                          :cortex_a8_default
;;	  0-->   232 pc=L148                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 135
;;   new tail = 232

;;   ======================================================
;;   -- basic block 9 from 140 to 234 -- before reload
;;   ======================================================

;;	  0-->   140 r230=r147|0x10                    :cortex_a8_default
;;	  0-->   141 [r174+0x40]=r230                  :cortex_a8_load_store_1
;;	  1-->   142 r149=r228                         :cortex_a8_default
;;	  1-->   234 pc=L148                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 140
;;   new tail = 234

;;   ======================================================
;;   -- basic block 10 from 147 to 147 -- before reload
;;   ======================================================

;;	  0-->   147 r149=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 147
;;   new tail = 147

;;   ======================================================
;;   -- basic block 11 from 150 to 153 -- before reload
;;   ======================================================

;;	  0-->   150 r231=r149^0x1                     :cortex_a8_default
;;	  1-->   152 {cc=cmp(r231|r170,0x0);r134=r231|r:cortex_a8_default
;;	  3-->   153 pc={(cc!=0x0)?L216:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 150
;;   new tail = 153

;;   ======================================================
;;   -- basic block 12 from 155 to 162 -- before reload
;;   ======================================================

;;	  0-->   155 r171=r175+0xe8                    :cortex_a8_default
;;	  0-->   245 r138=r134                         :cortex_a8_default
;;	  1-->   158 {r138=asm_operands;r139=asm_operan:nothing
;;	  2-->   159 r233=r175+0xec                    :cortex_a8_default
;;	  3-->   160 {r138=asm_operands;r140=asm_operan:nothing
;;	  4-->   161 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  6-->   162 pc={(cc!=0x0)?L213:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 155
;;   new tail = 162

;;   ======================================================
;;   -- basic block 13 from 167 to 175 -- before reload
;;   ======================================================

;;	  0-->   167 r237=0x56465001                   :cortex_a8_load_store_1
;;	  2-->   174 cc=cmp(r140!=0x120|r139!=r237,0x0):cortex_a8_default
;;	  4-->   175 pc={(cc==0x0)?L180:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 167
;;   new tail = 175

;;   ======================================================
;;   -- basic block 14 from 177 to 236 -- before reload
;;   ======================================================

;;	  0-->   177 r134=0xffffffffffffffea           :cortex_a8_default
;;	  0-->   236 pc=L216                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 177
;;   new tail = 236

;;   ======================================================
;;   -- basic block 15 from 240 to 207 -- before reload
;;   ======================================================

;;	  0-->   240 r136=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->   187 r1=r175+0xf0                      :cortex_a8_default
;;	  1-->   241 r136=r136&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->   188 r2=0x100                          :cortex_a8_default
;;	  2-->   186 r0=r136+0x1b0                     :cortex_a8_default
;;	  3-->   189 r0=call [`__copy_from_user']      :cortex_a8_issue_branch
;;	  3-->   192 r245=r175+0x1f0                   :cortex_a8_default
;;	 35-->   246 r133=r0                           :cortex_a8_default
;;	 36-->   193 {r133=asm_operands;r141=asm_operan:nothing
;;	 37-->   194 [r136+0x2b4]=r141                 :cortex_a8_load_store_1
;;	 37-->   195 r246=r175+0x1f8                   :cortex_a8_default
;;	 38-->   196 {r133=asm_operands;r142=asm_operan:nothing
;;	 39-->   197 r137=r142|0x40000000              :cortex_a8_default
;;	 39-->   200 r248=r175+0x1fc                   :cortex_a8_default
;;	 40-->   198 r247=r137&0x6fffffff              :cortex_a8_default
;;	 40-->   199 [r136+0x2b0]=r247                 :cortex_a8_load_store_1
;;	 41-->   201 {r133=asm_operands;r143=asm_operan:nothing
;;	 42-->   202 [r136+0x2b8]=r143                 :cortex_a8_load_store_1
;;	 42-->   203 r249=r175+0x200                   :cortex_a8_default
;;	 43-->   204 {r133=asm_operands;r144=asm_operan:nothing
;;	 44-->   206 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	 44-->   205 [r136+0x2bc]=r144                 :cortex_a8_load_store_1
;;	 46-->   207 pc={(cc!=0x0)?L213:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 46
;;   new head = 240
;;   new tail = 207

;;   ======================================================
;;   -- basic block 16 from 209 to 238 -- before reload
;;   ======================================================

;;	  0-->   209 r0=r136                           :cortex_a8_default
;;	  1-->   210 call [`vfp_flush_hwstate']        :cortex_a8_issue_branch
;;	  1-->   238 pc=L216                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 209
;;   new tail = 238

;;   ======================================================
;;   -- basic block 17 from 215 to 215 -- before reload
;;   ======================================================

;;	  0-->   215 r134=0xfffffffffffffff2           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 215
;;   new tail = 215

;;   ======================================================
;;   -- basic block 18 from 222 to 228 -- before reload
;;   ======================================================

;;	  0-->   222 r0=r134                           :cortex_a8_default
;;	  0-->   228 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 222
;;   new tail = 228


;; Procedure interblock/speculative motions == 0/0 




restore_sigframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,12u} r1={10d,4u} r2={9d,2u} r3={7d} r11={1d,18u} r12={7d} r13={1d,26u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={39d,9u} r25={1d,21u,1d} r26={1d,17u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={5d,5u} r134={3d,2u} r136={2d,7u} r137={1d,1u} r138={3d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,2u} r147={1d,2u} r148={1d,2u} r149={3d,1u} r153={1d,3u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={18d,19u} r171={1d,1u} r174={1d,19u} r175={1d,25u} r176={1d,3u} r178={1d,1u,1d} r179={1d,1u} r180={1d,1u} r181={2d,4u} r183={1d,1u} r185={1d,1u} r186={1d,1u} r189={1d,1u} r190={1d,2u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r218={1d,1u} r220={1d,1u} r222={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,2u} r230={1d,1u} r231={1d,2u} r233={1d,1u} r237={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} 
;;    total ref usage 1148{868d,278u,2e} in 150{144 regular + 6 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 170 174 175 176
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 170 174 175 176
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 13 2 NOTE_INSN_DELETED)

(note 13 8 3 2 NOTE_INSN_DELETED)

(insn 3 13 7 2 arch/arm/kernel/signal.c:276 (set (reg/v/f:SI 175 [ sf ])
        (reg:SI 1 r1 [ sf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sf ])
        (nil)))

(insn 7 3 2 2 arch/arm/kernel/signal.c:281 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 2 7 10 2 arch/arm/kernel/signal.c:276 (set (reg/v/f:SI 174 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 10 2 9 2 arch/arm/kernel/signal.c:281 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn 9 10 11 2 arch/arm/kernel/signal.c:281 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(insn 11 9 12 2 arch/arm/kernel/signal.c:281 (set (reg:SI 2 r2)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 15 2 arch/arm/kernel/signal.c:281 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x10f3de80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 15 12 16 2 arch/arm/kernel/signal.c:282 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 170 [ err ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 16 15 17 2 arch/arm/kernel/signal.c:282 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 178 179 180 181 183 185 186 189 190 194 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175 176
;; live  gen 	 0 [r0] 1 [r1] 178 179 180 181 183 185 186 189 190 194 196 197
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 17 16 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 17 28 3 NOTE_INSN_DELETED)

(note 28 23 46 3 NOTE_INSN_DELETED)

(note 46 28 243 3 NOTE_INSN_DELETED)

(insn 243 46 18 3 include/linux/spinlock.h:310 (set (reg:SI 181)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 243 244 3 include/linux/signal.h:191 (set (reg:SI 178 [ set.sig ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 set.sig+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 244 18 19 3 include/linux/spinlock.h:310 (set (reg:SI 181)
        (and:SI (reg:SI 181)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 244 25 3 include/linux/signal.h:191 (set (reg:SI 180)
        (and:SI (reg:SI 178 [ set.sig ])
            (const_int -262145 [0xfffffffffffbffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 178 [ set.sig ])
        (nil)))

(insn 25 19 20 3 include/linux/spinlock.h:310 (set (reg/f:SI 183 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 181)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 25 21 3 include/linux/signal.h:191 (set (reg:SI 179)
        (and:SI (reg:SI 180)
            (const_int -257 [0xfffffffffffffeff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 178 [ set.sig ])
                (const_int -262401 [0xfffffffffffbfeff]))
            (nil))))

(insn 21 20 26 3 include/linux/signal.h:191 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 set.sig+0 S4 A64])
        (reg:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 26 21 27 3 include/linux/spinlock.h:310 (set (reg/f:SI 185 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 183 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183 [ <variable>.task ])
        (nil)))

(insn 27 26 29 3 include/linux/spinlock.h:310 (set (reg/f:SI 186)
        (plus:SI (reg/f:SI 185 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 185 [ <variable>.sighand ])
        (nil)))

(insn 29 27 30 3 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 186)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 186)
        (nil)))

(call_insn 30 29 34 3 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b48280 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 30 37 3 arch/arm/kernel/signal.c:285 (set (reg/f:SI 189 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 181)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 34 35 3 arch/arm/kernel/signal.c:285 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 176) [0 set+0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 176)
                        (const_int 4 [0x4])) [0 set+4 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 176)
        (nil)))

(insn 35 37 38 3 arch/arm/kernel/signal.c:285 (set (reg/f:SI 190)
        (plus:SI (reg/f:SI 189 [ <variable>.task ])
            (const_int 944 [0x3b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 189 [ <variable>.task ])
        (nil)))

(insn 38 35 39 3 arch/arm/kernel/signal.c:285 (parallel [
            (set (mem/s/j:SI (reg/f:SI 190) [0 <variable>.blocked+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s/j:SI (plus:SI (reg/f:SI 190)
                        (const_int 4 [0x4])) [0 <variable>.blocked+4 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/f:SI 190)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(call_insn 39 38 43 3 arch/arm/kernel/signal.c:286 (parallel [
            (call (mem:SI (symbol_ref:SI ("recalc_sigpending") [flags 0x41] <function_decl 0x10f2c680 recalc_sigpending>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 43 39 44 3 include/linux/spinlock.h:335 (set (reg/f:SI 194 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 181)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 44 43 45 3 include/linux/spinlock.h:335 (set (reg/f:SI 196 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 194 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 194 [ <variable>.task ])
        (nil)))

(insn 45 44 47 3 include/linux/spinlock.h:335 (set (reg/f:SI 197)
        (plus:SI (reg/f:SI 196 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 196 [ <variable>.sighand ])
        (nil)))

(insn 47 45 48 3 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 197)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 197)
        (nil)))

(call_insn 48 47 49 3 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b48600 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; lr  def 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 174 175
;; live  gen 	 24 [cc] 146 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214
;; live  kill	 24 [cc]

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 49 48 50 4 66 "" [1 uses])

(note 50 49 103 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 103 50 51 4 NOTE_INSN_DELETED)

(insn 51 103 52 4 arch/arm/kernel/signal.c:290 discrim 4 (set (reg/f:SI 198)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 52 51 53 4 arch/arm/kernel/signal.c:290 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 198)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691028))
            (set (reg/v:SI 169 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 198)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691028))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 198)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 53 52 54 4 arch/arm/kernel/signal.c:290 discrim 5 (set (mem/s/j:SI (reg/v/f:SI 174 [ regs ]) [0 <variable>.uregs+0 S4 A32])
        (reg/v:SI 169 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 169 [ __gu_val ])
        (nil)))

(insn 54 53 55 4 arch/arm/kernel/signal.c:291 discrim 4 (set (reg/f:SI 199)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 4 arch/arm/kernel/signal.c:291 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 199)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691033))
            (set (reg/v:SI 168 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 199)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691033))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 199)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 56 55 57 4 arch/arm/kernel/signal.c:291 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])
        (reg/v:SI 168 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 168 [ __gu_val ])
        (nil)))

(insn 57 56 58 4 arch/arm/kernel/signal.c:292 discrim 4 (set (reg/f:SI 200)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(insn 58 57 59 4 arch/arm/kernel/signal.c:292 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 200)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691038))
            (set (reg/v:SI 167 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 200)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691038))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 59 58 60 4 arch/arm/kernel/signal.c:292 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])
        (reg/v:SI 167 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 167 [ __gu_val ])
        (nil)))

(insn 60 59 61 4 arch/arm/kernel/signal.c:293 discrim 4 (set (reg/f:SI 201)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 44 [0x2c]))) 4 {*arm_addsi3} (nil))

(insn 61 60 62 4 arch/arm/kernel/signal.c:293 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 201)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691043))
            (set (reg/v:SI 166 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 201)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691043))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 201)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 62 61 63 4 arch/arm/kernel/signal.c:293 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])
        (reg/v:SI 166 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 166 [ __gu_val ])
        (nil)))

(insn 63 62 64 4 arch/arm/kernel/signal.c:294 discrim 4 (set (reg/f:SI 202)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (nil))

(insn 64 63 65 4 arch/arm/kernel/signal.c:294 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 202)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691048))
            (set (reg/v:SI 165 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 202)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691048))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 202)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 65 64 66 4 arch/arm/kernel/signal.c:294 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])
        (reg/v:SI 165 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 165 [ __gu_val ])
        (nil)))

(insn 66 65 67 4 arch/arm/kernel/signal.c:295 discrim 4 (set (reg/f:SI 203)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 52 [0x34]))) 4 {*arm_addsi3} (nil))

(insn 67 66 68 4 arch/arm/kernel/signal.c:295 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 203)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691053))
            (set (reg/v:SI 164 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 203)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691053))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 203)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 68 67 69 4 arch/arm/kernel/signal.c:295 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])
        (reg/v:SI 164 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 164 [ __gu_val ])
        (nil)))

(insn 69 68 70 4 arch/arm/kernel/signal.c:296 discrim 4 (set (reg/f:SI 204)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (nil))

(insn 70 69 71 4 arch/arm/kernel/signal.c:296 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 204)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691058))
            (set (reg/v:SI 163 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 204)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691058))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 71 70 72 4 arch/arm/kernel/signal.c:296 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])
        (reg/v:SI 163 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 163 [ __gu_val ])
        (nil)))

(insn 72 71 73 4 arch/arm/kernel/signal.c:297 discrim 4 (set (reg/f:SI 205)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 4 arch/arm/kernel/signal.c:297 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 205)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691063))
            (set (reg/v:SI 162 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 205)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691063))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 205)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 74 73 75 4 arch/arm/kernel/signal.c:297 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
        (reg/v:SI 162 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 162 [ __gu_val ])
        (nil)))

(insn 75 74 76 4 arch/arm/kernel/signal.c:298 discrim 4 (set (reg/f:SI 206)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 76 75 77 4 arch/arm/kernel/signal.c:298 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 206)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691068))
            (set (reg/v:SI 161 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 206)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691068))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 206)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 77 76 78 4 arch/arm/kernel/signal.c:298 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])
        (reg/v:SI 161 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 161 [ __gu_val ])
        (nil)))

(insn 78 77 79 4 arch/arm/kernel/signal.c:299 discrim 4 (set (reg/f:SI 207)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 68 [0x44]))) 4 {*arm_addsi3} (nil))

(insn 79 78 80 4 arch/arm/kernel/signal.c:299 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 207)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691073))
            (set (reg/v:SI 160 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 207)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691073))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 207)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 80 79 81 4 arch/arm/kernel/signal.c:299 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])
        (reg/v:SI 160 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ __gu_val ])
        (nil)))

(insn 81 80 82 4 arch/arm/kernel/signal.c:300 discrim 4 (set (reg/f:SI 208)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 72 [0x48]))) 4 {*arm_addsi3} (nil))

(insn 82 81 83 4 arch/arm/kernel/signal.c:300 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 208)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691078))
            (set (reg/v:SI 159 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 208)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691078))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 208)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 83 82 84 4 arch/arm/kernel/signal.c:300 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])
        (reg/v:SI 159 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 159 [ __gu_val ])
        (nil)))

(insn 84 83 85 4 arch/arm/kernel/signal.c:301 discrim 4 (set (reg/f:SI 209)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 76 [0x4c]))) 4 {*arm_addsi3} (nil))

(insn 85 84 86 4 arch/arm/kernel/signal.c:301 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 209)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691083))
            (set (reg/v:SI 158 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 209)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691083))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 209)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 86 85 87 4 arch/arm/kernel/signal.c:301 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])
        (reg/v:SI 158 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 158 [ __gu_val ])
        (nil)))

(insn 87 86 88 4 arch/arm/kernel/signal.c:302 discrim 4 (set (reg/f:SI 210)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 88 87 89 4 arch/arm/kernel/signal.c:302 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 210)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691088))
            (set (reg/v:SI 157 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 210)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691088))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 89 88 90 4 arch/arm/kernel/signal.c:302 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 157 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ __gu_val ])
        (nil)))

(insn 90 89 91 4 arch/arm/kernel/signal.c:303 discrim 4 (set (reg/f:SI 211)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 84 [0x54]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 4 arch/arm/kernel/signal.c:303 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 211)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691093))
            (set (reg/v:SI 156 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 211)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691093))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 211)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 92 91 93 4 arch/arm/kernel/signal.c:303 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (reg/v:SI 156 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 156 [ __gu_val ])
        (nil)))

(insn 93 92 94 4 arch/arm/kernel/signal.c:304 discrim 4 (set (reg/f:SI 212)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 88 [0x58]))) 4 {*arm_addsi3} (nil))

(insn 94 93 95 4 arch/arm/kernel/signal.c:304 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 212)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691098))
            (set (reg/v:SI 155 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 212)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691098))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 212)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 95 94 96 4 arch/arm/kernel/signal.c:304 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (reg/v:SI 155 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ __gu_val ])
        (nil)))

(insn 96 95 97 4 arch/arm/kernel/signal.c:305 discrim 4 (set (reg/f:SI 213)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 92 [0x5c]))) 4 {*arm_addsi3} (nil))

(insn 97 96 98 4 arch/arm/kernel/signal.c:305 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 213)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691103))
            (set (reg/v:SI 154 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 213)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691103))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 98 97 99 4 arch/arm/kernel/signal.c:305 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg/v:SI 154 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 154 [ __gu_val ])
        (nil)))

(insn 99 98 100 4 arch/arm/kernel/signal.c:306 discrim 4 (set (reg/f:SI 214)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(insn 100 99 104 4 arch/arm/kernel/signal.c:306 discrim 4 (parallel [
            (set (reg/v:SI 170 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 214)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691108))
            (set (reg/v:SI 153 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 214)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 170 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691108))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 104 100 101 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 153 [ __gu_val ])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 101 104 102 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 146 [ D.26146 ])
        (and:SI (reg/v:SI 153 [ __gu_val ])
            (const_int -321 [0xfffffffffffffebf]))) 67 {*arm_andsi3_insn} (nil))

(insn 102 101 105 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 146 [ D.26146 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 105 102 106 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u149(11){ }u150(13){ }u151(25){ }u152(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 153 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 153 170 174 175
;; live  gen 	 24 [cc] 148
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 106 105 107 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 148 [ mode ])
        (and:SI (reg/v:SI 153 [ __gu_val ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 153 [ __gu_val ])
        (nil)))

(insn 108 107 109 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 109 108 110 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175


;; Succ edge  10 [28.0%] 
;; Succ edge  6 [72.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 148 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 218 220 222 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 170 174 175
;; live  gen 	 24 [cc] 218 220 222 226
;; live  kill	 24 [cc]

;; Pred edge  5 [72.0%]  (fallthru)
(note 110 109 111 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 111 110 112 6 NOTE_INSN_DELETED)

(note 112 111 116 6 NOTE_INSN_DELETED)

(note 116 112 120 6 NOTE_INSN_DELETED)

(note 120 116 121 6 NOTE_INSN_DELETED)

(note 121 120 114 6 NOTE_INSN_DELETED)

(insn 114 121 115 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 218)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 115 114 118 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 220 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 218) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 218)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 118 115 122 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 222)
        (zero_extract:SI (reg:SI 220 [ elf_hwcap ])
            (const_int 1 [0x1])
            (const_int 3 [0x3]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 220 [ elf_hwcap ])
        (nil)))

(insn 122 118 123 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (parallel [
            (set (reg:SI 226)
                (and:SI (eq:SI (reg/v:SI 148 [ mode ])
                        (const_int 0 [0x0]))
                    (reg:SI 222)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_DEAD (reg/v:SI 148 [ mode ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 123 122 124 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 226)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(jump_insn 124 123 125 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 145)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175


;; Succ edge  10 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 4 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 170 174 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 174
;; lr  def 	 24 [cc] 147 227 228 229
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 170 174 175
;; live  gen 	 24 [cc] 147 227 228 229
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  6 [50.0%]  (fallthru)
(code_label 125 124 126 7 67 "" [1 uses])

(note 126 125 131 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 131 126 129 7 NOTE_INSN_DELETED)

(insn 129 131 127 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg/f:SI 227)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 127 129 128 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (reg:SI 147 [ D.26138 ])
        (and:SI (reg:SI 146 [ D.26146 ])
            (const_int -208 [0xffffffffffffff30]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.26146 ])
        (nil)))

(insn 128 127 130 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 147 [ D.26138 ])) 167 {*arm_movsi_insn} (nil))

(insn 130 128 132 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (reg:SI 229 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 227) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 227)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512dc3c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 132 130 133 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 229 [ elf_hwcap ])
                        (const_int 8 [0x8]))
                    (const_int 0 [0x0])))
            (set (reg:SI 228)
                (and:SI (reg:SI 229 [ elf_hwcap ])
                    (const_int 8 [0x8])))
        ]) 69 {*andsi3_compare0} (expr_list:REG_DEAD (reg:SI 229 [ elf_hwcap ])
        (nil)))

(jump_insn 133 132 134 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:186 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u182(11){ }u183(13){ }u184(25){ }u185(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 134 133 135 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 232 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 149 [ D.26136 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 232 135 233 8 (set (pc)
        (label_ref 148)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175


;; Succ edge  11 [100.0%] 

(barrier 233 232 138)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u186(11){ }u187(13){ }u188(25){ }u189(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 170 174 175 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 174 228
;; lr  def 	 149 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 170 174 175 228
;; live  gen 	 149 230
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 138 233 139 9 69 "" [1 uses])

(note 139 138 140 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (reg:SI 230)
        (ior:SI (reg:SI 147 [ D.26138 ])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 147 [ D.26138 ])
        (nil)))

(insn 141 140 142 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 174 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 230)
        (expr_list:REG_DEAD (reg/v/f:SI 174 [ regs ])
            (nil))))

(insn 142 141 234 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:189 (set (reg:SI 149 [ D.26136 ])
        (reg:SI 228)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 234 142 235 9 (set (pc)
        (label_ref 148)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175


;; Succ edge  11 [100.0%] 

(barrier 235 234 145)

;; Start of basic block ( 5 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 175
;; live  gen 	 149
;; live  kill	

;; Pred edge  5 [28.0%] 
;; Pred edge  6 [50.0%] 
(code_label 145 235 146 10 68 "" [2 uses])

(note 146 145 147 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 148 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:177 (set (reg:SI 149 [ D.26136 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 8 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149 170 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170
;; lr  def 	 24 [cc] 134 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 170 175
;; live  gen 	 24 [cc] 134 231
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 148 147 149 11 70 "" [2 uses])

(note 149 148 151 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 151 149 150 11 NOTE_INSN_DELETED)

(insn 150 151 152 11 arch/arm/kernel/signal.c:308 (set (reg:SI 231)
        (xor:SI (reg:SI 149 [ D.26136 ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 149 [ D.26136 ])
        (nil)))

(insn 152 150 153 11 arch/arm/kernel/signal.c:320 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 231)
                        (reg/v:SI 170 [ err ]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 134 [ err.477 ])
                (ior:SI (reg:SI 231)
                    (reg/v:SI 170 [ err ])))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg/v:SI 170 [ err ])
            (nil))))

(jump_insn 153 152 154 11 arch/arm/kernel/signal.c:320 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 216)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175


;; Succ edge  12 [61.0%]  (fallthru)
;; Succ edge  18 [39.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u207(11){ }u208(13){ }u209(25){ }u210(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  def 	 24 [cc] 138 139 140 171 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 24 [cc] 138 139 140 171 233
;; live  kill	 24 [cc]

;; Pred edge  11 [61.0%]  (fallthru)
(note 154 153 155 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 245 12 arch/arm/kernel/signal.c:310 (set (reg/v/f:SI 171 [ aux ])
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 232 [0xe8]))) 4 {*arm_addsi3} (nil))

(insn 245 155 158 12 arch/arm/kernel/signal.c:222 discrim 4 (set (reg/v:SI 138 [ err ])
        (reg/v:SI 134 [ err.477 ])) 167 {*arm_movsi_insn} (nil))

(insn 158 245 159 12 arch/arm/kernel/signal.c:222 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/v/f:SI 171 [ aux ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691113))
            (set (reg/v:SI 139 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/v/f:SI 171 [ aux ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691113))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v/f:SI 171 [ aux ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 159 158 160 12 arch/arm/kernel/signal.c:223 discrim 4 (set (reg/f:SI 233)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 236 [0xec]))) 4 {*arm_addsi3} (nil))

(insn 160 159 161 12 arch/arm/kernel/signal.c:223 discrim 4 (parallel [
            (set (reg/v:SI 138 [ err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 233)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691118))
            (set (reg/v:SI 140 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 233)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691118))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 233)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 161 160 162 12 arch/arm/kernel/signal.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ err ])
        (nil)))

(jump_insn 162 161 163 12 arch/arm/kernel/signal.c:225 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 17 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175


;; Succ edge  17 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 175
;; live  gen 	 24 [cc] 237
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 163 162 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 164 163 165 13 NOTE_INSN_DELETED)

(note 165 164 168 13 NOTE_INSN_DELETED)

(note 168 165 169 13 NOTE_INSN_DELETED)

(note 169 168 171 13 NOTE_INSN_DELETED)

(note 171 169 172 13 NOTE_INSN_DELETED)

(note 172 171 173 13 NOTE_INSN_DELETED)

(note 173 172 167 13 NOTE_INSN_DELETED)

(insn 167 173 174 13 arch/arm/kernel/signal.c:227 (set (reg:SI 237)
        (const_int 1447448577 [0x56465001])) 167 {*arm_movsi_insn} (nil))

(insn 174 167 175 13 arch/arm/kernel/signal.c:227 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (ior:SI (ne:SI (reg/v:SI 140 [ __gu_val ])
                    (const_int 288 [0x120]))
                (ne:SI (reg/v:SI 139 [ __gu_val ])
                    (reg:SI 237)))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_DEAD (reg/v:SI 140 [ __gu_val ])
            (expr_list:REG_DEAD (reg/v:SI 139 [ __gu_val ])
                (nil)))))

(jump_insn 175 174 176 13 arch/arm/kernel/signal.c:227 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 180)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175


;; Succ edge  14 [71.0%]  (fallthru)
;; Succ edge  15 [29.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  13 [71.0%]  (fallthru)
(note 176 175 177 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 177 176 236 14 arch/arm/kernel/signal.c:228 (set (reg/v:SI 134 [ err.477 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 236 177 237 14 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  18 [100.0%] 

(barrier 237 236 180)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 137 141 142 143 144 245 246 247 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 175
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 137 141 142 143 144 245 246 247 248 249
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  13 [29.0%] 
(code_label 180 237 181 15 73 "" [1 uses])

(note 181 180 182 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 182 181 184 15 NOTE_INSN_DELETED)

(note 184 182 185 15 NOTE_INSN_DELETED)

(note 185 184 190 15 NOTE_INSN_DELETED)

(note 190 185 240 15 NOTE_INSN_DELETED)

(insn 240 190 187 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 136 [ thread ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 187 240 241 15 arch/arm/kernel/signal.c:234 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 240 [0xf0]))) 4 {*arm_addsi3} (nil))

(insn 241 187 188 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 136 [ thread ])
        (and:SI (reg/v/f:SI 136 [ thread ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 188 241 186 15 arch/arm/kernel/signal.c:234 (set (reg:SI 2 r2)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(insn 186 188 189 15 arch/arm/kernel/signal.c:234 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 136 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(call_insn 189 186 192 15 arch/arm/kernel/signal.c:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x10f3de80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 192 189 246 15 arch/arm/kernel/signal.c:239 discrim 4 (set (reg/f:SI 245)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 496 [0x1f0]))) 4 {*arm_addsi3} (nil))

(insn 246 192 193 15 arch/arm/kernel/signal.c:239 discrim 4 (set (reg/v:SI 133 [ err.480 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 193 246 194 15 arch/arm/kernel/signal.c:239 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 245)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691123))
            (set (reg/v:SI 141 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 245)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691123))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 245)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 194 193 195 15 arch/arm/kernel/signal.c:239 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 692 [0x2b4])) [0 <variable>.vfpstate.hard.fpscr+0 S4 A32])
        (reg/v:SI 141 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ __gu_val ])
        (nil)))

(insn 195 194 196 15 arch/arm/kernel/signal.c:244 discrim 4 (set (reg/f:SI 246)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 504 [0x1f8]))) 4 {*arm_addsi3} (nil))

(insn 196 195 197 15 arch/arm/kernel/signal.c:244 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 246)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691128))
            (set (reg/v:SI 142 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 246)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691128))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 246)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 197 196 200 15 arch/arm/kernel/signal.c:246 (set (reg/v:SI 137 [ fpexc ])
        (ior:SI (reg/v:SI 142 [ __gu_val ])
            (const_int 1073741824 [0x40000000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ __gu_val ])
        (nil)))

(insn 200 197 198 15 arch/arm/kernel/signal.c:251 discrim 4 (set (reg/f:SI 248)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 508 [0x1fc]))) 4 {*arm_addsi3} (nil))

(insn 198 200 199 15 arch/arm/kernel/signal.c:249 (set (reg:SI 247)
        (and:SI (reg/v:SI 137 [ fpexc ])
            (const_int 1879048191 [0x6fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fpexc ])
        (nil)))

(insn 199 198 201 15 arch/arm/kernel/signal.c:249 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 688 [0x2b0])) [0 <variable>.vfpstate.hard.fpexc+0 S4 A64])
        (reg:SI 247)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 247)
        (nil)))

(insn 201 199 202 15 arch/arm/kernel/signal.c:251 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 248)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691133))
            (set (reg/v:SI 143 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 248)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691133))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 248)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 202 201 203 15 arch/arm/kernel/signal.c:251 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 696 [0x2b8])) [0 <variable>.vfpstate.hard.fpinst+0 S4 A64])
        (reg/v:SI 143 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __gu_val ])
        (nil)))

(insn 203 202 204 15 arch/arm/kernel/signal.c:252 discrim 4 (set (reg/f:SI 249)
        (plus:SI (reg/v/f:SI 175 [ sf ])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 175 [ sf ])
        (nil)))

(insn 204 203 206 15 arch/arm/kernel/signal.c:252 discrim 4 (parallel [
            (set (reg/v:SI 133 [ err.480 ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 249)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691138))
            (set (reg/v:SI 144 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 249)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 133 [ err.480 ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691138))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 249)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 206 204 205 15 arch/arm/kernel/signal.c:254 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ err.480 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ err.480 ])
        (nil)))

(insn 205 206 207 15 arch/arm/kernel/signal.c:252 discrim 5 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 700 [0x2bc])) [0 <variable>.vfpstate.hard.fpinst2+0 S4 A32])
        (reg/v:SI 144 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ __gu_val ])
        (nil)))

(jump_insn 207 205 208 15 arch/arm/kernel/signal.c:254 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 213)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136


;; Succ edge  16 [29.0%]  (fallthru)
;; Succ edge  17 [71.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u280(11){ }u281(13){ }u282(25){ }u283(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  15 [29.0%]  (fallthru)
(note 208 207 209 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 209 208 210 16 arch/arm/kernel/signal.c:255 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ thread ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ thread ])
        (nil)))

(call_insn 210 209 238 16 arch/arm/kernel/signal.c:255 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_flush_hwstate") [flags 0x41] <function_decl 0x10b07700 vfp_flush_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 238 210 239 16 (set (pc)
        (label_ref 216)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  18 [100.0%] 

(barrier 239 238 213)

;; Start of basic block ( 12 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  12 [50.0%] 
;; Pred edge  15 [71.0%] 
(code_label 213 239 214 17 72 "" [2 uses])

(note 214 213 215 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 17 arch/arm/kernel/signal.c:226 (set (reg/v:SI 134 [ err.477 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 11 14 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u291(11){ }u292(13){ }u293(25){ }u294(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  11 [39.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
(code_label 216 215 217 18 71 "" [3 uses])

(note 217 216 222 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 222 217 228 18 arch/arm/kernel/signal.c:325 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ err.477 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ err.477 ])
        (nil)))

(insn 228 222 247 18 arch/arm/kernel/signal.c:325 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 247 228 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_rt_sigreturn (sys_rt_sigreturn)[0:1445]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 14 (  1.6)


sys_rt_sigreturn

Dataflow summary:
def_info->table_size = 390, use_info->table_size = 77
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,9u} r1={7d,3u} r2={5d,1u} r3={4d} r11={1d,8u} r12={4d} r13={1d,13u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,8u} r26={1d,7u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={1d} r137={2d,2u} r139={2d,1u} r141={1d,1u} r142={1d,4u} r144={1d,3u} r145={2d,3u} r147={1d,1u} r151={1d,1u} r154={2d,2u} 
;;    total ref usage 459{387d,72u,0e} in 33{30 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d13(1){ }d18(2){ }d22(3){ }d23(11){ }d27(12){ }d28(13){ }d32(14){ }d68(25){ }d69(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 7 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 144 145 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 144 145 147
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 24 [cc] 136 137 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 24 [cc] 136 137 151
;; live  kill	 24 [cc]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144

( 3 )->[4]->( 7 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144

( 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139

( 3 2 5 4 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 154
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139

( 7 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u72(0){ }u73(11){ }u74(13){ }u75(14){ }u76(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 23 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 70 to worklist
  Adding insn 52 to worklist
  Adding insn 66 to worklist
Finished finding needed instructions:
processing block 8 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 60 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 53 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 42 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
  Adding insn 30 to worklist
  Adding insn 27 to worklist
processing block 3 lr out =  0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 76 to worklist
  Adding insn 20 to worklist
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 16 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 2 to 14 -- before reload
;;   ======================================================

;;	  0-->     2 r144=r0                           :cortex_a8_default
;;	  0-->    74 r145=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->     9 r147=`do_no_restart_syscall'      :cortex_a8_load_store_1
;;	  1-->    75 r145=r145&0xffffffffffffffc0      :cortex_a8_default
;;	  2-->    11 r142=[r144+0x34]                  :cortex_a8_load_store_1
;;	  4-->    13 cc=cmp(zxt(r142,0x3,0x0),0x0)     :cortex_a8_default
;;	  4-->    10 [r145+0x2c8]=r147                 :cortex_a8_load_store_1
;;	  6-->    14 pc={(cc!=0x0)?L45:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 14

;;   ======================================================
;;   -- basic block 3 from 20 to 23 -- before reload
;;   ======================================================

;;	  0-->    20 r151=[r145+0x8]                   :cortex_a8_load_store_1
;;	  2-->    76 r137=r151                         :cortex_a8_default
;;	  3-->    21 {r137=asm_operands;r136=asm_operan:nothing
;;	  4-->    22 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  6-->    23 pc={(cc!=0x0)?L45:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 20
;;   new tail = 23

;;   ======================================================
;;   -- basic block 4 from 27 to 31 -- before reload
;;   ======================================================

;;	  0-->    27 r1=r142+0x80                      :cortex_a8_default
;;	  1-->    28 r0=call [`restore_sigframe']      :cortex_a8_issue_branch
;;	 33-->    30 {cc=cmp(r0,0x0);r141=r0;}         :cortex_a8_default
;;	 35-->    31 pc={(cc!=0x0)?L45:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 27
;;   new tail = 31

;;   ======================================================
;;   -- basic block 5 from 34 to 40 -- before reload
;;   ======================================================

;;	  0-->    34 r0=r142+0x88                      :cortex_a8_default
;;	  0-->    35 r1=r141                           :cortex_a8_default
;;	  1-->    36 r2=[r144+0x34]                    :cortex_a8_load_store_1
;;	  2-->    37 r0=call [`do_sigaltstack']        :cortex_a8_issue_branch
;;	 34-->    39 cc=cmp(r0,0xfffffffffffffff2)     :cortex_a8_default
;;	 36-->    40 pc={(cc==0x0)?L45:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 34
;;   new tail = 40

;;   ======================================================
;;   -- basic block 6 from 42 to 70 -- before reload
;;   ======================================================

;;	  0-->    42 r139=[r144]                       :cortex_a8_load_store_1
;;	  0-->    70 pc=L54                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 42
;;   new tail = 70

;;   ======================================================
;;   -- basic block 7 from 72 to 53 -- before reload
;;   ======================================================

;;	  0-->    72 r154=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    50 r0=0xb                            :cortex_a8_default
;;	  1-->    73 r154=r154&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->    51 r1=[r154+0xc]                     :cortex_a8_load_store_1
;;	  4-->    52 call [`force_sig']                :cortex_a8_issue_branch
;;	  4-->    53 r139=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 72
;;   new tail = 53

;;   ======================================================
;;   -- basic block 8 from 60 to 66 -- before reload
;;   ======================================================

;;	  0-->    60 r0=r139                           :cortex_a8_default
;;	  0-->    66 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 60
;;   new tail = 66


;; Procedure interblock/speculative motions == 0/0 




sys_rt_sigreturn

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,9u} r1={7d,3u} r2={5d,1u} r3={4d} r11={1d,8u} r12={4d} r13={1d,13u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,4u} r25={1d,8u} r26={1d,7u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={1d} r137={2d,2u} r139={2d,1u} r141={1d,1u} r142={1d,4u} r144={1d,3u} r145={2d,3u} r147={1d,1u} r151={1d,1u} r154={2d,2u} 
;;    total ref usage 459{387d,72u,0e} in 33{30 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 144 145 147
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 144 145 147
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 12 2 NOTE_INSN_DELETED)

(note 12 7 2 2 NOTE_INSN_DELETED)

(insn 2 12 74 2 arch/arm/kernel/signal.c:358 (set (reg/v/f:SI 144 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 74 2 9 2 arch/arm/kernel/signal.c:362 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 74 75 2 arch/arm/kernel/signal.c:362 (set (reg/f:SI 147)
        (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)) 167 {*arm_movsi_insn} (nil))

(insn 75 9 11 2 arch/arm/kernel/signal.c:362 (set (reg:SI 145)
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 75 13 2 arch/arm/kernel/signal.c:369 (set (reg:SI 142 [ D.24470 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 11 10 2 arch/arm/kernel/signal.c:369 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 142 [ D.24470 ])
                (const_int 3 [0x3])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 10 13 14 2 arch/arm/kernel/signal.c:362 (set (mem/s/f/j:SI (plus:SI (reg:SI 145)
                (const_int 712 [0x2c8])) [0 <variable>.restart_block.fn+0 S4 A64])
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)
            (nil))))

(jump_insn 14 10 15 2 arch/arm/kernel/signal.c:369 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145


;; Succ edge  7 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 145
;; lr  def 	 24 [cc] 136 137 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 145
;; live  gen 	 24 [cc] 136 137 151
;; live  kill	 24 [cc]

;; Pred edge  2 [71.0%]  (fallthru)
(note 15 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 15 76 3 arch/arm/kernel/signal.c:374 (set (reg:SI 151 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 76 20 21 3 arch/arm/kernel/signal.c:374 (set (reg/v:SI 137 [ flag ])
        (reg:SI 151 [ <variable>.addr_limit ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.addr_limit ])
        (nil)))

(insn 21 76 22 3 arch/arm/kernel/signal.c:374 (parallel [
            (set (reg/v:SI 137 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg:SI 142 [ D.24470 ])
                        (const_int 880 [0x370])
                        (reg/v:SI 137 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8636693))
            (set (reg/v:SI 136 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg:SI 142 [ D.24470 ])
                        (const_int 880 [0x370])
                        (reg/v:SI 137 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8636693))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg/v:SI 136 [ roksum ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 22 21 23 3 arch/arm/kernel/signal.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ flag ])
        (nil)))

(jump_insn 23 22 24 3 arch/arm/kernel/signal.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 7 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144


;; Succ edge  7 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 24 29 4 NOTE_INSN_DELETED)

(note 29 25 27 4 NOTE_INSN_DELETED)

(insn 27 29 28 4 arch/arm/kernel/signal.c:377 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 142 [ D.24470 ])
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(call_insn 28 27 30 4 arch/arm/kernel/signal.c:377 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("restore_sigframe") [flags 0x3] <function_decl 0x1140a380 restore_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 28 31 4 arch/arm/kernel/signal.c:377 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 141 [ D.24476 ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 31 30 32 4 arch/arm/kernel/signal.c:377 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144


;; Succ edge  7 [71.0%] 
;; Succ edge  5 [29.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [29.0%]  (fallthru)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 33 32 38 5 NOTE_INSN_DELETED)

(note 38 33 34 5 NOTE_INSN_DELETED)

(insn 34 38 35 5 arch/arm/kernel/signal.c:380 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 142 [ D.24470 ])
            (const_int 136 [0x88]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142 [ D.24470 ])
        (nil)))

(insn 35 34 36 5 arch/arm/kernel/signal.c:380 (set (reg:SI 1 r1)
        (reg:SI 141 [ D.24476 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.24476 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 36 35 37 5 arch/arm/kernel/signal.c:380 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 144 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 39 5 arch/arm/kernel/signal.c:380 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_sigaltstack") [flags 0x41] <function_decl 0x10f0e000 do_sigaltstack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 39 37 40 5 arch/arm/kernel/signal.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int -14 [0xfffffffffffffff2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 40 39 41 5 arch/arm/kernel/signal.c:380 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3782 [0xec6])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144


;; Succ edge  7 [37.8%] 
;; Succ edge  6 [62.2%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 139
;; live  kill	

;; Pred edge  5 [62.2%]  (fallthru)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 70 6 arch/arm/kernel/signal.c:383 (set (reg:SI 139 [ D.24481 ])
        (mem/s/j:SI (reg/v/f:SI 144 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ regs ])
        (nil)))

(jump_insn 70 42 71 6 arch/arm/kernel/signal.c:383 (set (pc)
        (label_ref 54)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  8 [100.0%] 

(barrier 71 70 45)

;; Start of basic block ( 3 2 5 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 154
;; live  kill	 14 [lr]

;; Pred edge  3 [71.0%] 
;; Pred edge  2 [29.0%] 
;; Pred edge  5 [37.8%] 
;; Pred edge  4 [71.0%] 
(code_label 45 71 46 7 78 "" [4 uses])

(note 46 45 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 48 46 72 7 NOTE_INSN_DELETED)

(insn 72 48 50 7 arch/arm/kernel/signal.c:386 (set (reg:SI 154)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 50 72 73 7 arch/arm/kernel/signal.c:386 (set (reg:SI 0 r0)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 73 50 51 7 arch/arm/kernel/signal.c:386 (set (reg:SI 154)
        (and:SI (reg:SI 154)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 51 73 52 7 arch/arm/kernel/signal.c:386 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg:SI 154)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(call_insn 52 51 53 7 arch/arm/kernel/signal.c:386 (parallel [
            (call (mem:SI (symbol_ref:SI ("force_sig") [flags 0x41] <function_decl 0x10f06c80 force_sig>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 53 52 54 7 arch/arm/kernel/signal.c:387 (set (reg:SI 139 [ D.24481 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 54 53 55 8 79 "" [1 uses])

(note 55 54 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 60 55 66 8 arch/arm/kernel/signal.c:388 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ D.24481 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.24481 ])
        (nil)))

(insn 66 60 77 8 arch/arm/kernel/signal.c:388 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 77 66 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_sigreturn (sys_sigreturn)[0:1444]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)


sys_sigreturn

Dataflow summary:
def_info->table_size = 266, use_info->table_size = 61
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,7u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,3u} r25={1d,7u} r26={1d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d} r137={2d,2u} r139={2d,1u} r141={1d,3u} r143={1d,2u} r144={2d,3u} r146={1d,1u} r150={1d,1u} r151={2d,2u} 
;;    total ref usage 323{265d,58u,0e} in 27{25 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d23(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 146
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 146
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144

( 2 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  def 	 24 [cc] 136 137 150
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  gen 	 24 [cc] 136 137 150
;; live  kill	 24 [cc]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139

( 3 2 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 151
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139

( 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u56(0){ }u57(11){ }u58(13){ }u59(14){ }u60(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 23 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 60 to worklist
  Adding insn 42 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
processing block 7 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 50 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 32 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
  Adding insn 29 to worklist
  Adding insn 26 to worklist
processing block 3 lr out =  0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 66 to worklist
  Adding insn 20 to worklist
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 2 to 14 -- before reload
;;   ======================================================

;;	  0-->     2 r143=r0                           :cortex_a8_default
;;	  0-->    64 r144=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->     9 r146=`do_no_restart_syscall'      :cortex_a8_load_store_1
;;	  1-->    65 r144=r144&0xffffffffffffffc0      :cortex_a8_default
;;	  2-->    11 r141=[r143+0x34]                  :cortex_a8_load_store_1
;;	  4-->    13 cc=cmp(zxt(r141,0x3,0x0),0x0)     :cortex_a8_default
;;	  4-->    10 [r144+0x2c8]=r146                 :cortex_a8_load_store_1
;;	  6-->    14 pc={(cc!=0x0)?L35:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 14

;;   ======================================================
;;   -- basic block 3 from 20 to 23 -- before reload
;;   ======================================================

;;	  0-->    20 r150=[r144+0x8]                   :cortex_a8_load_store_1
;;	  2-->    66 r137=r150                         :cortex_a8_default
;;	  3-->    21 {r137=asm_operands;r136=asm_operan:nothing
;;	  4-->    22 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  6-->    23 pc={(cc!=0x0)?L35:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 20
;;   new tail = 23

;;   ======================================================
;;   -- basic block 4 from 26 to 30 -- before reload
;;   ======================================================

;;	  0-->    26 r1=r141                           :cortex_a8_default
;;	  1-->    27 r0=call [`restore_sigframe']      :cortex_a8_issue_branch
;;	 33-->    29 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    30 pc={(cc!=0x0)?L35:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 26
;;   new tail = 30

;;   ======================================================
;;   -- basic block 5 from 32 to 60 -- before reload
;;   ======================================================

;;	  0-->    32 r139=[r143]                       :cortex_a8_load_store_1
;;	  0-->    60 pc=L44                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 32
;;   new tail = 60

;;   ======================================================
;;   -- basic block 6 from 62 to 43 -- before reload
;;   ======================================================

;;	  0-->    62 r151=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    40 r0=0xb                            :cortex_a8_default
;;	  1-->    63 r151=r151&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->    41 r1=[r151+0xc]                     :cortex_a8_load_store_1
;;	  4-->    42 call [`force_sig']                :cortex_a8_issue_branch
;;	  4-->    43 r139=0x0                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 62
;;   new tail = 43

;;   ======================================================
;;   -- basic block 7 from 50 to 56 -- before reload
;;   ======================================================

;;	  0-->    50 r0=r139                           :cortex_a8_default
;;	  0-->    56 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 50
;;   new tail = 56


;; Procedure interblock/speculative motions == 0/0 




sys_sigreturn

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,7u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,3u} r25={1d,7u} r26={1d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r136={1d} r137={2d,2u} r139={2d,1u} r141={1d,3u} r143={1d,2u} r144={2d,3u} r146={1d,1u} r150={1d,1u} r151={2d,2u} 
;;    total ref usage 323{265d,58u,0e} in 27{25 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 146
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 146
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 12 2 NOTE_INSN_DELETED)

(note 12 7 2 2 NOTE_INSN_DELETED)

(insn 2 12 64 2 arch/arm/kernel/signal.c:328 (set (reg/v/f:SI 143 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 64 2 9 2 arch/arm/kernel/signal.c:332 (set (reg:SI 144)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 64 65 2 arch/arm/kernel/signal.c:332 (set (reg/f:SI 146)
        (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)) 167 {*arm_movsi_insn} (nil))

(insn 65 9 11 2 arch/arm/kernel/signal.c:332 (set (reg:SI 144)
        (and:SI (reg:SI 144)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 65 13 2 arch/arm/kernel/signal.c:339 (set (reg:SI 141 [ D.24451 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 11 10 2 arch/arm/kernel/signal.c:339 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 141 [ D.24451 ])
                (const_int 3 [0x3])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 10 13 14 2 arch/arm/kernel/signal.c:332 (set (mem/s/f/j:SI (plus:SI (reg:SI 144)
                (const_int 712 [0x2c8])) [0 <variable>.restart_block.fn+0 S4 A64])
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (symbol_ref:SI ("do_no_restart_syscall") [flags 0x41] <function_decl 0x10aeff00 do_no_restart_syscall>)
            (nil))))

(jump_insn 14 10 15 2 arch/arm/kernel/signal.c:339 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144


;; Succ edge  6 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144
;; lr  def 	 24 [cc] 136 137 150
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144
;; live  gen 	 24 [cc] 136 137 150
;; live  kill	 24 [cc]

;; Pred edge  2 [71.0%]  (fallthru)
(note 15 14 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 15 66 3 arch/arm/kernel/signal.c:344 (set (reg:SI 150 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 66 20 21 3 arch/arm/kernel/signal.c:344 (set (reg/v:SI 137 [ flag ])
        (reg:SI 150 [ <variable>.addr_limit ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150 [ <variable>.addr_limit ])
        (nil)))

(insn 21 66 22 3 arch/arm/kernel/signal.c:344 (parallel [
            (set (reg/v:SI 137 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg:SI 141 [ D.24451 ])
                        (const_int 752 [0x2f0])
                        (reg/v:SI 137 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8632853))
            (set (reg/v:SI 136 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg:SI 141 [ D.24451 ])
                        (const_int 752 [0x2f0])
                        (reg/v:SI 137 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8632853))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg/v:SI 136 [ roksum ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 22 21 23 3 arch/arm/kernel/signal.c:344 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ flag ])
        (nil)))

(jump_insn 23 22 24 3 arch/arm/kernel/signal.c:344 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143


;; Succ edge  6 [71.0%] 
;; Succ edge  4 [29.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%]  (fallthru)
(note 24 23 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 28 24 26 4 NOTE_INSN_DELETED)

(insn 26 28 27 4 arch/arm/kernel/signal.c:347 (set (reg:SI 1 r1)
        (reg:SI 141 [ D.24451 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.24451 ])
        (nil)))

(call_insn 27 26 29 4 arch/arm/kernel/signal.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("restore_sigframe") [flags 0x3] <function_decl 0x1140a380 restore_sigframe>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 27 30 4 arch/arm/kernel/signal.c:347 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 30 29 31 4 arch/arm/kernel/signal.c:347 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143


;; Succ edge  6 [61.0%] 
;; Succ edge  5 [39.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 139
;; live  kill	

;; Pred edge  4 [39.0%]  (fallthru)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 60 5 arch/arm/kernel/signal.c:350 (set (reg:SI 139 [ D.24458 ])
        (mem/s/j:SI (reg/v/f:SI 143 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ regs ])
        (nil)))

(jump_insn 60 32 61 5 arch/arm/kernel/signal.c:350 (set (pc)
        (label_ref 44)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  7 [100.0%] 

(barrier 61 60 35)

;; Start of basic block ( 3 2 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 139 151
;; live  kill	 14 [lr]

;; Pred edge  3 [71.0%] 
;; Pred edge  2 [29.0%] 
;; Pred edge  4 [61.0%] 
(code_label 35 61 36 6 84 "" [3 uses])

(note 36 35 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 38 36 62 6 NOTE_INSN_DELETED)

(insn 62 38 40 6 arch/arm/kernel/signal.c:353 (set (reg:SI 151)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 40 62 63 6 arch/arm/kernel/signal.c:353 (set (reg:SI 0 r0)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 63 40 41 6 arch/arm/kernel/signal.c:353 (set (reg:SI 151)
        (and:SI (reg:SI 151)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 41 63 42 6 arch/arm/kernel/signal.c:353 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg:SI 151)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(call_insn 42 41 43 6 arch/arm/kernel/signal.c:353 (parallel [
            (call (mem:SI (symbol_ref:SI ("force_sig") [flags 0x41] <function_decl 0x10f06c80 force_sig>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 43 42 44 6 arch/arm/kernel/signal.c:354 (set (reg:SI 139 [ D.24458 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 44 43 45 7 85 "" [1 uses])

(note 45 44 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 7 arch/arm/kernel/signal.c:355 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ D.24458 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.24458 ])
        (nil)))

(insn 56 50 67 7 arch/arm/kernel/signal.c:355 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 67 56 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_sigaction (sys_sigaction)[0:1440]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 32 (  1.8)


sys_sigaction

Dataflow summary:
def_info->table_size = 199, use_info->table_size = 165
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,3u} r2={3d,2u} r3={2d} r11={1d,17u} r12={2d} r13={1d,20u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={21d,9u} r25={1d,28u} r26={1d,16u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={2d,1u} r136={2d,1u} r137={2d,5u} r138={2d,3u} r139={1d} r140={2d,3u} r141={1d,1u} r142={2d,1u} r143={1d,1u} r144={2d,1u} r145={1d,1u} r146={2d,5u} r147={1d,1u} r148={2d,3u} r149={1d} r150={2d,3u} r151={3d,2u} r152={2d,1u} r153={2d,1u} r155={1d,1u} r156={1d,6u} r157={1d,8u} r158={2d,2u} r160={1d,1u} r162={1d,1u} r164={1d,1u} r166={1d,1u} r175={1d,1u} r176={2d,2u} r178={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} 
;;    total ref usage 371{204d,167u,0e} in 78{77 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d49(25){ }d50(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 156 157
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 156 157
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 153
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157

( 2 )->[4]->( 16 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 149 150 158 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 149 150 158 160
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157

( 4 )->[5]->( 16 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 156
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  gen 	 24 [cc] 147 148
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157

( 5 )->[6]->( 16 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 24 [cc] 145 146 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  gen 	 24 [cc] 145 146 162
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 156
;; lr  def 	 24 [cc] 141 142 143 144 153 164 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  gen 	 141 142 143 144 153 164 166
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157

( 7 3 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157

( 10 9 )->[11]->( 12 17 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 151 175
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 157

( 11 )->[12]->( 16 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 139 140 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 139 140 176 178
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157

( 12 )->[13]->( 16 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; lr  def 	 24 [cc] 138 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; live  gen 	 24 [cc] 138 179
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157

( 13 )->[14]->( 16 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; lr  def 	 24 [cc] 137 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; live  gen 	 24 [cc] 137 181 182
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157

( 14 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; lr  def 	 24 [cc] 135 136 151 184 185 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; live  gen 	 135 136 151 184 185 187 188
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151

( 5 13 14 4 6 12 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151

( 16 11 15 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u160(0){ }u161(11){ }u162(13){ }u163(14){ }u164(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 129 to worklist
  Adding insn 22 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 51 to worklist
  Adding insn 131 to worklist
  Adding insn 76 to worklist
  Adding insn 64 to worklist
  Adding insn 84 to worklist
  Adding insn 90 to worklist
  Adding insn 88 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 133 to worklist
  Adding insn 106 to worklist
  Adding insn 102 to worklist
  Adding insn 125 to worklist
Finished finding needed instructions:
processing block 17 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 119 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
  Adding insn 112 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
  Adding insn 107 to worklist
  Adding insn 148 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 147 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
  Adding insn 96 to worklist
  Adding insn 146 to worklist
  Adding insn 93 to worklist
  Adding insn 92 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
  Adding insn 89 to worklist
  Adding insn 145 to worklist
  Adding insn 86 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 144 to worklist
  Adding insn 81 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 157
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 66 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
  Adding insn 58 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
  Adding insn 53 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
  Adding insn 50 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
  Adding insn 47 to worklist
  Adding insn 143 to worklist
  Adding insn 41 to worklist
  Adding insn 142 to worklist
  Adding insn 35 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157
  Adding insn 32 to worklist
  Adding insn 141 to worklist
  Adding insn 29 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
  Adding insn 26 to worklist
  Adding insn 140 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 139 to worklist
  Adding insn 19 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
  Adding insn 11 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
  Adding insn 8 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 26 count 34 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 2 to 9 -- before reload
;;   ======================================================

;;	  0-->     8 {cc=cmp(r1,0x0);r156=r1;}         :cortex_a8_default
;;	  0-->     2 r155=r0                           :cortex_a8_default
;;	  1-->     4 r157=r2                           :cortex_a8_default
;;	  2-->     9 pc={(cc!=0x0)?L14:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 2
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 11 to 129 -- before reload
;;   ======================================================

;;	  0-->    11 r153=r156                         :cortex_a8_default
;;	  0-->   129 pc=L48                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 11
;;   new tail = 129

;;   ======================================================
;;   -- basic block 4 from 137 to 22 -- before reload
;;   ======================================================

;;	  0-->   137 r158=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   138 r158=r158&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->    19 r160=[r158+0x8]                   :cortex_a8_load_store_1
;;	  5-->   139 r150=r160                         :cortex_a8_default
;;	  6-->    20 {r150=asm_operands;r149=asm_operan:nothing
;;	  7-->    21 cc=cmp(r150,0x0)                  :cortex_a8_default
;;	  9-->    22 pc={(cc!=0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 137
;;   new tail = 22

;;   ======================================================
;;   -- basic block 5 from 140 to 27 -- before reload
;;   ======================================================

;;	  0-->   140 r148=r150                         :cortex_a8_default
;;	  1-->    25 {r148=asm_operands;r147=asm_operan:nothing
;;	  2-->    26 cc=cmp(r148,0x0)                  :cortex_a8_default
;;	  4-->    27 pc={(cc!=0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 140
;;   new tail = 27

;;   ======================================================
;;   -- basic block 6 from 29 to 33 -- before reload
;;   ======================================================

;;	  0-->   141 r146=r148                         :cortex_a8_default
;;	  0-->    29 r162=r156+0xc                     :cortex_a8_default
;;	  1-->    31 {r146=asm_operands;r145=asm_operan:nothing
;;	  2-->    32 cc=cmp(r146,0x0)                  :cortex_a8_default
;;	  4-->    33 pc={(cc!=0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 29
;;   new tail = 33

;;   ======================================================
;;   -- basic block 7 from 35 to 47 -- before reload
;;   ======================================================

;;	  0-->    35 r164=r156+0x8                     :cortex_a8_default
;;	  0-->   142 r144=r146                         :cortex_a8_default
;;	  1-->    37 {r144=asm_operands;r143=asm_operan:nothing
;;	  2-->    38 [sfp-0x14]=r147                   :cortex_a8_load_store_1
;;	  2-->    41 r166=r156+0x4                     :cortex_a8_default
;;	  3-->    39 [sfp-0xc]=r145                    :cortex_a8_load_store_1
;;	  3-->   143 r142=r146                         :cortex_a8_default
;;	  4-->    40 [sfp-0x10]=r143                   :cortex_a8_load_store_1
;;	  5-->    43 {r142=asm_operands;r141=asm_operan:nothing
;;	  6-->    47 r153=sfp-0x14                     :cortex_a8_default
;;	  6-->    44 [sfp-0x8]=r141                    :cortex_a8_load_store_1
;;	  7-->    46 [sfp-0x4]=r146                    :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 7
;;   new head = 35
;;   new tail = 47

;;   ======================================================
;;   -- basic block 8 from 50 to 51 -- before reload
;;   ======================================================

;;	  0-->    50 cc=cmp(r157,0x0)                  :cortex_a8_default
;;	  2-->    51 pc={(cc!=0x0)?L56:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 50
;;   new tail = 51

;;   ======================================================
;;   -- basic block 9 from 53 to 131 -- before reload
;;   ======================================================

;;	  0-->    53 r152=r157                         :cortex_a8_default
;;	  0-->   131 pc=L59                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 53
;;   new tail = 131

;;   ======================================================
;;   -- basic block 10 from 58 to 58 -- before reload
;;   ======================================================

;;	  0-->    58 r152=sfp-0x28                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 58
;;   new tail = 58

;;   ======================================================
;;   -- basic block 11 from 61 to 76 -- before reload
;;   ======================================================

;;	  0-->    61 r0=r155                           :cortex_a8_default
;;	  0-->    62 r1=r153                           :cortex_a8_default
;;	  1-->    63 r2=r152                           :cortex_a8_default
;;	  2-->    64 r0=call [`do_sigaction']          :cortex_a8_issue_branch
;;	  2-->    66 r151=r0                           :cortex_a8_default
;;	  3-->    74 {r175=r151==0x0&r157!=0x0;clobber :cortex_a8_default
;;	  4-->    75 cc=cmp(r175,0x0)                  :cortex_a8_default
;;	  6-->    76 pc={(cc==0x0)?L113:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 61
;;   new tail = 76

;;   ======================================================
;;   -- basic block 12 from 135 to 84 -- before reload
;;   ======================================================

;;	  0-->   135 r176=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   136 r176=r176&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->    81 r178=[r176+0x8]                   :cortex_a8_load_store_1
;;	  5-->   144 r140=r178                         :cortex_a8_default
;;	  6-->    82 {r140=asm_operands;r139=asm_operan:nothing
;;	  7-->    83 cc=cmp(r140,0x0)                  :cortex_a8_default
;;	  9-->    84 pc={(cc!=0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 135
;;   new tail = 84

;;   ======================================================
;;   -- basic block 13 from 86 to 90 -- before reload
;;   ======================================================

;;	  0-->   145 r138=r140                         :cortex_a8_default
;;	  0-->    86 r179=[sfp-0x28]                   :cortex_a8_load_store_1
;;	  1-->    88 {r138=asm_operands;clobber cc;}   :nothing
;;	  2-->    89 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  4-->    90 pc={(cc!=0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 86
;;   new tail = 90

;;   ======================================================
;;   -- basic block 14 from 92 to 97 -- before reload
;;   ======================================================

;;	  0-->   146 r137=r138                         :cortex_a8_default
;;	  0-->    92 r181=[sfp-0x20]                   :cortex_a8_load_store_1
;;	  1-->    93 r182=r157+0xc                     :cortex_a8_default
;;	  2-->    95 {r137=asm_operands;clobber cc;}   :nothing
;;	  3-->    96 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  5-->    97 pc={(cc!=0x0)?L110:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 92
;;   new tail = 97

;;   ======================================================
;;   -- basic block 15 from 99 to 133 -- before reload
;;   ======================================================

;;	  0-->    99 r184=[sfp-0x24]                   :cortex_a8_load_store_1
;;	  0-->   100 r185=r157+0x8                     :cortex_a8_default
;;	  1-->   147 r136=r137                         :cortex_a8_default
;;	  2-->   102 {r136=asm_operands;clobber cc;}   :nothing
;;	  3-->   104 r188=r157+0x4                     :cortex_a8_default
;;	  3-->   103 r187=[sfp-0x1c]                   :cortex_a8_load_store_1
;;	  4-->   148 r135=r137                         :cortex_a8_default
;;	  5-->   106 {r135=asm_operands;clobber cc;}   :nothing
;;	  6-->   107 r151=r137                         :cortex_a8_default
;;	  6-->   133 pc=L113                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 99
;;   new tail = 133

;;   ======================================================
;;   -- basic block 16 from 112 to 112 -- before reload
;;   ======================================================

;;	  0-->   112 r151=0xfffffffffffffff2           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 112
;;   new tail = 112

;;   ======================================================
;;   -- basic block 17 from 119 to 125 -- before reload
;;   ======================================================

;;	  0-->   119 r0=r151                           :cortex_a8_default
;;	  0-->   125 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 119
;;   new tail = 125


;; Procedure interblock/speculative motions == 0/0 




sys_sigaction

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,3u} r2={3d,2u} r3={2d} r11={1d,17u} r12={2d} r13={1d,20u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={21d,9u} r25={1d,28u} r26={1d,16u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={2d,1u} r136={2d,1u} r137={2d,5u} r138={2d,3u} r139={1d} r140={2d,3u} r141={1d,1u} r142={2d,1u} r143={1d,1u} r144={2d,1u} r145={1d,1u} r146={2d,5u} r147={1d,1u} r148={2d,3u} r149={1d} r150={2d,3u} r151={3d,2u} r152={2d,1u} r153={2d,1u} r155={1d,1u} r156={1d,6u} r157={1d,8u} r158={2d,2u} r160={1d,1u} r162={1d,1u} r164={1d,1u} r166={1d,1u} r175={1d,1u} r176={2d,2u} r178={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r188={1d,1u} 
;;    total ref usage 371{204d,167u,0e} in 78{77 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 156 157
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 156 157
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 6 5 2 NOTE_INSN_DELETED)

(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 2 2 arch/arm/kernel/signal.c:89 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 1 r1 [ act ])
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 156 [ act ])
                (reg:SI 1 r1 [ act ]))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 1 r1 [ act ])
        (nil)))

(insn 2 8 4 2 arch/arm/kernel/signal.c:85 (set (reg/v:SI 155 [ sig ])
        (reg:SI 0 r0 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sig ])
        (nil)))

(insn 4 2 9 2 arch/arm/kernel/signal.c:85 (set (reg/v/f:SI 157 [ oact ])
        (reg:SI 2 r2 [ oact ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ oact ])
        (nil)))

(jump_insn 9 4 10 2 arch/arm/kernel/signal.c:89 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1910 [0x776])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157


;; Succ edge  4 [19.1%] 
;; Succ edge  3 [80.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 153
;; live  kill	

;; Pred edge  2 [80.9%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 129 3 arch/arm/kernel/signal.c:100 discrim 2 (set (reg/f:SI 153 [ iftmp.307 ])
        (reg/v/f:SI 156 [ act ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 156 [ act ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 129 11 130 3 (set (pc)
        (label_ref 48)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157


;; Succ edge  8 [100.0%] 

(barrier 130 129 14)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc] 149 150 158 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155 156 157
;; live  gen 	 24 [cc] 149 150 158 160
;; live  kill	 24 [cc]

;; Pred edge  2 [19.1%] 
(code_label 14 130 15 4 90 "" [1 uses])

(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 15 137 4 NOTE_INSN_DELETED)

(insn 137 17 138 4 arch/arm/kernel/signal.c:91 (set (reg:SI 158)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 138 137 19 4 arch/arm/kernel/signal.c:91 (set (reg:SI 158)
        (and:SI (reg:SI 158)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 138 139 4 arch/arm/kernel/signal.c:91 (set (reg:SI 160 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 158)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 139 19 20 4 arch/arm/kernel/signal.c:91 (set (reg/v:SI 150 [ flag ])
        (reg:SI 160 [ <variable>.addr_limit ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 160 [ <variable>.addr_limit ])
        (nil)))

(insn 20 139 21 4 arch/arm/kernel/signal.c:91 (parallel [
            (set (reg/v:SI 150 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int 16 [0x10])
                        (reg/v:SI 150 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8600470))
            (set (reg/v:SI 149 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int 16 [0x10])
                        (reg/v:SI 150 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8600470))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg/v:SI 149 [ roksum ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 21 20 22 4 arch/arm/kernel/signal.c:91 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 150 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 4 arch/arm/kernel/signal.c:91 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 4 -> ( 16 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157


;; Succ edge  16 [96.0%] 
;; Succ edge  5 [4.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 156
;; lr  def 	 24 [cc] 147 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 155 156 157
;; live  gen 	 24 [cc] 147 148
;; live  kill	 24 [cc]

;; Pred edge  4 [4.0%]  (fallthru)
(note 23 22 140 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 140 23 25 5 arch/arm/kernel/signal.c:92 discrim 4 (set (reg/v:SI 148 [ __gu_err ])
        (reg/v:SI 150 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ flag ])
        (nil)))

(insn 25 140 26 5 arch/arm/kernel/signal.c:92 discrim 4 (parallel [
            (set (reg/v:SI 148 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 148 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691146))
            (set (reg/v:SI 147 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/v/f:SI 156 [ act ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 148 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691146))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 26 25 27 5 arch/arm/kernel/signal.c:91 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ __gu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 5 arch/arm/kernel/signal.c:91 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 5 -> ( 16 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157


;; Succ edge  16 [96.0%] 
;; Succ edge  6 [4.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 24 [cc] 145 146 162
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 155 156 157
;; live  gen 	 24 [cc] 145 146 162
;; live  kill	 24 [cc]

;; Pred edge  5 [4.0%]  (fallthru)
(note 28 27 141 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 141 28 29 6 arch/arm/kernel/signal.c:93 discrim 4 (set (reg/v:SI 146 [ __gu_err ])
        (reg/v:SI 148 [ __gu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ __gu_err ])
        (nil)))

(insn 29 141 31 6 arch/arm/kernel/signal.c:93 discrim 4 (set (reg/f:SI 162)
        (plus:SI (reg/v/f:SI 156 [ act ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 31 29 32 6 arch/arm/kernel/signal.c:93 discrim 4 (parallel [
            (set (reg/v:SI 146 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 162)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691151))
            (set (reg/v:SI 145 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 162)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 146 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691151))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 32 31 33 6 arch/arm/kernel/signal.c:91 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ __gu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 33 32 34 6 arch/arm/kernel/signal.c:91 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 16 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 155 156 157


;; Succ edge  16 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 156
;; lr  def 	 24 [cc] 141 142 143 144 153 164 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 155 156 157
;; live  gen 	 141 142 143 144 153 164 166
;; live  kill	 24 [cc]

;; Pred edge  6 [61.0%]  (fallthru)
(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 142 7 arch/arm/kernel/signal.c:95 discrim 4 (set (reg/f:SI 164)
        (plus:SI (reg/v/f:SI 156 [ act ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 142 35 37 7 arch/arm/kernel/signal.c:95 discrim 4 (set (reg/v:SI 144 [ __gu_err ])
        (reg/v:SI 146 [ __gu_err ])) 167 {*arm_movsi_insn} (nil))

(insn 37 142 38 7 arch/arm/kernel/signal.c:95 discrim 4 (parallel [
            (set (reg/v:SI 144 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 164)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 144 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691156))
            (set (reg/v:SI 143 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 164)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 144 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691156))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 164)
        (expr_list:REG_UNUSED (reg/v:SI 144 [ __gu_err ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 38 37 41 7 arch/arm/kernel/signal.c:92 discrim 5 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 new_ka.sa.sa_handler+0 S4 A32])
        (reg/v:SI 147 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ __gu_val ])
        (nil)))

(insn 41 38 39 7 arch/arm/kernel/signal.c:96 discrim 4 (set (reg/f:SI 166)
        (plus:SI (reg/v/f:SI 156 [ act ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 156 [ act ])
        (nil)))

(insn 39 41 143 7 arch/arm/kernel/signal.c:93 discrim 5 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 new_ka.sa.sa_restorer+0 S4 A32])
        (reg/v:SI 145 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ __gu_val ])
        (nil)))

(insn 143 39 40 7 arch/arm/kernel/signal.c:96 discrim 4 (set (reg/v:SI 142 [ __gu_err ])
        (reg/v:SI 146 [ __gu_err ])) 167 {*arm_movsi_insn} (nil))

(insn 40 143 43 7 arch/arm/kernel/signal.c:95 discrim 5 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 new_ka.sa.sa_flags+0 S4 A32])
        (reg/v:SI 143 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ __gu_val ])
        (nil)))

(insn 43 40 47 7 arch/arm/kernel/signal.c:96 discrim 4 (parallel [
            (set (reg/v:SI 142 [ __gu_err ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 166)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 142 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691161))
            (set (reg/v:SI 141 [ __gu_val ])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/f:SI 166)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 142 [ __gu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691161))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 166)
        (expr_list:REG_UNUSED (reg/v:SI 142 [ __gu_err ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 47 43 44 7 arch/arm/kernel/signal.c:100 discrim 1 (set (reg/f:SI 153 [ iftmp.307 ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -20 [0xffffffffffffffec]))) 4 {*arm_addsi3} (nil))

(insn 44 47 46 7 include/linux/signal.h:201 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 new_ka.sa.sa_mask.sig+0 S4 A32])
        (reg/v:SI 141 [ __gu_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ __gu_val ])
        (nil)))

(insn 46 44 48 7 include/linux/signal.h:206 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 new_ka.sa.sa_mask.sig+4 S4 A32])
        (reg/v:SI 146 [ __gu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ __gu_err ])
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 48 46 49 8 91 "" [1 uses])

(note 49 48 50 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 8 arch/arm/kernel/signal.c:100 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ oact ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 8 arch/arm/kernel/signal.c:100 discrim 3 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157


;; Succ edge  10 [85.0%] 
;; Succ edge  9 [15.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	

;; Pred edge  8 [15.0%]  (fallthru)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 131 9 arch/arm/kernel/signal.c:100 discrim 5 (set (reg/f:SI 152 [ iftmp.308 ])
        (reg/v/f:SI 157 [ oact ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 131 53 132 9 (set (pc)
        (label_ref 59)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157


;; Succ edge  11 [100.0%] 

(barrier 132 131 56)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 155 157
;; live  gen 	 152
;; live  kill	

;; Pred edge  8 [85.0%] 
(code_label 56 132 57 10 93 "" [1 uses])

(note 57 56 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 10 arch/arm/kernel/signal.c:100 discrim 4 (set (reg/f:SI 152 [ iftmp.308 ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -40 [0xffffffffffffffd8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 155 157
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 151 175
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 59 58 60 11 94 "" [1 uses])

(note 60 59 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 65 60 67 11 NOTE_INSN_DELETED)

(note 67 65 69 11 NOTE_INSN_DELETED)

(note 69 67 70 11 NOTE_INSN_DELETED)

(note 70 69 72 11 NOTE_INSN_DELETED)

(note 72 70 73 11 NOTE_INSN_DELETED)

(note 73 72 61 11 NOTE_INSN_DELETED)

(insn 61 73 62 11 arch/arm/kernel/signal.c:100 discrim 6 (set (reg:SI 0 r0)
        (reg/v:SI 155 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ sig ])
        (nil)))

(insn 62 61 63 11 arch/arm/kernel/signal.c:100 discrim 6 (set (reg:SI 1 r1)
        (reg/f:SI 153 [ iftmp.307 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153 [ iftmp.307 ])
        (nil)))

(insn 63 62 64 11 arch/arm/kernel/signal.c:100 discrim 6 (set (reg:SI 2 r2)
        (reg/f:SI 152 [ iftmp.308 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152 [ iftmp.308 ])
        (nil)))

(call_insn 64 63 66 11 arch/arm/kernel/signal.c:100 discrim 6 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_sigaction") [flags 0x41] <function_decl 0x10f06f80 do_sigaction>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 66 64 74 11 arch/arm/kernel/signal.c:102 (set (reg/v:SI 151 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 74 66 75 11 arch/arm/kernel/signal.c:102 (parallel [
            (set (reg:SI 175)
                (and:SI (eq:SI (reg/v:SI 151 [ ret ])
                        (const_int 0 [0x0]))
                    (ne:SI (reg/v/f:SI 157 [ oact ])
                        (const_int 0 [0x0]))))
            (clobber (reg:CC 24 cc))
        ]) 290 {*and_scc_scc_nodom} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 75 74 76 11 arch/arm/kernel/signal.c:102 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(jump_insn 76 75 77 11 arch/arm/kernel/signal.c:102 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 113)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 11 -> ( 12 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 157


;; Succ edge  12 [4.0%]  (fallthru)
;; Succ edge  17 [96.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 139 140 176 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; live  gen 	 24 [cc] 139 140 176 178
;; live  kill	 24 [cc]

;; Pred edge  11 [4.0%]  (fallthru)
(note 77 76 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 79 77 135 12 NOTE_INSN_DELETED)

(insn 135 79 136 12 arch/arm/kernel/signal.c:103 (set (reg:SI 176)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 136 135 81 12 arch/arm/kernel/signal.c:103 (set (reg:SI 176)
        (and:SI (reg:SI 176)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 81 136 144 12 arch/arm/kernel/signal.c:103 (set (reg:SI 178 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 176)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 144 81 82 12 arch/arm/kernel/signal.c:103 (set (reg/v:SI 140 [ flag ])
        (reg:SI 178 [ <variable>.addr_limit ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ <variable>.addr_limit ])
        (nil)))

(insn 82 144 83 12 arch/arm/kernel/signal.c:103 (parallel [
            (set (reg/v:SI 140 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 157 [ oact ])
                        (const_int 16 [0x10])
                        (reg/v:SI 140 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8602006))
            (set (reg/v:SI 139 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 157 [ oact ])
                        (const_int 16 [0x10])
                        (reg/v:SI 140 [ flag ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8602006))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg/v:SI 139 [ roksum ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 83 82 84 12 arch/arm/kernel/signal.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 85 12 arch/arm/kernel/signal.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 12 -> ( 16 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157


;; Succ edge  16 [96.0%] 
;; Succ edge  13 [4.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; lr  def 	 24 [cc] 138 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; live  gen 	 24 [cc] 138 179
;; live  kill	 24 [cc]

;; Pred edge  12 [4.0%]  (fallthru)
(note 85 84 145 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 145 85 86 13 arch/arm/kernel/signal.c:104 discrim 4 (set (reg/v:SI 138 [ __pu_err ])
        (reg/v:SI 140 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ flag ])
        (nil)))

(insn 86 145 88 13 arch/arm/kernel/signal.c:104 discrim 4 (set (reg/f:SI 179 [ old_ka.sa.sa_handler ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 old_ka.sa.sa_handler+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 88 86 89 13 arch/arm/kernel/signal.c:104 discrim 4 (parallel [
            (set (reg/v:SI 138 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 179 [ old_ka.sa.sa_handler ])
                        (reg/v/f:SI 157 [ oact ])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 138 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691172))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 179 [ old_ka.sa.sa_handler ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 89 88 90 13 arch/arm/kernel/signal.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 90 89 91 13 arch/arm/kernel/signal.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 13 -> ( 16 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157


;; Succ edge  16 [96.0%] 
;; Succ edge  14 [4.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; lr  def 	 24 [cc] 137 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; live  gen 	 24 [cc] 137 181 182
;; live  kill	 24 [cc]

;; Pred edge  13 [4.0%]  (fallthru)
(note 91 90 146 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 146 91 92 14 arch/arm/kernel/signal.c:105 discrim 4 (set (reg/v:SI 137 [ __pu_err ])
        (reg/v:SI 138 [ __pu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ __pu_err ])
        (nil)))

(insn 92 146 93 14 arch/arm/kernel/signal.c:105 discrim 4 (set (reg/f:SI 181 [ old_ka.sa.sa_restorer ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 old_ka.sa.sa_restorer+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 93 92 95 14 arch/arm/kernel/signal.c:105 discrim 4 (set (reg/f:SI 182)
        (plus:SI (reg/v/f:SI 157 [ oact ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 95 93 96 14 arch/arm/kernel/signal.c:105 discrim 4 (parallel [
            (set (reg/v:SI 137 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/f:SI 181 [ old_ka.sa.sa_restorer ])
                        (reg/f:SI 182)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 137 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691178))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_DEAD (reg/f:SI 181 [ old_ka.sa.sa_restorer ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 96 95 97 14 arch/arm/kernel/signal.c:103 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ __pu_err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 98 14 arch/arm/kernel/signal.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157


;; Succ edge  16 [39.0%] 
;; Succ edge  15 [61.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; lr  def 	 24 [cc] 135 136 151 184 185 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 157
;; live  gen 	 135 136 151 184 185 187 188
;; live  kill	 24 [cc]

;; Pred edge  14 [61.0%]  (fallthru)
(note 98 97 99 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 15 arch/arm/kernel/signal.c:107 discrim 4 (set (reg:SI 184 [ old_ka.sa.sa_flags ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 old_ka.sa.sa_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 147 15 arch/arm/kernel/signal.c:107 discrim 4 (set (reg/f:SI 185)
        (plus:SI (reg/v/f:SI 157 [ oact ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 147 100 102 15 arch/arm/kernel/signal.c:107 discrim 4 (set (reg/v:SI 136 [ __pu_err ])
        (reg/v:SI 137 [ __pu_err ])) 167 {*arm_movsi_insn} (nil))

(insn 102 147 104 15 arch/arm/kernel/signal.c:107 discrim 4 (parallel [
            (set (reg/v:SI 136 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 184 [ old_ka.sa.sa_flags ])
                        (reg/f:SI 185)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 136 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691184))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 185)
        (expr_list:REG_DEAD (reg:SI 184 [ old_ka.sa.sa_flags ])
            (expr_list:REG_UNUSED (reg/v:SI 136 [ __pu_err ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 104 102 103 15 arch/arm/kernel/signal.c:108 discrim 4 (set (reg/f:SI 188)
        (plus:SI (reg/v/f:SI 157 [ oact ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 157 [ oact ])
        (nil)))

(insn 103 104 148 15 arch/arm/kernel/signal.c:108 discrim 4 (set (reg:SI 187 [ old_ka.sa.sa_mask.sig ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 old_ka.sa.sa_mask.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 148 103 106 15 arch/arm/kernel/signal.c:108 discrim 4 (set (reg/v:SI 135 [ __pu_err ])
        (reg/v:SI 137 [ __pu_err ])) 167 {*arm_movsi_insn} (nil))

(insn 106 148 107 15 arch/arm/kernel/signal.c:108 discrim 4 (parallel [
            (set (reg/v:SI 135 [ __pu_err ])
                (asm_operands/v:SI ("1:	str	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 187 [ old_ka.sa.sa_mask.sig ])
                        (reg/f:SI 188)
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 135 [ __pu_err ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 8691190))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 188)
        (expr_list:REG_DEAD (reg:SI 187 [ old_ka.sa.sa_mask.sig ])
            (expr_list:REG_UNUSED (reg/v:SI 135 [ __pu_err ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 107 106 133 15 arch/arm/kernel/signal.c:108 discrim 4 (set (reg/v:SI 151 [ ret ])
        (reg/v:SI 137 [ __pu_err ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ __pu_err ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 133 107 134 15 (set (pc)
        (label_ref 113)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151


;; Succ edge  17 [100.0%] 

(barrier 134 133 110)

;; Start of basic block ( 5 13 14 4 6 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 151
;; live  kill	

;; Pred edge  5 [96.0%] 
;; Pred edge  13 [96.0%] 
;; Pred edge  14 [39.0%] 
;; Pred edge  4 [96.0%] 
;; Pred edge  6 [39.0%] 
;; Pred edge  12 [96.0%] 
(code_label 110 134 111 16 92 "" [6 uses])

(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 16 arch/arm/kernel/signal.c:94 (set (reg/v:SI 151 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 11 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  11 [96.0%] 
;; Pred edge  15 [100.0%] 
(code_label 113 112 114 17 95 "" [2 uses])

(note 114 113 119 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 119 114 125 17 arch/arm/kernel/signal.c:112 (set (reg/i:SI 0 r0)
        (reg/v:SI 151 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ ret ])
        (nil)))

(insn 125 119 149 17 arch/arm/kernel/signal.c:112 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 17 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 149 125 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sys_sigsuspend (sys_sigsuspend)[0:1439]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


sys_sigsuspend

Dataflow summary:
def_info->table_size = 742, use_info->table_size = 62
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={13d,7u} r1={10d,3u} r2={7d,1u} r3={7d} r11={1d,2u} r12={7d} r13={1d,9u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={1d,2u} r26={1d,1u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r136={1d,1u} r139={1d,2u} r141={1d,2u} r146={1d,1u,1d} r147={2d,8u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r155={1d,2u} r156={1d,2u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r170={1d,1u} 
;;    total ref usage 795{739d,55u,1e} in 37{31 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d22(1){ }d29(2){ }d36(3){ }d37(11){ }d44(12){ }d45(13){ }d52(14){ }d113(25){ }d114(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 139 141 146 147 149 151 152 155 156 159 160 161 164 166 167 170
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 136 139 141 146 147 149 151 152 155 156 159 160 161 164 166 167 170
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u57(0){ }u58(11){ }u59(13){ }u60(14){ }u61(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 73 to worklist
  Adding insn 62 to worklist
  Adding insn 56 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 43 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 24 to worklist
  Adding insn 16 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 67 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 4 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;;   ======================================================
;;   -- basic block 2 from 4 to 73 -- before reload
;;   ======================================================

;;	  0-->    77 r147=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->     4 r146=r2                           :cortex_a8_default
;;	  1-->    78 r147=r147&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->    32 r161=0x0                          :cortex_a8_default
;;	  3-->    11 r149=[r147+0xc]                   :cortex_a8_load_store_1
;;	  6-->    12 r151=[r149+0x3ac]                 :cortex_a8_load_store_1
;;	  8-->    13 r152=r151+0x500                   :cortex_a8_default
;;	  9-->    15 r0=r152+0x4                       :cortex_a8_default
;;	 10-->    16 call [`_raw_spin_lock_irq']       :cortex_a8_issue_branch
;;	 10-->    20 r141=[r147+0xc]                   :cortex_a8_load_store_1
;;	 11-->    29 r160=r146&0xfffffffffffbffff      :cortex_a8_default
;;	 12-->    22 r156=r141+0x3b0                   :cortex_a8_default
;;	 12-->    21 r155=r141+0x3c0                   :cortex_a8_default
;;	 13-->    30 r159=r160&0xfffffffffffffeff      :cortex_a8_default
;;	 14-->    23 {r0=[r156];r1=[r156+0x4];}        :cortex_a8_load_store_1
;;	 17-->    24 {[r155]=r0;[r155+0x4]=r1;}        :cortex_a8_load_store_1
;;	 18-->    28 r139=[r147+0xc]                   :cortex_a8_load_store_1
;;	 21-->    31 [r139+0x3b0]=r159                 :cortex_a8_load_store_1
;;	 22-->    33 [r139+0x3b4]=r161                 :cortex_a8_load_store_1
;;	 23-->    34 call [`recalc_sigpending']        :cortex_a8_issue_branch
;;	 23-->    38 r164=[r147+0xc]                   :cortex_a8_load_store_1
;;	 26-->    39 r166=[r164+0x3ac]                 :cortex_a8_load_store_1
;;	 28-->    40 r167=r166+0x500                   :cortex_a8_default
;;	 29-->    42 r0=r167+0x4                       :cortex_a8_default
;;	 30-->    43 call [`_raw_spin_unlock_irq']     :cortex_a8_issue_branch
;;	 30-->    47 r136=[r147+0xc]                   :cortex_a8_load_store_1
;;	 31-->    48 r170=0x1                          :cortex_a8_default
;;	 33-->    49 [r136]=r170                       :cortex_a8_load_store_1
;;	 34-->    50 call [`schedule']                 :cortex_a8_issue_branch
;;	 34-->    54 r0=0x14                           :cortex_a8_default
;;	 35-->    55 r1=r147                           :cortex_a8_default
;;	 36-->    56 call [`_set_bit']                 :cortex_a8_issue_branch
;;	 36-->    60 r0=r161                           :cortex_a8_default
;;	 37-->    61 r1=r147                           :cortex_a8_default
;;	 38-->    62 call [`_set_bit']                 :cortex_a8_issue_branch
;;	 38-->    67 r0=0xfffffffffffffdfe             :cortex_a8_load_store_1
;;	 39-->    73 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 39
;;   new head = 4
;;   new tail = 73


;; Procedure interblock/speculative motions == 0/0 




sys_sigsuspend

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={13d,7u} r1={10d,3u} r2={7d,1u} r3={7d} r11={1d,2u} r12={7d} r13={1d,9u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={1d,2u} r26={1d,1u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r136={1d,1u} r139={1d,2u} r141={1d,2u} r146={1d,1u,1d} r147={2d,8u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r155={1d,2u} r156={1d,2u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r170={1d,1u} 
;;    total ref usage 795{739d,55u,1e} in 37{31 regular + 6 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 139 141 146 147 149 151 152 155 156 159 160 161 164 166 167 170
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 136 139 141 146 147 149 151 152 155 156 159 160 161 164 166 167 170
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 14 2 NOTE_INSN_DELETED)

(note 14 9 41 2 NOTE_INSN_DELETED)

(note 41 14 63 2 NOTE_INSN_DELETED)

(note 63 41 77 2 NOTE_INSN_DELETED)

(insn 77 63 4 2 include/linux/spinlock.h:310 (set (reg:SI 147)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 4 77 78 2 arch/arm/kernel/signal.c:68 (set (reg/v:SI 146 [ mask ])
        (reg:SI 2 r2 [ mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ mask ])
        (nil)))

(insn 78 4 32 2 include/linux/spinlock.h:310 (set (reg:SI 147)
        (and:SI (reg:SI 147)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 32 78 11 2 include/linux/signal.h:206 (set (reg:SI 161)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 32 12 2 include/linux/spinlock.h:310 (set (reg/f:SI 149 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/spinlock.h:310 (set (reg/f:SI 151 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 149 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ <variable>.task ])
        (nil)))

(insn 13 12 15 2 include/linux/spinlock.h:310 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 151 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 151 [ <variable>.sighand ])
        (nil)))

(insn 15 13 16 2 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 152)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 152)
        (nil)))

(call_insn 16 15 20 2 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b48280 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 20 16 29 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/f:SI 141 [ D.26262 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 20 22 2 include/linux/signal.h:201 (set (reg:SI 160)
        (and:SI (reg/v:SI 146 [ mask ])
            (const_int -262145 [0xfffffffffffbffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ mask ])
        (nil)))

(insn 22 29 21 2 arch/arm/kernel/signal.c:71 (set (reg/f:SI 156)
        (plus:SI (reg/f:SI 141 [ D.26262 ])
            (const_int 944 [0x3b0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 141 [ D.26262 ])
        (nil)))

(insn 21 22 30 2 arch/arm/kernel/signal.c:71 (set (reg/f:SI 155)
        (plus:SI (reg/f:SI 141 [ D.26262 ])
            (const_int 960 [0x3c0]))) 4 {*arm_addsi3} (nil))

(insn 30 21 23 2 include/linux/signal.h:201 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -257 [0xfffffffffffffeff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 146 [ mask ])
                (const_int -262401 [0xfffffffffffbfeff]))
            (nil))))

(insn 23 30 24 2 arch/arm/kernel/signal.c:71 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/j:SI (reg/f:SI 156) [0 <variable>.blocked+0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s/j:SI (plus:SI (reg/f:SI 156)
                        (const_int 4 [0x4])) [0 <variable>.blocked+4 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 156)
        (nil)))

(insn 24 23 28 2 arch/arm/kernel/signal.c:71 (parallel [
            (set (mem/s/j:SI (reg/f:SI 155) [0 <variable>.saved_sigmask+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s/j:SI (plus:SI (reg/f:SI 155)
                        (const_int 4 [0x4])) [0 <variable>.saved_sigmask+4 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(insn 28 24 31 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/f:SI 139 [ D.26268 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 28 33 2 include/linux/signal.h:201 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26268 ])
                (const_int 944 [0x3b0])) [0 <variable>.blocked.sig+0 S4 A64])
        (reg:SI 159)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 33 31 34 2 include/linux/signal.h:206 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26268 ])
                (const_int 948 [0x3b4])) [0 <variable>.blocked.sig+4 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.26268 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 34 33 38 2 arch/arm/kernel/signal.c:73 (parallel [
            (call (mem:SI (symbol_ref:SI ("recalc_sigpending") [flags 0x41] <function_decl 0x10f2c680 recalc_sigpending>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 38 34 39 2 include/linux/spinlock.h:335 (set (reg/f:SI 164 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 include/linux/spinlock.h:335 (set (reg/f:SI 166 [ <variable>.sighand ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 164 [ <variable>.task ])
                (const_int 940 [0x3ac])) [0 <variable>.sighand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 164 [ <variable>.task ])
        (nil)))

(insn 40 39 42 2 include/linux/spinlock.h:335 (set (reg/f:SI 167)
        (plus:SI (reg/f:SI 166 [ <variable>.sighand ])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 166 [ <variable>.sighand ])
        (nil)))

(insn 42 40 43 2 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 167)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 167)
        (nil)))

(call_insn 43 42 47 2 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b48600 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 43 48 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/f:SI 136 [ D.26284 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 2 arch/arm/kernel/signal.c:76 (set (reg:SI 170)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 arch/arm/kernel/signal.c:76 (set (mem/s/v/j:SI (reg/f:SI 136 [ D.26284 ]) [0 <variable>.state+0 S4 A64])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg/f:SI 136 [ D.26284 ])
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(call_insn 50 49 54 2 arch/arm/kernel/signal.c:77 (parallel [
            (call (mem:SI (symbol_ref:SI ("schedule") [flags 0x41] <function_decl 0x10e69680 schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 54 50 55 2 include/linux/thread_info.h:64 (set (reg:SI 0 r0)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 2 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(call_insn 56 55 60 2 include/linux/thread_info.h:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109cee80 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 60 56 61 2 include/linux/thread_info.h:64 (set (reg:SI 0 r0)
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 61 60 62 2 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(call_insn 62 61 67 2 include/linux/thread_info.h:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109cee80 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 67 62 73 2 arch/arm/kernel/signal.c:80 (set (reg/i:SI 0 r0)
        (const_int -514 [0xfffffffffffffdfe])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -514 [0xfffffffffffffdfe])
        (nil)))

(insn 73 67 80 2 arch/arm/kernel/signal.c:80 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 80 73 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
