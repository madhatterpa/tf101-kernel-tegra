
;; Function twd_set_mode (twd_set_mode)[0:688]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 6 3 }
;; 3 succs { 5 4 }
;; 4 succs { 7 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)

In insn 27, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 27 not profitable

In insn 41, replacing
 (mem/v:SI (reg/f:SI 134 [ D.14163 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 146 [ twd_base ])
            (const_int 8 [0x8])) [0 S4 A32])
Changed insn 41
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 41.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 40.
deferring deletion of insn with uid = 33.
deferring deletion of insn with uid = 27.
Deleted 3 trivially dead insns

Number of successful forward propagations: 1



twd_set_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r3={2d} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={3d,1u} r134={1d} r135={1d} r136={1d,1u} r137={1d,2u} r139={1d,3u} r140={1d} r141={1d,1u,1d} r144={1d,2u} r145={1d,1u} r146={1d,2u} 
;;    total ref usage 193{144d,48u,1e} in 19{18 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,3] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,3] 134[134,1] 135[135,1] 136[136,1] 137[137,1] 139[138,1] 140[139,1] 141[140,1] 144[141,1] 145[142,1] 146[143,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 28, 29
;; rd  gen 	(2)
27, 137
;; rd  kill	(4)
25, 26, 27, 137

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/kernel/smp_twd.c:37 (set (reg/v:SI 137 [ mode ])
        (reg:SI 0 r0 [ mode ])) 167 {*arm_movsi_insn} (nil))

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/smp_twd.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ mode ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 47 2 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(12)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 29, 137


;; Succ edge  6 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(12)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 29, 137
;; rd  gen 	(1)
26
;; rd  kill	(3)
25, 26, 27

;; Pred edge  2 [71.0%]  (fallthru)
(note 47 8 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 47 10 3 arch/arm/kernel/smp_twd.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ mode ])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 14 3 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
2, 5, 7, 9, 10, 12, 13, 15, 26, 28, 29, 137


;; Succ edge  5 [29.0%] 
;; Succ edge  4 [71.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
2, 5, 7, 9, 10, 12, 13, 15, 26, 28, 29, 137
;; rd  gen 	(1)
133
;; rd  kill	(3)
131, 132, 133

;; Pred edge  3 [71.0%]  (fallthru)
(note 14 10 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 18 4 arch/arm/kernel/smp_twd.c:54 (set (reg/v:SI 133 [ ctrl ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 26, 28, 29, 133, 137


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
2, 5, 7, 9, 10, 12, 13, 15, 26, 28, 29, 137
;; rd  gen 	(1)
132
;; rd  kill	(3)
131, 132, 133

;; Pred edge  3 [29.0%] 
(code_label 18 15 19 5 4 "" [1 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 23 5 arch/arm/kernel/smp_twd.c:49 (set (reg/v:SI 133 [ ctrl ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 26, 28, 29, 132, 137


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 139 140 141 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 135 136 139 140 141 144
;; live  kill	 14 [lr]
;; rd  in  	(12)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 29, 137
;; rd  gen 	(8)
0, 131, 135, 136, 138, 139, 140, 141
;; rd  kill	(14)
0, 1, 2, 14, 15, 131, 132, 133, 135, 136, 138, 139, 140, 141

;; Pred edge  2 [29.0%] 
(code_label 23 20 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 28 6 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 136 [ twd_base.201 ])
        (mem/f/c/i:SI (reg/f:SI 139) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 26 29 6 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 141 [ twd_timer_rate ])
        (mem/c/i:SI (plus:SI (reg/f:SI 139)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 6 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 0 r0)
        (reg:SI 141 [ twd_timer_rate ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 6 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 31 30 32 6 arch/arm/kernel/smp_twd.c:45 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 34 6 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 144)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (udiv:SI (reg:SI 141 [ twd_timer_rate ])
            (const_int 100 [0x64]))
        (nil)))

(insn 34 32 35 6 arch/arm/kernel/smp_twd.c:45 (set (mem/v:SI (reg/f:SI 136 [ twd_base.201 ]) [0 S4 A32])
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 6 arch/arm/kernel/smp_twd.c:43 (set (reg/v:SI 133 [ ctrl ])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(18)
0, 5, 7, 9, 10, 12, 13, 27, 28, 29, 131, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134 145 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 134 145 146
;; live  kill	
;; rd  in  	(23)
0, 2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 29, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(3)
134, 142, 143
;; rd  kill	(3)
134, 142, 143

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 36 35 37 7 5 "" [0 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 41 7 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 146 [ twd_base ])
        (mem/f/c/i:SI (reg/f:SI 145) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 39 0 7 arch/arm/kernel/smp_twd.c:57 (set (mem/v:SI (plus:SI (reg/f:SI 146 [ twd_base ])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v:SI 133 [ ctrl ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 27.
deleting insn with uid = 33.
deleting insn with uid = 40.
verify found no changes in insn with uid = 41.
ending the processing of deferred insns

;; Function twd_set_next_event (twd_set_next_event)[0:689]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 10, replacing
 (mem/v:SI (reg/f:SI 137 [ D.14171 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base.204 ])
            (const_int 8 [0x8])) [0 S4 A32])
Changed insn 10
deferring rescan insn with uid = 10.
deferring rescan insn with uid = 10.

In insn 13, replacing
 (mem/v:SI (reg/f:SI 136 [ D.14172 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base.204 ])
            (const_int 4 [0x4])) [0 S4 A32])
Changed insn 13
deferring rescan insn with uid = 13.
deferring rescan insn with uid = 13.

In insn 14, replacing
 (reg/f:SI 142)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 14 not profitable

In insn 17, replacing
 (mem/v:SI (reg/f:SI 133 [ temp.276 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 144 [ twd_base ])
            (const_int 8 [0x8])) [0 S4 A32])
Changed insn 17
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 17.

In insn 22, replacing
 (reg:SI 139 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 22 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 16.
deferring deletion of insn with uid = 14.
deferring deletion of insn with uid = 12.
deferring deletion of insn with uid = 9.
Deleted 4 trivially dead insns

Number of successful forward propagations: 3



twd_set_next_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d} r134={1d,1u} r135={1d,1u} r136={1d} r137={1d} r138={1d,4u} r139={1d,1u} r140={1d,1u} r142={1d,3u} r143={1d} r144={1d,2u} 
;;    total ref usage 46{22d,24u,0e} in 11{11 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 138[16,1] 139[17,1] 140[18,1] 142[19,1] 143[20,1] 144[21,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135 136 137 138 139 140 142 143 144
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136 137 138 139 140 142 143 144
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(12)
0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  kill	(13)
0, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/kernel/smp_twd.c:62 (set (reg/v:SI 140 [ evt ])
        (reg:SI 0 r0 [ evt ])) 167 {*arm_movsi_insn} (nil))

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 138 [ twd_base.204 ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 arch/arm/kernel/smp_twd.c:63 (set (reg/v:SI 135 [ ctrl ])
        (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base.204 ])
                (const_int 8 [0x8])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 2 arch/arm/kernel/smp_twd.c:65 (set (reg/v:SI 134 [ ctrl.273 ])
        (ior:SI (reg/v:SI 135 [ ctrl ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 13 11 15 2 arch/arm/kernel/smp_twd.c:67 (set (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base.204 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 140 [ evt ])) 167 {*arm_movsi_insn} (nil))

(insn 15 13 17 2 arch/arm/kernel/smp_twd.c:68 (set (reg/f:SI 144 [ twd_base ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 15 18 2 arch/arm/kernel/smp_twd.c:68 (set (mem/v:SI (plus:SI (reg/f:SI 144 [ twd_base ])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v:SI 134 [ ctrl.273 ])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 22 2 arch/arm/kernel/smp_twd.c:71 (set (reg:SI 139 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 18 28 2 arch/arm/kernel/smp_twd.c:71 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 28 22 0 2 arch/arm/kernel/smp_twd.c:71 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 9.
deleting insn with uid = 12.
deleting insn with uid = 14.
deleting insn with uid = 16.
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
ending the processing of deferred insns

;; Function twd_timer_ack (twd_timer_ack)[0:690]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

In insn 8, replacing
 (mem/v:SI (reg/f:SI 135 [ D.14179 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base ])
            (const_int 12 [0xc])) [0 S4 A32])
Changed insn 8
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 8.

In insn 18, replacing
 (mem/v:SI (reg/f:SI 135 [ D.14179 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base ])
            (const_int 12 [0xc])) [0 S4 A32])
Changed insn 18
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 18.

In insn 18, replacing
 (reg:SI 139)
 with (const_int 1 [0x1])
Changes to insn 18 not recognized
 Setting REG_EQUAL note

In insn 19, replacing
 (reg:SI 139)
 with (const_int 1 [0x1])
Changes to insn 19 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 22.
deferring deletion of insn with uid = 7.
Deleted 2 trivially dead insns

Number of successful forward propagations: 2



twd_timer_ack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,2u} r134={1d,2u} r135={1d} r136={1d} r137={1d,1u} r138={1d,3u} r139={1d,2u} 
;;    total ref usage 53{20d,33u,0e} in 11{11 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,2] 134[14,1] 135[15,1] 136[16,1] 137[17,1] 138[18,1] 139[19,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(5)
9, 14, 15, 17, 18
;; rd  kill	(5)
9, 14, 15, 17, 18

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 138 [ twd_base ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 6 9 2 arch/arm/kernel/smp_twd.c:81 (set (reg:SI 134 [ D.14180 ])
        (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base ])
                (const_int 12 [0xc])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/smp_twd.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.14180 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/smp_twd.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18


;; Succ edge  4 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18
;; rd  gen 	(1)
13
;; rd  kill	(2)
12, 13

;; Pred edge  2 [39.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 15 3 arch/arm/kernel/smp_twd.c:86 (set (reg:SI 133 [ D.14183 ])
        (reg:SI 134 [ D.14180 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 133 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 133 139
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18
;; rd  gen 	(2)
12, 19
;; rd  kill	(3)
12, 13, 19

;; Pred edge  2 [61.0%] 
(code_label 15 12 16 4 15 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/smp_twd.c:82 (set (reg:SI 139)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 arch/arm/kernel/smp_twd.c:82 (set (mem/v:SI (plus:SI (reg/f:SI 138 [ twd_base ])
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 19 18 20 4 arch/arm/kernel/smp_twd.c:83 (set (reg:SI 133 [ D.14183 ])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 136
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19
;; rd  gen 	(2)
0, 16
;; rd  kill	(3)
0, 1, 16

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 5 16 "" [0 uses])

(note 21 20 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 21 32 5 arch/arm/kernel/smp_twd.c:87 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.14183 ])) 167 {*arm_movsi_insn} (nil))

(insn 32 26 0 5 arch/arm/kernel/smp_twd.c:87 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 7.
deleting insn with uid = 22.
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 18.
ending the processing of deferred insns

;; Function twd_cpufreq_transition (twd_cpufreq_transition)[0:692]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 14, replacing
 (subreg:SI (reg:QI 137) 0)
 with (reg:SI 138)
Changed insn 14
deferring rescan insn with uid = 14.

In insn 14, replacing
 (subreg:SI (reg:QI 139) 0)
 with (reg:SI 140)
Changed insn 14
deferring rescan insn with uid = 14.

In insn 22, replacing
 (reg/f:SI 144)
 with (symbol_ref:SI ("twd_update_frequency") [flags 0x3] <function_decl 0x10fa8000 twd_update_frequency>)
Changes to insn 22 not profitable

In insn 32, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 1 [0x1])
Changes to insn 32 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 13.
deferring deletion of insn with uid = 10.
Deleted 2 trivially dead insns

Number of successful forward propagations: 2



twd_cpufreq_transition

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={3d,2u} r3={3d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d} r138={1d,1u} r139={1d} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 184{146d,38u,0e} in 20{19 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,2] 13[16,1] 14[17,2] 15[19,1] 16[20,1] 17[21,1] 18[22,1] 19[23,1] 20[24,1] 21[25,1] 22[26,1] 23[27,1] 24[28,4] 25[32,1] 26[33,1] 27[34,1] 28[35,1] 29[36,1] 30[37,1] 31[38,1] 32[39,1] 33[40,1] 34[41,1] 35[42,1] 36[43,1] 37[44,1] 38[45,1] 39[46,1] 40[47,1] 41[48,1] 42[49,1] 43[50,1] 44[51,1] 45[52,1] 46[53,1] 47[54,1] 48[55,1] 49[56,1] 50[57,1] 51[58,1] 52[59,1] 53[60,1] 54[61,1] 55[62,1] 56[63,1] 57[64,1] 58[65,1] 59[66,1] 60[67,1] 61[68,1] 62[69,1] 63[70,1] 64[71,1] 65[72,1] 66[73,1] 67[74,1] 68[75,1] 69[76,1] 70[77,1] 71[78,1] 72[79,1] 73[80,1] 74[81,1] 75[82,1] 76[83,1] 77[84,1] 78[85,1] 79[86,1] 80[87,1] 81[88,1] 82[89,1] 83[90,1] 84[91,1] 85[92,1] 86[93,1] 87[94,1] 88[95,1] 89[96,1] 90[97,1] 91[98,1] 92[99,1] 93[100,1] 94[101,1] 95[102,1] 96[103,1] 97[104,1] 98[105,1] 99[106,1] 100[107,1] 101[108,1] 102[109,1] 103[110,1] 104[111,1] 105[112,1] 106[113,1] 107[114,1] 108[115,1] 109[116,1] 110[117,1] 111[118,1] 112[119,1] 113[120,1] 114[121,1] 115[122,1] 116[123,1] 117[124,1] 118[125,1] 119[126,1] 120[127,1] 121[128,1] 122[129,1] 123[130,1] 124[131,1] 125[132,1] 126[133,1] 127[134,1] 133[135,1] 135[136,1] 136[137,1] 137[138,1] 138[139,1] 139[140,1] 140[141,1] 141[142,1] 142[143,1] 143[144,1] 144[145,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137 138 139 140 141 142 143
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137 138 139 140 141 142 143
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 12, 13, 15, 16, 18, 32, 33
;; rd  gen 	(10)
29, 136, 137, 138, 139, 140, 141, 142, 143, 144
;; rd  kill	(13)
28, 29, 30, 31, 136, 137, 138, 139, 140, 141, 142, 143, 144

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 2 arch/arm/kernel/smp_twd.c:102 (set (reg/v:SI 135 [ state ])
        (reg:SI 1 r1 [ state ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/smp_twd.c:102 (set (reg/v/f:SI 136 [ data ])
        (reg:SI 2 r2 [ data ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ state ])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (nil))

(insn 9 8 11 2 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 138)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 11 9 12 2 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ state ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(insn 12 11 14 2 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 140)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 14 12 15 2 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 141)
        (ior:SI (reg:SI 138)
            (reg:SI 140))) 89 {*arm_iorsi3} (nil))

(insn 15 14 16 2 arch/arm/kernel/smp_twd.c:110 (set (reg:QI 142)
        (subreg:QI (reg:SI 141) 0)) 178 {*arm_movqi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 143)
        (zero_extend:SI (reg:QI 142))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 17 16 18 2 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 2 arch/arm/kernel/smp_twd.c:110 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(20)
3, 6, 9, 12, 13, 15, 16, 18, 29, 32, 33, 136, 137, 138, 139, 140, 141, 142, 143, 144


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 144
;; live  kill	 14 [lr]
;; rd  in  	(20)
3, 6, 9, 12, 13, 15, 16, 18, 29, 32, 33, 136, 137, 138, 139, 140, 141, 142, 143, 144
;; rd  gen 	(2)
1, 145
;; rd  kill	(7)
0, 1, 2, 3, 17, 18, 145

;; Pred edge  2 [39.0%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/kernel/smp_twd.c:111 (set (reg/f:SI 144)
        (symbol_ref:SI ("twd_update_frequency") [flags 0x3] <function_decl 0x10fa8000 twd_update_frequency>)) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 0 r0)
        (mem/s/j:SI (reg/v/f:SI 136 [ data ]) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 1 r1)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("twd_update_frequency") [flags 0x3] <function_decl 0x10fa8000 twd_update_frequency>)
        (nil)))

(insn 23 22 24 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 26 3 arch/arm/kernel/smp_twd.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8e80 smp_call_function_single>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
1, 6, 9, 12, 13, 15, 16, 29, 32, 33, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(22)
1, 3, 6, 9, 12, 13, 15, 16, 18, 29, 32, 33, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145
;; rd  gen 	(2)
0, 135
;; rd  kill	(5)
0, 1, 2, 3, 135

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 26 25 27 4 21 "" [1 uses])

(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 32 4 arch/arm/kernel/smp_twd.c:115 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 32 28 38 4 arch/arm/kernel/smp_twd.c:115 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 38 32 0 4 arch/arm/kernel/smp_twd.c:115 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 6, 9, 12, 13, 15, 16, 18, 29, 32, 33, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 10.
deleting insn with uid = 13.
rescanning insn with uid = 14.
deleting insn with uid = 14.
ending the processing of deferred insns

;; Function twd_update_frequency (twd_update_frequency)[0:691]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 10, replacing
 (reg/f:SI 137)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 10 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 14.
deferring deletion of insn with uid = 10.
Deleted 2 trivially dead insns

Number of successful forward propagations: 0



twd_update_frequency

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,6u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d} r134={1d,1u} r135={1d,2u} r137={1d,3u} r138={1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 286{257d,28u,1e} in 15{13 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,5] 1[5,4] 2[9,3] 3[12,3] 11[15,1] 12[16,3] 13[19,1] 14[20,2] 15[22,2] 16[24,2] 17[26,2] 18[28,2] 19[30,2] 20[32,2] 21[34,2] 22[36,2] 23[38,2] 24[40,2] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,1] 135[248,1] 137[249,1] 138[250,1] 139[251,1] 140[252,1] 141[253,1] 142[254,1] 143[255,1] 144[256,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 138 139 140 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 137 138 139 140 141 142 143 144
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 8, 11, 14, 15, 18, 19, 21, 42, 43
;; rd  gen 	(12)
0, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256
;; rd  kill	(18)
0, 1, 2, 3, 4, 20, 21, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/smp_twd.c:95 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 7 9 2 arch/arm/kernel/smp_twd.c:95 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 11 2 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 135 [ twd_timer_rate.208 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 9 12 2 arch/arm/kernel/smp_twd.c:95 (set (mem/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 135 [ twd_timer_rate.208 ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/smp_twd.c:97 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 15 2 arch/arm/kernel/smp_twd.c:97 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 139)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5255831)) -1 (nil))

(insn 15 13 16 2 arch/arm/kernel/smp_twd.c:97 (set (reg/f:SI 140)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 142)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 18 17 19 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 143 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 141)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 144)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 143 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 140)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 0 r0)
        (mem/f:SI (plus:SI (reg/v:SI 134 [ __ptr ])
                (reg:SI 144)) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 1 r1)
        (reg:SI 135 [ twd_timer_rate.208 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 22 21 0 2 arch/arm/kernel/smp_twd.c:97 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clockevents_update_freq") [flags 0x41] <function_decl 0x10f21900 clockevents_update_freq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 8, 11, 14, 15, 18, 19, 42, 43, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 10.
deleting insn with uid = 14.
ending the processing of deferred insns

;; Function twd_cpufreq_init (twd_cpufreq_init)[0:693]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 1 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)

In insn 16, replacing
 (reg:SI 133 [ D.14221 ])
 with (const_int 0 [0x0])
Changes to insn 16 not profitable

In insn 28, replacing
 (reg:SI 133 [ D.14221 ])
 with (const_int 0 [0x0])
Changes to insn 28 not profitable

In insn 22, replacing
 (reg/f:SI 138)
 with (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
Changes to insn 22 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 16.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



twd_cpufreq_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,2u} r135={1d} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 169{136d,33u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,1] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,3] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 134[132,1] 135[133,1] 136[134,1] 138[135,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 15, 28, 29
;; rd  gen 	(3)
27, 132, 134
;; rd  kill	(5)
25, 26, 27, 132, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 134 [ twd_clk.210 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ twd_clk.210 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 15, 27, 28, 29, 132, 134


;; Succ edge  4 [15.0%] 
;; Succ edge  3 [85.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(13)
3, 6, 8, 10, 11, 13, 14, 15, 27, 28, 29, 132, 134
;; rd  gen 	(1)
26
;; rd  kill	(3)
25, 26, 27

;; Pred edge  2 [85.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ twd_clk.210 ])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 3 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 15, 26, 28, 29, 132, 134


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 135
;; live  kill	
;; rd  in  	(14)
3, 6, 8, 10, 11, 13, 14, 15, 26, 27, 28, 29, 132, 134
;; rd  gen 	(3)
0, 131, 133
;; rd  kill	(6)
0, 1, 2, 3, 131, 133

;; Pred edge  2 [15.0%] 
;; Pred edge  3 [0.0%]  (fallthru)
(code_label 12 11 13 4 30 "" [1 uses])

(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 28 4 arch/arm/kernel/smp_twd.c:127 (set (reg:SI 133 [ D.14221 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 28 14 34 4 arch/arm/kernel/smp_twd.c:128 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.14221 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 28 19 4 arch/arm/kernel/smp_twd.c:128 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 6, 8, 10, 11, 13, 14, 15, 26, 27, 28, 29, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 138
;; live  kill	
;; rd  in  	(13)
3, 6, 8, 10, 11, 13, 14, 15, 26, 28, 29, 132, 134
;; rd  gen 	(2)
1, 135
;; rd  kill	(5)
0, 1, 2, 3, 135

;; Pred edge  3 [100.0%] 
(code_label 19 34 20 5 31 "" [1 uses])

(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 arch/arm/kernel/smp_twd.c:124 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 5 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 23 22 24 5 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 24 23 0 5 arch/arm/kernel/smp_twd.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpufreq_register_notifier") [flags 0x41] <function_decl 0x10e9fe00 cpufreq_register_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 6, 8, 10, 11, 13, 14, 15, 26, 28, 29, 132, 134, 135


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 16.
ending the processing of deferred insns

;; Function twd_timer_setup (twd_timer_setup)[0:696] (unlikely executed)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 17 18 19 20 21 23 24 25
;;
;; Loop 2
;;  header 19, latch 18
;;  depth 1, outer 0
;;  nodes: 19 18 21 20
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 15 14
;; 2 succs { 3 8 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 10 9 }
;; 9 succs { 10 25 }
;; 10 succs { 11 24 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 12 14 }
;; 14 succs { 17 15 }
;; 15 succs { 12 17 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 18 20 }
;; 20 succs { 23 21 }
;; 21 succs { 18 23 }
;; 23 succs { 24 }
;; 24 succs { 1 }
;; 25 succs { 24 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 47 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 48 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 48 (    2)

In insn 12, replacing
 (reg/f:SI 153)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fc9390>)
Changes to insn 12 not profitable

In insn 20, replacing
 (reg/f:SI 154)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10fe42c0>)
Changes to insn 20 not profitable

In insn 34, replacing
 (reg/f:SI 155)
 with (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10fb2e10>)
Changes to insn 34 not profitable

In insn 61, replacing
 (reg/f:SI 160)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10fcab40>)
Changes to insn 61 not profitable

In insn 66, replacing
 (plus:DI (reg:DI 137 [ D.14354 ])
        (reg:DI 161))
 with (plus:DI (reg:DI 137 [ D.14354 ])
        (const_int 1 [0x1]))
Changes to insn 66 not recognized
 Setting REG_EQUAL note

In insn 90, replacing
 (plus:DI (reg/v:DI 144 [ waitjiffies ])
        (reg:DI 162))
 with (plus:DI (reg/v:DI 144 [ waitjiffies ])
        (const_int 5 [0x5]))
Changes to insn 90 not recognized
 Setting REG_EQUAL note

In insn 95, replacing
 (mem/v:SI (reg/f:SI 139 [ D.14350 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 164 [ twd_base ])
            (const_int 8 [0x8])) [0 S4 A32])
Changed insn 95
deferring rescan insn with uid = 95.
deferring rescan insn with uid = 95.

In insn 95, replacing
 (reg:SI 165)
 with (const_int 1 [0x1])
Changes to insn 95 not recognized
 Setting REG_EQUAL note

In insn 96, replacing
 (reg/f:SI 163)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 96 not profitable

In insn 100, replacing
 (mem/v:SI (reg/f:SI 140 [ D.14349 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 167 [ twd_base ])
            (const_int 4 [0x4])) [0 S4 A32])
Changed insn 100
deferring rescan insn with uid = 100.
deferring rescan insn with uid = 100.

In insn 100, replacing
 (reg:SI 168)
 with (const_int -1 [0xffffffffffffffff])
Changes to insn 100 not recognized
 Setting REG_EQUAL note

In insn 126, replacing
 (mem/v:SI (reg/f:SI 133 [ temp.409 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 170 [ twd_base ])
            (const_int 4 [0x4])) [0 S4 A32])
Changed insn 126
deferring rescan insn with uid = 126.
deferring rescan insn with uid = 126.

In insn 129, replacing
 (mult:SI (reg:SI 172)
        (reg:SI 171))
 with (mult:SI (reg:SI 171)
        (const_int 20 [0x14]))
Changes to insn 129 not recognized
 Setting REG_EQUAL note

In insn 130, replacing
 (reg/f:SI 169)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 130 not profitable

In insn 145, replacing
 (reg/f:SI 174)
 with (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10ff0a80>)
Changes to insn 145 not profitable

In insn 155, replacing
 (mem/v:SI (reg/f:SI 148 [ D.14283 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 190 [ twd_base ])
            (const_int 8 [0x8])) [0 S4 A32])
Changed insn 155
deferring rescan insn with uid = 155.
deferring rescan insn with uid = 155.

In insn 155, replacing
 (reg:SI 191)
 with (const_int 0 [0x0])
Changes to insn 155 not recognized
 Setting REG_EQUAL note

In insn 157, replacing
 (reg/f:SI 192)
 with (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)
Changes to insn 157 not recognized
 Setting REG_EQUAL note

In insn 159, replacing
 (reg:SI 193)
 with (const_int 7 [0x7])
Changes to insn 159 not recognized
 Setting REG_EQUAL note

In insn 161, replacing
 (reg:SI 194)
 with (const_int 350 [0x15e])
Changes to insn 161 not recognized
 Setting REG_EQUAL note

In insn 163, replacing
 (reg/f:SI 195)
 with (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)
Changes to insn 163 not recognized
 Setting REG_EQUAL note

In insn 165, replacing
 (reg/f:SI 196)
 with (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)
Changes to insn 165 not recognized
 Setting REG_EQUAL note

In insn 175, replacing
 (reg/f:SI 189)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 175 not profitable

In insn 189, replacing
 (reg/f:SI 157)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 189 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 189.
deferring deletion of insn with uid = 175.
deferring deletion of insn with uid = 168.
deferring deletion of insn with uid = 153.
deferring deletion of insn with uid = 141.
deferring deletion of insn with uid = 130.
deferring deletion of insn with uid = 125.
deferring deletion of insn with uid = 113.
deferring deletion of insn with uid = 98.
deferring deletion of insn with uid = 96.
deferring deletion of insn with uid = 93.
deferring deletion of insn with uid = 79.
deferring deletion of insn with uid = 27.
Deleted 13 trivially dead insns

Number of successful forward propagations: 4



twd_timer_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={34d,26u} r1={27d,12u} r2={21d,2u} r3={20d,1u} r11={1d,23u} r12={19d} r13={1d,43u,1d} r14={18d,1u} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={32d,14u} r25={1d,23u} r26={1d,22u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} r133={1d} r134={1d,2u} r135={1d,3u} r136={1d} r137={1d,1u} r139={1d} r140={1d} r142={1d,3u,2d} r143={1d,1u} r144={1d,3u} r145={2d,4u} r146={1d,3u} r147={1d,1u} r148={1d} r149={1d,1u} r150={1d,8u} r151={1d,1u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,3u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,3u} r164={1d,2u} r165={1d,1u} r166={1d} r167={1d,2u} r168={1d,1u} r169={1d,3u} r170={1d,2u} r171={1d,1u} r172={1d,1u} r173={1d} r174={1d,1u} r178={1d,1u} r182={1d,1d} r188={1d,1u} r189={1d,3u} r190={1d,2u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d} r204={1d} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} 
;;    total ref usage 2475{2219d,252u,4e} in 131{113 regular + 18 call} insns.
;; Reaching defs:

  sparse invalidated 	0
  dense invalidated 	
0[0,34] 1[34,27] 2[61,21] 3[82,20] 11[102,1] 12[103,19] 13[122,1] 14[123,18] 15[141,18] 16[159,18] 17[177,18] 18[195,18] 19[213,18] 20[231,18] 21[249,18] 22[267,18] 23[285,18] 24[303,32] 25[335,1] 26[336,1] 27[337,18] 28[355,18] 29[373,18] 30[391,18] 31[409,18] 32[427,18] 33[445,18] 34[463,18] 35[481,18] 36[499,18] 37[517,18] 38[535,18] 39[553,18] 40[571,18] 41[589,18] 42[607,18] 43[625,18] 44[643,18] 45[661,18] 46[679,18] 47[697,18] 48[715,18] 49[733,18] 50[751,18] 51[769,18] 52[787,18] 53[805,18] 54[823,18] 55[841,18] 56[859,18] 57[877,18] 58[895,18] 59[913,18] 60[931,18] 61[949,18] 62[967,18] 63[985,18] 64[1003,18] 65[1021,18] 66[1039,18] 67[1057,18] 68[1075,18] 69[1093,18] 70[1111,18] 71[1129,18] 72[1147,18] 73[1165,18] 74[1183,18] 75[1201,18] 76[1219,18] 77[1237,18] 78[1255,18] 79[1273,18] 80[1291,18] 81[1309,18] 82[1327,18] 83[1345,18] 84[1363,18] 85[1381,18] 86[1399,18] 87[1417,18] 88[1435,18] 89[1453,18] 90[1471,18] 91[1489,18] 92[1507,18] 93[1525,18] 94[1543,18] 95[1561,18] 96[1579,18] 97[1597,18] 98[1615,18] 99[1633,18] 100[1651,18] 101[1669,18] 102[1687,18] 103[1705,18] 104[1723,18] 105[1741,18] 106[1759,18] 107[1777,18] 108[1795,18] 109[1813,18] 110[1831,18] 111[1849,18] 112[1867,18] 113[1885,18] 114[1903,18] 115[1921,18] 116[1939,18] 117[1957,18] 118[1975,18] 119[1993,18] 120[2011,18] 121[2029,18] 122[2047,18] 123[2065,18] 124[2083,18] 125[2101,18] 126[2119,18] 127[2137,18] 133[2155,1] 134[2156,1] 135[2157,1] 136[2158,1] 137[2159,1] 139[2160,1] 140[2161,1] 142[2162,1] 143[2163,1] 144[2164,1] 145[2165,2] 146[2167,1] 147[2168,1] 148[2169,1] 149[2170,1] 150[2171,1] 151[2172,1] 152[2173,1] 153[2174,1] 154[2175,1] 155[2176,1] 156[2177,1] 157[2178,1] 158[2179,1] 159[2180,1] 160[2181,1] 161[2182,1] 162[2183,1] 163[2184,1] 164[2185,1] 165[2186,1] 166[2187,1] 167[2188,1] 168[2189,1] 169[2190,1] 170[2191,1] 171[2192,1] 172[2193,1] 173[2194,1] 174[2195,1] 178[2196,1] 182[2197,1] 188[2198,1] 189[2199,1] 190[2200,1] 191[2201,1] 192[2202,1] 193[2203,1] 194[2204,1] 195[2205,1] 196[2206,1] 197[2207,1] 198[2208,1] 199[2209,1] 200[2210,1] 201[2211,1] 202[2212,1] 203[2213,1] 204[2214,1] 205[2215,1] 206[2216,1] 207[2217,1] 208[2218,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 150 151 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 150 151 152
;; live  kill	
;; rd  in  	(10)
33, 60, 81, 101, 102, 121, 122, 140, 335, 336
;; rd  gen 	(4)
334, 2171, 2172, 2173
;; rd  kill	(35)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2171, 2172, 2173

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/smp_twd.c:195 (set (reg/v/f:SI 150 [ clk ])
        (reg:SI 0 r0 [ clk ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/smp_twd.c:196 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/smp_twd.c:196 (set (reg/f:SI 152 [ twd_clk ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/smp_twd.c:196 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 152 [ twd_clk ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/smp_twd.c:196 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; rd  out 	(14)
33, 60, 81, 101, 102, 121, 122, 140, 334, 335, 336, 2171, 2172, 2173


;; Succ edge  3 [6.7%]  (fallthru)
;; Succ edge  8 [93.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 152
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 145 153
;; live  kill	 14 [lr]
;; rd  in  	(14)
33, 60, 81, 101, 102, 121, 122, 140, 334, 335, 336, 2171, 2172, 2173
;; rd  gen 	(4)
31, 332, 2166, 2174
;; rd  kill	(53)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2165, 2166, 2174

;; Pred edge  2 [6.7%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/smp_twd.c:175 (set (reg/f:SI 153)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fc9390>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fc9390>)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 1 r1)
        (reg/f:SI 152 [ twd_clk ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 14 13 15 3 arch/arm/kernel/smp_twd.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_sys") [flags 0x41] <function_decl 0x10a60980 clk_get_sys>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 16 3 arch/arm/kernel/smp_twd.c:175 (set (reg/v/f:SI 145 [ clk ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ clk ])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; rd  out 	(15)
31, 60, 81, 101, 102, 121, 122, 332, 335, 336, 2166, 2171, 2172, 2173, 2174


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; live  gen 	 0 [r0] 1 [r1] 154
;; live  kill	 14 [lr]
;; rd  in  	(15)
31, 60, 81, 101, 102, 121, 122, 332, 335, 336, 2166, 2171, 2172, 2173, 2174
;; rd  gen 	(2)
29, 2175
;; rd  kill	(19)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 2175

;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/smp_twd.c:177 (set (reg/f:SI 154)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10fe42c0>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 0 r0)
        (reg/f:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10fe42c0>)
        (nil)))

(insn 21 20 22 4 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ clk ])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 25 4 arch/arm/kernel/smp_twd.c:177 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; rd  out 	(16)
29, 60, 81, 101, 102, 121, 122, 332, 335, 336, 2166, 2171, 2172, 2173, 2174, 2175


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; live  gen 	 0 [r0] 24 [cc] 146
;; live  kill	 14 [lr]
;; rd  in  	(15)
31, 60, 81, 101, 102, 121, 122, 332, 335, 336, 2166, 2171, 2172, 2173, 2174
;; rd  gen 	(3)
28, 329, 2167
;; rd  kill	(51)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2167

;; Pred edge  3 [100.0%] 
(code_label 25 22 26 5 37 "" [1 uses])

(note 26 25 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 28 26 29 5 arch/arm/kernel/smp_twd.c:181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_enable") [flags 0x41] <function_decl 0x10a60500 clk_enable>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 28 30 5 arch/arm/kernel/smp_twd.c:181 (set (reg/v:SI 146 [ err ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/kernel/smp_twd.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ err ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 5 arch/arm/kernel/smp_twd.c:182 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150
;; rd  out 	(16)
28, 60, 81, 101, 102, 121, 122, 329, 335, 336, 2166, 2167, 2171, 2172, 2173, 2174


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150
;; live  gen 	 0 [r0] 1 [r1] 145 155
;; live  kill	 14 [lr]
;; rd  in  	(16)
28, 60, 81, 101, 102, 121, 122, 329, 335, 336, 2166, 2167, 2171, 2172, 2173, 2174
;; rd  gen 	(2)
2165, 2176
;; rd  kill	(21)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 2165, 2166, 2176

;; Pred edge  5 [0.0%]  (fallthru)
(note 32 31 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 6 arch/arm/kernel/smp_twd.c:183 (set (reg/f:SI 155)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10fb2e10>)) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 6 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 0 r0)
        (reg/f:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10fb2e10>)
        (nil)))

(insn 35 34 36 6 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ err ])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 37 6 arch/arm/kernel/smp_twd.c:183 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 38 6 arch/arm/kernel/smp_twd.c:184 (set (reg:SI 0 r0)
        (reg/v/f:SI 145 [ clk ])) 167 {*arm_movsi_insn} (nil))

(call_insn 38 37 39 6 arch/arm/kernel/smp_twd.c:184 (parallel [
            (call (mem:SI (symbol_ref:SI ("clk_put") [flags 0x41] <function_decl 0x10a60680 clk_put>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 39 38 40 6 arch/arm/kernel/smp_twd.c:185 (set (reg/v/f:SI 145 [ clk ])
        (reg/v:SI 146 [ err ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; rd  out 	(17)
28, 60, 81, 101, 102, 121, 122, 329, 335, 336, 2165, 2167, 2171, 2172, 2173, 2174, 2176


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; live  gen 	 156
;; live  kill	
;; rd  in  	(21)
28, 29, 60, 81, 101, 102, 121, 122, 329, 332, 335, 336, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176
;; rd  gen 	(1)
2177
;; rd  kill	(1)
2177

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 40 39 41 7 38 "" [1 uses])

(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 arch/arm/kernel/smp_twd.c:197 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 7 arch/arm/kernel/smp_twd.c:197 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])
        (reg/v/f:SI 145 [ clk ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; rd  out 	(22)
28, 29, 60, 81, 101, 102, 121, 122, 329, 332, 335, 336, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 2 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 24 [cc] 135 157
;; live  kill	
;; rd  in  	(25)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 329, 332, 334, 335, 336, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177
;; rd  gen 	(3)
326, 2157, 2178
;; rd  kill	(34)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2157, 2178

;; Pred edge  2 [93.3%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 44 43 45 8 36 "" [1 uses])

(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 8 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 135 [ twd_clk.403 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 8 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ twd_clk.403 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 50 8 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; rd  out 	(25)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 326, 335, 336, 2157, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178


;; Succ edge  10 [15.0%] 
;; Succ edge  9 [85.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 326, 335, 336, 2157, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178
;; rd  gen 	(1)
325
;; rd  kill	(32)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334

;; Pred edge  8 [85.0%]  (fallthru)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 9 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ twd_clk.403 ])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 53 9 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 9 -> ( 10 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; rd  out 	(25)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 325, 335, 336, 2157, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 24 [cc] 158 159
;; live  kill	
;; rd  in  	(26)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 325, 326, 335, 336, 2157, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178
;; rd  gen 	(3)
324, 2179, 2180
;; rd  kill	(34)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2179, 2180

;; Pred edge  8 [15.0%] 
;; Pred edge  9 [0.0%]  (fallthru)
(code_label 53 52 54 10 39 "" [1 uses])

(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 10 arch/arm/kernel/smp_twd.c:140 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 10 arch/arm/kernel/smp_twd.c:140 (set (reg:SI 159 [ twd_timer_rate ])
        (mem/c/i:SI (plus:SI (reg/f:SI 158)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 10 arch/arm/kernel/smp_twd.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159 [ twd_timer_rate ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 10 arch/arm/kernel/smp_twd.c:140 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 10 -> ( 11 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; rd  out 	(27)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 324, 335, 336, 2157, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180


;; Succ edge  11 [0.0%]  (fallthru)
;; Succ edge  22 [100.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 144 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 0 [r0] 1 [r1] 137 144 160 161
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(27)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 324, 335, 336, 2157, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180
;; rd  gen 	(6)
21, 51, 2159, 2164, 2181, 2182
;; rd  kill	(81)
34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2159, 2164, 2181, 2182

;; Pred edge  10 [0.0%]  (fallthru)
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 11 arch/arm/kernel/smp_twd.c:141 (set (reg/f:SI 160)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10fcab40>)) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 11 arch/arm/kernel/smp_twd.c:141 (set (reg:SI 0 r0)
        (reg/f:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10fcab40>)
        (nil)))

(call_insn 62 61 63 11 arch/arm/kernel/smp_twd.c:141 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 63 62 64 11 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 64 63 65 11 arch/arm/kernel/smp_twd.c:144 (set (reg:DI 137 [ D.14354 ])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 65 64 66 11 arch/arm/kernel/smp_twd.c:144 (set (reg:DI 161)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 66 65 76 11 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg/v:DI 144 [ waitjiffies ])
                (plus:DI (reg:DI 137 [ D.14354 ])
                    (reg:DI 161)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_EQUAL (plus:DI (reg:DI 137 [ D.14354 ])
            (const_int 1 [0x1]))
        (nil)))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; rd  out 	(27)
21, 51, 81, 101, 102, 121, 122, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 13 15) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(31)
18, 49, 81, 101, 102, 121, 122, 317, 318, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216
;; rd  gen 	(0)

;; rd  kill	(18)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140

;; Pred edge  13 [50.0%] 
;; Pred edge  15 [50.0%] 
(code_label 76 66 69 12 43 "" [2 uses])

(note 69 76 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 12 arch/arm/kernel/smp_twd.c:147 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn 71 70 72 12 arch/arm/kernel/smp_twd.c:147 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; rd  out 	(31)
18, 49, 81, 101, 102, 121, 122, 317, 318, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216


;; Succ edge  13 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 205 206
;; live  kill	 14 [lr]
;; rd  in  	(33)
18, 21, 49, 51, 81, 101, 102, 121, 122, 317, 318, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216
;; rd  gen 	(5)
18, 49, 318, 2215, 2216
;; rd  kill	(79)
34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2215, 2216

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru,dfs_back)
(code_label 72 71 73 13 42 "" [0 uses])

(note 73 72 74 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(call_insn 74 73 212 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 212 74 213 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:SI 205 [ D.14353 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 213 212 77 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:SI 206 [ D.14353+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 77 213 78 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 4)
            (reg:SI 206 [ D.14353+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 78 77 198 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 12 14)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 144 150 205
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 144 150 205
;; rd  out 	(30)
18, 49, 81, 101, 102, 121, 122, 318, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216


;; Succ edge  12 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 144 150 205
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 144 150 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
18, 49, 81, 101, 102, 121, 122, 318, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216
;; rd  gen 	(1)
304
;; rd  kill	(32)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334

;; Pred edge  13 [50.0%]  (fallthru)
(note 198 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 80 198 199 14 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150 205
;; rd  out 	(30)
18, 49, 81, 101, 102, 121, 122, 304, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216


;; Succ edge  16 [71.0%] 
;; Succ edge  15 [29.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 205
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
18, 49, 81, 101, 102, 121, 122, 304, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216
;; rd  gen 	(1)
317
;; rd  kill	(32)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334

;; Pred edge  14 [29.0%]  (fallthru)
(note 199 80 81 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 81 199 82 15 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 0)
            (reg:SI 205 [ D.14353 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 210 15 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 15 -> ( 12 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; rd  out 	(30)
18, 49, 81, 101, 102, 121, 122, 317, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216


;; Succ edge  12 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 134 139 140 162 163 164 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 150
;; live  gen 	 134 139 140 162 163 164 165 166 167 168
;; live  kill	 24 [cc]
;; rd  in  	(31)
18, 49, 81, 101, 102, 121, 122, 304, 317, 335, 336, 2157, 2159, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2215, 2216
;; rd  gen 	(10)
2156, 2160, 2161, 2183, 2184, 2185, 2186, 2187, 2188, 2189
;; rd  kill	(42)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2156, 2160, 2161, 2183, 2184, 2185, 2186, 2187, 2188, 2189

;; Pred edge  15 [50.0%]  (fallthru)
;; Pred edge  14 [71.0%] 
(code_label 210 82 88 16 49 "" [1 uses])

(note 88 210 89 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 16 arch/arm/kernel/smp_twd.c:150 (set (reg:DI 162)
        (const_int 5 [0x5])) 163 {*arm_movdi} (nil))

(insn 90 89 91 16 arch/arm/kernel/smp_twd.c:150 (parallel [
            (set (reg/v:DI 134 [ waitjiffies.404 ])
                (plus:DI (reg/v:DI 144 [ waitjiffies ])
                    (reg:DI 162)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_EQUAL (plus:DI (reg/v:DI 144 [ waitjiffies ])
            (const_int 5 [0x5]))
        (nil)))

(insn 91 90 92 16 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 163)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 92 91 94 16 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 164 [ twd_base ])
        (mem/f/c/i:SI (reg/f:SI 163) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 94 92 95 16 arch/arm/kernel/smp_twd.c:153 (set (reg:SI 165)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 97 16 arch/arm/kernel/smp_twd.c:153 (set (mem/v:SI (plus:SI (reg/f:SI 164 [ twd_base ])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 97 95 99 16 arch/arm/kernel/smp_twd.c:156 (set (reg/f:SI 167 [ twd_base ])
        (mem/f/c/i:SI (reg/f:SI 163) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 99 97 100 16 arch/arm/kernel/smp_twd.c:156 (set (reg:SI 168)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 110 16 arch/arm/kernel/smp_twd.c:156 (set (mem/v:SI (plus:SI (reg/f:SI 167 [ twd_base ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
;; End of basic block 16 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; rd  out 	(39)
18, 49, 81, 101, 102, 121, 122, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 18 20) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(43)
15, 47, 81, 101, 102, 121, 122, 312, 313, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218
;; rd  gen 	(0)

;; rd  kill	(18)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140

;; Pred edge  18 [50.0%] 
;; Pred edge  20 [50.0%] 
(code_label 110 100 103 17 46 "" [2 uses])

(note 103 110 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 17 arch/arm/kernel/smp_twd.c:159 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn 105 104 106 17 arch/arm/kernel/smp_twd.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; rd  out 	(43)
15, 47, 81, 101, 102, 121, 122, 312, 313, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218


;; Succ edge  18 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 207 208
;; live  kill	 14 [lr]
;; rd  in  	(45)
15, 18, 47, 49, 81, 101, 102, 121, 122, 312, 313, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218
;; rd  gen 	(5)
15, 47, 313, 2217, 2218
;; rd  kill	(79)
34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 2217, 2218

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru,dfs_back)
(code_label 106 105 107 18 45 "" [0 uses])

(note 107 106 108 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn 108 107 214 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 214 108 215 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:SI 207 [ D.14348 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 215 214 111 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:SI 208 [ D.14348+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 111 215 112 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 4)
            (reg:SI 208 [ D.14348+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 112 111 203 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 17 19)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 150 207
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 150 207
;; rd  out 	(42)
15, 47, 81, 101, 102, 121, 122, 313, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218


;; Succ edge  17 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 150 207
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 134 150 207
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(42)
15, 47, 81, 101, 102, 121, 122, 313, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218
;; rd  gen 	(1)
303
;; rd  kill	(32)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334

;; Pred edge  18 [50.0%]  (fallthru)
(note 203 112 114 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 114 203 204 19 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 19 -> ( 21 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 207
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 207
;; rd  out 	(42)
15, 47, 81, 101, 102, 121, 122, 303, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218


;; Succ edge  21 [71.0%] 
;; Succ edge  20 [29.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 207
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 207
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150 207
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(42)
15, 47, 81, 101, 102, 121, 122, 303, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218
;; rd  gen 	(1)
312
;; rd  kill	(32)
303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334

;; Pred edge  19 [29.0%]  (fallthru)
(note 204 114 115 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 115 204 116 20 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 0)
            (reg:SI 207 [ D.14348 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 116 115 211 20 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 17 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 150
;; rd  out 	(42)
15, 47, 81, 101, 102, 121, 122, 312, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218


;; Succ edge  17 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 142 143 169 170 171 172 173 174 178 182 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 142 143 169 170 171 172 173 174 178 182 188
;; live  kill	 14 [lr]
;; rd  in  	(43)
15, 47, 81, 101, 102, 121, 122, 303, 312, 335, 336, 2156, 2157, 2159, 2160, 2161, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2215, 2216, 2217, 2218
;; rd  gen 	(13)
8, 2155, 2162, 2163, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198
;; rd  kill	(30)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 2155, 2162, 2163, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198

;; Pred edge  20 [50.0%]  (fallthru)
;; Pred edge  19 [71.0%] 
(code_label 211 116 122 21 50 "" [1 uses])

(note 122 211 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 21 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 124 123 126 21 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 170 [ twd_base ])
        (mem/f/c/i:SI (reg/f:SI 169) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 126 124 127 21 arch/arm/kernel/smp_twd.c:161 (set (reg/v:SI 143 [ count ])
        (mem/v:SI (plus:SI (reg/f:SI 170 [ twd_base ])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 21 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 171)
        (not:SI (reg/v:SI 143 [ count ]))) 134 {*arm_one_cmplsi2} (nil))

(insn 128 127 129 21 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 172)
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 131 21 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 142 [ twd_timer_rate.214 ])
        (mult:SI (reg:SI 172)
            (reg:SI 171))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg:SI 171)
            (const_int 20 [0x14]))
        (nil)))

(insn 131 129 132 21 arch/arm/kernel/smp_twd.c:163 (set (mem/c/i:SI (plus:SI (reg/f:SI 169)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 142 [ twd_timer_rate.214 ])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 21 arch/arm/kernel/smp_twd.c:165 (set (reg/f:SI 174)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10ff0a80>)) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 142 [ twd_timer_rate.214 ])) 167 {*arm_movsi_insn} (nil))

(insn 134 133 135 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 1000000 [0xf4240])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 135 134 136 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 136 135 137 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 178)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (udiv:SI (reg:SI 142 [ twd_timer_rate.214 ])
            (const_int 1000000 [0xf4240]))
        (nil)))

(insn 137 136 138 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 142 [ twd_timer_rate.214 ])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 10000 [0x2710])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 139 138 140 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 140 139 142 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 182)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (udiv:SI (reg:SI 142 [ twd_timer_rate.214 ])
            (const_int 10000 [0x2710]))
        (nil)))

(insn 142 140 143 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 143 142 144 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 145 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 188 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (umod:SI (reg:SI 182)
            (const_int 100 [0x64]))
        (nil)))

(insn 145 144 146 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg/f:SI 174)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10ff0a80>)
        (nil)))

(insn 146 145 147 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (reg:SI 178)) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 2 r2)
        (reg:SI 188 [+4 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 148 147 149 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; rd  out 	(55)
8, 47, 81, 101, 102, 121, 122, 303, 312, 335, 336, 2155, 2156, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2215, 2216, 2217, 2218


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 23 10 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 147 148 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 147 148 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
;; live  kill	 14 [lr]
;; rd  in  	(65)
2, 8, 28, 29, 33, 47, 60, 81, 101, 102, 121, 122, 140, 303, 312, 324, 325, 335, 336, 2155, 2156, 2157, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2214, 2215, 2216, 2217, 2218
;; rd  gen 	(18)
2158, 2168, 2169, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213
;; rd  kill	(36)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 2158, 2168, 2169, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  21 [100.0%]  (fallthru)
(code_label 149 148 150 22 41 "" [1 uses])

(note 150 149 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 152 22 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 189)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 154 22 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 190 [ twd_base ])
        (mem/f/c/i:SI (reg/f:SI 189) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 154 152 155 22 arch/arm/kernel/smp_twd.c:204 (set (reg:SI 191)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 155 154 156 22 arch/arm/kernel/smp_twd.c:204 (set (mem/v:SI (plus:SI (reg/f:SI 190 [ twd_base ])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 191)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 156 155 157 22 arch/arm/kernel/smp_twd.c:206 (set (reg/f:SI 192)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)) 167 {*arm_movsi_insn} (nil))

(insn 157 156 158 22 arch/arm/kernel/smp_twd.c:206 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)
        (nil)))

(insn 158 157 159 22 arch/arm/kernel/smp_twd.c:207 (set (reg:SI 193)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 159 158 160 22 arch/arm/kernel/smp_twd.c:207 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])
        (reg:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 7 [0x7])
        (nil)))

(insn 160 159 161 22 arch/arm/kernel/smp_twd.c:209 (set (reg:SI 194)
        (const_int 350 [0x15e])) 167 {*arm_movsi_insn} (nil))

(insn 161 160 162 22 arch/arm/kernel/smp_twd.c:209 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])
        (reg:SI 194)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 350 [0x15e])
        (nil)))

(insn 162 161 163 22 arch/arm/kernel/smp_twd.c:210 (set (reg/f:SI 195)
        (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)) 167 {*arm_movsi_insn} (nil))

(insn 163 162 164 22 arch/arm/kernel/smp_twd.c:210 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])
        (reg/f:SI 195)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)
        (nil)))

(insn 164 163 165 22 arch/arm/kernel/smp_twd.c:211 (set (reg/f:SI 196)
        (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)) 167 {*arm_movsi_insn} (nil))

(insn 165 164 166 22 arch/arm/kernel/smp_twd.c:211 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 4 [0x4])) [0 <variable>.set_next_event+0 S4 A32])
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)
        (nil)))

(insn 166 165 167 22 arch/arm/kernel/smp_twd.c:213 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 169 22 arch/arm/kernel/smp_twd.c:213 (set (reg/v:SI 147 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 197)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5270655)) -1 (nil))

(insn 169 167 170 22 arch/arm/kernel/smp_twd.c:213 (set (reg/f:SI 198)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 170 169 171 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 200)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 171 170 172 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 199)
        (and:SI (reg:SI 200)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 172 171 173 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 201 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 199)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 202)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 201 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 198)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 174 173 176 22 arch/arm/kernel/smp_twd.c:213 (set (mem/f:SI (plus:SI (reg/v:SI 147 [ __ptr ])
                (reg:SI 202)) [0 S4 A32])
        (reg/v/f:SI 150 [ clk ])) 167 {*arm_movsi_insn} (nil))

(insn 176 174 177 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ clk ])) 167 {*arm_movsi_insn} (nil))

(insn 177 176 178 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 189)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 178 177 179 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 2 r2)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(call_insn 180 179 181 22 arch/arm/kernel/smp_twd.c:215 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockevents_config_and_register") [flags 0x41] <function_decl 0x10f21880 clockevents_config_and_register>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 181 180 182 22 arch/arm/kernel/smp_twd.c:219 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 76 [0x4c])) [0 <variable>.irq+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 182 181 184 22 arch/arm/kernel/smp_twd.c:219 (parallel [
            (call (mem:SI (symbol_ref:SI ("gic_enable_ppi") [flags 0x41] <function_decl 0x10f97c80 gic_enable_ppi>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 22 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(82)
2, 8, 28, 29, 33, 47, 60, 81, 101, 102, 121, 122, 303, 312, 324, 325, 335, 336, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 9) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 150 157
;; live  gen 	 0 [r0] 149 204
;; live  kill	 14 [lr]
;; rd  in  	(25)
28, 29, 33, 60, 81, 101, 102, 121, 122, 140, 325, 335, 336, 2157, 2165, 2166, 2167, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178
;; rd  gen 	(3)
2, 2170, 2214
;; rd  kill	(20)
123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 2170, 2214

;; Pred edge  9 [100.0%] 
(code_label 184 182 185 23 40 "" [1 uses])

(note 185 184 186 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 187 23 arch/arm/kernel/smp_twd.c:200 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ twd_clk.403 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 187 186 188 23 arch/arm/kernel/smp_twd.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 188 187 190 23 arch/arm/kernel/smp_twd.c:200 (set (reg:SI 149 [ twd_timer_rate.219 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 190 188 0 23 arch/arm/kernel/smp_twd.c:200 (set (mem/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 149 [ twd_timer_rate.219 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; rd  out 	(24)
2, 60, 81, 101, 102, 121, 122, 325, 335, 336, 2157, 2165, 2166, 2167, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2214


;; Succ edge  22 [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 27.
deleting insn with uid = 79.
deleting insn with uid = 93.
deleting insn with uid = 96.
deleting insn with uid = 98.
deleting insn with uid = 113.
deleting insn with uid = 125.
deleting insn with uid = 130.
deleting insn with uid = 141.
deleting insn with uid = 153.
deleting insn with uid = 168.
deleting insn with uid = 175.
deleting insn with uid = 189.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 126.
verify found no changes in insn with uid = 155.
ending the processing of deferred insns
