
;; Function tcm_init (tcm_init)[0:1385]



try_optimize_cfg iteration 1



tcm_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 9{6d,3u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 14 15 2 NOTE_INSN_FUNCTION_BEG)

(note 15 2 16 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 16 15 17 2 arch/arm/kernel/tcm.h:16 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 17 16 12)

(note 12 17 13 NOTE_INSN_DELETED)

(note 13 12 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_architecture (cpu_architecture)[0:1386]



try_optimize_cfg iteration 1

merging block 16 into block 15
deleting insn with uid = 78.
deleting insn with uid = 79.
changing bb of uid 90
  from 16 to 15
changing bb of uid 131
  from 16 to 15
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1



cpu_architecture

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={9d,11u} r1={1d} r2={2d,2u} r3={4d,5u} r13={1d,15u} r14={1d,1u} r24={11d,10u} 
;;    total ref usage 73{29d,44u,0e} in 36{36 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 125 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 125 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 125 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(insn 5 6 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 0 r0 [orig:138 __val ] [138])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 7 5 8 2 arch/arm/kernel/setup.c:217 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 0 r0 [orig:138 __val ] [138])
                        (const_int 585728 [0x8f000]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [144])
                (and:SI (reg/v:SI 0 r0 [orig:138 __val ] [138])
                    (const_int 585728 [0x8f000])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/setup.c:217 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 13 3)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  13 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 9 13 3 arch/arm/kernel/setup.c:219 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [144])
            (const_int 28672 [0x7000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [144])
        (nil)))

(jump_insn 13 12 14 3 arch/arm/kernel/setup.c:219 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  4 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  3 [28.0%]  (fallthru)
(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 16 14 17 4 NOTE_INSN_DELETED)

(insn 17 16 114 4 arch/arm/kernel/setup.c:220 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:138 __val ] [138])
                (const_int 1 [0x1])
                (const_int 23 [0x17]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 0 r0 [orig:138 __val ] [138])
        (nil)))

(insn 114 17 128 4 arch/arm/kernel/setup.c:220 discrim 2 (set (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 128 114 116 4 (return) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 116 128 28)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [72.0%] 
(code_label 28 116 29 5 5 "" [1 uses])

(note 29 28 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 29 32 5 NOTE_INSN_DELETED)

(insn 32 31 33 5 arch/arm/kernel/setup.c:221 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 0 r0 [orig:138 __val ] [138])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 33 32 34 5 arch/arm/kernel/setup.c:221 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 34 33 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 36 34 37 6 NOTE_INSN_DELETED)

(insn 37 36 38 6 arch/arm/kernel/setup.c:222 (set (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
        (zero_extract:SI (reg/v:SI 0 r0 [orig:138 __val ] [138])
            (const_int 3 [0x3])
            (const_int 16 [0x10]))) 124 {extzv_t2} (nil))

(insn 38 37 39 6 arch/arm/kernel/setup.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 6 arch/arm/kernel/setup.c:223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  EXIT [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 129 7 arch/arm/kernel/setup.c:224 (set (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
        (plus:SI (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 129 41 118 7 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 118 129 44)

;; Start of basic block ( 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 44 118 45 8 8 "" [1 uses])

(note 45 44 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 45 48 8 arch/arm/kernel/setup.c:225 (set (reg:SI 0 r0 [149])
        (and:SI (reg/v:SI 0 r0 [orig:138 __val ] [138])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 48 47 49 8 arch/arm/kernel/setup.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [149])
            (const_int 983040 [0xf0000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [149])
        (nil)))

(jump_insn 49 48 50 8 arch/arm/kernel/setup.c:225 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5588 [0x15d4])
            (nil))))
;; End of basic block 8 -> ( 9 13)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  9 [44.1%]  (fallthru)
;; Succ edge  13 [55.9%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [44.1%]  (fallthru)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 9 arch/arm/kernel/setup.c:230 (set (reg/v:SI 3 r3 [orig:139 mmfr0 ] [139])
        (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 4") ("=r") 0 []
             [] 10427624)) -1 (nil))

(insn 52 51 53 9 arch/arm/kernel/setup.c:232 (set (reg:SI 2 r2 [orig:142 D.25378 ] [142])
        (and:SI (reg/v:SI 3 r3 [orig:139 mmfr0 ] [139])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 52 54 9 arch/arm/kernel/setup.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:142 D.25378 ] [142])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 9 arch/arm/kernel/setup.c:232 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 9 -> ( 15 10)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  15 [33.0%] 
;; Succ edge  10 [67.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  9 [67.0%]  (fallthru)
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 10 arch/arm/kernel/setup.c:233 (set (reg:SI 3 r3 [orig:141 D.25380 ] [141])
        (and:SI (reg/v:SI 3 r3 [orig:139 mmfr0 ] [139])
            (const_int 240 [0xf0]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 58 10 arch/arm/kernel/setup.c:232 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 D.25380 ] [141])
            (const_int 47 [0x2f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 58 57 59 10 arch/arm/kernel/setup.c:232 discrim 2 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3300 [0xce4])
            (nil))))
;; End of basic block 10 -> ( 15 11)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  15 [33.0%] 
;; Succ edge  11 [67.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [67.0%]  (fallthru)
(note 59 58 60 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 11 arch/arm/kernel/setup.c:235 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:142 D.25378 ] [142])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 D.25378 ] [142])
        (nil)))

(jump_insn 61 60 62 11 arch/arm/kernel/setup.c:235 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1608 [0x648])
            (nil))))
;; End of basic block 11 -> ( 14 12)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  14 [16.1%] 
;; Succ edge  12 [83.9%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [83.9%]  (fallthru)
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 12 arch/arm/kernel/setup.c:235 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 D.25380 ] [141])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:141 D.25380 ] [141])
        (nil)))

(jump_insn 64 63 65 12 arch/arm/kernel/setup.c:235 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1991 [0x7c7])
            (nil))))
;; End of basic block 12 -> ( 14 13)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  14 [19.9%] 
;; Succ edge  13 [80.1%]  (fallthru)

;; Start of basic block ( 2 12 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  12 [80.1%]  (fallthru)
;; Pred edge  8 [55.9%] 
(code_label 65 64 66 13 4 "" [2 uses])

(note 66 65 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 126 13 arch/arm/kernel/setup.c:218 (set (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 126 67 120 13 (return) -1 (nil))
;; End of basic block 13 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 120 126 70)

;; Start of basic block ( 12 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  12 [19.9%] 
;; Pred edge  11 [16.1%] 
(code_label 70 120 71 14 10 "" [2 uses])

(note 71 70 72 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 127 14 arch/arm/kernel/setup.c:237 (set (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 127 72 122 14 (return) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 122 127 75)

;; Start of basic block ( 9 10) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  9 [33.0%] 
;; Pred edge  10 [33.0%] 
(code_label 75 122 76 15 9 "" [2 uses])

(note 76 75 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 90 15 arch/arm/kernel/setup.c:234 (set (reg/v:SI 0 r0 [orig:140 cpu_arch ] [140])
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(insn 90 77 131 15 arch/arm/kernel/setup.c:244 (use (reg/i:SI 0 r0)) -1 (nil))

(jump_insn 131 90 130 15 arch/arm/kernel/setup.c:244 (return) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 130 131 123)

(note 123 130 124 NOTE_INSN_DELETED)

(note 124 123 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_core (parse_tag_core)[0:1398] (unlikely executed)



try_optimize_cfg iteration 1



parse_tag_core

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={2d,5u,2d} r1={1d} r2={5d,4u} r3={7d,8u,2d} r13={1d,6u} r14={1d,1u} r24={2d,2u} 
;;    total ref usage 49{19d,26u,4e} in 19{19 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 50 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 50 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 50 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:595 (set (reg:SI 3 r3 [orig:136 <variable>.hdr.size ] [136])
        (mem/s/j:SI (reg/v/f:SI 0 r0 [orig:135 tag ] [135]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 0 r0 [orig:135 tag ] [135]) [0 <variable>.hdr.size+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/setup.c:595 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:136 <variable>.hdr.size ] [136])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:136 <variable>.hdr.size ] [136])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/setup.c:595 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn 10 11 12 3 arch/arm/kernel/setup.c:596 (set (reg:SI 3 r3 [orig:138 <variable>.u.core.flags ] [138])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:135 tag ] [135])
                (const_int 8 [0x8])) [0 <variable>.u.core.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:135 tag ] [135])
                (const_int 8 [0x8])) [0 <variable>.u.core.flags+0 S4 A32])
        (nil)))

(insn 12 10 13 3 arch/arm/kernel/setup.c:596 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:138 <variable>.u.core.flags ] [138])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:138 <variable>.u.core.flags ] [138])
        (nil)))

(jump_insn 13 12 14 3 arch/arm/kernel/setup.c:596 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 17 4 arch/arm/kernel/setup.c:597 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("root_mountflags") [flags 0xc0] <var_decl 0x10a76c00 root_mountflags>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("root_mountflags") [flags 0xc0] <var_decl 0x10a76c00 root_mountflags>)
        (nil)))

(insn 17 15 18 4 arch/arm/kernel/setup.c:597 (set (reg:SI 2 r2 [orig:141 root_mountflags ] [141])
        (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 root_mountflags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 root_mountflags+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("root_mountflags") [flags 0xc0] <var_decl 0x10a76c00 root_mountflags>) [0 root_mountflags+0 S4 A32])
            (nil))))

(insn 18 17 19 4 arch/arm/kernel/setup.c:597 (set (reg:SI 2 r2 [142])
        (and:SI (reg:SI 2 r2 [orig:141 root_mountflags ] [141])
            (const_int -2 [0xfffffffffffffffe]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 root_mountflags+0 S4 A32])
        (nil)))

(insn 19 18 20 4 arch/arm/kernel/setup.c:597 (set (mem/c/i:SI (reg/f:SI 3 r3 [139]) [0 root_mountflags+0 S4 A32])
        (reg:SI 2 r2 [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [139])
        (expr_list:REG_DEAD (reg:SI 2 r2 [142])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 20 19 21 5 15 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 22 21 25 5 NOTE_INSN_DELETED)

(note 25 22 27 5 NOTE_INSN_DELETED)

(note 27 25 23 5 NOTE_INSN_DELETED)

(insn 23 27 28 5 arch/arm/kernel/setup.c:598 (set (reg:SI 3 r3 [orig:133 D.25652 ] [133])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 0 r0 [orig:135 tag ] [135])
                    (const_int 16 [0x10])) [0 <variable>.u.core.rootdev+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:135 tag ] [135])
        (nil)))

(insn 28 23 26 5 arch/arm/kernel/setup.c:598 (set (reg:SI 2 r2 [148])
        (and:SI (reg:SI 3 r3 [orig:133 D.25652 ] [133])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 28 29 5 arch/arm/kernel/setup.c:598 (set (reg:SI 3 r3 [146])
        (lshiftrt:SI (reg:SI 3 r3 [orig:133 D.25652 ] [133])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 29 26 48 5 arch/arm/kernel/setup.c:598 (set (reg:SI 3 r3 [149])
        (ior:SI (ashift:SI (reg:SI 3 r3 [146])
                (const_int 20 [0x14]))
            (reg:SI 2 r2 [148]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 2 r2 [148])
        (nil)))

(insn 48 29 30 5 arch/arm/kernel/setup.c:598 (set (reg/f:SI 2 r2 [144])
        (symbol_ref:SI ("ROOT_DEV") [flags 0xc0] <var_decl 0x11069de0 ROOT_DEV>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("ROOT_DEV") [flags 0xc0] <var_decl 0x11069de0 ROOT_DEV>)
        (nil)))

(insn 30 48 31 5 arch/arm/kernel/setup.c:598 (set (mem/c/i:SI (reg/f:SI 2 r2 [144]) [0 ROOT_DEV+0 S4 A32])
        (reg:SI 3 r3 [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [149])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [144])
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 31 30 32 6 14 "" [1 uses])

(note 32 31 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 32 43 6 arch/arm/kernel/setup.c:601 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 43 37 51 6 arch/arm/kernel/setup.c:601 (use (reg/i:SI 0 r0)) -1 (nil))

(note 51 43 52 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 52 51 53 6 arch/arm/kernel/setup.c:601 (return) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 53 52 47)

(note 47 53 49 NOTE_INSN_DELETED)

(note 49 47 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_ramdisk (parse_tag_ramdisk)[0:1400] (unlikely executed)



try_optimize_cfg iteration 1



parse_tag_ramdisk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 12{7d,5u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 22 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 22 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 10 2 NOTE_INSN_DELETED)

(insn 10 6 16 2 arch/arm/kernel/setup.c:645 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 16 10 23 2 arch/arm/kernel/setup.c:645 (use (reg/i:SI 0 r0)) -1 (nil))

(note 23 16 24 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 24 23 25 2 arch/arm/kernel/setup.c:645 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 25 24 20)

(note 20 25 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_serialnr (parse_tag_serialnr)[0:1401] (unlikely executed)



try_optimize_cfg iteration 1



parse_tag_serialnr

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={3d,3u,1d} r3={2d,2u,1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 25{11d,12u,2e} in 9{9 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 28 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 3 2 2 NOTE_INSN_DELETED)

(insn 2 12 6 2 arch/arm/kernel/setup.c:650 (set (reg/v/f:SI 2 r2 [orig:134 tag ] [134])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tag ])
        (nil)))

(insn 6 2 16 2 arch/arm/kernel/setup.c:651 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 16 6 7 2 arch/arm/kernel/setup.c:654 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 7 16 8 2 arch/arm/kernel/setup.c:651 (set (reg:SI 1 r1 [orig:136 <variable>.u.serialnr.low ] [136])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:134 tag ] [134])
                (const_int 8 [0x8])) [0 <variable>.u.serialnr.low+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:134 tag ] [134])
                (const_int 8 [0x8])) [0 <variable>.u.serialnr.low+0 S4 A32])
        (nil)))

(insn 8 7 10 2 arch/arm/kernel/setup.c:651 (set (mem/c/i:SI (reg/f:SI 3 r3 [135]) [0 system_serial_low+0 S4 A32])
        (reg:SI 1 r1 [orig:136 <variable>.u.serialnr.low ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:136 <variable>.u.serialnr.low ] [136])
        (nil)))

(insn 10 8 11 2 arch/arm/kernel/setup.c:652 (set (reg:SI 2 r2 [orig:138 <variable>.u.serialnr.high ] [138])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:134 tag ] [134])
                (const_int 12 [0xc])) [0 <variable>.u.serialnr.high+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 4 [0x4])) [0 system_serial_high+0 S4 A32])
        (nil)))

(insn 11 10 22 2 arch/arm/kernel/setup.c:652 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 4 [0x4])) [0 system_serial_high+0 S4 A32])
        (reg:SI 2 r2 [orig:138 <variable>.u.serialnr.high ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:138 <variable>.u.serialnr.high ] [138])
            (nil))))

(insn 22 11 29 2 arch/arm/kernel/setup.c:654 (use (reg/i:SI 0 r0)) -1 (nil))

(note 29 22 30 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 30 29 31 2 arch/arm/kernel/setup.c:654 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 31 30 26)

(note 26 31 27 NOTE_INSN_DELETED)

(note 27 26 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_revision (parse_tag_revision)[0:1402] (unlikely executed)



try_optimize_cfg iteration 1



parse_tag_revision

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3]
;;  ref usage 	r0={2d,3u} r1={1d} r2={2d,1u} r3={2d,1u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{9d,8u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 25 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 25 4 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 25 3 2 NOTE_INSN_DELETED)

(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 7 2 NOTE_INSN_DELETED)

(insn 7 9 13 2 arch/arm/kernel/setup.c:660 (set (reg:SI 2 r2 [orig:136 <variable>.u.revision.rev ] [136])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.revision.rev+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tag ])
        (nil)))

(insn 13 7 6 2 arch/arm/kernel/setup.c:662 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 6 13 8 2 arch/arm/kernel/setup.c:660 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 8 6 19 2 arch/arm/kernel/setup.c:660 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 8 [0x8])) [0 system_rev+0 S4 A32])
        (reg:SI 2 r2 [orig:136 <variable>.u.revision.rev ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 <variable>.u.revision.rev ] [136])
            (nil))))

(insn 19 8 26 2 arch/arm/kernel/setup.c:662 (use (reg/i:SI 0 r0)) -1 (nil))

(note 26 19 27 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 27 26 28 2 arch/arm/kernel/setup.c:662 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 28 27 23)

(note 23 28 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function customize_machine (customize_machine)[0:1406] (unlikely executed)



try_optimize_cfg iteration 1



customize_machine

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={5d,4u} r4={1d,2u} r12={1d} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 147{130d,17u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 30 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 30 3 31 2 arch/arm/kernel/setup.c:733 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 31 30 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 31 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/setup.c:735 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/setup.c:735 (set (reg/f:SI 3 r3 [orig:136 machine_desc ] [136])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [135]) [0 machine_desc+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 machine_desc+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/setup.c:735 (set (reg/f:SI 3 r3 [orig:133 D.25735 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:136 machine_desc ] [136])
                (const_int 56 [0x38])) [0 <variable>.init_machine+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/setup.c:735 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:133 D.25735 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/setup.c:735 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 11 10 12 3 arch/arm/kernel/setup.c:736 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:133 D.25735 ] [133]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:133 D.25735 ] [133])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [21.6%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 12 11 13 4 30 "" [1 uses])

(note 13 12 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 13 24 4 arch/arm/kernel/setup.c:738 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 24 18 32 4 arch/arm/kernel/setup.c:738 (use (reg/i:SI 0 r0)) -1 (nil))

(note 32 24 33 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 33 32 34 4 arch/arm/kernel/setup.c:738 (return) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 34 33 28)

(note 28 34 29 NOTE_INSN_DELETED)

(note 29 28 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function c_start (c_start)[0:1414]



try_optimize_cfg iteration 1

merging block 6 into block 5
deleting insn with uid = 24.
deleting insn with uid = 42.
changing bb of uid 35
  from 6 to 5
changing bb of uid 49
  from 6 to 5
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1



c_start

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d,2u,1d} r2={1d} r3={3d,2u} r13={1d,5u} r14={1d,1u} r24={2d,3u} 
;;    total ref usage 30{12d,17u,1e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 47 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 47 5 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 47 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/setup.c:1067 (set (reg:SI 0 r0 [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/setup.c:1067 (set (reg:SI 3 r3 [138])
        (mem:SI (plus:SI (reg/v/f:SI 1 r1 [orig:135 pos ] [135])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/v/f:SI 1 r1 [orig:135 pos ] [135])
                (const_int 4 [0x4])) [0 S4 A32])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/setup.c:1067 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [138])
            (reg:SI 0 r0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [138])
        (nil)))

(jump_insn 10 9 37 2 arch/arm/kernel/setup.c:1067 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
        (nil)))
;; End of basic block 2 -> ( 1 3)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  EXIT [79.0%] 
;; Succ edge  3 [21.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [21.0%]  (fallthru)
(note 37 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 13 37 38 3 arch/arm/kernel/setup.c:1067 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 38 13 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 38 15 4 arch/arm/kernel/setup.c:1067 (set (reg:SI 3 r3 [140])
        (mem:SI (reg/v/f:SI 1 r1 [orig:135 pos ] [135]) [0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:135 pos ] [135])
        (nil)))

(insn 15 14 16 4 arch/arm/kernel/setup.c:1067 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [140])
            (reg:SI 0 r0))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [140])
        (nil)))

(jump_insn 16 15 22 4 arch/arm/kernel/setup.c:1067 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 1 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%]  (fallthru)
(code_label 22 16 41 5 36 "" [1 uses])

(note 41 22 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 41 35 5 arch/arm/kernel/setup.c:1067 (set (reg:SI 0 r0 [137])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 35 23 49 5 arch/arm/kernel/setup.c:1067 (use (reg/i:SI 0 r0)) -1 (nil))

(jump_insn 49 35 48 5 arch/arm/kernel/setup.c:1067 (return) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 48 49 45)

(note 45 48 46 NOTE_INSN_DELETED)

(note 46 45 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function c_next (c_next)[0:1415]



try_optimize_cfg iteration 1



c_next

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d,2u} r3={1d} r4={3d,6u} r5={3d,4u} r6={2d,4u} r7={2d,3u} r13={2d,3u} r14={1d,2u} r24={1d,1u} 
;;    total ref usage 46{19d,27u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 33 6 34 2 arch/arm/kernel/setup.c:1070 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 7 r7)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -20 [0xffffffffffffffec])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 7 r7))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 16 [0x10])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 34 33 5 2 NOTE_INSN_PROLOGUE_END)

(note 5 34 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 5 16 2 NOTE_INSN_DELETED)

(insn 16 12 8 2 arch/arm/kernel/setup.c:1073 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 8 16 29 2 arch/arm/kernel/setup.c:1071 (set (reg:DI 4 r4 [139])
        (mem:DI (reg/v/f:SI 2 r2 [orig:136 pos ] [136]) [0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 29 8 30 2 arch/arm/kernel/setup.c:1071 (set (reg:SI 6 r6 [138])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 2 arch/arm/kernel/setup.c:1071 (set (reg:SI 7 r7 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 2 arch/arm/kernel/setup.c:1071 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [139])
                        (reg:SI 6 r6 [138]))
                    (reg:SI 4 r4 [139])))
            (set (reg:SI 4 r4 [139])
                (plus:SI (reg:SI 4 r4 [139])
                    (reg:SI 6 r6 [138])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 32 31 11 2 arch/arm/kernel/setup.c:1071 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 7 r7 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 11 32 22 2 arch/arm/kernel/setup.c:1071 (set (mem:DI (reg/v/f:SI 2 r2 [orig:136 pos ] [136]) [0 S8 A64])
        (reg:DI 4 r4 [139])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:136 pos ] [136])
        (nil)))

(insn 22 11 35 2 arch/arm/kernel/setup.c:1073 (use (reg/i:SI 0 r0)) -1 (nil))

(note 35 22 36 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 36 35 37 2 arch/arm/kernel/setup.c:1073 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 37 36 26)

(note 26 37 28 NOTE_INSN_DELETED)

(note 28 26 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function c_stop (c_stop)[0:1416]



try_optimize_cfg iteration 1



c_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 9{6d,3u,0e} in 1{1 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 16 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 16 5 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 16 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 4 18 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 18 17 19 2 arch/arm/kernel/setup.c:1077 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 19 18 14)

(note 14 19 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_cmdline (parse_tag_cmdline)[0:1403] (unlikely executed)



try_optimize_cfg iteration 1



parse_tag_cmdline

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={3d,1u} r3={2d} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{129d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 29 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 29 4 30 2 arch/arm/kernel/setup.c:667 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 30 29 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 30 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(note 7 6 13 2 NOTE_INSN_DELETED)

(note 13 7 8 2 NOTE_INSN_DELETED)

(insn 8 13 11 2 arch/arm/kernel/setup.c:675 (set (reg/f:SI 1 r1 [137])
        (plus:SI (reg:SI 0 r0 [ tag ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [ tag ])
        (nil)))

(insn 11 8 9 2 arch/arm/kernel/setup.c:675 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(insn 9 11 12 2 arch/arm/kernel/setup.c:675 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 12 9 17 2 arch/arm/kernel/setup.c:675 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 17 12 23 2 arch/arm/kernel/setup.c:679 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 23 17 31 2 arch/arm/kernel/setup.c:679 (use (reg/i:SI 0 r0)) -1 (nil))

(note 31 23 32 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 32 31 33 2 arch/arm/kernel/setup.c:679 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 33 32 27)

(note 27 33 28 NOTE_INSN_DELETED)

(note 28 27 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function topology_init (topology_init)[0:1411] (unlikely executed)



try_optimize_cfg iteration 1



topology_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,2u} r2={4d,1u} r3={7d,5u} r4={3d,4u} r5={2d,3u,1d} r6={2d,3u,1d} r7={2d,3u} r8={2d,3u} r9={1d,2u} r10={3d,6u,2d} r12={2d} r13={2d,8u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 319{267d,48u,4e} in 27{25 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 61 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 61 3 62 2 arch/arm/kernel/setup.c:948 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (expr_list:REG_DEAD (reg:SI 8 r8)
                (expr_list:REG_DEAD (reg:SI 7 r7)
                    (expr_list:REG_DEAD (reg:SI 6 r6)
                        (expr_list:REG_DEAD (reg:SI 5 r5)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                            (set/f (reg/f:SI 13 sp)
                                                (plus:SI (reg/f:SI 13 sp)
                                                    (const_int -32 [0xffffffffffffffe0])))
                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                (reg:SI 4 r4))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                (reg:SI 5 r5))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                (reg:SI 6 r6))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                (reg:SI 7 r7))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                (reg:SI 8 r8))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                (reg:SI 9 r9))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                (reg:SI 10 sl))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                (reg:SI 14 lr))
                                        ])
                                    (nil))))))))))

(note 62 61 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 62 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 9 2 arch/arm/kernel/setup.c:951 (set (reg/v:SI 10 sl [orig:136 cpu ] [136])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 9 5 14 2 arch/arm/kernel/setup.c:952 (set (reg:SI 4 r4 [orig:151 __ptr ] [151])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 14 9 10 2 arch/arm/kernel/setup.c:953 (set (reg:SI 8 r8 [153])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 10 14 59 2 arch/arm/kernel/setup.c:952 (set (reg:SI 4 r4 [orig:151 __ptr ] [151])
        (asm_operands:SI ("") ("=r") 0 [
                (reg:SI 4 r4 [orig:151 __ptr ] [151])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 10520071)) -1 (nil))

(insn 59 10 23 2 include/linux/cpumask.h:174 (set (reg/f:SI 3 r3 [146])
        (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>)
        (nil)))

(insn 23 59 29 2 include/linux/cpumask.h:174 (set (reg/f:SI 7 r7 [orig:147 cpu_possible_mask ] [147])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [146]) [0 cpu_possible_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [146])
        (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>) [0 cpu_possible_mask+0 S4 A32])
            (nil))))

(insn 29 23 11 2 arch/arm/kernel/setup.c:951 discrim 1 (set (reg/f:SI 6 r6 [149])
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)
        (nil)))

(insn 11 29 56 2 arch/arm/kernel/setup.c:952 (set (reg/f:SI 5 r5 [152])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(jump_insn 56 11 57 2 arch/arm/kernel/setup.c:951 (set (pc)
        (label_ref 19)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 57 56 28)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 28 57 8 3 48 "" [1 uses])

(note 8 28 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 8 13 3 arch/arm/kernel/setup.c:952 (set (reg:SI 3 r3 [140])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:136 cpu ] [136])
                    (const_int 4 [0x4]))
                (reg/f:SI 5 r5 [152])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:136 cpu ] [136])
                    (const_int 4 [0x4]))
                (reg/f:SI 5 r5 [152])) [0 __per_cpu_offset S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 10 sl [orig:136 cpu ] [136])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 13 12 16 3 arch/arm/kernel/setup.c:952 (set (reg/v/f:SI 3 r3 [orig:135 cpuinfo ] [135])
        (plus:SI (reg:SI 4 r4 [orig:151 __ptr ] [151])
            (reg:SI 3 r3 [140]))) 4 {*arm_addsi3} (nil))

(insn 16 13 15 3 arch/arm/kernel/setup.c:954 (set (reg:SI 0 r0)
        (reg/v/f:SI 3 r3 [orig:135 cpuinfo ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 15 16 18 3 arch/arm/kernel/setup.c:953 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 cpuinfo ] [135])
                (const_int 4 [0x4])) [0 <variable>.cpu.hotpluggable+0 S4 A32])
        (reg:SI 8 r8 [153])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:135 cpuinfo ] [135])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(call_insn 18 15 19 3 arch/arm/kernel/setup.c:954 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_cpu") [flags 0x41] <function_decl 0x11095300 register_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 19 18 20 4 47 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 20 25 4 NOTE_INSN_DELETED)

(insn 25 21 50 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 10 sl [orig:136 cpu ] [136])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 10 sl [orig:136 cpu ] [136])
        (nil)))

(insn 50 25 49 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 49 50 26 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 7 r7 [orig:147 cpu_possible_mask ] [147])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 49 27 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 27 26 17 4 include/linux/cpumask.h:174 (set (reg/v:SI 10 sl [orig:136 cpu ] [136])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 17 27 30 4 arch/arm/kernel/setup.c:954 (set (reg:SI 1 r1)
        (reg/v:SI 10 sl [orig:136 cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 30 17 31 4 arch/arm/kernel/setup.c:951 discrim 1 (set (reg:SI 3 r3 [orig:144 nr_cpu_ids ] [144])
        (mem/c/i:SI (reg/f:SI 6 r6 [149]) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 6 r6 [149]) [0 nr_cpu_ids+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
            (nil))))

(insn 31 30 32 4 arch/arm/kernel/setup.c:951 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:136 cpu ] [136])
            (reg:SI 3 r3 [orig:144 nr_cpu_ids ] [144]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:144 nr_cpu_ids ] [144])
        (nil)))

(jump_insn 32 31 33 4 arch/arm/kernel/setup.c:951 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 33 32 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 33 44 5 arch/arm/kernel/setup.c:958 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 44 38 63 5 arch/arm/kernel/setup.c:958 (use (reg/i:SI 0 r0)) -1 (nil))

(note 63 44 64 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 64 63 65 5 arch/arm/kernel/setup.c:958 (return) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 65 64 58)

(note 58 65 60 NOTE_INSN_DELETED)

(note 60 58 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function proc_cpu_init (proc_cpu_init)[0:1412] (unlikely executed)



try_optimize_cfg iteration 1



proc_cpu_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{129d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 39 3 40 2 arch/arm/kernel/setup.c:963 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 40 39 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 40 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 2 36 2 NOTE_INSN_DELETED)

(note 36 9 6 2 NOTE_INSN_DELETED)

(insn 6 36 7 2 arch/arm/kernel/setup.c:966 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b7c60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b7c60>)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/setup.c:966 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 7 10 2 arch/arm/kernel/setup.c:966 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("proc_mkdir") [flags 0x41] <function_decl 0x11298400 proc_mkdir>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 8 25 2 arch/arm/kernel/setup.c:967 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 25 10 31 2 arch/arm/kernel/setup.c:970 (set (reg/i:SI 0 r0)
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -12 [0xfffffffffffffff4])
            (const_int 0 [0x0]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 31 25 41 2 arch/arm/kernel/setup.c:970 (use (reg/i:SI 0 r0)) -1 (nil))

(note 41 31 42 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 42 41 43 2 arch/arm/kernel/setup.c:970 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 43 42 37)

(note 37 43 38 NOTE_INSN_DELETED)

(note 38 37 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function c_show (c_show)[0:1413]



try_optimize_cfg iteration 1

Splitting bb 13 before 1 insns
changing bb of uid 288
  unscanned insn
changing bb of uid 197
  from 13 to 16
Cross jumping from bb 12 to bb 13; 1 common insns
changing bb of uid 289
  unscanned insn
changing bb of uid 185
  from 12 to 17
changing bb of uid 275
  from 12 to 17
scanning new insn with uid = 291.
deleting insn with uid = 289.
deleting insn with uid = 185.
deleting insn with uid = 275.
deleting insn with uid = 276.
deleting block 17
deleting insn with uid = 198.
Deleted label in block 14.
Splitting bb 14 before 1 insns
changing bb of uid 293
  unscanned insn
changing bb of uid 208
  from 14 to 18
Cross jumping from bb 10 to bb 14; 1 common insns
changing bb of uid 294
  unscanned insn
changing bb of uid 168
  from 10 to 19
changing bb of uid 273
  from 10 to 19
scanning new insn with uid = 296.
deleting insn with uid = 294.
deleting insn with uid = 168.
deleting insn with uid = 273.
deleting insn with uid = 274.
deleting block 19
deleting insn with uid = 209.
Deleted label in block 15.


try_optimize_cfg iteration 2

merging block 14 into block 16
deleting insn with uid = 199.
changing bb of uid 202
changing bb of uid 203
changing bb of uid 204
changing bb of uid 200
  from 14 to 16
changing bb of uid 207
  from 14 to 16
changing bb of uid 205
  from 14 to 16
changing bb of uid 206
  from 14 to 16
Merged 16 and 14 without moving.
merging block 15 into block 18
deleting insn with uid = 210.
changing bb of uid 213
changing bb of uid 223
  from 15 to 18
changing bb of uid 214
  from 15 to 18
changing bb of uid 211
  from 15 to 18
changing bb of uid 216
  from 15 to 18
changing bb of uid 215
  from 15 to 18
changing bb of uid 217
  from 15 to 18
changing bb of uid 219
  from 15 to 18
changing bb of uid 220
  from 15 to 18
changing bb of uid 221
  from 15 to 18
changing bb of uid 225
  from 15 to 18
changing bb of uid 226
  from 15 to 18
changing bb of uid 224
  from 15 to 18
changing bb of uid 227
  from 15 to 18
changing bb of uid 230
  from 15 to 18
changing bb of uid 231
  from 15 to 18
changing bb of uid 232
  from 15 to 18
changing bb of uid 233
  from 15 to 18
changing bb of uid 237
  from 15 to 18
changing bb of uid 240
  from 15 to 18
changing bb of uid 238
  from 15 to 18
changing bb of uid 239
  from 15 to 18
changing bb of uid 241
  from 15 to 18
changing bb of uid 246
  from 15 to 18
changing bb of uid 252
  from 15 to 18
changing bb of uid 285
changing bb of uid 286
  from 15 to 18
Merged 18 and 15 without moving.


try_optimize_cfg iteration 3

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 20 count 31 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 20 count 33 (  2.1)


c_show

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={38d,25u} r1={40d,20u} r2={37d,17u} r3={33d,12u} r4={2d,16u} r5={7d,19u,2d} r6={4d,5u,1d} r7={3d,4u,1d} r8={3d,4u,1d} r9={2d,4u,1d} r10={2d,3u} r11={2d,3u} r12={21d,3u} r13={2d,36u} r14={20d,2u} r15={19d} r16={19d} r17={19d} r18={19d} r19={19d} r20={19d} r21={19d} r22={19d} r23={19d} r24={28d,5u} r27={19d} r28={19d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={19d} r38={19d} r39={19d} r40={19d} r41={19d} r42={19d} r43={19d} r44={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r81={19d} r82={19d} r83={19d} r84={19d} r85={19d} r86={19d} r87={19d} r88={19d} r89={19d} r90={19d} r91={19d} r92={19d} r93={19d} r94={19d} r95={19d} r96={19d} r97={19d} r98={19d} r99={19d} r100={19d} r101={19d} r102={19d} r103={19d} r104={19d} r105={19d} r106={19d} r107={19d} r108={19d} r109={19d} r110={19d} r111={19d} r112={19d} r113={19d} r114={19d} r115={19d} r116={19d} r117={19d} r118={19d} r119={19d} r120={19d} r121={19d} r122={19d} r123={19d} r124={19d} r125={19d} r126={19d} r127={19d} 
;;    total ref usage 2518{2334d,178u,6e} in 122{103 regular + 19 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 4 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 3 2 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 6 [r6] 7 [r7] 8 [r8]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 8 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 3 [r3]
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 7 5 6 )->[8]->( 6 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 9 )->[10]->( 18 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 9 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 11 )->[12]->( 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 11 )->[13]->( 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 13 12 )->[16]->( 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 16 10 )->[18]->( 1 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 18 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 269 to worklist
  Adding insn 47 to worklist
  Adding insn 42 to worklist
  Adding insn 283 to worklist
  Adding insn 90 to worklist
  Adding insn 58 to worklist
  Adding insn 103 to worklist
  Adding insn 97 to worklist
  Adding insn 271 to worklist
  Adding insn 108 to worklist
  Adding insn 119 to worklist
  Adding insn 125 to worklist
  Adding insn 136 to worklist
  Adding insn 160 to worklist
  Adding insn 156 to worklist
  Adding insn 144 to worklist
  Adding insn 296 to worklist
  Adding insn 176 to worklist
  Adding insn 291 to worklist
  Adding insn 197 to worklist
  Adding insn 286 to worklist
  Adding insn 252 to worklist
  Adding insn 241 to worklist
  Adding insn 233 to worklist
  Adding insn 227 to worklist
  Adding insn 221 to worklist
  Adding insn 217 to worklist
  Adding insn 208 to worklist
Finished finding needed instructions:
processing block 3 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 268 to worklist
  Adding insn 88 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 80 to worklist
  Adding insn 267 to worklist
  Adding insn 78 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 266 to worklist
  Adding insn 62 to worklist
processing block 7 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 259 to worklist
  Adding insn 122 to worklist
processing block 6 lr out =  2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 128 to worklist
  Adding insn 118 to worklist
  Adding insn 116 to worklist
processing block 18 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 246 to worklist
  Adding insn 239 to worklist
  Adding insn 238 to worklist
  Adding insn 240 to worklist
  Adding insn 237 to worklist
  Adding insn 232 to worklist
  Adding insn 231 to worklist
  Adding insn 230 to worklist
  Adding insn 224 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 220 to worklist
  Adding insn 219 to worklist
  Adding insn 215 to worklist
  Adding insn 216 to worklist
  Adding insn 211 to worklist
  Adding insn 214 to worklist
  Adding insn 223 to worklist
processing block 10 lr out =  0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 167 to worklist
processing block 16 lr out =  0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 206 to worklist
  Adding insn 205 to worklist
  Adding insn 207 to worklist
  Adding insn 200 to worklist
processing block 12 lr out =  0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 183 to worklist
  Adding insn 182 to worklist
  Adding insn 184 to worklist
processing block 13 lr out =  0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 195 to worklist
  Adding insn 194 to worklist
  Adding insn 196 to worklist
processing block 11 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 175 to worklist
processing block 9 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 159 to worklist
  Adding insn 155 to worklist
  Adding insn 153 to worklist
  Adding insn 151 to worklist
  Adding insn 279 to worklist
  Adding insn 154 to worklist
  Adding insn 145 to worklist
  Adding insn 141 to worklist
  Adding insn 143 to worklist
  Adding insn 142 to worklist
  Adding insn 138 to worklist
processing block 8 lr out =  2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 135 to worklist
  Adding insn 133 to worklist
processing block 5 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 115 to worklist
  Adding insn 113 to worklist
  Adding insn 131 to worklist
  Adding insn 109 to worklist
  Adding insn 107 to worklist
processing block 4 lr out =  0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 55 to worklist
  Adding insn 262 to worklist
  Adding insn 57 to worklist
  Adding insn 98 to worklist
  Adding insn 94 to worklist
  Adding insn 260 to worklist
  Adding insn 96 to worklist
processing block 2 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 61 to worklist
  Adding insn 100 to worklist
  Adding insn 49 to worklist
  Adding insn 280 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 50 to worklist
  Adding insn 41 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 46 to worklist
  Adding insn 36 to worklist
  Adding insn 31 to worklist
  Adding insn 38 to worklist


try_optimize_cfg iteration 1



c_show

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={38d,25u} r1={40d,20u} r2={37d,17u} r3={33d,12u} r4={2d,16u} r5={7d,19u,2d} r6={4d,5u,1d} r7={3d,4u,1d} r8={3d,4u,1d} r9={2d,4u,1d} r10={2d,3u} r11={2d,3u} r12={21d,3u} r13={2d,36u} r14={20d,2u} r15={19d} r16={19d} r17={19d} r18={19d} r19={19d} r20={19d} r21={19d} r22={19d} r23={19d} r24={28d,5u} r27={19d} r28={19d} r29={19d} r30={19d} r31={19d} r32={19d} r33={19d} r34={19d} r35={19d} r36={19d} r37={19d} r38={19d} r39={19d} r40={19d} r41={19d} r42={19d} r43={19d} r44={19d} r45={19d} r46={19d} r47={19d} r48={19d} r49={19d} r50={19d} r51={19d} r52={19d} r53={19d} r54={19d} r55={19d} r56={19d} r57={19d} r58={19d} r59={19d} r60={19d} r61={19d} r62={19d} r63={19d} r64={19d} r65={19d} r66={19d} r67={19d} r68={19d} r69={19d} r70={19d} r71={19d} r72={19d} r73={19d} r74={19d} r75={19d} r76={19d} r77={19d} r78={19d} r79={19d} r80={19d} r81={19d} r82={19d} r83={19d} r84={19d} r85={19d} r86={19d} r87={19d} r88={19d} r89={19d} r90={19d} r91={19d} r92={19d} r93={19d} r94={19d} r95={19d} r96={19d} r97={19d} r98={19d} r99={19d} r100={19d} r101={19d} r102={19d} r103={19d} r104={19d} r105={19d} r106={19d} r107={19d} r108={19d} r109={19d} r110={19d} r111={19d} r112={19d} r113={19d} r114={19d} r115={19d} r116={19d} r117={19d} r118={19d} r119={19d} r120={19d} r121={19d} r122={19d} r123={19d} r124={19d} r125={19d} r126={19d} r127={19d} 
;;    total ref usage 2518{2334d,178u,6e} in 122{103 regular + 19 call} insns.
(note 30 0 34 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 34 30 283 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 283 34 284 2 arch/arm/kernel/setup.c:998 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (expr_list:REG_DEAD (reg:SI 8 r8)
                (expr_list:REG_DEAD (reg:SI 7 r7)
                    (expr_list:REG_DEAD (reg:SI 6 r6)
                        (expr_list:REG_DEAD (reg:SI 5 r5)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_DEAD (reg:SI 2 r2)
                                    (expr_list:REG_DEAD (reg:SI 1 r1)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -48 [0xffffffffffffffd0])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 0 r0))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 1 r1))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 2 r2))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 36 [0x24])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 40 [0x28])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 44 [0x2c])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(note 284 283 33 2 NOTE_INSN_PROLOGUE_END)

(note 33 284 39 2 NOTE_INSN_FUNCTION_BEG)

(note 39 33 38 2 NOTE_INSN_DELETED)

(insn 38 39 31 2 arch/arm/kernel/setup.c:1001 (set (reg/f:SI 12 ip [184])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 31 38 36 2 arch/arm/kernel/setup.c:998 (set (reg/v/f:SI 4 r4 [orig:181 m ] [181])
        (reg:SI 0 r0 [ m ])) 167 {*arm_movsi_insn} (nil))

(insn 36 31 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 3 r3 [orig:173 __val ] [173])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 46 36 44 2 arch/arm/kernel/setup.c:1001 (set (reg:SI 3 r3)
        (and:SI (reg/v:SI 3 r3 [orig:173 __val ] [173])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 44 46 45 2 arch/arm/kernel/setup.c:1001 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1164f000>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1164f000>)
        (nil)))

(insn 45 44 41 2 arch/arm/kernel/setup.c:1001 (set (reg:SI 2 r2)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 12 ip [184])
                (const_int 12 [0xc])) [0 cpu_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 cpu_name+0 S4 A32])
        (nil)))

(insn 41 45 42 2 arch/arm/kernel/setup.c:1001 (set (reg/f:SI 12 ip [187])
        (plus:SI (reg/f:SI 12 ip [184])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 42 41 47 2 arch/arm/kernel/setup.c:1001 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [187])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [187])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(call_insn 47 42 50 2 arch/arm/kernel/setup.c:1001 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 50 47 59 2 arch/arm/kernel/setup.c:1008 (set (reg/v:SI 5 r5 [orig:176 i ] [176])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 59 50 60 2 arch/arm/kernel/setup.c:1017 (set (reg:SI 6 r6 [orig:268 __ptr ] [268])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 60 59 280 2 arch/arm/kernel/setup.c:1017 (set (reg:SI 6 r6 [orig:268 __ptr ] [268])
        (asm_operands:SI ("") ("=r") 0 [
                (reg:SI 6 r6 [orig:268 __ptr ] [268])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 10528364)) -1 (nil))

(insn 280 60 49 2 include/linux/cpumask.h:174 (set (reg/f:SI 3 r3 [188])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn 49 280 100 2 include/linux/cpumask.h:174 (set (reg/f:SI 10 sl [orig:171 D.26017 ] [171])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [188]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [188])
        (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
            (nil))))

(insn 100 49 61 2 arch/arm/kernel/setup.c:1008 discrim 1 (set (reg/f:SI 7 r7 [265])
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)
        (nil)))

(insn 61 100 269 2 arch/arm/kernel/setup.c:1017 (set (reg/f:SI 8 r8 [269])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(jump_insn 269 61 270 2 arch/arm/kernel/setup.c:1008 (set (pc)
        (label_ref 91)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 270 269 99)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp]
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 99 270 53 3 60 "" [1 uses])

(note 53 99 58 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 58 53 62 3 arch/arm/kernel/setup.c:1015 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 62 58 266 3 arch/arm/kernel/setup.c:1017 (set (reg:SI 3 r3 [orig:179 D.25874 ] [179])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:176 i ] [176])
                    (const_int 4 [0x4]))
                (reg/f:SI 8 r8 [269])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:176 i ] [176])
                    (const_int 4 [0x4]))
                (reg/f:SI 8 r8 [269])) [0 __per_cpu_offset S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:176 i ] [176])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 266 62 67 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (nil))

(insn 67 266 69 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 3 r3 [195])
        (plus:SI (reg:SI 6 r6 [orig:268 __ptr ] [268])
            (reg:SI 3 r3 [orig:179 D.25874 ] [179]))) 4 {*arm_addsi3} (nil))

(insn 69 67 70 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 9 r9 [orig:198 <variable>.loops_per_jiffy ] [198])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [195])
                (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [195])
        (nil)))

(insn 70 69 72 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 0 r0)
        (reg:SI 9 r9 [orig:198 <variable>.loops_per_jiffy ] [198])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 72 70 73 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 73 72 78 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 11 fp [201])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg:SI 9 r9 [orig:198 <variable>.loops_per_jiffy ] [198])
                (const_int 5000 [0x1388]))
            (nil))))

(insn 78 73 267 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 0 r0)
        (reg:SI 9 r9 [orig:198 <variable>.loops_per_jiffy ] [198])) 167 {*arm_movsi_insn} (nil))

(insn 267 78 80 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 80 267 83 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 83 80 84 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 84 83 85 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 85 84 86 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 3 r3 [orig:215+4 ] [215])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 86 85 88 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 88 86 268 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 2 r2)
        (reg:SI 11 fp [201])) 167 {*arm_movsi_insn} (nil))

(insn 268 88 90 3 arch/arm/kernel/setup.c:1016 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1164cea0>)) 167 {*arm_movsi_insn} (nil))

(call_insn 90 268 91 3 arch/arm/kernel/setup.c:1016 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 91 90 92 4 59 "" [1 uses])

(note 92 91 93 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 93 92 96 4 NOTE_INSN_DELETED)

(insn 96 93 260 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 5 r5 [orig:176 i ] [176])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:176 i ] [176])
        (nil)))

(insn 260 96 94 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 94 260 97 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 10 sl [orig:171 D.26017 ] [171])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 94 98 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 98 97 57 4 include/linux/cpumask.h:174 (set (reg/v:SI 5 r5 [orig:176 i ] [176])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 57 98 262 4 arch/arm/kernel/setup.c:1015 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:176 i ] [176])) 167 {*arm_movsi_insn} (nil))

(insn 262 57 55 4 arch/arm/kernel/setup.c:1015 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164cbd0>)) 167 {*arm_movsi_insn} (nil))

(insn 55 262 101 4 arch/arm/kernel/setup.c:1015 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 101 55 102 4 arch/arm/kernel/setup.c:1008 discrim 1 (set (reg:SI 3 r3 [orig:217 nr_cpu_ids ] [217])
        (mem/c/i:SI (reg/f:SI 7 r7 [265]) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 7 r7 [265]) [0 nr_cpu_ids+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
            (nil))))

(insn 102 101 103 4 arch/arm/kernel/setup.c:1008 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:176 i ] [176])
            (reg:SI 3 r3 [orig:217 nr_cpu_ids ] [217]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:217 nr_cpu_ids ] [217])
        (nil)))

(jump_insn 103 102 104 4 arch/arm/kernel/setup.c:1008 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 6 [r6] 7 [r7] 8 [r8]
;; live  kill	 14 [lr]

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 104 103 107 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 107 104 108 5 arch/arm/kernel/setup.c:1027 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116c6b70>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116c6b70>)
        (nil)))

(call_insn 108 107 109 5 arch/arm/kernel/setup.c:1027 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_puts") [flags 0x41] <function_decl 0x11048480 seq_puts>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 109 108 131 5 arch/arm/kernel/setup.c:1029 (set (reg/v:SI 5 r5 [orig:162 i.719 ] [162])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 131 109 113 5 arch/arm/kernel/setup.c:1029 discrim 1 (set (reg/f:SI 8 r8 [260])
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])
        (nil)))

(insn 113 131 115 5 arch/arm/kernel/setup.c:1030 (set (reg:SI 7 r7 [261])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 115 113 271 5 arch/arm/kernel/setup.c:1030 (set (reg/f:SI 6 r6 [262])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(jump_insn 271 115 272 5 arch/arm/kernel/setup.c:1029 (set (pc)
        (label_ref 129)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 272 271 134)

;; Start of basic block ( 8) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  8 [95.0%] 
(code_label 134 272 112 6 63 "" [1 uses])

(note 112 134 114 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 114 112 117 6 NOTE_INSN_DELETED)

(note 117 114 116 6 NOTE_INSN_DELETED)

(insn 116 117 118 6 arch/arm/kernel/setup.c:1030 (set (reg:SI 3 r3 [orig:223 elf_hwcap ] [223])
        (mem/c/i:SI (reg/f:SI 6 r6 [262]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 6 r6 [262]) [0 elf_hwcap+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182]) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 118 116 128 6 arch/arm/kernel/setup.c:1030 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (ashift:SI (reg:SI 7 r7 [261])
                            (reg/v:SI 5 r5 [orig:162 i.719 ] [162]))
                        (reg:SI 3 r3 [orig:223 elf_hwcap ] [223]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 272 {*arith_shiftsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:223 elf_hwcap ] [223])
        (expr_list:REG_UNUSED (reg:SI 3 r3)
            (nil))))

(insn 128 118 119 6 arch/arm/kernel/setup.c:1029 (set (reg/v:SI 5 r5 [orig:162 i.719 ] [162])
        (plus:SI (reg/v:SI 5 r5 [orig:162 i.719 ] [162])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 119 128 120 6 arch/arm/kernel/setup.c:1030 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 120 119 122 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 122 120 259 7 arch/arm/kernel/setup.c:1031 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 259 122 125 7 arch/arm/kernel/setup.c:1031 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x116b7ce0>)) 167 {*arm_movsi_insn} (nil))

(call_insn 125 259 129 7 arch/arm/kernel/setup.c:1031 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 7 5 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [71.0%] 
(code_label 129 125 130 8 61 "" [2 uses])

(note 130 129 133 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 133 130 135 8 arch/arm/kernel/setup.c:1029 discrim 1 (set (reg/f:SI 2 r2 [orig:178 D.25891 ] [178])
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:162 i.719 ] [162])
                    (const_int 4 [0x4]))
                (reg/f:SI 8 r8 [260])) [0 hwcap_str S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 135 133 136 8 arch/arm/kernel/setup.c:1029 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:178 D.25891 ] [178])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 136 135 137 8 arch/arm/kernel/setup.c:1029 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9500 [0x251c])
            (nil))))
;; End of basic block 8 -> ( 6 9)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [95.0%] 
;; Succ edge  9 [5.0%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  8 [5.0%]  (fallthru,loop_exit)
(note 137 136 140 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 140 137 146 9 NOTE_INSN_DELETED)

(note 146 140 150 9 NOTE_INSN_DELETED)

(note 150 146 158 9 NOTE_INSN_DELETED)

(note 158 150 138 9 NOTE_INSN_DELETED)

(insn 138 158 142 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 5 r5 [orig:170 __val ] [170])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 142 138 143 9 arch/arm/kernel/setup.c:1033 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116c2ac0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116c2ac0>)
        (nil)))

(insn 143 142 141 9 arch/arm/kernel/setup.c:1033 (set (reg:SI 2 r2)
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:170 __val ] [170])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (nil))

(insn 141 143 144 9 arch/arm/kernel/setup.c:1033 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(call_insn 144 141 145 9 arch/arm/kernel/setup.c:1033 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(call_insn/u 145 144 154 9 arch/arm/kernel/setup.c:1034 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x3] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 154 145 279 9 arch/arm/kernel/setup.c:1034 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x116c9180>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x116c9180>)
        (nil)))

(insn 279 154 151 9 arch/arm/kernel/setup.c:1034 (set (reg/f:SI 3 r3 [225])
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])
        (nil)))

(insn 151 279 153 9 arch/arm/kernel/setup.c:1034 (set (reg:SI 3 r3 [233])
        (plus:SI (mult:SI (reg:SI 0 r0)
                (const_int 4 [0x4]))
            (reg/f:SI 3 r3 [225]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 153 151 155 9 arch/arm/kernel/setup.c:1034 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 155 153 156 9 arch/arm/kernel/setup.c:1034 (set (reg:SI 2 r2)
        (mem/s/u/f/j:SI (plus:SI (reg:SI 3 r3 [233])
                (const_int 80 [0x50])) [0 proc_arch S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [233])
        (nil)))

(call_insn 156 155 159 9 arch/arm/kernel/setup.c:1034 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 159 156 160 9 arch/arm/kernel/setup.c:1036 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 5 r5 [orig:170 __val ] [170])
                        (const_int 585728 [0x8f000]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [235])
                (and:SI (reg/v:SI 5 r5 [orig:170 __val ] [170])
                    (const_int 585728 [0x8f000])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 160 159 161 9 arch/arm/kernel/setup.c:1036 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 171)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [20.7%]  (fallthru)
;; Succ edge  11 [79.3%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  9 [20.7%]  (fallthru)
(note 161 160 164 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 164 161 167 10 NOTE_INSN_DELETED)

(insn 167 164 165 10 arch/arm/kernel/setup.c:1038 (set (reg:SI 2 r2)
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:170 __val ] [170])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:170 __val ] [170])
        (nil)))

(insn 165 167 166 10 arch/arm/kernel/setup.c:1038 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 166 165 296 10 arch/arm/kernel/setup.c:1038 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x116c95d0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x116c95d0>)
        (nil)))

(jump_insn 296 166 297 10 (set (pc)
        (label_ref 295)) -1 (nil))
;; End of basic block 10 -> ( 18)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [100.0%] 

(barrier 297 296 171)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [79.3%] 
(code_label 171 297 172 11 64 "" [1 uses])

(note 172 171 175 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 175 172 176 11 arch/arm/kernel/setup.c:1040 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [235])
            (const_int 28672 [0x7000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [235])
        (nil)))

(jump_insn 176 175 177 11 arch/arm/kernel/setup.c:1040 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  11 [28.0%]  (fallthru)
(note 177 176 180 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 180 177 181 12 NOTE_INSN_DELETED)

(note 181 180 184 12 NOTE_INSN_DELETED)

(insn 184 181 182 12 arch/arm/kernel/setup.c:1042 (set (reg:SI 2 r2)
        (zero_extract:SI (reg/v:SI 5 r5 [orig:170 __val ] [170])
            (const_int 7 [0x7])
            (const_int 16 [0x10]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:170 __val ] [170])
        (nil)))

(insn 182 184 183 12 arch/arm/kernel/setup.c:1042 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 183 182 291 12 arch/arm/kernel/setup.c:1042 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x116c9930>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x116c9930>)
        (nil)))

(jump_insn 291 183 292 12 (set (pc)
        (label_ref 290)) -1 (nil))
;; End of basic block 12 -> ( 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 292 291 188)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  11 [72.0%] 
(code_label 188 292 189 13 66 "" [1 uses])

(note 189 188 192 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 192 189 193 13 NOTE_INSN_DELETED)

(note 193 192 196 13 NOTE_INSN_DELETED)

(insn 196 193 194 13 arch/arm/kernel/setup.c:1046 (set (reg:SI 2 r2)
        (zero_extract:SI (reg/v:SI 5 r5 [orig:170 __val ] [170])
            (const_int 4 [0x4])
            (const_int 20 [0x14]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:170 __val ] [170])
        (nil)))

(insn 194 196 195 13 arch/arm/kernel/setup.c:1046 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 195 194 290 13 arch/arm/kernel/setup.c:1046 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x116c9ba0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x116c9ba0>)
        (nil)))
;; End of basic block 13 -> ( 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 290 195 288 16 69 "" [1 uses])

(note 288 290 197 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 197 288 202 16 arch/arm/kernel/setup.c:1046 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 202 197 203 16 NOTE_INSN_DELETED)

(note 203 202 204 16 NOTE_INSN_DELETED)

(note 204 203 200 16 NOTE_INSN_DELETED)

(insn 200 204 207 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 2 r2 [orig:164 __val ] [164])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 207 200 205 16 arch/arm/kernel/setup.c:1049 (set (reg:SI 2 r2)
        (zero_extract:SI (reg/v:SI 2 r2 [orig:164 __val ] [164])
            (const_int 12 [0xc])
            (const_int 4 [0x4]))) 124 {extzv_t2} (nil))

(insn 205 207 206 16 arch/arm/kernel/setup.c:1049 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 206 205 295 16 arch/arm/kernel/setup.c:1049 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x116c9d80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x116c9d80>)
        (nil)))
;; End of basic block 16 -> ( 18)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 10) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 295 206 293 18 70 "" [1 uses])

(note 293 295 208 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(call_insn 208 293 213 18 arch/arm/kernel/setup.c:1049 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 213 208 223 18 NOTE_INSN_DELETED)

(insn 223 213 214 18 arch/arm/kernel/setup.c:1056 (set (reg/f:SI 5 r5 [253])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 214 223 211 18 arch/arm/kernel/setup.c:1052 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 211 214 216 18 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 2 r2 [orig:163 __val ] [163])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 216 211 215 18 arch/arm/kernel/setup.c:1052 (set (reg:SI 2 r2)
        (and:SI (reg/v:SI 2 r2 [orig:163 __val ] [163])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 215 216 217 18 arch/arm/kernel/setup.c:1052 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x116c9f90>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x116c9f90>)
        (nil)))

(call_insn 217 215 219 18 arch/arm/kernel/setup.c:1052 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 219 217 220 18 arch/arm/kernel/setup.c:1054 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 220 219 221 18 arch/arm/kernel/setup.c:1054 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x116c7720>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x116c7720>)
        (nil)))

(call_insn 221 220 225 18 arch/arm/kernel/setup.c:1054 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_puts") [flags 0x41] <function_decl 0x11048480 seq_puts>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 225 221 226 18 arch/arm/kernel/setup.c:1056 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x116c9780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x116c9780>)
        (nil)))

(insn 226 225 224 18 arch/arm/kernel/setup.c:1056 (set (reg:SI 2 r2)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [253])
                (const_int 24 [0x18])) [0 machine_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 24 [0x18]))) [0 machine_name+0 S4 A32])
        (nil)))

(insn 224 226 227 18 arch/arm/kernel/setup.c:1056 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(call_insn 227 224 230 18 arch/arm/kernel/setup.c:1056 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 230 227 231 18 arch/arm/kernel/setup.c:1057 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 231 230 232 18 arch/arm/kernel/setup.c:1057 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116cd0f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116cd0f0>)
        (nil)))

(insn 232 231 233 18 arch/arm/kernel/setup.c:1057 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 5 r5 [253])
                (const_int 8 [0x8])) [0 system_rev+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 system_rev+0 S4 A32])
        (nil)))

(call_insn 233 232 237 18 arch/arm/kernel/setup.c:1057 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 237 233 240 18 arch/arm/kernel/setup.c:1058 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:181 m ] [181])) 167 {*arm_movsi_insn} (nil))

(insn 240 237 238 18 arch/arm/kernel/setup.c:1058 (set (reg:SI 3 r3)
        (mem/c/i:SI (reg/f:SI 5 r5 [253]) [0 system_serial_low+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 system_serial_low+0 S4 A32])
        (nil)))

(insn 238 240 239 18 arch/arm/kernel/setup.c:1058 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116cd240>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116cd240>)
        (nil)))

(insn 239 238 241 18 arch/arm/kernel/setup.c:1058 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 5 r5 [253])
                (const_int 4 [0x4])) [0 system_serial_high+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 system_serial_high+0 S4 A32])
        (nil)))

(call_insn 241 239 246 18 arch/arm/kernel/setup.c:1058 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11048580 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 246 241 252 18 arch/arm/kernel/setup.c:1062 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 252 246 285 18 arch/arm/kernel/setup.c:1062 (use (reg/i:SI 0 r0)) -1 (nil))

(note 285 252 286 18 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 286 285 287 18 arch/arm/kernel/setup.c:1062 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 287 286 278)

(note 278 287 281 NOTE_INSN_DELETED)

(note 281 278 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_add_memory (arm_add_memory)[0:1394] (unlikely executed)



try_optimize_cfg iteration 1

merging block 7 into block 6
deleting insn with uid = 51.
deleting insn with uid = 52.
changing bb of uid 63
  from 7 to 6
changing bb of uid 87
  from 7 to 6
Merged 6 and 7 without moving.
Cross jumping from bb 3 to bb 5; 1 common insns
changing bb of uid 88
  unscanned insn
changing bb of uid 17
  from 3 to 8
changing bb of uid 84
  from 3 to 8
scanning new insn with uid = 90.
deleting insn with uid = 88.
deleting insn with uid = 17.
deleting insn with uid = 84.
deleting insn with uid = 72.
deleting block 8


try_optimize_cfg iteration 2

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


arm_add_memory

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,5u} r2={9d,9u,1d} r3={4d,5u,2d} r4={3d,4u} r5={2d,3u} r6={1d,2u} r12={3d,4u,2d} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 205{150d,50u,5e} in 34{33 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr]

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 6 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 82 to worklist
  Adding insn 90 to worklist
  Adding insn 16 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 30 to worklist
  Adding insn 85 to worklist
  Adding insn 87 to worklist
  Adding insn 63 to worklist
  Adding insn 49 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 40 to worklist
processing block 3 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 70 to worklist
  Adding insn 14 to worklist
processing block 6 lr out =  0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 48 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
processing block 4 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 76 to worklist
  Adding insn 25 to worklist
  Adding insn 37 to worklist
  Adding insn 75 to worklist
  Adding insn 78 to worklist
  Adding insn 27 to worklist
  Adding insn 77 to worklist
  Adding insn 33 to worklist
  Adding insn 23 to worklist
  Adding insn 80 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 31 to worklist
processing block 2 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 2 to worklist
  Adding insn 7 to worklist


try_optimize_cfg iteration 1



arm_add_memory

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,5u} r2={9d,9u,1d} r3={4d,5u,2d} r4={3d,4u} r5={2d,3u} r6={1d,2u} r12={3d,4u,2d} r13={2d,8u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 205{150d,50u,5e} in 34{33 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 82 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 82 5 83 2 arch/arm/kernel/setup.c:463 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -16 [0xfffffffffffffff0])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 5 r5))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 8 [0x8])) [0 S4 A32])
                    (reg:SI 6 r6))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 12 [0xc])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 83 82 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 83 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 2 2 arch/arm/kernel/setup.c:464 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
        (nil)))

(insn 2 7 8 2 arch/arm/kernel/setup.c:463 (set (reg/v:SI 2 r2 [orig:138 start ] [138])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ start ])
        (nil)))

(insn 8 2 9 2 arch/arm/kernel/setup.c:464 (set (reg:SI 12 ip [orig:136 D.25548 ] [136])
        (mem/s/j/c:SI (reg/f:SI 3 r3 [140]) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/setup.c:466 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:136 D.25548 ] [136])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/setup.c:466 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 11 70 3 arch/arm/kernel/setup.c:467 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11679af0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11679af0>)
        (nil)))

(insn 70 14 16 3 arch/arm/kernel/setup.c:467 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 16 70 90 3 arch/arm/kernel/setup.c:467 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 90 16 91 3 (set (pc)
        (label_ref 89)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 91 90 20)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 20 91 21 4 74 "" [1 uses])

(note 21 20 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 28 21 32 4 NOTE_INSN_DELETED)

(note 32 28 34 4 NOTE_INSN_DELETED)

(note 34 32 31 4 NOTE_INSN_DELETED)

(insn 31 34 24 4 arch/arm/kernel/setup.c:478 (set (reg:SI 4 r4 [151])
        (ashift:SI (reg/v:SI 2 r2 [orig:138 start ] [138])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 24 31 26 4 arch/arm/kernel/setup.c:464 (set (reg/f:SI 0 r0 [145])
        (plus:SI (reg/f:SI 3 r3 [140])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
                (const_int 4 [0x4])))
        (nil)))

(insn 26 24 80 4 arch/arm/kernel/setup.c:477 (set (reg:SI 2 r2 [147])
        (plus:SI (reg/v:SI 2 r2 [orig:138 start ] [138])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 80 26 23 4 arch/arm/kernel/setup.c:464 (set (reg:SI 5 r5 [144])
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 12 [0xc])
        (nil)))

(insn 23 80 33 4 arch/arm/kernel/setup.c:464 (set (reg:SI 12 ip [143])
        (mult:SI (reg:SI 5 r5 [144])
            (reg:SI 12 ip [orig:136 D.25548 ] [136]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg:SI 12 ip [orig:136 D.25548 ] [136])
            (const_int 12 [0xc]))
        (nil)))

(insn 33 23 77 4 arch/arm/kernel/setup.c:478 (set (reg:SI 1 r1 [152])
        (minus:SI (reg/v:SI 1 r1 [orig:139 size ] [139])
            (lshiftrt:SI (reg:SI 4 r4 [151])
                (const_int 20 [0x14])))) 273 {*sub_shiftsi} (expr_list:REG_DEAD (reg:SI 4 r4 [151])
        (nil)))

(insn 77 33 27 4 arch/arm/kernel/setup.c:478 (set (reg:SI 1 r1 [orig:134 D.25558 ] [134])
        (and:SI (reg:SI 1 r1 [152])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 77 78 4 arch/arm/kernel/setup.c:477 (set (reg:SI 2 r2 [146])
        (plus:SI (reg:SI 2 r2 [147])
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 2 r2 [orig:138 start ] [138])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 78 27 75 4 arch/arm/kernel/setup.c:478 (set (reg:SI 1 r1 [orig:134 D.25558 ] [134])
        (and:SI (reg:SI 1 r1 [orig:134 D.25558 ] [134])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 75 78 37 4 arch/arm/kernel/setup.c:477 (set (reg:SI 2 r2 [148])
        (and:SI (reg:SI 2 r2 [146])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 37 75 25 4 arch/arm/kernel/setup.c:484 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:134 D.25558 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 25 37 76 4 arch/arm/kernel/setup.c:464 (set (reg/v/f:SI 4 r4 [orig:133 bank ] [133])
        (plus:SI (reg:SI 12 ip [143])
            (reg/f:SI 0 r0 [145]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 12 ip [143])
            (const:SI (plus:SI (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
                    (const_int 4 [0x4]))))
        (nil)))

(insn 76 25 30 4 arch/arm/kernel/setup.c:477 (set (reg:SI 2 r2 [148])
        (and:SI (reg:SI 2 r2 [148])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 30 76 36 4 arch/arm/kernel/setup.c:477 (set (mem/s/j:SI (plus:SI (reg:SI 12 ip [143])
                (reg/f:SI 0 r0 [145])) [0 <variable>.start+0 S4 A32])
        (reg:SI 2 r2 [148])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [143])
        (expr_list:REG_DEAD (reg:SI 2 r2 [148])
            (expr_list:REG_DEAD (reg/f:SI 0 r0 [145])
                (nil)))))

(insn 36 30 38 4 arch/arm/kernel/setup.c:478 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bank ] [133])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
        (reg:SI 1 r1 [orig:134 D.25558 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:134 D.25558 ] [134])
        (nil)))

(jump_insn 38 36 89 4 arch/arm/kernel/setup.c:484 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [39.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 89 38 39 5 78 "" [1 uses])

(note 39 89 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 85 5 arch/arm/kernel/setup.c:485 (set (reg:SI 0 r0 [orig:135 D.25554 ] [135])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 85 40 74 5 (return) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 74 85 43)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	

;; Pred edge  4 [61.0%] 
(code_label 43 74 44 6 76 "" [1 uses])

(note 44 43 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 47 44 50 6 arch/arm/kernel/setup.c:487 (set (reg:SI 2 r2 [orig:156 meminfo.nr_banks ] [156])
        (mem/s/j/c:SI (reg/f:SI 3 r3 [140]) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (reg/f:SI 3 r3 [140]) [0 meminfo.nr_banks+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>) [0 meminfo.nr_banks+0 S4 A32])
            (nil))))

(insn 50 47 48 6 arch/arm/kernel/setup.c:488 (set (reg:SI 0 r0 [orig:135 D.25554 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 48 50 49 6 arch/arm/kernel/setup.c:487 (set (reg:SI 2 r2 [157])
        (plus:SI (reg:SI 2 r2 [orig:156 meminfo.nr_banks ] [156])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j/c:SI (reg/f:SI 3 r3 [140]) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 49 48 63 6 arch/arm/kernel/setup.c:487 (set (mem/s/j/c:SI (reg/f:SI 3 r3 [140]) [0 meminfo.nr_banks+0 S4 A32])
        (reg:SI 2 r2 [157])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [140])
        (expr_list:REG_DEAD (reg:SI 2 r2 [157])
            (nil))))

(insn 63 49 87 6 arch/arm/kernel/setup.c:489 (use (reg/i:SI 0 r0)) -1 (nil))

(jump_insn 87 63 86 6 arch/arm/kernel/setup.c:489 (return) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 86 87 79)

(note 79 86 81 NOTE_INSN_DELETED)

(note 81 79 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function early_mem (early_mem)[0:1395] (unlikely executed)



try_optimize_cfg iteration 1



early_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,9u} r1={8d,5u} r2={5d,2u} r3={7d,4u} r4={2d,3u} r12={3d} r13={2d,13u} r14={4d,2u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 414{374d,40u,0e} in 26{23 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 69 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 69 4 70 2 arch/arm/kernel/setup.c:496 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 0 r0))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 1 r1))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 70 69 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 70 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/setup.c:507 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/setup.c:507 (set (reg:SI 2 r2 [orig:141 usermem ] [141])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 1028 [0x404])) [0 usermem+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 1028 [0x404]))) [0 usermem+0 S4 A32])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/setup.c:507 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:141 usermem ] [141])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/setup.c:507 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/kernel/setup.c:508 (set (reg:SI 1 r1 [143])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 13 12 67 3 arch/arm/kernel/setup.c:508 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 1028 [0x404])) [0 usermem+0 S4 A32])
        (reg:SI 1 r1 [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [140])
        (expr_list:REG_DEAD (reg:SI 1 r1 [143])
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 67 13 16 3 arch/arm/kernel/setup.c:509 (set (reg/f:SI 3 r3 [144])
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
        (nil)))

(insn 16 67 17 3 arch/arm/kernel/setup.c:509 (set (mem/s/j/c:SI (reg/f:SI 3 r3 [144]) [0 meminfo.nr_banks+0 S4 A32])
        (reg:SI 2 r2 [orig:141 usermem ] [141])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [144])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:141 usermem ] [141])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 13 [sp]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 82 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 18 21 4 NOTE_INSN_DELETED)

(insn 21 19 22 4 arch/arm/kernel/setup.c:513 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(call_insn 22 21 60 4 arch/arm/kernel/setup.c:513 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a82600 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 60 22 25 4 arch/arm/kernel/setup.c:513 (set (reg/v:SI 4 r4 [orig:134 size ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 25 60 26 4 arch/arm/kernel/setup.c:514 (set (reg/f:SI 0 r0 [orig:136 endp.353 ] [136])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 endp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/kernel/setup.c:514 (set (reg:SI 3 r3 [147])
        (zero_extend:SI (mem:QI (reg/f:SI 0 r0 [orig:136 endp.353 ] [136]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 27 26 28 4 arch/arm/kernel/setup.c:514 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [147])
            (const_int 64 [0x40]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [147])
        (nil)))

(jump_insn 28 27 29 4 arch/arm/kernel/setup.c:514 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1990 [0x7c6])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  6 [19.9%] 
;; Succ edge  5 [80.1%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [80.1%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 64 5 arch/arm/kernel/setup.c:512 (set (reg/v:SI 0 r0 [orig:133 start ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 64 30 65 5 (set (pc)
        (label_ref 41)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 65 64 33)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [19.9%] 
(code_label 33 65 34 6 83 "" [1 uses])

(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 35 34 36 6 NOTE_INSN_DELETED)

(insn 36 35 37 6 arch/arm/kernel/setup.c:515 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 0 r0 [orig:136 endp.353 ] [136])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 37 36 38 6 arch/arm/kernel/setup.c:515 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 38 37 41 6 arch/arm/kernel/setup.c:515 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a82600 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 41 38 42 7 84 "" [1 uses])

(note 42 41 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 42 45 7 arch/arm/kernel/setup.c:517 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:134 size ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 50 7 arch/arm/kernel/setup.c:517 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_add_memory") [flags 0x3] <function_decl 0x113ee680 arm_add_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 50 45 56 7 arch/arm/kernel/setup.c:520 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 50 71 7 arch/arm/kernel/setup.c:520 (use (reg/i:SI 0 r0)) -1 (nil))

(note 71 56 72 7 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 72 71 73 7 arch/arm/kernel/setup.c:520 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 73 72 66)

(note 66 73 68 NOTE_INSN_DELETED)

(note 68 66 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_mem32 (parse_tag_mem32)[0:1399] (unlikely executed)



try_optimize_cfg iteration 1



parse_tag_mem32

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={2d} r3={2d} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 134{124d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 23 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 23 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 6 2 arch/arm/kernel/setup.c:607 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:135 tag ] [135])
                (const_int 8 [0x8])) [0 <variable>.u.mem.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 6 7 24 2 arch/arm/kernel/setup.c:607 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:135 tag ] [135])
                (const_int 12 [0xc])) [0 <variable>.u.mem.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 24 6 25 2 NOTE_INSN_EPILOGUE_BEG)

(insn 25 24 8 2 arch/arm/kernel/setup.c:608 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 8 25 9 2 arch/arm/kernel/setup.c:607 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_add_memory") [flags 0x3] <function_decl 0x113ee680 arm_add_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 9 8 22)

(note 22 9 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_init (cpu_init)[0:1391]



try_optimize_cfg iteration 1



cpu_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,2u} r1={6d,2u} r2={5d,1u} r3={7d,3u} r4={3d,6u} r12={3d} r13={2d,9u} r14={5d,2u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 397{371d,26u,0e} in 18{15 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 44 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 44 3 45 2 arch/arm/kernel/setup.c:353 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 45 44 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 45 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 42 2 NOTE_INSN_DELETED)

(insn 42 6 38 2 arch/arm/kernel/setup.c:354 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 38 42 39 2 arch/arm/kernel/setup.c:354 (set (reg:SI 3 r3 [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 39 38 8 2 arch/arm/kernel/setup.c:354 (set (reg:SI 3 r3 [135])
        (and:SI (reg:SI 3 r3 [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 39 9 2 arch/arm/kernel/setup.c:354 (set (reg/v:SI 4 r4 [orig:134 cpu ] [134])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [135])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/setup.c:357 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:134 cpu ] [134])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/setup.c:357 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 11 13 3 arch/arm/kernel/setup.c:358 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:134 cpu ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:134 cpu ] [134])
        (nil)))

(insn 13 14 15 3 arch/arm/kernel/setup.c:358 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11665200>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11665200>)
        (nil)))

(call_insn 15 13 18 3 arch/arm/kernel/setup.c:358 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 18 15 19 3 arch/arm/kernel/setup.c:359 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116eb800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116eb800>)
        (nil)))

(insn 19 18 20 3 arch/arm/kernel/setup.c:359 (set (reg:SI 1 r1)
        (const_int 359 [0x167])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 359 [0x167])
        (nil)))

(call_insn 20 19 21 3 arch/arm/kernel/setup.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 21 20 22)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
(code_label 22 21 23 4 91 "" [1 uses])

(note 23 22 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 27 23 24 4 NOTE_INSN_DELETED)

(call_insn 24 27 26 4 arch/arm/kernel/setup.c:362 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_proc_init") [flags 0x41] <function_decl 0x112a3680 cpu_v7_proc_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 26 24 28 4 arch/arm/kernel/setup.c:377 (set (reg/f:SI 3 r3 [141])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 32 [0x20])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 32 [0x20])))
        (nil)))

(insn 28 26 29 4 arch/arm/kernel/setup.c:377 (set (reg:SI 4 r4 [143])
        (plus:SI (mult:SI (reg/v:SI 4 r4 [orig:134 cpu ] [134])
                (const_int 64 [0x40]))
            (reg/f:SI 3 r3 [141]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 3 r3 [141])
        (nil)))

(insn 29 28 46 4 arch/arm/kernel/setup.c:377 (parallel [
            (asm_operands/v ("msr	cpsr_c, %1
	add	r14, %0, %2
	mov	sp, r14
	msr	cpsr_c, %3
	add	r14, %0, %4
	mov	sp, r14
	msr	cpsr_c, %5
	add	r14, %0, %6
	mov	sp, r14
	msr	cpsr_c, %7") ("") 0 [
                    (reg:SI 4 r4 [143])
                    (const_int 210 [0xd2])
                    (const_int 0 [0x0])
                    (const_int 215 [0xd7])
                    (const_int 12 [0xc])
                    (const_int 219 [0xdb])
                    (const_int 24 [0x18])
                    (const_int 211 [0xd3])
                ]
                 [
                    (asm_input:SI ("r") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                    (asm_input:SI ("I") 0)
                ] 10446439)
            (clobber (reg:QI 14 lr))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 14 lr)
        (nil)))

(note 46 29 47 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 47 46 48 4 arch/arm/kernel/setup.c:398 (return) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 48 47 40)

(note 40 48 41 NOTE_INSN_DELETED)

(note 41 40 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function early_print (early_print)[0:1389] (unlikely executed)



try_optimize_cfg iteration 1



early_print

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={4d,2u} r3={4d,2u} r4={2d,4u} r12={3d,2u} r13={4d,12u,2d} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={1d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 287{252d,30u,5e} in 15{13 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 28 4 29 2 arch/arm/kernel/setup.c:317 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -16 [0xfffffffffffffff0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 0 r0))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 1 r1))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 2 r2))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 3 r3))
                            ])
                        (nil)))))))

(insn/f 29 28 30 2 arch/arm/kernel/setup.c:317 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(insn/f 30 29 31 2 arch/arm/kernel/setup.c:317 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -264 [0xfffffffffffffef8]))) -1 (nil))

(note 31 30 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 31 3 2 NOTE_INSN_DELETED)

(note 3 2 14 2 NOTE_INSN_FUNCTION_BEG)

(note 14 3 6 2 NOTE_INSN_DELETED)

(insn 6 14 8 2 arch/arm/kernel/setup.c:322 (set (reg/f:SI 12 ip [134])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 276 [0x114]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 276 [0x114]))
        (nil)))

(insn 8 6 12 2 arch/arm/kernel/setup.c:323 (set (reg/f:SI 4 r4 [135])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))
        (nil)))

(insn 12 8 10 2 arch/arm/kernel/setup.c:323 (set (reg:SI 3 r3)
        (reg/f:SI 12 ip [134])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 26 afp)
            (const_int 8 [0x8]))
        (nil)))

(insn 10 12 9 2 arch/arm/kernel/setup.c:323 (set (reg:SI 1 r1)
        (const_int 256 [0x100])) 167 {*arm_movsi_insn} (nil))

(insn 9 10 11 2 arch/arm/kernel/setup.c:323 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [135])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -260 [0xfffffffffffffefc]))
        (nil)))

(insn 11 9 7 2 arch/arm/kernel/setup.c:323 (set (reg:SI 2 r2)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 272 [0x110])) [0 str+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 11 13 2 arch/arm/kernel/setup.c:322 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 260 [0x104])) [0 ap.__ap+0 S4 A32])
        (reg/f:SI 12 ip [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [134])
        (nil)))

(call_insn 13 7 17 2 arch/arm/kernel/setup.c:323 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vsnprintf") [flags 0x41] <function_decl 0x5115ed80 vsnprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 17 13 16 2 arch/arm/kernel/setup.c:329 (set (reg:SI 1 r1)
        (reg/f:SI 4 r4 [135])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -260 [0xfffffffffffffefc]))
        (nil)))

(insn 16 17 18 2 arch/arm/kernel/setup.c:329 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x116ed820>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x116ed820>)
        (nil)))

(call_insn 18 16 32 2 arch/arm/kernel/setup.c:329 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 32 18 33 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 33 32 34 2 arch/arm/kernel/setup.c:330 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 34 33 26)

(note 26 34 27 NOTE_INSN_DELETED)

(note 27 26 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_machine_table (dump_machine_table)[0:1393] (unlikely executed)



try_optimize_cfg iteration 1

Infinite loop in BB 6.
Infinite loop in BB 6.


dump_machine_table

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,3u} r1={5d,1u} r2={5d,1u} r3={4d} r4={3d,6u,1d} r5={2d,3u} r6={1d,2u} r12={3d} r13={2d,10u} r14={4d,2u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 400{370d,29u,1e} in 16{13 regular + 3 call} insns.
(note 3 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 3 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 49 5 50 2 arch/arm/kernel/setup.c:449 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -16 [0xfffffffffffffff0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 50 49 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 50 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 arch/arm/kernel/setup.c:452 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11679b40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11679b40>)
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/setup.c:452 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 9 23 2 arch/arm/kernel/setup.c:453 (set (reg/v/f:SI 4 r4 [orig:135 p ] [135])
        (symbol_ref:SI ("__arch_info_begin") [flags 0xc0] <var_decl 0x114add80 __arch_info_begin>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__arch_info_begin") [flags 0xc0] <var_decl 0x114add80 __arch_info_begin>)
        (nil)))

(insn 23 10 44 2 arch/arm/kernel/setup.c:453 discrim 1 (set (reg/f:SI 5 r5 [140])
        (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>)
        (nil)))

(jump_insn 44 23 45 2 arch/arm/kernel/setup.c:453 (set (pc)
        (label_ref 20)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 45 44 22)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%] 
(code_label 22 45 13 3 101 "" [1 uses])

(note 13 22 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 13 17 3 arch/arm/kernel/setup.c:454 (set (reg:SI 1 r1)
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:135 p ] [135]) [0 <variable>.nr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 19 3 arch/arm/kernel/setup.c:454 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:135 p ] [135])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 43 3 arch/arm/kernel/setup.c:453 discrim 2 (set (reg/v/f:SI 4 r4 [orig:135 p ] [135])
        (plus:SI (reg/v/f:SI 4 r4 [orig:135 p ] [135])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 43 19 18 3 arch/arm/kernel/setup.c:454 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x116f3f30>)) 167 {*arm_movsi_insn} (nil))

(call_insn 18 43 20 3 arch/arm/kernel/setup.c:454 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 20 18 21 4 100 "" [1 uses])

(note 21 20 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 21 25 4 arch/arm/kernel/setup.c:453 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:135 p ] [135])
            (reg/f:SI 5 r5 [140]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:135 p ] [135])
            (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>))
        (nil)))

(jump_insn 25 24 26 4 arch/arm/kernel/setup.c:453 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [0.0%] 
;; Succ edge  5 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru,loop_exit)
(note 26 25 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 26 29 5 arch/arm/kernel/setup.c:456 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11679b90>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11679b90>)
        (nil)))

(call_insn 29 28 31 5 arch/arm/kernel/setup.c:456 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (dfs_back)
(code_label 31 29 30 6 102 "" [1 uses])

(note 30 31 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 46 30 47 6 (set (pc)
        (label_ref 31)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (dfs_back)

(barrier 47 46 48)

(note 48 47 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_arch (setup_arch)[0:1410] (unlikely executed)



try_optimize_cfg iteration 1

Infinite loop in BB 4.
Infinite loop in BB 4.
Splitting bb 19 before 1 insns
changing bb of uid 813
  unscanned insn
changing bb of uid 193
  from 19 to 83
Cross jumping from bb 18 to bb 19; 1 common insns
changing bb of uid 814
  unscanned insn
changing bb of uid 186
  from 18 to 84
changing bb of uid 722
  from 18 to 84
scanning new insn with uid = 816.
deleting insn with uid = 814.
deleting insn with uid = 186.
deleting insn with uid = 722.
deleting insn with uid = 723.
deleting block 84
Forwarding edge 27->28 to 31 failed.
Splitting bb 37 before 1 insns
changing bb of uid 818
  unscanned insn
changing bb of uid 321
  from 37 to 85
changing bb of uid 737
  from 37 to 85
Cross jumping from bb 35 to bb 37; 1 common insns
changing bb of uid 819
  unscanned insn
changing bb of uid 308
  from 35 to 86
changing bb of uid 735
  from 35 to 86
scanning new insn with uid = 821.
deleting insn with uid = 819.
deleting insn with uid = 308.
deleting insn with uid = 735.
deleting insn with uid = 736.
deleting block 86
Forwarding edge 47->48 to 55 failed.
Forwarding edge 52->53 to 81 failed.
Splitting bb 15 before 1 insns
changing bb of uid 823
  unscanned insn
changing bb of uid 157
  from 15 to 87
changing bb of uid 720
  from 15 to 87
Cross jumping from bb 14 to bb 15; 1 common insns
changing bb of uid 824
  unscanned insn
changing bb of uid 150
  from 14 to 88
changing bb of uid 718
  from 14 to 88
scanning new insn with uid = 826.
deleting insn with uid = 824.
deleting insn with uid = 150.
deleting insn with uid = 718.
deleting insn with uid = 719.
deleting block 88


try_optimize_cfg iteration 2

Infinite loop in BB 4.
Infinite loop in BB 4.
Forwarding edge 27->28 to 31 failed.
Forwarding edge 34->35 to 85 failed.
Forwarding edge 47->48 to 55 failed.
Forwarding edge 52->53 to 81 failed.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 86 n_edges 122 count 184 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 86 n_edges 122 count 188 (  2.2)


setup_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={69d,40u,1d} r1={72d,40u,2d} r2={77d,45u,1d} r3={103d,93u,9d} r4={5d,28u,4d} r5={13d,32u,9d} r6={5d,14u,5d} r7={3d,6u,2d} r8={3d,5u} r9={3d,15u,5d} r10={3d,5u} r11={2d,3u} r12={47d,23u} r13={3d,127u,2d} r14={40d,17u} r15={34d} r16={34d} r17={34d} r18={34d} r19={34d} r20={34d} r21={34d} r22={34d} r23={34d} r24={78d,40u} r27={34d} r28={34d} r29={34d} r30={34d} r31={34d} r32={34d} r33={34d} r34={34d} r35={34d} r36={34d} r37={34d} r38={34d} r39={34d} r40={34d} r41={34d} r42={34d} r43={34d} r44={34d} r45={34d} r46={34d} r47={34d} r48={34d} r49={34d} r50={34d} r51={34d} r52={34d} r53={34d} r54={34d} r55={34d} r56={34d} r57={34d} r58={34d} r59={34d} r60={34d} r61={34d} r62={34d} r63={34d} r64={34d} r65={34d} r66={34d} r67={34d} r68={34d} r69={34d} r70={34d} r71={34d} r72={34d} r73={34d} r74={34d} r75={34d} r76={34d} r77={34d} r78={34d} r79={34d} r80={34d} r81={34d} r82={34d} r83={34d} r84={34d} r85={34d} r86={34d} r87={34d} r88={34d} r89={34d} r90={34d} r91={34d} r92={34d} r93={34d} r94={34d} r95={34d} r96={34d} r97={34d} r98={34d} r99={34d} r100={34d} r101={34d} r102={34d} r103={34d} r104={34d} r105={34d} r106={34d} r107={34d} r108={34d} r109={34d} r110={34d} r111={34d} r112={34d} r113={34d} r114={34d} r115={34d} r116={34d} r117={34d} r118={34d} r119={34d} r120={34d} r121={34d} r122={34d} r123={34d} r124={34d} r125={34d} r126={34d} r127={34d} 
;;    total ref usage 4839{4266d,533u,40e} in 383{349 regular + 34 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 11 [fp] 13 [sp]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]

( 3 4 )->[4]->( 4 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]

( 2 )->[5]->( 9 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]

( 5 )->[6]->( 7 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	
;; lr  out 	 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 8 [r8] 9 [r9] 11 [fp] 13 [sp]

( 5 6 7 8 )->[9]->( 10 19 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 9 )->[10]->( 11 13 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 10 )->[11]->( 12 16 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 11 )->[12]->( 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]

( 10 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 13 )->[14]->( 87 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 13 )->[15]->( 87 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 15 14 )->[87]->( 80 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]

( 11 12 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 16 80 )->[17]->( 18 20 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]

( 17 )->[18]->( 83 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 9 )->[19]->( 83 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 19 18 )->[83]->( 20 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]

( 17 83 )->[20]->( 22 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]

( 20 )->[21]->( 25 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]

( 20 )->[22]->( 24 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]

( 22 )->[23]->( 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]

( 22 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]

( 21 24 23 )->[25]->( 30 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 30 )->[26]->( 27 29 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 26 )->[27]->( 28 32 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 27 )->[28]->( 31 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 26 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 29 25 )->[30]->( 26 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 30 28 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]

( 31 27 )->[32]->( 33 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 32 )->[33]->( 39 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 32 )->[34]->( 36 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]

( 34 )->[35]->( 85 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]

( 34 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]

( 36 )->[37]->( 85 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]

( 37 35 )->[85]->( 39 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 36 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 38 33 85 )->[39]->( 40 41 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]

( 39 )->[40]->( 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 39 40 )->[41]->( 42 58 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 41 )->[42]->( 43 55 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 42 )->[43]->( 47 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 47 )->[44]->( 45 46 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 44 )->[45]->( 46 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 44 45 )->[46]->( 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 46 43 )->[47]->( 44 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 47 )->[48]->( 55 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]

( 52 )->[49]->( 50 51 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 49 )->[50]->( 54 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 49 )->[51]->( 52 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 51 57 )->[52]->( 49 53 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 52 )->[53]->( 81 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 50 81 )->[54]->( 56 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 42 48 )->[55]->( 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 55 54 )->[56]->( 57 58 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 56 )->[57]->( 52 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 41 56 )->[58]->( 59 60 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]

( 58 )->[59]->( 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]

( 58 59 )->[60]->( 67 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 67 )->[61]->( 62 64 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 9 [r9] 24 [cc]
;; live  kill	 2 [r2] 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 61 )->[62]->( 63 64 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 62 )->[63]->( 64 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 61 62 63 )->[64]->( 65 67 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 64 )->[65]->( 66 67 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 65 )->[66]->( 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 66 60 64 65 )->[67]->( 61 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 67 )->[68]->( 69 70 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 68 )->[69]->( 70 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 68 69 )->[70]->( 71 72 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 70 )->[71]->( 72 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 70 71 )->[72]->( 73 74 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 72 )->[73]->( 74 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 72 73 )->[74]->( 75 76 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 74 )->[75]->( 76 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 74 75 )->[76]->( 77 78 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 76 )->[77]->( 78 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 76 77 )->[78]->( 79 82 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 78 )->[79]->( 82 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 87 )->[80]->( 17 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]

( 53 )->[81]->( 54 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]

( 78 79 )->[82]->( 1 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

( 82 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 7 to worklist
  Adding insn 807 to worklist
  Adding insn 19 to worklist
  Adding insn 714 to worklist
  Adding insn 102 to worklist
  Adding insn 96 to worklist
  Adding insn 93 to worklist
  Adding insn 82 to worklist
  Adding insn 72 to worklist
  Adding insn 67 to worklist
  Adding insn 64 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 40 to worklist
  Adding insn 34 to worklist
  Adding insn 28 to worklist
  Adding insn 110 to worklist
  Adding insn 115 to worklist
  Adding insn 119 to worklist
  Adding insn 124 to worklist
  Adding insn 128 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 716 to worklist
  Adding insn 139 to worklist
  Adding insn 146 to worklist
  Adding insn 826 to worklist
  Adding insn 720 to worklist
  Adding insn 157 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 180 to worklist
  Adding insn 816 to worklist
  Adding insn 193 to worklist
  Adding insn 212 to worklist
  Adding insn 724 to worklist
  Adding insn 221 to worklist
  Adding insn 726 to worklist
  Adding insn 728 to worklist
  Adding insn 255 to worklist
  Adding insn 252 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 262 to worklist
  Adding insn 271 to worklist
  Adding insn 269 to worklist
  Adding insn 731 to worklist
  Adding insn 283 to worklist
  Adding insn 290 to worklist
  Adding insn 289 to worklist
  Adding insn 297 to worklist
  Adding insn 733 to worklist
  Adding insn 306 to worklist
  Adding insn 821 to worklist
  Adding insn 315 to worklist
  Adding insn 320 to worklist
  Adding insn 737 to worklist
  Adding insn 339 to worklist
  Adding insn 347 to worklist
  Adding insn 353 to worklist
  Adding insn 358 to worklist
  Adding insn 739 to worklist
  Adding insn 367 to worklist
  Adding insn 370 to worklist
  Adding insn 381 to worklist
  Adding insn 742 to worklist
  Adding insn 389 to worklist
  Adding insn 744 to worklist
  Adding insn 393 to worklist
  Adding insn 403 to worklist
  Adding insn 748 to worklist
  Adding insn 751 to worklist
  Adding insn 416 to worklist
  Adding insn 753 to worklist
  Adding insn 440 to worklist
  Adding insn 433 to worklist
  Adding insn 430 to worklist
  Adding insn 428 to worklist
  Adding insn 444 to worklist
  Adding insn 755 to worklist
  Adding insn 490 to worklist
  Adding insn 487 to worklist
  Adding insn 484 to worklist
  Adding insn 481 to worklist
  Adding insn 478 to worklist
  Adding insn 476 to worklist
  Adding insn 472 to worklist
  Adding insn 471 to worklist
  Adding insn 470 to worklist
  Adding insn 466 to worklist
  Adding insn 449 to worklist
  Adding insn 455 to worklist
  Adding insn 458 to worklist
  Adding insn 452 to worklist
  Adding insn 527 to worklist
  Adding insn 522 to worklist
  Adding insn 516 to worklist
  Adding insn 518 to worklist
  Adding insn 509 to worklist
  Adding insn 503 to worklist
  Adding insn 499 to worklist
  Adding insn 533 to worklist
  Adding insn 539 to worklist
  Adding insn 546 to worklist
  Adding insn 552 to worklist
  Adding insn 558 to worklist
  Adding insn 572 to worklist
  Adding insn 576 to worklist
  Adding insn 587 to worklist
  Adding insn 582 to worklist
  Adding insn 579 to worklist
  Adding insn 596 to worklist
  Adding insn 603 to worklist
  Adding insn 612 to worklist
  Adding insn 620 to worklist
  Adding insn 629 to worklist
  Adding insn 637 to worklist
  Adding insn 643 to worklist
  Adding insn 645 to worklist
  Adding insn 651 to worklist
  Adding insn 648 to worklist
  Adding insn 757 to worklist
  Adding insn 653 to worklist
  Adding insn 759 to worklist
  Adding insn 761 to worklist
  Adding insn 670 to worklist
  Adding insn 811 to worklist
Finished finding needed instructions:
processing block 4 lr out =  13 [sp]
processing block 3 lr out =  13 [sp]
  Adding insn 17 to worklist
  Adding insn 18 to worklist
processing block 46 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 375 to worklist
  Adding insn 373 to worklist
processing block 45 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
processing block 44 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 366 to worklist
  Adding insn 365 to worklist
processing block 54 lr out =  4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 411 to worklist
  Adding insn 409 to worklist
processing block 50 lr out =  4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 392 to worklist
processing block 51 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 398 to worklist
processing block 49 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 388 to worklist
  Adding insn 386 to worklist
  Adding insn 387 to worklist
processing block 81 lr out =  4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 710 to worklist
  Adding insn 669 to worklist
processing block 53 lr out =  4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
processing block 52 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 402 to worklist
processing block 57 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 707 to worklist
processing block 66 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 705 to worklist
  Adding insn 556 to worklist
processing block 65 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 551 to worklist
  Adding insn 550 to worklist
  Adding insn 549 to worklist
processing block 64 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 545 to worklist
  Adding insn 544 to worklist
  Adding insn 543 to worklist
processing block 63 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 537 to worklist
  Adding insn 703 to worklist
processing block 62 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 532 to worklist
  Adding insn 531 to worklist
  Adding insn 530 to worklist
processing block 61 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 526 to worklist
  Adding insn 525 to worklist
  Adding insn 524 to worklist
  Adding insn 515 to worklist
  Adding insn 766 to worklist
  Adding insn 765 to worklist
  Adding insn 561 to worklist
  Adding insn 512 to worklist
  Adding insn 764 to worklist
  Adding insn 763 to worklist
  Adding insn 506 to worklist
  Adding insn 505 to worklist
  Adding insn 504 to worklist
  Adding insn 701 to worklist
  Adding insn 521 to worklist
  Adding insn 500 to worklist
processing block 82 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
processing block 79 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
processing block 78 lr out =  3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
  Adding insn 650 to worklist
  Adding insn 649 to worklist
processing block 77 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
processing block 76 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 642 to worklist
  Adding insn 641 to worklist
  Adding insn 640 to worklist
processing block 75 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 636 to worklist
  Adding insn 635 to worklist
processing block 74 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 628 to worklist
  Adding insn 623 to worklist
processing block 73 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 619 to worklist
  Adding insn 618 to worklist
processing block 72 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 611 to worklist
  Adding insn 606 to worklist
processing block 71 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 602 to worklist
  Adding insn 601 to worklist
processing block 70 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 595 to worklist
  Adding insn 590 to worklist
processing block 69 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 581 to worklist
  Adding insn 586 to worklist
  Adding insn 585 to worklist
  Adding insn 578 to worklist
processing block 68 lr out =  2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 575 to worklist
  Adding insn 574 to worklist
processing block 67 lr out =  0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 571 to worklist
  Adding insn 570 to worklist
  Adding insn 569 to worklist
  Adding insn 567 to worklist
  Adding insn 697 to worklist
  Adding insn 698 to worklist
  Adding insn 498 to worklist
processing block 60 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
  Adding insn 517 to worklist
  Adding insn 492 to worklist
  Adding insn 777 to worklist
  Adding insn 778 to worklist
  Adding insn 779 to worklist
  Adding insn 565 to worklist
  Adding insn 523 to worklist
  Adding insn 480 to worklist
  Adding insn 491 to worklist
  Adding insn 479 to worklist
  Adding insn 477 to worklist
  Adding insn 474 to worklist
  Adding insn 475 to worklist
  Adding insn 502 to worklist
  Adding insn 780 to worklist
  Adding insn 781 to worklist
  Adding insn 782 to worklist
  Adding insn 464 to worklist
  Adding insn 463 to worklist
  Adding insn 461 to worklist
  Adding insn 447 to worklist
  Adding insn 465 to worklist
  Adding insn 448 to worklist
processing block 59 lr out =  4 [r4] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 443 to worklist
processing block 58 lr out =  4 [r4] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 439 to worklist
  Adding insn 434 to worklist
  Adding insn 783 to worklist
  Adding insn 432 to worklist
  Adding insn 429 to worklist
  Adding insn 426 to worklist
  Adding insn 427 to worklist
  Adding insn 425 to worklist
processing block 56 lr out =  4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 415 to worklist
  Adding insn 414 to worklist
processing block 55 lr out =  4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 401 to worklist
processing block 48 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
processing block 47 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 380 to worklist
  Adding insn 379 to worklist
processing block 43 lr out =  1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 369 to worklist
  Adding insn 364 to worklist
  Adding insn 360 to worklist
processing block 42 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 357 to worklist
  Adding insn 356 to worklist
  Adding insn 355 to worklist
processing block 41 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 352 to worklist
  Adding insn 784 to worklist
  Adding insn 351 to worklist
processing block 40 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 346 to worklist
  Adding insn 345 to worklist
  Adding insn 344 to worklist
  Adding insn 343 to worklist
processing block 39 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
  Adding insn 338 to worklist
  Adding insn 801 to worklist
  Adding insn 800 to worklist
  Adding insn 786 to worklist
  Adding insn 785 to worklist
  Adding insn 337 to worklist
  Adding insn 330 to worklist
processing block 33 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 299 to worklist
processing block 85 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 321 to worklist
processing block 37 lr out =  4 [r4] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 318 to worklist
processing block 38 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 326 to worklist
processing block 36 lr out =  1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 314 to worklist
processing block 35 lr out =  4 [r4] 9 [r9] 11 [fp] 13 [sp]
processing block 34 lr out =  1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 305 to worklist
  Adding insn 304 to worklist
processing block 32 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 296 to worklist
  Adding insn 295 to worklist
  Adding insn 294 to worklist
processing block 31 lr out =  4 [r4] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 291 to worklist
  Adding insn 287 to worklist
  Adding insn 288 to worklist
processing block 28 lr out =  5 [r5] 9 [r9] 11 [fp] 13 [sp]
processing block 27 lr out =  4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 270 to worklist
  Adding insn 268 to worklist
  Adding insn 267 to worklist
processing block 29 lr out =  3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 277 to worklist
processing block 26 lr out =  3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 261 to worklist
  Adding insn 260 to worklist
processing block 30 lr out =  3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 282 to worklist
processing block 25 lr out =  3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 281 to worklist
  Adding insn 246 to worklist
  Adding insn 787 to worklist
  Adding insn 788 to worklist
  Adding insn 251 to worklist
  Adding insn 247 to worklist
  Adding insn 256 to worklist
  Adding insn 240 to worklist
processing block 24 lr out =  1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 803 to worklist
  Adding insn 802 to worklist
processing block 23 lr out =  1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 223 to worklist
processing block 22 lr out =  0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
  Adding insn 220 to worklist
processing block 21 lr out =  1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 214 to worklist
processing block 20 lr out =  0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
  Adding insn 211 to worklist
  Adding insn 686 to worklist
  Adding insn 685 to worklist
  Adding insn 197 to worklist
  Adding insn 789 to worklist
  Adding insn 684 to worklist
  Adding insn 683 to worklist
processing block 83 lr out =  9 [r9] 11 [fp] 13 [sp]
processing block 18 lr out =  2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 185 to worklist
  Adding insn 184 to worklist
  Adding insn 182 to worklist
processing block 17 lr out =  9 [r9] 11 [fp] 13 [sp]
  Adding insn 179 to worklist
processing block 16 lr out =  3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 169 to worklist
  Adding insn 791 to worklist
  Adding insn 172 to worklist
  Adding insn 167 to worklist
  Adding insn 166 to worklist
  Adding insn 165 to worklist
  Adding insn 162 to worklist
processing block 12 lr out =  9 [r9] 11 [fp] 13 [sp]
  Adding insn 138 to worklist
processing block 11 lr out =  2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 131 to worklist
  Adding insn 134 to worklist
  Adding insn 130 to worklist
  Adding insn 133 to worklist
processing block 80 lr out =  3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 661 to worklist
  Adding insn 660 to worklist
processing block 87 lr out =  9 [r9] 11 [fp] 13 [sp]
processing block 14 lr out =  2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 149 to worklist
processing block 15 lr out =  2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 156 to worklist
processing block 13 lr out =  3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 681 to worklist
  Adding insn 145 to worklist
processing block 10 lr out =  3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 127 to worklist
  Adding insn 126 to worklist
processing block 19 lr out =  2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 790 to worklist
  Adding insn 192 to worklist
processing block 9 lr out =  3 [r3] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 123 to worklist
  Adding insn 122 to worklist
processing block 8 lr out =  8 [r8] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 118 to worklist
processing block 7 lr out =  2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 114 to worklist
processing block 6 lr out =  2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
processing block 5 lr out =  2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
  Adding insn 101 to worklist
  Adding insn 792 to worklist
  Adding insn 773 to worklist
  Adding insn 94 to worklist
  Adding insn 772 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 92 to worklist
  Adding insn 89 to worklist
  Adding insn 78 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 66 to worklist
  Adding insn 793 to worklist
  Adding insn 63 to worklist
  Adding insn 68 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 61 to worklist
  Adding insn 794 to worklist
  Adding insn 69 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 43 to worklist
  Adding insn 37 to worklist
  Adding insn 30 to worklist
  Adding insn 31 to worklist
  Adding insn 75 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 27 to worklist
processing block 2 lr out =  4 [r4] 5 [r5] 11 [fp] 13 [sp]
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 3 to worklist
  Adding insn 8 to worklist
  Adding insn 808 to worklist


try_optimize_cfg iteration 1

Infinite loop in BB 4.
Infinite loop in BB 4.
Forwarding edge 27->28 to 31 failed.
Forwarding edge 34->35 to 85 failed.
Forwarding edge 47->48 to 55 failed.
Forwarding edge 52->53 to 81 failed.


setup_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={69d,40u,1d} r1={72d,40u,2d} r2={77d,45u,1d} r3={103d,93u,9d} r4={5d,28u,4d} r5={13d,32u,9d} r6={5d,14u,5d} r7={3d,6u,2d} r8={3d,5u} r9={3d,15u,5d} r10={3d,5u} r11={2d,3u} r12={47d,23u} r13={3d,127u,2d} r14={40d,17u} r15={34d} r16={34d} r17={34d} r18={34d} r19={34d} r20={34d} r21={34d} r22={34d} r23={34d} r24={78d,40u} r27={34d} r28={34d} r29={34d} r30={34d} r31={34d} r32={34d} r33={34d} r34={34d} r35={34d} r36={34d} r37={34d} r38={34d} r39={34d} r40={34d} r41={34d} r42={34d} r43={34d} r44={34d} r45={34d} r46={34d} r47={34d} r48={34d} r49={34d} r50={34d} r51={34d} r52={34d} r53={34d} r54={34d} r55={34d} r56={34d} r57={34d} r58={34d} r59={34d} r60={34d} r61={34d} r62={34d} r63={34d} r64={34d} r65={34d} r66={34d} r67={34d} r68={34d} r69={34d} r70={34d} r71={34d} r72={34d} r73={34d} r74={34d} r75={34d} r76={34d} r77={34d} r78={34d} r79={34d} r80={34d} r81={34d} r82={34d} r83={34d} r84={34d} r85={34d} r86={34d} r87={34d} r88={34d} r89={34d} r90={34d} r91={34d} r92={34d} r93={34d} r94={34d} r95={34d} r96={34d} r97={34d} r98={34d} r99={34d} r100={34d} r101={34d} r102={34d} r103={34d} r104={34d} r105={34d} r106={34d} r107={34d} r108={34d} r109={34d} r110={34d} r111={34d} r112={34d} r113={34d} r114={34d} r115={34d} r116={34d} r117={34d} r118={34d} r119={34d} r120={34d} r121={34d} r122={34d} r123={34d} r124={34d} r125={34d} r126={34d} r127={34d} 
;;    total ref usage 4839{4266d,533u,40e} in 383{349 regular + 34 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 807 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 807 5 808 2 arch/arm/kernel/setup.c:881 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 808 807 809 2 arch/arm/kernel/setup.c:881 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) -1 (nil))

(note 809 808 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 809 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 4 8 2 NOTE_INSN_DELETED)

(insn 8 11 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 4 r4 [orig:152 __val ] [152])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8199339))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 3 8 7 2 arch/arm/kernel/setup.c:881 (set (reg/v/f:SI 11 fp [orig:170 cmdline_p ] [170])
        (reg:SI 0 r0 [ cmdline_p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cmdline_p ])
        (nil)))

(call_insn 7 3 9 2 arch/arm/kernel/setup.c:884 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_init") [flags 0x41] <function_decl 0x115a7a00 unwind_init>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (nil))

(insn 9 7 10 2 arch/arm/kernel/setup.c:409 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:152 __val ] [152])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 12 2 arch/arm/kernel/setup.c:409 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("lookup_processor_type") [flags 0x41] <function_decl 0x115c3180 lookup_processor_type>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 10 13 2 arch/arm/kernel/setup.c:410 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 13 12 14 2 arch/arm/kernel/setup.c:410 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 4 [r4] 5 [r5] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 11 [fp] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  5

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
(note 14 13 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 14 17 3 arch/arm/kernel/setup.c:411 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:152 __val ] [152])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:152 __val ] [152])
        (nil)))

(insn 17 18 19 3 arch/arm/kernel/setup.c:411 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x1120c8a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x1120c8a0>)
        (nil)))

(call_insn 19 17 21 3 arch/arm/kernel/setup.c:411 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (dfs_back)
(code_label 21 19 20 4 108 "" [1 uses])

(note 20 21 714 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 714 20 715 4 (set (pc)
        (label_ref 21)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 4)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (dfs_back)

(barrier 715 714 24)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2
(code_label 24 715 25 5 107 "" [1 uses])

(note 25 24 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 57 25 60 5 NOTE_INSN_DELETED)

(note 60 57 76 5 NOTE_INSN_DELETED)

(note 76 60 77 5 NOTE_INSN_DELETED)

(note 77 76 87 5 NOTE_INSN_DELETED)

(note 87 77 88 5 NOTE_INSN_DELETED)

(note 88 87 27 5 NOTE_INSN_DELETED)

(insn 27 88 26 5 arch/arm/kernel/setup.c:416 (set (reg/f:SI 7 r7 [orig:173 <variable>.cpu_name ] [173])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 32 [0x20])) [0 <variable>.cpu_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 27 29 5 arch/arm/kernel/setup.c:416 (set (reg/f:SI 10 sl [172])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 29 26 75 5 arch/arm/kernel/setup.c:422 (set (reg/f:SI 6 r6 [174])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 75 29 28 5 arch/arm/kernel/setup.c:435 (set (reg/f:SI 9 r9 [199])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 28 75 31 5 arch/arm/kernel/setup.c:416 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 10 sl [172])
                (const_int 12 [0xc])) [0 cpu_name+0 S4 A32])
        (reg/f:SI 7 r7 [orig:173 <variable>.cpu_name ] [173])) 167 {*arm_movsi_insn} (nil))

(insn 31 28 30 5 arch/arm/kernel/setup.c:422 (set (reg/f:SI 3 r3 [176])
        (plus:SI (reg/f:SI 6 r6 [174])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 30 31 37 5 arch/arm/kernel/setup.c:422 (set (reg/f:SI 2 r2 [orig:175 <variable>.tlb ] [175])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 40 [0x28])) [0 <variable>.tlb+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 40 [0x28])) [0 <variable>.tlb+0 S4 A32])
        (nil)))

(insn 37 30 43 5 arch/arm/kernel/setup.c:425 (set (reg/f:SI 14 lr [180])
        (plus:SI (reg/f:SI 6 r6 [174])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 43 37 33 5 arch/arm/kernel/setup.c:428 (set (reg:SI 12 ip [184])
        (plus:SI (reg/f:SI 6 r6 [174])
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(insn 33 43 34 5 arch/arm/kernel/setup.c:422 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 2 r2 [orig:175 <variable>.tlb ] [175]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 2 r2 [orig:175 <variable>.tlb ] [175])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/f:SI 2 r2 [orig:175 <variable>.tlb ] [175])
                        (const_int 8 [0x8])) [0 S4 A32]))
        ]) 189 {*ldmsi3} (nil))

(insn 34 33 36 5 arch/arm/kernel/setup.c:422 (parallel [
            (set (mem/s/c:SI (reg/f:SI 3 r3 [176]) [0 cpu_tlb+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [176])
                        (const_int 4 [0x4])) [0 cpu_tlb+4 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [176])
                        (const_int 8 [0x8])) [0 cpu_tlb+8 S4 A32])
                (reg:SI 2 r2))
        ]) 196 {*stmsi3} (expr_list:REG_DEAD (reg/f:SI 3 r3 [176])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn 36 34 39 5 arch/arm/kernel/setup.c:425 (set (reg/f:SI 3 r3 [orig:179 <variable>.user ] [179])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 44 [0x2c])) [0 <variable>.user+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 44 [0x2c])) [0 <variable>.user+0 S4 A32])
        (nil)))

(insn 39 36 40 5 arch/arm/kernel/setup.c:425 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 3 r3 [orig:179 <variable>.user ] [179]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 3 r3 [orig:179 <variable>.user ] [179])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:179 <variable>.user ] [179])
        (nil)))

(insn 40 39 42 5 arch/arm/kernel/setup.c:425 (parallel [
            (set (mem/s/c:SI (reg/f:SI 14 lr [180]) [0 cpu_user+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 14 lr [180])
                        (const_int 4 [0x4])) [0 cpu_user+4 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg/f:SI 14 lr [180])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(insn 42 40 45 5 arch/arm/kernel/setup.c:428 (set (reg/f:SI 14 lr [orig:183 <variable>.cache ] [183])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 48 [0x30])) [0 <variable>.cache+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 48 [0x30])) [0 <variable>.cache+0 S4 A32])
        (nil)))

(insn 45 42 46 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
                (plus:SI (reg/f:SI 14 lr [orig:183 <variable>.cache ] [183])
                    (const_int 16 [0x10])))
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 14 lr [orig:183 <variable>.cache ] [183]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 14 lr [orig:183 <variable>.cache ] [183])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/f:SI 14 lr [orig:183 <variable>.cache ] [183])
                        (const_int 8 [0x8])) [0 S4 A32]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/f:SI 14 lr [orig:183 <variable>.cache ] [183])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 184 {*ldmsi_postinc4} (nil))

(insn 46 45 47 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg:SI 12 ip [184])
                (plus:SI (reg:SI 12 ip [184])
                    (const_int 16 [0x10])))
            (set (mem/s/c:SI (reg:SI 12 ip [184]) [0 cpu_cache+0 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg:SI 12 ip [184])
                        (const_int 4 [0x4])) [0 cpu_cache+4 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg:SI 12 ip [184])
                        (const_int 8 [0x8])) [0 cpu_cache+8 S4 A32])
                (reg:SI 2 r2))
            (set (mem/s/c:SI (plus:SI (reg:SI 12 ip [184])
                        (const_int 12 [0xc])) [0 cpu_cache+12 S4 A32])
                (reg:SI 3 r3))
        ]) 191 {*stmsi_postinc4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn 47 46 48 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
                (plus:SI (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
                    (const_int 16 [0x10])))
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
                        (const_int 8 [0x8])) [0 S4 A32]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 184 {*ldmsi_postinc4} (nil))

(insn 48 47 49 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg:SI 12 ip [184])
                (plus:SI (reg:SI 12 ip [184])
                    (const_int 16 [0x10])))
            (set (mem/s/c:SI (reg:SI 12 ip [184]) [0 cpu_cache+16 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg:SI 12 ip [184])
                        (const_int 4 [0x4])) [0 cpu_cache+20 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg:SI 12 ip [184])
                        (const_int 8 [0x8])) [0 cpu_cache+24 S4 A32])
                (reg:SI 2 r2))
            (set (mem/s/c:SI (plus:SI (reg:SI 12 ip [184])
                        (const_int 12 [0xc])) [0 cpu_cache+28 S4 A32])
                (reg:SI 3 r3))
        ]) 191 {*stmsi_postinc4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn 49 48 50 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185]) [0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
                        (const_int 4 [0x4])) [0 S4 A32]))
        ]) 190 {*ldmsi2} (expr_list:REG_DEAD (reg/f:SI 14 lr [orig:185 <variable>.cache ] [185])
        (nil)))

(insn 50 49 53 5 arch/arm/kernel/setup.c:428 (parallel [
            (set (mem/s/c:SI (reg:SI 12 ip [184]) [0 cpu_cache+32 S4 A32])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg:SI 12 ip [184])
                        (const_int 4 [0x4])) [0 cpu_cache+36 S4 A32])
                (reg:SI 1 r1))
        ]) 197 {*stmsi2} (expr_list:REG_DEAD (reg:SI 12 ip [184])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil)))))

(call_insn/u 53 50 54 5 arch/arm/kernel/setup.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x3] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 54 53 69 5 arch/arm/kernel/setup.c:433 (set (reg:SI 8 r8 [orig:149 D.26287 ] [149])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 69 54 794 5 arch/arm/kernel/setup.c:431 (set (reg:SI 1 r1)
        (reg/f:SI 7 r7 [orig:173 <variable>.cpu_name ] [173])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 7 r7 [orig:173 <variable>.cpu_name ] [173])
        (nil)))

(insn 794 69 61 5 arch/arm/kernel/setup.c:431 (set (reg/f:SI 12 ip [189])
        (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR4") [flags 0x182])
        (nil)))

(insn 61 794 70 5 arch/arm/kernel/setup.c:431 (set (reg:SI 12 ip [192])
        (plus:SI (mult:SI (reg:SI 8 r8 [orig:149 D.26287 ] [149])
                (const_int 4 [0x4]))
            (reg/f:SI 12 ip [189]))) 270 {*arith_shiftsi} (nil))

(insn 70 61 71 5 arch/arm/kernel/setup.c:431 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:152 __val ] [152])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 68 5 arch/arm/kernel/setup.c:431 (set (reg:SI 3 r3)
        (and:SI (reg/v:SI 4 r4 [orig:152 __val ] [152])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 68 71 63 5 arch/arm/kernel/setup.c:431 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11679cd0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11679cd0>)
        (nil)))

(insn 63 68 793 5 arch/arm/kernel/setup.c:431 (set (reg/f:SI 14 lr [194])
        (mem/s/u/f/j:SI (plus:SI (reg:SI 12 ip [192])
                (const_int 80 [0x50])) [0 proc_arch S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [192])
        (expr_list:REG_EQUIV (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
            (nil))))

(insn 793 63 66 5 arch/arm/kernel/setup.c:431 (set (reg/f:SI 12 ip [195])
        (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)
        (nil)))

(insn 66 793 64 5 arch/arm/kernel/setup.c:431 (set (reg:SI 12 ip [orig:196 cr_alignment ] [196])
        (mem/c/i:SI (reg/f:SI 12 ip [195]) [0 cr_alignment+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>) [0 cr_alignment+0 S4 A32])
            (nil))))

(insn 64 66 67 5 arch/arm/kernel/setup.c:431 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 14 lr [194])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 14 lr [194])
        (nil)))

(insn 67 64 72 5 arch/arm/kernel/setup.c:431 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [orig:196 cr_alignment ] [196])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:196 cr_alignment ] [196])
        (nil)))

(call_insn 72 67 79 5 arch/arm/kernel/setup.c:431 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 79 72 80 5 arch/arm/kernel/setup.c:435 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)
        (nil)))

(insn 80 79 81 5 arch/arm/kernel/setup.c:435 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 20 [0x14])) [0 <variable>.arch_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 78 5 arch/arm/kernel/setup.c:435 (set (reg:SI 3 r3)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 9 r9 [199])
                    (const_int 1032 [0x408])) [0 endian_test.l+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 78 81 82 5 arch/arm/kernel/setup.c:435 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x1101bcc0 init_uts_ns>)
                (const_int 264 [0x108])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x1101bcc0 init_uts_ns>)
                (const_int 264 [0x108])))
        (nil)))

(call_insn 82 78 89 5 arch/arm/kernel/setup.c:435 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 89 82 92 5 arch/arm/kernel/setup.c:436 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 10 sl [172])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 10 sl [172])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 92 89 90 5 arch/arm/kernel/setup.c:436 (set (reg:SI 3 r3)
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 9 r9 [199])
                    (const_int 1032 [0x408])) [0 endian_test.l+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 90 92 91 5 arch/arm/kernel/setup.c:436 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x1171b100>)
        (nil)))

(insn 91 90 93 5 arch/arm/kernel/setup.c:436 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 24 [0x18])) [0 <variable>.elf_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 93 91 772 5 arch/arm/kernel/setup.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 772 93 94 5 arch/arm/kernel/setup.c:336 (set (reg:SI 3 r3 [209])
        (const_int -15794176 [0xffffffffff0f0000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -15794176 [0xffffffffff0f0000])
        (nil)))

(insn 94 772 773 5 arch/arm/kernel/setup.c:437 (set (reg:SI 2 r2 [orig:150 elf_hwcap.351 ] [150])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 list ] [151])
                (const_int 28 [0x1c])) [0 <variable>.elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 5 r5 [orig:151 list ] [151])
        (nil)))

(insn 773 94 792 5 arch/arm/kernel/setup.c:336 (set (reg:SI 3 r3 [209])
        (and:SI (reg/v:SI 4 r4 [orig:152 __val ] [152])
            (reg:SI 3 r3 [209]))) 67 {*arm_andsi3_insn} (nil))

(insn 792 773 101 5 arch/arm/kernel/setup.c:336 (set (reg:SI 1 r1 [211])
        (const_int 1090977792 [0x41070000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1090977792 [0x41070000])
        (nil)))

(insn 101 792 96 5 arch/arm/kernel/setup.c:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [209])
            (reg:SI 1 r1 [211]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [209])
        (expr_list:REG_DEAD (reg:SI 1 r1 [211])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [209])
                    (const_int 1090977792 [0x41070000]))
                (nil)))))

(insn 96 101 102 5 arch/arm/kernel/setup.c:437 (set (mem/c/i:SI (reg/f:SI 6 r6 [174]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 2 r2 [orig:150 elf_hwcap.351 ] [150])) 167 {*arm_movsi_insn} (nil))

(jump_insn 102 96 103 5 arch/arm/kernel/setup.c:336 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  9 [72.0%] 
;; Succ edge  6 [28.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [28.0%]  (fallthru)
(note 103 102 105 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 105 103 106 6 NOTE_INSN_DELETED)

(note 106 105 107 6 NOTE_INSN_DELETED)

(insn 107 106 108 6 arch/arm/kernel/setup.c:343 (set (reg:SI 1 r1 [213])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:152 __val ] [152])
            (const_int 12 [0xc])
            (const_int 4 [0x4]))) 124 {extzv_t2} (nil))

(insn 108 107 109 6 arch/arm/kernel/setup.c:343 (set (reg:SI 3 r3 [215])
        (const_int 2870 [0xb36])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2870 [0xb36])
        (nil)))

(insn 109 108 110 6 arch/arm/kernel/setup.c:343 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [213])
            (reg:SI 3 r3 [215]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [215])
        (expr_list:REG_DEAD (reg:SI 1 r1 [213])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 1 r1 [213])
                    (const_int 2870 [0xb36]))
                (nil)))))

(jump_insn 110 109 111 6 arch/arm/kernel/setup.c:343 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  7 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [28.0%]  (fallthru)
(note 111 110 112 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 112 111 113 7 NOTE_INSN_DELETED)

(note 113 112 114 7 NOTE_INSN_DELETED)

(insn 114 113 115 7 arch/arm/kernel/setup.c:343 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:152 __val ] [152])
                (const_int 2 [0x2])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:152 __val ] [152])
        (nil)))

(jump_insn 115 114 116 7 arch/arm/kernel/setup.c:343 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 2 [r2] 6 [r6] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 116 115 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 118 116 119 8 arch/arm/kernel/setup.c:344 (set (reg:SI 2 r2 [219])
        (and:SI (reg:SI 2 r2 [orig:150 elf_hwcap.351 ] [150])
            (const_int -32769 [0xffffffffffff7fff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 6 r6 [174]) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 119 118 120 8 arch/arm/kernel/setup.c:344 (set (mem/c/i:SI (reg/f:SI 6 r6 [174]) [0 elf_hwcap+0 S4 A32])
        (reg:SI 2 r2 [219])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 6 r6 [174])
        (expr_list:REG_DEAD (reg:SI 2 r2 [219])
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  5 [72.0%] 
;; Pred edge  6 [72.0%] 
;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 120 119 121 9 109 "" [3 uses])

(note 121 120 122 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 123 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:65 (parallel [
            (set (reg/v:SI 3 r3 [orig:163 cachetype ] [163])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 1") ("=r") 0 []
                     [] 8199979))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 123 122 124 9 arch/arm/kernel/setup.c:278 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:149 D.26287 ] [149])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:149 D.26287 ] [149])
        (nil)))

(jump_insn 124 123 125 9 arch/arm/kernel/setup.c:278 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 189)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 19)
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 125 124 126 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 126 125 127 10 arch/arm/kernel/setup.c:281 (set (reg:SI 2 r2 [220])
        (and:SI (reg/v:SI 3 r3 [orig:163 cachetype ] [163])
            (const_int -536870912 [0xffffffffe0000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 127 126 128 10 arch/arm/kernel/setup.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [220])
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [220])
        (nil)))

(jump_insn 128 127 129 10 arch/arm/kernel/setup.c:281 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 10 -> ( 11 13)
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [28.0%]  (fallthru)
(note 129 128 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 133 129 130 11 arch/arm/kernel/setup.c:285 (set (reg:SI 3 r3 [223])
        (and:SI (reg/v:SI 3 r3 [orig:163 cachetype ] [163])
            (const_int 49152 [0xc000]))) 67 {*arm_andsi3_insn} (nil))

(insn 130 133 134 11 arch/arm/kernel/setup.c:284 (set (reg/f:SI 2 r2 [221])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 134 130 131 11 arch/arm/kernel/setup.c:285 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [223])
            (const_int 16384 [0x4000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [223])
        (nil)))

(insn 131 134 132 11 arch/arm/kernel/setup.c:284 (set (reg:SI 3 r3 [222])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn 132 131 135 11 arch/arm/kernel/setup.c:284 (set (mem/c/i:SI (plus:SI (reg/f:SI 2 r2 [221])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 3 r3 [222])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(jump_insn 135 132 136 11 arch/arm/kernel/setup.c:285 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 160)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 16)
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  16 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  11 [28.0%]  (fallthru)
(note 136 135 138 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 138 136 139 12 arch/arm/kernel/setup.c:286 (set (reg:SI 3 r3 [225])
        (plus:SI (reg:SI 3 r3 [225])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const_int 10 [0xa])
        (nil)))

(insn 139 138 716 12 arch/arm/kernel/setup.c:286 (set (mem/c/i:SI (plus:SI (reg/f:SI 2 r2 [221])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 3 r3 [225])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [225])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [221])
            (expr_list:REG_EQUAL (const_int 10 [0xa])
                (nil)))))

(jump_insn 716 139 717 12 (set (pc)
        (label_ref 160)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 16)
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 717 716 142)

;; Start of basic block ( 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [72.0%] 
(code_label 142 717 143 13 111 "" [1 uses])

(note 143 142 144 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 144 143 145 13 NOTE_INSN_DELETED)

(insn 145 144 681 13 arch/arm/kernel/setup.c:289 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:163 cachetype ] [163])
                (const_int 1 [0x1])
                (const_int 23 [0x17]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:163 cachetype ] [163])
        (nil)))

(insn 681 145 146 13 (set (reg/f:SI 3 r3 [389])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(jump_insn 146 681 147 13 arch/arm/kernel/setup.c:289 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 153)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 147 146 149 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 149 147 826 14 arch/arm/kernel/setup.c:290 (set (reg:SI 2 r2 [228])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(jump_insn 826 149 827 14 (set (pc)
        (label_ref 825)) -1 (nil))
;; End of basic block 14 -> ( 87)
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  87 [100.0%] 

(barrier 827 826 153)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  13 [50.0%] 
(code_label 153 827 154 15 113 "" [1 uses])

(note 154 153 156 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 156 154 825 15 arch/arm/kernel/setup.c:292 (set (reg:SI 2 r2 [230])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))
;; End of basic block 15 -> ( 87)
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  87 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 87
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
(code_label 825 156 823 87 160 "" [1 uses])

(note 823 825 157 87 [bb 87] NOTE_INSN_BASIC_BLOCK)

(insn 157 823 720 87 arch/arm/kernel/setup.c:292 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [389])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 2 r2 [230])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [389])
        (expr_list:REG_DEAD (reg:SI 2 r2 [230])
            (nil))))

(jump_insn 720 157 721 87 (set (pc)
        (label_ref 658)) 242 {*arm_jump} (nil))
;; End of basic block 87 -> ( 80)
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  80 [100.0%] 

(barrier 721 720 160)

;; Start of basic block ( 11 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  11 [72.0%] 
;; Pred edge  12 [100.0%] 
(code_label 160 721 161 16 112 "" [2 uses])

(note 161 160 170 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 170 161 171 16 NOTE_INSN_DELETED)

(note 171 170 175 16 NOTE_INSN_DELETED)

(note 175 171 162 16 NOTE_INSN_DELETED)

(insn 162 175 163 16 arch/arm/kernel/setup.c:254 (set (reg:SI 3 r3 [231])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 163 162 164 16 arch/arm/kernel/setup.c:254 (asm_operands/v ("mcr	p15, 2, %0, c0, c0, 0 @ set CSSELR") ("") 0 [
            (reg:SI 3 r3 [231])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 10430696) -1 (nil))

(insn 164 163 165 16 arch/arm/kernel/setup.c:257 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 10431080)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 165 164 166 16 arch/arm/kernel/setup.c:258 (set (reg/v:SI 2 r2 [orig:161 id_reg ] [161])
        (asm_operands:SI ("mrc	p15, 1, %0, c0, c0, 0 @ read CCSIDR") ("=r") 0 []
             [] 10431208)) -1 (nil))

(insn 166 165 167 16 arch/arm/kernel/setup.c:262 (set (reg:SI 1 r1 [232])
        (and:SI (reg/v:SI 2 r2 [orig:161 id_reg ] [161])
            (const_int 7 [0x7]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 166 172 16 arch/arm/kernel/setup.c:262 (set (reg:SI 1 r1 [233])
        (plus:SI (reg:SI 1 r1 [232])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 172 167 791 16 arch/arm/kernel/setup.c:262 (set (reg:SI 2 r2 [237])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:161 id_reg ] [161])
            (const_int 15 [0xf])
            (const_int 13 [0xd]))) 124 {extzv_t2} (nil))

(insn 791 172 169 16 arch/arm/kernel/setup.c:262 (set (reg:SI 3 r3 [235])
        (plus:SI (reg:SI 3 r3 [235])
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 169 791 173 16 arch/arm/kernel/setup.c:262 (set (reg:SI 1 r1 [234])
        (ashift:SI (reg:SI 3 r3 [235])
            (reg:SI 1 r1 [233]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [235])
        (expr_list:REG_EQUAL (ashift:SI (const_int 4 [0x4])
                (reg:SI 1 r1 [233]))
            (nil))))

(insn 173 169 174 16 arch/arm/kernel/setup.c:262 (set (reg:SI 3 r3 [239])
        (plus:SI (reg:SI 2 r2 [237])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [237])
        (nil)))

(insn 174 173 176 16 arch/arm/kernel/setup.c:262 (set (reg:SI 3 r3 [240])
        (mult:SI (reg:SI 3 r3 [239])
            (reg:SI 1 r1 [234]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 1 r1 [234])
        (nil)))

(insn 176 174 662 16 arch/arm/kernel/setup.c:262 (parallel [
            (set (reg/v:SI 3 r3 [orig:160 aliasing_icache ] [160])
                (gtu:SI (reg:SI 3 r3 [240])
                    (const_int 4096 [0x1000])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 80) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  80 [100.0%] 
(code_label 662 176 178 17 154 "" [1 uses])

(note 178 662 179 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 17 arch/arm/kernel/setup.c:294 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:160 aliasing_icache ] [160])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:160 aliasing_icache ] [160])
        (nil)))

(jump_insn 180 179 181 17 arch/arm/kernel/setup.c:294 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 194)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 20)
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 181 180 182 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 182 181 184 18 arch/arm/kernel/setup.c:295 (set (reg/f:SI 3 r3 [242])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 184 182 185 18 arch/arm/kernel/setup.c:295 (set (reg:SI 2 r2 [orig:244 cacheid ] [244])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [242])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [242])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                        (const_int 64 [0x40]))) [0 cacheid+0 S4 A32])
            (nil))))

(insn 185 184 816 18 arch/arm/kernel/setup.c:295 (set (reg:SI 2 r2 [245])
        (ior:SI (reg:SI 2 r2 [orig:244 cacheid ] [244])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [242])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (nil)))

(jump_insn 816 185 817 18 (set (pc)
        (label_ref 815)) -1 (nil))
;; End of basic block 18 -> ( 83)
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  83 [100.0%] 

(barrier 817 816 189)

;; Start of basic block ( 9) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  9 [50.0%] 
(code_label 189 817 190 19 110 "" [1 uses])

(note 190 189 192 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 192 190 790 19 arch/arm/kernel/setup.c:297 (set (reg:SI 2 r2 [247])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 790 192 815 19 arch/arm/kernel/setup.c:297 (set (reg/f:SI 3 r3 [246])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))
;; End of basic block 19 -> ( 83)
;; lr  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  83 [100.0%]  (fallthru)

;; Start of basic block ( 19 18) -> 83
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
(code_label 815 790 813 83 158 "" [1 uses])

(note 813 815 193 83 [bb 83] NOTE_INSN_BASIC_BLOCK)

(insn 193 813 194 83 arch/arm/kernel/setup.c:297 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [246])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])
        (reg:SI 2 r2 [247])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [246])
        (expr_list:REG_DEAD (reg:SI 2 r2 [247])
            (nil))))
;; End of basic block 83 -> ( 20)
;; lr  out 	 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 17 83) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  17 [50.0%] 
;; Pred edge  83 [100.0%]  (fallthru)
(code_label 194 193 195 20 115 "" [1 uses])

(note 195 194 198 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 198 195 210 20 NOTE_INSN_DELETED)

(note 210 198 683 20 NOTE_INSN_DELETED)

(insn 683 210 684 20 arch/arm/kernel/setup.c:300 discrim 6 (set (reg/f:SI 2 r2 [390])
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x11722870>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x11722870>)
        (nil)))

(insn 684 683 789 20 arch/arm/kernel/setup.c:300 discrim 6 (set (reg/f:SI 0 r0 [391])
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11722750>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11722750>)
        (nil)))

(insn 789 684 197 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 3 r3 [248])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 197 789 685 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 3 r3 [orig:159 cacheid.308 ] [159])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [248])
                (const_int 64 [0x40])) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                    (const_int 64 [0x40]))) [0 cacheid+0 S4 A32])
        (nil)))

(insn 685 197 686 20 arch/arm/kernel/setup.c:300 discrim 6 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [orig:159 cacheid.308 ] [159])
                        (const_int 2 [0x2]))
                    (const_int 0 [0x0])))
            (set (reg:SI 12 ip [orig:158 D.26256 ] [158])
                (and:SI (reg:SI 3 r3 [orig:159 cacheid.308 ] [159])
                    (const_int 2 [0x2])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 686 685 211 20 arch/arm/kernel/setup.c:300 discrim 6 (set (reg/f:SI 1 r1 [orig:165 iftmp.338 ] [165])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 2 r2 [390])
            (reg/f:SI 0 r0 [391]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 211 686 212 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:159 cacheid.308 ] [159])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 212 211 213 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 22 21)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  22 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 213 212 214 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 214 213 724 21 arch/arm/kernel/setup.c:300 discrim 13 (set (reg/f:SI 2 r2 [orig:164 iftmp.342 ] [164])
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x117229f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x117229f0>)
        (nil)))

(jump_insn 724 214 725 21 (set (pc)
        (label_ref 237)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 25)
;; lr  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 725 724 217)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [50.0%] 
(code_label 217 725 218 22 118 "" [1 uses])

(note 218 217 219 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 219 218 220 22 NOTE_INSN_DELETED)

(insn 220 219 221 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:159 cacheid.308 ] [159])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:159 cacheid.308 ] [159])
        (nil)))

(jump_insn 221 220 222 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 24 23)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  24 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 1 [r1] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 222 221 223 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 726 23 arch/arm/kernel/setup.c:300 discrim 15 (set (reg/f:SI 2 r2 [orig:164 iftmp.342 ] [164])
        (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11722c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11722c00>)
        (nil)))

(jump_insn 726 223 727 23 (set (pc)
        (label_ref 237)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 25)
;; lr  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 727 726 226)

;; Start of basic block ( 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  22 [50.0%] 
(code_label 226 727 227 24 120 "" [1 uses])

(note 227 226 689 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 689 227 802 24 NOTE_INSN_DELETED)

(insn 802 689 803 24 arch/arm/kernel/setup.c:300 discrim 17 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:158 D.26256 ] [158])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:158 D.26256 ] [158])
        (nil)))

(insn 803 802 237 24 arch/arm/kernel/setup.c:300 discrim 17 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 2 r2 [orig:164 iftmp.342 ] [164])
            (reg/f:SI 0 r0 [391]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 0 r0 [391])
            (nil))))
;; End of basic block 24 -> ( 25)
;; lr  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 21 24 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  21 [100.0%] 
;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
(code_label 237 803 238 25 119 "" [2 uses])

(note 238 237 240 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 240 238 243 25 arch/arm/kernel/setup.c:300 discrim 21 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11679d20>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11679d20>)
        (nil)))

(call_insn 243 240 256 25 arch/arm/kernel/setup.c:300 discrim 21 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 256 243 244 25 arch/arm/kernel/setup.c:808 (set (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
        (symbol_ref:SI ("__arch_info_begin") [flags 0xc0] <var_decl 0x114add80 __arch_info_begin>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__arch_info_begin") [flags 0xc0] <var_decl 0x114add80 __arch_info_begin>)
        (nil)))

(call_insn 244 256 247 25 arch/arm/kernel/setup.c:445 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_init") [flags 0x3] <function_decl 0x512d9780 cpu_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 247 244 251 25 arch/arm/kernel/setup.c:799 (set (reg/f:SI 3 r3 [253])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 251 247 252 25 arch/arm/kernel/setup.c:801 (set (reg/f:SI 2 r2 [256])
        (plus:SI (reg/f:SI 3 r3 [253])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 252 251 788 25 arch/arm/kernel/setup.c:801 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 from+0 S4 A32])
        (reg/f:SI 2 r2 [256])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [256])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 788 252 255 25 arch/arm/kernel/setup.c:803 (set (reg:SI 2 r2 [258])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 255 788 787 25 arch/arm/kernel/setup.c:803 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [253])
                (const_int 1068 [0x42c])) [0 init_tags.mem.start+0 S4 A32])
        (reg:SI 2 r2 [258])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [253])
        (expr_list:REG_DEAD (reg:SI 2 r2 [258])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 787 255 246 25 arch/arm/kernel/setup.c:889 (set (reg/f:SI 3 r3 [252])
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(insn 246 787 281 25 arch/arm/kernel/setup.c:889 (set (reg:SI 5 r5 [orig:169 __machine_arch_type.365 ] [169])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [252])
                (const_int 68 [0x44])) [0 __machine_arch_type+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [252])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
                        (const_int 68 [0x44]))) [0 __machine_arch_type+0 S4 A32])
            (nil))))

(insn 281 246 728 25 arch/arm/kernel/setup.c:808 discrim 1 (set (reg/f:SI 3 r3 [411])
        (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>)
        (nil)))

(jump_insn 728 281 729 25 (set (pc)
        (label_ref 278)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 30)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  30 [100.0%] 

(barrier 729 728 280)

;; Start of basic block ( 30) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  30 [95.5%] 
(code_label 280 729 259 26 126 "" [1 uses])

(note 259 280 260 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 26 arch/arm/kernel/setup.c:809 (set (reg:SI 2 r2 [orig:259 <variable>.nr ] [259])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166]) [0 <variable>.nr+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166]) [0 <variable>.nr+0 S4 A32])
        (nil)))

(insn 261 260 262 26 arch/arm/kernel/setup.c:809 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:169 __machine_arch_type.365 ] [169])
            (reg:SI 2 r2 [orig:259 <variable>.nr ] [259]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:259 <variable>.nr ] [259])
        (nil)))

(jump_insn 262 261 263 26 arch/arm/kernel/setup.c:809 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 26 -> ( 27 29)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  27 [0.0%]  (fallthru,loop_exit)
;; Succ edge  29 [100.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  26 [0.0%]  (fallthru,loop_exit)
(note 263 262 267 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 267 263 268 27 arch/arm/kernel/setup.c:810 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x117240f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x117240f0>)
        (nil)))

(insn 268 267 269 27 arch/arm/kernel/setup.c:810 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 269 268 270 27 arch/arm/kernel/setup.c:810 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 270 269 271 27 arch/arm/kernel/setup.c:815 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 271 270 730 27 arch/arm/kernel/setup.c:815 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 292)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 27 -> ( 28 32)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  28 [0.0%]  (fallthru)
;; Succ edge  32 [100.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  27 [0.0%]  (fallthru)
(note 730 271 731 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(jump_insn 731 730 732 28 (set (pc)
        (label_ref 284)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 31)
;; lr  out 	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  31 [100.0%] 

(barrier 732 731 275)

;; Start of basic block ( 26) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  26 [100.0%] 
(code_label 275 732 276 29 123 "" [1 uses])

(note 276 275 277 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 29 arch/arm/kernel/setup.c:808 (set (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
        (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))
;; End of basic block 29 -> ( 30)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  30 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 29 25) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  29 [100.0%]  (fallthru,dfs_back)
;; Pred edge  25 [100.0%] 
(code_label 278 277 279 30 122 "" [1 uses])

(note 279 278 282 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 282 279 283 30 arch/arm/kernel/setup.c:808 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
            (reg/f:SI 3 r3 [411]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
            (symbol_ref:SI ("__arch_info_end") [flags 0xc0] <var_decl 0x114adde0 __arch_info_end>))
        (nil)))

(jump_insn 283 282 284 30 arch/arm/kernel/setup.c:808 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 280)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 30 -> ( 26 31)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  26 [95.5%] 
;; Succ edge  31 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 30 28) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  30 [4.5%]  (fallthru,loop_exit)
;; Pred edge  28 [100.0%] 
(code_label 284 283 285 31 124 "" [1 uses])

(note 285 284 288 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 288 285 287 31 arch/arm/kernel/setup.c:816 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [orig:169 __machine_arch_type.365 ] [169])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:169 __machine_arch_type.365 ] [169])
        (nil)))

(insn 287 288 289 31 arch/arm/kernel/setup.c:816 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x1120ca80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x1120ca80>)
        (nil)))

(call_insn 289 287 291 31 arch/arm/kernel/setup.c:816 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_print") [flags 0x3] <function_decl 0x113ee700 early_print>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 291 289 290 31 arch/arm/kernel/setup.c:818 (set (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 290 291 292 31 arch/arm/kernel/setup.c:818 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_machine_table") [flags 0x3] <function_decl 0x113ee780 dump_machine_table>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 31 -> ( 32)
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 27) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%] 
(code_label 292 290 293 32 125 "" [1 uses])

(note 293 292 294 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 294 293 295 32 arch/arm/kernel/setup.c:821 (set (reg/f:SI 3 r3 [263])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 295 294 296 32 arch/arm/kernel/setup.c:821 (set (reg:SI 5 r5 [orig:142 __atags_pointer.361 ] [142])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [263])
                (const_int 1080 [0x438])) [0 __atags_pointer+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [263])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 1080 [0x438]))) [0 __atags_pointer+0 S4 A32])
            (nil))))

(insn 296 295 297 32 arch/arm/kernel/setup.c:821 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:142 __atags_pointer.361 ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 297 296 298 32 arch/arm/kernel/setup.c:821 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 302)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  32 [50.0%]  (fallthru)
(note 298 297 299 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 733 33 arch/arm/kernel/setup.c:822 (set (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
        (plus:SI (reg:SI 5 r5 [orig:142 __atags_pointer.361 ] [142])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(jump_insn 733 299 734 33 (set (pc)
        (label_ref 327)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 39)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  39 [100.0%] 

(barrier 734 733 302)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  32 [50.0%] 
(code_label 302 734 303 34 127 "" [1 uses])

(note 303 302 304 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 305 34 arch/arm/kernel/setup.c:823 (set (reg:SI 1 r1 [orig:143 D.26325 ] [143])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 8 [0x8])) [0 <variable>.boot_params+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 305 304 306 34 arch/arm/kernel/setup.c:823 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:143 D.26325 ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 306 305 307 34 arch/arm/kernel/setup.c:823 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 311)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 34 -> ( 36 35)
;; lr  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  36 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 307 306 821 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn 821 307 822 35 (set (pc)
        (label_ref 820)) -1 (nil))
;; End of basic block 35 -> ( 85)
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  85 [100.0%] 

(barrier 822 821 311)

;; Start of basic block ( 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  34 [50.0%] 
(code_label 311 822 312 36 129 "" [1 uses])

(note 312 311 313 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(note 313 312 314 36 NOTE_INSN_DELETED)

(insn 314 313 315 36 arch/arm/kernel/setup.c:831 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:143 D.26325 ] [143])
            (const_int 1048576 [0x100000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 315 314 316 36 arch/arm/kernel/setup.c:831 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 324)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  37 [0.0%]  (fallthru)
;; Succ edge  38 [100.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  36 [0.0%]  (fallthru)
(note 316 315 318 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 318 316 320 37 arch/arm/kernel/setup.c:833 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1120cc60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1120cc60>)
        (nil)))

(call_insn 320 318 820 37 arch/arm/kernel/setup.c:833 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 37 -> ( 85)
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  85 [100.0%]  (fallthru)

;; Start of basic block ( 37 35) -> 85
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%] 
(code_label 820 320 818 85 159 "" [1 uses])

(note 818 820 321 85 [bb 85] NOTE_INSN_BASIC_BLOCK)

(insn 321 818 737 85 arch/arm/kernel/setup.c:799 (set (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1036 [0x40c])))) 167 {*arm_movsi_insn} (nil))

(jump_insn 737 321 738 85 (set (pc)
        (label_ref 327)) 242 {*arm_jump} (nil))
;; End of basic block 85 -> ( 39)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  39 [100.0%] 

(barrier 738 737 324)

;; Start of basic block ( 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 1 [r1] 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  36 [100.0%] 
(code_label 324 738 325 38 130 "" [1 uses])

(note 325 324 326 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 326 325 327 38 arch/arm/kernel/setup.c:839 (set (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
        (plus:SI (reg:SI 1 r1 [orig:143 D.26325 ] [143])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:143 D.26325 ] [143])
        (nil)))
;; End of basic block 38 -> ( 39)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 38 33 85) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
;; Pred edge  85 [100.0%] 
(code_label 327 326 328 39 128 "" [2 uses])

(note 328 327 692 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 692 328 330 39 NOTE_INSN_DELETED)

(insn 330 692 337 39 arch/arm/kernel/setup.c:852 (set (reg:SI 1 r1 [orig:267 <variable>.hdr.tag ] [267])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])
        (nil)))

(insn 337 330 785 39 arch/arm/kernel/setup.c:863 (set (reg/f:SI 12 ip [orig:144 D.26323 ] [144])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 32 [0x20])) [0 <variable>.fixup+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 785 337 786 39 arch/arm/kernel/setup.c:860 (set (reg/f:SI 3 r3 [394])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1036 [0x40c])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1036 [0x40c])))
        (nil)))

(insn 786 785 800 39 arch/arm/kernel/setup.c:860 (set (reg:SI 2 r2 [266])
        (const_int 1413545985 [0x54410001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1413545985 [0x54410001])
        (nil)))

(insn 800 786 801 39 arch/arm/kernel/setup.c:860 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:267 <variable>.hdr.tag ] [267])
            (reg:SI 2 r2 [266]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [266])
        (expr_list:REG_DEAD (reg:SI 1 r1 [orig:267 <variable>.hdr.tag ] [267])
            (nil))))

(insn 801 800 338 39 arch/arm/kernel/setup.c:860 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
            (reg/f:SI 3 r3 [394]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [394])
            (nil))))

(insn 338 801 339 39 arch/arm/kernel/setup.c:863 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 12 ip [orig:144 D.26323 ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 339 338 340 39 arch/arm/kernel/setup.c:863 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 348)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 39 -> ( 40 41)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  40 [69.8%]  (fallthru)
;; Succ edge  41 [30.2%] 

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  39 [69.8%]  (fallthru)
(note 340 339 341 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note 341 340 343 40 NOTE_INSN_DELETED)

(insn 343 341 344 40 arch/arm/kernel/setup.c:864 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 344 343 345 40 arch/arm/kernel/setup.c:864 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 345 344 346 40 arch/arm/kernel/setup.c:864 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 346 345 347 40 arch/arm/kernel/setup.c:864 (set (reg:SI 3 r3)
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
        (nil)))

(call_insn 347 346 348 40 arch/arm/kernel/setup.c:864 (parallel [
            (call (mem:SI (reg/f:SI 12 ip [orig:144 D.26323 ] [144]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 12 ip [orig:144 D.26323 ] [144])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (expr_list:REG_DEAD (reg:SI 0 r0)
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 40 -> ( 41)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  41 [100.0%]  (fallthru)

;; Start of basic block ( 39 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  39 [30.2%] 
;; Pred edge  40 [100.0%]  (fallthru)
(code_label 348 347 349 41 132 "" [1 uses])

(note 349 348 351 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 351 349 784 41 arch/arm/kernel/setup.c:866 (set (reg:SI 2 r2 [orig:271 <variable>.hdr.tag ] [271])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])
        (nil)))

(insn 784 351 352 41 arch/arm/kernel/setup.c:866 (set (reg:SI 3 r3 [270])
        (const_int 1413545985 [0x54410001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1413545985 [0x54410001])
        (nil)))

(insn 352 784 353 41 arch/arm/kernel/setup.c:866 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:271 <variable>.hdr.tag ] [271])
            (reg:SI 3 r3 [270]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [270])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:271 <variable>.hdr.tag ] [271])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 2 r2 [orig:271 <variable>.hdr.tag ] [271])
                    (const_int 1413545985 [0x54410001]))
                (nil)))))

(jump_insn 353 352 354 41 arch/arm/kernel/setup.c:866 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 422)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 41 -> ( 42 58)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  42 [0.0%]  (fallthru)
;; Succ edge  58 [100.0%] 

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  41 [0.0%]  (fallthru)
(note 354 353 355 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 355 354 356 42 arch/arm/kernel/setup.c:867 (set (reg/f:SI 3 r3 [272])
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
        (nil)))

(insn 356 355 357 42 arch/arm/kernel/setup.c:867 (set (reg:SI 3 r3 [orig:273 meminfo.nr_banks ] [273])
        (mem/s/j/c:SI (reg/f:SI 3 r3 [272]) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 357 356 358 42 arch/arm/kernel/setup.c:867 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:273 meminfo.nr_banks ] [273])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:273 meminfo.nr_banks ] [273])
        (nil)))

(jump_insn 358 357 359 42 arch/arm/kernel/setup.c:867 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 412)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 42 -> ( 43 55)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  43 [0.0%]  (fallthru)
;; Succ edge  55 [100.0%] 

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  42 [0.0%]  (fallthru)
(note 359 358 360 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 360 359 364 43 arch/arm/kernel/setup.c:867 (set (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135])
        (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 364 360 369 43 arch/arm/kernel/setup.c:793 (set (reg:SI 1 r1 [409])
        (const_int 1413545986 [0x54410002])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1413545986 [0x54410002])
        (nil)))

(insn 369 364 739 43 arch/arm/kernel/setup.c:794 (set (reg:SI 2 r2 [410])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(jump_insn 739 369 740 43 (set (pc)
        (label_ref 376)) 242 {*arm_jump} (nil))
;; End of basic block 43 -> ( 47)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  47 [100.0%] 

(barrier 740 739 378)

;; Start of basic block ( 47) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  47 [91.0%] 
(code_label 378 740 363 44 137 "" [1 uses])

(note 363 378 365 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 365 363 366 44 arch/arm/kernel/setup.c:793 (set (reg:SI 0 r0 [orig:275 <variable>.hdr.tag ] [275])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])
        (nil)))

(insn 366 365 367 44 arch/arm/kernel/setup.c:793 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:275 <variable>.hdr.tag ] [275])
            (reg:SI 1 r1 [409]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:275 <variable>.hdr.tag ] [275])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 0 r0 [orig:275 <variable>.hdr.tag ] [275])
                (const_int 1413545986 [0x54410002]))
            (nil))))

(jump_insn 367 366 368 44 arch/arm/kernel/setup.c:793 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 371)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 44 -> ( 45 46)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  45 [28.0%]  (fallthru)
;; Succ edge  46 [72.0%] 

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  44 [28.0%]  (fallthru)
(note 368 367 370 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 370 368 371 45 arch/arm/kernel/setup.c:794 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])
        (reg:SI 2 r2 [410])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 45 -> ( 46)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  46 [100.0%]  (fallthru)

;; Start of basic block ( 44 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  44 [72.0%] 
;; Pred edge  45 [100.0%]  (fallthru)
(code_label 371 370 372 46 136 "" [1 uses])

(note 372 371 374 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(note 374 372 373 46 NOTE_INSN_DELETED)

(insn 373 374 375 46 arch/arm/kernel/setup.c:792 (set (reg:SI 0 r0 [orig:277 <variable>.hdr.size ] [277])
        (mem/s/j:SI (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135]) [0 <variable>.hdr.size+0 S4 A32])
        (nil)))

(insn 375 373 376 46 arch/arm/kernel/setup.c:792 (set (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135])
        (plus:SI (mult:SI (reg:SI 0 r0 [orig:277 <variable>.hdr.size ] [277])
                (const_int 4 [0x4]))
            (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:277 <variable>.hdr.size ] [277])
        (nil)))
;; End of basic block 46 -> ( 47)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  47 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 46 43) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  46 [100.0%]  (fallthru,dfs_back)
;; Pred edge  43 [100.0%] 
(code_label 376 375 377 47 135 "" [1 uses])

(note 377 376 379 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 379 377 380 47 arch/arm/kernel/setup.c:792 discrim 1 (set (reg:SI 0 r0 [orig:278 <variable>.hdr.size ] [278])
        (mem/s/j:SI (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 3 r3 [orig:135 tags.957 ] [135]) [0 <variable>.hdr.size+0 S4 A32])
        (nil)))

(insn 380 379 381 47 arch/arm/kernel/setup.c:792 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:278 <variable>.hdr.size ] [278])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:278 <variable>.hdr.size ] [278])
        (nil)))

(jump_insn 381 380 741 47 arch/arm/kernel/setup.c:792 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 378)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 47 -> ( 44 48)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  44 [91.0%] 
;; Succ edge  48 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  47 [9.0%]  (fallthru,loop_exit)
(note 741 381 742 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(jump_insn 742 741 743 48 (set (pc)
        (label_ref 412)) 242 {*arm_jump} (nil))
;; End of basic block 48 -> ( 55)
;; lr  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  55 [100.0%] 

(barrier 743 742 400)

;; Start of basic block ( 52) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  52 [95.5%] 
(code_label 400 743 385 49 140 "" [1 uses])

(note 385 400 387 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 387 385 386 49 arch/arm/kernel/setup.c:694 (set (reg:SI 2 r2 [orig:280 <variable>.tag ] [280])
        (mem/s/j:SI (reg/v/f:SI 3 r3 [orig:147 t ] [147]) [0 <variable>.tag+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 3 r3 [orig:147 t ] [147]) [0 <variable>.tag+0 S4 A32])
        (nil)))

(insn 386 387 388 49 arch/arm/kernel/setup.c:694 (set (reg:SI 1 r1 [orig:279 <variable>.hdr.tag ] [279])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])
        (nil)))

(insn 388 386 389 49 arch/arm/kernel/setup.c:694 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:279 <variable>.hdr.tag ] [279])
            (reg:SI 2 r2 [orig:280 <variable>.tag ] [280]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:280 <variable>.tag ] [280])
        (expr_list:REG_DEAD (reg:SI 1 r1 [orig:279 <variable>.hdr.tag ] [279])
            (nil))))

(jump_insn 389 388 390 49 arch/arm/kernel/setup.c:694 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 396)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 49 -> ( 50 51)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  50 [4.5%]  (fallthru,loop_exit)
;; Succ edge  51 [95.5%] 

;; Start of basic block ( 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  49 [4.5%]  (fallthru,loop_exit)
(note 390 389 391 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note 391 390 392 50 NOTE_INSN_DELETED)

(insn 392 391 393 50 arch/arm/kernel/setup.c:695 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 393 392 744 50 arch/arm/kernel/setup.c:695 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:147 t ] [147])
                                (const_int 4 [0x4])) [0 <variable>.parse+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:147 t ] [147])
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 744 393 745 50 (set (pc)
        (label_ref 407)) 242 {*arm_jump} (nil))
;; End of basic block 50 -> ( 54)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  54 [100.0%] 

(barrier 745 744 396)

;; Start of basic block ( 49) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  49 [95.5%] 
(code_label 396 745 397 51 138 "" [1 uses])

(note 397 396 398 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 398 397 419 51 arch/arm/kernel/setup.c:693 (set (reg/v/f:SI 3 r3 [orig:147 t ] [147])
        (plus:SI (reg/v/f:SI 3 r3 [orig:147 t ] [147])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 51 -> ( 52)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  52 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 51 57) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  51 [100.0%]  (fallthru,dfs_back)
;; Pred edge  57 [100.0%] 
(code_label 419 398 399 52 142 "" [1 uses])

(note 399 419 402 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 402 399 403 52 arch/arm/kernel/setup.c:693 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 3 r3 [orig:147 t ] [147])
            (reg/f:SI 6 r6 [406]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 3 r3 [orig:147 t ] [147])
            (symbol_ref:SI ("__tagtable_end") [flags 0xc0] <var_decl 0x115eede0 __tagtable_end>))
        (nil)))

(jump_insn 403 402 746 52 arch/arm/kernel/setup.c:693 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 400)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 52 -> ( 49 53)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  49 [95.5%] 
;; Succ edge  53 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  52 [4.5%]  (fallthru,loop_exit)
(note 746 403 748 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(jump_insn 748 746 749 53 (set (pc)
        (label_ref 747)) 242 {*arm_jump} (nil))
;; End of basic block 53 -> ( 81)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  81 [100.0%] 

(barrier 749 748 407)

;; Start of basic block ( 50 81) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5]
;; live  kill	

;; Pred edge  50 [100.0%] 
;; Pred edge  81 [100.0%] 
(code_label 407 749 408 54 139 "" [2 uses])

(note 408 407 410 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(note 410 408 409 54 NOTE_INSN_DELETED)

(insn 409 410 411 54 arch/arm/kernel/setup.c:708 (set (reg:SI 3 r3 [orig:283 <variable>.hdr.size ] [283])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136]) [0 <variable>.hdr.size+0 S4 A32])
        (nil)))

(insn 411 409 751 54 arch/arm/kernel/setup.c:708 (set (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
        (plus:SI (mult:SI (reg:SI 3 r3 [orig:283 <variable>.hdr.size ] [283])
                (const_int 4 [0x4]))
            (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:283 <variable>.hdr.size ] [283])
        (nil)))

(jump_insn 751 411 752 54 (set (pc)
        (label_ref 750)) 242 {*arm_jump} (nil))
;; End of basic block 54 -> ( 56)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  56 [100.0%]  (dfs_back)

(barrier 752 751 412)

;; Start of basic block ( 42 48) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  42 [100.0%] 
;; Pred edge  48 [100.0%] 
(code_label 412 752 413 55 134 "" [2 uses])

(note 413 412 401 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 401 413 750 55 arch/arm/kernel/setup.c:693 (set (reg/f:SI 6 r6 [406])
        (symbol_ref:SI ("__tagtable_end") [flags 0xc0] <var_decl 0x115eede0 __tagtable_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__tagtable_end") [flags 0xc0] <var_decl 0x115eede0 __tagtable_end>)
        (nil)))
;; End of basic block 55 -> ( 56)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  56 [100.0%]  (fallthru)

;; Start of basic block ( 55 54) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  55 [100.0%]  (fallthru)
;; Pred edge  54 [100.0%]  (dfs_back)
(code_label 750 401 694 56 157 "" [1 uses])

(note 694 750 414 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 414 694 415 56 arch/arm/kernel/setup.c:708 discrim 1 (set (reg:SI 3 r3 [orig:284 <variable>.hdr.size ] [284])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136]) [0 <variable>.hdr.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136]) [0 <variable>.hdr.size+0 S4 A32])
        (nil)))

(insn 415 414 416 56 arch/arm/kernel/setup.c:708 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:284 <variable>.hdr.size ] [284])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:284 <variable>.hdr.size ] [284])
        (nil)))

(jump_insn 416 415 417 56 arch/arm/kernel/setup.c:708 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 422)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 56 -> ( 57 58)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  57 [0.0%]  (fallthru)
;; Succ edge  58 [100.0%]  (loop_exit)

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  56 [0.0%]  (fallthru)
(note 417 416 707 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 707 417 753 57 arch/arm/kernel/setup.c:708 discrim 1 (set (reg/v/f:SI 3 r3 [orig:147 t ] [147])
        (symbol_ref:SI ("__tagtable_begin") [flags 0xc0] <var_decl 0x115eed80 __tagtable_begin>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 753 707 754 57 (set (pc)
        (label_ref 419)) 242 {*arm_jump} (nil))
;; End of basic block 57 -> ( 52)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  52 [100.0%] 

(barrier 754 753 422)

;; Start of basic block ( 41 56) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  41 [100.0%] 
;; Pred edge  56 [100.0%]  (loop_exit)
(code_label 422 754 423 58 133 "" [2 uses])

(note 423 422 436 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(note 436 423 437 58 NOTE_INSN_DELETED)

(note 437 436 438 58 NOTE_INSN_DELETED)

(note 438 437 425 58 NOTE_INSN_DELETED)

(insn 425 438 427 58 arch/arm/kernel/setup.c:874 (set (reg:SI 0 r0)
        (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)
        (nil)))

(insn 427 425 426 58 arch/arm/kernel/setup.c:874 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(insn 426 427 428 58 arch/arm/kernel/setup.c:874 (set (reg:SI 1 r1)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 from+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 428 426 429 58 arch/arm/kernel/setup.c:874 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 429 428 430 58 arch/arm/kernel/setup.c:890 (set (reg/f:SI 3 r3 [286])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 430 429 432 58 arch/arm/kernel/setup.c:890 (set (mem/f/c/i:SI (reg/f:SI 3 r3 [286]) [0 machine_desc+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [286])
        (nil)))

(insn 432 430 783 58 arch/arm/kernel/setup.c:891 (set (reg/f:SI 2 r2 [orig:288 <variable>.name ] [288])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])
        (nil)))

(insn 783 432 433 58 arch/arm/kernel/setup.c:891 (set (reg/f:SI 3 r3 [287])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 433 783 434 58 arch/arm/kernel/setup.c:891 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [287])
                (const_int 24 [0x18])) [0 machine_name+0 S4 A32])
        (reg/f:SI 2 r2 [orig:288 <variable>.name ] [288])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [287])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:288 <variable>.name ] [288])
            (nil))))

(insn 434 433 439 58 arch/arm/kernel/setup.c:899 (set (reg:SI 3 r3 [290])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 439 434 440 58 arch/arm/kernel/setup.c:899 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [290])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [290])
        (nil)))

(jump_insn 440 439 441 58 arch/arm/kernel/setup.c:899 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 445)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 58 -> ( 59 60)
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  59 [29.0%]  (fallthru)
;; Succ edge  60 [71.0%] 

;; Start of basic block ( 58) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  58 [29.0%]  (fallthru)
(note 441 440 443 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 443 441 444 59 arch/arm/kernel/setup.c:900 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11727620>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11727620>)
        (nil)))

(call_insn 444 443 445 59 arch/arm/kernel/setup.c:900 (parallel [
            (call (mem:SI (symbol_ref:SI ("reboot_setup") [flags 0x41] <function_decl 0x115a7d80 reboot_setup>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 59 -> ( 60)
;; lr  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  60 [100.0%]  (fallthru)

;; Start of basic block ( 58 59) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  58 [71.0%] 
;; Pred edge  59 [100.0%]  (fallthru)
(code_label 445 444 446 60 143 "" [1 uses])

(note 446 445 448 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 448 446 465 60 arch/arm/kernel/setup.c:902 (set (reg/f:SI 3 r3 [295])
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fe2000 init_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fe2000 init_mm>)
        (nil)))

(insn 465 448 447 60 arch/arm/kernel/setup.c:908 (set (reg:SI 2 r2)
        (const_int 1024 [0x400])) 167 {*arm_movsi_insn} (nil))

(insn 447 465 461 60 arch/arm/kernel/setup.c:902 (set (reg/f:SI 5 r5 [orig:168 _text.368 ] [168])
        (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
        (nil)))

(insn 461 447 463 60 arch/arm/kernel/setup.c:908 (set (reg/f:SI 6 r6 [303])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1084 [0x43c])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1084 [0x43c])))
        (nil)))

(insn 463 461 464 60 arch/arm/kernel/setup.c:908 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [303])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 1084 [0x43c])))
        (nil)))

(insn 464 463 782 60 arch/arm/kernel/setup.c:908 (set (reg:SI 1 r1)
        (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("boot_command_line") [flags 0xc0] <var_decl 0x10a4f9c0 boot_command_line>)
        (nil)))

(insn 782 464 452 60 arch/arm/kernel/setup.c:903 (set (reg/f:SI 12 ip [297])
        (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
        (nil)))

(insn 452 782 781 60 arch/arm/kernel/setup.c:903 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [295])
                (const_int 132 [0x84])) [0 init_mm.end_code+0 S4 A32])
        (reg/f:SI 12 ip [297])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [297])
        (expr_list:REG_EQUAL (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
            (nil))))

(insn 781 452 458 60 arch/arm/kernel/setup.c:905 (set (reg/f:SI 12 ip [301])
        (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
        (nil)))

(insn 458 781 780 60 arch/arm/kernel/setup.c:905 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [295])
                (const_int 148 [0x94])) [0 init_mm.brk+0 S4 A32])
        (reg/f:SI 12 ip [301])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [301])
        (expr_list:REG_EQUAL (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
            (nil))))

(insn 780 458 455 60 arch/arm/kernel/setup.c:904 (set (reg/f:SI 12 ip [299])
        (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x113f3b40 _edata>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x113f3b40 _edata>)
        (nil)))

(insn 455 780 449 60 arch/arm/kernel/setup.c:904 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [295])
                (const_int 140 [0x8c])) [0 init_mm.end_data+0 S4 A32])
        (reg/f:SI 12 ip [299])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [299])
        (expr_list:REG_EQUAL (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x113f3b40 _edata>)
            (nil))))

(insn 449 455 466 60 arch/arm/kernel/setup.c:902 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [295])
                (const_int 128 [0x80])) [0 init_mm.start_code+0 S4 A32])
        (reg/f:SI 5 r5 [orig:168 _text.368 ] [168])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [295])
        (expr_list:REG_EQUAL (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
            (nil))))

(call_insn 466 449 470 60 arch/arm/kernel/setup.c:908 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strlcpy") [flags 0x41] <function_decl 0x10bb1380 strlcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 470 466 471 60 arch/arm/kernel/setup.c:909 (set (mem/f:SI (reg/v/f:SI 11 fp [orig:170 cmdline_p ] [170]) [0 S4 A32])
        (reg/f:SI 6 r6 [303])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 6 r6 [303])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 1084 [0x43c])))
            (nil))))

(call_insn 471 470 502 60 arch/arm/kernel/setup.c:911 (parallel [
            (call (mem:SI (symbol_ref:SI ("parse_early_param") [flags 0x41] <function_decl 0x10a57400 parse_early_param>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 502 471 472 60 arch/arm/kernel/setup.c:550 (set (reg/f:SI 8 r8 [398])
        (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11729f30>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11729f30>)
        (nil)))

(call_insn 472 502 475 60 arch/arm/kernel/setup.c:913 (parallel [
            (call (mem:SI (symbol_ref:SI ("sanity_check_meminfo") [flags 0x41] <function_decl 0x115a7d00 sanity_check_meminfo>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 475 472 474 60 arch/arm/kernel/setup.c:914 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 474 475 476 60 arch/arm/kernel/setup.c:914 (set (reg:SI 0 r0)
        (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("meminfo") [flags 0xc0] <var_decl 0x114015a0 meminfo>)
        (nil)))

(call_insn 476 474 477 60 arch/arm/kernel/setup.c:914 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_memblock_init") [flags 0x41] <function_decl 0x113e4000 arm_memblock_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 477 476 478 60 arch/arm/kernel/setup.c:916 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])) 167 {*arm_movsi_insn} (nil))

(call_insn 478 477 479 60 arch/arm/kernel/setup.c:916 (parallel [
            (call (mem:SI (symbol_ref:SI ("paging_init") [flags 0x41] <function_decl 0x115a7c80 paging_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 479 478 491 60 arch/arm/kernel/setup.c:543 (set (reg/f:SI 3 r3 [310])
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
        (nil)))

(insn 491 479 480 60 arch/arm/kernel/setup.c:548 (set (reg/f:SI 2 r2 [318])
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)
        (nil)))

(insn 480 491 523 60 arch/arm/kernel/setup.c:543 (set (reg/f:SI 5 r5 [311])
        (plus:SI (reg/f:SI 5 r5 [orig:168 _text.368 ] [168])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 523 480 565 60 arch/arm/kernel/setup.c:557 (set (reg/f:SI 6 r6 [401])
        (reg/f:SI 3 r3 [310])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
        (nil)))

(insn 565 523 481 60 arch/arm/kernel/setup.c:548 discrim 1 (set (reg/f:SI 7 r7 [395])
        (reg/f:SI 2 r2 [318])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)
        (nil)))

(insn 481 565 779 60 arch/arm/kernel/setup.c:543 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [310])
                (const_int 28 [0x1c])) [0 <variable>.start+0 S4 A32])
        (reg/f:SI 5 r5 [311])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 5 r5 [311])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f3960 _text>)
                    (const_int 1073741824 [0x40000000])))
            (nil))))

(insn 779 481 484 60 arch/arm/kernel/setup.c:544 (set (reg/f:SI 1 r1 [313])
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
                (const_int 1073741823 [0x3fffffff])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
                (const_int 1073741823 [0x3fffffff])))
        (nil)))

(insn 484 779 778 60 arch/arm/kernel/setup.c:544 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [310])
                (const_int 32 [0x20])) [0 <variable>.end+0 S4 A32])
        (reg/f:SI 1 r1 [313])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [313])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f3a20 _etext>)
                    (const_int 1073741823 [0x3fffffff])))
            (nil))))

(insn 778 484 487 60 arch/arm/kernel/setup.c:545 (set (reg/f:SI 1 r1 [315])
        (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x113f3ae0 _sdata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x113f3ae0 _sdata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 487 778 777 60 arch/arm/kernel/setup.c:545 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [310])
                (const_int 56 [0x38])) [0 <variable>.start+0 S4 A32])
        (reg/f:SI 1 r1 [315])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [315])
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x113f3ae0 _sdata>)
                    (const_int 1073741824 [0x40000000])))
            (nil))))

(insn 777 487 490 60 arch/arm/kernel/setup.c:546 (set (reg/f:SI 1 r1 [317])
        (const:SI (plus:SI (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
                (const_int 1073741823 [0x3fffffff])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
                (const_int 1073741823 [0x3fffffff])))
        (nil)))

(insn 490 777 492 60 arch/arm/kernel/setup.c:546 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [310])
                (const_int 60 [0x3c])) [0 <variable>.end+0 S4 A32])
        (reg/f:SI 1 r1 [317])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [310])
        (expr_list:REG_DEAD (reg/f:SI 1 r1 [317])
            (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x113f3de0 _end>)
                        (const_int 1073741823 [0x3fffffff])))
                (nil)))))

(insn 492 490 517 60 arch/arm/kernel/setup.c:548 (set (reg/v/f:SI 5 r5 [orig:140 region ] [140])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 2 r2 [318])
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [318])
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)
                        (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
            (nil))))

(insn 517 492 755 60 arch/arm/kernel/setup.c:553 (set (reg:SI 10 sl [399])
        (const_int -2147483136 [0xffffffff80000200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -2147483136 [0xffffffff80000200])
        (nil)))

(jump_insn 755 517 756 60 (set (pc)
        (label_ref 562)) 242 {*arm_jump} (nil))
;; End of basic block 60 -> ( 67)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  67 [100.0%] 

(barrier 756 755 564)

;; Start of basic block ( 67) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 9 [r9] 24 [cc]
;; live  kill	 2 [r2] 14 [lr]

;; Pred edge  67 [91.0%] 
(code_label 564 756 495 61 147 "" [1 uses])

(note 495 564 507 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(note 507 495 510 61 NOTE_INSN_DELETED)

(note 510 507 511 61 NOTE_INSN_DELETED)

(note 511 510 513 61 NOTE_INSN_DELETED)

(note 513 511 499 61 NOTE_INSN_DELETED)

(call_insn 499 513 500 61 arch/arm/kernel/setup.c:549 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_bootmem_low") [flags 0x41] <function_decl 0x1103c800 __alloc_bootmem_low>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 500 499 521 61 arch/arm/kernel/setup.c:549 (set (reg/v/f:SI 9 r9 [orig:141 res ] [141])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 521 500 701 61 arch/arm/kernel/setup.c:555 (set (reg:SI 1 r1)
        (reg/v/f:SI 9 r9 [orig:141 res ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 701 521 503 61 arch/arm/kernel/setup.c:555 (set (reg:SI 0 r0)
        (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)) 167 {*arm_movsi_insn} (nil))

(insn 503 701 504 61 arch/arm/kernel/setup.c:550 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 8 [0x8])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 8 r8 [398])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11729f30>)
        (nil)))

(insn 504 503 505 61 arch/arm/kernel/setup.c:551 (set (reg:SI 3 r3 [orig:321 <variable>.base ] [321])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:140 region ] [140]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:140 region ] [140]) [0 <variable>.base+0 S4 A32])
        (nil)))

(insn 505 504 506 61 arch/arm/kernel/setup.c:551 (set (reg:SI 3 r3 [322])
        (plus:SI (reg:SI 3 r3 [orig:321 <variable>.base ] [321])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 506 505 763 61 arch/arm/kernel/setup.c:551 (set (reg:SI 3 r3 [320])
        (plus:SI (reg:SI 3 r3 [322])
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 3 r3 [orig:321 <variable>.base ] [321])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 763 506 764 61 arch/arm/kernel/setup.c:551 (set (reg:SI 3 r3 [324])
        (and:SI (reg:SI 3 r3 [320])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 764 763 509 61 arch/arm/kernel/setup.c:551 (set (reg:SI 3 r3 [324])
        (and:SI (reg:SI 3 r3 [324])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 509 764 512 61 arch/arm/kernel/setup.c:551 (set (mem/s/j:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141]) [0 <variable>.start+0 S4 A32])
        (reg:SI 3 r3 [324])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [324])
        (nil)))

(insn 512 509 561 61 arch/arm/kernel/setup.c:552 (parallel [
            (set (reg:SI 3 r3 [325])
                (plus:SI (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:140 region ] [140])
                            (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
                    (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:140 region ] [140]) [0 <variable>.base+0 S4 A32])))
            (clobber (reg:SI 2 r2))
        ]) 321 {*arith_adjacentmem} (expr_list:REG_UNUSED (reg:SI 2 r2)
        (nil)))

(insn 561 512 518 61 arch/arm/kernel/setup.c:548 (set (reg/v/f:SI 5 r5 [orig:140 region ] [140])
        (plus:SI (reg/v/f:SI 5 r5 [orig:140 region ] [140])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 518 561 765 61 arch/arm/kernel/setup.c:553 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 12 [0xc])) [0 <variable>.flags+0 S4 A32])
        (reg:SI 10 sl [399])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -2147483136 [0xffffffff80000200])
        (nil)))

(insn 765 518 766 61 arch/arm/kernel/setup.c:552 (set (reg:SI 3 r3 [329])
        (and:SI (reg:SI 3 r3 [325])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 766 765 515 61 arch/arm/kernel/setup.c:552 (set (reg:SI 3 r3 [329])
        (and:SI (reg:SI 3 r3 [329])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 515 766 516 61 arch/arm/kernel/setup.c:552 (set (reg:SI 3 r3 [330])
        (plus:SI (reg:SI 3 r3 [329])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 516 515 522 61 arch/arm/kernel/setup.c:552 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 3 r3 [330])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [330])
        (nil)))

(call_insn 522 516 524 61 arch/arm/kernel/setup.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 524 522 525 61 arch/arm/kernel/setup.c:557 (set (reg:SI 2 r2 [orig:334 <variable>.start ] [334])
        (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 28 [0x1c])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 28 [0x1c])) [0 <variable>.start+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                        (const_int 28 [0x1c]))) [0 <variable>.start+0 S4 A32])
            (nil))))

(insn 525 524 526 61 arch/arm/kernel/setup.c:557 (set (reg:SI 3 r3 [orig:335 <variable>.start ] [335])
        (mem/s/j:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 526 525 527 61 arch/arm/kernel/setup.c:557 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:334 <variable>.start ] [334])
            (reg:SI 3 r3 [orig:335 <variable>.start ] [335]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:335 <variable>.start ] [335])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:334 <variable>.start ] [334])
            (nil))))

(jump_insn 527 526 528 61 arch/arm/kernel/setup.c:557 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 61 -> ( 62 64)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  62 [50.0%]  (fallthru)
;; Succ edge  64 [50.0%] 

;; Start of basic block ( 61) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  61 [50.0%]  (fallthru)
(note 528 527 530 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 530 528 531 62 arch/arm/kernel/setup.c:558 (set (reg:SI 2 r2 [orig:337 <variable>.end ] [337])
        (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 32 [0x20])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 32 [0x20])) [0 <variable>.end+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                        (const_int 32 [0x20]))) [0 <variable>.end+0 S4 A32])
            (nil))))

(insn 531 530 532 62 arch/arm/kernel/setup.c:558 (set (reg:SI 3 r3 [orig:338 <variable>.end ] [338])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 532 531 533 62 arch/arm/kernel/setup.c:558 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:337 <variable>.end ] [337])
            (reg:SI 3 r3 [orig:338 <variable>.end ] [338]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:338 <variable>.end ] [338])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:337 <variable>.end ] [337])
            (nil))))

(jump_insn 533 532 534 62 arch/arm/kernel/setup.c:558 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 62 -> ( 63 64)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  63 [29.0%]  (fallthru)
;; Succ edge  64 [71.0%] 

;; Start of basic block ( 62) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  62 [29.0%]  (fallthru)
(note 534 533 703 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 703 534 537 63 arch/arm/kernel/setup.c:559 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 28 [0x1c])))) 167 {*arm_movsi_insn} (nil))

(insn 537 703 539 63 arch/arm/kernel/setup.c:559 (set (reg:SI 0 r0)
        (reg/v/f:SI 9 r9 [orig:141 res ] [141])) 167 {*arm_movsi_insn} (nil))

(call_insn 539 537 540 63 arch/arm/kernel/setup.c:559 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 63 -> ( 64)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  64 [100.0%]  (fallthru)

;; Start of basic block ( 61 62 63) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  61 [50.0%] 
;; Pred edge  62 [71.0%] 
;; Pred edge  63 [100.0%]  (fallthru)
(code_label 540 539 541 64 145 "" [2 uses])

(note 541 540 543 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 543 541 544 64 arch/arm/kernel/setup.c:560 (set (reg:SI 2 r2 [orig:342 <variable>.start ] [342])
        (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 56 [0x38])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 56 [0x38])) [0 <variable>.start+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                        (const_int 56 [0x38]))) [0 <variable>.start+0 S4 A32])
            (nil))))

(insn 544 543 545 64 arch/arm/kernel/setup.c:560 (set (reg:SI 3 r3 [orig:343 <variable>.start ] [343])
        (mem/s/j:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141]) [0 <variable>.start+0 S4 A32])
        (nil)))

(insn 545 544 546 64 arch/arm/kernel/setup.c:560 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:342 <variable>.start ] [342])
            (reg:SI 3 r3 [orig:343 <variable>.start ] [343]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:343 <variable>.start ] [343])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:342 <variable>.start ] [342])
            (nil))))

(jump_insn 546 545 547 64 arch/arm/kernel/setup.c:560 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 562)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 64 -> ( 65 67)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  65 [50.0%]  (fallthru)
;; Succ edge  67 [50.0%] 

;; Start of basic block ( 64) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  64 [50.0%]  (fallthru)
(note 547 546 549 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 549 547 550 65 arch/arm/kernel/setup.c:561 (set (reg:SI 2 r2 [orig:345 <variable>.end ] [345])
        (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 60 [0x3c])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 6 r6 [401])
                (const_int 60 [0x3c])) [0 <variable>.end+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                        (const_int 60 [0x3c]))) [0 <variable>.end+0 S4 A32])
            (nil))))

(insn 550 549 551 65 arch/arm/kernel/setup.c:561 (set (reg:SI 3 r3 [orig:346 <variable>.end ] [346])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:141 res ] [141])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (nil)))

(insn 551 550 552 65 arch/arm/kernel/setup.c:561 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:345 <variable>.end ] [345])
            (reg:SI 3 r3 [orig:346 <variable>.end ] [346]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:346 <variable>.end ] [346])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:345 <variable>.end ] [345])
            (nil))))

(jump_insn 552 551 553 65 arch/arm/kernel/setup.c:561 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 562)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 65 -> ( 66 67)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  66 [29.0%]  (fallthru)
;; Succ edge  67 [71.0%] 

;; Start of basic block ( 65) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  65 [29.0%]  (fallthru)
(note 553 552 556 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 556 553 705 66 arch/arm/kernel/setup.c:562 (set (reg:SI 0 r0)
        (reg/v/f:SI 9 r9 [orig:141 res ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 705 556 558 66 arch/arm/kernel/setup.c:562 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 56 [0x38])))) 167 {*arm_movsi_insn} (nil))

(call_insn 558 705 562 66 arch/arm/kernel/setup.c:562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 66 -> ( 67)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  67 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 66 60 64 65) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  66 [100.0%]  (fallthru,dfs_back)
;; Pred edge  60 [100.0%] 
;; Pred edge  64 [50.0%] 
;; Pred edge  65 [71.0%] 
(code_label 562 558 563 67 144 "" [3 uses])

(note 563 562 568 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(note 568 563 498 67 NOTE_INSN_DELETED)

(insn 498 568 698 67 arch/arm/kernel/setup.c:549 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 698 498 697 67 arch/arm/kernel/setup.c:549 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 697 698 567 67 arch/arm/kernel/setup.c:549 (set (reg:SI 0 r0)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 567 697 569 67 arch/arm/kernel/setup.c:548 discrim 1 (set (reg:SI 12 ip [orig:352 memblock.memory.cnt ] [352])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [395])
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [395])
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)
                        (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
            (nil))))

(insn 569 567 570 67 arch/arm/kernel/setup.c:548 discrim 1 (set (reg/f:SI 3 r3 [orig:354 memblock.memory.regions ] [354])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [395])
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [395])
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113e61e0 memblock>)
                        (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
            (nil))))

(insn 570 569 571 67 arch/arm/kernel/setup.c:548 discrim 1 (set (reg:SI 3 r3 [353])
        (plus:SI (mult:SI (reg:SI 12 ip [orig:352 memblock.memory.cnt ] [352])
                (const_int 8 [0x8]))
            (reg/f:SI 3 r3 [orig:354 memblock.memory.regions ] [354]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 12 ip [orig:352 memblock.memory.cnt ] [352])
        (nil)))

(insn 571 570 572 67 arch/arm/kernel/setup.c:548 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:140 region ] [140])
            (reg:SI 3 r3 [353]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [353])
        (nil)))

(jump_insn 572 571 573 67 arch/arm/kernel/setup.c:548 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 564)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 67 -> ( 61 68)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  61 [91.0%] 
;; Succ edge  68 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 67) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  67 [9.0%]  (fallthru,loop_exit)
(note 573 572 574 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 574 573 575 68 arch/arm/kernel/setup.c:565 (set (reg:SI 2 r2 [orig:139 D.26354 ] [139])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 20 [0x14])) [0 <variable>.video_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 575 574 576 68 arch/arm/kernel/setup.c:565 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:139 D.26354 ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 576 575 577 68 arch/arm/kernel/setup.c:565 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 588)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 68 -> ( 69 70)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  69 [29.0%]  (fallthru)
;; Succ edge  70 [71.0%] 

;; Start of basic block ( 68) -> 69
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  68 [29.0%]  (fallthru)
(note 577 576 578 69 [bb 69] NOTE_INSN_BASIC_BLOCK)

(insn 578 577 585 69 arch/arm/kernel/setup.c:566 (set (reg/f:SI 3 r3 [355])
        (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
        (nil)))

(insn 585 578 586 69 arch/arm/kernel/setup.c:568 (set (reg:SI 0 r0)
        (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("iomem_resource") [flags 0xc0] <var_decl 0x10e34de0 iomem_resource>)
        (nil)))

(insn 586 585 579 69 arch/arm/kernel/setup.c:568 (set (reg:SI 1 r1)
        (reg/f:SI 3 r3 [355])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
        (nil)))

(insn 579 586 581 69 arch/arm/kernel/setup.c:566 (set (mem/s/j:SI (reg/f:SI 3 r3 [355]) [0 <variable>.start+0 S4 A32])
        (reg:SI 2 r2 [orig:139 D.26354 ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:139 D.26354 ] [139])
        (nil)))

(insn 581 579 582 69 arch/arm/kernel/setup.c:567 (set (reg:SI 2 r2 [orig:357 <variable>.video_end ] [357])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 24 [0x18])) [0 <variable>.video_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 24 [0x18])) [0 <variable>.video_end+0 S4 A32])
        (nil)))

(insn 582 581 587 69 arch/arm/kernel/setup.c:567 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [355])
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])
        (reg:SI 2 r2 [orig:357 <variable>.video_end ] [357])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [355])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:357 <variable>.video_end ] [357])
            (nil))))

(call_insn 587 582 588 69 arch/arm/kernel/setup.c:568 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 69 -> ( 70)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  70 [100.0%]  (fallthru)

;; Start of basic block ( 68 69) -> 70
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  68 [71.0%] 
;; Pred edge  69 [100.0%]  (fallthru)
(code_label 588 587 589 70 148 "" [1 uses])

(note 589 588 592 70 [bb 70] NOTE_INSN_BASIC_BLOCK)

(note 592 589 593 70 NOTE_INSN_DELETED)

(note 593 592 594 70 NOTE_INSN_DELETED)

(note 594 593 590 70 NOTE_INSN_DELETED)

(insn 590 594 595 70 arch/arm/kernel/setup.c:575 (set (reg:SI 3 r3 [361])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 595 590 596 70 arch/arm/kernel/setup.c:575 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [361])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [361])
        (nil)))

(jump_insn 596 595 597 70 arch/arm/kernel/setup.c:575 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 604)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 70 -> ( 71 72)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  71 [29.0%]  (fallthru)
;; Succ edge  72 [71.0%] 

;; Start of basic block ( 70) -> 71
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  70 [29.0%]  (fallthru)
(note 597 596 601 71 [bb 71] NOTE_INSN_BASIC_BLOCK)

(insn 601 597 602 71 arch/arm/kernel/setup.c:576 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
        (nil)))

(insn 602 601 603 71 arch/arm/kernel/setup.c:576 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 84 [0x54])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 84 [0x54])))
        (nil)))

(call_insn 603 602 604 71 arch/arm/kernel/setup.c:576 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 71 -> ( 72)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  72 [100.0%]  (fallthru)

;; Start of basic block ( 70 71) -> 72
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  70 [71.0%] 
;; Pred edge  71 [100.0%]  (fallthru)
(code_label 604 603 605 72 149 "" [1 uses])

(note 605 604 608 72 [bb 72] NOTE_INSN_BASIC_BLOCK)

(note 608 605 609 72 NOTE_INSN_DELETED)

(note 609 608 610 72 NOTE_INSN_DELETED)

(note 610 609 606 72 NOTE_INSN_DELETED)

(insn 606 610 611 72 arch/arm/kernel/setup.c:577 (set (reg:SI 3 r3 [369])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 611 606 612 72 arch/arm/kernel/setup.c:577 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [369])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [369])
        (nil)))

(jump_insn 612 611 613 72 arch/arm/kernel/setup.c:577 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 621)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 72 -> ( 73 74)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  73 [29.0%]  (fallthru)
;; Succ edge  74 [71.0%] 

;; Start of basic block ( 72) -> 73
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  72 [29.0%]  (fallthru)
(note 613 612 618 73 [bb 73] NOTE_INSN_BASIC_BLOCK)

(insn 618 613 619 73 arch/arm/kernel/setup.c:578 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
        (nil)))

(insn 619 618 620 73 arch/arm/kernel/setup.c:578 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 112 [0x70])))) 167 {*arm_movsi_insn} (nil))

(call_insn 620 619 621 73 arch/arm/kernel/setup.c:578 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 73 -> ( 74)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  74 [100.0%]  (fallthru)

;; Start of basic block ( 72 73) -> 74
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  72 [71.0%] 
;; Pred edge  73 [100.0%]  (fallthru)
(code_label 621 620 622 74 150 "" [1 uses])

(note 622 621 625 74 [bb 74] NOTE_INSN_BASIC_BLOCK)

(note 625 622 626 74 NOTE_INSN_DELETED)

(note 626 625 627 74 NOTE_INSN_DELETED)

(note 627 626 623 74 NOTE_INSN_DELETED)

(insn 623 627 628 74 arch/arm/kernel/setup.c:579 (set (reg:SI 3 r3 [378])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                    (const_int 28 [0x1c])) [0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 628 623 629 74 arch/arm/kernel/setup.c:579 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [378])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [378])
        (nil)))

(jump_insn 629 628 630 74 arch/arm/kernel/setup.c:579 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 638)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 74 -> ( 75 76)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  75 [29.0%]  (fallthru)
;; Succ edge  76 [71.0%] 

;; Start of basic block ( 74) -> 75
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  74 [29.0%]  (fallthru)
(note 630 629 635 75 [bb 75] NOTE_INSN_BASIC_BLOCK)

(insn 635 630 636 75 arch/arm/kernel/setup.c:580 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ioport_resource") [flags 0xc0] <var_decl 0x10e34d80 ioport_resource>)
        (nil)))

(insn 636 635 637 75 arch/arm/kernel/setup.c:580 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR5") [flags 0x182])
                (const_int 140 [0x8c])))) 167 {*arm_movsi_insn} (nil))

(call_insn 637 636 638 75 arch/arm/kernel/setup.c:580 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("request_resource") [flags 0x41] <function_decl 0x10e39880 request_resource>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 75 -> ( 76)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  76 [100.0%]  (fallthru)

;; Start of basic block ( 74 75) -> 76
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  74 [71.0%] 
;; Pred edge  75 [100.0%]  (fallthru)
(code_label 638 637 639 76 151 "" [1 uses])

(note 639 638 640 76 [bb 76] NOTE_INSN_BASIC_BLOCK)

(insn 640 639 641 76 arch/arm/kernel/setup.c:922 (set (reg/f:SI 3 r3 [386])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x11401660 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x11401660 smp_on_up>)
        (nil)))

(insn 641 640 642 76 arch/arm/kernel/setup.c:922 (set (reg:SI 3 r3 [orig:387 smp_on_up ] [387])
        (mem/c/i:SI (reg/f:SI 3 r3 [386]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x11401660 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 642 641 643 76 arch/arm/kernel/setup.c:922 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:387 smp_on_up ] [387])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:387 smp_on_up ] [387])
        (nil)))

(jump_insn 643 642 644 76 arch/arm/kernel/setup.c:922 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 646)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 76 -> ( 77 78)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  77 [29.0%]  (fallthru)
;; Succ edge  78 [71.0%] 

;; Start of basic block ( 76) -> 77
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  76 [29.0%]  (fallthru)
(note 644 643 645 77 [bb 77] NOTE_INSN_BASIC_BLOCK)

(call_insn 645 644 646 77 arch/arm/kernel/setup.c:923 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_init_cpus") [flags 0x41] <function_decl 0x10c8ef80 smp_init_cpus>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 77 -> ( 78)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  78 [100.0%]  (fallthru)

;; Start of basic block ( 76 77) -> 78
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  76 [71.0%] 
;; Pred edge  77 [100.0%]  (fallthru)
(code_label 646 645 647 78 152 "" [1 uses])

(note 647 646 648 78 [bb 78] NOTE_INSN_BASIC_BLOCK)

(call_insn 648 647 649 78 arch/arm/kernel/setup.c:940 (parallel [
            (call (mem:SI (symbol_ref:SI ("early_trap_init") [flags 0x41] <function_decl 0x115a7700 early_trap_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 649 648 650 78 arch/arm/kernel/setup.c:942 (set (reg/f:SI 3 r3 [orig:167 D.25817 ] [167])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 mdesc ] [166])
                (const_int 44 [0x2c])) [0 <variable>.init_early+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 650 649 651 78 arch/arm/kernel/setup.c:942 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:167 D.25817 ] [167])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 651 650 652 78 arch/arm/kernel/setup.c:942 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 676)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 78 -> ( 79 82)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  79 [78.3%]  (fallthru)
;; Succ edge  82 [21.6%] 

;; Start of basic block ( 78) -> 79
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  78 [78.3%]  (fallthru)
(note 652 651 653 79 [bb 79] NOTE_INSN_BASIC_BLOCK)

(call_insn 653 652 757 79 arch/arm/kernel/setup.c:943 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:167 D.25817 ] [167]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:167 D.25817 ] [167])
        (nil))
    (nil))

(jump_insn 757 653 758 79 (set (pc)
        (label_ref 676)) 242 {*arm_jump} (nil))
;; End of basic block 79 -> ( 82)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  82 [100.0%] 

(barrier 758 757 658)

;; Start of basic block ( 87) -> 80
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(13){ }}
;; lr  in  	 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  87 [100.0%] 
(code_label 658 758 659 80 114 "" [1 uses])

(note 659 658 660 80 [bb 80] NOTE_INSN_BASIC_BLOCK)

(insn 660 659 661 80 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:65 (parallel [
            (set (reg/v:SI 3 r3 [orig:162 __val ] [162])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 1") ("=r") 0 []
                     [] 8199979))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 661 660 759 80 arch/arm/kernel/setup.c:265 (set (reg/v:SI 3 r3 [orig:160 aliasing_icache ] [160])
        (and:SI (reg/v:SI 3 r3 [orig:162 __val ] [162])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 759 661 760 80 (set (pc)
        (label_ref 662)) 242 {*arm_jump} (nil))
;; End of basic block 80 -> ( 17)
;; lr  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%] 

(barrier 760 759 747)

;; Start of basic block ( 53) -> 81
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  53 [100.0%] 
(code_label 747 760 666 81 156 "" [1 uses])

(note 666 747 669 81 [bb 81] NOTE_INSN_BASIC_BLOCK)

(insn 669 666 710 81 arch/arm/kernel/setup.c:710 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 tags.955 ] [136])
                (const_int 4 [0x4])) [0 <variable>.hdr.tag+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 710 669 670 81 arch/arm/kernel/setup.c:710 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x11728100>)) 167 {*arm_movsi_insn} (nil))

(call_insn 670 710 761 81 arch/arm/kernel/setup.c:710 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 761 670 762 81 (set (pc)
        (label_ref 407)) 242 {*arm_jump} (nil))
;; End of basic block 81 -> ( 54)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  54 [100.0%] 

(barrier 762 761 676)

;; Start of basic block ( 78 79) -> 82
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  78 [21.6%] 
;; Pred edge  79 [100.0%] 
(code_label 676 762 679 82 155 "" [2 uses])

(note 679 676 810 82 [bb 82] NOTE_INSN_BASIC_BLOCK)

(note 810 679 811 82 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 811 810 812 82 arch/arm/kernel/setup.c:944 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 82 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 812 811 776)

(note 776 812 795 NOTE_INSN_DELETED)

(note 795 776 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
