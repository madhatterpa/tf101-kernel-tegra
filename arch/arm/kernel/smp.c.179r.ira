
;; Function smp_prepare_boot_cpu (smp_prepare_boot_cpu)[0:1413] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 31.
verify found no changes in insn with uid = 31.
deleting insn with uid = 9.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000


Pass 1 for finding allocno costs

    r147: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000

   Insn 20(l0): point = 0
   Insn 15(l0): point = 2
   Insn 13(l0): point = 4
   Insn 31(l0): point = 6
   Insn 19(l0): point = 8
   Insn 12(l0): point = 10
   Insn 7(l0): point = 12
   Insn 6(l0): point = 14
   Insn 29(l0): point = 16
   Insn 28(l0): point = 18
 a0(r143): [1..2]
 a1(r147): [1..8]
 a2(r141): [3..4]
 a3(r135): [3..14]
 a4(r137): [5..6]
 a5(r140): [5..10]
 a6(r138): [9..18]
Compressing live ranges: from 21 to 11 - 52%
Ranges after the compression:
 a0(r143): [0..1]
 a1(r147): [0..6]
 a2(r141): [2..3]
 a3(r135): [2..9]
 a4(r137): [4..5]
 a5(r140): [4..8]
 a6(r138): [7..10]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r143,l0) conflicts: a1(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r147,l0) conflicts: a0(r143,l0) a2(r141,l0) a3(r135,l0) a4(r137,l0) a5(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r141,l0) conflicts: a1(r147,l0) a3(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r135,l0) conflicts: a1(r147,l0) a2(r141,l0) a4(r137,l0) a5(r140,l0) a6(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r137,l0) conflicts: a1(r147,l0) a3(r135,l0) a5(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r140,l0) conflicts: a1(r147,l0) a3(r135,l0) a4(r137,l0) a6(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r138,l0) conflicts: a3(r135,l0) a5(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r143)<->a3(r135)@125:shuffle
  cp1:a0(r143)<->a2(r141)@125:shuffle
  regions=1, blocks=3, points=11
    allocnos=7, copies=2, conflicts=1, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r143 1r147 2r141 3r135 4r137 5r140 6r138
    modified regnos: 135 137 138 140 141 143 147
    border:
    Pressure: GENERAL_REGS=5
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a5(r140,l0)
      Pushing a4(r137,l0)
      Pushing a2(r141,l0)
      Pushing a1(r147,l0)
      Pushing a0(r143,l0)
      Pushing a3(r135,l0)
      Pushing a6(r138,l0)
      Popping a6(r138,l0)  -- assign reg 3
      Popping a3(r135,l0)  -- assign reg 2
      Popping a0(r143,l0)  -- assign reg 2
      Popping a1(r147,l0)  -- assign reg 3
      Popping a2(r141,l0)  -- assign reg 1
      Popping a4(r137,l0)  -- assign reg 1
      Popping a5(r140,l0)  -- assign reg 0
Disposition:
    3:r135 l0     2    4:r137 l0     1    6:r138 l0     3    5:r140 l0     0
    2:r141 l0     1    0:r143 l0     2    1:r147 l0     3
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=28, live_throughout: 13, 14, dead_or_set: 138
insn=29, live_throughout: 13, 14, dead_or_set: 138
insn=6, live_throughout: 13, 14, 138, dead_or_set: 135
insn=7, live_throughout: 13, 14, 138, dead_or_set: 135
insn=12, live_throughout: 13, 14, 135, 138, dead_or_set: 140
insn=19, live_throughout: 13, 14, 135, 140, dead_or_set: 138, 147
insn=31, live_throughout: 13, 14, 135, 140, 147, dead_or_set: 137
insn=13, live_throughout: 13, 14, 135, 147, dead_or_set: 137, 140, 141
insn=15, live_throughout: 13, 14, 147, dead_or_set: 135, 141, 143
insn=20, live_throughout: 13, 14, dead_or_set: 143, 147
init_insns for 137: (insn_list:REG_DEP_TRUE 31 (nil))
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 15
changing reg in insn 31
changing reg in insn 13
changing reg in insn 29
changing reg in insn 28
changing reg in insn 29
changing reg in insn 19
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 15
changing reg in insn 15
changing reg in insn 20
changing reg in insn 19
changing reg in insn 20
Spilling for insn 28.
Using reg 2 for reload 0
Spilling for insn 20.

Reloads for insn # 28
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 20
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg:SI 2 r2 [143])
                                                        (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg:SI 2 r2 [143])
                                                        (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


smp_prepare_boot_cpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={2d,1u} r1={3d,2u} r2={5d,4u} r3={4d,4u} r12={1d} r13={1d,3u} r14={1d,1u} 
;;    total ref usage 32{17d,15u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 2 33 2 NOTE_INSN_DELETED)

(insn 33 10 28 2 arch/arm/kernel/smp.c:358 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 28 33 29 2 arch/arm/kernel/smp.c:358 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 28 6 2 arch/arm/kernel/smp.c:358 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 3 r3 [138])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 6 29 7 2 arch/arm/kernel/smp.c:358 (set (reg/v:SI 2 r2 [orig:135 __ptr ] [135])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)
        (nil)))

(insn 7 6 12 2 arch/arm/kernel/smp.c:358 (set (reg/v:SI 2 r2 [orig:135 __ptr ] [135])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 2 r2 [orig:135 __ptr ] [135])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8535393)) -1 (nil))

(insn 12 7 19 2 arch/arm/kernel/smp.c:358 (set (reg:SI 0 r0 [orig:140 <variable>.cpu ] [140])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [138])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 12 31 2 arch/arm/kernel/smp.c:358 (set (reg/f:SI 3 r3 [orig:147 <variable>.task ] [147])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [138])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 19 13 2 arch/arm/kernel/smp.c:358 (set (reg/f:SI 1 r1 [137])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 13 31 15 2 arch/arm/kernel/smp.c:358 (set (reg:SI 1 r1 [141])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:140 <variable>.cpu ] [140])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [137])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 13 20 2 arch/arm/kernel/smp.c:358 (set (reg:SI 2 r2 [143])
        (plus:SI (reg/v:SI 2 r2 [orig:135 __ptr ] [135])
            (reg:SI 1 r1 [141]))) 4 {*arm_addsi3} (nil))

(insn 20 15 30 2 arch/arm/kernel/smp.c:358 (set (mem/s/f/j:SI (plus:SI (reg:SI 2 r2 [143])
                (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])
        (reg/f:SI 3 r3 [orig:147 <variable>.task ] [147])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 30 20 32 NOTE_INSN_DELETED)

(note 32 30 0 NOTE_INSN_DELETED)


;; Function set_smp_cross_call (set_smp_cross_call)[0:1415] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
 a0(r134): [1..2]
Compressing live ranges: from 5 to 2 - 40%
Ranges after the compression:
 a0(r134): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134
    modified regnos: 134
    border:
    Pressure: GENERAL_REGS=3
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 3
Disposition:
    0:r134 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 0, 13, 14, dead_or_set: 134
insn=7, live_throughout: 13, 14, dead_or_set: 0, 134
init_insns for 134: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 6
changing reg in insn 7
Spilling for insn 7.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/f/c/i:SI (reg/f:SI 3 r3 [134]) [0 smp_cross_call+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (reg/f:SI 3 r3 [134]) [0 smp_cross_call+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


set_smp_cross_call

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 13{8d,5u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/smp.c:399 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 7 6 15 2 arch/arm/kernel/smp.c:399 (set (mem/f/c/i:SI (reg/f:SI 3 r3 [134]) [0 smp_cross_call+0 S4 A32])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 15 7 16 NOTE_INSN_DELETED)

(note 16 15 0 NOTE_INSN_DELETED)


;; Function arch_send_call_function_ipi_mask (arch_send_call_function_ipi_mask)[0:1416]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 19.
verify found no changes in insn with uid = 19.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 10(l0): point = 0
   Insn 19(l0): point = 2
   Insn 9(l0): point = 4
 a0(r134): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r134): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134
    modified regnos: 134
    border:
    Pressure: GENERAL_REGS=4
    Reg 134 of GENERAL_REGS has 3 regs less
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 3
Disposition:
    0:r134 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 0, 13, dead_or_set: 1
insn=19, live_throughout: 0, 1, 13, dead_or_set: 134
insn=10, live_throughout: 13, dead_or_set: 0, 1, 14, 134
init_insns for 134: (insn_list:REG_DEP_TRUE 19 (nil))
changing reg in insn 19
changing reg in insn 10


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 10.
deleting insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_send_call_function_ipi_mask

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,1u} r1={3d,1u} r2={2d} r3={3d,1u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{126d,7u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 9 2 NOTE_INSN_DELETED)

(insn 9 7 19 2 arch/arm/kernel/smp.c:404 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 19 9 10 2 arch/arm/kernel/smp.c:404 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 10 19 18 2 arch/arm/kernel/smp.c:404 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [134]) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 10 20 NOTE_INSN_DELETED)

(note 20 18 0 NOTE_INSN_DELETED)


;; Function arch_send_call_function_single_ipi (arch_send_call_function_single_ipi)[0:1417]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 29.
verify found no changes in insn with uid = 29.
deleting insn with uid = 12.
scanning new insn with uid = 30.
verify found no changes in insn with uid = 30.
deleting insn with uid = 10.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 20(l0): point = 0
   Insn 29(l0): point = 2
   Insn 18(l0): point = 4
   Insn 11(l0): point = 6
   Insn 30(l0): point = 8
   Insn 19(l0): point = 10
   Insn 13(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r140): [1..2]
 a1(r141): [5..12]
 a2(r133): [5..6]
 a3(r139): [7..8]
 a4(r137): [7..14]
 a5(r135): [13..18]
 a6(r136): [15..16]
Compressing live ranges: from 21 to 12 - 57%
Ranges after the compression:
 a0(r140): [0..1]
 a1(r141): [2..6]
 a2(r133): [2..3]
 a3(r139): [4..5]
 a4(r137): [4..8]
 a5(r135): [7..11]
 a6(r136): [9..10]
+++Allocating 48 bytes for conflict table (uncompressed size 56)
;; a0(r140,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r141,l0) conflicts: a2(r133,l0) a3(r139,l0) a4(r137,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a2(r133,l0) conflicts: a1(r141,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a3(r139,l0) conflicts: a1(r141,l0) a4(r137,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a4(r137,l0) conflicts: a1(r141,l0) a3(r139,l0) a5(r135,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a5(r135,l0) conflicts: a4(r137,l0) a6(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r136,l0) conflicts: a5(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r137)<->a6(r136)@125:shuffle
  cp1:a1(r141)<->a5(r135)@125:shuffle
  cp2:a2(r133)<->a3(r139)@125:shuffle
  cp3:a2(r133)<->a4(r137)@125:shuffle
  regions=1, blocks=3, points=12
    allocnos=7, copies=4, conflicts=2, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r141 2r133 3r139 4r137 5r135 6r136
    modified regnos: 133 135 136 137 139 140 141
    border:
    Pressure: GENERAL_REGS=4
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a6(r136,l0)
      Pushing a5(r135,l0)
      Pushing a4(r137,l0)
      Pushing a3(r139,l0)
      Pushing a2(r133,l0)
      Pushing a1(r141,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a1(r141,l0)  -- assign reg 0
      Popping a2(r133,l0)  -- assign reg 3
      Popping a3(r139,l0)  -- assign reg 2
      Popping a4(r137,l0)  -- assign reg 3
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r136,l0)  -- assign reg 3
Disposition:
    2:r133 l0     3    5:r135 l0     0    6:r136 l0     3    4:r137 l0     3
    3:r139 l0     2    0:r140 l0     3    1:r141 l0     0
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 135
insn=7, live_throughout: 13, 135, dead_or_set: 136
insn=8, live_throughout: 13, 135, dead_or_set: 136, 137
insn=13, live_throughout: 13, 137, dead_or_set: 135, 141
insn=19, live_throughout: 13, 137, 141, dead_or_set: 1
insn=30, live_throughout: 1, 13, 137, 141, dead_or_set: 139
insn=11, live_throughout: 1, 13, 141, dead_or_set: 133, 137, 139
insn=18, live_throughout: 1, 13, dead_or_set: 0, 133, 141
insn=29, live_throughout: 0, 1, 13, dead_or_set: 140
insn=20, live_throughout: 13, dead_or_set: 0, 1, 14, 140
init_insns for 139: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 29 (nil))
changing reg in insn 11
changing reg in insn 18
changing reg in insn 2
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 30
changing reg in insn 11
changing reg in insn 29
changing reg in insn 20
changing reg in insn 13
changing reg in insn 18
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 20.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_send_call_function_single_ipi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={3d,1u} r3={6d,4u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 146{132d,14u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 14 2 NOTE_INSN_DELETED)

(note 14 9 15 2 NOTE_INSN_DELETED)

(note 15 14 16 2 NOTE_INSN_DELETED)

(note 16 15 17 2 NOTE_INSN_DELETED)

(note 17 16 7 2 NOTE_INSN_DELETED)

(insn 7 17 8 2 include/linux/cpumask.h:738 (set (reg:SI 3 r3 [136])
        (and:SI (reg/v:SI 0 r0 [orig:135 cpu ] [135])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 13 2 include/linux/cpumask.h:738 (set (reg:SI 3 r3 [137])
        (plus:SI (reg:SI 3 r3 [136])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 13 8 19 2 arch/arm/kernel/smp.c:409 (set (reg:SI 0 r0 [141])
        (lshiftrt:SI (reg/v:SI 0 r0 [orig:135 cpu ] [135])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 19 13 30 2 arch/arm/kernel/smp.c:409 (set (reg:SI 1 r1)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 30 19 11 2 include/linux/cpumask.h:738 (set (reg/f:SI 2 r2 [139])
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)
        (nil)))

(insn 11 30 18 2 include/linux/cpumask.h:738 (set (reg/v/f:SI 3 r3 [orig:133 p ] [133])
        (plus:SI (mult:SI (reg:SI 3 r3 [137])
                (const_int 4 [0x4]))
            (reg/f:SI 2 r2 [139]))) 270 {*arith_shiftsi} (nil))

(insn 18 11 29 2 arch/arm/kernel/smp.c:409 (set (reg:SI 0 r0)
        (minus:SI (reg/v/f:SI 3 r3 [orig:133 p ] [133])
            (mult:SI (reg:SI 0 r0 [141])
                (const_int 4 [0x4])))) 273 {*sub_shiftsi} (nil))

(insn 29 18 20 2 arch/arm/kernel/smp.c:409 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 20 29 28 2 arch/arm/kernel/smp.c:409 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [140]) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 28 20 31 NOTE_INSN_DELETED)

(note 31 28 0 NOTE_INSN_DELETED)


;; Function smp_irq_stat_cpu (smp_irq_stat_cpu)[0:1419]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a19(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000


Pass 1 for finding allocno costs

    r195: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a19(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000

   Insn 77(l0): point = 0
   Insn 84(l0): point = 2
   Insn 85(l0): point = 4
   Insn 66(l0): point = 6
   Insn 58(l0): point = 11
   Insn 64(l0): point = 16
   Insn 50(l0): point = 18
   Insn 56(l0): point = 23
   Insn 40(l0): point = 25
   Insn 48(l0): point = 30
   Insn 32(l0): point = 32
   Insn 38(l0): point = 37
   Insn 22(l0): point = 39
   Insn 30(l0): point = 44
   Insn 21(l0): point = 46
   Insn 13(l0): point = 48
   Insn 20(l0): point = 50
   Insn 45(l0): point = 52
   Insn 27(l0): point = 54
   Insn 10(l0): point = 56
   Insn 18(l0): point = 58
   Insn 6(l0): point = 60
   Insn 2(l0): point = 62
 a0(r188): [3..8]
 a1(r137): [9..13] [7..7]
 a2(r195): [7..16]
 a3(r133): [14..20] [12..12]
 a4(r187): [12..23]
 a5(r152): [17..58]
 a6(r134): [21..27] [19..19]
 a7(r180): [19..30]
 a8(r135): [28..34] [26..26]
 a9(r171): [26..37]
 a10(r176): [31..52]
 a11(r136): [35..41] [33..33]
 a12(r164): [33..44]
 a13(r154): [42..46] [40..40]
 a14(r148): [40..48]
 a15(r160): [45..54]
 a16(r155): [47..50]
 a17(r144): [49..56]
 a18(r140): [53..60]
 a19(r139): [53..62]
Compressing live ranges: from 65 to 39 - 60%
Ranges after the compression:
 a0(r188): [0..2]
 a1(r137): [3..5] [1..1]
 a2(r195): [1..7]
 a3(r133): [6..10] [4..4]
 a4(r187): [4..12]
 a5(r152): [8..36]
 a6(r134): [11..14] [9..9]
 a7(r180): [9..16]
 a8(r135): [15..19] [13..13]
 a9(r171): [13..21]
 a10(r176): [17..32]
 a11(r136): [20..23] [18..18]
 a12(r164): [18..25]
 a13(r154): [24..27] [22..22]
 a14(r148): [22..29]
 a15(r160): [26..34]
 a16(r155): [28..31]
 a17(r144): [30..35]
 a18(r140): [33..37]
 a19(r139): [33..38]
+++Allocating 160 bytes for conflict table (uncompressed size 160)
;; a0(r188,l0) conflicts: a1(r137,l0) a2(r195,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a1(r137,l0) conflicts: a0(r188,l0) a2(r195,l0) a3(r133,l0) a4(r187,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r195,l0) conflicts: a0(r188,l0) a1(r137,l0) a3(r133,l0) a4(r187,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r133,l0) conflicts: a1(r137,l0) a2(r195,l0) a4(r187,l0) a5(r152,l0) a6(r134,l0) a7(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r187,l0) conflicts: a1(r137,l0) a2(r195,l0) a3(r133,l0) a5(r152,l0) a6(r134,l0) a7(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r152,l0) conflicts: a3(r133,l0) a4(r187,l0) a6(r134,l0) a7(r180,l0) a8(r135,l0) a9(r171,l0) a10(r176,l0) a11(r136,l0) a12(r164,l0) a13(r154,l0) a14(r148,l0) a15(r160,l0) a16(r155,l0) a17(r144,l0) a18(r140,l0) a19(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r134,l0) conflicts: a3(r133,l0) a4(r187,l0) a5(r152,l0) a7(r180,l0) a8(r135,l0) a9(r171,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r180,l0) conflicts: a3(r133,l0) a4(r187,l0) a5(r152,l0) a6(r134,l0) a8(r135,l0) a9(r171,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r135,l0) conflicts: a5(r152,l0) a6(r134,l0) a7(r180,l0) a9(r171,l0) a10(r176,l0) a11(r136,l0) a12(r164,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r171,l0) conflicts: a5(r152,l0) a6(r134,l0) a7(r180,l0) a8(r135,l0) a10(r176,l0) a11(r136,l0) a12(r164,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r176,l0) conflicts: a5(r152,l0) a8(r135,l0) a9(r171,l0) a11(r136,l0) a12(r164,l0) a13(r154,l0) a14(r148,l0) a15(r160,l0) a16(r155,l0) a17(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r136,l0) conflicts: a5(r152,l0) a8(r135,l0) a9(r171,l0) a10(r176,l0) a12(r164,l0) a13(r154,l0) a14(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r164,l0) conflicts: a5(r152,l0) a8(r135,l0) a9(r171,l0) a10(r176,l0) a11(r136,l0) a13(r154,l0) a14(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r154,l0) conflicts: a5(r152,l0) a10(r176,l0) a11(r136,l0) a12(r164,l0) a14(r148,l0) a15(r160,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r148,l0) conflicts: a5(r152,l0) a10(r176,l0) a11(r136,l0) a12(r164,l0) a13(r154,l0) a15(r160,l0) a16(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r160,l0) conflicts: a5(r152,l0) a10(r176,l0) a13(r154,l0) a14(r148,l0) a16(r155,l0) a17(r144,l0) a18(r140,l0) a19(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r155,l0) conflicts: a5(r152,l0) a10(r176,l0) a14(r148,l0) a15(r160,l0) a17(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r144,l0) conflicts: a5(r152,l0) a10(r176,l0) a15(r160,l0) a16(r155,l0) a18(r140,l0) a19(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r140,l0) conflicts: a5(r152,l0) a15(r160,l0) a17(r144,l0) a19(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r139,l0) conflicts: a5(r152,l0) a15(r160,l0) a17(r144,l0) a18(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a10(r176)<->a18(r140)@125:shuffle
  cp1:a10(r176)<->a19(r139)@125:shuffle
  cp2:a13(r154)<->a16(r155)@125:shuffle
  regions=1, blocks=3, points=39
    allocnos=20, copies=3, conflicts=0, ranges=26

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r188 1r137 2r195 3r133 4r187 5r152 6r134 7r180 8r135 9r171 10r176 11r136 12r164 13r154 14r148 15r160 16r155 17r144 18r140 19r139
    modified regnos: 133 134 135 136 137 139 140 144 148 152 154 155 160 164 171 176 180 187 188 195
    border:
    Pressure: GENERAL_REGS=8
    Reg 188 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 187 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 171 of GENERAL_REGS has 1 regs less
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
      Pushing a17(r144,l0)
      Pushing a16(r155,l0)
      Pushing a15(r160,l0)
      Pushing a14(r148,l0)
      Pushing a13(r154,l0)
      Pushing a12(r164,l0)
      Pushing a11(r136,l0)
      Pushing a10(r176,l0)
      Pushing a9(r171,l0)
      Pushing a8(r135,l0)
      Pushing a7(r180,l0)
      Pushing a6(r134,l0)
      Pushing a4(r187,l0)
      Pushing a3(r133,l0)
      Pushing a2(r195,l0)
      Pushing a1(r137,l0)
      Pushing a19(r139,l0)
      Pushing a18(r140,l0)
      Pushing a5(r152,l0)
      Pushing a0(r188,l0)
      Popping a0(r188,l0)  -- assign reg 2
      Popping a5(r152,l0)  -- assign reg 3
      Popping a18(r140,l0)  -- assign reg 2
      Popping a19(r139,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 0
      Popping a2(r195,l0)  -- assign reg 12
      Popping a3(r133,l0)  -- assign reg 4
      Popping a4(r187,l0)  -- assign reg 2
      Popping a6(r134,l0)  -- assign reg 0
      Popping a7(r180,l0)  -- assign reg 12
      Popping a8(r135,l0)  -- assign reg 4
      Popping a9(r171,l0)  -- assign reg 6
      Popping a10(r176,l0)  -- assign reg 2
      Popping a11(r136,l0)  -- assign reg 0
      Popping a12(r164,l0)  -- assign reg 12
      Popping a13(r154,l0)  -- assign reg 4
      Popping a14(r148,l0)  -- assign reg 6
      Popping a15(r160,l0)  -- assign reg 1
      Popping a16(r155,l0)  -- assign reg 4
      Popping a17(r144,l0)  -- assign reg 12
Disposition:
    3:r133 l0     4    6:r134 l0     0    8:r135 l0     4   11:r136 l0     0
    1:r137 l0     0   19:r139 l0     0   18:r140 l0     2   17:r144 l0    12
   14:r148 l0     6    5:r152 l0     3   13:r154 l0     4   16:r155 l0     4
   15:r160 l0     1   12:r164 l0    12    9:r171 l0     6   10:r176 l0     2
    7:r180 l0    12    4:r187 l0     2    0:r188 l0     2    2:r195 l0    12
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 139
insn=6, live_throughout: 13, 14, 139, dead_or_set: 140
insn=18, live_throughout: 13, 14, 139, 140, dead_or_set: 152
insn=10, live_throughout: 13, 14, 139, 140, 152, dead_or_set: 144
insn=27, live_throughout: 13, 14, 139, 140, 144, 152, dead_or_set: 160
insn=45, live_throughout: 13, 14, 144, 152, 160, dead_or_set: 139, 140, 176
insn=20, live_throughout: 13, 14, 144, 152, 160, 176, dead_or_set: 155
insn=13, live_throughout: 13, 14, 152, 155, 160, 176, dead_or_set: 144, 148
insn=21, live_throughout: 13, 14, 148, 152, 160, 176, dead_or_set: 154, 155
insn=30, live_throughout: 13, 14, 148, 152, 154, 176, dead_or_set: 160, 164
insn=22, live_throughout: 13, 14, 152, 164, 176, dead_or_set: 136, 148, 154
insn=38, live_throughout: 13, 14, 136, 152, 164, 176, dead_or_set: 171
insn=32, live_throughout: 13, 14, 152, 171, 176, dead_or_set: 135, 136, 164
insn=48, live_throughout: 13, 14, 135, 152, 171, dead_or_set: 176, 180
insn=40, live_throughout: 13, 14, 152, 180, dead_or_set: 134, 135, 171
insn=56, live_throughout: 13, 14, 134, 152, 180, dead_or_set: 187
insn=50, live_throughout: 13, 14, 152, 187, dead_or_set: 133, 134, 180
insn=64, live_throughout: 13, 14, 133, 187, dead_or_set: 152, 195
insn=58, live_throughout: 13, 14, 195, dead_or_set: 133, 137, 187
insn=66, live_throughout: 13, 14, dead_or_set: 137, 188, 195
insn=85, live_throughout: 13, 14, 188, dead_or_set: 1
insn=84, live_throughout: 1, 13, 14, dead_or_set: 0, 188
insn=77, live_throughout: 0, 1, 13, 14, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 38 (nil))
changing reg in insn 50
changing reg in insn 58
changing reg in insn 40
changing reg in insn 50
changing reg in insn 32
changing reg in insn 40
changing reg in insn 22
changing reg in insn 32
changing reg in insn 58
changing reg in insn 66
changing reg in insn 2
changing reg in insn 45
changing reg in insn 27
changing reg in insn 18
changing reg in insn 10
changing reg in insn 6
changing reg in insn 45
changing reg in insn 27
changing reg in insn 18
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 13
changing reg in insn 22
changing reg in insn 18
changing reg in insn 56
changing reg in insn 38
changing reg in insn 64
changing reg in insn 20
changing reg in insn 38
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 20
changing reg in insn 21
changing reg in insn 27
changing reg in insn 30
changing reg in insn 30
changing reg in insn 32
changing reg in insn 38
changing reg in insn 40
changing reg in insn 45
changing reg in insn 48
changing reg in insn 48
changing reg in insn 50
changing reg in insn 56
changing reg in insn 58
changing reg in insn 66
changing reg in insn 64
changing reg in insn 66
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


smp_irq_stat_cpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 24[cc]
;;  ref usage 	r0={5d,9u} r1={6d,6u} r2={5d,7u} r3={3d,5u,2d} r4={4d,4u} r5={3d,3u} r6={2d,2u} r12={5d,4u} r13={1d,2u} r14={1d,1u} r24={6d} 
;;    total ref usage 86{41d,43u,2e} in 22{22 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 8 2 NOTE_INSN_DELETED)

(note 8 7 11 2 NOTE_INSN_DELETED)

(note 11 8 14 2 NOTE_INSN_DELETED)

(note 14 11 17 2 NOTE_INSN_DELETED)

(note 17 14 24 2 NOTE_INSN_DELETED)

(note 24 17 25 2 NOTE_INSN_DELETED)

(note 25 24 28 2 NOTE_INSN_DELETED)

(note 28 25 31 2 NOTE_INSN_DELETED)

(note 31 28 37 2 NOTE_INSN_DELETED)

(note 37 31 39 2 NOTE_INSN_DELETED)

(note 39 37 42 2 NOTE_INSN_DELETED)

(note 42 39 43 2 NOTE_INSN_DELETED)

(note 43 42 46 2 NOTE_INSN_DELETED)

(note 46 43 49 2 NOTE_INSN_DELETED)

(note 49 46 55 2 NOTE_INSN_DELETED)

(note 55 49 57 2 NOTE_INSN_DELETED)

(note 57 55 65 2 NOTE_INSN_DELETED)

(note 65 57 6 2 NOTE_INSN_DELETED)

(insn 6 65 18 2 arch/arm/kernel/smp.c:443 (set (reg/f:SI 2 r2 [140])
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)
        (nil)))

(insn 18 6 10 2 arch/arm/kernel/smp.c:443 (set (reg:SI 3 r3 [152])
        (plus:SI (mult:SI (reg/v:SI 0 r0 [orig:139 cpu ] [139])
                (const_int 32 [0x20]))
            (reg/f:SI 2 r2 [140]))) 270 {*arith_shiftsi} (nil))

(insn 10 18 27 2 arch/arm/kernel/smp.c:443 (set (reg:SI 12 ip [144])
        (plus:SI (mult:SI (reg/v:SI 0 r0 [orig:139 cpu ] [139])
                (const_int 32 [0x20]))
            (reg/f:SI 2 r2 [140]))) 270 {*arith_shiftsi} (nil))

(insn 27 10 45 2 arch/arm/kernel/smp.c:443 (set (reg:SI 1 r1 [160])
        (plus:SI (mult:SI (reg/v:SI 0 r0 [orig:139 cpu ] [139])
                (const_int 32 [0x20]))
            (reg/f:SI 2 r2 [140]))) 270 {*arith_shiftsi} (nil))

(insn 45 27 20 2 arch/arm/kernel/smp.c:443 (set (reg:SI 2 r2 [176])
        (plus:SI (mult:SI (reg/v:SI 0 r0 [orig:139 cpu ] [139])
                (const_int 32 [0x20]))
            (reg/f:SI 2 r2 [140]))) 270 {*arith_shiftsi} (nil))

(insn 20 45 13 2 arch/arm/kernel/smp.c:443 (set (reg:SI 4 r4 [orig:155 <variable>.ipi_irqs ] [155])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [152])
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [152])
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs+0 S4 A64])
        (nil)))

(insn 13 20 21 2 arch/arm/kernel/smp.c:443 (set (reg:SI 6 r6 [orig:148 <variable>.ipi_irqs+4 ] [148])
        (mem/s/j:SI (plus:SI (reg:SI 12 ip [144])
                (const_int 12 [0xc])) [0 <variable>.ipi_irqs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 13 30 2 arch/arm/kernel/smp.c:443 (set (reg:DI 4 r4 [orig:154 <variable>.ipi_irqs ] [154])
        (zero_extend:DI (reg:SI 4 r4 [orig:155 <variable>.ipi_irqs ] [155]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 30 21 22 2 arch/arm/kernel/smp.c:443 (set (reg:SI 12 ip [orig:164 <variable>.ipi_irqs+8 ] [164])
        (mem/s/j:SI (plus:SI (reg:SI 1 r1 [160])
                (const_int 16 [0x10])) [0 <variable>.ipi_irqs+8 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 22 30 38 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 0 r0 [orig:136 sum.577 ] [136])
                (plus:DI (zero_extend:DI (reg:SI 6 r6 [orig:148 <variable>.ipi_irqs+4 ] [148]))
                    (reg:DI 4 r4 [orig:154 <variable>.ipi_irqs ] [154])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (nil))

(insn 38 22 32 2 arch/arm/kernel/smp.c:443 (set (reg:SI 6 r6 [orig:171 <variable>.ipi_irqs+12 ] [171])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [152])
                (const_int 20 [0x14])) [0 <variable>.ipi_irqs+12 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [152])
                (const_int 20 [0x14])) [0 <variable>.ipi_irqs+12 S4 A32])
        (nil)))

(insn 32 38 48 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 4 r4 [orig:135 sum.580 ] [135])
                (plus:DI (zero_extend:DI (reg:SI 12 ip [orig:164 <variable>.ipi_irqs+8 ] [164]))
                    (reg/v:DI 0 r0 [orig:136 sum.577 ] [136])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (nil))

(insn 48 32 40 2 arch/arm/kernel/smp.c:443 (set (reg:SI 12 ip [orig:180 <variable>.ipi_irqs+16 ] [180])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [176])
                (const_int 24 [0x18])) [0 <variable>.ipi_irqs+16 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 40 48 56 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 0 r0 [orig:134 sum.583 ] [134])
                (plus:DI (zero_extend:DI (reg:SI 6 r6 [orig:171 <variable>.ipi_irqs+12 ] [171]))
                    (reg/v:DI 4 r4 [orig:135 sum.580 ] [135])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (nil))

(insn 56 40 50 2 arch/arm/kernel/smp.c:443 (set (reg:SI 2 r2 [orig:187 <variable>.ipi_irqs+20 ] [187])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [152])
                (const_int 28 [0x1c])) [0 <variable>.ipi_irqs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 56 64 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 4 r4 [orig:133 sum.586 ] [133])
                (plus:DI (zero_extend:DI (reg:SI 12 ip [orig:180 <variable>.ipi_irqs+16 ] [180]))
                    (reg/v:DI 0 r0 [orig:134 sum.583 ] [134])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (nil))

(insn 64 50 58 2 arch/arm/kernel/smp.c:450 (set (reg:SI 12 ip [orig:195 <variable>.local_timer_irqs ] [195])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [152])
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 64 66 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 0 r0 [orig:137 sum ] [137])
                (plus:DI (zero_extend:DI (reg:SI 2 r2 [orig:187 <variable>.ipi_irqs+20 ] [187]))
                    (reg/v:DI 4 r4 [orig:133 sum.586 ] [133])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (nil))

(insn 66 58 85 2 arch/arm/kernel/smp.c:450 (parallel [
            (set (reg:DI 2 r2 [188])
                (plus:DI (zero_extend:DI (reg:SI 12 ip [orig:195 <variable>.local_timer_irqs ] [195]))
                    (reg/v:DI 0 r0 [orig:137 sum ] [137])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (nil))

(insn 85 66 84 2 arch/arm/kernel/smp.c:450 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 3 r3 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 84 85 77 2 arch/arm/kernel/smp.c:450 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [188])) 167 {*arm_movsi_insn} (nil))

(insn 77 84 92 2 arch/arm/kernel/smp.c:450 (use (reg/i:DI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 92 77 93 NOTE_INSN_DELETED)

(note 93 92 0 NOTE_INSN_DELETED)


;; Function smp_timer_broadcast (smp_timer_broadcast)[0:1423]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 19.
verify found no changes in insn with uid = 19.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 10(l0): point = 0
   Insn 19(l0): point = 2
   Insn 9(l0): point = 4
 a0(r134): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r134): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134
    modified regnos: 134
    border:
    Pressure: GENERAL_REGS=4
    Reg 134 of GENERAL_REGS has 3 regs less
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 3
Disposition:
    0:r134 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 0, 13, dead_or_set: 1
insn=19, live_throughout: 0, 1, 13, dead_or_set: 134
insn=10, live_throughout: 13, dead_or_set: 0, 1, 14, 134
init_insns for 134: (insn_list:REG_DEP_TRUE 19 (nil))
changing reg in insn 19
changing reg in insn 10


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 10.
deleting insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


smp_timer_broadcast

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,1u} r1={3d,1u} r2={2d} r3={3d,1u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{126d,7u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 9 2 NOTE_INSN_DELETED)

(insn 9 7 19 2 arch/arm/kernel/smp.c:495 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 19 9 10 2 arch/arm/kernel/smp.c:495 (set (reg/f:SI 3 r3 [134])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 10 19 18 2 arch/arm/kernel/smp.c:495 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [134]) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 10 20 NOTE_INSN_DELETED)

(note 20 18 0 NOTE_INSN_DELETED)


;; Function broadcast_timer_set_mode (broadcast_timer_set_mode)[0:1424]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


broadcast_timer_set_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 14 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 4 15 NOTE_INSN_DELETED)

(note 15 14 0 NOTE_INSN_DELETED)


;; Function smp_send_reschedule (smp_send_reschedule)[0:1432]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 29.
verify found no changes in insn with uid = 29.
deleting insn with uid = 12.
scanning new insn with uid = 30.
verify found no changes in insn with uid = 30.
deleting insn with uid = 10.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 20(l0): point = 0
   Insn 29(l0): point = 2
   Insn 18(l0): point = 4
   Insn 11(l0): point = 6
   Insn 30(l0): point = 8
   Insn 19(l0): point = 10
   Insn 13(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r140): [1..2]
 a1(r141): [5..12]
 a2(r133): [5..6]
 a3(r139): [7..8]
 a4(r137): [7..14]
 a5(r135): [13..18]
 a6(r136): [15..16]
Compressing live ranges: from 21 to 12 - 57%
Ranges after the compression:
 a0(r140): [0..1]
 a1(r141): [2..6]
 a2(r133): [2..3]
 a3(r139): [4..5]
 a4(r137): [4..8]
 a5(r135): [7..11]
 a6(r136): [9..10]
+++Allocating 48 bytes for conflict table (uncompressed size 56)
;; a0(r140,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r141,l0) conflicts: a2(r133,l0) a3(r139,l0) a4(r137,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a2(r133,l0) conflicts: a1(r141,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a3(r139,l0) conflicts: a1(r141,l0) a4(r137,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a4(r137,l0) conflicts: a1(r141,l0) a3(r139,l0) a5(r135,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a5(r135,l0) conflicts: a4(r137,l0) a6(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r136,l0) conflicts: a5(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a4(r137)<->a6(r136)@125:shuffle
  cp1:a1(r141)<->a5(r135)@125:shuffle
  cp2:a2(r133)<->a3(r139)@125:shuffle
  cp3:a2(r133)<->a4(r137)@125:shuffle
  regions=1, blocks=3, points=12
    allocnos=7, copies=4, conflicts=2, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r141 2r133 3r139 4r137 5r135 6r136
    modified regnos: 133 135 136 137 139 140 141
    border:
    Pressure: GENERAL_REGS=4
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a6(r136,l0)
      Pushing a5(r135,l0)
      Pushing a4(r137,l0)
      Pushing a3(r139,l0)
      Pushing a2(r133,l0)
      Pushing a1(r141,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a1(r141,l0)  -- assign reg 0
      Popping a2(r133,l0)  -- assign reg 3
      Popping a3(r139,l0)  -- assign reg 2
      Popping a4(r137,l0)  -- assign reg 3
      Popping a5(r135,l0)  -- assign reg 0
      Popping a6(r136,l0)  -- assign reg 3
Disposition:
    2:r133 l0     3    5:r135 l0     0    6:r136 l0     3    4:r137 l0     3
    3:r139 l0     2    0:r140 l0     3    1:r141 l0     0
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 135
insn=7, live_throughout: 13, 135, dead_or_set: 136
insn=8, live_throughout: 13, 135, dead_or_set: 136, 137
insn=13, live_throughout: 13, 137, dead_or_set: 135, 141
insn=19, live_throughout: 13, 137, 141, dead_or_set: 1
insn=30, live_throughout: 1, 13, 137, 141, dead_or_set: 139
insn=11, live_throughout: 1, 13, 141, dead_or_set: 133, 137, 139
insn=18, live_throughout: 1, 13, dead_or_set: 0, 133, 141
insn=29, live_throughout: 0, 1, 13, dead_or_set: 140
insn=20, live_throughout: 13, dead_or_set: 0, 1, 14, 140
init_insns for 139: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 29 (nil))
changing reg in insn 11
changing reg in insn 18
changing reg in insn 2
changing reg in insn 13
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 11
changing reg in insn 30
changing reg in insn 11
changing reg in insn 29
changing reg in insn 20
changing reg in insn 13
changing reg in insn 18
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 20.
deleting insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


smp_send_reschedule

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={3d,1u} r3={6d,4u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 146{132d,14u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 14 2 NOTE_INSN_DELETED)

(note 14 9 15 2 NOTE_INSN_DELETED)

(note 15 14 16 2 NOTE_INSN_DELETED)

(note 16 15 17 2 NOTE_INSN_DELETED)

(note 17 16 7 2 NOTE_INSN_DELETED)

(insn 7 17 8 2 include/linux/cpumask.h:738 (set (reg:SI 3 r3 [136])
        (and:SI (reg/v:SI 0 r0 [orig:135 cpu ] [135])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 13 2 include/linux/cpumask.h:738 (set (reg:SI 3 r3 [137])
        (plus:SI (reg:SI 3 r3 [136])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 13 8 19 2 arch/arm/kernel/smp.c:674 (set (reg:SI 0 r0 [141])
        (lshiftrt:SI (reg/v:SI 0 r0 [orig:135 cpu ] [135])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 19 13 30 2 arch/arm/kernel/smp.c:674 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 30 19 11 2 include/linux/cpumask.h:738 (set (reg/f:SI 2 r2 [139])
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)
        (nil)))

(insn 11 30 18 2 include/linux/cpumask.h:738 (set (reg/v/f:SI 3 r3 [orig:133 p ] [133])
        (plus:SI (mult:SI (reg:SI 3 r3 [137])
                (const_int 4 [0x4]))
            (reg/f:SI 2 r2 [139]))) 270 {*arith_shiftsi} (nil))

(insn 18 11 29 2 arch/arm/kernel/smp.c:674 (set (reg:SI 0 r0)
        (minus:SI (reg/v/f:SI 3 r3 [orig:133 p ] [133])
            (mult:SI (reg:SI 0 r0 [141])
                (const_int 4 [0x4])))) 273 {*sub_shiftsi} (nil))

(insn 29 18 20 2 arch/arm/kernel/smp.c:674 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 20 29 28 2 arch/arm/kernel/smp.c:674 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [140]) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 28 20 31 NOTE_INSN_DELETED)

(note 31 28 0 NOTE_INSN_DELETED)


;; Function setup_profiling_timer (setup_profiling_timer)[0:1434]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 16(l0): point = 0
   Insn 10(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=2
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=10, live_throughout: 13, 14, dead_or_set: 0
insn=16, live_throughout: 0, 13, 14, dead_or_set: 


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


setup_profiling_timer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 13{8d,5u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 10 2 NOTE_INSN_DELETED)

(insn 10 6 16 2 arch/arm/kernel/smp.c:703 (set (reg/i:SI 0 r0)
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(insn 16 10 20 2 arch/arm/kernel/smp.c:703 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 16 21 NOTE_INSN_DELETED)

(note 21 20 0 NOTE_INSN_DELETED)


;; Function smp_send_stop (smp_send_stop)[0:1433]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 23 (  2.1)
scanning new insn with uid = 103.
verify found no changes in insn with uid = 103.
deleting insn with uid = 26.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 23 (  2.1)

Pass 0 for finding allocno costs

    a0 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r152,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a5(r146,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a6(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r154: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS

  a0(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a5(r146,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a6(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 66(l0): point = 1
   Insn 65(l0): point = 3
   Insn 62(l0): point = 6
   Insn 61(l0): point = 8
   Insn 59(l0): point = 10
   Insn 58(l0): point = 12
   Insn 56(l0): point = 14
   Insn 97(l0): point = 17
   Insn 34(l0): point = 19
   Insn 31(l0): point = 22
   Insn 103(l0): point = 24
   Insn 30(l0): point = 26
   Insn 29(l0): point = 28
   Insn 25(l0): point = 30
   Insn 23(l0): point = 32
   Insn 24(l0): point = 34
   Insn 17(l0): point = 36
   Insn 96(l0): point = 38
   Insn 101(l0): point = 40
   Insn 100(l0): point = 42
   Insn 16(l0): point = 44
   Insn 14(l0): point = 47
   Insn 13(l0): point = 49
   Insn 11(l0): point = 51
   Insn 10(l0): point = 53
   Insn 8(l0): point = 55
   Insn 7(l0): point = 57
   Insn 6(l0): point = 59
   Insn 53(l1): point = 62
   Insn 38(l1): point = 64
   Insn 52(l1): point = 66
   Insn 49(l1): point = 69
   Insn 95(l1): point = 71
   Insn 48(l1): point = 73
   Insn 46(l1): point = 75
   Insn 45(l1): point = 77
   Insn 43(l1): point = 79
   Insn 40(l1): point = 82
 a0(r154): [13..14]
 a1(r141): [15..57]
 a2(r139): [17..19]
 a3(r148): [23..24]
 a4(r140): [29..38]
 a5(r146): [33..42]
 a6(r145): [37..44]
 a7(r144): [54..55]
 a8(r142): [58..59]
 a9(r139): [62..84]
 a10(r141): [62..84]
 a11(r152): [78..79]
 Rebuilding regno allocno list for 152
Compressing live ranges: from 85 to 22 - 25%
Ranges after the compression:
 a0(r154): [0..1]
 a1(r141): [18..21] [2..15]
 a2(r139): [18..21] [3..4]
 a3(r148): [5..6]
 a4(r140): [7..10]
 a5(r146): [8..11]
 a6(r145): [9..12]
 a7(r144): [13..14]
 a8(r142): [16..17]
 a11(r152): [19..20]
+++Allocating 72 bytes for conflict table (uncompressed size 96)
;; a0(r154,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r141,l0) conflicts: a2(r139,l0) a3(r148,l0) a4(r140,l0) a5(r146,l0) a6(r145,l0) a7(r144,l0) a11(r152,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r139,l0) conflicts: a1(r141,l0) a11(r152,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r148,l0) conflicts: a1(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r140,l0) conflicts: a1(r141,l0) a5(r146,l0) a6(r145,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r146,l0) conflicts: a1(r141,l0) a4(r140,l0) a6(r145,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a6(r145,l0) conflicts: a1(r141,l0) a4(r140,l0) a5(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r144,l0) conflicts: a1(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r142,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r152,l0) conflicts: a1(r141,l0) a2(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=2, blocks=11, points=22
    allocnos=12, copies=0, conflicts=2, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r154 1r141 2r139 3r148 4r140 5r146 6r145 7r144 8r142 11r152
    modified regnos: 139 140 141 142 144 145 146 148 152 154
    border:
    Pressure: GENERAL_REGS=5
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 148 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
      Pushing a11(r152,l0)
      Pushing a8(r142,l0)
      Pushing a7(r144,l0)
      Pushing a6(r145,l0)
      Pushing a0(r154,l0)
      Pushing a5(r146,l0)
      Pushing a2(r139,l0)
      Pushing a3(r148,l0)
      Pushing a4(r140,l0)
      Pushing a1(r141,l0)
      Popping a1(r141,l0)  -- assign reg 4
      Popping a4(r140,l0)  -- assign reg 5
      Popping a3(r148,l0)  -- assign reg 3
      Popping a2(r139,l0)  -- assign reg 5
      Popping a5(r146,l0)  -- assign reg 3
      Popping a0(r154,l0)  -- assign reg 0
      Popping a6(r145,l0)  -- assign reg 2
      Popping a7(r144,l0)  -- assign reg 0
      Popping a8(r142,l0)  -- assign reg 3
      Popping a11(r152,l0)  -- assign reg 0
Disposition:
    2:r139 l0     5    4:r140 l0     5    1:r141 l0     4    8:r142 l0     3
    7:r144 l0     0    6:r145 l0     2    5:r146 l0     3    3:r148 l0     3
   11:r152 l0     0    0:r154 l0     0
New iteration of spill/restore move
+++Costs: overall 1250, reg 1250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, dead_or_set: 142
insn=7, live_throughout: 13, dead_or_set: 141, 142
insn=8, live_throughout: 13, 141, dead_or_set: 144
insn=10, live_throughout: 13, 141, dead_or_set: 0, 144
insn=11, live_throughout: 13, 141, dead_or_set: 0, 14
insn=13, live_throughout: 13, 141, dead_or_set: 0
insn=14, live_throughout: 13, 141, dead_or_set: 
insn=16, live_throughout: 13, 141, dead_or_set: 145
insn=100, live_throughout: 13, 141, 145, dead_or_set: 146
insn=101, live_throughout: 13, 141, 145, dead_or_set: 146
insn=96, live_throughout: 13, 141, 145, 146, dead_or_set: 140
insn=17, live_throughout: 13, 141, 146, dead_or_set: 140, 145
insn=24, live_throughout: 13, 140, 141, 146, dead_or_set: 1
insn=23, live_throughout: 1, 13, 140, 141, dead_or_set: 0, 146
insn=25, live_throughout: 13, 140, 141, dead_or_set: 0, 1, 14
insn=29, live_throughout: 13, 141, dead_or_set: 0, 140
insn=30, live_throughout: 0, 13, 141, dead_or_set: 1
insn=103, live_throughout: 0, 1, 13, 141, dead_or_set: 148
insn=31, live_throughout: 13, 141, dead_or_set: 0, 1, 14, 148
insn=32, live_throughout: 13, 141, dead_or_set: 
insn=34, live_throughout: 13, 141, dead_or_set: 139
insn=97, live_throughout: 13, 139, 141, dead_or_set: 
insn=51, live_throughout: 0, 13, 139, 141, dead_or_set: 
insn=40, live_throughout: 13, 139, 141, dead_or_set: 0, 14
insn=41, live_throughout: 13, 139, 141, dead_or_set: 
insn=43, live_throughout: 13, 139, 141, dead_or_set: 152
insn=45, live_throughout: 13, 139, 141, dead_or_set: 0, 152
insn=46, live_throughout: 13, 139, 141, dead_or_set: 0, 14
insn=48, live_throughout: 13, 139, 141, dead_or_set: 0
insn=95, live_throughout: 13, 24, 139, 141, dead_or_set: 0
insn=49, live_throughout: 0, 13, 139, 141, dead_or_set: 
insn=52, live_throughout: 0, 13, 139, 141, dead_or_set: 
insn=38, live_throughout: 0, 13, 24, 141, dead_or_set: 139
insn=53, live_throughout: 0, 13, 139, 141, dead_or_set: 
insn=54, live_throughout: 13, 141, dead_or_set: 
insn=56, live_throughout: 13, dead_or_set: 141, 154
insn=58, live_throughout: 13, dead_or_set: 0, 154
insn=59, live_throughout: 13, dead_or_set: 0, 14
insn=61, live_throughout: 13, 14, dead_or_set: 0
insn=62, live_throughout: 13, 14, dead_or_set: 
insn=65, live_throughout: 13, dead_or_set: 0
insn=66, live_throughout: 13, dead_or_set: 0, 14
insn=72, live_throughout: 13, 14, dead_or_set: 
init_insns for 142: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 103 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 43 (nil))
changing reg in insn 38
changing reg in insn 34
changing reg in insn 52
changing reg in insn 38
changing reg in insn 96
changing reg in insn 17
changing reg in insn 17
changing reg in insn 29
changing reg in insn 24
changing reg in insn 7
changing reg in insn 56
changing reg in insn 43
changing reg in insn 16
changing reg in insn 8
changing reg in insn 43
changing reg in insn 16
changing reg in insn 8
changing reg in insn 6
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 16
changing reg in insn 17
changing reg in insn 101
changing reg in insn 100
changing reg in insn 101
changing reg in insn 23
changing reg in insn 103
changing reg in insn 31
changing reg in insn 43
changing reg in insn 45
changing reg in insn 56
changing reg in insn 58
Spilling for insn 100.
Using reg 1 for reload 0
Spilling for insn 17.

Reloads for insn # 100
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem/s/c:SI (pre_dec:SI (reg/f:SI 5 r5 [orig:140 mask.450 ] [140])) [0 mask+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/c:SI (pre_dec:SI (reg/f:SI 5 r5 [orig:140 mask.450 ] [140])) [0 mask+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 25.
rescanning insn with uid = 31.
deleting insn with uid = 31.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 66.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 23 (  2.1)


smp_send_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={18d,13u} r1={11d,3u} r2={9d,1u} r3={12d,4u} r4={1d,4u,3d} r5={4d,5u} r12={8d} r13={1d,19u,1d} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={11d,4u} r25={2d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 913{853d,54u,6e} in 39{32 regular + 7 call} insns.
(note 2 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 12 2 NOTE_INSN_DELETED)

(note 12 9 6 2 NOTE_INSN_DELETED)

(insn 6 12 7 2 arch/arm/kernel/smp.c:681 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/smp.c:681 (set (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [142]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn 8 7 10 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0 [orig:144 <variable>.bits ] [144])
        (mem/s/j:SI (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141]) [0 <variable>.bits+0 S4 A32])
        (nil)))

(insn 10 8 11 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0 [orig:144 <variable>.bits ] [144])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 11 10 13 2 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 11 14 2 arch/arm/kernel/smp.c:681 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/smp.c:681 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4752 [0x1290])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  3 [52.5%]  (fallthru)
;; Succ edge  4 [47.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  2 [52.5%]  (fallthru)
(note 15 14 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 21 15 28 3 NOTE_INSN_DELETED)

(note 28 21 16 3 NOTE_INSN_DELETED)

(insn 16 28 105 3 arch/arm/kernel/smp.c:682 (set (reg:SI 2 r2 [145])
        (mem/s:SI (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s:SI (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141]) [0 S4 A32])
        (nil)))

(insn 105 16 100 3 include/linux/cpumask.h:848 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 100 105 101 3 include/linux/cpumask.h:848 (set (reg:SI 3 r3 [146])
        (and:SI (reg:SI 1 r1)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 101 100 96 3 include/linux/cpumask.h:848 (set (reg:SI 3 r3 [146])
        (and:SI (reg:SI 3 r3 [146])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 96 101 17 3 arch/arm/kernel/smp.c:682 (set (reg/f:SI 5 r5 [orig:140 mask.450 ] [140])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))
        (nil)))

(insn 17 96 24 3 arch/arm/kernel/smp.c:682 (set (mem/s/c:SI (pre_dec:SI (reg/f:SI 5 r5 [orig:140 mask.450 ] [140])) [0 mask+0 S4 A32])
        (reg:SI 2 r2 [145])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 5 r5 [orig:140 mask.450 ] [140])
        (nil)))

(insn 24 17 23 3 include/linux/cpumask.h:848 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [orig:140 mask.450 ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 23 24 25 3 include/linux/cpumask.h:848 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [146])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 23 29 3 include/linux/cpumask.h:848 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 25 30 3 arch/arm/kernel/smp.c:685 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [orig:140 mask.450 ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 30 29 103 3 arch/arm/kernel/smp.c:685 (set (reg:SI 1 r1)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 103 30 31 3 arch/arm/kernel/smp.c:685 (set (reg/f:SI 3 r3 [148])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 31 103 32 3 arch/arm/kernel/smp.c:685 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [148]) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  2 [47.5%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 32 31 33 4 34 "" [1 uses])

(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 97 4 arch/arm/kernel/smp.c:685 (set (reg/v:SI 5 r5 [orig:139 timeout ] [139])
        (const_int 1000000 [0xf4240])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1000000 [0xf4240])
        (nil)))

(jump_insn 97 34 98 4 (set (pc)
        (label_ref 41)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 98 97 51)

;; Start of basic block ( 7) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  7 [95.5%] 
(code_label 51 98 37 5 37 "" [1 uses])

(note 37 51 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 40 37 41 5 arch/arm/kernel/smp.c:691 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10e39780 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 41 40 42 6 35 "" [1 uses])

(note 42 41 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 44 42 47 6 NOTE_INSN_DELETED)

(note 47 44 43 6 NOTE_INSN_DELETED)

(insn 43 47 45 6 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0 [orig:152 <variable>.bits ] [152])
        (mem/s/j:SI (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141]) [0 <variable>.bits+0 S4 A32])
        (nil)))

(insn 45 43 46 6 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0 [orig:152 <variable>.bits ] [152])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 46 45 48 6 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 48 46 95 6 arch/arm/kernel/smp.c:690 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(insn 95 48 49 6 arch/arm/kernel/smp.c:691 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 49 95 50 6 arch/arm/kernel/smp.c:690 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [95.5%]  (fallthru)
;; Succ edge  8 [4.5%]  (loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  6 [95.5%]  (fallthru)
(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 38 7 arch/arm/kernel/smp.c:690 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:139 timeout ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 38 52 53 7 arch/arm/kernel/smp.c:690 discrim 2 (set (reg/v:SI 5 r5 [orig:139 timeout ] [139])
        (plus:SI (reg/v:SI 5 r5 [orig:139 timeout ] [139])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(jump_insn 53 38 54 7 arch/arm/kernel/smp.c:690 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 7 -> ( 5 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [95.5%] 
;; Succ edge  8 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [4.5%]  (loop_exit)
;; Pred edge  7 [4.5%]  (fallthru,loop_exit)
(code_label 54 53 55 8 36 "" [1 uses])

(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 57 55 60 8 NOTE_INSN_DELETED)

(note 60 57 56 8 NOTE_INSN_DELETED)

(insn 56 60 58 8 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0 [orig:154 <variable>.bits ] [154])
        (mem/s/j:SI (reg/f:SI 4 r4 [orig:141 cpu_online_mask.449 ] [141]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 56 59 8 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0 [orig:154 <variable>.bits ] [154])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 59 58 61 8 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 61 59 62 8 arch/arm/kernel/smp.c:693 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 62 61 63 8 arch/arm/kernel/smp.c:693 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  8 [0.0%]  (fallthru)
(note 63 62 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 65 63 66 9 arch/arm/kernel/smp.c:694 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115aa400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115aa400>)
        (nil)))

(call_insn 66 65 72 9 arch/arm/kernel/smp.c:694 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 72 66 75 10 39 "" [1 uses])

(note 75 72 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 102 75 104 NOTE_INSN_DELETED)

(note 104 102 0 NOTE_INSN_DELETED)


;; Function ipi_timer (ipi_timer)[0:1420]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 29.
verify found no changes in insn with uid = 29.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r138,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 18(l0): point = 0
   Insn 17(l0): point = 2
   Insn 16(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 29(l0): point = 12
   Insn 11(l0): point = 14
   Insn 6(l0): point = 16
   Insn 5(l0): point = 18
   Insn 28(l0): point = 20
   Insn 27(l0): point = 22
 a0(r141): [3..10]
 a1(r134): [3..18]
 a2(r135): [5..8]
 a3(r137): [11..12]
 a4(r140): [11..14]
 a5(r138): [15..22]
Compressing live ranges: from 25 to 10 - 40%
Ranges after the compression:
 a0(r141): [0..3]
 a1(r134): [0..8]
 a2(r135): [1..2]
 a3(r137): [4..5]
 a4(r140): [4..6]
 a5(r138): [7..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r141,l0) conflicts: a1(r134,l0) a2(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r134,l0) conflicts: a0(r141,l0) a2(r135,l0) a3(r137,l0) a4(r140,l0) a5(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r135,l0) conflicts: a0(r141,l0) a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r137,l0) conflicts: a1(r134,l0) a4(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r140,l0) conflicts: a1(r134,l0) a3(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r138,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=3, points=10
    allocnos=6, copies=0, conflicts=1, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r141 1r134 2r135 3r137 4r140 5r138
    modified regnos: 134 135 137 138 140 141
    border:
    Pressure: GENERAL_REGS=4
    Reg 141 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a4(r140,l0)
      Pushing a3(r137,l0)
      Pushing a5(r138,l0)
      Pushing a2(r135,l0)
      Pushing a0(r141,l0)
      Pushing a1(r134,l0)
      Popping a1(r134,l0)  -- assign reg 4
      Popping a0(r141,l0)  -- assign reg 5
      Popping a2(r135,l0)  -- assign reg 6
      Popping a5(r138,l0)  -- assign reg 3
      Popping a3(r137,l0)  -- assign reg 3
      Popping a4(r140,l0)  -- assign reg 2
Disposition:
    1:r134 l0     4    2:r135 l0     6    3:r137 l0     3    5:r138 l0     3
    4:r140 l0     2    0:r141 l0     5
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=27, live_throughout: 13, dead_or_set: 138
insn=28, live_throughout: 13, dead_or_set: 138
insn=5, live_throughout: 13, 138, dead_or_set: 134
insn=6, live_throughout: 13, 138, dead_or_set: 134
insn=11, live_throughout: 13, 134, dead_or_set: 138, 140
insn=29, live_throughout: 13, 134, 140, dead_or_set: 137
insn=12, live_throughout: 13, 134, dead_or_set: 137, 140, 141
insn=13, live_throughout: 13, 134, 141, dead_or_set: 135
insn=14, live_throughout: 13, 134, 135, 141, dead_or_set: 14
insn=16, live_throughout: 13, 134, 141, dead_or_set: 0, 135
insn=17, live_throughout: 13, dead_or_set: 0, 14, 134, 141
insn=18, live_throughout: 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 29 (nil))
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 17
changing reg in insn 13
changing reg in insn 13
changing reg in insn 16
changing reg in insn 29
changing reg in insn 12
changing reg in insn 28
changing reg in insn 27
changing reg in insn 28
changing reg in insn 11
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 17
changing reg in insn 13
Spilling for insn 27.
Using reg 2 for reload 0

Reloads for insn # 27
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
rescanning insn with uid = 17.
deleting insn with uid = 17.
verify found no changes in insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ipi_timer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr]
;;  ref usage 	r0={5d,1u} r1={4d} r2={6d,2u} r3={7d,3u} r4={2d,3u} r5={1d,2u} r6={1d,1u} r12={4d} r13={1d,6u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 386{367d,19u,0e} in 13{10 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 2 15 2 NOTE_INSN_DELETED)

(note 15 9 31 2 NOTE_INSN_DELETED)

(insn 31 15 27 2 arch/arm/kernel/smp.c:459 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 27 31 28 2 arch/arm/kernel/smp.c:459 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 27 5 2 arch/arm/kernel/smp.c:459 (set (reg:SI 3 r3 [138])
        (and:SI (reg:SI 3 r3 [138])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 5 28 6 2 arch/arm/kernel/smp.c:459 (set (reg/v:SI 4 r4 [orig:134 __ptr ] [134])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 6 5 11 2 arch/arm/kernel/smp.c:459 (set (reg/v:SI 4 r4 [orig:134 __ptr ] [134])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 4 r4 [orig:134 __ptr ] [134])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8548355)) -1 (nil))

(insn 11 6 29 2 arch/arm/kernel/smp.c:459 (set (reg:SI 2 r2 [orig:140 <variable>.cpu ] [140])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [138])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 11 12 2 arch/arm/kernel/smp.c:459 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 12 29 13 2 arch/arm/kernel/smp.c:459 (set (reg:SI 5 r5 [141])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:140 <variable>.cpu ] [140])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [137])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/smp.c:459 (set (reg/v/f:SI 6 r6 [orig:135 evt ] [135])
        (plus:SI (reg/v:SI 4 r4 [orig:134 __ptr ] [134])
            (reg:SI 5 r5 [141]))) 4 {*arm_addsi3} (nil))

(call_insn 14 13 16 2 arch/arm/kernel/smp.c:460 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 16 14 17 2 arch/arm/kernel/smp.c:461 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:135 evt ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 17 16 18 2 arch/arm/kernel/smp.c:461 (parallel [
            (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v:SI 4 r4 [orig:134 __ptr ] [134])
                            (reg:SI 5 r5 [141])) [0 <variable>.event_handler+0 S4 A256]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn/j 18 17 19 2 arch/arm/kernel/smp.c:462 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_exit") [flags 0x41] <function_decl 0x11017000 irq_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 19 18 30)

(note 30 19 0 NOTE_INSN_DELETED)


;; Function do_IPI (do_IPI)[0:1431]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 201.
verify found no changes in insn with uid = 201.
deleting insn with uid = 170.
scanning new insn with uid = 202.
verify found no changes in insn with uid = 202.
deleting insn with uid = 14.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 25 count 28 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 25 count 32 (  1.9)

Pass 0 for finding allocno costs

    a0 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r212,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r209,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r212,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r210,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a6(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a8(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a26(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a27(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r151,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r213: preferred GENERAL_REGS, alternative NO_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r209,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r212,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r210,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a6(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a8(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a9(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a26(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a27(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r151,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 175(l0): point = 0
   Insn 174(l0): point = 2
   Insn 201(l0): point = 4
   Insn 173(l0): point = 6
   Insn 168(l0): point = 8
   Insn 167(l0): point = 10
   Insn 197(l0): point = 12
   Insn 196(l0): point = 14
   Insn 162(l0): point = 17
   Insn 159(l0): point = 19
   Insn 161(l0): point = 21
   Insn 160(l0): point = 23
   Insn 194(l0): point = 26
   Insn 153(l0): point = 28
   Insn 152(l0): point = 30
   Insn 151(l0): point = 32
   Insn 147(l0): point = 34
   Insn 146(l0): point = 36
   Insn 143(l0): point = 38
   Insn 142(l0): point = 40
   Insn 141(l0): point = 42
   Insn 139(l0): point = 44
   Insn 140(l0): point = 46
   Insn 137(l0): point = 48
   Insn 136(l0): point = 50
   Insn 132(l0): point = 53
   Insn 131(l0): point = 55
   Insn 129(l0): point = 57
   Insn 127(l0): point = 59
   Insn 124(l0): point = 61
   Insn 128(l0): point = 63
   Insn 123(l0): point = 65
   Insn 119(l0): point = 67
   Insn 121(l0): point = 69
   Insn 109(l0): point = 72
   Insn 108(l0): point = 74
   Insn 107(l0): point = 76
   Insn 106(l0): point = 78
   Insn 105(l0): point = 80
   Insn 102(l0): point = 83
   Insn 101(l0): point = 85
   Insn 98(l0): point = 87
   Insn 97(l0): point = 89
   Insn 95(l0): point = 91
   Insn 96(l0): point = 93
   Insn 93(l0): point = 95
   Insn 92(l0): point = 97
   Insn 88(l0): point = 100
   Insn 87(l0): point = 102
   Insn 86(l0): point = 104
   Insn 85(l0): point = 106
   Insn 84(l0): point = 108
   Insn 190(l0): point = 111
   Insn 79(l0): point = 113
   Insn 78(l0): point = 115
   Insn 77(l0): point = 117
   Insn 188(l0): point = 120
   Insn 72(l0): point = 122
   Insn 71(l0): point = 124
   Insn 70(l0): point = 126
   Insn 186(l0): point = 129
   Insn 65(l0): point = 131
   Insn 184(l0): point = 134
   Insn 60(l0): point = 136
   Insn 54(l0): point = 139
   Insn 53(l0): point = 141
   Insn 50(l0): point = 144
   Insn 49(l0): point = 146
   Insn 48(l0): point = 148
   Insn 39(l0): point = 150
   Insn 34(l0): point = 152
   Insn 36(l0): point = 154
   Insn 31(l0): point = 157
   Insn 28(l0): point = 159
   Insn 19(l0): point = 161
   Insn 18(l0): point = 163
   Insn 202(l0): point = 165
   Insn 12(l0): point = 167
   Insn 11(l0): point = 169
   Insn 30(l0): point = 171
   Insn 10(l0): point = 173
   Insn 3(l0): point = 175
   Insn 29(l0): point = 177
   Insn 2(l0): point = 179
   Insn 199(l0): point = 181
   Insn 198(l0): point = 183
   Insn 192(l1): point = 186
   Insn 111(l1): point = 188
 a0(r213): [1..2]
 a1(r134): [1..10]
 a2(r146): [111..161] [1..71]
 a3(r209): [3..4]
 a4(r212): [3..6]
 a5(r210): [7..14]
 a6(r149): [139..179] [22..25]
 a7(r147): [139..173] [81..110] [33..71] [24..25]
 a8(r191): [31..67]
 a9(r150): [139..175] [41..71]
 a10(r198): [56..57]
 a11(r197): [58..63]
 a12(r138): [58..59]
 a13(r195): [60..61]
 a14(r193): [62..65]
 a15(r194): [66..69]
 a16(r184): [103..104]
 a17(r183): [105..106]
 a18(r182): [140..141]
 a19(r171): [145..150]
 a20(r181): [145..146]
 a21(r180): [147..148]
 a22(r166): [151..152]
 a23(r168): [151..154]
 a24(r165): [155..177]
 a25(r158): [160..163]
 a26(r141): [160..169]
 a27(r154): [164..165]
 a28(r151): [174..183]
Compressing live ranges: from 191 to 58 - 30%
Ranges after the compression:
 a0(r213): [0..1]
 a1(r134): [0..6]
 a2(r146): [33..47] [0..26]
 a3(r209): [2..3]
 a4(r212): [2..4]
 a5(r210): [5..7]
 a6(r149): [34..56] [8..10]
 a7(r147): [34..52] [27..32] [12..26] [9..10]
 a8(r191): [11..24]
 a9(r150): [34..54] [13..26]
 a10(r198): [14..15]
 a11(r197): [16..21]
 a12(r138): [16..17]
 a13(r195): [18..19]
 a14(r193): [20..22]
 a15(r194): [23..25]
 a16(r184): [28..29]
 a17(r183): [30..31]
 a18(r182): [35..36]
 a19(r171): [37..41]
 a20(r181): [37..38]
 a21(r180): [39..40]
 a22(r166): [42..43]
 a23(r168): [42..44]
 a24(r165): [45..55]
 a25(r158): [46..48]
 a26(r141): [46..51]
 a27(r154): [49..50]
 a28(r151): [53..57]
+++Allocating 232 bytes for conflict table (uncompressed size 232)
;; a0(r213,l0) conflicts: a1(r134,l0) a2(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts: a0(r213,l0) a2(r146,l0) a3(r209,l0) a4(r212,l0) a5(r210,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r146,l0) conflicts: a0(r213,l0) a1(r134,l0) a3(r209,l0) a4(r212,l0) a5(r210,l0) a6(r149,l0) a7(r147,l0) a8(r191,l0) a9(r150,l0) a10(r198,l0) a12(r138,l0) a11(r197,l0) a13(r195,l0) a14(r193,l0) a15(r194,l0) a18(r182,l0) a20(r181,l0) a19(r171,l0) a21(r180,l0) a22(r166,l0) a23(r168,l0) a24(r165,l0) a25(r158,l0) a26(r141,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r209,l0) conflicts: a1(r134,l0) a2(r146,l0) a4(r212,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r212,l0) conflicts: a1(r134,l0) a2(r146,l0) a3(r209,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r210,l0) conflicts: a1(r134,l0) a2(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r149,l0) conflicts: a2(r146,l0) a7(r147,l0) a9(r150,l0) a18(r182,l0) a20(r181,l0) a19(r171,l0) a21(r180,l0) a22(r166,l0) a23(r168,l0) a24(r165,l0) a25(r158,l0) a26(r141,l0) a27(r154,l0) a28(r151,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a7(r147,l0) conflicts: a2(r146,l0) a6(r149,l0) a8(r191,l0) a9(r150,l0) a10(r198,l0) a12(r138,l0) a11(r197,l0) a13(r195,l0) a14(r193,l0) a15(r194,l0) a16(r184,l0) a17(r183,l0) a18(r182,l0) a20(r181,l0) a19(r171,l0) a21(r180,l0) a22(r166,l0) a23(r168,l0) a24(r165,l0) a25(r158,l0) a26(r141,l0) a27(r154,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r191,l0) conflicts: a2(r146,l0) a7(r147,l0) a9(r150,l0) a10(r198,l0) a12(r138,l0) a11(r197,l0) a13(r195,l0) a14(r193,l0) a15(r194,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a9(r150,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a8(r191,l0) a10(r198,l0) a12(r138,l0) a11(r197,l0) a13(r195,l0) a14(r193,l0) a15(r194,l0) a18(r182,l0) a20(r181,l0) a19(r171,l0) a21(r180,l0) a22(r166,l0) a23(r168,l0) a24(r165,l0) a25(r158,l0) a26(r141,l0) a27(r154,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a10(r198,l0) conflicts: a2(r146,l0) a7(r147,l0) a8(r191,l0) a9(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r197,l0) conflicts: a2(r146,l0) a7(r147,l0) a8(r191,l0) a9(r150,l0) a12(r138,l0) a13(r195,l0) a14(r193,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r138,l0) conflicts: a2(r146,l0) a7(r147,l0) a8(r191,l0) a9(r150,l0) a11(r197,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r195,l0) conflicts: a2(r146,l0) a7(r147,l0) a8(r191,l0) a9(r150,l0) a11(r197,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r193,l0) conflicts: a2(r146,l0) a7(r147,l0) a8(r191,l0) a9(r150,l0) a11(r197,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r194,l0) conflicts: a2(r146,l0) a7(r147,l0) a8(r191,l0) a9(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r184,l0) conflicts: a7(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r183,l0) conflicts: a7(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r182,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r171,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a20(r181,l0) a21(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r181,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a19(r171,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r180,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a19(r171,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r166,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a23(r168,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r168,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a22(r166,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r165,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a25(r158,l0) a26(r141,l0) a27(r154,l0) a28(r151,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a25(r158,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a24(r165,l0) a26(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a26(r141,l0) conflicts: a2(r146,l0) a6(r149,l0) a7(r147,l0) a9(r150,l0) a24(r165,l0) a25(r158,l0) a27(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a27(r154,l0) conflicts: a6(r149,l0) a7(r147,l0) a9(r150,l0) a24(r165,l0) a26(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r151,l0) conflicts: a6(r149,l0) a9(r150,l0) a24(r165,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a14(r193)<->a15(r194)@125:shuffle
  cp1:a13(r195)<->a14(r193)@125:shuffle
  cp2:a10(r198)<->a12(r138)@125:shuffle
  cp3:a10(r198)<->a11(r197)@125:shuffle
  cp4:a23(r168)<->a24(r165)@125:shuffle
  cp5:a19(r171)<->a22(r166)@125:shuffle
  cp6:a19(r171)<->a23(r168)@125:shuffle
  cp7:a20(r181)<->a21(r180)@125:shuffle
  regions=2, blocks=17, points=58
    allocnos=29, copies=8, conflicts=2, ranges=35

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r213 1r134 2r146 3r209 4r212 5r210 6r149 7r147 8r191 9r150 10r198 11r197 12r138 13r195 14r193 15r194 16r184 17r183 18r182 19r171 20r181 21r180 22r166 23r168 24r165 25r158 26r141 27r154 28r151
    modified regnos: 134 138 141 146 147 149 150 151 154 158 165 166 168 171 180 181 182 183 184 191 193 194 195 197 198 209 210 212 213
    border:
    Pressure: GENERAL_REGS=8
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 4 regs less
    Reg 209 of GENERAL_REGS has 1 regs less
    Reg 212 of GENERAL_REGS has 1 regs less
    Reg 210 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 2 regs less
    Reg 147 of GENERAL_REGS has 3 regs less
    Reg 191 of GENERAL_REGS has 3 regs less
    Reg 150 of GENERAL_REGS has 3 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 197 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 194 of GENERAL_REGS has 1 regs less
    Reg 182 of GENERAL_REGS has 1 regs less
    Reg 171 of GENERAL_REGS has 1 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 2 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 3 regs less
      Pushing a17(r183,l0)
      Pushing a16(r184,l0)
      Pushing a27(r154,l0)
      Pushing a23(r168,l0)
      Pushing a22(r166,l0)
      Pushing a21(r180,l0)
      Pushing a20(r181,l0)
      Pushing a15(r194,l0)
      Pushing a14(r193,l0)
      Pushing a13(r195,l0)
      Pushing a12(r138,l0)
      Pushing a11(r197,l0)
      Pushing a10(r198,l0)
      Pushing a4(r212,l0)
      Pushing a3(r209,l0)
      Pushing a0(r213,l0)
      Pushing a25(r158,l0)
      Pushing a19(r171,l0)
      Pushing a18(r182,l0)
      Pushing a5(r210,l0)
      Pushing a1(r134,l0)
      Pushing a26(r141,l0)
      Pushing a24(r165,l0)
      Pushing a6(r149,l0)
      Pushing a9(r150,l0)
      Pushing a28(r151,l0)
      Pushing a8(r191,l0)
      Pushing a7(r147,l0)
      Pushing a2(r146,l0)
      Popping a2(r146,l0)  -- assign reg 4
      Popping a7(r147,l0)  -- assign reg 5
      Popping a8(r191,l0)  -- assign reg 6
      Popping a28(r151,l0)  -- assign reg 3
      Popping a9(r150,l0)  -- assign reg 7
      Popping a6(r149,l0)  -- assign reg 2
      Popping a24(r165,l0)  -- assign reg 0
      Popping a26(r141,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 3
      Popping a5(r210,l0)  -- assign reg 2
      Popping a18(r182,l0)  -- assign reg 3
      Popping a19(r171,l0)  -- assign reg 0
      Popping a25(r158,l0)  -- assign reg 1
      Popping a0(r213,l0)  -- assign reg 2
      Popping a3(r209,l0)  -- assign reg 2
      Popping a4(r212,l0)  -- assign reg 1
      Popping a10(r198,l0)  -- assign reg 3
      Popping a11(r197,l0)  -- assign reg 3
      Popping a12(r138,l0)  -- assign reg 2
      Popping a13(r195,l0)  -- assign reg 2
      Popping a14(r193,l0)  -- assign reg 2
      Popping a15(r194,l0)  -- assign reg 2
      Popping a20(r181,l0)  -- assign reg 3
      Popping a21(r180,l0)  -- assign reg 3
      Popping a22(r166,l0)  -- assign reg 3
      Popping a23(r168,l0)  -- assign reg 0
      Popping a27(r154,l0)  -- assign reg 1
      Popping a16(r184,l0)  -- assign reg 3
      Popping a17(r183,l0)  -- assign reg 3
Disposition:
    1:r134 l0     3   12:r138 l0     2   26:r141 l0     3    2:r146 l0     4
    7:r147 l0     5    6:r149 l0     2    9:r150 l0     7   28:r151 l0     3
   27:r154 l0     1   25:r158 l0     1   24:r165 l0     0   22:r166 l0     3
   23:r168 l0     0   19:r171 l0     0   21:r180 l0     3   20:r181 l0     3
   18:r182 l0     3   17:r183 l0     3   16:r184 l0     3    8:r191 l0     6
   14:r193 l0     2   15:r194 l0     2   13:r195 l0     2   11:r197 l0     3
   10:r198 l0     3    3:r209 l0     2    5:r210 l0     2    4:r212 l0     1
    0:r213 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=198, live_throughout: 0, 1, 13, 14, dead_or_set: 151
insn=199, live_throughout: 0, 1, 13, 14, dead_or_set: 151
insn=2, live_throughout: 1, 13, 14, 151, dead_or_set: 0, 149
insn=29, live_throughout: 1, 13, 14, 149, 151, dead_or_set: 165
insn=3, live_throughout: 13, 14, 149, 151, 165, dead_or_set: 1, 150
insn=10, live_throughout: 13, 14, 149, 150, 165, dead_or_set: 147, 151
insn=30, live_throughout: 13, 14, 147, 149, 150, 165, dead_or_set: 
insn=11, live_throughout: 13, 14, 24, 147, 149, 150, 165, dead_or_set: 141
insn=12, live_throughout: 13, 14, 24, 147, 149, 150, 165, dead_or_set: 141
insn=202, live_throughout: 13, 14, 24, 141, 147, 149, 150, 165, dead_or_set: 154
insn=18, live_throughout: 13, 14, 24, 141, 147, 149, 150, 165, dead_or_set: 154, 158
insn=19, live_throughout: 13, 14, 24, 141, 147, 149, 150, 158, 165, dead_or_set: 146
insn=28, live_throughout: 13, 14, 24, 146, 147, 149, 150, 165, dead_or_set: 141, 158
insn=31, live_throughout: 13, 14, 146, 147, 149, 150, 165, dead_or_set: 
insn=36, live_throughout: 13, 14, 146, 147, 149, 150, dead_or_set: 165, 168
insn=34, live_throughout: 13, 14, 146, 147, 149, 150, 168, dead_or_set: 166
insn=39, live_throughout: 13, 14, 146, 147, 149, 150, dead_or_set: 166, 168, 171
insn=48, live_throughout: 13, 14, 146, 147, 149, 150, 171, dead_or_set: 180
insn=49, live_throughout: 13, 14, 146, 147, 149, 150, 171, dead_or_set: 180, 181
insn=50, live_throughout: 13, 14, 146, 147, 149, 150, dead_or_set: 171, 181
insn=51, live_throughout: 13, 14, 146, 147, 149, 150, dead_or_set: 
insn=53, live_throughout: 13, 14, 146, 147, 149, 150, dead_or_set: 182
insn=54, live_throughout: 13, 14, 146, 147, 149, 150, dead_or_set: 182
insn=55, live_throughout: 13, 146, dead_or_set: 
insn=56, live_throughout: 13, 146, dead_or_set: 
insn=58, live_throughout: 13, 146, dead_or_set: 
insn=60, live_throughout: 13, 146, dead_or_set: 14
insn=184, live_throughout: 13, 14, 146, dead_or_set: 
insn=63, live_throughout: 13, 146, dead_or_set: 
insn=65, live_throughout: 13, 146, dead_or_set: 14
insn=186, live_throughout: 13, 14, 146, dead_or_set: 
insn=68, live_throughout: 13, 146, dead_or_set: 
insn=70, live_throughout: 13, 146, dead_or_set: 14
insn=71, live_throughout: 13, 146, dead_or_set: 14
insn=72, live_throughout: 13, 146, dead_or_set: 14
insn=188, live_throughout: 13, 14, 146, dead_or_set: 
insn=75, live_throughout: 13, 146, dead_or_set: 
insn=77, live_throughout: 13, 146, dead_or_set: 14
insn=78, live_throughout: 13, 146, dead_or_set: 14
insn=79, live_throughout: 13, 146, dead_or_set: 14
insn=190, live_throughout: 13, 14, 146, dead_or_set: 
insn=82, live_throughout: 13, 147, dead_or_set: 
insn=84, live_throughout: 13, 147, dead_or_set: 14
insn=85, live_throughout: 13, 147, dead_or_set: 183
insn=86, live_throughout: 13, 147, dead_or_set: 183, 184
insn=87, live_throughout: 13, 147, dead_or_set: 184
insn=88, live_throughout: 13, 147, dead_or_set: 
insn=92, live_throughout: 13, 147, dead_or_set: 0
insn=93, live_throughout: 13, 147, dead_or_set: 0, 14
insn=96, live_throughout: 13, 147, dead_or_set: 1
insn=95, live_throughout: 1, 13, 147, dead_or_set: 0
insn=97, live_throughout: 13, 147, dead_or_set: 0, 1, 14
insn=98, live_throughout: 13, 147, dead_or_set: 14
insn=101, live_throughout: 13, 147, dead_or_set: 0
insn=102, live_throughout: 13, 147, dead_or_set: 0, 14
insn=103, live_throughout: 13, 147, dead_or_set: 
insn=105, live_throughout: 13, dead_or_set: 0, 147
insn=106, live_throughout: 0, 13, dead_or_set: 1
insn=107, live_throughout: 13, dead_or_set: 0, 1, 14
insn=108, live_throughout: 13, dead_or_set: 
insn=109, live_throughout: 13, dead_or_set: 
insn=112, live_throughout: 13, dead_or_set: 
insn=111, live_throughout: 13, dead_or_set: 
insn=192, live_throughout: 13, dead_or_set: 
insn=115, live_throughout: 13, 14, 146, 147, 150, dead_or_set: 
insn=121, live_throughout: 13, 14, 146, 147, 150, dead_or_set: 194
insn=119, live_throughout: 13, 14, 146, 147, 150, 194, dead_or_set: 191
insn=123, live_throughout: 13, 14, 146, 147, 150, 191, dead_or_set: 193, 194
insn=128, live_throughout: 13, 14, 146, 147, 150, 191, 193, dead_or_set: 197
insn=124, live_throughout: 13, 14, 146, 147, 150, 191, 197, dead_or_set: 193, 195
insn=127, live_throughout: 13, 14, 146, 147, 150, 191, 197, dead_or_set: 138, 195
insn=129, live_throughout: 13, 14, 146, 147, 150, 191, dead_or_set: 138, 197, 198
insn=131, live_throughout: 13, 14, 146, 147, 150, 191, dead_or_set: 198
insn=132, live_throughout: 13, 14, 146, 147, 150, 191, dead_or_set: 
insn=136, live_throughout: 13, 146, 147, 150, 191, dead_or_set: 0
insn=137, live_throughout: 13, 146, 147, 150, 191, dead_or_set: 0, 14
insn=140, live_throughout: 13, 146, 147, 150, 191, dead_or_set: 1
insn=139, live_throughout: 1, 13, 146, 147, 150, 191, dead_or_set: 0
insn=141, live_throughout: 13, 146, 147, 150, 191, dead_or_set: 0, 1, 14
insn=142, live_throughout: 13, 146, 147, 191, dead_or_set: 0, 150
insn=143, live_throughout: 13, 146, 147, 191, dead_or_set: 0, 14
insn=146, live_throughout: 13, 146, 147, 191, dead_or_set: 0
insn=147, live_throughout: 13, 146, 147, 191, dead_or_set: 0, 14
insn=151, live_throughout: 13, 146, 191, dead_or_set: 0, 147
insn=152, live_throughout: 0, 13, 146, dead_or_set: 1, 191
insn=153, live_throughout: 13, 146, dead_or_set: 0, 1, 14
insn=194, live_throughout: 13, 14, 146, dead_or_set: 
insn=156, live_throughout: 13, 146, 147, 149, dead_or_set: 
insn=160, live_throughout: 13, 146, 149, dead_or_set: 1, 147
insn=161, live_throughout: 1, 13, 146, dead_or_set: 2, 149
insn=159, live_throughout: 1, 2, 13, 146, dead_or_set: 0
insn=162, live_throughout: 13, 146, dead_or_set: 0, 1, 2, 14
insn=163, live_throughout: 13, 14, 146, dead_or_set: 
insn=196, live_throughout: 13, 14, 146, dead_or_set: 210
insn=197, live_throughout: 13, 14, 146, dead_or_set: 210
insn=167, live_throughout: 13, 14, 146, 210, dead_or_set: 134
insn=168, live_throughout: 13, 14, 146, 210, dead_or_set: 134
insn=173, live_throughout: 13, 14, 134, 146, dead_or_set: 210, 212
insn=201, live_throughout: 13, 14, 134, 146, 212, dead_or_set: 209
insn=174, live_throughout: 13, 14, 134, 146, dead_or_set: 209, 212, 213
insn=175, live_throughout: 13, 14, dead_or_set: 134, 146, 213
init_insns for 154: (insn_list:REG_DEP_TRUE 202 (nil))
init_insns for 166: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 180: (insn_list:REG_DEP_TRUE 48 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 50 (nil))
init_insns for 183: (insn_list:REG_DEP_TRUE 85 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 119 (nil))
init_insns for 209: (insn_list:REG_DEP_TRUE 201 (nil))
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 175
changing reg in insn 127
changing reg in insn 129
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 28
changing reg in insn 19
changing reg in insn 19
changing reg in insn 175
changing reg in insn 10
changing reg in insn 123
changing reg in insn 123
changing reg in insn 36
changing reg in insn 151
changing reg in insn 128
changing reg in insn 121
changing reg in insn 18
changing reg in insn 160
changing reg in insn 140
changing reg in insn 105
changing reg in insn 96
changing reg in insn 124
changing reg in insn 18
changing reg in insn 2
changing reg in insn 161
changing reg in insn 53
changing reg in insn 29
changing reg in insn 3
changing reg in insn 28
changing reg in insn 142
changing reg in insn 199
changing reg in insn 198
changing reg in insn 199
changing reg in insn 10
changing reg in insn 202
changing reg in insn 18
changing reg in insn 18
changing reg in insn 28
changing reg in insn 19
changing reg in insn 29
changing reg in insn 36
changing reg in insn 30
changing reg in insn 34
changing reg in insn 39
changing reg in insn 36
changing reg in insn 39
changing reg in insn 39
changing reg in insn 50
changing reg in insn 48
changing reg in insn 49
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 54
changing reg in insn 54
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 87
changing reg in insn 119
changing reg in insn 152
changing reg in insn 146
changing reg in insn 136
changing reg in insn 127
changing reg in insn 123
changing reg in insn 124
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 127
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 129
changing reg in insn 131
changing reg in insn 201
changing reg in insn 174
changing reg in insn 197
changing reg in insn 196
changing reg in insn 197
changing reg in insn 173
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 174
changing reg in insn 175
Spilling for insn 198.
Using reg 2 for reload 0
Spilling for insn 28.
Spilling for insn 50.
Spilling for insn 196.
Using reg 3 for reload 0
Spilling for insn 175.

Reloads for insn # 198
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 28
Reload 0: reload_out (SI) = (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:141 __ptr ] [141])
                                                        (reg:SI 1 r1 [158])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:141 __ptr ] [141])
                                                        (reg:SI 1 r1 [158])) [0 S4 A32])

Reloads for insn # 50
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 0 r0 [171])
                                                        (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 0 r0 [171])
                                                        (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])

Reloads for insn # 196
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 175
Reload 0: reload_out (SI) = (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
                                                        (reg:SI 2 r2 [213])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
                                                        (reg:SI 2 r2 [213])) [0 S4 A32])
deleting insn with uid = 161.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 77.
verify found no changes in insn with uid = 78.
verify found no changes in insn with uid = 79.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 97.
verify found no changes in insn with uid = 98.
verify found no changes in insn with uid = 102.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 137.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 147.
verify found no changes in insn with uid = 153.
verify found no changes in insn with uid = 162.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 25 count 28 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 25 count 32 (  1.9)


do_IPI

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={34d,16u,2d} r1={29d,10u,1d} r2={31d,12u,1d} r3={36d,17u} r4={1d,1u} r5={1d,11u,2d} r6={1d,4u} r7={1d,2u} r12={21d} r13={1d,38u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={27d,3u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} 
;;    total ref usage 2525{2404d,115u,6e} in 89{69 regular + 20 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 204 2 NOTE_INSN_DELETED)

(insn 204 8 198 2 arch/arm/kernel/smp.c:627 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 198 204 199 2 arch/arm/kernel/smp.c:627 (set (reg:SI 3 r3 [151])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 199 198 2 2 arch/arm/kernel/smp.c:627 (set (reg:SI 3 r3 [151])
        (and:SI (reg:SI 3 r3 [151])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 199 29 2 arch/arm/kernel/smp.c:626 (set (reg/v:SI 2 r2 [orig:149 ipinr ] [149])
        (reg:SI 0 r0 [ ipinr ])) 167 {*arm_movsi_insn} (nil))

(insn 29 2 3 2 arch/arm/kernel/smp.c:630 (set (reg:SI 0 r0 [165])
        (plus:SI (reg/v:SI 2 r2 [orig:149 ipinr ] [149])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(insn 3 29 10 2 arch/arm/kernel/smp.c:626 (set (reg/v/f:SI 7 r7 [orig:150 regs ] [150])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 10 3 30 2 arch/arm/kernel/smp.c:627 (set (reg/v:SI 5 r5 [orig:147 cpu ] [147])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [151])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 10 11 2 arch/arm/kernel/smp.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [165])
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (nil))

(insn 11 30 12 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 3 r3 [orig:141 __ptr ] [141])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)
        (nil)))

(insn 12 11 202 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 3 r3 [orig:141 __ptr ] [141])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:141 __ptr ] [141])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579566)) -1 (nil))

(insn 202 12 18 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/f:SI 1 r1 [154])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 18 202 19 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 1 r1 [158])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:147 cpu ] [147])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [154])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:147 cpu ] [147])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 19 18 28 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v/f:SI 4 r4 [orig:146 old_regs ] [146])
        (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:141 __ptr ] [141])
                (reg:SI 1 r1 [158])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 19 31 2 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:141 __ptr ] [141])
                (reg:SI 1 r1 [158])) [0 S4 A32])
        (reg/v/f:SI 7 r7 [orig:150 regs ] [150])) 167 {*arm_movsi_insn} (nil))

(jump_insn 31 28 32 2 arch/arm/kernel/smp.c:630 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 32 31 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 35 32 38 3 NOTE_INSN_DELETED)

(note 38 35 36 3 NOTE_INSN_DELETED)

(insn 36 38 34 3 arch/arm/kernel/smp.c:631 (set (reg:SI 0 r0 [168])
        (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:147 cpu ] [147])
                (const_int 8 [0x8]))
            (reg:SI 0 r0 [165]))) 270 {*arith_shiftsi} (nil))

(insn 34 36 39 3 arch/arm/kernel/smp.c:631 (set (reg/f:SI 3 r3 [166])
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)
        (nil)))

(insn 39 34 48 3 arch/arm/kernel/smp.c:631 (set (reg:SI 0 r0 [171])
        (plus:SI (mult:SI (reg:SI 0 r0 [168])
                (const_int 4 [0x4]))
            (reg/f:SI 3 r3 [166]))) 270 {*arith_shiftsi} (nil))

(insn 48 39 49 3 arch/arm/kernel/smp.c:631 (set (reg:SI 3 r3 [180])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [171])
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 0 r0 [171])
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])
        (nil)))

(insn 49 48 50 3 arch/arm/kernel/smp.c:631 (set (reg:SI 3 r3 [181])
        (plus:SI (reg:SI 3 r3 [180])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 0 r0 [171])
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])
        (nil)))

(insn 50 49 51 3 arch/arm/kernel/smp.c:631 (set (mem/s/j:SI (plus:SI (reg:SI 0 r0 [171])
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])
        (reg:SI 3 r3 [181])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 51 50 52 4 48 "" [1 uses])

(note 52 51 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 arch/arm/kernel/smp.c:633 (set (reg:SI 3 r3 [182])
        (plus:SI (reg/v:SI 2 r2 [orig:149 ipinr ] [149])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(jump_insn 54 53 55 4 arch/arm/kernel/smp.c:633 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [182])
                        (const_int 5 [0x5]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [182])
                                (const_int 4 [0x4]))
                            (label_ref 55)) [0 S4 A32])
                    (label_ref 156)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 55))
        ]) 265 {arm_casesi_internal} (insn_list:REG_LABEL_TARGET 156 (nil)))
;; End of basic block 4 -> ( 15 5 6 7 8 9 13)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  15 [14.3%] 
;; Succ edge  5 [14.3%] 
;; Succ edge  6 [14.3%] 
;; Succ edge  7 [14.3%] 
;; Succ edge  8 [14.3%] 
;; Succ edge  9 [14.3%] 
;; Succ edge  13 [14.3%] 

;; Insn is not within a basic block
(code_label 55 54 56 56 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 56 55 57 arch/arm/kernel/smp.c:633 (addr_vec:SI [
            (label_ref:SI 58)
            (label_ref:SI 63)
            (label_ref:SI 68)
            (label_ref:SI 75)
            (label_ref:SI 82)
            (label_ref:SI 115)
        ]) -1 (nil))

(barrier 57 56 58)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 58 57 59 5 50 "" [1 uses])

(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 60 59 184 5 arch/arm/kernel/smp.c:635 (parallel [
            (call (mem:SI (symbol_ref:SI ("ipi_timer") [flags 0x3] <function_decl 0x1153a600 ipi_timer>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(jump_insn 184 60 185 5 arch/arm/kernel/smp.c:636 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 185 184 63)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 63 185 64 6 51 "" [1 uses])

(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 65 64 186 6 arch/arm/kernel/smp.c:639 (parallel [
            (call (mem:SI (symbol_ref:SI ("scheduler_ipi") [flags 0x41] <function_decl 0x10fde900 scheduler_ipi>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 186 65 187 6 arch/arm/kernel/smp.c:640 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 187 186 68)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 68 187 69 7 52 "" [1 uses])

(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 70 69 71 7 arch/arm/kernel/smp.c:643 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 71 70 72 7 arch/arm/kernel/smp.c:644 (parallel [
            (call (mem:SI (symbol_ref:SI ("generic_smp_call_function_interrupt") [flags 0x41] <function_decl 0x10c9fd80 generic_smp_call_function_interrupt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 72 71 188 7 arch/arm/kernel/smp.c:645 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_exit") [flags 0x41] <function_decl 0x11017000 irq_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 188 72 189 7 arch/arm/kernel/smp.c:646 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 189 188 75)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 75 189 76 8 53 "" [1 uses])

(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(call_insn 77 76 78 8 arch/arm/kernel/smp.c:649 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 78 77 79 8 arch/arm/kernel/smp.c:650 (parallel [
            (call (mem:SI (symbol_ref:SI ("generic_smp_call_function_single_interrupt") [flags 0x41] <function_decl 0x10c9fd00 generic_smp_call_function_single_interrupt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 79 78 190 8 arch/arm/kernel/smp.c:651 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_exit") [flags 0x41] <function_decl 0x11017000 irq_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 190 79 191 8 arch/arm/kernel/smp.c:652 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 191 190 82)

;; Start of basic block ( 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 82 191 83 9 54 "" [1 uses])

(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(call_insn 84 83 85 9 arch/arm/kernel/smp.c:655 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 85 84 86 9 arch/arm/kernel/smp.c:553 (set (reg/f:SI 3 r3 [183])
        (symbol_ref:SI ("system_state") [flags 0xc0] <var_decl 0x10a76d20 system_state>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("system_state") [flags 0xc0] <var_decl 0x10a76d20 system_state>)
        (nil)))

(insn 86 85 87 9 arch/arm/kernel/smp.c:553 (set (reg:SI 3 r3 [orig:184 system_state ] [184])
        (mem/c/i:SI (reg/f:SI 3 r3 [183]) [0 system_state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("system_state") [flags 0xc0] <var_decl 0x10a76d20 system_state>) [0 system_state+0 S4 A32])
        (nil)))

(insn 87 86 88 9 arch/arm/kernel/smp.c:553 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:184 system_state ] [184])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 9 arch/arm/kernel/smp.c:553 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 5 [r5] 13 [sp]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 89 88 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 92 89 93 10 include/linux/spinlock.h:285 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 93 92 96 10 include/linux/spinlock.h:285 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock") [flags 0x41] <function_decl 0x10ad9a80 _raw_spin_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 96 93 95 10 arch/arm/kernel/smp.c:556 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:147 cpu ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 95 96 97 10 arch/arm/kernel/smp.c:556 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11655de0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11655de0>)
        (nil)))

(call_insn 97 95 98 10 arch/arm/kernel/smp.c:556 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 98 97 101 10 arch/arm/kernel/smp.c:557 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 101 98 102 10 include/linux/spinlock.h:325 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 102 101 103 10 include/linux/spinlock.h:325 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock") [flags 0x41] <function_decl 0x10ad9f00 _raw_spin_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 5 [r5] 13 [sp]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 103 102 104 11 58 "" [1 uses])

(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 11 arch/arm/kernel/smp.c:561 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:147 cpu ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 11 arch/arm/kernel/smp.c:561 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 107 106 108 11 arch/arm/kernel/smp.c:561 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 108 107 109 11 arch/arm/kernel/smp.c:563 (parallel [
            (asm_operands/v ("cpsid f	@ __clf") ("") 0 []
                 [] 8561633)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 109 108 112 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105528)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (dfs_back)
(code_label 112 109 110 12 59 "" [1 uses])

(note 110 112 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 192 12 arch/arm/kernel/smp.c:567 discrim 1 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8579562)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn 192 111 193 12 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 12)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  12 [100.0%]  (dfs_back)

(barrier 193 192 115)

;; Start of basic block ( 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  4 [14.3%] 
(code_label 115 193 116 13 55 "" [1 uses])

(note 116 115 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 122 116 130 13 NOTE_INSN_DELETED)

(note 130 122 121 13 NOTE_INSN_DELETED)

(insn 121 130 119 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [194])
        (plus:SI (reg/v:SI 5 r5 [orig:147 cpu ] [147])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 119 121 123 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 6 r6 [191])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(insn 123 119 128 13 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 2 r2 [orig:193 cpu.442 ] [193])
                (if_then_else:SI (ge (reg/v:SI 5 r5 [orig:147 cpu ] [147])
                        (const_int 0 [0x0]))
                    (reg/v:SI 5 r5 [orig:147 cpu ] [147])
                    (reg:SI 2 r2 [194])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 128 123 124 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [197])
        (and:SI (reg/v:SI 5 r5 [orig:147 cpu ] [147])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 124 128 127 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [195])
        (ashiftrt:SI (reg:SI 2 r2 [orig:193 cpu.442 ] [193])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg/v:SI 5 r5 [orig:147 cpu ] [147])
            (const_int 32 [0x20]))
        (nil)))

(insn 127 124 129 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:138 D.27147 ] [138])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [195])
                    (const_int 4 [0x4]))
                (reg/f:SI 6 r6 [191])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [195])
                    (const_int 4 [0x4]))
                (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc])))) [0 S4 A32])
        (nil)))

(insn 129 127 131 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [198])
        (lshiftrt:SI (reg:SI 2 r2 [orig:138 D.27147 ] [138])
            (reg:SI 3 r3 [197]))) 117 {*arm_shiftsi3} (nil))

(insn 131 129 132 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [198])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 132 131 133 13 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 13 -> ( 14 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  14 [0.0%]  (fallthru)
;; Succ edge  16 [100.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  13 [0.0%]  (fallthru)
(note 133 132 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 136 133 137 14 arch/arm/kernel/smp.c:614 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 6 r6 [191])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 137 136 140 14 arch/arm/kernel/smp.c:614 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock") [flags 0x41] <function_decl 0x10ad9a80 _raw_spin_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 140 137 139 14 arch/arm/kernel/smp.c:615 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:147 cpu ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 139 140 141 14 arch/arm/kernel/smp.c:615 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x115c9f40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x115c9f40>)
        (nil)))

(call_insn 141 139 142 14 arch/arm/kernel/smp.c:615 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 142 141 143 14 arch/arm/kernel/smp.c:616 (set (reg:SI 0 r0)
        (reg/v/f:SI 7 r7 [orig:150 regs ] [150])) 167 {*arm_movsi_insn} (nil))

(call_insn 143 142 146 14 arch/arm/kernel/smp.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_regs") [flags 0x41] <function_decl 0x10f44a80 show_regs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 146 143 147 14 arch/arm/kernel/smp.c:617 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 6 r6 [191])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 147 146 151 14 arch/arm/kernel/smp.c:617 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock") [flags 0x41] <function_decl 0x10ad9f00 _raw_spin_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 151 147 152 14 include/linux/cpumask.h:848 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:147 cpu ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 153 14 include/linux/cpumask.h:848 (set (reg:SI 1 r1)
        (reg/f:SI 6 r6 [191])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(call_insn 153 152 194 14 include/linux/cpumask.h:848 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 194 153 195 14 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 195 194 156)

;; Start of basic block ( 4) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 2 [r2] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 156 195 157 15 49 "" [1 uses])

(note 157 156 160 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 160 157 159 15 arch/arm/kernel/smp.c:665 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:147 cpu ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 159 160 162 15 arch/arm/kernel/smp.c:665 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11652b00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11652b00>)
        (nil)))

(call_insn 162 159 163 15 arch/arm/kernel/smp.c:665 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 8 13 15 7 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  14 [100.0%] 
(code_label 163 162 164 16 57 "" [6 uses])

(note 164 163 171 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 171 164 205 16 NOTE_INSN_DELETED)

(insn 205 171 196 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 196 205 197 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 2 r2 [210])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 197 196 167 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 2 r2 [210])
        (and:SI (reg:SI 2 r2 [210])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 197 168 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)
        (nil)))

(insn 168 167 173 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579572)) -1 (nil))

(insn 173 168 201 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 1 r1 [orig:212 <variable>.cpu ] [212])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [210])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 201 173 174 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/f:SI 2 r2 [209])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 174 201 175 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 2 r2 [213])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:212 <variable>.cpu ] [212])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [209])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:212 <variable>.cpu ] [212])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 175 174 200 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
                (reg:SI 2 r2 [213])) [0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:146 old_regs ] [146])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 200 175 203 NOTE_INSN_DELETED)

(note 203 200 0 NOTE_INSN_DELETED)


;; Function smp_send_all_cpu_backtrace (smp_send_all_cpu_backtrace)[0:1429]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 16 (    2)
scanning new insn with uid = 85.
verify found no changes in insn with uid = 85.
deleting insn with uid = 19.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 16 (    2)

Pass 0 for finding allocno costs

    a13 (r160,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r158,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r156,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r140,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a11(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r160,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r156,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r160: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r140,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a11(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r160,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r156,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 64(l0): point = 1
   Insn 63(l0): point = 3
   Insn 62(l0): point = 5
   Insn 61(l0): point = 7
   Insn 43(l0): point = 10
   Insn 40(l0): point = 12
   Insn 42(l0): point = 14
   Insn 79(l0): point = 16
   Insn 36(l0): point = 18
   Insn 35(l0): point = 20
   Insn 33(l0): point = 22
   Insn 32(l0): point = 24
   Insn 30(l0): point = 26
   Insn 31(l0): point = 28
   Insn 28(l0): point = 30
   Insn 22(l0): point = 32
   Insn 21(l0): point = 34
   Insn 20(l0): point = 36
   Insn 85(l0): point = 38
   Insn 56(l0): point = 40
   Insn 46(l0): point = 42
   Insn 44(l0): point = 44
   Insn 26(l0): point = 46
   Insn 80(l0): point = 48
   Insn 16(l0): point = 51
   Insn 15(l0): point = 53
   Insn 13(l0): point = 55
   Insn 8(l0): point = 57
   Insn 12(l0): point = 59
   Insn 11(l0): point = 61
   Insn 83(l0): point = 63
   Insn 9(l0): point = 65
   Insn 82(l0): point = 67
   Insn 58(l1): point = 70
   Insn 57(l1): point = 72
   Insn 53(l1): point = 74
   Insn 50(l1): point = 77
   Insn 49(l1): point = 79
   Insn 77(l1): point = 81
   Insn 54(l1): point = 83
   Insn 47(l1): point = 85
 a0(r153): [11..12]
 a1(r142): [17..65]
 a2(r136): [29..57]
 a3(r146): [33..34]
 a4(r144): [35..36]
 a5(r145): [37..38]
 a6(r160): [10..40]
 a7(r158): [10..42]
 a8(r135): [10..44]
 a9(r138): [45..53]
 a10(r140): [58..67]
 a11(r135): [70..87]
 a12(r158): [70..87]
 a13(r160): [70..87]
 a14(r156): [80..85]
 Rebuilding regno allocno list for 156
Compressing live ranges: from 88 to 24 - 27%
Ranges after the compression:
 a0(r153): [1..2]
 a1(r142): [3..18]
 a2(r136): [4..16]
 a3(r146): [5..6]
 a4(r144): [7..8]
 a5(r145): [9..10]
 a6(r160): [20..23] [0..11]
 a7(r158): [20..23] [0..12]
 a8(r135): [20..23] [0..13]
 a9(r138): [14..15]
 a10(r140): [17..19]
 a14(r156): [21..22]
+++Allocating 96 bytes for conflict table (uncompressed size 120)
;; a0(r153,l0) conflicts: a6(r160,l0) a7(r158,l0) a8(r135,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r142,l0) conflicts: a6(r160,l0) a7(r158,l0) a8(r135,l0) a2(r136,l0) a3(r146,l0) a4(r144,l0) a5(r145,l0) a9(r138,l0) a10(r140,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r136,l0) conflicts: a6(r160,l0) a7(r158,l0) a8(r135,l0) a1(r142,l0) a3(r146,l0) a4(r144,l0) a5(r145,l0) a9(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r146,l0) conflicts: a6(r160,l0) a7(r158,l0) a8(r135,l0) a1(r142,l0) a2(r136,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a4(r144,l0) conflicts: a6(r160,l0) a7(r158,l0) a8(r135,l0) a1(r142,l0) a2(r136,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a5(r145,l0) conflicts: a6(r160,l0) a7(r158,l0) a8(r135,l0) a1(r142,l0) a2(r136,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a6(r160,l0) conflicts: a7(r158,l0) a8(r135,l0) a0(r153,l0) a1(r142,l0) a2(r136,l0) a3(r146,l0) a4(r144,l0) a5(r145,l0) a14(r156,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a7(r158,l0) conflicts: a6(r160,l0) a8(r135,l0) a0(r153,l0) a1(r142,l0) a2(r136,l0) a3(r146,l0) a4(r144,l0) a5(r145,l0) a14(r156,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r135,l0) conflicts: a6(r160,l0) a7(r158,l0) a0(r153,l0) a1(r142,l0) a2(r136,l0) a3(r146,l0) a4(r144,l0) a5(r145,l0) a14(r156,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a9(r138,l0) conflicts: a1(r142,l0) a2(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a10(r140,l0) conflicts: a1(r142,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a14(r156,l0) conflicts: a6(r160,l0) a7(r158,l0) a8(r135,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  cp0:a8(r135)<->a9(r138)@1000:move
  regions=2, blocks=8, points=24
    allocnos=15, copies=1, conflicts=1, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r153 1r142 2r136 3r146 4r144 5r145 6r160 7r158 8r135 9r138 10r140 14r156
    modified regnos: 135 136 138 140 142 144 145 146 153 156 158 160
    border:
    Pressure: GENERAL_REGS=8
    Reg 153 of GENERAL_REGS has 3 regs less
    Reg 142 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 146 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
    Reg 160 of GENERAL_REGS has 3 regs less
    Reg 158 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
      Pushing a14(r156,l0)
      Pushing a5(r145,l0)
      Pushing a4(r144,l0)
      Pushing a3(r146,l0)
      Pushing a10(r140,l0)
      Pushing a9(r138,l0)
      Pushing a7(r158,l0)
      Pushing a6(r160,l0)
      Pushing a0(r153,l0)
      Pushing a2(r136,l0)
      Pushing a8(r135,l0)
      Pushing a1(r142,l0)
      Popping a1(r142,l0)  -- assign reg 4
      Popping a8(r135,l0)  -- assign reg 5
      Popping a2(r136,l0)  -- assign reg 6
      Popping a0(r153,l0)  -- assign reg 3
      Popping a6(r160,l0)  -- assign reg 7
      Popping a7(r158,l0)  -- assign reg 8
      Popping a9(r138,l0)  -- assign reg 5
      Popping a10(r140,l0)  -- assign reg 3
      Popping a3(r146,l0)  -- assign reg 3
      Popping a4(r144,l0)  -- assign reg 3
      Popping a5(r145,l0)  -- assign reg 3
      Popping a14(r156,l0)  -- assign reg 3
Disposition:
    8:r135 l0     5    2:r136 l0     6    9:r138 l0     5   10:r140 l0     3
    1:r142 l0     4    4:r144 l0     3    5:r145 l0     3    3:r146 l0     3
    0:r153 l0     3   14:r156 l0     3    7:r158 l0     8    6:r160 l0     7
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=82, live_throughout: 13, dead_or_set: 140
insn=9, live_throughout: 13, 140, dead_or_set: 142
insn=83, live_throughout: 13, 142, dead_or_set: 140
insn=11, live_throughout: 13, 140, 142, dead_or_set: 0
insn=12, live_throughout: 0, 13, 140, 142, dead_or_set: 1
insn=8, live_throughout: 0, 1, 13, 142, dead_or_set: 136, 140
insn=13, live_throughout: 13, 136, 142, dead_or_set: 0, 1, 14
insn=15, live_throughout: 13, 14, 136, 142, dead_or_set: 0, 138
insn=16, live_throughout: 13, 14, 136, 138, 142, dead_or_set: 
insn=80, live_throughout: 13, 136, 138, 142, dead_or_set: 1
insn=26, live_throughout: 1, 13, 136, 138, 142, dead_or_set: 0
insn=44, live_throughout: 0, 1, 13, 136, 142, dead_or_set: 135, 138
insn=46, live_throughout: 0, 1, 13, 135, 136, 142, dead_or_set: 158
insn=56, live_throughout: 0, 1, 13, 135, 136, 142, 158, dead_or_set: 160
insn=85, live_throughout: 0, 1, 13, 135, 136, 142, 158, 160, dead_or_set: 145
insn=20, live_throughout: 0, 1, 13, 135, 136, 142, 158, 160, dead_or_set: 144, 145
insn=21, live_throughout: 0, 1, 13, 135, 136, 142, 158, 160, dead_or_set: 144, 146
insn=22, live_throughout: 0, 13, 135, 136, 142, 158, 160, dead_or_set: 1, 146
insn=28, live_throughout: 13, 135, 136, 142, 158, 160, dead_or_set: 0, 1, 14
insn=31, live_throughout: 13, 135, 142, 158, 160, dead_or_set: 1, 136
insn=30, live_throughout: 1, 13, 135, 142, 158, 160, dead_or_set: 0
insn=32, live_throughout: 13, 135, 142, 158, 160, dead_or_set: 0, 1, 14
insn=33, live_throughout: 13, 135, 142, 158, 160, dead_or_set: 14
insn=35, live_throughout: 13, 135, 142, 158, 160, dead_or_set: 0
insn=36, live_throughout: 13, 135, 142, 158, 160, dead_or_set: 0, 14
insn=79, live_throughout: 13, 135, 158, 160, dead_or_set: 0, 142
insn=42, live_throughout: 0, 13, 135, 158, 160, dead_or_set: 1
insn=40, live_throughout: 1, 13, 135, 158, 160, dead_or_set: 0, 153
insn=43, live_throughout: 13, 135, 158, 160, dead_or_set: 0, 1, 14, 153
insn=55, live_throughout: 13, 135, 158, 160, dead_or_set: 
insn=47, live_throughout: 13, 135, 158, 160, dead_or_set: 156
insn=54, live_throughout: 13, 156, 158, 160, dead_or_set: 135
insn=77, live_throughout: 13, 135, 156, 158, 160, dead_or_set: 0
insn=49, live_throughout: 0, 13, 135, 158, 160, dead_or_set: 156
insn=50, live_throughout: 0, 13, 135, 158, 160, dead_or_set: 
insn=53, live_throughout: 13, 135, 158, 160, dead_or_set: 0, 14
insn=57, live_throughout: 13, 135, 158, 160, dead_or_set: 
insn=58, live_throughout: 13, 135, 158, 160, dead_or_set: 
insn=59, live_throughout: 13, dead_or_set: 
insn=61, live_throughout: 13, dead_or_set: 0
insn=62, live_throughout: 0, 13, dead_or_set: 1
insn=63, live_throughout: 13, dead_or_set: 0, 1, 14
insn=64, live_throughout: 13, 14, dead_or_set: 
insn=70, live_throughout: 13, 14, dead_or_set: 
init_insns for 142: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 85 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 158: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 56 (nil))
changing reg in insn 44
changing reg in insn 54
changing reg in insn 57
changing reg in insn 54
changing reg in insn 57
changing reg in insn 8
changing reg in insn 31
changing reg in insn 26
changing reg in insn 15
changing reg in insn 44
changing reg in insn 83
changing reg in insn 82
changing reg in insn 83
changing reg in insn 8
changing reg in insn 9
changing reg in insn 80
changing reg in insn 79
changing reg in insn 46
changing reg in insn 12
changing reg in insn 20
changing reg in insn 21
changing reg in insn 85
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 40
changing reg in insn 43
changing reg in insn 47
changing reg in insn 49
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 56
changing reg in insn 57
Spilling for insn 82.
Using reg 2 for reload 0
Spilling for insn 22.
Spilling for insn 82.
Using reg 2 for reload 0
Spilling for insn 22.

Reloads for insn # 82
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem/s/j:SI (pre_modify:SI (reg:SI 1 r1)
                                                        (plus:SI (reg:SI 1 r1)
                                                            (const_int 12 [0xc]))) [0 backtrace_mask.bits+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (pre_modify:SI (reg:SI 1 r1)
                                                        (plus:SI (reg:SI 1 r1)
                                                            (const_int 12 [0xc]))) [0 backtrace_mask.bits+0 S4 A32])
deleting insn with uid = 44.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 33.
verify found no changes in insn with uid = 36.
rescanning insn with uid = 43.
deleting insn with uid = 43.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 63.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 16 (    2)


smp_send_all_cpu_backtrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,11u} r1={15d,7u} r2={10d,1u} r3={16d,7u} r4={1d,4u} r5={2d,2u,1d} r6={1d,2u} r7={1d,1u} r8={1d,1u,1d} r12={9d} r13={1d,16u} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={11d,3u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} 
;;    total ref usage 1032{974d,56u,2e} in 41{33 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 14 2 NOTE_INSN_DELETED)

(note 14 6 87 2 NOTE_INSN_DELETED)

(insn 87 14 82 2 arch/arm/kernel/smp.c:578 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 82 87 9 2 arch/arm/kernel/smp.c:578 (set (reg:SI 3 r3 [140])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 82 83 2 arch/arm/kernel/smp.c:581 (set (reg/f:SI 4 r4 [142])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 83 9 11 2 arch/arm/kernel/smp.c:578 (set (reg:SI 3 r3 [140])
        (and:SI (reg:SI 3 r3 [140])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 83 12 2 arch/arm/kernel/smp.c:581 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 8 2 arch/arm/kernel/smp.c:581 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 4 r4 [142])
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(insn 8 12 13 2 arch/arm/kernel/smp.c:578 (set (reg/v:SI 6 r6 [orig:136 this_cpu ] [136])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [140])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 8 15 2 arch/arm/kernel/smp.c:581 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_test_and_set_bit") [flags 0x41] <function_decl 0x109c0680 _test_and_set_bit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 13 16 2 arch/arm/kernel/smp.c:581 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 5 r5 [orig:138 D.26315 ] [138])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 16 15 17 2 arch/arm/kernel/smp.c:581 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 7 [r7] 8 [r8]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 17 16 80 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 80 17 26 3 include/linux/bitmap.h:183 (set (reg:SI 1 r1)
        (reg/f:SI 4 r4 [142])) 167 {*arm_movsi_insn} (nil))

(insn 26 80 46 3 include/linux/cpumask.h:848 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:136 this_cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 46 26 56 3 include/linux/bitmap.h:263 (set (reg/f:SI 8 r8 [158])
        (reg/f:SI 4 r4 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 56 46 85 3 arch/arm/kernel/smp.c:598 discrim 1 (set (reg:SI 7 r7 [160])
        (const_int 10000 [0x2710])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 10000 [0x2710])
        (nil)))

(insn 85 56 20 3 include/linux/bitmap.h:183 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn 20 85 21 3 include/linux/bitmap.h:183 (set (reg/f:SI 3 r3 [orig:144 cpu_online_mask ] [144])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [145]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn 21 20 22 3 include/linux/bitmap.h:183 (set (reg:SI 3 r3 [orig:146 <variable>.bits ] [146])
        (mem/s/j:SI (reg/f:SI 3 r3 [orig:144 cpu_online_mask ] [144]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 28 3 include/linux/bitmap.h:183 (set (mem/s/j:SI (pre_modify:SI (reg:SI 1 r1)
                (plus:SI (reg:SI 1 r1)
                    (const_int 12 [0xc]))) [0 backtrace_mask.bits+0 S4 A32])
        (reg:SI 3 r3 [orig:146 <variable>.bits ] [146])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 1 r1)
        (nil)))

(call_insn 28 22 31 3 include/linux/cpumask.h:848 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 28 30 3 arch/arm/kernel/smp.c:591 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:136 this_cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 30 31 32 3 arch/arm/kernel/smp.c:591 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x115d6900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x115d6900>)
        (nil)))

(call_insn 32 30 33 3 arch/arm/kernel/smp.c:591 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 33 32 35 3 arch/arm/kernel/smp.c:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 35 33 36 3 arch/arm/kernel/smp.c:594 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11667c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11667c00>)
        (nil)))

(call_insn 36 35 79 3 arch/arm/kernel/smp.c:594 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 79 36 42 3 arch/arm/kernel/smp.c:595 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [142])) 167 {*arm_movsi_insn} (nil))

(insn 42 79 40 3 arch/arm/kernel/smp.c:595 (set (reg:SI 1 r1)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 40 42 43 3 arch/arm/kernel/smp.c:595 (set (reg/f:SI 3 r3 [orig:153 smp_cross_call ] [153])
        (mem/f/c/i:SI (post_modify:SI (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (const_int 12 [0xc]))) [0 smp_cross_call+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 0 r0)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 smp_cross_call+0 S4 A32])
            (nil))))

(call_insn 43 40 55 3 arch/arm/kernel/smp.c:595 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:153 smp_cross_call ] [153]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 5 [r5] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 5 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [98.9%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 55 43 45 4 67 "" [1 uses])

(note 45 55 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 48 45 47 4 NOTE_INSN_DELETED)

(insn 47 48 54 4 include/linux/bitmap.h:263 (set (reg:SI 3 r3 [orig:156 backtrace_mask.bits ] [156])
        (mem/s/j:SI (plus:SI (reg/f:SI 8 r8 [158])
                (const_int 12 [0xc])) [0 backtrace_mask.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 8 r8 [158])
                (const_int 12 [0xc])) [0 backtrace_mask.bits+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 backtrace_mask.bits+0 S4 A32])
            (nil))))

(insn 54 47 77 4 arch/arm/kernel/smp.c:598 (set (reg/v:SI 5 r5 [orig:135 i ] [135])
        (plus:SI (reg/v:SI 5 r5 [orig:135 i ] [135])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 77 54 49 4 arch/arm/kernel/smp.c:601 (set (reg:SI 0 r0)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(insn 49 77 50 4 include/linux/bitmap.h:263 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:156 backtrace_mask.bits ] [156])
                (const_int 2 [0x2])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 50 49 51 4 include/linux/bitmap.h:263 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 0 [r0] 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 5 [r5] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  6 [4.5%]  (loop_exit)
;; Succ edge  5 [95.5%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [95.5%]  (fallthru)
(note 51 50 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 53 51 57 5 arch/arm/kernel/smp.c:601 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10e39780 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 57 53 58 5 arch/arm/kernel/smp.c:598 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:135 i ] [135])
            (reg:SI 7 r7 [160]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 5 r5 [orig:135 i ] [135])
            (const_int 10000 [0x2710]))
        (nil)))

(jump_insn 58 57 59 5 arch/arm/kernel/smp.c:598 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9894 [0x26a6])
        (nil)))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 5 [r5] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [98.9%]  (dfs_back)
;; Succ edge  6 [1.1%]  (fallthru,loop_exit)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [4.5%]  (loop_exit)
;; Pred edge  5 [1.1%]  (fallthru,loop_exit)
(code_label 59 58 60 6 66 "" [1 uses])

(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 arch/arm/kernel/smp.c:604 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 6 arch/arm/kernel/smp.c:604 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 24 [0x18])))) 167 {*arm_movsi_insn} (nil))

(call_insn 63 62 64 6 arch/arm/kernel/smp.c:604 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 64 63 70 6 arch/arm/kernel/smp.c:605 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8567009)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 70 64 73 7 68 "" [1 uses])

(note 73 70 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 84 73 86 NOTE_INSN_DELETED)

(note 86 84 0 NOTE_INSN_DELETED)


;; Function percpu_timer_setup (percpu_timer_setup)[0:1426] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 57.
verify found no changes in insn with uid = 57.
deleting insn with uid = 40.
scanning new insn with uid = 58.
verify found no changes in insn with uid = 58.
deleting insn with uid = 38.
scanning new insn with uid = 59.
verify found no changes in insn with uid = 59.
deleting insn with uid = 36.
scanning new insn with uid = 60.
verify found no changes in insn with uid = 60.
deleting insn with uid = 32.
scanning new insn with uid = 61.
verify found no changes in insn with uid = 61.
deleting insn with uid = 24.
scanning new insn with uid = 62.
verify found no changes in insn with uid = 62.
deleting insn with uid = 17.
scanning new insn with uid = 63.
verify found no changes in insn with uid = 63.
deleting insn with uid = 11.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a1 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a1(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a11(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a1(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a11(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 43(l0): point = 1
   Insn 41(l0): point = 3
   Insn 57(l0): point = 5
   Insn 39(l0): point = 7
   Insn 58(l0): point = 9
   Insn 37(l0): point = 11
   Insn 59(l0): point = 13
   Insn 33(l0): point = 15
   Insn 60(l0): point = 17
   Insn 35(l0): point = 19
   Insn 34(l0): point = 21
   Insn 42(l0): point = 23
   Insn 30(l0): point = 26
   Insn 29(l0): point = 28
   Insn 27(l0): point = 30
   Insn 23(l0): point = 32
   Insn 22(l0): point = 34
   Insn 25(l0): point = 36
   Insn 61(l0): point = 38
   Insn 26(l0): point = 40
   Insn 19(l0): point = 42
   Insn 13(l0): point = 44
   Insn 18(l0): point = 46
   Insn 62(l0): point = 48
   Insn 10(l0): point = 50
   Insn 15(l0): point = 52
   Insn 12(l0): point = 54
   Insn 63(l0): point = 56
   Insn 14(l0): point = 58
   Insn 9(l0): point = 60
   Insn 8(l0): point = 62
   Insn 55(l0): point = 64
   Insn 54(l0): point = 66
 a0(r136): [4..44]
 a1(r157): [4..5]
 a2(r156): [8..9]
 a3(r155): [12..13]
 a4(r153): [16..17]
 a5(r154): [20..21]
 a6(r151): [33..34]
 a7(r148): [35..42]
 a8(r133): [35..46]
 a9(r152): [37..38]
 a10(r137): [43..62]
 a11(r143): [45..54]
 a12(r135): [45..60]
 a13(r147): [47..48]
 a14(r145): [47..52]
 a15(r144): [53..58]
 a16(r142): [55..56]
 a17(r139): [63..66]
Compressing live ranges: from 69 to 32 - 46%
Ranges after the compression:
 a0(r136): [0..17]
 a1(r157): [0..1]
 a2(r156): [2..3]
 a3(r155): [4..5]
 a4(r153): [6..7]
 a5(r154): [8..9]
 a6(r151): [10..11]
 a7(r148): [12..15]
 a8(r133): [12..19]
 a9(r152): [13..14]
 a10(r137): [16..29]
 a11(r143): [18..24]
 a12(r135): [18..28]
 a13(r147): [20..21]
 a14(r145): [20..22]
 a15(r144): [23..27]
 a16(r142): [25..26]
 a17(r139): [30..31]
+++Allocating 136 bytes for conflict table (uncompressed size 144)
;; a0(r136,l0) conflicts: a1(r157,l0) a2(r156,l0) a3(r155,l0) a4(r153,l0) a5(r154,l0) a6(r151,l0) a7(r148,l0) a8(r133,l0) a9(r152,l0) a10(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r157,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r156,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r155,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r153,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a5(r154,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a6(r151,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a7(r148,l0) conflicts: a0(r136,l0) a8(r133,l0) a9(r152,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a8(r133,l0) conflicts: a0(r136,l0) a7(r148,l0) a9(r152,l0) a10(r137,l0) a11(r143,l0) a12(r135,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a9(r152,l0) conflicts: a0(r136,l0) a7(r148,l0) a8(r133,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a10(r137,l0) conflicts: a0(r136,l0) a8(r133,l0) a11(r143,l0) a12(r135,l0) a13(r147,l0) a14(r145,l0) a15(r144,l0) a16(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r143,l0) conflicts: a8(r133,l0) a10(r137,l0) a12(r135,l0) a13(r147,l0) a14(r145,l0) a15(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r135,l0) conflicts: a8(r133,l0) a10(r137,l0) a11(r143,l0) a13(r147,l0) a14(r145,l0) a15(r144,l0) a16(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r147,l0) conflicts: a10(r137,l0) a11(r143,l0) a12(r135,l0) a14(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r145,l0) conflicts: a10(r137,l0) a11(r143,l0) a12(r135,l0) a13(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a15(r144,l0) conflicts: a10(r137,l0) a11(r143,l0) a12(r135,l0) a16(r142,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a16(r142,l0) conflicts: a10(r137,l0) a12(r135,l0) a15(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r139,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a14(r145)<->a15(r144)@125:shuffle
  cp1:a8(r133)<->a13(r147)@125:shuffle
  cp2:a8(r133)<->a14(r145)@125:shuffle
  cp3:a0(r136)<->a12(r135)@125:shuffle
  cp4:a0(r136)<->a11(r143)@125:shuffle
  cp5:a7(r148)<->a10(r137)@125:shuffle
  cp6:a6(r151)<->a8(r133)@125:shuffle
  cp7:a6(r151)<->a7(r148)@125:shuffle
  regions=1, blocks=5, points=32
    allocnos=18, copies=8, conflicts=6, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r136 1r157 2r156 3r155 4r153 5r154 6r151 7r148 8r133 9r152 10r137 11r143 12r135 13r147 14r145 15r144 16r142 17r139
    modified regnos: 133 135 136 137 139 142 143 144 145 147 148 151 152 153 154 155 156 157
    border:
    Pressure: GENERAL_REGS=5
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 157 of GENERAL_REGS has 2 regs less
    Reg 156 of GENERAL_REGS has 2 regs less
    Reg 155 of GENERAL_REGS has 2 regs less
    Reg 153 of GENERAL_REGS has 2 regs less
    Reg 154 of GENERAL_REGS has 2 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
      Pushing a16(r142,l0)
      Pushing a15(r144,l0)
      Pushing a14(r145,l0)
      Pushing a13(r147,l0)
      Pushing a11(r143,l0)
      Pushing a17(r139,l0)
      Pushing a12(r135,l0)
      Pushing a10(r137,l0)
      Pushing a9(r152,l0)
      Pushing a8(r133,l0)
      Pushing a7(r148,l0)
      Pushing a6(r151,l0)
      Pushing a5(r154,l0)
      Pushing a4(r153,l0)
      Pushing a3(r155,l0)
      Pushing a2(r156,l0)
      Pushing a1(r157,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a1(r157,l0)  -- assign reg 3
      Popping a2(r156,l0)  -- assign reg 3
      Popping a3(r155,l0)  -- assign reg 3
      Popping a4(r153,l0)  -- assign reg 3
      Popping a5(r154,l0)  -- assign reg 3
      Popping a6(r151,l0)  -- assign reg 3
      Popping a7(r148,l0)  -- assign reg 2
      Popping a8(r133,l0)  -- assign reg 3
      Popping a9(r152,l0)  -- assign reg 1
      Popping a10(r137,l0)  -- assign reg 2
      Popping a12(r135,l0)  -- assign reg 1
      Popping a17(r139,l0)  -- assign reg 3
      Popping a11(r143,l0)  -- assign reg 4
      Popping a13(r147,l0)  -- assign reg 0
      Popping a14(r145,l0)  -- assign reg 3
      Popping a15(r144,l0)  -- assign reg 3
      Popping a16(r142,l0)  -- assign reg 0
Disposition:
    8:r133 l0     3   12:r135 l0     1    0:r136 l0     4   10:r137 l0     2
   17:r139 l0     3   16:r142 l0     0   11:r143 l0     4   15:r144 l0     3
   14:r145 l0     3   13:r147 l0     0    7:r148 l0     2    6:r151 l0     3
    9:r152 l0     1    4:r153 l0     3    5:r154 l0     3    3:r155 l0     3
    2:r156 l0     3    1:r157 l0     3
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=54, live_throughout: 13, dead_or_set: 139
insn=55, live_throughout: 13, dead_or_set: 139
insn=8, live_throughout: 13, dead_or_set: 137, 139
insn=9, live_throughout: 13, 137, dead_or_set: 135
insn=14, live_throughout: 13, 135, 137, dead_or_set: 144
insn=63, live_throughout: 13, 135, 137, 144, dead_or_set: 142
insn=12, live_throughout: 13, 135, 137, 144, dead_or_set: 142, 143
insn=15, live_throughout: 13, 135, 137, 143, dead_or_set: 144, 145
insn=10, live_throughout: 13, 137, 143, 145, dead_or_set: 135
insn=62, live_throughout: 13, 135, 137, 143, 145, dead_or_set: 147
insn=18, live_throughout: 13, 135, 137, 143, dead_or_set: 133, 145, 147
insn=13, live_throughout: 13, 133, 137, dead_or_set: 135, 136, 143
insn=19, live_throughout: 13, 133, 136, dead_or_set: 137, 148
insn=26, live_throughout: 13, 133, 136, 148, dead_or_set: 0
insn=61, live_throughout: 0, 13, 133, 136, 148, dead_or_set: 152
insn=25, live_throughout: 0, 13, 133, 136, 148, dead_or_set: 152
insn=22, live_throughout: 0, 13, 136, dead_or_set: 133, 148, 151
insn=23, live_throughout: 0, 13, 136, dead_or_set: 151
insn=27, live_throughout: 13, 136, dead_or_set: 0, 14
insn=29, live_throughout: 13, 14, 136, dead_or_set: 0
insn=30, live_throughout: 13, 14, 136, dead_or_set: 
insn=42, live_throughout: 13, 14, 136, dead_or_set: 0
insn=34, live_throughout: 0, 13, 14, 136, dead_or_set: 154
insn=35, live_throughout: 0, 13, 14, 136, dead_or_set: 154
insn=60, live_throughout: 0, 13, 14, 136, dead_or_set: 153
insn=33, live_throughout: 0, 13, 14, 136, dead_or_set: 153
insn=59, live_throughout: 0, 13, 14, 136, dead_or_set: 155
insn=37, live_throughout: 0, 13, 14, 136, dead_or_set: 155
insn=58, live_throughout: 0, 13, 14, 136, dead_or_set: 156
insn=39, live_throughout: 0, 13, 14, 136, dead_or_set: 156
insn=57, live_throughout: 0, 13, 14, 136, dead_or_set: 157
insn=41, live_throughout: 0, 13, 14, dead_or_set: 136, 157
insn=43, live_throughout: 13, 14, dead_or_set: 0
insn=50, live_throughout: 13, 14, dead_or_set: 
init_insns for 142: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 62 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 61 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 60 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 58 (nil))
init_insns for 157: (insn_list:REG_DEP_TRUE 57 (nil))
changing reg in insn 18
changing reg in insn 22
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 13
changing reg in insn 13
changing reg in insn 42
changing reg in insn 41
changing reg in insn 39
changing reg in insn 37
changing reg in insn 35
changing reg in insn 33
changing reg in insn 26
changing reg in insn 25
changing reg in insn 23
changing reg in insn 22
changing reg in insn 8
changing reg in insn 19
changing reg in insn 14
changing reg in insn 12
changing reg in insn 12
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 8
changing reg in insn 63
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 18
changing reg in insn 62
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 22
changing reg in insn 23
changing reg in insn 61
changing reg in insn 25
changing reg in insn 60
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 59
changing reg in insn 37
changing reg in insn 58
changing reg in insn 39
changing reg in insn 57
changing reg in insn 41
Spilling for insn 54.
Using reg 2 for reload 0
Spilling for insn 25.
Spilling for insn 23.
Spilling for insn 35.
Spilling for insn 33.
Spilling for insn 37.
Spilling for insn 39.
Spilling for insn 41.

Reloads for insn # 54
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 25
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 52 [0x34])) [0 <variable>.broadcast+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 52 [0x34])) [0 <variable>.broadcast+0 S4 A32])

Reloads for insn # 23
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 80 [0x50])) [0 <variable>.cpumask+0 S4 A128])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 80 [0x50])) [0 <variable>.cpumask+0 S4 A128])

Reloads for insn # 35
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])

Reloads for insn # 33
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])

Reloads for insn # 37
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])

Reloads for insn # 39
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 32 [0x20])) [0 <variable>.mult+0 S4 A256])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 32 [0x20])) [0 <variable>.mult+0 S4 A256])

Reloads for insn # 41
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                                                        (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 43.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


percpu_timer_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={6d,3u} r2={6d,5u,1d} r3={14d,11u} r4={2d,10u,1d} r12={3d} r13={1d,7u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 309{264d,43u,2e} in 34{32 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 16 2 NOTE_INSN_DELETED)

(note 16 6 20 2 NOTE_INSN_DELETED)

(note 20 16 21 2 NOTE_INSN_DELETED)

(note 21 20 28 2 NOTE_INSN_DELETED)

(note 28 21 65 2 NOTE_INSN_DELETED)

(insn 65 28 54 2 arch/arm/kernel/smp.c:521 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 54 65 55 2 arch/arm/kernel/smp.c:521 (set (reg:SI 3 r3 [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 8 2 arch/arm/kernel/smp.c:521 (set (reg:SI 3 r3 [139])
        (and:SI (reg:SI 3 r3 [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 55 9 2 arch/arm/kernel/smp.c:521 (set (reg/v:SI 2 r2 [orig:137 cpu ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [139])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 14 2 arch/arm/kernel/smp.c:522 (set (reg/v:SI 1 r1 [orig:135 __ptr ] [135])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 14 9 63 2 include/linux/cpumask.h:738 (set (reg:SI 3 r3 [144])
        (and:SI (reg/v:SI 2 r2 [orig:137 cpu ] [137])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 63 14 12 2 arch/arm/kernel/smp.c:522 (set (reg/f:SI 0 r0 [142])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 12 63 15 2 arch/arm/kernel/smp.c:522 (set (reg:SI 4 r4 [143])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:137 cpu ] [137])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [142])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 2 r2 [orig:137 cpu ] [137])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 15 12 10 2 include/linux/cpumask.h:738 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [144])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 10 15 62 2 arch/arm/kernel/smp.c:522 (set (reg/v:SI 1 r1 [orig:135 __ptr ] [135])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 1 r1 [orig:135 __ptr ] [135])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8556419)) -1 (nil))

(insn 62 10 18 2 include/linux/cpumask.h:738 (set (reg/f:SI 0 r0 [147])
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)
        (nil)))

(insn 18 62 13 2 include/linux/cpumask.h:738 (set (reg/v/f:SI 3 r3 [orig:133 p ] [133])
        (plus:SI (mult:SI (reg:SI 3 r3 [145])
                (const_int 4 [0x4]))
            (reg/f:SI 0 r0 [147]))) 270 {*arith_shiftsi} (nil))

(insn 13 18 19 2 arch/arm/kernel/smp.c:522 (set (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
        (plus:SI (reg/v:SI 1 r1 [orig:135 __ptr ] [135])
            (reg:SI 4 r4 [143]))) 4 {*arm_addsi3} (nil))

(insn 19 13 26 2 arch/arm/kernel/smp.c:524 (set (reg:SI 2 r2 [148])
        (lshiftrt:SI (reg/v:SI 2 r2 [orig:137 cpu ] [137])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 26 19 61 2 arch/arm/kernel/smp.c:527 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 evt ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 61 26 25 2 arch/arm/kernel/smp.c:525 (set (reg/f:SI 1 r1 [152])
        (symbol_ref:SI ("smp_timer_broadcast") [flags 0x3] <function_decl 0x1153a900 smp_timer_broadcast>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_timer_broadcast") [flags 0x3] <function_decl 0x1153a900 smp_timer_broadcast>)
        (nil)))

(insn 25 61 22 2 arch/arm/kernel/smp.c:525 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 52 [0x34])) [0 <variable>.broadcast+0 S4 A32])
        (reg/f:SI 1 r1 [152])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("smp_timer_broadcast") [flags 0x3] <function_decl 0x1153a900 smp_timer_broadcast>)
        (nil)))

(insn 22 25 23 2 arch/arm/kernel/smp.c:524 (set (reg:SI 3 r3 [151])
        (minus:SI (reg/v/f:SI 3 r3 [orig:133 p ] [133])
            (mult:SI (reg:SI 2 r2 [148])
                (const_int 4 [0x4])))) 273 {*sub_shiftsi} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 80 [0x50])) [0 <variable>.cpumask+0 S4 A128])
        (nil)))

(insn 23 22 27 2 arch/arm/kernel/smp.c:524 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 80 [0x50])) [0 <variable>.cpumask+0 S4 A128])
        (reg:SI 3 r3 [151])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 23 29 2 arch/arm/kernel/smp.c:527 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("local_timer_setup") [flags 0x41] <function_decl 0x11513700 local_timer_setup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 27 30 2 arch/arm/kernel/smp.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 2 arch/arm/kernel/smp.c:527 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 31 30 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 42 31 34 3 arch/arm/kernel/smp.c:516 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 evt ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 34 42 35 3 arch/arm/kernel/smp.c:509 (set (reg:SI 3 r3 [154])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 11 [0xb])
        (nil)))

(insn 35 34 60 3 arch/arm/kernel/smp.c:509 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])
        (reg:SI 3 r3 [154])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 11 [0xb])
        (nil)))

(insn 60 35 33 3 arch/arm/kernel/smp.c:508 (set (reg/f:SI 3 r3 [153])
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11676540>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11676540>)
        (nil)))

(insn 33 60 59 3 arch/arm/kernel/smp.c:508 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 3 r3 [153])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11676540>)
        (nil)))

(insn 59 33 37 3 arch/arm/kernel/smp.c:512 (set (reg:SI 3 r3 [155])
        (const_int 400 [0x190])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 400 [0x190])
        (nil)))

(insn 37 59 58 3 arch/arm/kernel/smp.c:512 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])
        (reg:SI 3 r3 [155])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 400 [0x190])
        (nil)))

(insn 58 37 39 3 arch/arm/kernel/smp.c:513 (set (reg:SI 3 r3 [156])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 39 58 57 3 arch/arm/kernel/smp.c:513 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 32 [0x20])) [0 <variable>.mult+0 S4 A256])
        (reg:SI 3 r3 [156])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 57 39 41 3 arch/arm/kernel/smp.c:514 (set (reg/f:SI 3 r3 [157])
        (symbol_ref:SI ("broadcast_timer_set_mode") [flags 0x3] <function_decl 0x1153aa00 broadcast_timer_set_mode>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("broadcast_timer_set_mode") [flags 0x3] <function_decl 0x1153aa00 broadcast_timer_set_mode>)
        (nil)))

(insn 41 57 43 3 arch/arm/kernel/smp.c:514 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 evt ] [136])
                (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])
        (reg/f:SI 3 r3 [157])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("broadcast_timer_set_mode") [flags 0x3] <function_decl 0x1153aa00 broadcast_timer_set_mode>)
        (nil)))

(call_insn/j 43 41 44 3 arch/arm/kernel/smp.c:516 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockevents_register_device") [flags 0x41] <function_decl 0x11406700 clockevents_register_device>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 44 43 50)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 50 44 53 4 74 "" [1 uses])

(note 53 50 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 56 53 64 NOTE_INSN_DELETED)

(note 64 56 0 NOTE_INSN_DELETED)


;; Function show_local_irqs (show_local_irqs)[0:1422]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
scanning new insn with uid = 63.
verify found no changes in insn with uid = 63.
deleting insn with uid = 14.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)

Pass 0 for finding allocno costs

    a11 (r153,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r152,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r149,l1) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r145,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r149,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r149,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 48(l0): point = 0
   Insn 47(l0): point = 2
   Insn 46(l0): point = 4
   Insn 61(l0): point = 7
   Insn 15(l0): point = 9
   Insn 63(l0): point = 11
   Insn 21(l0): point = 13
   Insn 40(l0): point = 15
   Insn 16(l0): point = 17
   Insn 13(l0): point = 19
   Insn 2(l0): point = 21
   Insn 10(l0): point = 23
   Insn 11(l0): point = 25
   Insn 12(l0): point = 27
   Insn 3(l0): point = 29
   Insn 43(l1): point = 32
   Insn 42(l1): point = 34
   Insn 41(l1): point = 36
   Insn 24(l1): point = 38
   Insn 26(l1): point = 40
   Insn 60(l1): point = 42
   Insn 37(l1): point = 44
   Insn 36(l1): point = 46
   Insn 33(l1): point = 48
   Insn 57(l1): point = 50
   Insn 35(l1): point = 52
   Insn 29(l1): point = 55
   Insn 28(l1): point = 57
 a0(r136): [5..21]
 a1(r133): [7..9]
 a2(r140): [10..11]
 a3(r153): [7..13]
 a4(r152): [7..15]
 a5(r135): [7..17]
 a6(r137): [26..29]
 a7(r133): [32..59]
 a8(r135): [53..59] [32..44]
 a9(r136): [32..59]
 a10(r152): [32..59]
 a11(r153): [32..59]
 a12(r149): [35..36]
 a13(r145): [58..59] [32..38]
 Rebuilding regno allocno list for 149
 Rebuilding regno allocno list for 145
Compressing live ranges: from 60 to 19 - 31%
Ranges after the compression:
 a0(r136): [11..18] [0..8]
 a1(r133): [11..18] [1..2]
 a2(r140): [3..4]
 a3(r153): [11..18] [1..5]
 a4(r152): [11..18] [1..6]
 a5(r135): [16..18] [11..15] [1..7]
 a6(r137): [9..10]
 a12(r149): [12..13]
 a13(r145): [17..18] [11..14]
+++Allocating 72 bytes for conflict table (uncompressed size 112)
;; a0(r136,l0) conflicts: a1(r133,l0) a3(r153,l0) a4(r152,l0) a5(r135,l0) a2(r140,l0) a13(r145,l0) a12(r149,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r133,l0) conflicts: a0(r136,l0) a3(r153,l0) a4(r152,l0) a5(r135,l0) a13(r145,l0) a12(r149,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r140,l0) conflicts: a0(r136,l0) a3(r153,l0) a4(r152,l0) a5(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r153,l0) conflicts: a0(r136,l0) a1(r133,l0) a4(r152,l0) a5(r135,l0) a2(r140,l0) a13(r145,l0) a12(r149,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r152,l0) conflicts: a0(r136,l0) a1(r133,l0) a3(r153,l0) a5(r135,l0) a2(r140,l0) a13(r145,l0) a12(r149,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a5(r135,l0) conflicts: a0(r136,l0) a1(r133,l0) a3(r153,l0) a4(r152,l0) a2(r140,l0) a13(r145,l0) a12(r149,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r137,l0) conflicts:
;;     total conflict hard regs: 0 3
;;     conflict hard regs: 0 3
;; a12(r149,l0) conflicts: a0(r136,l0) a1(r133,l0) a3(r153,l0) a4(r152,l0) a5(r135,l0) a13(r145,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a13(r145,l0) conflicts: a0(r136,l0) a1(r133,l0) a3(r153,l0) a4(r152,l0) a5(r135,l0) a12(r149,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=2, blocks=6, points=19
    allocnos=14, copies=0, conflicts=0, ranges=16

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r136 1r133 2r140 3r153 4r152 5r135 6r137 12r149 13r145
    modified regnos: 133 135 136 137 140 145 149 152 153
    border:
    Pressure: GENERAL_REGS=10
    Reg 136 of GENERAL_REGS has 5 regs less
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 153 of GENERAL_REGS has 4 regs less
    Reg 152 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 3 regs less
    Reg 145 of GENERAL_REGS has 3 regs less
      Pushing a2(r140,l0)
      Pushing a6(r137,l0)
      Pushing a13(r145,l0)
      Pushing a12(r149,l0)
      Pushing a4(r152,l0)
      Pushing a3(r153,l0)
      Pushing a1(r133,l0)
      Pushing a5(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a5(r135,l0)  -- assign reg 5
      Popping a1(r133,l0)  -- assign reg 6
      Popping a3(r153,l0)  -- assign reg 7
      Popping a4(r152,l0)  -- assign reg 8
      Popping a12(r149,l0)  -- assign reg 3
      Popping a13(r145,l0)  -- assign reg 2
      Popping a6(r137,l0)  -- assign reg 2
      Popping a2(r140,l0)  -- assign reg 3
Disposition:
    1:r133 l0     6    5:r135 l0     5    0:r136 l0     4    6:r137 l0     2
    2:r140 l0     3   13:r145 l0     2   12:r149 l0     3    4:r152 l0     8
    3:r153 l0     7
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 13, dead_or_set: 1, 137
insn=12, live_throughout: 0, 13, 137, dead_or_set: 3
insn=11, live_throughout: 0, 3, 13, dead_or_set: 2, 137
insn=10, live_throughout: 0, 2, 3, 13, dead_or_set: 1
insn=2, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 136
insn=13, live_throughout: 13, 136, dead_or_set: 0, 1, 2, 3, 14
insn=16, live_throughout: 13, 136, dead_or_set: 135
insn=40, live_throughout: 13, 135, 136, dead_or_set: 152
insn=21, live_throughout: 13, 135, 136, 152, dead_or_set: 153
insn=63, live_throughout: 13, 135, 136, 152, 153, dead_or_set: 140
insn=15, live_throughout: 13, 135, 136, 152, 153, dead_or_set: 133, 140
insn=61, live_throughout: 13, 133, 135, 136, 152, 153, dead_or_set: 
insn=39, live_throughout: 0, 1, 13, 133, 135, 136, 145, 152, 153, dead_or_set: 
insn=28, live_throughout: 0, 1, 13, 133, 135, 136, 152, 153, dead_or_set: 2, 145
insn=29, live_throughout: 13, 133, 135, 136, 152, 153, dead_or_set: 0, 1, 2, 14
insn=30, live_throughout: 13, 133, 135, 136, 152, 153, dead_or_set: 
insn=35, live_throughout: 13, 133, 136, 152, 153, dead_or_set: 2, 135
insn=57, live_throughout: 2, 13, 133, 136, 152, 153, dead_or_set: 1
insn=33, live_throughout: 1, 2, 13, 133, 136, 152, 153, dead_or_set: 0
insn=36, live_throughout: 13, 133, 136, 152, 153, dead_or_set: 0, 1, 2, 14
insn=37, live_throughout: 13, 14, 133, 136, 152, 153, dead_or_set: 0, 135
insn=60, live_throughout: 13, 14, 133, 135, 136, 152, 153, dead_or_set: 1
insn=26, live_throughout: 1, 13, 14, 133, 135, 136, 152, 153, dead_or_set: 0
insn=24, live_throughout: 0, 1, 13, 14, 133, 135, 136, 152, 153, dead_or_set: 145
insn=41, live_throughout: 0, 1, 13, 14, 133, 135, 136, 145, 152, 153, dead_or_set: 149
insn=42, live_throughout: 0, 1, 13, 14, 133, 135, 136, 145, 152, 153, dead_or_set: 149
insn=43, live_throughout: 0, 1, 13, 14, 133, 135, 136, 145, 152, 153, dead_or_set: 
insn=46, live_throughout: 13, 14, dead_or_set: 0, 136
insn=47, live_throughout: 0, 13, 14, dead_or_set: 1
insn=48, live_throughout: 13, 14, dead_or_set: 0, 1
init_insns for 140: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 21 (nil))
changing reg in insn 15
changing reg in insn 33
changing reg in insn 37
changing reg in insn 16
changing reg in insn 35
changing reg in insn 24
changing reg in insn 42
changing reg in insn 2
changing reg in insn 46
changing reg in insn 26
changing reg in insn 3
changing reg in insn 11
changing reg in insn 63
changing reg in insn 15
changing reg in insn 24
changing reg in insn 28
changing reg in insn 41
changing reg in insn 42
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 21
changing reg in insn 24
deleting insn with uid = 11.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 48.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)


show_local_irqs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,6u} r1={9d,5u} r2={9d,4u} r3={8d,3u} r4={1d,2u} r5={2d,3u} r6={1d,1u} r7={1d,1u} r8={1d,1u,1d} r12={5d} r13={1d,9u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={5d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 533{495d,37u,1e} in 27{23 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 4 12 2 arch/arm/kernel/smp.c:480 (set (reg/v:SI 2 r2 [orig:137 prec ] [137])
        (reg:SI 1 r1 [ prec ])) 167 {*arm_movsi_insn} (nil))

(insn 12 3 10 2 arch/arm/kernel/smp.c:483 (set (reg:SI 3 r3)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1167e340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1167e340>)
        (nil)))

(insn 10 12 2 2 arch/arm/kernel/smp.c:483 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1167e2a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1167e2a0>)
        (nil)))

(insn 2 10 13 2 arch/arm/kernel/smp.c:480 (set (reg/v/f:SI 4 r4 [orig:136 p ] [136])
        (reg:SI 0 r0 [ p ])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 2 16 2 arch/arm/kernel/smp.c:483 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 13 40 2 arch/arm/kernel/smp.c:485 (set (reg/v:SI 5 r5 [orig:135 cpu ] [135])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 40 16 21 2 arch/arm/kernel/smp.c:485 discrim 1 (set (reg/f:SI 8 r8 [152])
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)
        (nil)))

(insn 21 40 63 2 arch/arm/kernel/smp.c:486 (set (reg/f:SI 7 r7 [153])
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)
        (nil)))

(insn 63 21 15 2 include/linux/cpumask.h:174 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>)
        (nil)))

(insn 15 63 61 2 include/linux/cpumask.h:174 (set (reg/f:SI 6 r6 [orig:133 D.27256 ] [133])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [140]) [0 cpu_present_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>) [0 cpu_present_mask+0 S4 A32])
        (nil)))

(jump_insn 61 15 62 2 arch/arm/kernel/smp.c:485 (set (pc)
        (label_ref 30)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 62 61 39)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 39 62 19 3 79 "" [1 uses])

(note 19 39 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 19 28 3 NOTE_INSN_DELETED)

(insn 28 23 29 3 arch/arm/kernel/smp.c:486 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [145])
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 28 30 3 arch/arm/kernel/smp.c:486 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 30 29 31 4 78 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 32 31 35 4 NOTE_INSN_DELETED)

(insn 35 32 57 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 5 r5 [orig:135 cpu ] [135])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 57 35 33 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 33 57 36 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [orig:133 D.27256 ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 33 37 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 37 36 60 4 include/linux/cpumask.h:174 (set (reg/v:SI 5 r5 [orig:135 cpu ] [135])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 60 37 26 4 arch/arm/kernel/smp.c:486 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1167e540>)) 167 {*arm_movsi_insn} (nil))

(insn 26 60 24 4 arch/arm/kernel/smp.c:486 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 p ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 24 26 41 4 arch/arm/kernel/smp.c:486 (set (reg:SI 2 r2 [145])
        (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:135 cpu ] [135])
                (const_int 32 [0x20]))
            (reg/f:SI 7 r7 [153]))) 270 {*arith_shiftsi} (nil))

(insn 41 24 42 4 arch/arm/kernel/smp.c:485 discrim 1 (set (reg:SI 3 r3 [orig:149 nr_cpu_ids ] [149])
        (mem/c/i:SI (reg/f:SI 8 r8 [152]) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 8 r8 [152]) [0 nr_cpu_ids+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
            (nil))))

(insn 42 41 43 4 arch/arm/kernel/smp.c:485 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:135 cpu ] [135])
            (reg:SI 3 r3 [orig:149 nr_cpu_ids ] [149]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 43 42 44 4 arch/arm/kernel/smp.c:485 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 44 43 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 5 arch/arm/kernel/smp.c:488 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 p ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 5 arch/arm/kernel/smp.c:488 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x115d9a80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x115d9a80>)
        (nil)))

(call_insn/j 48 47 49 5 arch/arm/kernel/smp.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 49 48 64)

(note 64 49 0 NOTE_INSN_DELETED)


;; Function show_ipi_list (show_ipi_list)[0:1418]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 15 (  1.9)
scanning new insn with uid = 119.
verify found no changes in insn with uid = 119.
deleting insn with uid = 38.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 15 (  1.9)

Pass 0 for finding allocno costs

    a23 (r200,l2) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r200,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r196,l2) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r196,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r195,l2) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r195,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r192,l2) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r192,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r184,l2) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r180,l2) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r177,l2) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r168,l2) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r167,l2) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r166,l2) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r164,l2) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a2(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a9(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a10(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r192,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r195,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a13(r196,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a14(r200,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r164,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r166,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r167,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r168,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r192,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a21(r195,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r196,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r200,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a24(r184,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r180,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r177,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r200: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS

  a0(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a2(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a9(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a10(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r192,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r195,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a13(r196,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a14(r200,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r164,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r166,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r167,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r168,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r192,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a21(r195,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r196,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r200,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a24(r184,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r180,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r177,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 83(l0): point = 1
   Insn 39(l0): point = 3
   Insn 119(l0): point = 5
   Insn 40(l0): point = 7
   Insn 56(l0): point = 9
   Insn 43(l0): point = 11
   Insn 77(l0): point = 13
   Insn 33(l0): point = 15
   Insn 92(l1): point = 18
   Insn 91(l1): point = 20
   Insn 88(l1): point = 22
   Insn 86(l1): point = 24
   Insn 85(l1): point = 26
   Insn 89(l1): point = 28
   Insn 87(l1): point = 30
   Insn 116(l1): point = 33
   Insn 108(l1): point = 35
   Insn 50(l1): point = 37
   Insn 45(l1): point = 39
   Insn 49(l1): point = 41
   Insn 48(l1): point = 43
   Insn 47(l1): point = 45
   Insn 46(l1): point = 47
   Insn 80(l2): point = 50
   Insn 79(l2): point = 52
   Insn 61(l2): point = 54
   Insn 78(l2): point = 56
   Insn 58(l2): point = 58
   Insn 63(l2): point = 60
   Insn 106(l2): point = 62
   Insn 74(l2): point = 64
   Insn 73(l2): point = 66
   Insn 70(l2): point = 68
   Insn 103(l2): point = 70
   Insn 72(l2): point = 72
   Insn 66(l2): point = 75
   Insn 65(l2): point = 77
 a0(r200): [1..1]
 a1(r164): [1..3]
 a2(r170): [4..5]
 a3(r166): [1..7]
 a4(r196): [1..9]
 a5(r192): [1..11]
 a6(r195): [1..13]
 a7(r168): [1..15]
 a8(r164): [18..49]
 a9(r166): [18..49]
 a10(r168): [18..49]
 a11(r192): [18..49]
 a12(r195): [18..49]
 a13(r196): [18..49]
 a14(r200): [18..49]
 a15(r167): [33..35]
 a16(r164): [50..79]
 a17(r166): [50..79]
 a18(r167): [73..79] [50..64]
 a19(r168): [50..79]
 a20(r192): [50..79]
 a21(r195): [50..79]
 a22(r196): [50..79]
 a23(r200): [50..79]
 a24(r184): [53..56]
 a25(r180): [78..79] [50..54]
 a26(r177): [55..58]
 Rebuilding regno allocno list for 184
 Rebuilding regno allocno list for 180
 Rebuilding regno allocno list for 177
 Rebuilding regno allocno list for 167
Compressing live ranges: from 80 to 22 - 27%
Ranges after the compression:
 a0(r200): [9..21] [0..0]
 a1(r164): [9..21] [0..1]
 a2(r170): [2..3]
 a3(r166): [9..21] [0..4]
 a4(r196): [9..21] [0..5]
 a5(r192): [9..21] [0..6]
 a6(r195): [9..21] [0..7]
 a7(r168): [9..21] [0..8]
 a15(r167): [19..21] [12..18] [10..11]
 a24(r184): [13..16]
 a25(r180): [20..21] [12..14]
 a26(r177): [15..17]
+++Allocating 96 bytes for conflict table (uncompressed size 216)
;; a0(r200,l0) conflicts: a1(r164,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a15(r167,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r164,l0) conflicts: a0(r200,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a15(r167,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r170,l0) conflicts: a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a3(r166,l0) conflicts: a0(r200,l0) a1(r164,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a2(r170,l0) a15(r167,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r196,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a2(r170,l0) a15(r167,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a5(r192,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a4(r196,l0) a6(r195,l0) a7(r168,l0) a2(r170,l0) a15(r167,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a6(r195,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a7(r168,l0) a2(r170,l0) a15(r167,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a7(r168,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a2(r170,l0) a15(r167,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a15(r167,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a25(r180,l0) a24(r184,l0) a26(r177,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a24(r184,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a15(r167,l0) a25(r180,l0) a26(r177,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a25(r180,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a15(r167,l0) a24(r184,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a26(r177,l0) conflicts: a0(r200,l0) a1(r164,l0) a3(r166,l0) a4(r196,l0) a5(r192,l0) a6(r195,l0) a7(r168,l0) a15(r167,l0) a24(r184,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1

  cp0:a25(r180)<->a26(r177)@125:shuffle
  regions=3, blocks=8, points=22
    allocnos=27, copies=1, conflicts=0, ranges=22

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r200 1r164 2r170 3r166 4r196 5r192 6r195 7r168 15r167 24r184 25r180 26r177
    modified regnos: 164 166 167 168 170 177 180 184 192 195 196 200
    border:
    Pressure: GENERAL_REGS=12
    Reg 200 of GENERAL_REGS has 5 regs less
    Reg 164 of GENERAL_REGS has 5 regs less
    Reg 166 of GENERAL_REGS has 5 regs less
    Reg 196 of GENERAL_REGS has 5 regs less
    Reg 192 of GENERAL_REGS has 5 regs less
    Reg 195 of GENERAL_REGS has 5 regs less
    Reg 168 of GENERAL_REGS has 5 regs less
    Reg 167 of GENERAL_REGS has 4 regs less
    Reg 184 of GENERAL_REGS has 2 regs less
    Reg 180 of GENERAL_REGS has 2 regs less
    Reg 177 of GENERAL_REGS has 2 regs less
      Pushing a2(r170,l0)
      Pushing a26(r177,l0)
      Pushing a25(r180,l0)
      Pushing a24(r184,l0)
      Pushing a1(r164,l0)(potential spill: pri=769, cost=10000)
      Pushing a0(r200,l0)(potential spill: pri=1666, cost=20000)
      Pushing a15(r167,l0)
      Pushing a4(r196,l0)(potential spill: pri=2000, cost=20000)
      Pushing a6(r195,l0)
      Pushing a5(r192,l0)
      Pushing a7(r168,l0)
      Pushing a3(r166,l0)
      Popping a3(r166,l0)  -- assign reg 4
      Popping a7(r168,l0)  -- assign reg 5
      Popping a5(r192,l0)  -- assign reg 6
      Popping a6(r195,l0)  -- assign reg 7
      Popping a4(r196,l0)  -- assign reg 8
      Popping a15(r167,l0)  -- assign reg 10
      Popping a0(r200,l0)  -- assign reg 9
      Popping a1(r164,l0)  -- assign reg 11
      Popping a24(r184,l0)  -- assign reg 3
      Popping a25(r180,l0)  -- assign reg 2
      Popping a26(r177,l0)  -- assign reg 2
      Popping a2(r170,l0)  -- assign reg 3
Disposition:
    1:r164 l0    11    3:r166 l0     4   15:r167 l0    10    7:r168 l0     5
    2:r170 l0     3   26:r177 l0     2   25:r180 l0     2   24:r184 l0     3
    5:r192 l0     6    6:r195 l0     7    4:r196 l0     8    0:r200 l0     9
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=33, live_throughout: 1, 13, dead_or_set: 0, 168
insn=77, live_throughout: 1, 13, 168, dead_or_set: 195
insn=43, live_throughout: 13, 168, 195, dead_or_set: 1, 192
insn=56, live_throughout: 13, 168, 192, 195, dead_or_set: 196
insn=40, live_throughout: 13, 168, 192, 195, 196, dead_or_set: 166
insn=119, live_throughout: 13, 166, 168, 192, 195, 196, dead_or_set: 170
insn=39, live_throughout: 13, 166, 168, 192, 195, 196, dead_or_set: 164, 170
insn=83, live_throughout: 13, 164, 166, 168, 192, 195, 196, dead_or_set: 200
insn=90, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 
insn=46, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 0
insn=47, live_throughout: 0, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 1
insn=48, live_throughout: 0, 1, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 2
insn=49, live_throughout: 0, 1, 2, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 3
insn=45, live_throughout: 0, 1, 2, 3, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 
insn=50, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 0, 1, 2, 3, 14
insn=108, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 167
insn=116, live_throughout: 13, 164, 166, 167, 168, 192, 195, 196, 200, dead_or_set: 
insn=76, live_throughout: 0, 1, 13, 164, 166, 167, 168, 180, 192, 195, 196, 200, dead_or_set: 
insn=65, live_throughout: 0, 1, 13, 164, 166, 167, 168, 192, 195, 196, 200, dead_or_set: 2, 180
insn=66, live_throughout: 13, 164, 166, 167, 168, 192, 195, 196, 200, dead_or_set: 0, 1, 2, 14
insn=67, live_throughout: 13, 164, 166, 167, 168, 192, 195, 196, 200, dead_or_set: 
insn=72, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 2, 167
insn=103, live_throughout: 2, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 1
insn=70, live_throughout: 1, 2, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 0
insn=73, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 0, 1, 2, 14
insn=74, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 0, 167
insn=106, live_throughout: 13, 164, 166, 167, 168, 192, 195, 196, 200, dead_or_set: 1
insn=63, live_throughout: 1, 13, 164, 166, 167, 168, 192, 195, 196, 200, dead_or_set: 0
insn=58, live_throughout: 0, 1, 13, 164, 166, 167, 168, 192, 195, 196, 200, dead_or_set: 177
insn=78, live_throughout: 0, 1, 13, 164, 166, 167, 168, 177, 192, 195, 196, 200, dead_or_set: 184
insn=61, live_throughout: 0, 1, 13, 164, 166, 167, 168, 184, 192, 195, 196, 200, dead_or_set: 177, 180
insn=79, live_throughout: 0, 1, 13, 164, 166, 167, 168, 180, 192, 195, 196, 200, dead_or_set: 184
insn=80, live_throughout: 0, 1, 13, 164, 166, 167, 168, 180, 192, 195, 196, 200, dead_or_set: 
insn=87, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 2
insn=89, live_throughout: 2, 13, 164, 168, 192, 195, 196, 200, dead_or_set: 166
insn=85, live_throughout: 2, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 0
insn=86, live_throughout: 0, 2, 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 1
insn=88, live_throughout: 13, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 0, 1, 2, 14
insn=91, live_throughout: 13, 14, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 
insn=92, live_throughout: 13, 14, 164, 166, 168, 192, 195, 196, 200, dead_or_set: 
init_insns for 170: (insn_list:REG_DEP_TRUE 119 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 78 (nil))
init_insns for 195: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 196: (insn_list:REG_DEP_TRUE 56 (nil))
init_insns for 200: (insn_list:REG_DEP_TRUE 83 (nil))
changing reg in insn 39
changing reg in insn 70
changing reg in insn 89
changing reg in insn 40
changing reg in insn 58
changing reg in insn 87
changing reg in insn 91
changing reg in insn 89
changing reg in insn 45
changing reg in insn 108
changing reg in insn 74
changing reg in insn 72
changing reg in insn 58
changing reg in insn 79
changing reg in insn 33
changing reg in insn 85
changing reg in insn 63
changing reg in insn 46
changing reg in insn 119
changing reg in insn 39
changing reg in insn 58
changing reg in insn 61
changing reg in insn 61
changing reg in insn 65
changing reg in insn 78
changing reg in insn 79
changing reg in insn 43
changing reg in insn 48
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 56
changing reg in insn 61
changing reg in insn 83
changing reg in insn 87
Spilling for insn 45.

Reloads for insn # 45
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])


try_optimize_cfg iteration 1

Deleting fallthru block 7.
deleting insn with uid = 100.
deleting block 7


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 88.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 13 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 13 (  1.9)


show_ipi_list

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,6u} r1={9d,5u} r2={11d,6u} r3={8d,3u} r4={2d,5u} r5={1d,3u} r6={1d,1u} r7={1d,1u,1d} r8={1d,1u} r9={1d,1u} r10={2d,3u} r11={1d,1u} r12={5d} r13={1d,11u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,2u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 555{504d,50u,1e} in 37{33 regular + 4 call} insns.
(note 32 0 36 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 32 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 34 36 35 2 NOTE_INSN_DELETED)

(note 35 34 33 2 NOTE_INSN_FUNCTION_BEG)

(insn 33 35 77 2 arch/arm/kernel/smp.c:423 (set (reg/v/f:SI 5 r5 [orig:168 p ] [168])
        (reg:SI 0 r0 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 77 33 43 2 arch/arm/kernel/smp.c:429 discrim 1 (set (reg/f:SI 7 r7 [195])
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)
        (nil)))

(insn 43 77 56 2 arch/arm/kernel/smp.c:427 (set (reg:SI 6 r6 [192])
        (plus:SI (reg:SI 1 r1 [ prec ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 56 43 40 2 arch/arm/kernel/smp.c:430 (set (reg/f:SI 8 r8 [196])
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)
        (nil)))

(insn 40 56 119 2 arch/arm/kernel/smp.c:426 (set (reg/v:SI 4 r4 [orig:166 i ] [166])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 119 40 39 2 include/linux/cpumask.h:174 (set (reg/f:SI 3 r3 [170])
        (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>)
        (nil)))

(insn 39 119 83 2 include/linux/cpumask.h:174 (set (reg/f:SI 11 fp [orig:164 D.27263 ] [164])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [170]) [0 cpu_present_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>) [0 cpu_present_mask+0 S4 A32])
        (nil)))

(insn 83 39 90 2 arch/arm/kernel/smp.c:433 (set (reg/f:SI 9 r9 [200])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl]
;; live  kill	 14 [lr]

;; Pred edge  6 [83.3%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 90 83 41 3 86 "" [1 uses])

(note 41 90 46 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 46 41 47 3 arch/arm/kernel/smp.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:168 p ] [168])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 3 arch/arm/kernel/smp.c:427 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115d7180>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115d7180>)
        (nil)))

(insn 48 47 49 3 arch/arm/kernel/smp.c:427 (set (reg:SI 2 r2)
        (reg:SI 6 r6 [192])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 45 3 arch/arm/kernel/smp.c:427 (set (reg:SI 3 r3)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11683780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11683780>)
        (nil)))

(insn 45 49 50 3 arch/arm/kernel/smp.c:427 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 4 r4 [orig:166 i ] [166])) 167 {*arm_movsi_insn} (nil))

(call_insn 50 45 108 3 arch/arm/kernel/smp.c:427 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 108 50 116 3 arch/arm/kernel/smp.c:429 (set (reg/v:SI 10 sl [orig:167 cpu ] [167])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(jump_insn 116 108 117 3 arch/arm/kernel/smp.c:429 (set (pc)
        (label_ref 67)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 117 116 76)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  5 [91.0%] 
(code_label 76 117 54 4 85 "" [1 uses])

(note 54 76 57 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 57 54 60 4 NOTE_INSN_DELETED)

(note 60 57 65 4 NOTE_INSN_DELETED)

(insn 65 60 66 4 arch/arm/kernel/smp.c:430 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [180])
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 67 4 arch/arm/kernel/smp.c:430 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 67 66 68 5 84 "" [1 uses])

(note 68 67 69 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 69 68 72 5 NOTE_INSN_DELETED)

(insn 72 69 103 5 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 10 sl [orig:167 cpu ] [167])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 103 72 70 5 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 70 103 73 5 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 11 fp [orig:164 D.27263 ] [164])) 167 {*arm_movsi_insn} (nil))

(call_insn 73 70 74 5 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 74 73 106 5 include/linux/cpumask.h:174 (set (reg/v:SI 10 sl [orig:167 cpu ] [167])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 106 74 63 5 arch/arm/kernel/smp.c:430 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1167e540>)) 167 {*arm_movsi_insn} (nil))

(insn 63 106 58 5 arch/arm/kernel/smp.c:430 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:168 p ] [168])) 167 {*arm_movsi_insn} (nil))

(insn 58 63 78 5 arch/arm/kernel/smp.c:430 (set (reg:SI 2 r2 [177])
        (plus:SI (mult:SI (reg/v:SI 10 sl [orig:167 cpu ] [167])
                (const_int 8 [0x8]))
            (reg/v:SI 4 r4 [orig:166 i ] [166]))) 270 {*arith_shiftsi} (nil))

(insn 78 58 61 5 arch/arm/kernel/smp.c:429 discrim 1 (set (reg:SI 3 r3 [orig:184 nr_cpu_ids ] [184])
        (mem/c/i:SI (reg/f:SI 7 r7 [195]) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 7 r7 [195]) [0 nr_cpu_ids+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
            (nil))))

(insn 61 78 79 5 arch/arm/kernel/smp.c:430 (set (reg:SI 2 r2 [180])
        (plus:SI (mult:SI (reg:SI 2 r2 [177])
                (const_int 4 [0x4]))
            (reg/f:SI 8 r8 [196]))) 270 {*arith_shiftsi} (nil))

(insn 79 61 80 5 arch/arm/kernel/smp.c:429 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:167 cpu ] [167])
            (reg:SI 3 r3 [orig:184 nr_cpu_ids ] [184]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 81 5 arch/arm/kernel/smp.c:429 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [9.0%]  (fallthru,loop_exit)
(note 81 80 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 87 81 89 6 arch/arm/kernel/smp.c:433 (set (reg:SI 2 r2)
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg/v:SI 4 r4 [orig:166 i ] [166])
                    (const_int 4 [0x4]))
                (reg/f:SI 9 r9 [200])) [0 ipi_types S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 89 87 85 6 arch/arm/kernel/smp.c:426 (set (reg/v:SI 4 r4 [orig:166 i ] [166])
        (plus:SI (reg/v:SI 4 r4 [orig:166 i ] [166])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 85 89 86 6 arch/arm/kernel/smp.c:433 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:168 p ] [168])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 88 6 arch/arm/kernel/smp.c:433 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11689360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11689360>)
        (nil)))

(call_insn 88 86 91 6 arch/arm/kernel/smp.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 91 88 92 6 arch/arm/kernel/smp.c:426 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:166 i ] [166])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 118 6 arch/arm/kernel/smp.c:426 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8333 [0x208d])
        (nil)))
;; End of basic block 6 -> ( 3 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  3 [83.3%]  (dfs_back)
;; Succ edge  EXIT [16.7%]  (fallthru,loop_exit)

(note 118 92 120 NOTE_INSN_DELETED)

(note 120 118 0 NOTE_INSN_DELETED)


;; Function smp_cpus_done (smp_cpus_done)[0:1412] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 76.
verify found no changes in insn with uid = 76.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)

Pass 0 for finding allocno costs

    a16 (r172,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r171,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r169,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a13(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r169,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r171,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r172: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a13(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r169,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r171,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 59(l0): point = 0
   Insn 55(l0): point = 2
   Insn 58(l0): point = 4
   Insn 56(l0): point = 6
   Insn 57(l0): point = 8
   Insn 54(l0): point = 10
   Insn 53(l0): point = 12
   Insn 52(l0): point = 14
   Insn 49(l0): point = 16
   Insn 48(l0): point = 18
   Insn 47(l0): point = 20
   Insn 46(l0): point = 22
   Insn 45(l0): point = 24
   Insn 44(l0): point = 26
   Insn 43(l0): point = 28
   Insn 41(l0): point = 30
   Insn 40(l0): point = 32
   Insn 39(l0): point = 34
   Insn 37(l0): point = 36
   Insn 73(l0): point = 39
   Insn 16(l0): point = 41
   Insn 32(l0): point = 43
   Insn 7(l0): point = 45
   Insn 76(l0): point = 47
   Insn 15(l0): point = 49
   Insn 10(l0): point = 51
   Insn 14(l0): point = 53
   Insn 9(l0): point = 55
   Insn 35(l1): point = 58
   Insn 34(l1): point = 60
   Insn 33(l1): point = 62
   Insn 30(l1): point = 64
   Insn 29(l1): point = 66
   Insn 68(l1): point = 68
   Insn 26(l1): point = 70
   Insn 28(l1): point = 72
   Insn 22(l1): point = 75
   Insn 21(l1): point = 77
   Insn 19(l1): point = 79
   Insn 17(l1): point = 81
 a0(r167): [5..10]
 a1(r133): [7..30]
 a2(r157): [9..22]
 a3(r137): [21..55]
 a4(r152): [35..36]
 a5(r139): [37..45]
 a6(r172): [39..41]
 a7(r169): [39..43]
 a8(r141): [46..47]
 a9(r171): [39..53]
 a10(r138): [39..51]
 a11(r137): [58..83]
 a12(r138): [73..83] [58..64]
 a13(r139): [58..83]
 a14(r169): [58..83]
 a15(r171): [58..83]
 a16(r172): [58..83]
 a17(r150): [61..62]
 a18(r148): [76..77]
 a19(r146): [78..79]
 a20(r144): [80..81]
 Rebuilding regno allocno list for 150
 Rebuilding regno allocno list for 148
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 144
Compressing live ranges: from 84 to 31 - 36%
Ranges after the compression:
 a0(r167): [0..3]
 a1(r133): [1..6]
 a2(r157): [2..5]
 a3(r137): [19..30] [4..18]
 a4(r152): [7..8]
 a5(r139): [19..30] [9..13]
 a6(r172): [19..30] [10..11]
 a7(r169): [19..30] [10..12]
 a8(r141): [14..15]
 a9(r171): [19..30] [10..17]
 a10(r138): [23..30] [19..22] [10..16]
 a17(r150): [20..21]
 a18(r148): [24..25]
 a19(r146): [26..27]
 a20(r144): [28..29]
+++Allocating 120 bytes for conflict table (uncompressed size 168)
;; a0(r167,l0) conflicts: a1(r133,l0) a2(r157,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14
;; a1(r133,l0) conflicts: a0(r167,l0) a2(r157,l0) a3(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r157,l0) conflicts: a0(r167,l0) a1(r133,l0) a3(r137,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r137,l0) conflicts: a1(r133,l0) a2(r157,l0) a4(r152,l0) a5(r139,l0) a6(r172,l0) a7(r169,l0) a9(r171,l0) a10(r138,l0) a8(r141,l0) a17(r150,l0) a18(r148,l0) a19(r146,l0) a20(r144,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r152,l0) conflicts: a3(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r139,l0) conflicts: a3(r137,l0) a6(r172,l0) a7(r169,l0) a9(r171,l0) a10(r138,l0) a17(r150,l0) a18(r148,l0) a19(r146,l0) a20(r144,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r172,l0) conflicts: a3(r137,l0) a5(r139,l0) a7(r169,l0) a9(r171,l0) a10(r138,l0) a17(r150,l0) a18(r148,l0) a19(r146,l0) a20(r144,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r169,l0) conflicts: a3(r137,l0) a5(r139,l0) a6(r172,l0) a9(r171,l0) a10(r138,l0) a17(r150,l0) a18(r148,l0) a19(r146,l0) a20(r144,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a8(r141,l0) conflicts: a3(r137,l0) a9(r171,l0) a10(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r171,l0) conflicts: a3(r137,l0) a5(r139,l0) a6(r172,l0) a7(r169,l0) a10(r138,l0) a8(r141,l0) a17(r150,l0) a18(r148,l0) a19(r146,l0) a20(r144,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a10(r138,l0) conflicts: a3(r137,l0) a5(r139,l0) a6(r172,l0) a7(r169,l0) a9(r171,l0) a8(r141,l0) a17(r150,l0) a18(r148,l0) a19(r146,l0) a20(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r150,l0) conflicts: a3(r137,l0) a5(r139,l0) a6(r172,l0) a7(r169,l0) a9(r171,l0) a10(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r148,l0) conflicts: a3(r137,l0) a5(r139,l0) a6(r172,l0) a7(r169,l0) a9(r171,l0) a10(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r146,l0) conflicts: a3(r137,l0) a5(r139,l0) a6(r172,l0) a7(r169,l0) a9(r171,l0) a10(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a20(r144,l0) conflicts: a3(r137,l0) a5(r139,l0) a6(r172,l0) a7(r169,l0) a9(r171,l0) a10(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a19(r146)<->a20(r144)@125:shuffle
  regions=2, blocks=6, points=31
    allocnos=21, copies=1, conflicts=1, ranges=22

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r167 1r133 2r157 3r137 4r152 5r139 6r172 7r169 8r141 9r171 10r138 17r150 18r148 19r146 20r144
    modified regnos: 133 137 138 139 141 144 146 148 150 152 157 167 169 171 172
    border:
    Pressure: GENERAL_REGS=9
    Reg 167 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 157 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 4 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 172 of GENERAL_REGS has 4 regs less
    Reg 169 of GENERAL_REGS has 4 regs less
    Reg 171 of GENERAL_REGS has 4 regs less
      Pushing a20(r144,l0)
      Pushing a19(r146,l0)
      Pushing a18(r148,l0)
      Pushing a17(r150,l0)
      Pushing a8(r141,l0)
      Pushing a4(r152,l0)
      Pushing a10(r138,l0)
      Pushing a2(r157,l0)
      Pushing a0(r167,l0)
      Pushing a7(r169,l0)
      Pushing a6(r172,l0)
      Pushing a1(r133,l0)
      Pushing a5(r139,l0)
      Pushing a9(r171,l0)
      Pushing a3(r137,l0)
      Popping a3(r137,l0)  -- assign reg 4
      Popping a9(r171,l0)  -- assign reg 5
      Popping a5(r139,l0)  -- assign reg 6
      Popping a1(r133,l0)  -- assign reg 5
      Popping a6(r172,l0)  -- assign reg 7
      Popping a7(r169,l0)  -- assign reg 8
      Popping a0(r167,l0)  -- assign reg 3
      Popping a2(r157,l0)  -- assign reg 6
      Popping a10(r138,l0)  -- assign reg 0
      Popping a4(r152,l0)  -- assign reg 0
      Popping a8(r141,l0)  -- assign reg 3
      Popping a17(r150,l0)  -- assign reg 3
      Popping a18(r148,l0)  -- assign reg 3
      Popping a19(r146,l0)  -- assign reg 3
      Popping a20(r144,l0)  -- assign reg 3
Disposition:
    1:r133 l0     5    3:r137 l0     4   10:r138 l0     0    5:r139 l0     6
    8:r141 l0     3   20:r144 l0     3   19:r146 l0     3   18:r148 l0     3
   17:r150 l0     3    4:r152 l0     0    2:r157 l0     6    0:r167 l0     3
    7:r169 l0     8    9:r171 l0     5    6:r172 l0     7
New iteration of spill/restore move
+++Costs: overall -8250, reg -8250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 13, dead_or_set: 137
insn=14, live_throughout: 13, 137, dead_or_set: 171
insn=10, live_throughout: 13, 137, 171, dead_or_set: 138
insn=15, live_throughout: 13, 137, 138, dead_or_set: 171
insn=76, live_throughout: 13, 137, 138, 171, dead_or_set: 141
insn=7, live_throughout: 13, 137, 138, 171, dead_or_set: 139, 141
insn=32, live_throughout: 13, 137, 138, 139, 171, dead_or_set: 169
insn=16, live_throughout: 13, 137, 138, 139, 169, 171, dead_or_set: 172
insn=73, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 
insn=31, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 
insn=17, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 144
insn=19, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 144, 146
insn=21, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 146, 148
insn=22, live_throughout: 13, 138, 139, 169, 171, 172, dead_or_set: 137, 148
insn=23, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 
insn=28, live_throughout: 13, 137, 139, 169, 171, 172, dead_or_set: 2, 138
insn=26, live_throughout: 2, 13, 137, 139, 169, 171, 172, dead_or_set: 0
insn=68, live_throughout: 0, 2, 13, 137, 139, 169, 171, 172, dead_or_set: 1
insn=29, live_throughout: 13, 137, 139, 169, 171, 172, dead_or_set: 0, 1, 2, 14
insn=30, live_throughout: 13, 137, 139, 169, 171, 172, dead_or_set: 0, 138
insn=33, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 150
insn=34, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 150
insn=35, live_throughout: 13, 137, 138, 139, 169, 171, 172, dead_or_set: 
insn=37, live_throughout: 13, 137, dead_or_set: 139, 152
insn=39, live_throughout: 13, 137, dead_or_set: 0, 152
insn=40, live_throughout: 13, 137, dead_or_set: 0, 14
insn=41, live_throughout: 13, 137, dead_or_set: 0, 133
insn=43, live_throughout: 13, 133, 137, dead_or_set: 0
insn=44, live_throughout: 0, 13, 133, 137, dead_or_set: 1
insn=45, live_throughout: 13, 133, 137, dead_or_set: 0, 1, 14
insn=46, live_throughout: 13, 133, 137, dead_or_set: 0, 157
insn=47, live_throughout: 13, 133, 157, dead_or_set: 0, 137
insn=48, live_throughout: 0, 13, 133, 157, dead_or_set: 1
insn=49, live_throughout: 13, 133, 157, dead_or_set: 0, 1, 14
insn=52, live_throughout: 0, 13, 133, 157, dead_or_set: 1
insn=53, live_throughout: 13, 133, 157, dead_or_set: 0, 1, 14
insn=54, live_throughout: 13, 14, 133, 157, dead_or_set: 1, 167
insn=57, live_throughout: 13, 14, 133, 167, dead_or_set: 2, 157
insn=56, live_throughout: 2, 13, 14, 167, dead_or_set: 1, 133
insn=58, live_throughout: 1, 2, 13, 14, dead_or_set: 3, 167
insn=55, live_throughout: 1, 2, 3, 13, 14, dead_or_set: 0
insn=59, live_throughout: 13, 14, dead_or_set: 0, 1, 2, 3
init_insns for 141: (insn_list:REG_DEP_TRUE 76 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 16 (nil))
changing reg in insn 41
changing reg in insn 56
changing reg in insn 22
changing reg in insn 9
changing reg in insn 47
changing reg in insn 43
changing reg in insn 22
changing reg in insn 46
changing reg in insn 30
changing reg in insn 10
changing reg in insn 28
changing reg in insn 17
changing reg in insn 34
changing reg in insn 17
changing reg in insn 17
changing reg in insn 7
changing reg in insn 26
changing reg in insn 37
changing reg in insn 76
changing reg in insn 7
changing reg in insn 17
changing reg in insn 19
changing reg in insn 19
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 33
changing reg in insn 34
changing reg in insn 37
changing reg in insn 39
changing reg in insn 46
changing reg in insn 57
changing reg in insn 54
changing reg in insn 58
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 19
changing reg in insn 16
changing reg in insn 17
changing reg in insn 17
deleting insn with uid = 30.
deleting insn with uid = 58.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 59.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)


smp_cpus_done

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,12u,2d} r1={12d,6u} r2={9d,2u} r3={13d,6u} r4={2d,3u,1d} r5={3d,3u} r6={2d,3u} r7={1d,1u,1d} r8={1d,1u,1d} r12={7d} r13={1d,11u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={7d,1u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 793{738d,50u,5e} in 38{32 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 3 14 2 arch/arm/kernel/smp.c:342 (set (reg/v:SI 4 r4 [orig:137 bogosum ] [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 14 9 10 2 arch/arm/kernel/smp.c:345 (set (reg:SI 5 r5 [orig:171 __ptr ] [171])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)
        (nil)))

(insn 10 14 15 2 arch/arm/kernel/smp.c:344 (set (reg/v:SI 0 r0 [orig:138 cpu ] [138])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 15 10 76 2 arch/arm/kernel/smp.c:345 (set (reg:SI 5 r5 [orig:171 __ptr ] [171])
        (asm_operands:SI ("") ("=r") 0 [
                (reg:SI 5 r5 [orig:171 __ptr ] [171])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8533741)) -1 (nil))

(insn 76 15 7 2 arch/arm/kernel/smp.c:344 discrim 1 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn 7 76 32 2 arch/arm/kernel/smp.c:344 discrim 1 (set (reg/f:SI 6 r6 [orig:139 cpu_online_mask.405 ] [139])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [141]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn 32 7 16 2 arch/arm/kernel/smp.c:344 discrim 1 (set (reg/f:SI 8 r8 [169])
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)
        (nil)))

(insn 16 32 73 2 arch/arm/kernel/smp.c:345 (set (reg/f:SI 7 r7 [172])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(jump_insn 73 16 74 2 arch/arm/kernel/smp.c:344 (set (pc)
        (label_ref 23)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%] 

(barrier 74 73 31)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  4 [91.0%] 
(code_label 31 74 13 3 93 "" [1 uses])

(note 13 31 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 13 19 3 arch/arm/kernel/smp.c:345 (set (reg:SI 3 r3 [144])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 0 r0 [orig:138 cpu ] [138])
                    (const_int 4 [0x4]))
                (reg/f:SI 7 r7 [172])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 0 r0 [orig:138 cpu ] [138])
                    (const_int 4 [0x4]))
                (reg/f:SI 7 r7 [172])) [0 __per_cpu_offset S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 0 r0 [orig:138 cpu ] [138])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 19 17 21 3 arch/arm/kernel/smp.c:345 (set (reg:SI 3 r3 [146])
        (plus:SI (reg:SI 5 r5 [orig:171 __ptr ] [171])
            (reg:SI 3 r3 [144]))) 4 {*arm_addsi3} (nil))

(insn 21 19 22 3 arch/arm/kernel/smp.c:345 (set (reg:SI 3 r3 [orig:148 <variable>.loops_per_jiffy ] [148])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [146])
                (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/kernel/smp.c:345 (set (reg/v:SI 4 r4 [orig:137 bogosum ] [137])
        (plus:SI (reg/v:SI 4 r4 [orig:137 bogosum ] [137])
            (reg:SI 3 r3 [orig:148 <variable>.loops_per_jiffy ] [148]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 23 22 24 4 92 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 24 28 4 NOTE_INSN_DELETED)

(insn 28 25 26 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 0 r0 [orig:138 cpu ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 26 28 68 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [orig:139 cpu_online_mask.405 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 68 26 29 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 68 33 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 33 29 34 4 arch/arm/kernel/smp.c:344 discrim 1 (set (reg:SI 3 r3 [orig:150 nr_cpu_ids ] [150])
        (mem/c/i:SI (reg/f:SI 8 r8 [169]) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (reg/f:SI 8 r8 [169]) [0 nr_cpu_ids+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
            (nil))))

(insn 34 33 35 4 arch/arm/kernel/smp.c:344 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:138 cpu ] [138])
            (reg:SI 3 r3 [orig:150 nr_cpu_ids ] [150]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 4 arch/arm/kernel/smp.c:344 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 36 35 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 38 36 37 5 NOTE_INSN_DELETED)

(insn 37 38 39 5 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0 [orig:152 <variable>.bits ] [152])
        (mem/s/j:SI (reg/f:SI 6 r6 [orig:139 cpu_online_mask.405 ] [139]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 37 40 5 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0 [orig:152 <variable>.bits ] [152])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 40 39 41 5 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 43 5 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 5 r5 [orig:133 D.27281 ] [133])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 43 41 44 5 arch/arm/kernel/smp.c:347 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:137 bogosum ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 45 44 46 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 45 47 5 arch/arm/kernel/smp.c:347 (set (reg:SI 6 r6 [157])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 4 r4 [orig:137 bogosum ] [137])
            (const_int 5000 [0x1388]))
        (nil)))

(insn 47 46 48 5 arch/arm/kernel/smp.c:347 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:137 bogosum ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 49 48 52 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 52 49 53 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 53 52 54 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 54 53 57 5 arch/arm/kernel/smp.c:347 (set (reg:SI 3 r3 [orig:167+4 ] [167])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 57 54 56 5 arch/arm/kernel/smp.c:347 (set (reg:SI 2 r2)
        (reg:SI 6 r6 [157])) 167 {*arm_movsi_insn} (nil))

(insn 56 57 55 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [orig:133 D.27281 ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 55 56 59 5 arch/arm/kernel/smp.c:347 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11693120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11693120>)
        (nil)))

(call_insn/j 59 55 60 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 60 59 77)

(note 77 60 0 NOTE_INSN_DELETED)


;; Function do_local_timer (do_local_timer)[0:1421]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 73.
verify found no changes in insn with uid = 73.
deleting insn with uid = 55.
scanning new insn with uid = 74.
verify found no changes in insn with uid = 74.
deleting insn with uid = 9.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a0 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r175,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a6(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r148,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a12(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r178: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r175,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a6(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r148,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a12(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 60(l0): point = 0
   Insn 59(l0): point = 2
   Insn 73(l0): point = 4
   Insn 58(l0): point = 6
   Insn 53(l0): point = 8
   Insn 52(l0): point = 10
   Insn 69(l0): point = 12
   Insn 68(l0): point = 14
   Insn 47(l0): point = 17
   Insn 46(l0): point = 19
   Insn 45(l0): point = 21
   Insn 44(l0): point = 23
   Insn 37(l0): point = 25
   Insn 34(l0): point = 27
   Insn 31(l0): point = 30
   Insn 30(l0): point = 32
   Insn 28(l0): point = 34
   Insn 27(l0): point = 36
   Insn 23(l0): point = 38
   Insn 14(l0): point = 40
   Insn 13(l0): point = 42
   Insn 74(l0): point = 44
   Insn 12(l0): point = 46
   Insn 7(l0): point = 48
   Insn 6(l0): point = 50
   Insn 71(l0): point = 52
   Insn 70(l0): point = 54
 a0(r178): [1..2]
 a1(r134): [1..10]
 a2(r142): [1..40]
 a3(r174): [3..4]
 a4(r177): [3..6]
 a5(r175): [7..14]
 a6(r163): [20..25]
 a7(r171): [20..21]
 a8(r170): [22..23]
 a9(r160): [26..27]
 a10(r144): [26..36]
 a11(r148): [37..54]
 a12(r151): [39..42]
 a13(r137): [39..50]
 a14(r147): [43..44]
 a15(r150): [43..46]
Compressing live ranges: from 57 to 25 - 43%
Ranges after the compression:
 a0(r178): [0..1]
 a1(r134): [0..6]
 a2(r142): [0..18]
 a3(r174): [2..3]
 a4(r177): [2..4]
 a5(r175): [5..7]
 a6(r163): [8..12]
 a7(r171): [8..9]
 a8(r170): [10..11]
 a9(r160): [13..14]
 a10(r144): [13..15]
 a11(r148): [16..24]
 a12(r151): [17..19]
 a13(r137): [17..23]
 a14(r147): [20..21]
 a15(r150): [20..22]
+++Allocating 128 bytes for conflict table (uncompressed size 128)
;; a0(r178,l0) conflicts: a1(r134,l0) a2(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts: a0(r178,l0) a2(r142,l0) a3(r174,l0) a4(r177,l0) a5(r175,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r142,l0) conflicts: a0(r178,l0) a1(r134,l0) a3(r174,l0) a4(r177,l0) a5(r175,l0) a7(r171,l0) a6(r163,l0) a8(r170,l0) a9(r160,l0) a10(r144,l0) a11(r148,l0) a12(r151,l0) a13(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r174,l0) conflicts: a1(r134,l0) a2(r142,l0) a4(r177,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r177,l0) conflicts: a1(r134,l0) a2(r142,l0) a3(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r175,l0) conflicts: a1(r134,l0) a2(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r163,l0) conflicts: a2(r142,l0) a7(r171,l0) a8(r170,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r171,l0) conflicts: a2(r142,l0) a6(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r170,l0) conflicts: a2(r142,l0) a6(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r160,l0) conflicts: a2(r142,l0) a10(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r144,l0) conflicts: a2(r142,l0) a9(r160,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a11(r148,l0) conflicts: a2(r142,l0) a12(r151,l0) a13(r137,l0) a14(r147,l0) a15(r150,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a12(r151,l0) conflicts: a2(r142,l0) a11(r148,l0) a13(r137,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a13(r137,l0) conflicts: a2(r142,l0) a11(r148,l0) a12(r151,l0) a14(r147,l0) a15(r150,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a14(r147,l0) conflicts: a11(r148,l0) a13(r137,l0) a15(r150,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a15(r150,l0) conflicts: a11(r148,l0) a13(r137,l0) a14(r147,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  cp0:a6(r163)<->a9(r160)@125:shuffle
  cp1:a6(r163)<->a10(r144)@125:shuffle
  cp2:a7(r171)<->a8(r170)@125:shuffle
  regions=1, blocks=5, points=25
    allocnos=16, copies=3, conflicts=0, ranges=16

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r178 1r134 2r142 3r174 4r177 5r175 6r163 7r171 8r170 9r160 10r144 11r148 12r151 13r137 14r147 15r150
    modified regnos: 134 137 142 144 147 148 150 151 160 163 170 171 174 175 177 178
    border:
    Pressure: GENERAL_REGS=5
    Reg 178 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
    Reg 174 of GENERAL_REGS has 1 regs less
    Reg 177 of GENERAL_REGS has 1 regs less
    Reg 175 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
      Pushing a9(r160,l0)
      Pushing a8(r170,l0)
      Pushing a7(r171,l0)
      Pushing a6(r163,l0)
      Pushing a15(r150,l0)
      Pushing a14(r147,l0)
      Pushing a4(r177,l0)
      Pushing a3(r174,l0)
      Pushing a0(r178,l0)
      Pushing a12(r151,l0)
      Pushing a5(r175,l0)
      Pushing a1(r134,l0)
      Pushing a13(r137,l0)
      Pushing a11(r148,l0)
      Pushing a10(r144,l0)
      Pushing a2(r142,l0)
      Popping a2(r142,l0)  -- assign reg 4
      Popping a10(r144,l0)  -- assign reg 5
      Popping a11(r148,l0)  -- assign reg 3
      Popping a13(r137,l0)  -- assign reg 2
      Popping a1(r134,l0)  -- assign reg 3
      Popping a5(r175,l0)  -- assign reg 2
      Popping a12(r151,l0)  -- assign reg 1
      Popping a0(r178,l0)  -- assign reg 2
      Popping a3(r174,l0)  -- assign reg 2
      Popping a4(r177,l0)  -- assign reg 1
      Popping a14(r147,l0)  -- assign reg 1
      Popping a15(r150,l0)  -- assign reg 12
      Popping a6(r163,l0)  -- assign reg 5
      Popping a7(r171,l0)  -- assign reg 3
      Popping a8(r170,l0)  -- assign reg 3
      Popping a9(r160,l0)  -- assign reg 3
Disposition:
    1:r134 l0     3   13:r137 l0     2    2:r142 l0     4   10:r144 l0     5
   14:r147 l0     1   11:r148 l0     3   15:r150 l0    12   12:r151 l0     1
    9:r160 l0     3    6:r163 l0     5    8:r170 l0     3    7:r171 l0     3
    3:r174 l0     2    5:r175 l0     2    4:r177 l0     1    0:r178 l0     2
New iteration of spill/restore move
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=70, live_throughout: 0, 13, dead_or_set: 148
insn=71, live_throughout: 0, 13, dead_or_set: 148
insn=6, live_throughout: 0, 13, 148, dead_or_set: 137
insn=7, live_throughout: 0, 13, 148, dead_or_set: 137
insn=12, live_throughout: 0, 13, 137, 148, dead_or_set: 150
insn=74, live_throughout: 0, 13, 137, 148, 150, dead_or_set: 147
insn=13, live_throughout: 0, 13, 137, 148, dead_or_set: 147, 150, 151
insn=14, live_throughout: 0, 13, 137, 148, 151, dead_or_set: 142
insn=23, live_throughout: 13, 142, 148, dead_or_set: 0, 137, 151
insn=27, live_throughout: 13, 142, dead_or_set: 144, 148
insn=28, live_throughout: 13, 142, 144, dead_or_set: 0, 14
insn=30, live_throughout: 13, 14, 142, 144, dead_or_set: 0
insn=31, live_throughout: 13, 14, 142, 144, dead_or_set: 
insn=34, live_throughout: 13, 142, 144, dead_or_set: 160
insn=37, live_throughout: 13, 142, dead_or_set: 144, 160, 163
insn=44, live_throughout: 13, 142, 163, dead_or_set: 170
insn=45, live_throughout: 13, 142, 163, dead_or_set: 170, 171
insn=46, live_throughout: 13, 142, dead_or_set: 163, 171
insn=47, live_throughout: 13, 142, dead_or_set: 14
insn=48, live_throughout: 13, 14, 142, dead_or_set: 
insn=68, live_throughout: 13, 14, 142, dead_or_set: 175
insn=69, live_throughout: 13, 14, 142, dead_or_set: 175
insn=52, live_throughout: 13, 14, 142, 175, dead_or_set: 134
insn=53, live_throughout: 13, 14, 142, 175, dead_or_set: 134
insn=58, live_throughout: 13, 14, 134, 142, dead_or_set: 175, 177
insn=73, live_throughout: 13, 14, 134, 142, 177, dead_or_set: 174
insn=59, live_throughout: 13, 14, 134, 142, dead_or_set: 174, 177, 178
insn=60, live_throughout: 13, 14, dead_or_set: 134, 142, 178
init_insns for 147: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 73 (nil))
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 60
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 23
changing reg in insn 14
changing reg in insn 14
changing reg in insn 60
changing reg in insn 27
changing reg in insn 37
changing reg in insn 74
changing reg in insn 13
changing reg in insn 71
changing reg in insn 70
changing reg in insn 71
changing reg in insn 27
changing reg in insn 12
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 13
changing reg in insn 23
changing reg in insn 14
changing reg in insn 34
changing reg in insn 37
changing reg in insn 37
changing reg in insn 46
changing reg in insn 44
changing reg in insn 45
changing reg in insn 44
changing reg in insn 44
changing reg in insn 45
changing reg in insn 45
changing reg in insn 46
changing reg in insn 73
changing reg in insn 59
changing reg in insn 69
changing reg in insn 68
changing reg in insn 69
changing reg in insn 58
changing reg in insn 58
changing reg in insn 59
changing reg in insn 59
changing reg in insn 59
changing reg in insn 60
Spilling for insn 70.
Using reg 2 for reload 0
Spilling for insn 23.
Spilling for insn 46.
Spilling for insn 68.
Using reg 3 for reload 0
Spilling for insn 60.

Reloads for insn # 70
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 23
Reload 0: reload_out (SI) = (mem/f:SI (plus:SI (reg/v:SI 2 r2 [orig:137 __ptr ] [137])
                                                        (reg:SI 1 r1 [151])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f:SI (plus:SI (reg/v:SI 2 r2 [orig:137 __ptr ] [137])
                                                        (reg:SI 1 r1 [151])) [0 S4 A32])

Reloads for insn # 46
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 5 r5 [163])
                                                        (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 5 r5 [163])
                                                        (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])

Reloads for insn # 68
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 60
Reload 0: reload_out (SI) = (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
                                                        (reg:SI 2 r2 [178])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
                                                        (reg:SI 2 r2 [178])) [0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


do_local_timer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={6d,4u,1d} r2={10d,8u} r3={11d,9u,1d} r4={1d,1u} r5={2d,3u,2d} r12={4d,1u,1d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 307{264d,38u,5e} in 29{27 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 29 2 NOTE_INSN_DELETED)

(note 29 10 76 2 NOTE_INSN_DELETED)

(insn 76 29 70 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 70 76 71 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 3 r3 [148])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 71 70 6 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 3 r3 [148])
        (and:SI (reg:SI 3 r3 [148])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 6 71 7 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 2 r2 [orig:137 __ptr ] [137])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)
        (nil)))

(insn 7 6 12 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 2 r2 [orig:137 __ptr ] [137])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 2 r2 [orig:137 __ptr ] [137])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579566)) -1 (nil))

(insn 12 7 74 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 12 ip [orig:150 <variable>.cpu ] [150])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [148])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 3 r3 [148])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 74 12 13 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/f:SI 1 r1 [147])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 13 74 14 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 1 r1 [151])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 12 ip [orig:150 <variable>.cpu ] [150])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [147])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 12 ip [orig:150 <variable>.cpu ] [150])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 14 13 23 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v/f:SI 4 r4 [orig:142 old_regs ] [142])
        (mem/f:SI (plus:SI (reg/v:SI 2 r2 [orig:137 __ptr ] [137])
                (reg:SI 1 r1 [151])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 14 27 2 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 2 r2 [orig:137 __ptr ] [137])
                (reg:SI 1 r1 [151])) [0 S4 A32])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 27 23 28 2 arch/arm/kernel/smp.c:469 (set (reg:SI 5 r5 [orig:144 D.26224 ] [144])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [148])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 30 2 arch/arm/kernel/smp.c:471 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("twd_timer_ack") [flags 0x41] <function_decl 0x11513600 twd_timer_ack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 30 28 31 2 arch/arm/kernel/smp.c:471 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 2 arch/arm/kernel/smp.c:471 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 32 31 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 36 32 34 3 NOTE_INSN_DELETED)

(insn 34 36 37 3 arch/arm/kernel/smp.c:472 (set (reg/f:SI 3 r3 [160])
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)
        (nil)))

(insn 37 34 44 3 arch/arm/kernel/smp.c:472 (set (reg:SI 5 r5 [163])
        (plus:SI (mult:SI (reg:SI 5 r5 [orig:144 D.26224 ] [144])
                (const_int 32 [0x20]))
            (reg/f:SI 3 r3 [160]))) 270 {*arith_shiftsi} (nil))

(insn 44 37 45 3 arch/arm/kernel/smp.c:472 (set (reg:SI 3 r3 [orig:170 <variable>.local_timer_irqs ] [170])
        (mem/s/j:SI (plus:SI (reg:SI 5 r5 [163])
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 5 r5 [163])
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])
        (nil)))

(insn 45 44 46 3 arch/arm/kernel/smp.c:472 (set (reg:SI 3 r3 [171])
        (plus:SI (reg:SI 3 r3 [orig:170 <variable>.local_timer_irqs ] [170])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 5 r5 [163])
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])
        (nil)))

(insn 46 45 47 3 arch/arm/kernel/smp.c:472 (set (mem/s/j:SI (plus:SI (reg:SI 5 r5 [163])
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])
        (reg:SI 3 r3 [171])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 3 arch/arm/kernel/smp.c:473 (parallel [
            (call (mem:SI (symbol_ref:SI ("ipi_timer") [flags 0x3] <function_decl 0x1153a600 ipi_timer>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [61.0%] 
(code_label 48 47 49 4 98 "" [1 uses])

(note 49 48 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 56 49 77 4 NOTE_INSN_DELETED)

(insn 77 56 68 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 68 77 69 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 2 r2 [175])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 69 68 52 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 2 r2 [175])
        (and:SI (reg:SI 2 r2 [175])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 52 69 53 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)
        (nil)))

(insn 53 52 58 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579572)) -1 (nil))

(insn 58 53 73 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 1 r1 [orig:177 <variable>.cpu ] [177])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [175])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 73 58 59 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/f:SI 2 r2 [174])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 59 73 60 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 2 r2 [178])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:177 <variable>.cpu ] [177])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [174])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:177 <variable>.cpu ] [177])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 60 59 72 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
                (reg:SI 2 r2 [178])) [0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:142 old_regs ] [142])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 72 60 75 NOTE_INSN_DELETED)

(note 75 72 0 NOTE_INSN_DELETED)


;; Function smp_prepare_cpus (smp_prepare_cpus)[0:1414] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 59.
verify found no changes in insn with uid = 59.
deleting insn with uid = 16.
scanning new insn with uid = 60.
verify found no changes in insn with uid = 60.
deleting insn with uid = 24.
scanning new insn with uid = 61.
verify found no changes in insn with uid = 61.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a3 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r144,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a11(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r144,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a11(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 45(l0): point = 1
   Insn 44(l0): point = 3
   Insn 43(l0): point = 5
   Insn 42(l0): point = 7
   Insn 40(l0): point = 9
   Insn 38(l0): point = 12
   Insn 26(l0): point = 14
   Insn 22(l0): point = 16
   Insn 20(l0): point = 18
   Insn 59(l0): point = 20
   Insn 15(l0): point = 22
   Insn 25(l0): point = 24
   Insn 60(l0): point = 26
   Insn 37(l0): point = 28
   Insn 19(l0): point = 30
   Insn 14(l0): point = 32
   Insn 27(l0): point = 34
   Insn 57(l0): point = 36
   Insn 56(l0): point = 38
   Insn 12(l0): point = 40
   Insn 11(l0): point = 42
   Insn 10(l0): point = 44
   Insn 8(l0): point = 46
   Insn 7(l0): point = 48
   Insn 61(l0): point = 50
   Insn 2(l0): point = 52
 a0(r133): [4..34]
 a1(r138): [8..48]
 a2(r149): [15..16]
 a3(r152): [15..24]
 a4(r147): [17..18]
 a5(r134): [17..32]
 a6(r143): [19..20]
 a7(r146): [19..30]
 a8(r151): [25..26]
 a9(r136): [29..40]
 a10(r144): [31..38]
 a11(r137): [35..52]
 a12(r141): [45..46]
 a13(r139): [49..50]
Compressing live ranges: from 55 to 25 - 45%
Ranges after the compression:
 a0(r133): [0..15]
 a1(r138): [1..21]
 a2(r149): [2..3]
 a3(r152): [2..8]
 a4(r147): [4..5]
 a5(r134): [4..14]
 a6(r143): [6..7]
 a7(r146): [6..12]
 a8(r151): [9..10]
 a9(r136): [11..18]
 a10(r144): [13..17]
 a11(r137): [16..24]
 a12(r141): [19..20]
 a13(r139): [22..23]
+++Allocating 112 bytes for conflict table (uncompressed size 112)
;; a0(r133,l0) conflicts: a1(r138,l0) a2(r149,l0) a3(r152,l0) a4(r147,l0) a5(r134,l0) a6(r143,l0) a7(r146,l0) a8(r151,l0) a9(r136,l0) a10(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r138,l0) conflicts: a0(r133,l0) a2(r149,l0) a3(r152,l0) a4(r147,l0) a5(r134,l0) a6(r143,l0) a7(r146,l0) a8(r151,l0) a9(r136,l0) a10(r144,l0) a11(r137,l0) a12(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r149,l0) conflicts: a0(r133,l0) a1(r138,l0) a3(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r152,l0) conflicts: a0(r133,l0) a1(r138,l0) a2(r149,l0) a4(r147,l0) a5(r134,l0) a6(r143,l0) a7(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r147,l0) conflicts: a0(r133,l0) a1(r138,l0) a3(r152,l0) a5(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r134,l0) conflicts: a0(r133,l0) a1(r138,l0) a3(r152,l0) a4(r147,l0) a6(r143,l0) a7(r146,l0) a8(r151,l0) a9(r136,l0) a10(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r143,l0) conflicts: a0(r133,l0) a1(r138,l0) a3(r152,l0) a5(r134,l0) a7(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r146,l0) conflicts: a0(r133,l0) a1(r138,l0) a3(r152,l0) a5(r134,l0) a6(r143,l0) a8(r151,l0) a9(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r151,l0) conflicts: a0(r133,l0) a1(r138,l0) a5(r134,l0) a7(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r136,l0) conflicts: a0(r133,l0) a1(r138,l0) a5(r134,l0) a7(r146,l0) a10(r144,l0) a11(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r144,l0) conflicts: a0(r133,l0) a1(r138,l0) a5(r134,l0) a9(r136,l0) a11(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r137,l0) conflicts: a1(r138,l0) a9(r136,l0) a10(r144,l0) a12(r141,l0) a13(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a12(r141,l0) conflicts: a1(r138,l0) a11(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r139,l0) conflicts: a11(r137,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r133)<->a11(r137)@125:shuffle
  cp1:a2(r149)<->a5(r134)@125:shuffle
  cp2:a2(r149)<->a4(r147)@125:shuffle
  regions=1, blocks=5, points=25
    allocnos=14, copies=3, conflicts=1, ranges=14

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r133 1r138 2r149 3r152 4r147 5r134 6r143 7r146 8r151 9r136 10r144 11r137 12r141 13r139
    modified regnos: 133 134 136 137 138 139 141 143 144 146 147 149 151 152
    border:
    Pressure: GENERAL_REGS=7
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
      Pushing a13(r139,l0)
      Pushing a12(r141,l0)
      Pushing a8(r151,l0)
      Pushing a7(r146,l0)
      Pushing a6(r143,l0)
      Pushing a4(r147,l0)
      Pushing a3(r152,l0)
      Pushing a2(r149,l0)
      Pushing a9(r136,l0)
      Pushing a10(r144,l0)
      Pushing a5(r134,l0)
      Pushing a11(r137,l0)
      Pushing a1(r138,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 4
      Popping a1(r138,l0)  -- assign reg 5
      Popping a11(r137,l0)  -- assign reg 4
      Popping a5(r134,l0)  -- assign reg 3
      Popping a10(r144,l0)  -- assign reg 2
      Popping a9(r136,l0)  -- assign reg 0
      Popping a2(r149,l0)  -- assign reg 3
      Popping a3(r152,l0)  -- assign reg 2
      Popping a4(r147,l0)  -- assign reg 1
      Popping a6(r143,l0)  -- assign reg 1
      Popping a7(r146,l0)  -- assign reg 12
      Popping a8(r151,l0)  -- assign reg 2
      Popping a12(r141,l0)  -- assign reg 0
      Popping a13(r139,l0)  -- assign reg 3
Disposition:
    0:r133 l0     4    5:r134 l0     3    9:r136 l0     0   11:r137 l0     4
    1:r138 l0     5   13:r139 l0     3   12:r141 l0     0    6:r143 l0     1
   10:r144 l0     2    7:r146 l0    12    4:r147 l0     1    2:r149 l0     3
    8:r151 l0     2    3:r152 l0     2
New iteration of spill/restore move
+++Costs: overall -2250, reg -2250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 137
insn=61, live_throughout: 13, 137, dead_or_set: 139
insn=7, live_throughout: 13, 137, dead_or_set: 138, 139
insn=8, live_throughout: 13, 137, 138, dead_or_set: 141
insn=10, live_throughout: 13, 137, 138, dead_or_set: 0, 141
insn=11, live_throughout: 13, 137, 138, dead_or_set: 0, 14
insn=12, live_throughout: 13, 14, 137, 138, dead_or_set: 0, 136
insn=56, live_throughout: 13, 14, 136, 137, 138, dead_or_set: 144
insn=57, live_throughout: 13, 14, 136, 137, 138, dead_or_set: 144
insn=27, live_throughout: 13, 14, 136, 138, 144, dead_or_set: 133, 137
insn=14, live_throughout: 13, 14, 133, 136, 138, 144, dead_or_set: 134
insn=19, live_throughout: 13, 14, 133, 134, 136, 138, dead_or_set: 144, 146
insn=37, live_throughout: 13, 14, 133, 134, 138, 146, dead_or_set: 136
insn=60, live_throughout: 13, 14, 24, 133, 134, 138, 146, dead_or_set: 151
insn=25, live_throughout: 13, 14, 24, 133, 134, 138, 146, dead_or_set: 151, 152
insn=15, live_throughout: 13, 14, 24, 133, 138, 146, 152, dead_or_set: 134
insn=59, live_throughout: 13, 14, 24, 133, 134, 138, 146, 152, dead_or_set: 143
insn=20, live_throughout: 13, 14, 24, 133, 134, 138, 152, dead_or_set: 143, 146, 147
insn=22, live_throughout: 13, 14, 24, 133, 138, 152, dead_or_set: 134, 147, 149
insn=26, live_throughout: 13, 14, 24, 133, 138, dead_or_set: 149, 152
insn=38, live_throughout: 13, 14, 133, 138, dead_or_set: 
insn=40, live_throughout: 13, 133, 138, dead_or_set: 14
insn=42, live_throughout: 13, 133, dead_or_set: 0, 138
insn=43, live_throughout: 13, 133, dead_or_set: 0, 14
insn=44, live_throughout: 13, 14, dead_or_set: 0, 133
insn=45, live_throughout: 13, 14, dead_or_set: 0
insn=52, live_throughout: 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 61 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 59 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 60 (nil))
changing reg in insn 27
changing reg in insn 37
changing reg in insn 44
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 22
changing reg in insn 12
changing reg in insn 37
changing reg in insn 27
changing reg in insn 2
changing reg in insn 27
changing reg in insn 7
changing reg in insn 42
changing reg in insn 8
changing reg in insn 8
changing reg in insn 61
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 59
changing reg in insn 20
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 20
changing reg in insn 20
changing reg in insn 22
changing reg in insn 22
changing reg in insn 26
changing reg in insn 60
changing reg in insn 25
changing reg in insn 25
changing reg in insn 26
Spilling for insn 56.
Using reg 3 for reload 0
Spilling for insn 26.

Reloads for insn # 56
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 26
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [149])
                                                        (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [149])
                                                        (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])
deleting insn with uid = 12.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


smp_prepare_cpus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,7u} r1={7d,2u} r2={9d,4u} r3={10d,5u} r4={2d,3u} r5={1d,2u,1d} r12={6d,1u,1d} r13={1d,9u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 532{495d,35u,2e} in 26{22 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 17 2 NOTE_INSN_DELETED)

(note 17 9 28 2 NOTE_INSN_DELETED)

(note 28 17 29 2 NOTE_INSN_DELETED)

(note 29 28 31 2 NOTE_INSN_DELETED)

(note 31 29 32 2 NOTE_INSN_DELETED)

(note 32 31 34 2 NOTE_INSN_DELETED)

(note 34 32 35 2 NOTE_INSN_DELETED)

(note 35 34 36 2 NOTE_INSN_DELETED)

(note 36 35 2 2 NOTE_INSN_DELETED)

(insn 2 36 61 2 arch/arm/kernel/smp.c:362 (set (reg/v:SI 4 r4 [orig:137 max_cpus ] [137])
        (reg:SI 0 r0 [ max_cpus ])) 167 {*arm_movsi_insn} (nil))

(insn 61 2 7 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>)
        (nil)))

(insn 7 61 8 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg/f:SI 5 r5 [orig:138 cpu_possible_mask ] [138])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [139]) [0 cpu_possible_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>) [0 cpu_possible_mask+0 S4 A32])
        (nil)))

(insn 8 7 10 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0 [orig:141 <variable>.bits ] [141])
        (mem/s/j:SI (reg/f:SI 5 r5 [orig:138 cpu_possible_mask ] [138]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/f:SI 5 r5 [orig:138 cpu_possible_mask ] [138]) [0 <variable>.bits+0 S4 A32])
        (nil)))

(insn 10 8 11 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0 [orig:141 <variable>.bits ] [141])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 11 10 63 2 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 63 11 56 2 arch/arm/kernel/smp.c:271 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 56 63 57 2 arch/arm/kernel/smp.c:271 (set (reg:SI 2 r2 [144])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 27 2 arch/arm/kernel/smp.c:271 (set (reg:SI 2 r2 [144])
        (and:SI (reg:SI 2 r2 [144])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 57 14 2 arch/arm/kernel/smp.c:271 (parallel [
            (set (reg/v:SI 4 r4 [orig:133 max_cpus.964 ] [133])
                (umin:SI (reg:SI 0 r0 [orig:136 D.27453 ] [136])
                    (reg/v:SI 4 r4 [orig:137 max_cpus ] [137])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 14 27 19 2 arch/arm/kernel/smp.c:269 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)
        (nil)))

(insn 19 14 37 2 arch/arm/kernel/smp.c:271 (set (reg:SI 12 ip [orig:146 <variable>.cpu ] [146])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [144])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 19 60 2 arch/arm/kernel/smp.c:372 (set (reg:CC_DGTU 24 cc)
        (compare:CC_DGTU (and:SI (ne:SI (reg/v:SI 4 r4 [orig:133 max_cpus.964 ] [133])
                    (const_int 0 [0x0]))
                (gtu:SI (reg:SI 0 r0 [orig:136 D.27453 ] [136])
                    (const_int 1 [0x1])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 60 37 25 2 arch/arm/kernel/smp.c:271 (set (reg/f:SI 2 r2 [151])
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>)
        (nil)))

(insn 25 60 15 2 arch/arm/kernel/smp.c:271 (set (reg:SI 2 r2 [orig:152 loops_per_jiffy ] [152])
        (mem/c/i:SI (reg/f:SI 2 r2 [151]) [0 loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>) [0 loops_per_jiffy+0 S4 A32])
        (nil)))

(insn 15 25 59 2 arch/arm/kernel/smp.c:269 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8524033)) -1 (nil))

(insn 59 15 20 2 arch/arm/kernel/smp.c:271 (set (reg/f:SI 1 r1 [143])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 20 59 22 2 arch/arm/kernel/smp.c:271 (set (reg:SI 1 r1 [147])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 12 ip [orig:146 <variable>.cpu ] [146])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [143])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 12 ip [orig:146 <variable>.cpu ] [146])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 22 20 26 2 arch/arm/kernel/smp.c:271 (set (reg:SI 3 r3 [149])
        (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
            (reg:SI 1 r1 [147]))) 4 {*arm_addsi3} (nil))

(insn 26 22 38 2 arch/arm/kernel/smp.c:271 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [149])
                (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])
        (reg:SI 2 r2 [orig:152 loops_per_jiffy ] [152])) 167 {*arm_movsi_insn} (nil))

(jump_insn 38 26 39 2 arch/arm/kernel/smp.c:372 (set (pc)
        (if_then_else (eq (reg:CC_DGTU 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 39 38 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 40 39 42 3 arch/arm/kernel/smp.c:377 (parallel [
            (call (mem:SI (symbol_ref:SI ("percpu_timer_setup") [flags 0x3] <function_decl 0x11513500 percpu_timer_setup>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 42 40 43 3 arch/arm/kernel/smp.c:385 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [orig:138 cpu_possible_mask ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 3 arch/arm/kernel/smp.c:385 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_cpu_present") [flags 0x41] <function_decl 0x10c85700 init_cpu_present>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 43 45 3 arch/arm/kernel/smp.c:391 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:133 max_cpus.964 ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 45 44 46 3 arch/arm/kernel/smp.c:391 (parallel [
            (call (mem:SI (symbol_ref:SI ("platform_smp_prepare_cpus") [flags 0x41] <function_decl 0x10c9f200 platform_smp_prepare_cpus>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 46 45 52)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 52 46 55 4 104 "" [1 uses])

(note 55 52 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 58 55 62 NOTE_INSN_DELETED)

(note 62 58 0 NOTE_INSN_DELETED)


;; Function secondary_start_kernel (secondary_start_kernel)[0:1411] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 127.
verify found no changes in insn with uid = 127.
deleting insn with uid = 99.
scanning new insn with uid = 128.
verify found no changes in insn with uid = 128.
deleting insn with uid = 98.
scanning new insn with uid = 129.
verify found no changes in insn with uid = 129.
deleting insn with uid = 90.
scanning new insn with uid = 130.
verify found no changes in insn with uid = 130.
deleting insn with uid = 76.
scanning new insn with uid = 131.
verify found no changes in insn with uid = 131.
deleting insn with uid = 71.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 19 (  1.9)

Pass 0 for finding allocno costs

    a31 (r189,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a9(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a17(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a21(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a25(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r147,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a27(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r189: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a9(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a17(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a21(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a25(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r147,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a27(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 109(l0): point = 0
   Insn 108(l0): point = 2
   Insn 107(l0): point = 4
   Insn 121(l0): point = 7
   Insn 100(l0): point = 9
   Insn 127(l0): point = 11
   Insn 128(l0): point = 13
   Insn 91(l0): point = 15
   Insn 129(l0): point = 17
   Insn 87(l0): point = 19
   Insn 89(l0): point = 21
   Insn 86(l0): point = 23
   Insn 84(l0): point = 25
   Insn 82(l0): point = 27
   Insn 81(l0): point = 29
   Insn 78(l0): point = 31
   Insn 74(l0): point = 33
   Insn 70(l0): point = 35
   Insn 77(l0): point = 37
   Insn 130(l0): point = 39
   Insn 72(l0): point = 41
   Insn 131(l0): point = 43
   Insn 80(l0): point = 45
   Insn 69(l0): point = 47
   Insn 79(l0): point = 49
   Insn 68(l0): point = 51
   Insn 67(l0): point = 53
   Insn 66(l0): point = 55
   Insn 65(l0): point = 57
   Insn 64(l0): point = 59
   Insn 63(l0): point = 61
   Insn 62(l0): point = 63
   Insn 61(l0): point = 65
   Insn 60(l0): point = 67
   Insn 124(l0): point = 69
   Insn 123(l0): point = 71
   Insn 56(l0): point = 73
   Insn 55(l0): point = 75
   Insn 54(l0): point = 77
   Insn 51(l0): point = 80
   Insn 50(l0): point = 82
   Insn 48(l0): point = 85
   Insn 47(l0): point = 87
   Insn 43(l0): point = 90
   Insn 42(l0): point = 92
   Insn 40(l0): point = 95
   Insn 39(l0): point = 97
   Insn 37(l0): point = 99
   Insn 36(l0): point = 101
   Insn 35(l0): point = 103
   Insn 34(l0): point = 105
   Insn 32(l0): point = 107
   Insn 33(l0): point = 109
   Insn 29(l0): point = 111
   Insn 27(l0): point = 113
   Insn 22(l0): point = 115
   Insn 26(l0): point = 117
   Insn 25(l0): point = 119
   Insn 20(l0): point = 121
   Insn 16(l0): point = 123
   Insn 14(l0): point = 127
   Insn 12(l0): point = 129
   Insn 11(l0): point = 131
   Insn 8(l0): point = 133
   Insn 10(l0): point = 135
   Insn 126(l0): point = 137
   Insn 13(l0): point = 139
   Insn 125(l0): point = 141
   Insn 105(l1): point = 144
   Insn 104(l1): point = 146
   Insn 101(l1): point = 148
   Insn 95(l1): point = 151
 a0(r189): [7..9]
 a1(r188): [10..11]
 a2(r181): [10..19]
 a3(r187): [12..13]
 a4(r133): [7..15]
 a5(r182): [16..21]
 a6(r183): [16..17]
 a7(r179): [20..23]
 a8(r146): [22..133]
 a9(r180): [24..25]
 a10(r174): [32..33]
 a11(r177): [32..37]
 a12(r172): [34..41]
 a13(r137): [34..47]
 a14(r176): [38..39]
 a15(r171): [42..43]
 a16(r139): [64..71]
 a17(r169): [64..65]
 a18(r168): [66..67]
 a19(r166): [81..82]
 a20(r140): [88..101]
 a21(r164): [91..92]
 a22(r162): [102..103]
 a23(r160): [108..111]
 a24(r150): [110..139]
 a25(r155): [116..121]
 a26(r147): [122..141]
 a27(r144): [123..124]
 a28(r151): [124..127]
 a29(r143): [125..125] [123..123]
 a30(r133): [144..153]
 a31(r189): [144..153]
 a32(r136): [147..148]
 Rebuilding regno allocno list for 136
Compressing live ranges: from 154 to 56 - 36%
Ranges after the compression:
 a0(r189): [52..55] [0..1]
 a1(r188): [2..3]
 a2(r181): [2..9]
 a3(r187): [4..5]
 a4(r133): [52..55] [0..6]
 a5(r182): [7..11]
 a6(r183): [7..8]
 a7(r179): [10..13]
 a8(r146): [12..49]
 a9(r180): [14..15]
 a10(r174): [16..17]
 a11(r177): [16..19]
 a12(r172): [18..22]
 a13(r137): [18..25]
 a14(r176): [20..21]
 a15(r171): [23..24]
 a16(r139): [26..30]
 a17(r169): [26..27]
 a18(r168): [28..29]
 a19(r166): [31..32]
 a20(r140): [33..36]
 a21(r164): [34..35]
 a22(r162): [37..38]
 a23(r160): [39..41]
 a24(r150): [40..50]
 a25(r155): [42..43]
 a26(r147): [44..51]
 a27(r144): [45..46]
 a28(r151): [46..48]
 a29(r143): [47..47] [45..45]
 a32(r136): [53..54]
+++Allocating 248 bytes for conflict table (uncompressed size 264)
;; a0(r189,l0) conflicts: a4(r133,l0) a32(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r188,l0) conflicts: a4(r133,l0) a2(r181,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r181,l0) conflicts: a4(r133,l0) a1(r188,l0) a3(r187,l0) a6(r183,l0) a5(r182,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r187,l0) conflicts: a4(r133,l0) a2(r181,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r133,l0) conflicts: a0(r189,l0) a1(r188,l0) a2(r181,l0) a3(r187,l0) a32(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r182,l0) conflicts: a2(r181,l0) a6(r183,l0) a7(r179,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r183,l0) conflicts: a2(r181,l0) a5(r182,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r179,l0) conflicts: a5(r182,l0) a8(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r146,l0) conflicts: a7(r179,l0) a9(r180,l0) a10(r174,l0) a11(r177,l0) a12(r172,l0) a13(r137,l0) a14(r176,l0) a15(r171,l0) a17(r169,l0) a16(r139,l0) a18(r168,l0) a19(r166,l0) a20(r140,l0) a21(r164,l0) a22(r162,l0) a23(r160,l0) a24(r150,l0) a25(r155,l0) a26(r147,l0) a27(r144,l0) a29(r143,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a9(r180,l0) conflicts: a8(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r174,l0) conflicts: a8(r146,l0) a11(r177,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a11(r177,l0) conflicts: a8(r146,l0) a10(r174,l0) a12(r172,l0) a13(r137,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a12(r172,l0) conflicts: a8(r146,l0) a11(r177,l0) a13(r137,l0) a14(r176,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a13(r137,l0) conflicts: a8(r146,l0) a11(r177,l0) a12(r172,l0) a14(r176,l0) a15(r171,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a14(r176,l0) conflicts: a8(r146,l0) a12(r172,l0) a13(r137,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a15(r171,l0) conflicts: a8(r146,l0) a13(r137,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a16(r139,l0) conflicts: a8(r146,l0) a17(r169,l0) a18(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r169,l0) conflicts: a8(r146,l0) a16(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r168,l0) conflicts: a8(r146,l0) a16(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r166,l0) conflicts: a8(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a20(r140,l0) conflicts: a8(r146,l0) a21(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r164,l0) conflicts: a8(r146,l0) a20(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a22(r162,l0) conflicts: a8(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a23(r160,l0) conflicts: a8(r146,l0) a24(r150,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a24(r150,l0) conflicts: a8(r146,l0) a23(r160,l0) a25(r155,l0) a26(r147,l0) a27(r144,l0) a29(r143,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a25(r155,l0) conflicts: a8(r146,l0) a24(r150,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a26(r147,l0) conflicts: a8(r146,l0) a24(r150,l0) a27(r144,l0) a29(r143,l0) a28(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a27(r144,l0) conflicts: a8(r146,l0) a24(r150,l0) a26(r147,l0) a29(r143,l0) a28(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r151,l0) conflicts: a8(r146,l0) a24(r150,l0) a26(r147,l0) a27(r144,l0) a29(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r143,l0) conflicts: a8(r146,l0) a24(r150,l0) a26(r147,l0) a27(r144,l0) a28(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a32(r136,l0) conflicts: a0(r189,l0) a4(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a17(r169)<->a18(r168)@125:shuffle
  cp1:a10(r174)<->a13(r137)@125:shuffle
  cp2:a10(r174)<->a12(r172)@125:shuffle
  cp3:a7(r179)<->a9(r180)@125:shuffle
  cp4:a5(r182)<->a8(r146)@125:shuffle
  cp5:a2(r181)<->a7(r179)@125:shuffle
  cp6:a4(r133)<->a6(r183)@125:shuffle
  cp7:a4(r133)<->a5(r182)@125:shuffle
  cp8:a0(r189)<->a1(r188)@125:shuffle
  cp9:a0(r189)<->a2(r181)@125:shuffle
  regions=2, blocks=10, points=56
    allocnos=33, copies=10, conflicts=3, ranges=34

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r189 1r188 2r181 3r187 4r133 5r182 6r183 7r179 8r146 9r180 10r174 11r177 12r172 13r137 14r176 15r171 16r139 17r169 18r168 19r166 20r140 21r164 22r162 23r160 24r150 25r155 26r147 27r144 28r151 29r143 32r136
    modified regnos: 133 136 137 139 140 143 144 146 147 150 151 155 160 162 164 166 168 169 171 172 174 176 177 179 180 181 182 183 187 188 189
    border:
    Pressure: GENERAL_REGS=6
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 187 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 182 of GENERAL_REGS has 1 regs less
    Reg 183 of GENERAL_REGS has 1 regs less
    Reg 179 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 3 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 174 of GENERAL_REGS has 2 regs less
    Reg 177 of GENERAL_REGS has 2 regs less
    Reg 172 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 176 of GENERAL_REGS has 2 regs less
    Reg 171 of GENERAL_REGS has 2 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 3 regs less
    Reg 155 of GENERAL_REGS has 2 regs less
    Reg 147 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a29(r143,l0)
      Pushing a27(r144,l0)
      Pushing a22(r162,l0)
      Pushing a21(r164,l0)
      Pushing a19(r166,l0)
      Pushing a18(r168,l0)
      Pushing a17(r169,l0)
      Pushing a20(r140,l0)
      Pushing a28(r151,l0)
      Pushing a16(r139,l0)
      Pushing a32(r136,l0)
      Pushing a23(r160,l0)
      Pushing a9(r180,l0)
      Pushing a7(r179,l0)
      Pushing a6(r183,l0)
      Pushing a5(r182,l0)
      Pushing a4(r133,l0)
      Pushing a3(r187,l0)
      Pushing a2(r181,l0)
      Pushing a1(r188,l0)
      Pushing a0(r189,l0)
      Pushing a25(r155,l0)
      Pushing a15(r171,l0)
      Pushing a14(r176,l0)
      Pushing a12(r172,l0)
      Pushing a11(r177,l0)
      Pushing a10(r174,l0)
      Pushing a13(r137,l0)
      Pushing a26(r147,l0)
      Pushing a24(r150,l0)
      Pushing a8(r146,l0)
      Popping a8(r146,l0)  -- assign reg 4
      Popping a24(r150,l0)  -- assign reg 5
      Popping a26(r147,l0)  -- assign reg 6
      Popping a13(r137,l0)  -- assign reg 3
      Popping a10(r174,l0)  -- assign reg 3
      Popping a11(r177,l0)  -- assign reg 2
      Popping a12(r172,l0)  -- assign reg 12
      Popping a14(r176,l0)  -- assign reg 2
      Popping a15(r171,l0)  -- assign reg 2
      Popping a25(r155,l0)  -- assign reg 3
      Popping a0(r189,l0)  -- assign reg 3
      Popping a1(r188,l0)  -- assign reg 2
      Popping a2(r181,l0)  -- assign reg 3
      Popping a3(r187,l0)  -- assign reg 2
      Popping a4(r133,l0)  -- assign reg 4
      Popping a5(r182,l0)  -- assign reg 4
      Popping a6(r183,l0)  -- assign reg 2
      Popping a7(r179,l0)  -- assign reg 3
      Popping a9(r180,l0)  -- assign reg 3
      Popping a23(r160,l0)  -- assign reg 0
      Popping a32(r136,l0)  -- assign reg 2
      Popping a16(r139,l0)  -- assign reg 3
      Popping a28(r151,l0)  -- assign reg 3
      Popping a20(r140,l0)  -- assign reg 3
      Popping a17(r169,l0)  -- assign reg 2
      Popping a18(r168,l0)  -- assign reg 2
      Popping a19(r166,l0)  -- assign reg 3
      Popping a21(r164,l0)  -- assign reg 2
      Popping a22(r162,l0)  -- assign reg 3
      Popping a27(r144,l0)  -- assign reg 2
      Popping a29(r143,l0)  -- assign reg 1
Disposition:
    4:r133 l0     4   32:r136 l0     2   13:r137 l0     3   16:r139 l0     3
   20:r140 l0     3   29:r143 l0     1   27:r144 l0     2    8:r146 l0     4
   26:r147 l0     6   24:r150 l0     5   28:r151 l0     3   25:r155 l0     3
   23:r160 l0     0   22:r162 l0     3   21:r164 l0     2   19:r166 l0     3
   18:r168 l0     2   17:r169 l0     2   15:r171 l0     2   12:r172 l0    12
   10:r174 l0     3   14:r176 l0     2   11:r177 l0     2    7:r179 l0     3
    9:r180 l0     3    2:r181 l0     3    5:r182 l0     4    6:r183 l0     2
    3:r187 l0     2    1:r188 l0     2    0:r189 l0     3
New iteration of spill/restore move
+++Costs: overall 3750, reg 3750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=125, live_throughout: 13, dead_or_set: 147
insn=13, live_throughout: 13, 147, dead_or_set: 150
insn=126, live_throughout: 13, 150, dead_or_set: 147
insn=10, live_throughout: 13, 147, 150, dead_or_set: 0
insn=8, live_throughout: 0, 13, 147, 150, dead_or_set: 146
insn=11, live_throughout: 0, 13, 146, 147, 150, dead_or_set: 1
insn=12, live_throughout: 13, 146, 147, 150, dead_or_set: 0, 1, 14
insn=14, live_throughout: 13, 146, 147, 150, dead_or_set: 151
insn=16, live_throughout: 13, 146, 147, 150, dead_or_set: 143, 144, 151
insn=20, live_throughout: 13, 146, 150, dead_or_set: 147, 155
insn=25, live_throughout: 13, 146, 150, 155, dead_or_set: 0
insn=26, live_throughout: 0, 13, 146, 150, 155, dead_or_set: 1
insn=22, live_throughout: 0, 1, 13, 146, 150, dead_or_set: 155
insn=27, live_throughout: 13, 146, 150, dead_or_set: 0, 1, 14
insn=29, live_throughout: 13, 146, 150, dead_or_set: 160
insn=33, live_throughout: 13, 146, 160, dead_or_set: 1, 150
insn=32, live_throughout: 1, 13, 146, dead_or_set: 0, 160
insn=34, live_throughout: 13, 146, dead_or_set: 0, 1, 14
insn=35, live_throughout: 13, 146, dead_or_set: 162
insn=36, live_throughout: 13, 146, dead_or_set: 140, 162
insn=37, live_throughout: 13, 140, 146, dead_or_set: 
insn=39, live_throughout: 13, 140, 146, dead_or_set: 
insn=40, live_throughout: 13, 140, 146, dead_or_set: 
insn=42, live_throughout: 13, 140, 146, dead_or_set: 164
insn=43, live_throughout: 13, 140, 146, dead_or_set: 164
insn=44, live_throughout: 13, 140, 146, dead_or_set: 
insn=47, live_throughout: 13, 146, dead_or_set: 140
insn=48, live_throughout: 13, 146, dead_or_set: 
insn=50, live_throughout: 13, 146, dead_or_set: 166
insn=51, live_throughout: 13, 146, dead_or_set: 166
insn=52, live_throughout: 13, 146, dead_or_set: 
insn=54, live_throughout: 13, 146, dead_or_set: 
insn=55, live_throughout: 13, 146, dead_or_set: 
insn=56, live_throughout: 13, 146, dead_or_set: 14
insn=123, live_throughout: 13, 146, dead_or_set: 139
insn=124, live_throughout: 13, 146, dead_or_set: 139
insn=60, live_throughout: 13, 139, 146, dead_or_set: 168
insn=61, live_throughout: 13, 139, 146, dead_or_set: 168, 169
insn=62, live_throughout: 13, 146, dead_or_set: 139, 169
insn=63, live_throughout: 13, 146, dead_or_set: 
insn=64, live_throughout: 13, 146, dead_or_set: 0
insn=65, live_throughout: 13, 146, dead_or_set: 0, 14
insn=66, live_throughout: 13, 146, dead_or_set: 0
insn=67, live_throughout: 13, 146, dead_or_set: 0, 14
insn=68, live_throughout: 13, 146, dead_or_set: 14
insn=79, live_throughout: 13, 146, dead_or_set: 0
insn=69, live_throughout: 0, 13, 146, dead_or_set: 137
insn=80, live_throughout: 0, 13, 137, 146, dead_or_set: 1
insn=131, live_throughout: 0, 1, 13, 137, 146, dead_or_set: 171
insn=72, live_throughout: 0, 1, 13, 137, 146, dead_or_set: 171, 172
insn=130, live_throughout: 0, 1, 13, 137, 146, 172, dead_or_set: 176
insn=77, live_throughout: 0, 1, 13, 137, 146, 172, dead_or_set: 176, 177
insn=70, live_throughout: 0, 1, 13, 146, 172, 177, dead_or_set: 137
insn=74, live_throughout: 0, 1, 13, 146, 177, dead_or_set: 137, 172, 174
insn=78, live_throughout: 0, 1, 13, 146, dead_or_set: 174, 177
insn=81, live_throughout: 13, 146, dead_or_set: 0, 1, 14
insn=82, live_throughout: 13, 146, dead_or_set: 14
insn=84, live_throughout: 13, 14, 146, dead_or_set: 180
insn=86, live_throughout: 13, 14, 146, dead_or_set: 179, 180
insn=89, live_throughout: 13, 14, 179, dead_or_set: 146, 182
insn=87, live_throughout: 13, 14, 182, dead_or_set: 179, 181
insn=129, live_throughout: 13, 14, 181, 182, dead_or_set: 183
insn=91, live_throughout: 13, 14, 181, dead_or_set: 133, 182, 183
insn=128, live_throughout: 13, 14, 133, 181, dead_or_set: 187
insn=127, live_throughout: 13, 14, 133, 181, dead_or_set: 187, 188
insn=100, live_throughout: 13, 14, 133, dead_or_set: 181, 188, 189
insn=121, live_throughout: 13, 14, 133, 189, dead_or_set: 
insn=102, live_throughout: 13, 14, 133, 189, dead_or_set: 
insn=95, live_throughout: 13, 14, 133, 189, dead_or_set: 
insn=96, live_throughout: 13, 14, 133, 189, dead_or_set: 
insn=101, live_throughout: 13, 14, 133, 189, dead_or_set: 136
insn=104, live_throughout: 13, 14, 133, 189, dead_or_set: 136
insn=105, live_throughout: 13, 14, 133, 189, dead_or_set: 
insn=107, live_throughout: 13, 14, dead_or_set: 
insn=108, live_throughout: 13, 14, dead_or_set: 
insn=109, live_throughout: 13, 14, dead_or_set: 
init_insns for 150: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 164: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 166: (insn_list:REG_DEP_TRUE 50 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 60 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 62 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 131 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 130 (nil))
init_insns for 183: (insn_list:REG_DEP_TRUE 129 (nil))
init_insns for 187: (insn_list:REG_DEP_TRUE 128 (nil))
changing reg in insn 91
changing reg in insn 104
changing reg in insn 101
changing reg in insn 104
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 74
changing reg in insn 124
changing reg in insn 123
changing reg in insn 124
changing reg in insn 62
changing reg in insn 60
changing reg in insn 61
changing reg in insn 60
changing reg in insn 36
changing reg in insn 47
changing reg in insn 39
changing reg in insn 16
changing reg in insn 16
changing reg in insn 8
changing reg in insn 86
changing reg in insn 86
changing reg in insn 89
changing reg in insn 84
changing reg in insn 25
changing reg in insn 79
changing reg in insn 72
changing reg in insn 66
changing reg in insn 64
changing reg in insn 11
changing reg in insn 87
changing reg in insn 72
changing reg in insn 126
changing reg in insn 125
changing reg in insn 126
changing reg in insn 20
changing reg in insn 8
changing reg in insn 13
changing reg in insn 33
changing reg in insn 26
changing reg in insn 14
changing reg in insn 29
changing reg in insn 22
changing reg in insn 16
changing reg in insn 16
changing reg in insn 14
changing reg in insn 16
changing reg in insn 20
changing reg in insn 22
changing reg in insn 29
changing reg in insn 32
changing reg in insn 35
changing reg in insn 36
changing reg in insn 42
changing reg in insn 43
changing reg in insn 50
changing reg in insn 51
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 62
changing reg in insn 131
changing reg in insn 72
changing reg in insn 72
changing reg in insn 74
changing reg in insn 74
changing reg in insn 78
changing reg in insn 130
changing reg in insn 77
changing reg in insn 77
changing reg in insn 78
changing reg in insn 86
changing reg in insn 87
changing reg in insn 84
changing reg in insn 86
changing reg in insn 87
changing reg in insn 100
changing reg in insn 89
changing reg in insn 91
changing reg in insn 91
changing reg in insn 129
changing reg in insn 91
changing reg in insn 128
changing reg in insn 127
changing reg in insn 127
changing reg in insn 100
changing reg in insn 100
changing reg in insn 101
Spilling for insn 125.
Using reg 3 for reload 0
Spilling for insn 22.
Spilling for insn 123.
Using reg 2 for reload 0
Spilling for insn 62.
Spilling for insn 78.

Reloads for insn # 125
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:155 <variable>.task ] [155])
                                                        (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:155 <variable>.task ] [155])
                                                        (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])

Reloads for insn # 123
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 62
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 78
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [174])
                                                        (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [174])
                                                        (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 65.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 68.
verify found no changes in insn with uid = 81.
verify found no changes in insn with uid = 82.
verify found no changes in insn with uid = 109.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 19 (  1.9)


secondary_start_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={18d,7u} r1={16d,4u} r2={24d,12u} r3={25d,16u,2d} r4={3d,12u,3d} r5={1d,7u} r6={2d,3u} r12={12d,1u} r13={1d,21u} r14={10d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={19d,3u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1323{1231d,87u,5e} in 74{64 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 30 2 NOTE_INSN_DELETED)

(note 30 6 38 2 NOTE_INSN_DELETED)

(note 38 30 133 2 NOTE_INSN_DELETED)

(insn 133 38 125 2 arch/arm/kernel/smp.c:281 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 125 133 13 2 arch/arm/kernel/smp.c:281 (set (reg:SI 6 r6 [147])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 125 126 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (set (reg/f:SI 5 r5 [150])
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
        (nil)))

(insn 126 13 10 2 arch/arm/kernel/smp.c:281 (set (reg:SI 6 r6 [147])
        (and:SI (reg:SI 6 r6 [147])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 126 8 2 arch/arm/kernel/smp.c:283 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116a2f80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116a2f80>)
        (nil)))

(insn 8 10 11 2 arch/arm/kernel/smp.c:281 (set (reg/v:SI 4 r4 [orig:146 cpu ] [146])
        (mem/s/j:SI (plus:SI (reg:SI 6 r6 [147])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 8 12 2 arch/arm/kernel/smp.c:283 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:146 cpu ] [146])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 14 2 arch/arm/kernel/smp.c:283 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 12 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (set (reg/f:SI 3 r3 [151])
        (plus:SI (reg/f:SI 5 r5 [150])
            (const_int 44 [0x2c]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
                (const_int 44 [0x2c])))
        (nil)))

(insn 16 14 20 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (parallel [
            (set (reg/v:SI 2 r2 [orig:144 result ] [144])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 3 r3 [151])
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 5 r5 [150])
                                (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2074232))
            (set (reg/v:SI 1 r1 [orig:143 tmp ] [143])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 1 [
                        (reg/f:SI 3 r3 [151])
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 5 r5 [150])
                                (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2074232))
            (set (mem/s/j/c:SI (plus:SI (reg/f:SI 5 r5 [150])
                        (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=Qo") 2 [
                        (reg/f:SI 3 r3 [151])
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 5 r5 [150])
                                (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2074232))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 20 16 25 2 arch/arm/kernel/smp.c:290 (set (reg/f:SI 3 r3 [orig:155 <variable>.task ] [155])
        (mem/s/f/j:SI (plus:SI (reg:SI 6 r6 [147])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 20 26 2 include/linux/cpumask.h:256 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:146 cpu ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 22 2 include/linux/cpumask.h:256 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 5 r5 [150])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
                (const_int 348 [0x15c])))
        (nil)))

(insn 22 26 27 2 arch/arm/kernel/smp.c:290 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:155 <variable>.task ] [155])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])
        (reg/f:SI 5 r5 [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
        (nil)))

(call_insn 27 22 29 2 include/linux/cpumask.h:256 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 27 33 2 arch/arm/kernel/smp.c:292 (set (reg/f:SI 0 r0 [orig:160 init_mm.pgd ] [160])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 5 r5 [150])
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
                    (const_int 36 [0x24]))) [0 init_mm.pgd+0 S4 A32])
        (nil)))

(insn 33 29 32 2 arch/arm/kernel/smp.c:292 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
        (nil)))

(insn 32 33 34 2 arch/arm/kernel/smp.c:292 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 0 r0 [orig:160 init_mm.pgd ] [160])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(call_insn 34 32 35 2 arch/arm/kernel/smp.c:292 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_switch_mm") [flags 0x41] <function_decl 0x111f0c80 cpu_v7_switch_mm>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 34 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [162])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)
        (nil)))

(insn 36 35 37 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:140 __tlb_flag ] [140])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [162])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 37 36 39 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8433656)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 39 37 40 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:140 __tlb_flag ] [140])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 40 39 41 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [164])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 43 42 44 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [164])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8434296)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 44 43 45 4 108 "" [1 uses])

(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 4 NOTE_INSN_DELETED)

(insn 47 46 48 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:140 __tlb_flag ] [140])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 48 47 49 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [166])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 51 50 52 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [166])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8435064)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 52 51 53 6 109 "" [1 uses])

(note 53 52 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 53 85 6 NOTE_INSN_DELETED)

(note 85 58 88 6 NOTE_INSN_DELETED)

(note 88 85 54 6 NOTE_INSN_DELETED)

(insn 54 88 55 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8435448)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 55 54 56 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8435576)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(call_insn 56 55 134 6 arch/arm/kernel/smp.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_init") [flags 0x41] <function_decl 0x512d9780 cpu_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 134 56 123 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 123 134 124 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 124 123 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 60 124 61 6 arch/arm/kernel/smp.c:297 (set (reg:SI 2 r2 [orig:168 <variable>.preempt_count ] [168])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 61 60 62 6 arch/arm/kernel/smp.c:297 (set (reg:SI 2 r2 [169])
        (plus:SI (reg:SI 2 r2 [orig:168 <variable>.preempt_count ] [168])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 62 61 63 6 arch/arm/kernel/smp.c:297 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.27624 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [169])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 6 arch/arm/kernel/smp.c:297 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8527585)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 64 63 65 6 arch/arm/kernel/smp.c:303 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:146 cpu ] [146])) 167 {*arm_movsi_insn} (nil))

(call_insn 65 64 66 6 arch/arm/kernel/smp.c:303 (parallel [
            (call (mem:SI (symbol_ref:SI ("platform_secondary_init") [flags 0x41] <function_decl 0x10c9f180 platform_secondary_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 66 65 67 6 arch/arm/kernel/smp.c:305 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:146 cpu ] [146])) 167 {*arm_movsi_insn} (nil))

(call_insn 67 66 68 6 arch/arm/kernel/smp.c:305 (parallel [
            (call (mem:SI (symbol_ref:SI ("notify_cpu_starting") [flags 0x41] <function_decl 0x1135a900 notify_cpu_starting>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 68 67 79 6 arch/arm/kernel/smp.c:307 (parallel [
            (call (mem:SI (symbol_ref:SI ("calibrate_delay") [flags 0x41] <function_decl 0x10e39a00 calibrate_delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 79 68 69 6 arch/arm/kernel/smp.c:316 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:146 cpu ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 69 79 80 6 arch/arm/kernel/smp.c:269 (set (reg/v:SI 3 r3 [orig:137 __ptr ] [137])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)
        (nil)))

(insn 80 69 131 6 arch/arm/kernel/smp.c:316 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 131 80 72 6 arch/arm/kernel/smp.c:271 (set (reg/f:SI 2 r2 [171])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 72 131 130 6 arch/arm/kernel/smp.c:271 (set (reg:SI 12 ip [172])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 4 r4 [orig:146 cpu ] [146])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [171])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 4 r4 [orig:146 cpu ] [146])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 130 72 77 6 arch/arm/kernel/smp.c:271 (set (reg/f:SI 2 r2 [176])
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>)
        (nil)))

(insn 77 130 70 6 arch/arm/kernel/smp.c:271 (set (reg:SI 2 r2 [orig:177 loops_per_jiffy ] [177])
        (mem/c/i:SI (reg/f:SI 2 r2 [176]) [0 loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>) [0 loops_per_jiffy+0 S4 A32])
        (nil)))

(insn 70 77 74 6 arch/arm/kernel/smp.c:269 (set (reg/v:SI 3 r3 [orig:137 __ptr ] [137])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:137 __ptr ] [137])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8524033)) -1 (nil))

(insn 74 70 78 6 arch/arm/kernel/smp.c:271 (set (reg:SI 3 r3 [174])
        (plus:SI (reg/v:SI 3 r3 [orig:137 __ptr ] [137])
            (reg:SI 12 ip [172]))) 4 {*arm_addsi3} (nil))

(insn 78 74 81 6 arch/arm/kernel/smp.c:271 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [174])
                (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])
        (reg:SI 2 r2 [orig:177 loops_per_jiffy ] [177])) 167 {*arm_movsi_insn} (nil))

(call_insn 81 78 82 6 arch/arm/kernel/smp.c:316 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 82 81 84 6 arch/arm/kernel/smp.c:321 (parallel [
            (call (mem:SI (symbol_ref:SI ("percpu_timer_setup") [flags 0x3] <function_decl 0x11513500 percpu_timer_setup>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 84 82 86 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [180])
        (plus:SI (reg/v:SI 4 r4 [orig:146 cpu ] [146])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 86 84 89 6 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 3 r3 [orig:179 D.27601 ] [179])
                (if_then_else:SI (ge (reg/v:SI 4 r4 [orig:146 cpu ] [146])
                        (const_int 0 [0x0]))
                    (reg/v:SI 4 r4 [orig:146 cpu ] [146])
                    (reg:SI 3 r3 [180])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 89 86 87 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 4 r4 [182])
        (and:SI (reg/v:SI 4 r4 [orig:146 cpu ] [146])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 89 129 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [181])
        (ashiftrt:SI (reg:SI 3 r3 [orig:179 D.27601 ] [179])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg/v:SI 4 r4 [orig:146 cpu ] [146])
            (const_int 32 [0x20]))
        (nil)))

(insn 129 87 91 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [183])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 91 129 128 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 4 r4 [orig:133 shifttmp.991 ] [133])
        (ashift:SI (reg:SI 2 r2 [183])
            (reg:SI 4 r4 [182]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg:SI 4 r4 [182]))
        (nil)))

(insn 128 91 127 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 2 r2 [187])
        (symbol_ref:SI ("cpu_active_mask") [flags 0xc0] <var_decl 0x10c66000 cpu_active_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_active_mask") [flags 0xc0] <var_decl 0x10c66000 cpu_active_mask>)
        (nil)))

(insn 127 128 100 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 2 r2 [orig:188 cpu_active_mask ] [188])
        (mem/u/f/c/i:SI (reg/f:SI 2 r2 [187]) [0 cpu_active_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_active_mask") [flags 0xc0] <var_decl 0x10c66000 cpu_active_mask>) [0 cpu_active_mask+0 S4 A32])
        (nil)))

(insn 100 127 121 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 3 r3 [orig:189 D.27644 ] [189])
        (plus:SI (mult:SI (reg:SI 3 r3 [181])
                (const_int 4 [0x4]))
            (reg/f:SI 2 r2 [orig:188 cpu_active_mask ] [188]))) 270 {*arith_shiftsi} (nil))

(jump_insn 121 100 122 6 arch/arm/kernel/smp.c:323 (set (pc)
        (label_ref 96)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 122 121 102)

;; Start of basic block ( 8) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  8 [91.0%] 
(code_label 102 122 94 7 111 "" [1 uses])

(note 94 102 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 7 arch/arm/kernel/smp.c:324 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8531042)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
;; Pred edge  6 [100.0%] 
(code_label 96 95 97 8 110 "" [1 uses])

(note 97 96 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 103 97 101 8 NOTE_INSN_DELETED)

(insn 101 103 104 8 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:136 D.27643 ] [136])
        (mem/v:SI (reg/f:SI 3 r3 [orig:189 D.27644 ] [189]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 104 101 105 8 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 2 r2 [orig:136 D.27643 ] [136])
                        (reg:SI 4 r4 [orig:133 shifttmp.991 ] [133]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 105 104 106 8 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 8 -> ( 7 9)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  7 [91.0%] 
;; Succ edge  9 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  8 [9.0%]  (fallthru,loop_exit)
(note 106 105 107 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104376)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 108 107 109 9 arch/arm/kernel/smp.c:331 (parallel [
            (asm_operands/v ("cpsie f	@ __stf") ("") 0 []
                 [] 8531937)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(call_insn/j 109 108 110 9 arch/arm/kernel/smp.c:336 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_idle") [flags 0x41] <function_decl 0x10c8ed80 cpu_idle>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 110 109 132)

(note 132 110 0 NOTE_INSN_DELETED)


;; Function cpu_die (cpu_die)[0:1409]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a5(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a5(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 30(l0): point = 4
   Insn 29(l0): point = 6
   Insn 28(l0): point = 8
   Insn 41(l0): point = 10
   Insn 40(l0): point = 12
   Insn 24(l0): point = 14
   Insn 23(l0): point = 16
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 17(l0): point = 23
   Insn 15(l0): point = 26
   Insn 14(l0): point = 28
   Insn 13(l0): point = 30
   Insn 12(l0): point = 32
   Insn 11(l0): point = 34
   Insn 10(l0): point = 36
   Insn 9(l0): point = 38
   Insn 8(l0): point = 40
   Insn 43(l0): point = 42
   Insn 42(l0): point = 44
 a0(r144): [1..2]
 a1(r146): [3..4]
 a2(r145): [5..6]
 a3(r143): [7..8]
 a4(r141): [9..12]
 a5(r136): [17..40]
 a6(r134): [24..30]
 a7(r139): [31..32]
 a8(r137): [41..44]
Compressing live ranges: from 47 to 18 - 38%
Ranges after the compression:
 a0(r144): [0..1]
 a1(r146): [2..3]
 a2(r145): [4..5]
 a3(r143): [6..7]
 a4(r141): [8..9]
 a5(r136): [10..15]
 a6(r134): [11..12]
 a7(r139): [13..14]
 a8(r137): [16..17]
+++Allocating 24 bytes for conflict table (uncompressed size 72)
;; a0(r144,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r146,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r145,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r143,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r141,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r136,l0) conflicts: a6(r134,l0) a7(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a6(r134,l0) conflicts: a5(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r139,l0) conflicts: a5(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r137,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r146)<->a2(r145)@125:shuffle
  cp1:a0(r144)<->a1(r146)@125:shuffle
  regions=1, blocks=5, points=18
    allocnos=9, copies=2, conflicts=2, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r144 1r146 2r145 3r143 4r141 5r136 6r134 7r139 8r137
    modified regnos: 134 136 137 139 141 143 144 145 146
    border:
    Pressure: GENERAL_REGS=3
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a7(r139,l0)
      Pushing a8(r137,l0)
      Pushing a3(r143,l0)
      Pushing a2(r145,l0)
      Pushing a1(r146,l0)
      Pushing a0(r144,l0)
      Pushing a6(r134,l0)
      Pushing a4(r141,l0)
      Pushing a5(r136,l0)
      Popping a5(r136,l0)  -- assign reg 4
      Popping a4(r141,l0)  -- assign reg 3
      Popping a6(r134,l0)  -- assign reg 3
      Popping a0(r144,l0)  -- assign reg 3
      Popping a1(r146,l0)  -- assign reg 3
      Popping a2(r145,l0)  -- assign reg 3
      Popping a3(r143,l0)  -- assign reg 3
      Popping a8(r137,l0)  -- assign reg 3
      Popping a7(r139,l0)  -- assign reg 3
Disposition:
    6:r134 l0     3    5:r136 l0     4    8:r137 l0     3    7:r139 l0     3
    4:r141 l0     3    3:r143 l0     3    0:r144 l0     3    2:r145 l0     3
    1:r146 l0     3
New iteration of spill/restore move
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=42, live_throughout: 13, dead_or_set: 137
insn=43, live_throughout: 13, dead_or_set: 137
insn=8, live_throughout: 13, dead_or_set: 136, 137
insn=9, live_throughout: 13, 136, dead_or_set: 14
insn=10, live_throughout: 13, 136, dead_or_set: 
insn=11, live_throughout: 13, 136, dead_or_set: 
insn=12, live_throughout: 13, 136, dead_or_set: 139
insn=13, live_throughout: 13, 136, dead_or_set: 134, 139
insn=14, live_throughout: 13, 134, 136, dead_or_set: 
insn=15, live_throughout: 13, 134, 136, dead_or_set: 
insn=17, live_throughout: 13, 136, dead_or_set: 14, 134
insn=18, live_throughout: 13, 136, dead_or_set: 
insn=21, live_throughout: 13, 136, dead_or_set: 0
insn=22, live_throughout: 13, 136, dead_or_set: 0, 14
insn=23, live_throughout: 13, dead_or_set: 0, 136
insn=24, live_throughout: 13, dead_or_set: 0, 14
insn=40, live_throughout: 13, 14, dead_or_set: 141
insn=41, live_throughout: 13, 14, dead_or_set: 141
insn=28, live_throughout: 13, 14, dead_or_set: 141, 143
insn=29, live_throughout: 13, 14, dead_or_set: 143, 145
insn=30, live_throughout: 13, 14, dead_or_set: 145, 146
insn=31, live_throughout: 13, 14, dead_or_set: 144, 146
insn=32, live_throughout: 13, 14, dead_or_set: 144
init_insns for 139: (insn_list:REG_DEP_TRUE 12 (nil))
changing reg in insn 13
changing reg in insn 17
changing reg in insn 14
changing reg in insn 8
changing reg in insn 23
changing reg in insn 43
changing reg in insn 42
changing reg in insn 43
changing reg in insn 8
changing reg in insn 12
changing reg in insn 13
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 28
changing reg in insn 28
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 30
changing reg in insn 31
Spilling for insn 42.
Using reg 2 for reload 0
Spilling for insn 40.
Using reg 2 for reload 0
Spilling for insn 42.
Using reg 2 for reload 0
Spilling for insn 40.
Using reg 2 for reload 0

Reloads for insn # 42
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 40
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
rescanning insn with uid = 17.
deleting insn with uid = 17.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


cpu_die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,2u} r1={5d} r2={7d,2u} r3={15d,11u,1d} r4={1d,1u} r12={5d} r13={1d,10u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 521{492d,28u,1e} in 24{20 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 46 2 NOTE_INSN_DELETED)

(insn 46 6 42 2 arch/arm/kernel/smp.c:234 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 42 46 43 2 arch/arm/kernel/smp.c:234 (set (reg:SI 3 r3 [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 8 2 arch/arm/kernel/smp.c:234 (set (reg:SI 3 r3 [137])
        (and:SI (reg:SI 3 r3 [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 43 9 2 arch/arm/kernel/smp.c:234 (set (reg/v:SI 4 r4 [orig:136 cpu ] [136])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [137])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 9 8 10 2 arch/arm/kernel/smp.c:236 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_task_exit") [flags 0x41] <function_decl 0x10fc4200 idle_task_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105528)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 11 10 12 2 arch/arm/kernel/smp.c:239 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8520161)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
        (nil)))

(insn 13 12 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 3 r3 [orig:134 D.27654 ] [134])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                    (const_int 24 [0x18]))) [0 outer_cache.sync+0 S4 A32])
        (nil)))

(insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:134 D.27654 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:95 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:134 D.27654 ] [134]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [21.6%] 
(code_label 18 17 19 4 116 "" [1 uses])

(note 19 18 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 19 21 4 NOTE_INSN_DELETED)

(insn 21 26 22 4 arch/arm/kernel/smp.c:242 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(call_insn 22 21 23 4 arch/arm/kernel/smp.c:242 (parallel [
            (call (mem:SI (symbol_ref:SI ("complete") [flags 0x41] <function_decl 0x10d64000 complete>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 23 22 24 4 arch/arm/kernel/smp.c:248 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:136 cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 47 4 arch/arm/kernel/smp.c:248 (parallel [
            (call (mem:SI (symbol_ref:SI ("platform_cpu_die") [flags 0x41] <function_decl 0x10c9f480 platform_cpu_die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 24 40 4 arch/arm/kernel/smp.c:255 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 40 47 41 4 arch/arm/kernel/smp.c:255 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 41 40 28 4 arch/arm/kernel/smp.c:255 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 3 r3 [141])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 41 29 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 3 r3 [orig:143 <variable>.task ] [143])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [141])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:143 <variable>.task ] [143])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 3 r3 [146])
        (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
            (const_int 8128 [0x1fc0]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 3 r3 [144])
        (plus:SI (reg/f:SI 3 r3 [146])
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 3 r3 [orig:145 <variable>.stack ] [145])
            (const_int 8184 [0x1ff8]))
        (nil)))

(insn 32 31 44 4 arch/arm/kernel/smp.c:255 (asm_operands/v ("mov	sp, %0
	mov	fp, #0
	b	secondary_start_kernel") ("") 0 [
            (reg/f:SI 3 r3 [144])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8522209) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 44 32 45 NOTE_INSN_DELETED)

(note 45 44 0 NOTE_INSN_DELETED)


;; Function __cpu_die (__cpu_die)[0:1408]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 38(l0): point = 1
   Insn 36(l0): point = 3
   Insn 37(l0): point = 5
   Insn 33(l0): point = 8
   Insn 32(l0): point = 10
   Insn 30(l0): point = 12
   Insn 29(l0): point = 14
   Insn 28(l0): point = 16
   Insn 26(l0): point = 18
   Insn 27(l0): point = 20
   Insn 21(l0): point = 23
   Insn 19(l0): point = 25
   Insn 20(l0): point = 27
   Insn 16(l0): point = 30
   Insn 15(l0): point = 32
   Insn 13(l0): point = 34
   Insn 11(l0): point = 36
   Insn 12(l0): point = 38
   Insn 9(l0): point = 40
   Insn 8(l0): point = 42
   Insn 7(l0): point = 44
   Insn 2(l0): point = 46
 a0(r136): [28..46] [6..22]
 a1(r135): [39..40]
Compressing live ranges: from 49 to 6 - 12%
Ranges after the compression:
 a0(r136): [2..5] [0..1]
 a1(r135): [3..4]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=7, points=6
    allocnos=2, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 136 of GENERAL_REGS has 3 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a1(r135,l0)  -- assign reg 1
Disposition:
    1:r135 l0     1    0:r136 l0     4
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 136
insn=7, live_throughout: 13, 136, dead_or_set: 0
insn=8, live_throughout: 13, 136, dead_or_set: 0, 14
insn=9, live_throughout: 13, 136, dead_or_set: 0, 135
insn=12, live_throughout: 13, 136, dead_or_set: 1, 135
insn=11, live_throughout: 1, 13, 136, dead_or_set: 0
insn=13, live_throughout: 13, 136, dead_or_set: 0, 1, 14
insn=15, live_throughout: 13, 14, 136, dead_or_set: 0
insn=16, live_throughout: 13, 14, 136, dead_or_set: 
insn=20, live_throughout: 13, 14, dead_or_set: 1, 136
insn=19, live_throughout: 1, 13, 14, dead_or_set: 0
insn=21, live_throughout: 13, 14, dead_or_set: 0, 1
insn=23, live_throughout: 13, 136, dead_or_set: 
insn=27, live_throughout: 13, 136, dead_or_set: 1
insn=26, live_throughout: 1, 13, 136, dead_or_set: 0
insn=28, live_throughout: 13, 136, dead_or_set: 0, 1, 14
insn=29, live_throughout: 13, 136, dead_or_set: 0
insn=30, live_throughout: 13, 136, dead_or_set: 0, 14
insn=32, live_throughout: 13, 14, 136, dead_or_set: 0
insn=33, live_throughout: 13, 14, 136, dead_or_set: 
insn=37, live_throughout: 13, 14, dead_or_set: 1, 136
insn=36, live_throughout: 1, 13, 14, dead_or_set: 0
insn=38, live_throughout: 13, 14, dead_or_set: 0, 1
insn=45, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 9
changing reg in insn 12
changing reg in insn 2
changing reg in insn 37
changing reg in insn 29
changing reg in insn 27
changing reg in insn 20
deleting insn with uid = 12.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 9 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


__cpu_die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,10u} r1={11d,4u} r2={7d} r3={7d} r4={1d,4u} r12={7d} r13={1d,12u} r14={5d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={8d,2u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 753{720d,33u,0e} in 21{15 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 14 2 NOTE_INSN_FUNCTION_BEG)

(note 14 3 2 2 NOTE_INSN_DELETED)

(insn 2 14 7 2 arch/arm/kernel/smp.c:213 (set (reg/v:SI 4 r4 [orig:136 cpu ] [136])
        (reg:SI 0 r0 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 7 2 8 2 arch/arm/kernel/smp.c:214 (set (reg:SI 0 r0)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 5000 [0x1388])
        (nil)))

(call_insn 8 7 9 2 arch/arm/kernel/smp.c:214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("msecs_to_jiffies") [flags 0x41] <function_decl 0x10ce4500 msecs_to_jiffies>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 11 2 arch/arm/kernel/smp.c:214 (set (reg:SI 1 r1 [orig:135 D.26047 ] [135])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 9 13 2 arch/arm/kernel/smp.c:214 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(call_insn 13 11 15 2 arch/arm/kernel/smp.c:214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("wait_for_completion_timeout") [flags 0x41] <function_decl 0x10d1ad80 wait_for_completion_timeout>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 13 16 2 arch/arm/kernel/smp.c:214 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/kernel/smp.c:214 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6000 [0x1770])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  3 [40.0%]  (fallthru)
;; Succ edge  4 [60.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  2 [40.0%]  (fallthru)
(note 17 16 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 17 19 3 arch/arm/kernel/smp.c:215 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 19 20 21 3 arch/arm/kernel/smp.c:215 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116062c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116062c0>)
        (nil)))

(call_insn/j 21 19 22 3 arch/arm/kernel/smp.c:215 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 22 21 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [60.0%] 
(code_label 23 22 24 4 121 "" [1 uses])

(note 24 23 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 31 24 27 4 NOTE_INSN_DELETED)

(insn 27 31 26 4 arch/arm/kernel/smp.c:218 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 26 27 28 4 arch/arm/kernel/smp.c:218 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116c5210>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116c5210>)
        (nil)))

(call_insn 28 26 29 4 arch/arm/kernel/smp.c:218 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 4 arch/arm/kernel/smp.c:220 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:136 cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 32 4 arch/arm/kernel/smp.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_cpu_kill") [flags 0x41] <function_decl 0x10c9f500 platform_cpu_kill>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 32 30 33 4 arch/arm/kernel/smp.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 33 32 34 4 arch/arm/kernel/smp.c:220 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 34 33 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 37 34 36 5 arch/arm/kernel/smp.c:221 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 36 37 38 5 arch/arm/kernel/smp.c:221 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x116c5450>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x116c5450>)
        (nil)))

(call_insn/j 38 36 39 5 arch/arm/kernel/smp.c:221 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 39 38 45)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 45 39 48 6 123 "" [1 uses])

(note 48 45 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 50 48 51 NOTE_INSN_DELETED)

(note 51 50 0 NOTE_INSN_DELETED)


;; Function __cpu_disable (__cpu_disable)[0:1407]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 26 (    2)
scanning new insn with uid = 115.
verify found no changes in insn with uid = 115.
deleting insn with uid = 22.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 26 (    2)

Pass 0 for finding allocno costs

    a19 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r163,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a15(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a17(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a15(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a16(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a17(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 98(l0): point = 0
   Insn 92(l0): point = 2
   Insn 85(l0): point = 5
   Insn 84(l0): point = 7
   Insn 110(l0): point = 10
   Insn 79(l0): point = 12
   Insn 58(l0): point = 14
   Insn 57(l0): point = 16
   Insn 75(l0): point = 18
   Insn 59(l0): point = 20
   Insn 55(l0): point = 22
   Insn 54(l0): point = 24
   Insn 51(l0): point = 27
   Insn 50(l0): point = 29
   Insn 48(l0): point = 32
   Insn 47(l0): point = 34
   Insn 43(l0): point = 37
   Insn 40(l0): point = 40
   Insn 39(l0): point = 42
   Insn 37(l0): point = 44
   Insn 36(l0): point = 46
   Insn 35(l0): point = 48
   Insn 34(l0): point = 50
   Insn 32(l0): point = 52
   Insn 31(l0): point = 54
   Insn 30(l0): point = 56
   Insn 27(l0): point = 58
   Insn 26(l0): point = 60
   Insn 115(l0): point = 62
   Insn 21(l0): point = 64
   Insn 20(l0): point = 66
   Insn 29(l0): point = 68
   Insn 25(l0): point = 70
   Insn 18(l0): point = 72
   Insn 17(l0): point = 74
   Insn 16(l0): point = 76
   Insn 15(l0): point = 78
   Insn 13(l0): point = 81
   Insn 12(l0): point = 83
   Insn 10(l0): point = 85
   Insn 9(l0): point = 87
   Insn 8(l0): point = 89
   Insn 113(l0): point = 91
   Insn 112(l0): point = 93
   Insn 81(l1): point = 96
   Insn 80(l1): point = 98
   Insn 77(l1): point = 100
   Insn 76(l1): point = 102
   Insn 74(l1): point = 104
   Insn 73(l1): point = 106
   Insn 68(l1): point = 108
   Insn 70(l1): point = 111
   Insn 65(l1): point = 114
   Insn 64(l1): point = 116
   Insn 69(l1): point = 118
   Insn 63(l1): point = 120
 a0(r139): [3..83]
 a1(r168): [10..12]
 a2(r140): [10..20]
 a3(r167): [10..18]
 a4(r141): [10..89]
 a5(r160): [28..29]
 a6(r133): [35..46]
 a7(r156): [47..48]
 a8(r154): [51..52]
 a9(r134): [55..58]
 a10(r152): [59..60]
 a11(r135): [59..66]
 a12(r148): [61..62]
 a13(r151): [61..70]
 a14(r145): [71..93]
 a15(r139): [96..122]
 a16(r140): [107..122] [96..100]
 a17(r141): [96..122]
 a18(r167): [96..122]
 a19(r168): [96..122]
 a20(r138): [101..102]
 a21(r163): [105..106]
 a22(r143): [117..120]
 Rebuilding regno allocno list for 163
 Rebuilding regno allocno list for 143
 Rebuilding regno allocno list for 138
Compressing live ranges: from 123 to 35 - 28%
Ranges after the compression:
 a0(r139): [25..34] [0..22]
 a1(r168): [25..34] [1..2]
 a2(r140): [31..34] [25..26] [1..4]
 a3(r167): [25..34] [1..3]
 a4(r141): [25..34] [1..23]
 a5(r160): [5..6]
 a6(r133): [7..8]
 a7(r156): [9..10]
 a8(r154): [11..12]
 a9(r134): [13..14]
 a10(r152): [15..16]
 a11(r135): [15..19]
 a12(r148): [17..18]
 a13(r151): [17..20]
 a14(r145): [21..24]
 a20(r138): [27..28]
 a21(r163): [29..30]
 a22(r143): [32..33]
+++Allocating 144 bytes for conflict table (uncompressed size 184)
;; a0(r139,l0) conflicts: a1(r168,l0) a2(r140,l0) a3(r167,l0) a4(r141,l0) a5(r160,l0) a6(r133,l0) a7(r156,l0) a8(r154,l0) a9(r134,l0) a10(r152,l0) a11(r135,l0) a12(r148,l0) a13(r151,l0) a14(r145,l0) a20(r138,l0) a21(r163,l0) a22(r143,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r168,l0) conflicts: a0(r139,l0) a2(r140,l0) a3(r167,l0) a4(r141,l0) a20(r138,l0) a21(r163,l0) a22(r143,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r140,l0) conflicts: a0(r139,l0) a1(r168,l0) a3(r167,l0) a4(r141,l0) a22(r143,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r167,l0) conflicts: a0(r139,l0) a1(r168,l0) a2(r140,l0) a4(r141,l0) a20(r138,l0) a21(r163,l0) a22(r143,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r141,l0) conflicts: a0(r139,l0) a1(r168,l0) a2(r140,l0) a3(r167,l0) a5(r160,l0) a6(r133,l0) a7(r156,l0) a8(r154,l0) a9(r134,l0) a10(r152,l0) a11(r135,l0) a12(r148,l0) a13(r151,l0) a14(r145,l0) a20(r138,l0) a21(r163,l0) a22(r143,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r160,l0) conflicts: a0(r139,l0) a4(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r133,l0) conflicts: a0(r139,l0) a4(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r156,l0) conflicts: a0(r139,l0) a4(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r154,l0) conflicts: a0(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r134,l0) conflicts: a0(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a10(r152,l0) conflicts: a0(r139,l0) a4(r141,l0) a11(r135,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a11(r135,l0) conflicts: a0(r139,l0) a4(r141,l0) a10(r152,l0) a12(r148,l0) a13(r151,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a12(r148,l0) conflicts: a0(r139,l0) a4(r141,l0) a11(r135,l0) a13(r151,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a13(r151,l0) conflicts: a0(r139,l0) a4(r141,l0) a11(r135,l0) a12(r148,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a14(r145,l0) conflicts: a0(r139,l0) a4(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a20(r138,l0) conflicts: a0(r139,l0) a1(r168,l0) a3(r167,l0) a4(r141,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a21(r163,l0) conflicts: a0(r139,l0) a1(r168,l0) a3(r167,l0) a4(r141,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a22(r143,l0) conflicts: a0(r139,l0) a1(r168,l0) a2(r140,l0) a3(r167,l0) a4(r141,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1

  cp0:a2(r140)<->a20(r138)@125:shuffle
  cp1:a9(r134)<->a11(r135)@125:shuffle
  cp2:a9(r134)<->a10(r152)@125:shuffle
  regions=2, blocks=13, points=35
    allocnos=23, copies=3, conflicts=0, ranges=24

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 12 11 10 9 8 7 6 5 4 3 2
    all: 0r139 1r168 2r140 3r167 4r141 5r160 6r133 7r156 8r154 9r134 10r152 11r135 12r148 13r151 14r145 20r138 21r163 22r143
    modified regnos: 133 134 135 138 139 140 141 143 145 148 151 152 154 156 160 163 167 168
    border:
    Pressure: GENERAL_REGS=8
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 168 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 167 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
      Pushing a7(r156,l0)
      Pushing a5(r160,l0)
      Pushing a6(r133,l0)
      Pushing a21(r163,l0)
      Pushing a20(r138,l0)
      Pushing a13(r151,l0)
      Pushing a12(r148,l0)
      Pushing a10(r152,l0)
      Pushing a8(r154,l0)
      Pushing a11(r135,l0)
      Pushing a22(r143,l0)
      Pushing a3(r167,l0)
      Pushing a1(r168,l0)
      Pushing a9(r134,l0)
      Pushing a4(r141,l0)
      Pushing a14(r145,l0)
      Pushing a0(r139,l0)
      Pushing a2(r140,l0)
      Popping a2(r140,l0)  -- assign reg 4
      Popping a0(r139,l0)  -- assign reg 5
      Popping a14(r145,l0)  -- assign reg 4
      Popping a4(r141,l0)  -- assign reg 6
      Popping a9(r134,l0)  -- assign reg 3
      Popping a1(r168,l0)  -- assign reg 7
      Popping a3(r167,l0)  -- assign reg 8
      Popping a22(r143,l0)  -- assign reg 3
      Popping a11(r135,l0)  -- assign reg 3
      Popping a8(r154,l0)  -- assign reg 3
      Popping a10(r152,l0)  -- assign reg 2
      Popping a12(r148,l0)  -- assign reg 2
      Popping a13(r151,l0)  -- assign reg 1
      Popping a20(r138,l0)  -- assign reg 4
      Popping a21(r163,l0)  -- assign reg 3
      Popping a6(r133,l0)  -- assign reg 3
      Popping a5(r160,l0)  -- assign reg 3
      Popping a7(r156,l0)  -- assign reg 3
Disposition:
    6:r133 l0     3    9:r134 l0     3   11:r135 l0     3   20:r138 l0     4
    0:r139 l0     5    2:r140 l0     4    4:r141 l0     6   22:r143 l0     3
   14:r145 l0     4   12:r148 l0     2   13:r151 l0     1   10:r152 l0     2
    8:r154 l0     3    7:r156 l0     3    5:r160 l0     3   21:r163 l0     3
    3:r167 l0     8    1:r168 l0     7
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=112, live_throughout: 13, dead_or_set: 145
insn=113, live_throughout: 13, dead_or_set: 145
insn=8, live_throughout: 13, 145, dead_or_set: 141
insn=9, live_throughout: 13, 141, 145, dead_or_set: 0
insn=10, live_throughout: 13, 141, 145, dead_or_set: 0, 14
insn=12, live_throughout: 13, 14, 141, 145, dead_or_set: 0, 139
insn=13, live_throughout: 13, 14, 139, 141, 145, dead_or_set: 
insn=15, live_throughout: 13, 139, 141, 145, dead_or_set: 0
insn=16, live_throughout: 0, 13, 139, 141, 145, dead_or_set: 1
insn=17, live_throughout: 13, 139, 141, 145, dead_or_set: 0, 1, 14
insn=18, live_throughout: 13, 139, 141, 145, dead_or_set: 14
insn=25, live_throughout: 13, 139, 141, dead_or_set: 145, 151
insn=29, live_throughout: 13, 139, 141, 151, dead_or_set: 0
insn=20, live_throughout: 0, 13, 139, 141, 151, dead_or_set: 135
insn=21, live_throughout: 0, 13, 139, 141, 151, dead_or_set: 135
insn=115, live_throughout: 0, 13, 135, 139, 141, 151, dead_or_set: 148
insn=26, live_throughout: 0, 13, 135, 139, 141, dead_or_set: 148, 151, 152
insn=27, live_throughout: 0, 13, 139, 141, dead_or_set: 134, 135, 152
insn=30, live_throughout: 0, 13, 134, 139, 141, dead_or_set: 1
insn=31, live_throughout: 13, 139, 141, dead_or_set: 0, 1, 14, 134
insn=32, live_throughout: 13, 139, 141, dead_or_set: 154
insn=34, live_throughout: 13, 139, 141, dead_or_set: 14, 154
insn=35, live_throughout: 13, 139, 141, dead_or_set: 156
insn=36, live_throughout: 13, 139, 141, dead_or_set: 133, 156
insn=37, live_throughout: 13, 133, 139, 141, dead_or_set: 
insn=39, live_throughout: 13, 133, 139, 141, dead_or_set: 
insn=40, live_throughout: 13, 133, 139, 141, dead_or_set: 
insn=43, live_throughout: 13, 133, 139, 141, dead_or_set: 
insn=44, live_throughout: 13, 133, 139, 141, dead_or_set: 
insn=47, live_throughout: 13, 139, 141, dead_or_set: 133
insn=48, live_throughout: 13, 139, 141, dead_or_set: 
insn=50, live_throughout: 13, 139, 141, dead_or_set: 160
insn=51, live_throughout: 13, 139, 141, dead_or_set: 160
insn=52, live_throughout: 13, 139, 141, dead_or_set: 
insn=54, live_throughout: 13, 139, 141, dead_or_set: 
insn=55, live_throughout: 13, 139, 141, dead_or_set: 
insn=59, live_throughout: 13, 139, 141, dead_or_set: 140
insn=75, live_throughout: 13, 139, 140, 141, dead_or_set: 167
insn=57, live_throughout: 13, 139, 140, 141, 167, dead_or_set: 0
insn=58, live_throughout: 13, 139, 140, 141, 167, dead_or_set: 0, 14
insn=79, live_throughout: 13, 139, 140, 141, 167, dead_or_set: 168
insn=110, live_throughout: 13, 139, 140, 141, 167, 168, dead_or_set: 
insn=78, live_throughout: 0, 13, 139, 140, 141, 167, 168, dead_or_set: 
insn=63, live_throughout: 0, 13, 139, 140, 141, 167, 168, dead_or_set: 143
insn=69, live_throughout: 0, 13, 139, 140, 141, 143, 167, 168, dead_or_set: 1
insn=64, live_throughout: 0, 1, 13, 139, 140, 141, 167, 168, dead_or_set: 143
insn=65, live_throughout: 0, 1, 13, 139, 140, 141, 167, 168, dead_or_set: 
insn=70, live_throughout: 13, 139, 140, 141, 167, 168, dead_or_set: 0, 1, 14
insn=109, live_throughout: 13, 139, 140, 141, 167, 168, dead_or_set: 
insn=68, live_throughout: 13, 139, 140, 141, 167, 168, dead_or_set: 0
insn=73, live_throughout: 0, 13, 139, 141, 167, 168, dead_or_set: 140, 163
insn=74, live_throughout: 0, 13, 139, 141, 167, 168, dead_or_set: 163
insn=76, live_throughout: 0, 13, 139, 141, 167, 168, dead_or_set: 138
insn=77, live_throughout: 0, 13, 139, 141, 167, 168, dead_or_set: 138, 140
insn=80, live_throughout: 0, 13, 139, 140, 141, 167, 168, dead_or_set: 
insn=81, live_throughout: 0, 13, 139, 140, 141, 167, 168, dead_or_set: 
insn=84, live_throughout: 13, 139, dead_or_set: 0
insn=85, live_throughout: 13, 139, dead_or_set: 0, 14
insn=86, live_throughout: 13, 14, 139, dead_or_set: 
insn=92, live_throughout: 13, 14, dead_or_set: 0, 139
insn=98, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 143: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 115 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 50 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 75 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 79 (nil))
changing reg in insn 36
changing reg in insn 47
changing reg in insn 39
changing reg in insn 27
changing reg in insn 31
changing reg in insn 30
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 27
changing reg in insn 76
changing reg in insn 77
changing reg in insn 12
changing reg in insn 43
changing reg in insn 92
changing reg in insn 29
changing reg in insn 16
changing reg in insn 77
changing reg in insn 59
changing reg in insn 79
changing reg in insn 80
changing reg in insn 73
changing reg in insn 63
changing reg in insn 63
changing reg in insn 80
changing reg in insn 8
changing reg in insn 68
changing reg in insn 15
changing reg in insn 9
changing reg in insn 63
changing reg in insn 69
changing reg in insn 64
changing reg in insn 113
changing reg in insn 112
changing reg in insn 113
changing reg in insn 25
changing reg in insn 8
changing reg in insn 115
changing reg in insn 26
changing reg in insn 25
changing reg in insn 26
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 50
changing reg in insn 51
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
Spilling for insn 112.
Using reg 3 for reload 0
Spilling for insn 74.

Reloads for insn # 112
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 74
Reload 0: reload_out (SI) = (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 __ptr+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 __ptr+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 17.
verify found no changes in insn with uid = 18.
rescanning insn with uid = 31.
deleting insn with uid = 31.
rescanning insn with uid = 34.
deleting insn with uid = 34.
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 85.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 26 (    2)


__cpu_disable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,10u} r1={13d,4u,1d} r2={11d,2u} r3={19d,13u} r4={5d,8u,2d} r5={1d,4u} r6={1d,3u} r7={1d,1u} r8={1d,1u} r12={9d} r13={1d,23u,1d} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={15d,5u} r25={1d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} 
;;    total ref usage 1062{982d,75u,5e} in 57{49 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 11 2 NOTE_INSN_DELETED)

(note 11 6 117 2 NOTE_INSN_DELETED)

(insn 117 11 112 2 arch/arm/kernel/smp.c:165 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 112 117 113 2 arch/arm/kernel/smp.c:165 (set (reg:SI 4 r4 [145])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 113 112 8 2 arch/arm/kernel/smp.c:165 (set (reg:SI 4 r4 [145])
        (and:SI (reg:SI 4 r4 [145])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 113 9 2 arch/arm/kernel/smp.c:165 (set (reg/v:SI 6 r6 [orig:141 cpu ] [141])
        (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/smp.c:169 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:141 cpu ] [141])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 12 2 arch/arm/kernel/smp.c:169 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_cpu_disable") [flags 0x41] <function_decl 0x10c9f300 platform_cpu_disable>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 10 13 2 arch/arm/kernel/smp.c:170 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 5 r5 [orig:139 ret ] [139])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 13 12 14 2 arch/arm/kernel/smp.c:170 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  12 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 14 13 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 28 14 33 3 NOTE_INSN_DELETED)

(note 33 28 38 3 NOTE_INSN_DELETED)

(note 38 33 15 3 NOTE_INSN_DELETED)

(insn 15 38 16 3 arch/arm/kernel/smp.c:177 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:141 cpu ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 arch/arm/kernel/smp.c:177 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 17 16 18 3 arch/arm/kernel/smp.c:177 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 18 17 25 3 arch/arm/kernel/smp.c:182 (parallel [
            (call (mem:SI (symbol_ref:SI ("migrate_irqs") [flags 0x41] <function_decl 0x11007580 migrate_irqs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 25 18 29 3 arch/arm/kernel/smp.c:540 (set (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
        (mem/s/j:SI (plus:SI (reg:SI 4 r4 [145])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 25 20 3 arch/arm/kernel/smp.c:542 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 20 29 21 3 arch/arm/kernel/smp.c:540 (set (reg/v:SI 3 r3 [orig:135 __ptr ] [135])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 21 20 115 3 arch/arm/kernel/smp.c:540 (set (reg/v:SI 3 r3 [orig:135 __ptr ] [135])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:135 __ptr ] [135])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8558723)) -1 (nil))

(insn 115 21 26 3 arch/arm/kernel/smp.c:540 (set (reg/f:SI 2 r2 [148])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 26 115 27 3 arch/arm/kernel/smp.c:540 (set (reg:SI 2 r2 [152])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [148])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:151 <variable>.cpu ] [151])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 27 26 30 3 arch/arm/kernel/smp.c:540 (set (reg/v/f:SI 3 r3 [orig:134 evt ] [134])
        (plus:SI (reg/v:SI 3 r3 [orig:135 __ptr ] [135])
            (reg:SI 2 r2 [152]))) 4 {*arm_addsi3} (nil))

(insn 30 27 31 3 arch/arm/kernel/smp.c:542 (set (reg:SI 1 r1)
        (reg/v/f:SI 3 r3 [orig:134 evt ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 3 arch/arm/kernel/smp.c:542 (parallel [
            (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:134 evt ] [134])
                            (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 34 3 arch/arm/kernel/smp.c:193 (set (reg/f:SI 3 r3 [154])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1141de40 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1141de40 cpu_cache>)
        (nil)))

(call_insn 34 32 35 3 arch/arm/kernel/smp.c:193 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [154])
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))

(insn 35 34 36 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [156])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)
        (nil)))

(insn 36 35 37 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [156])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 37 36 39 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8433656)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 39 37 40 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 40 39 41 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%]  (fallthru)
(note 41 40 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 43 41 44 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg/v:SI 5 r5 [orig:139 ret ] [139])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8434296)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 44 43 45 5 129 "" [1 uses])

(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 5 NOTE_INSN_DELETED)

(insn 47 46 48 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 48 47 49 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [160])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 51 50 52 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [160])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8435064)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 7 [r7] 8 [r8]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 52 51 53 7 130 "" [1 uses])

(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8435448)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 55 54 59 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8435576)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 59 55 75 7 arch/arm/kernel/smp.c:197 (set (reg/v/f:SI 4 r4 [orig:140 p ] [140])
        (symbol_ref:SI ("init_task") [flags 0xc0] <var_decl 0x10fc0ea0 init_task>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_task") [flags 0xc0] <var_decl 0x10fc0ea0 init_task>)
        (nil)))

(insn 75 59 57 7 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/f:SI 8 r8 [orig:167 __ptr.396 ] [167])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))
        (nil)))

(insn 57 75 58 7 arch/arm/kernel/smp.c:196 (set (reg:SI 0 r0)
        (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)
        (nil)))

(call_insn 58 57 79 7 arch/arm/kernel/smp.c:196 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_read_lock") [flags 0x41] <function_decl 0x10aef700 _raw_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 79 58 110 7 arch/arm/kernel/smp.c:197 (set (reg/f:SI 7 r7 [168])
        (reg/v/f:SI 4 r4 [orig:140 p ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("init_task") [flags 0xc0] <var_decl 0x10fc0ea0 init_task>)
        (nil)))

(jump_insn 110 79 111 7 arch/arm/kernel/smp.c:197 (set (pc)
        (label_ref 109)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 111 110 78)

;; Start of basic block ( 10) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [91.0%] 
(code_label 78 111 62 8 132 "" [1 uses])

(note 62 78 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 69 8 arch/arm/kernel/smp.c:198 (set (reg/f:SI 3 r3 [orig:143 D.26034 ] [143])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 p ] [140])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 p ] [140])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])
        (nil)))

(insn 69 63 64 8 include/linux/cpumask.h:266 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 3 r3 [orig:143 D.26034 ] [143])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 64 69 65 8 arch/arm/kernel/smp.c:198 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:143 D.26034 ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 66 8 arch/arm/kernel/smp.c:198 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  9 [69.8%]  (fallthru)
;; Succ edge  10 [30.2%]  (dfs_back)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  8 [69.8%]  (fallthru)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 67 66 70 9 NOTE_INSN_DELETED)

(call_insn 70 67 109 9 include/linux/cpumask.h:266 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [30.2%]  (dfs_back)
;; Pred edge  7 [100.0%] 
(code_label 109 70 108 10 136 "" [2 uses])

(note 108 109 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 108 73 10 include/linux/cpumask.h:266 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:141 cpu ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 73 68 74 10 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/f:SI 3 r3 [orig:163 <variable>.tasks.next ] [163])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 p ] [140])
                (const_int 464 [0x1d0])) [0 <variable>.tasks.next+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 __ptr+0 S4 A32])
        (nil)))

(insn 74 73 76 10 arch/arm/kernel/smp.c:197 discrim 1 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 __ptr+0 S4 A32])
        (reg/f:SI 3 r3 [orig:163 <variable>.tasks.next ] [163])) 167 {*arm_movsi_insn} (nil))

(insn 76 74 77 10 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/v/f:SI 4 r4 [orig:138 _________p1 ] [138])
        (mem/v/f:SI (reg/f:SI 8 r8 [orig:167 __ptr.396 ] [167]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 80 10 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/v/f:SI 4 r4 [orig:140 p ] [140])
        (plus:SI (reg/v/f:SI 4 r4 [orig:138 _________p1 ] [138])
            (const_int -464 [0xfffffffffffffe30]))) 4 {*arm_addsi3} (nil))

(insn 80 77 81 10 arch/arm/kernel/smp.c:197 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:140 p ] [140])
            (reg/f:SI 7 r7 [168]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 4 r4 [orig:140 p ] [140])
            (symbol_ref:SI ("init_task") [flags 0xc0] <var_decl 0x10fc0ea0 init_task>))
        (nil)))

(jump_insn 81 80 82 10 arch/arm/kernel/smp.c:197 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 10 -> ( 8 11)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  8 [91.0%] 
;; Succ edge  11 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [9.0%]  (fallthru,loop_exit)
(note 82 81 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 84 82 85 11 arch/arm/kernel/smp.c:201 (set (reg:SI 0 r0)
        (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)
        (nil)))

(call_insn 85 84 86 11 arch/arm/kernel/smp.c:201 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_read_unlock") [flags 0x41] <function_decl 0x10aefc00 _raw_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 2 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 86 85 87 12 128 "" [1 uses])

(note 87 86 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 92 87 98 12 arch/arm/kernel/smp.c:204 (set (reg/i:SI 0 r0)
        (reg/v:SI 5 r5 [orig:139 ret ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 98 92 114 12 arch/arm/kernel/smp.c:204 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 114 98 116 NOTE_INSN_DELETED)

(note 116 114 0 NOTE_INSN_DELETED)


;; Function __cpu_up (__cpu_up)[0:1406] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 43 (    2)
scanning new insn with uid = 216.
verify found no changes in insn with uid = 216.
deleting insn with uid = 117.
scanning new insn with uid = 217.
verify found no changes in insn with uid = 217.
deleting insn with uid = 73.
scanning new insn with uid = 218.
verify found no changes in insn with uid = 218.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 43 (    2)

Pass 0 for finding allocno costs

    a44 (r205,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r204,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r199,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r191,l1) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r188,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r185,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r185,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r155,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a2(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a5(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a22(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a24(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a32(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a34(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a37(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a41(r155,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a42(r185,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a43(r204,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r205,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r191,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r188,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r205: preferred GENERAL_REGS, alternative NO_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a2(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a5(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a18(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a22(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a24(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a32(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a34(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a37(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a41(r155,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a42(r185,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a43(r204,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r205,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r191,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r188,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 198(l0): point = 0
   Insn 192(l0): point = 2
   Insn 185(l0): point = 5
   Insn 183(l0): point = 7
   Insn 184(l0): point = 9
   Insn 181(l0): point = 11
   Insn 180(l0): point = 13
   Insn 179(l0): point = 15
   Insn 178(l0): point = 17
   Insn 177(l0): point = 19
   Insn 170(l0): point = 21
   Insn 173(l0): point = 23
   Insn 176(l0): point = 25
   Insn 169(l0): point = 27
   Insn 175(l0): point = 29
   Insn 174(l0): point = 31
   Insn 168(l0): point = 33
   Insn 165(l0): point = 36
   Insn 164(l0): point = 38
   Insn 162(l0): point = 40
   Insn 163(l0): point = 42
   Insn 213(l0): point = 45
   Insn 156(l0): point = 47
   Insn 155(l0): point = 49
   Insn 153(l0): point = 51
   Insn 154(l0): point = 53
   Insn 150(l0): point = 56
   Insn 149(l0): point = 58
   Insn 147(l0): point = 60
   Insn 146(l0): point = 62
   Insn 144(l0): point = 64
   Insn 143(l0): point = 66
   Insn 211(l0): point = 69
   Insn 115(l0): point = 71
   Insn 108(l0): point = 73
   Insn 122(l0): point = 75
   Insn 118(l0): point = 77
   Insn 216(l0): point = 79
   Insn 107(l0): point = 81
   Insn 114(l0): point = 83
   Insn 135(l0): point = 85
   Insn 116(l0): point = 87
   Insn 113(l0): point = 89
   Insn 111(l0): point = 91
   Insn 106(l0): point = 93
   Insn 104(l0): point = 96
   Insn 103(l0): point = 98
   Insn 101(l0): point = 100
   Insn 99(l0): point = 102
   Insn 100(l0): point = 104
   Insn 96(l0): point = 107
   Insn 94(l0): point = 109
   Insn 95(l0): point = 111
   Insn 85(l0): point = 114
   Insn 84(l0): point = 116
   Insn 83(l0): point = 118
   Insn 82(l0): point = 120
   Insn 81(l0): point = 122
   Insn 75(l0): point = 124
   Insn 80(l0): point = 126
   Insn 74(l0): point = 128
   Insn 217(l0): point = 130
   Insn 68(l0): point = 132
   Insn 67(l0): point = 134
   Insn 71(l0): point = 136
   Insn 66(l0): point = 138
   Insn 79(l0): point = 140
   Insn 70(l0): point = 142
   Insn 65(l0): point = 144
   Insn 64(l0): point = 146
   Insn 63(l0): point = 148
   Insn 62(l0): point = 150
   Insn 61(l0): point = 152
   Insn 60(l0): point = 154
   Insn 57(l0): point = 156
   Insn 56(l0): point = 158
   Insn 55(l0): point = 160
   Insn 209(l0): point = 163
   Insn 47(l0): point = 165
   Insn 45(l0): point = 168
   Insn 44(l0): point = 170
   Insn 42(l0): point = 172
   Insn 41(l0): point = 174
   Insn 37(l0): point = 177
   Insn 36(l0): point = 179
   Insn 35(l0): point = 181
   Insn 207(l0): point = 184
   Insn 30(l0): point = 186
   Insn 205(l0): point = 189
   Insn 25(l0): point = 191
   Insn 24(l0): point = 193
   Insn 22(l0): point = 195
   Insn 23(l0): point = 197
   Insn 19(l0): point = 200
   Insn 18(l0): point = 202
   Insn 17(l0): point = 204
   Insn 16(l0): point = 206
   Insn 13(l0): point = 209
   Insn 12(l0): point = 211
   Insn 11(l0): point = 213
   Insn 10(l0): point = 215
   Insn 9(l0): point = 217
   Insn 218(l0): point = 219
   Insn 7(l0): point = 221
   Insn 6(l0): point = 223
   Insn 2(l0): point = 225
   Insn 140(l1): point = 228
   Insn 139(l1): point = 230
   Insn 138(l1): point = 232
   Insn 204(l1): point = 234
   Insn 136(l1): point = 236
   Insn 132(l1): point = 239
   Insn 131(l1): point = 241
   Insn 128(l1): point = 244
   Insn 127(l1): point = 246
   Insn 125(l1): point = 248
   Insn 123(l1): point = 250
 a0(r143): [189..191] [163..165] [56..98] [3..47]
 a1(r144): [168..170] [10..162]
 a2(r198): [22..33]
 a3(r199): [22..27]
 a4(r155): [198..225] [168..188] [54..162] [43..44]
 a5(r194): [59..60]
 a6(r139): [61..87]
 a7(r135): [61..62]
 a8(r193): [63..64]
 a9(r185): [63..83]
 a10(r192): [65..66]
 a11(r136): [69..71]
 a12(r141): [69..73]
 a13(r149): [74..81]
 a14(r205): [69..75]
 a15(r133): [69..77]
 a16(r186): [78..79]
 a17(r181): [82..93]
 a18(r183): [84..89]
 a19(r204): [69..85]
 a20(r184): [90..91]
 a21(r145): [209..213] [192..204] [168..188] [105..162]
 a22(r140): [108..118]
 a23(r161): [110..146]
 a24(r173): [119..120]
 a25(r169): [123..124]
 a26(r168): [129..130]
 a27(r163): [133..134]
 a28(r164): [135..138]
 a29(r166): [137..142]
 a30(r162): [139..144]
 a31(r146): [200..215] [187..188]
 a32(r158): [216..217]
 a33(r142): [216..223]
 a34(r157): [218..219]
 a35(r133): [228..252]
 a36(r136): [228..252]
 a37(r139): [228..252]
 a38(r141): [228..252]
 a39(r143): [228..252]
 a40(r144): [228..252]
 a41(r155): [228..252]
 a42(r185): [228..252]
 a43(r204): [228..252]
 a44(r205): [228..252]
 a45(r191): [231..232]
 a46(r147): [233..236]
 a47(r138): [247..248]
 a48(r188): [249..250]
 Rebuilding regno allocno list for 191
 Rebuilding regno allocno list for 188
 Rebuilding regno allocno list for 147
 Rebuilding regno allocno list for 138
Compressing live ranges: from 253 to 88 - 34%
Ranges after the compression:
 a0(r143): [78..87] [63..64] [57..58] [9..36] [0..7]
 a1(r144): [78..87] [59..60] [1..56]
 a2(r198): [2..4]
 a3(r199): [2..3]
 a4(r155): [78..87] [66..77] [59..62] [8..56] [5..6]
 a5(r194): [10..11]
 a6(r139): [78..87] [12..31]
 a7(r135): [12..13]
 a8(r193): [14..15]
 a9(r185): [78..87] [14..28]
 a10(r192): [16..17]
 a11(r136): [78..87] [18..19]
 a12(r141): [78..87] [18..20]
 a13(r149): [21..26]
 a14(r205): [78..87] [18..22]
 a15(r133): [78..87] [18..23]
 a16(r186): [24..25]
 a17(r181): [27..35]
 a18(r183): [29..32]
 a19(r204): [78..87] [18..30]
 a20(r184): [33..34]
 a21(r145): [69..70] [65..68] [59..62] [37..56]
 a22(r140): [38..40]
 a23(r161): [39..55]
 a24(r173): [41..42]
 a25(r169): [43..44]
 a26(r168): [45..46]
 a27(r163): [47..48]
 a28(r164): [49..51]
 a29(r166): [50..53]
 a30(r162): [52..54]
 a31(r146): [67..71] [61..62]
 a32(r158): [72..73]
 a33(r142): [72..76]
 a34(r157): [74..75]
 a45(r191): [79..80]
 a46(r147): [81..82]
 a47(r138): [83..84]
 a48(r188): [85..86]
+++Allocating 312 bytes for conflict table (uncompressed size 392)
;; a0(r143,l0) conflicts: a1(r144,l0) a3(r199,l0) a2(r198,l0) a4(r155,l0) a5(r194,l0) a7(r135,l0) a6(r139,l0) a8(r193,l0) a9(r185,l0) a10(r192,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a13(r149,l0) a16(r186,l0) a17(r181,l0) a18(r183,l0) a20(r184,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r144,l0) conflicts: a0(r143,l0) a3(r199,l0) a2(r198,l0) a4(r155,l0) a5(r194,l0) a7(r135,l0) a6(r139,l0) a8(r193,l0) a9(r185,l0) a10(r192,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a13(r149,l0) a16(r186,l0) a17(r181,l0) a18(r183,l0) a20(r184,l0) a21(r145,l0) a22(r140,l0) a23(r161,l0) a24(r173,l0) a25(r169,l0) a26(r168,l0) a27(r163,l0) a28(r164,l0) a29(r166,l0) a30(r162,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r198,l0) conflicts: a0(r143,l0) a1(r144,l0) a3(r199,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a3(r199,l0) conflicts: a0(r143,l0) a1(r144,l0) a2(r198,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a4(r155,l0) conflicts: a0(r143,l0) a1(r144,l0) a5(r194,l0) a7(r135,l0) a6(r139,l0) a8(r193,l0) a9(r185,l0) a10(r192,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a13(r149,l0) a16(r186,l0) a17(r181,l0) a18(r183,l0) a20(r184,l0) a21(r145,l0) a22(r140,l0) a23(r161,l0) a24(r173,l0) a25(r169,l0) a26(r168,l0) a27(r163,l0) a28(r164,l0) a29(r166,l0) a30(r162,l0) a31(r146,l0) a32(r158,l0) a33(r142,l0) a34(r157,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a5(r194,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r139,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a7(r135,l0) a8(r193,l0) a9(r185,l0) a10(r192,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a13(r149,l0) a16(r186,l0) a17(r181,l0) a18(r183,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a7(r135,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r193,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r185,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a8(r193,l0) a10(r192,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a13(r149,l0) a16(r186,l0) a17(r181,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a10(r192,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r136,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a12(r141,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a13(r149,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0) a16(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r205,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a12(r141,l0) a15(r133,l0) a19(r204,l0) a13(r149,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a15(r133,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a19(r204,l0) a13(r149,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a16(r186,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a19(r204,l0) a13(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r181,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a19(r204,l0) a18(r183,l0) a20(r184,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r183,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a19(r204,l0) a17(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a19(r204,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a13(r149,l0) a16(r186,l0) a17(r181,l0) a18(r183,l0) a45(r191,l0) a46(r147,l0) a47(r138,l0) a48(r188,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a20(r184,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a17(r181,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r145,l0) conflicts: a1(r144,l0) a4(r155,l0) a22(r140,l0) a23(r161,l0) a24(r173,l0) a25(r169,l0) a26(r168,l0) a27(r163,l0) a28(r164,l0) a29(r166,l0) a30(r162,l0) a31(r146,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a22(r140,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a23(r161,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a22(r140,l0) a24(r173,l0) a25(r169,l0) a26(r168,l0) a27(r163,l0) a28(r164,l0) a29(r166,l0) a30(r162,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a24(r173,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r169,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a26(r168,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a27(r163,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a28(r164,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0) a29(r166,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a29(r166,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0) a28(r164,l0) a30(r162,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a30(r162,l0) conflicts: a1(r144,l0) a4(r155,l0) a21(r145,l0) a23(r161,l0) a29(r166,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a31(r146,l0) conflicts: a4(r155,l0) a21(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a32(r158,l0) conflicts: a4(r155,l0) a33(r142,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a33(r142,l0) conflicts: a4(r155,l0) a32(r158,l0) a34(r157,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a34(r157,l0) conflicts: a4(r155,l0) a33(r142,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a45(r191,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a46(r147,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a47(r138,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a48(r188,l0) conflicts: a0(r143,l0) a1(r144,l0) a4(r155,l0) a6(r139,l0) a9(r185,l0) a11(r136,l0) a12(r141,l0) a14(r205,l0) a15(r133,l0) a19(r204,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  cp0:a5(r194)<->a7(r135)@125:shuffle
  cp1:a5(r194)<->a6(r139)@125:shuffle
  cp2:a45(r191)<->a46(r147)@125:shuffle
  cp3:a18(r183)<->a20(r184)@125:shuffle
  cp4:a9(r185)<->a18(r183)@125:shuffle
  cp5:a15(r133)<->a16(r186)@125:shuffle
  cp6:a12(r141)<->a13(r149)@125:shuffle
  cp7:a28(r164)<->a30(r162)@125:shuffle
  cp8:a27(r163)<->a28(r164)@125:shuffle
  cp9:a0(r143)<->a21(r145)@1000:move
  cp10:a31(r146)<->a33(r142)@125:shuffle
  cp11:a31(r146)<->a32(r158)@125:shuffle
  regions=2, blocks=21, points=88
    allocnos=49, copies=12, conflicts=0, ranges=60

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r143 1r144 2r198 3r199 4r155 5r194 6r139 7r135 8r193 9r185 10r192 11r136 12r141 13r149 14r205 15r133 16r186 17r181 18r183 19r204 20r184 21r145 22r140 23r161 24r173 25r169 26r168 27r163 28r164 29r166 30r162 31r146 32r158 33r142 34r157 45r191 46r147 47r138 48r188
    modified regnos: 133 135 136 138 139 140 141 142 143 144 145 146 147 149 155 157 158 161 162 163 164 166 168 169 173 181 183 184 185 186 188 191 192 193 194 198 199 204 205
    border:
    Pressure: GENERAL_REGS=12
    Reg 143 of GENERAL_REGS has 4 regs less
    Reg 144 of GENERAL_REGS has 4 regs less
    Reg 198 of GENERAL_REGS has 3 regs less
    Reg 199 of GENERAL_REGS has 3 regs less
    Reg 155 of GENERAL_REGS has 4 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 185 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
    Reg 205 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 204 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 161 of GENERAL_REGS has 3 regs less
    Reg 169 of GENERAL_REGS has 3 regs less
    Reg 168 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 2 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
      Pushing a24(r173,l0)
      Pushing a20(r184,l0)
      Pushing a18(r183,l0)
      Pushing a16(r186,l0)
      Pushing a13(r149,l0)
      Pushing a10(r192,l0)
      Pushing a8(r193,l0)
      Pushing a7(r135,l0)
      Pushing a5(r194,l0)
      Pushing a17(r181,l0)
      Pushing a48(r188,l0)
      Pushing a47(r138,l0)
      Pushing a46(r147,l0)
      Pushing a45(r191,l0)
      Pushing a34(r157,l0)
      Pushing a32(r158,l0)
      Pushing a30(r162,l0)
      Pushing a29(r166,l0)
      Pushing a28(r164,l0)
      Pushing a27(r163,l0)
      Pushing a26(r168,l0)
      Pushing a33(r142,l0)
      Pushing a19(r204,l0)
      Pushing a15(r133,l0)
      Pushing a14(r205,l0)
      Pushing a12(r141,l0)
      Pushing a11(r136,l0)
      Pushing a31(r146,l0)
      Pushing a9(r185,l0)
      Pushing a6(r139,l0)
      Pushing a25(r169,l0)
      Pushing a22(r140,l0)
      Pushing a3(r199,l0)
      Pushing a2(r198,l0)
      Pushing a23(r161,l0)
      Pushing a1(r144,l0)
      Pushing a0(r143,l0)
      Pushing a21(r145,l0)
      Pushing a4(r155,l0)
      Popping a4(r155,l0)  -- assign reg 4
      Popping a21(r145,l0)  -- assign reg 5
      Popping a0(r143,l0)  -- assign reg 5
      Popping a1(r144,l0)  -- assign reg 6
      Popping a23(r161,l0)  -- assign reg 7
      Popping a2(r198,l0)  -- assign reg 3
      Popping a3(r199,l0)  -- assign reg 12
      Popping a22(r140,l0)  -- assign reg 3
      Popping a25(r169,l0)  -- assign reg 3
      Popping a6(r139,l0)  -- assign reg 7
      Popping a9(r185,l0)  -- assign reg 8
      Popping a31(r146,l0)  -- assign reg 6
      Popping a11(r136,l0)  -- assign reg 10
      Popping a12(r141,l0)  -- assign reg 9
      Popping a14(r205,l0)  -- assign reg 11
      Popping a15(r133,l0)  -- assign reg 3
      Popping a19(r204,l0)  -- assign reg 2
      Popping a33(r142,l0)  -- assign reg 3
      Popping a26(r168,l0)  -- assign reg 3
      Popping a27(r163,l0)  -- assign reg 3
      Popping a28(r164,l0)  -- assign reg 3
      Popping a29(r166,l0)  -- assign reg 2
      Popping a30(r162,l0)  -- assign reg 3
      Popping a32(r158,l0)  -- assign reg 6
      Popping a34(r157,l0)  -- assign reg 2
      Popping a45(r191,l0)  -- assign reg 1
      Popping a46(r147,l0)  -- assign reg 1
      Popping a47(r138,l0)  -- assign reg 1
      Popping a48(r188,l0)  -- assign reg 1
      Popping a17(r181,l0)  -- assign reg 3
      Popping a5(r194,l0)  -- assign reg 7
      Popping a7(r135,l0)  -- assign reg 3
      Popping a8(r193,l0)  -- assign reg 3
      Popping a10(r192,l0)  -- assign reg 3
      Popping a13(r149,l0)  -- assign reg 9
      Popping a16(r186,l0)  -- assign reg 3
      Popping a18(r183,l0)  -- assign reg 8
      Popping a20(r184,l0)  -- assign reg 8
      Popping a24(r173,l0)  -- assign reg 3
Disposition:
   15:r133 l0     3    7:r135 l0     3   11:r136 l0    10   47:r138 l0     1
    6:r139 l0     7   22:r140 l0     3   12:r141 l0     9   33:r142 l0     3
    0:r143 l0     5    1:r144 l0     6   21:r145 l0     5   31:r146 l0     6
   46:r147 l0     1   13:r149 l0     9    4:r155 l0     4   34:r157 l0     2
   32:r158 l0     6   23:r161 l0     7   30:r162 l0     3   27:r163 l0     3
   28:r164 l0     3   29:r166 l0     2   26:r168 l0     3   25:r169 l0     3
   24:r173 l0     3   17:r181 l0     3   18:r183 l0     8   20:r184 l0     8
    9:r185 l0     8   16:r186 l0     3   48:r188 l0     1   45:r191 l0     1
   10:r192 l0     3    8:r193 l0     3    5:r194 l0     7    2:r198 l0     3
    3:r199 l0    12   19:r204 l0     2   14:r205 l0    11
New iteration of spill/restore move
+++Costs: overall 40000, reg 40000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 0, 13, dead_or_set: 155
insn=6, live_throughout: 0, 13, 155, dead_or_set: 142
insn=7, live_throughout: 0, 13, 155, dead_or_set: 142
insn=218, live_throughout: 0, 13, 142, 155, dead_or_set: 157
insn=9, live_throughout: 0, 13, 142, 155, dead_or_set: 157, 158
insn=10, live_throughout: 0, 13, 155, dead_or_set: 142, 146, 158
insn=11, live_throughout: 0, 13, 146, 155, dead_or_set: 145
insn=12, live_throughout: 0, 13, 145, 146, 155, dead_or_set: 
insn=13, live_throughout: 0, 13, 145, 146, 155, dead_or_set: 
insn=16, live_throughout: 13, 146, 155, dead_or_set: 0, 14
insn=17, live_throughout: 13, 146, 155, dead_or_set: 0, 145
insn=18, live_throughout: 13, 145, 146, 155, dead_or_set: 
insn=19, live_throughout: 13, 145, 146, 155, dead_or_set: 
insn=23, live_throughout: 13, 145, dead_or_set: 1, 155
insn=22, live_throughout: 1, 13, 145, dead_or_set: 0
insn=24, live_throughout: 13, 145, dead_or_set: 0, 1, 14
insn=25, live_throughout: 13, 14, dead_or_set: 143, 145
insn=205, live_throughout: 13, 14, 143, dead_or_set: 
insn=28, live_throughout: 13, 145, 146, 155, dead_or_set: 
insn=30, live_throughout: 13, 145, 155, dead_or_set: 146
insn=207, live_throughout: 13, 145, 155, dead_or_set: 
insn=33, live_throughout: 13, 145, 155, dead_or_set: 
insn=35, live_throughout: 13, 145, 155, dead_or_set: 0
insn=36, live_throughout: 0, 13, 145, 155, dead_or_set: 1
insn=37, live_throughout: 13, 145, 155, dead_or_set: 0, 1, 14
insn=38, live_throughout: 13, 145, 155, dead_or_set: 
insn=41, live_throughout: 13, 145, 155, dead_or_set: 0
insn=42, live_throughout: 13, 145, 155, dead_or_set: 0, 14
insn=44, live_throughout: 0, 13, 14, 145, 155, dead_or_set: 144
insn=45, live_throughout: 0, 13, 14, 144, 145, 155, dead_or_set: 
insn=47, live_throughout: 13, 14, dead_or_set: 143
insn=209, live_throughout: 13, 14, 143, dead_or_set: 
insn=50, live_throughout: 0, 13, 144, 145, 155, dead_or_set: 
insn=55, live_throughout: 0, 13, 144, 145, 155, dead_or_set: 1
insn=56, live_throughout: 0, 1, 13, 144, 145, 155, dead_or_set: 2
insn=57, live_throughout: 13, 144, 145, 155, dead_or_set: 0, 1, 2, 14
insn=60, live_throughout: 13, 144, 145, 155, dead_or_set: 0
insn=61, live_throughout: 0, 13, 144, 145, 155, dead_or_set: 1
insn=62, live_throughout: 0, 1, 13, 144, 145, 155, dead_or_set: 2
insn=63, live_throughout: 13, 144, 145, 155, dead_or_set: 0, 1, 2, 14
insn=64, live_throughout: 13, 144, 145, 155, dead_or_set: 161
insn=65, live_throughout: 13, 144, 145, 155, 161, dead_or_set: 162
insn=70, live_throughout: 13, 144, 145, 155, 161, 162, dead_or_set: 166
insn=79, live_throughout: 13, 144, 145, 155, 161, 162, 166, dead_or_set: 0
insn=66, live_throughout: 0, 13, 144, 145, 155, 161, 166, dead_or_set: 162, 164
insn=71, live_throughout: 0, 13, 144, 145, 155, 161, 164, dead_or_set: 166
insn=67, live_throughout: 0, 13, 144, 145, 155, 161, dead_or_set: 163, 164
insn=68, live_throughout: 0, 13, 144, 145, 155, 161, dead_or_set: 163
insn=217, live_throughout: 0, 13, 144, 145, 155, 161, dead_or_set: 168
insn=74, live_throughout: 0, 13, 144, 145, 155, 161, dead_or_set: 168
insn=80, live_throughout: 0, 13, 144, 145, 155, 161, dead_or_set: 1
insn=75, live_throughout: 0, 1, 13, 144, 145, 155, 161, dead_or_set: 169
insn=81, live_throughout: 13, 144, 145, 155, 161, dead_or_set: 0, 1, 14, 169
insn=82, live_throughout: 13, 144, 145, 155, 161, dead_or_set: 173
insn=83, live_throughout: 13, 144, 145, 155, 161, dead_or_set: 140, 173
insn=84, live_throughout: 13, 140, 144, 145, 155, 161, dead_or_set: 
insn=85, live_throughout: 13, 140, 144, 145, 155, 161, dead_or_set: 
insn=95, live_throughout: 13, 140, 144, 145, 155, 161, dead_or_set: 1
insn=94, live_throughout: 1, 13, 140, 144, 145, 155, dead_or_set: 0, 161
insn=96, live_throughout: 13, 144, 145, 155, dead_or_set: 0, 1, 14, 140
insn=97, live_throughout: 13, 144, 145, 155, dead_or_set: 
insn=100, live_throughout: 13, 144, 155, dead_or_set: 1, 145
insn=99, live_throughout: 1, 13, 144, 155, dead_or_set: 0
insn=101, live_throughout: 13, 144, 155, dead_or_set: 0, 1, 14
insn=103, live_throughout: 13, 144, 155, dead_or_set: 0, 143
insn=104, live_throughout: 13, 143, 144, 155, dead_or_set: 
insn=106, live_throughout: 13, 143, 144, 155, dead_or_set: 181
insn=111, live_throughout: 13, 143, 144, 155, 181, dead_or_set: 184
insn=113, live_throughout: 13, 143, 144, 155, 181, dead_or_set: 183, 184
insn=116, live_throughout: 13, 143, 144, 155, 181, 183, dead_or_set: 139
insn=135, live_throughout: 13, 139, 143, 144, 155, 181, 183, dead_or_set: 204
insn=114, live_throughout: 13, 139, 143, 144, 155, 181, 204, dead_or_set: 183, 185
insn=107, live_throughout: 13, 139, 143, 144, 155, 185, 204, dead_or_set: 149, 181
insn=216, live_throughout: 13, 139, 143, 144, 149, 155, 185, 204, dead_or_set: 186
insn=118, live_throughout: 13, 139, 143, 144, 149, 155, 185, 204, dead_or_set: 133, 186
insn=122, live_throughout: 13, 133, 139, 143, 144, 149, 155, 185, 204, dead_or_set: 205
insn=108, live_throughout: 13, 133, 139, 143, 144, 155, 185, 204, 205, dead_or_set: 141, 149
insn=115, live_throughout: 13, 133, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 136
insn=211, live_throughout: 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 
insn=137, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 
insn=123, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 188
insn=125, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 138, 188
insn=127, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 138
insn=128, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 
insn=131, live_throughout: 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 0, 14
insn=132, live_throughout: 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 
insn=133, live_throughout: 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 
insn=136, live_throughout: 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 147
insn=204, live_throughout: 13, 133, 136, 139, 141, 143, 144, 147, 155, 185, 204, 205, dead_or_set: 0
insn=138, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 147, 191
insn=139, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 191
insn=140, live_throughout: 0, 13, 133, 136, 139, 141, 143, 144, 155, 185, 204, 205, dead_or_set: 
insn=141, live_throughout: 13, 139, 143, 144, 155, 185, dead_or_set: 
insn=143, live_throughout: 13, 139, 143, 144, 155, 185, dead_or_set: 192
insn=144, live_throughout: 13, 139, 143, 144, 155, 185, dead_or_set: 192, 193
insn=146, live_throughout: 13, 139, 143, 144, 155, dead_or_set: 135, 185, 193
insn=147, live_throughout: 13, 143, 144, 155, dead_or_set: 135, 139, 194
insn=149, live_throughout: 13, 143, 144, 155, dead_or_set: 194
insn=150, live_throughout: 13, 143, 144, 155, dead_or_set: 
insn=154, live_throughout: 13, 144, dead_or_set: 1, 155
insn=153, live_throughout: 1, 13, 144, dead_or_set: 0
insn=155, live_throughout: 13, 144, dead_or_set: 0, 1, 14
insn=156, live_throughout: 13, 144, dead_or_set: 143
insn=213, live_throughout: 13, 143, 144, dead_or_set: 
insn=159, live_throughout: 13, 143, 144, 155, dead_or_set: 
insn=163, live_throughout: 13, 143, 144, dead_or_set: 1, 155
insn=162, live_throughout: 1, 13, 143, 144, dead_or_set: 0
insn=164, live_throughout: 0, 1, 13, 143, 144, dead_or_set: 2
insn=165, live_throughout: 13, 143, 144, dead_or_set: 0, 1, 2, 14
insn=166, live_throughout: 13, 143, 144, dead_or_set: 
insn=168, live_throughout: 13, 143, 144, dead_or_set: 198
insn=174, live_throughout: 13, 143, 144, 198, dead_or_set: 0
insn=175, live_throughout: 0, 13, 143, 144, 198, dead_or_set: 1
insn=169, live_throughout: 0, 1, 13, 143, 144, 198, dead_or_set: 199
insn=176, live_throughout: 0, 1, 13, 143, 144, 198, 199, dead_or_set: 2
insn=173, live_throughout: 0, 1, 2, 13, 143, 144, 198, 199, dead_or_set: 
insn=170, live_throughout: 0, 1, 2, 13, 143, 144, dead_or_set: 198, 199
insn=177, live_throughout: 13, 143, 144, dead_or_set: 0, 1, 2, 14
insn=178, live_throughout: 13, 143, 144, dead_or_set: 0
insn=179, live_throughout: 0, 13, 143, 144, dead_or_set: 1
insn=180, live_throughout: 0, 1, 13, 143, 144, dead_or_set: 2
insn=181, live_throughout: 13, 143, 144, dead_or_set: 0, 1, 2, 14
insn=184, live_throughout: 13, 143, dead_or_set: 1, 144
insn=183, live_throughout: 1, 13, 143, dead_or_set: 0
insn=185, live_throughout: 13, 143, dead_or_set: 0, 1, 14
insn=186, live_throughout: 13, 14, 143, dead_or_set: 
insn=192, live_throughout: 13, 14, dead_or_set: 0, 143
insn=198, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 157: (insn_list:REG_DEP_TRUE 218 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 64 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 65 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 68 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 217 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 75 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 82 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 106 (nil))
init_insns for 186: (insn_list:REG_DEP_TRUE 216 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 143 (nil))
init_insns for 198: (insn_list:REG_DEP_TRUE 168 (nil))
init_insns for 199: (insn_list:REG_DEP_TRUE 169 (nil))
init_insns for 204: (insn_list:REG_DEP_TRUE 135 (nil))
init_insns for 205: (insn_list:REG_DEP_TRUE 122 (nil))
changing reg in insn 118
changing reg in insn 127
changing reg in insn 146
changing reg in insn 147
changing reg in insn 115
changing reg in insn 125
changing reg in insn 125
changing reg in insn 127
changing reg in insn 116
changing reg in insn 147
changing reg in insn 118
changing reg in insn 118
changing reg in insn 83
changing reg in insn 96
changing reg in insn 84
changing reg in insn 108
changing reg in insn 138
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 10
changing reg in insn 103
changing reg in insn 156
changing reg in insn 47
changing reg in insn 25
changing reg in insn 192
changing reg in insn 164
changing reg in insn 44
changing reg in insn 184
changing reg in insn 178
changing reg in insn 174
changing reg in insn 70
changing reg in insn 60
changing reg in insn 17
changing reg in insn 11
changing reg in insn 100
changing reg in insn 65
changing reg in insn 35
changing reg in insn 30
changing reg in insn 25
changing reg in insn 18
changing reg in insn 12
changing reg in insn 65
changing reg in insn 10
changing reg in insn 30
changing reg in insn 11
changing reg in insn 136
changing reg in insn 138
changing reg in insn 107
changing reg in insn 108
changing reg in insn 2
changing reg in insn 113
changing reg in insn 113
changing reg in insn 116
changing reg in insn 111
changing reg in insn 163
changing reg in insn 154
changing reg in insn 99
changing reg in insn 36
changing reg in insn 23
changing reg in insn 9
changing reg in insn 114
changing reg in insn 9
changing reg in insn 218
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 64
changing reg in insn 95
changing reg in insn 94
changing reg in insn 79
changing reg in insn 74
changing reg in insn 71
changing reg in insn 68
changing reg in insn 67
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 68
changing reg in insn 66
changing reg in insn 67
changing reg in insn 70
changing reg in insn 71
changing reg in insn 217
changing reg in insn 74
changing reg in insn 75
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 106
changing reg in insn 135
changing reg in insn 107
changing reg in insn 113
changing reg in insn 114
changing reg in insn 111
changing reg in insn 113
changing reg in insn 114
changing reg in insn 146
changing reg in insn 115
changing reg in insn 216
changing reg in insn 118
changing reg in insn 123
changing reg in insn 125
changing reg in insn 138
changing reg in insn 139
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 149
changing reg in insn 168
changing reg in insn 173
changing reg in insn 170
changing reg in insn 169
changing reg in insn 173
changing reg in insn 170
changing reg in insn 135
changing reg in insn 136
changing reg in insn 122
changing reg in insn 123
3 uses a new slot
2 uses a new slot
3 uses a slot from prev iteration
2 uses a slot from prev iteration
Spilling for insn 30.
Spilling for insn 71.
Spilling for insn 68.
Spilling for insn 74.
Spilling for insn 220.
Spilling for insn 221.
Spilling for insn 173.
Spilling for insn 170.

Reloads for insn # 30
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:146 ci ] [146])
                                                        (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:146 ci ] [146])
                                                        (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])

Reloads for insn # 71
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                                                        (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                                                        (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])

Reloads for insn # 68
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                                                        (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                                                        (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])

Reloads for insn # 74
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                                                        (const_int 32 [0x20])) [0 secondary_data.swapper_pg_dir+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                                                        (const_int 32 [0x20])) [0 secondary_data.swapper_pg_dir+0 S4 A32])

Reloads for insn # 220
Reload 0: reload_out (SI) = (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 221
Reload 0: reload_out (SI) = (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 173
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [198])
                                                        (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [198])
                                                        (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])

Reloads for insn # 170
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [198])
                                                        (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [198])
                                                        (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
deleting insn with uid = 25.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 42.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 63.
rescanning insn with uid = 81.
deleting insn with uid = 81.
rescanning insn with uid = 96.
deleting insn with uid = 96.
verify found no changes in insn with uid = 101.
verify found no changes in insn with uid = 131.
verify found no changes in insn with uid = 155.
verify found no changes in insn with uid = 165.
verify found no changes in insn with uid = 177.
verify found no changes in insn with uid = 181.
verify found no changes in insn with uid = 185.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 43 (    2)


__cpu_up

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,23u} r1={32d,16u} r2={25d,9u} r3={33d,20u,1d} r4={1d,10u,2d} r5={5d,8u,1d} r6={3d,8u} r7={3d,9u,2d} r8={3d,4u} r9={2d,2u} r10={1d,1u} r11={1d,1u} r12={17d,2u} r13={1d,39u} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={24d,8u} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} 
;;    total ref usage 2014{1847d,161u,6e} in 120{105 regular + 15 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 6 2 arch/arm/kernel/smp.c:60 (set (reg/v:SI 4 r4 [orig:155 cpu ] [155])
        (reg:SI 0 r0 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 7 2 arch/arm/kernel/smp.c:61 (set (reg/v:SI 3 r3 [orig:142 __ptr ] [142])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)
        (nil)))

(insn 7 6 218 2 arch/arm/kernel/smp.c:61 (set (reg/v:SI 3 r3 [orig:142 __ptr ] [142])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:142 __ptr ] [142])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8497403)) -1 (nil))

(insn 218 7 9 2 arch/arm/kernel/smp.c:61 (set (reg/f:SI 2 r2 [157])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)
        (nil)))

(insn 9 218 10 2 arch/arm/kernel/smp.c:61 (set (reg:SI 6 r6 [158])
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 4 r4 [orig:155 cpu ] [155])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [157])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 4 r4 [orig:155 cpu ] [155])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/smp.c:61 (set (reg/v/f:SI 6 r6 [orig:146 ci ] [146])
        (plus:SI (reg/v:SI 3 r3 [orig:142 __ptr ] [142])
            (reg:SI 6 r6 [158]))) 4 {*arm_addsi3} (nil))

(insn 11 10 12 2 arch/arm/kernel/smp.c:62 (set (reg/v/f:SI 5 r5 [orig:145 idle ] [145])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:146 ci ] [146])
                (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/smp.c:70 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:145 idle ] [145])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/kernel/smp.c:70 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1910 [0x776])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [80.9%]  (fallthru)
;; Succ edge  6 [19.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [80.9%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 16 14 17 3 arch/arm/kernel/smp.c:71 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fork_idle") [flags 0x41] <function_decl 0x10fde780 fork_idle>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 18 3 arch/arm/kernel/smp.c:71 (set (reg/v/f:SI 5 r5 [orig:145 idle ] [145])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:145 idle ] [145])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 3 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 20 19 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 20 22 4 arch/arm/kernel/smp.c:73 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:155 cpu ] [155])) 167 {*arm_movsi_insn} (nil))

(insn 22 23 24 4 arch/arm/kernel/smp.c:73 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116cec80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116cec80>)
        (nil)))

(call_insn 24 22 205 4 arch/arm/kernel/smp.c:73 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 205 24 206 4 arch/arm/kernel/smp.c:74 (set (pc)
        (label_ref 186)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 20)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  20 [100.0%] 

(barrier 206 205 28)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 28 206 29 5 141 "" [1 uses])

(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 207 5 arch/arm/kernel/smp.c:76 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:146 ci ] [146])
                (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:145 idle ] [145])) 167 {*arm_movsi_insn} (nil))

(jump_insn 207 30 208 5 (set (pc)
        (label_ref 38)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 208 207 33)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [19.1%] 
(code_label 33 208 34 6 140 "" [1 uses])

(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 6 arch/arm/kernel/smp.c:82 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:145 idle ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 6 arch/arm/kernel/smp.c:82 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:155 cpu ] [155])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 38 6 arch/arm/kernel/smp.c:82 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_idle") [flags 0x41] <function_decl 0x10f44680 init_idle>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 38 37 39 7 143 "" [1 uses])

(note 39 38 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 43 39 41 7 NOTE_INSN_DELETED)

(insn 41 43 42 7 arch/arm/kernel/smp.c:91 (set (reg:SI 0 r0)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
        (nil)))

(call_insn 42 41 44 7 arch/arm/kernel/smp.c:91 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pgd_alloc") [flags 0x41] <function_decl 0x114f1a00 pgd_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 42 45 7 arch/arm/kernel/smp.c:92 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 6 r6 [orig:144 pgd ] [144])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 45 44 46 7 arch/arm/kernel/smp.c:92 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7836 [0x1e9c])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [21.6%]  (fallthru)
;; Succ edge  9 [78.4%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  7 [21.6%]  (fallthru)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 209 8 arch/arm/kernel/smp.c:93 (set (reg/v:SI 5 r5 [orig:143 ret ] [143])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))

(jump_insn 209 47 210 8 (set (pc)
        (label_ref 186)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 20)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  20 [100.0%] 

(barrier 210 209 50)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [78.4%] 
(code_label 50 210 51 9 144 "" [1 uses])

(note 51 50 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 78 51 55 9 NOTE_INSN_DELETED)

(insn 55 78 56 9 arch/arm/kernel/smp.c:99 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 56 55 57 9 arch/arm/kernel/smp.c:99 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(call_insn 57 56 60 9 arch/arm/kernel/smp.c:99 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x41] <function_decl 0x11227580 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 60 57 61 9 arch/arm/kernel/smp.c:100 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:144 pgd ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 9 arch/arm/kernel/smp.c:100 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 62 61 63 9 arch/arm/kernel/smp.c:100 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(call_insn 63 62 64 9 arch/arm/kernel/smp.c:100 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x41] <function_decl 0x11227580 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 64 63 65 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 7 r7 [161])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 65 64 70 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 3 r3 [orig:162 <variable>.stack ] [162])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:145 idle ] [145])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:145 idle ] [145])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])
        (nil)))

(insn 70 65 79 9 arch/arm/kernel/smp.c:108 (set (reg/f:SI 2 r2 [166])
        (plus:SI (reg/v/f:SI 6 r6 [orig:144 pgd ] [144])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 79 70 66 9 arch/arm/kernel/smp.c:110 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 7 r7 [161])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(insn 66 79 71 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 3 r3 [164])
        (plus:SI (reg/f:SI 3 r3 [orig:162 <variable>.stack ] [162])
            (const_int 8128 [0x1fc0]))) 4 {*arm_addsi3} (nil))

(insn 71 66 67 9 arch/arm/kernel/smp.c:108 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])
        (reg/f:SI 2 r2 [166])) 167 {*arm_movsi_insn} (nil))

(insn 67 71 68 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 3 r3 [163])
        (plus:SI (reg/f:SI 3 r3 [164])
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 3 r3 [orig:162 <variable>.stack ] [162])
                (const_int 8184 [0x1ff8]))
            (nil))))

(insn 68 67 217 9 arch/arm/kernel/smp.c:107 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
        (reg/f:SI 3 r3 [163])) 167 {*arm_movsi_insn} (nil))

(insn 217 68 74 9 arch/arm/kernel/smp.c:109 (set (reg/f:SI 3 r3 [168])
        (const:SI (plus:SI (symbol_ref:SI ("swapper_pg_dir") [flags 0xc0] <var_decl 0x11208000 swapper_pg_dir>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("swapper_pg_dir") [flags 0xc0] <var_decl 0x11208000 swapper_pg_dir>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 74 217 80 9 arch/arm/kernel/smp.c:109 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 7 r7 [161])
                (const_int 32 [0x20])) [0 secondary_data.swapper_pg_dir+0 S4 A32])
        (reg/f:SI 3 r3 [168])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("swapper_pg_dir") [flags 0xc0] <var_decl 0x11208000 swapper_pg_dir>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 80 74 75 9 arch/arm/kernel/smp.c:110 (set (reg:SI 1 r1)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 75 80 81 9 arch/arm/kernel/smp.c:110 (set (reg/f:SI 3 r3 [169])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1141de40 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1141de40 cpu_cache>)
        (nil)))

(call_insn 81 75 82 9 arch/arm/kernel/smp.c:110 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [169])
                            (const_int 24 [0x18])) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 82 81 83 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 3 r3 [173])
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
        (nil)))

(insn 83 82 84 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 3 r3 [orig:140 D.27709 ] [140])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [173])
                (const_int 4 [0x4])) [0 outer_cache.clean_range+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                    (const_int 4 [0x4]))) [0 outer_cache.clean_range+0 S4 A32])
        (nil)))

(insn 84 83 85 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:140 D.27709 ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 85 84 86 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 97)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [69.8%]  (fallthru)
;; Succ edge  11 [30.2%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  9 [69.8%]  (fallthru)
(note 86 85 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 95 86 94 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 7 r7 [161])
            (const_int 1073741864 [0x40000028]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 1073741864 [0x40000028])))
        (nil)))

(insn 94 95 96 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 7 r7 [161])
            (const_int 1073741852 [0x4000001c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 1073741852 [0x4000001c])))
        (nil)))

(call_insn 96 94 97 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (parallel [
            (call (mem:SI (reg/f:SI 3 r3 [orig:140 D.27709 ] [140]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [30.2%] 
(code_label 97 96 98 11 145 "" [1 uses])

(note 98 97 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 102 98 100 11 NOTE_INSN_DELETED)

(insn 100 102 99 11 arch/arm/kernel/smp.c:116 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:145 idle ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 99 100 101 11 arch/arm/kernel/smp.c:116 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:155 cpu ] [155])) 167 {*arm_movsi_insn} (nil))

(call_insn 101 99 103 11 arch/arm/kernel/smp.c:116 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("boot_secondary") [flags 0x41] <function_decl 0x10c9f080 boot_secondary>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 103 101 104 11 arch/arm/kernel/smp.c:117 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 5 r5 [orig:143 ret ] [143])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 104 103 105 11 arch/arm/kernel/smp.c:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 159)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)
;; Succ edge  18 [0.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  kill	 24 [cc]

;; Pred edge  11 [100.0%]  (fallthru)
(note 105 104 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 112 105 106 12 NOTE_INSN_DELETED)

(insn 106 112 111 12 arch/arm/kernel/smp.c:124 (set (reg/f:SI 3 r3 [181])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>)
        (nil)))

(insn 111 106 113 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 8 r8 [184])
        (plus:SI (reg/v:SI 4 r4 [orig:155 cpu ] [155])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 113 111 116 12 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 8 r8 [orig:183 D.25991 ] [183])
                (if_then_else:SI (ge (reg/v:SI 4 r4 [orig:155 cpu ] [155])
                        (const_int 0 [0x0]))
                    (reg/v:SI 4 r4 [orig:155 cpu ] [155])
                    (reg:SI 8 r8 [184])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 116 113 135 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 7 r7 [orig:139 D.27717 ] [139])
        (and:SI (reg/v:SI 4 r4 [orig:155 cpu ] [155])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 135 116 114 12 arch/arm/kernel/smp.c:125 discrim 3 (set (reg/f:SI 2 r2 [204])
        (reg/f:SI 3 r3 [181])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>)
        (nil)))

(insn 114 135 107 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 8 r8 [185])
        (ashiftrt:SI (reg:SI 8 r8 [orig:183 D.25991 ] [183])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg/v:SI 4 r4 [orig:155 cpu ] [155])
            (const_int 32 [0x20]))
        (nil)))

(insn 107 114 216 12 arch/arm/kernel/smp.c:124 (set (reg:SI 9 r9 [orig:149 jiffies.388 ] [149])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [181]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 216 107 118 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [186])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 118 216 122 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:133 shifttmp.1090 ] [133])
        (ashift:SI (reg:SI 3 r3 [186])
            (reg:SI 7 r7 [orig:139 D.27717 ] [139]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg:SI 7 r7 [orig:139 D.27717 ] [139]))
        (nil)))

(insn 122 118 108 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 11 fp [205])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn 108 122 115 12 arch/arm/kernel/smp.c:124 (set (reg/v:SI 9 r9 [orig:141 timeout ] [141])
        (plus:SI (reg:SI 9 r9 [orig:149 jiffies.388 ] [149])
            (const_int 100 [0x64]))) 4 {*arm_addsi3} (nil))

(insn 115 108 211 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 10 sl [orig:136 D.27720 ] [136])
        (ashift:SI (reg:SI 8 r8 [185])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(jump_insn 211 115 212 12 arch/arm/kernel/smp.c:125 (set (pc)
        (label_ref 133)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 15)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 212 211 137)

;; Start of basic block ( 15) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  15 [95.5%] 
(code_label 137 212 121 13 149 "" [1 uses])

(note 121 137 126 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 126 121 123 13 NOTE_INSN_DELETED)

(insn 123 126 125 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 1 r1 [orig:188 cpu_online_mask ] [188])
        (mem/u/f/c/i:SI (reg/f:SI 11 fp [205]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn 125 123 127 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 1 r1 [orig:138 D.27718 ] [138])
        (mem/v:SI (plus:SI (reg/f:SI 1 r1 [orig:188 cpu_online_mask ] [188])
                (reg:SI 10 sl [orig:136 D.27720 ] [136])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 127 125 128 13 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 1 r1 [orig:138 D.27718 ] [138])
                        (reg:SI 3 r3 [orig:133 shifttmp.1090 ] [133]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 128 127 129 13 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 13 -> ( 16 14)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [4.5%]  (loop_exit)
;; Succ edge  14 [95.5%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  13 [95.5%]  (fallthru)
(note 129 128 220 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 220 129 221 14 arch/arm/kernel/smp.c:129 (set (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (nil))

(insn 221 220 131 14 arch/arm/kernel/smp.c:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (nil))

(call_insn 131 221 132 14 arch/arm/kernel/smp.c:129 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10e39780 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 132 131 223 14 arch/arm/kernel/smp.c:130 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8506211)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 223 132 222 14 arch/arm/kernel/smp.c:130 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 222 223 133 14 arch/arm/kernel/smp.c:130 (set (reg:SI 2 r2)
        (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  12 [100.0%] 
(code_label 133 222 134 15 147 "" [1 uses])

(note 134 133 136 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 136 134 204 15 arch/arm/kernel/smp.c:125 discrim 3 (set (reg:SI 1 r1 [orig:147 jiffies.390 ] [147])
        (mem/v/c/i:SI (reg/f:SI 2 r2 [204]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 204 136 138 15 arch/arm/kernel/smp.c:129 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 138 204 139 15 arch/arm/kernel/smp.c:125 discrim 3 (set (reg:SI 1 r1 [191])
        (minus:SI (reg:SI 1 r1 [orig:147 jiffies.390 ] [147])
            (reg/v:SI 9 r9 [orig:141 timeout ] [141]))) 28 {*arm_subsi3_insn} (nil))

(insn 139 138 140 15 arch/arm/kernel/smp.c:125 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [191])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 140 139 141 15 arch/arm/kernel/smp.c:125 discrim 3 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 15 -> ( 13 16)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [95.5%] 
;; Succ edge  16 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 15 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  15 [4.5%]  (fallthru,loop_exit)
;; Pred edge  13 [4.5%]  (loop_exit)
(code_label 141 140 142 16 148 "" [1 uses])

(note 142 141 148 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 148 142 143 16 NOTE_INSN_DELETED)

(insn 143 148 144 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 3 r3 [192])
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
        (nil)))

(insn 144 143 146 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 3 r3 [orig:193 cpu_online_mask ] [193])
        (mem/u/f/c/i:SI (reg/f:SI 3 r3 [192]) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn 146 144 147 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:135 D.27732 ] [135])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 8 r8 [185])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [orig:193 cpu_online_mask ] [193])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 149 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 7 r7 [194])
        (lshiftrt:SI (reg:SI 3 r3 [orig:135 D.27732 ] [135])
            (reg:SI 7 r7 [orig:139 D.27717 ] [139]))) 117 {*arm_shiftsi3} (nil))

(insn 149 147 150 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 7 r7 [194])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 150 149 151 16 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 166)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 16 -> ( 17 19)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  16 [0.0%]  (fallthru)
(note 151 150 154 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 154 151 153 17 arch/arm/kernel/smp.c:134 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:155 cpu ] [155])) 167 {*arm_movsi_insn} (nil))

(insn 153 154 155 17 arch/arm/kernel/smp.c:134 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x11607dc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x11607dc0>)
        (nil)))

(call_insn 155 153 156 17 arch/arm/kernel/smp.c:134 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 156 155 213 17 arch/arm/kernel/smp.c:135 (set (reg/v:SI 5 r5 [orig:143 ret ] [143])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))

(jump_insn 213 156 214 17 (set (pc)
        (label_ref 166)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 19)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  19 [100.0%] 

(barrier 214 213 159)

;; Start of basic block ( 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  11 [0.0%] 
(code_label 159 214 160 18 146 "" [1 uses])

(note 160 159 163 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 163 160 162 18 arch/arm/kernel/smp.c:138 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:155 cpu ] [155])) 167 {*arm_movsi_insn} (nil))

(insn 162 163 164 18 arch/arm/kernel/smp.c:138 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x116ec540>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x116ec540>)
        (nil)))

(insn 164 162 165 18 arch/arm/kernel/smp.c:138 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:143 ret ] [143])) 167 {*arm_movsi_insn} (nil))

(call_insn 165 164 166 18 arch/arm/kernel/smp.c:138 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 18 -> ( 19)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 16 18 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  16 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 166 165 167 19 150 "" [2 uses])

(note 167 166 168 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 174 19 arch/arm/kernel/smp.c:141 (set (reg/f:SI 3 r3 [198])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 174 168 175 19 arch/arm/kernel/smp.c:148 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:144 pgd ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 169 19 arch/arm/kernel/smp.c:148 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 169 175 176 19 arch/arm/kernel/smp.c:141 (set (reg:SI 12 ip [199])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 176 169 173 19 arch/arm/kernel/smp.c:148 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 173 176 170 19 arch/arm/kernel/smp.c:142 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [198])
                (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])
        (reg:SI 12 ip [199])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 170 173 177 19 arch/arm/kernel/smp.c:141 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [198])
                (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
        (reg:SI 12 ip [199])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 177 170 178 19 arch/arm/kernel/smp.c:148 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_del") [flags 0x41] <function_decl 0x11227600 identity_mapping_del>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 178 177 179 19 arch/arm/kernel/smp.c:149 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:144 pgd ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 19 arch/arm/kernel/smp.c:149 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 180 179 181 19 arch/arm/kernel/smp.c:149 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(call_insn 181 180 184 19 arch/arm/kernel/smp.c:149 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_del") [flags 0x41] <function_decl 0x11227600 identity_mapping_del>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 184 181 183 19 arch/arm/kernel/smp.c:152 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:144 pgd ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 183 184 185 19 arch/arm/kernel/smp.c:152 (set (reg:SI 0 r0)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
        (nil)))

(call_insn 185 183 186 19 arch/arm/kernel/smp.c:152 (parallel [
            (call (mem:SI (symbol_ref:SI ("pgd_free") [flags 0x41] <function_decl 0x114f1a80 pgd_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 19 -> ( 20)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 4 8) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  8 [100.0%] 
(code_label 186 185 187 20 142 "" [2 uses])

(note 187 186 192 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 192 187 198 20 arch/arm/kernel/smp.c:155 (set (reg/i:SI 0 r0)
        (reg/v:SI 5 r5 [orig:143 ret ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 198 192 215 20 arch/arm/kernel/smp.c:155 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 20 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 215 198 219 NOTE_INSN_DELETED)

(note 219 215 0 NOTE_INSN_DELETED)

