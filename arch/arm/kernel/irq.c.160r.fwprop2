
;; Function init_IRQ (init_IRQ)[0:1142] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



init_IRQ

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp] 14[lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 142{130d,12u,0e} in 4{3 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,1] 25[24,1] 26[25,1] 27[26,1] 28[27,1] 29[28,1] 30[29,1] 31[30,1] 32[31,1] 33[32,1] 34[33,1] 35[34,1] 36[35,1] 37[36,1] 38[37,1] 39[38,1] 40[39,1] 41[40,1] 42[41,1] 43[42,1] 44[43,1] 45[44,1] 46[45,1] 47[46,1] 48[47,1] 49[48,1] 50[49,1] 51[50,1] 52[51,1] 53[52,1] 54[53,1] 55[54,1] 56[55,1] 57[56,1] 58[57,1] 59[58,1] 60[59,1] 61[60,1] 62[61,1] 63[62,1] 64[63,1] 65[64,1] 66[65,1] 67[66,1] 68[67,1] 69[68,1] 70[69,1] 71[70,1] 72[71,1] 73[72,1] 74[73,1] 75[74,1] 76[75,1] 77[76,1] 78[77,1] 79[78,1] 80[79,1] 81[80,1] 82[81,1] 83[82,1] 84[83,1] 85[84,1] 86[85,1] 87[86,1] 88[87,1] 89[88,1] 90[89,1] 91[90,1] 92[91,1] 93[92,1] 94[93,1] 95[94,1] 96[95,1] 97[96,1] 98[97,1] 99[98,1] 100[99,1] 101[100,1] 102[101,1] 103[102,1] 104[103,1] 105[104,1] 106[105,1] 107[106,1] 108[107,1] 109[108,1] 110[109,1] 111[110,1] 112[111,1] 113[112,1] 114[113,1] 115[114,1] 116[115,1] 117[116,1] 118[117,1] 119[118,1] 120[119,1] 121[120,1] 122[121,1] 123[122,1] 124[123,1] 125[124,1] 126[125,1] 127[126,1] 133[127,1] 134[128,1] 135[129,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 24, 25
;; rd  gen 	(3)
127, 128, 129
;; rd  kill	(5)
12, 13, 127, 128, 129

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/irq.c:130 (set (reg/f:SI 134)
        (symbol_ref:SI ("machine_desc") [flags 0xc0] <var_decl 0x112b5de0 machine_desc>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/irq.c:130 (set (reg/f:SI 133 [ machine_desc ])
        (mem/f/c/i:SI (reg/f:SI 134) [0 machine_desc+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/irq.c:130 (set (reg/f:SI 135 [ <variable>.init_irq ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ machine_desc ])
                (const_int 48 [0x30])) [0 <variable>.init_irq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ machine_desc ])
        (nil)))

(call_insn 8 7 0 2 arch/arm/kernel/irq.c:130 (parallel [
            (call (mem:SI (reg/f:SI 135 [ <variable>.init_irq ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 135 [ <variable>.init_irq ])
        (nil))
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 3, 5, 7, 8, 10, 11, 24, 25, 127, 128, 129


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function migrate_irqs (migrate_irqs)[0:1144]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 3 11 9 10 8 6 7 5 4
;; 2 succs { 13 }
;; 3 succs { 12 4 }
;; 4 succs { 8 5 }
;; 5 succs { 8 6 }
;; 6 succs { 7 9 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 10 12 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 3 14 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 44 (  2.4)

In insn 42, replacing
 (mem/v:SI (reg/f:SI 144 [ D.21695 ]) [0 S4 A32])
 with (mem/v:SI (plus:SI (reg/f:SI 156)
            (reg:SI 161)) [0 S4 A32])
Changed insn 42
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 42.

In insn 42, replacing
 (mem/v:SI (plus:SI (reg/f:SI 156)
            (reg:SI 161)) [0 S4 A32])
 with (mem/v:SI (plus:SI (mult:SI (reg:SI 160)
                (const_int 4 [0x4]))
            (reg/f:SI 156)) [0 S4 A32])
Changed insn 42
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 42.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 41.
deferring deletion of insn with uid = 40.
Deleted 2 trivially dead insns

Number of successful forward propagations: 2



migrate_irqs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,12u} r1={12d,3u} r2={12d,3u} r3={9d} r11={1d,17u} r12={9d} r13={1d,26u,1d} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={21d,11u} r25={1d,17u} r26={1d,16u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r134={1d,2u} r137={1d,4u,1d} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,2u} r143={1d,1u} r144={1d} r145={2d,1u} r146={1d,3u} r147={2d,6u} r148={2d,4u} r149={1d,1u} r150={1d,2u} r151={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,4u} r158={1d,1u} r159={1d,1u} r160={1d,2u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r178={1d,1u} 
;;    total ref usage 1168{1008d,158u,2e} in 75{67 regular + 8 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972
0[0,17] 1[17,12] 2[29,12] 3[41,9] 11[50,1] 12[51,9] 13[60,1] 14[61,9] 15[70,8] 16[78,8] 17[86,8] 18[94,8] 19[102,8] 20[110,8] 21[118,8] 22[126,8] 23[134,8] 24[142,21] 25[163,1] 26[164,1] 27[165,8] 28[173,8] 29[181,8] 30[189,8] 31[197,8] 32[205,8] 33[213,8] 34[221,8] 35[229,8] 36[237,8] 37[245,8] 38[253,8] 39[261,8] 40[269,8] 41[277,8] 42[285,8] 43[293,8] 44[301,8] 45[309,8] 46[317,8] 47[325,8] 48[333,8] 49[341,8] 50[349,8] 51[357,8] 52[365,8] 53[373,8] 54[381,8] 55[389,8] 56[397,8] 57[405,8] 58[413,8] 59[421,8] 60[429,8] 61[437,8] 62[445,8] 63[453,8] 64[461,8] 65[469,8] 66[477,8] 67[485,8] 68[493,8] 69[501,8] 70[509,8] 71[517,8] 72[525,8] 73[533,8] 74[541,8] 75[549,8] 76[557,8] 77[565,8] 78[573,8] 79[581,8] 80[589,8] 81[597,8] 82[605,8] 83[613,8] 84[621,8] 85[629,8] 86[637,8] 87[645,8] 88[653,8] 89[661,8] 90[669,8] 91[677,8] 92[685,8] 93[693,8] 94[701,8] 95[709,8] 96[717,8] 97[725,8] 98[733,8] 99[741,8] 100[749,8] 101[757,8] 102[765,8] 103[773,8] 104[781,8] 105[789,8] 106[797,8] 107[805,8] 108[813,8] 109[821,8] 110[829,8] 111[837,8] 112[845,8] 113[853,8] 114[861,8] 115[869,8] 116[877,8] 117[885,8] 118[893,8] 119[901,8] 120[909,8] 121[917,8] 122[925,8] 123[933,8] 124[941,8] 125[949,8] 126[957,8] 127[965,8] 134[973,1] 137[974,1] 138[975,1] 139[976,1] 140[977,1] 141[978,1] 143[979,1] 144[980,1] 145[981,2] 146[983,1] 147[984,2] 148[986,2] 149[988,1] 150[989,1] 151[990,1] 152[991,1] 154[992,1] 155[993,1] 156[994,1] 158[995,1] 159[996,1] 160[997,1] 161[998,1] 162[999,1] 163[1000,1] 164[1001,1] 166[1002,1] 167[1003,1] 171[1004,1] 172[1005,1] 173[1006,1] 178[1007,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 141 146 147 148 151 152 173 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 141 146 147 148 151 152 173 178
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(10)
16, 28, 40, 49, 50, 59, 60, 69, 163, 164
;; rd  gen 	(10)
14, 973, 978, 983, 985, 987, 990, 991, 1006, 1007
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 62, 63, 64, 65, 66, 67, 68, 69, 973, 978, 983, 984, 985, 986, 987, 990, 991, 1006, 1007

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:17 (parallel [
            (set (reg/v:SI 146 [ flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ arch_local_irq_save
	cpsid	i") ("=r") 0 []
                     [] 1110928))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/irq.c:187 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 7 9 2 arch/arm/kernel/irq.c:187 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("irq_to_desc") [flags 0x41] <function_decl 0x10b30e00 irq_to_desc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 11 2 arch/arm/kernel/irq.c:187 (set (reg/v/f:SI 147 [ desc ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 11 9 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 151)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 141 [ D.21704 ])
        (and:SI (reg:SI 151)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/irq.c:157 (set (reg/f:SI 152)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10ac9e40 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 18 2 arch/arm/kernel/irq.c:157 (set (reg/v/f:SI 134 [ affinity.355 ])
        (mem/u/f/c/i:SI (reg/f:SI 152) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10ac9e40 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
            (nil))))

(insn 18 14 111 2 arch/arm/kernel/irq.c:187 (set (reg/v:SI 148 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 111 18 55 2 arch/arm/kernel/irq.c:187 discrim 1 (set (reg/f:SI 173)
        (symbol_ref:SI ("nr_irqs") [flags 0xc0] <var_decl 0x10b39600 nr_irqs>)) 167 {*arm_movsi_insn} (nil))

(insn 55 111 110 2 arch/arm/kernel/irq.c:157 (set (reg/f:SI 178)
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10ac9d80 nr_cpu_ids>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; rd  out 	(18)
14, 28, 40, 49, 50, 59, 60, 163, 164, 973, 978, 983, 985, 987, 990, 991, 1006, 1007


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(45)
3, 14, 28, 40, 49, 50, 59, 60, 147, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(1)
160
;; rd  kill	(21)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162

;; Pred edge  13 [91.0%] 
(code_label 110 55 21 3 12 "" [1 uses])

(note 21 110 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 arch/arm/kernel/irq.c:187 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 147 [ desc ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 3 arch/arm/kernel/irq.c:187 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 3 -> ( 12 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 160, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  12 [15.0%] 
;; Succ edge  4 [85.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; live  gen 	 0 [r0] 24 [cc] 150 154 155
;; live  kill	 14 [lr]
;; rd  in  	(45)
3, 14, 28, 40, 49, 50, 59, 60, 160, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(4)
158, 989, 992, 993
;; rd  kill	(33)
61, 62, 63, 64, 65, 66, 67, 68, 69, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 989, 992, 993

;; Pred edge  3 [85.0%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 arch/arm/kernel/irq.c:193 (set (reg/f:SI 150 [ D.21609 ])
        (plus:SI (reg/v/f:SI 147 [ desc ])
            (const_int 84 [0x54]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 4 arch/arm/kernel/irq.c:193 (set (reg:SI 0 r0)
        (reg/f:SI 150 [ D.21609 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 26 28 4 arch/arm/kernel/irq.c:193 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock") [flags 0x41] <function_decl 0x10b86780 _raw_spin_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 28 27 29 4 include/linux/irq.h:187 (set (reg:SI 155 [ <variable>.irq_data.state_use_accessors ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 147 [ desc ])
                (const_int 12 [0xc])) [0 <variable>.irq_data.state_use_accessors+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 include/linux/irq.h:187 (set (reg:SI 154)
        (and:SI (reg:SI 155 [ <variable>.irq_data.state_use_accessors ])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 155 [ <variable>.irq_data.state_use_accessors ])
        (nil)))

(insn 30 29 31 4 include/linux/irq.h:187 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(jump_insn 31 30 32 4 include/linux/irq.h:187 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 8 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 173 178
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 158, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  8 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 147
;; lr  def 	 24 [cc] 137 143 144 156 158 159 160 161 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 173 178
;; live  gen 	 24 [cc] 137 143 144 156 158 159 160 161 162 163 164
;; live  kill	
;; rd  in  	(45)
3, 14, 28, 40, 49, 50, 59, 60, 158, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(12)
157, 974, 979, 980, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  kill	(32)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 974, 979, 980, 994, 995, 996, 997, 998, 999, 1000, 1001

;; Pred edge  4 [50.0%]  (fallthru)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 5 arch/arm/kernel/irq.c:154 discrim 1 (set (reg:SI 137 [ D.21713 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 141 [ D.21704 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 36 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 156)
        (plus:SI (reg/v/f:SI 147 [ desc ])
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 36 34 37 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 159)
        (plus:SI (reg:SI 137 [ D.21713 ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 37 36 38 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.21713 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 38 37 39 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 158 [ D.21713 ])
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 159)
            (reg:SI 137 [ D.21713 ]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 39 38 42 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 160)
        (ashiftrt:SI (reg:SI 158 [ D.21713 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 158 [ D.21713 ])
        (expr_list:REG_EQUAL (div:SI (reg:SI 137 [ D.21713 ])
                (const_int 32 [0x20]))
            (nil))))

(insn 42 39 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 143 [ D.21696 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 160)
                    (const_int 4 [0x4]))
                (reg/f:SI 156)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ D.21695 ])
        (nil)))

(insn 43 42 44 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 162)
        (and:SI (reg:SI 137 [ D.21713 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.21713 ])
        (nil)))

(insn 44 43 45 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 143 [ D.21696 ])
            (reg:SI 162))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg:SI 143 [ D.21696 ])
            (nil))))

(insn 45 44 46 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 164)
        (and:SI (reg:SI 163)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 46 45 47 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(jump_insn 47 46 48 5 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 8 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 156 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 156 173 178
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 157, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  8 [71.0%] 
;; Succ edge  6 [29.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 156 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 156 178
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 140 145 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 150 156 173 178
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 138 139 140 145 166 167
;; live  kill	 14 [lr]
;; rd  in  	(45)
3, 14, 28, 40, 49, 50, 59, 60, 157, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(8)
11, 155, 975, 976, 977, 981, 1002, 1003
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 62, 63, 64, 65, 66, 67, 68, 69, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 975, 976, 977, 981, 982, 1002, 1003

;; Pred edge  5 [29.0%]  (fallthru)
(note 48 47 162 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 162 48 51 6 arch/arm/kernel/irq.c:157 (set (reg:SI 0 r0)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 51 162 52 6 arch/arm/kernel/irq.c:157 (set (reg:SI 1 r1)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 6 arch/arm/kernel/irq.c:157 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ affinity.355 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 53 52 54 6 arch/arm/kernel/irq.c:157 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpumask_next_and") [flags 0x41] <function_decl 0x10acf600 cpumask_next_and>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 54 53 56 6 arch/arm/kernel/irq.c:157 (set (reg:SI 138 [ D.21709 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 56 54 154 6 arch/arm/kernel/irq.c:157 (set (reg:SI 166 [ nr_cpu_ids ])
        (mem/c/i:SI (reg/f:SI 178) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10ac9d80 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
        (nil)))

(insn 154 56 155 6 arch/arm/kernel/irq.c:158 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.21709 ])
            (reg:SI 166 [ nr_cpu_ids ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166 [ nr_cpu_ids ])
        (expr_list:REG_DEAD (reg:SI 138 [ D.21709 ])
            (nil))))

(insn 155 154 157 6 arch/arm/kernel/irq.c:158 (set (reg/v/f:SI 140 [ affinity ])
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 156)
            (reg/v/f:SI 134 [ affinity.355 ]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (nil)))

(insn 157 155 69 6 arch/arm/kernel/irq.c:158 (set (reg/v:SI 145 [ affinity_broken ])
        (ge:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 69 157 70 6 arch/arm/kernel/irq.c:163 (set (reg/f:SI 167 [ <variable>.irq_data.chip ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ desc ])
                (const_int 16 [0x10])) [0 <variable>.irq_data.chip+0 S4 A128])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 6 arch/arm/kernel/irq.c:163 (set (reg/f:SI 139 [ D.21707 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 167 [ <variable>.irq_data.chip ])
                (const_int 40 [0x28])) [0 <variable>.irq_set_affinity+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 167 [ <variable>.irq_data.chip ])
        (nil)))

(insn 71 70 72 6 arch/arm/kernel/irq.c:163 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 139 [ D.21707 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 6 arch/arm/kernel/irq.c:163 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 6 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 141 145 146 147 148 150 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 141 145 146 147 148 150 173 178
;; rd  out 	(43)
11, 28, 40, 49, 50, 59, 60, 155, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  7 [69.8%]  (fallthru)
;; Succ edge  9 [30.2%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 141 145 146 147 148 150 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140 141 145 146 147 148 150 173 178
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(43)
11, 28, 40, 49, 50, 59, 60, 155, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(1)
9
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 62, 63, 64, 65, 66, 67, 68, 69

;; Pred edge  6 [69.8%]  (fallthru)
(note 73 72 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 7 arch/arm/kernel/irq.c:164 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ desc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ desc ])
        (nil)))

(insn 75 74 164 7 arch/arm/kernel/irq.c:164 (set (reg:SI 1 r1)
        (reg/v/f:SI 140 [ affinity ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ affinity ])
        (nil)))

(insn 164 75 77 7 arch/arm/kernel/irq.c:164 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 77 164 80 7 arch/arm/kernel/irq.c:164 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 139 [ D.21707 ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 139 [ D.21707 ])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 145 146 148 150 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 145 146 148 150 173 178
;; rd  out 	(43)
9, 28, 40, 49, 50, 59, 60, 155, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 150 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 150 173 178
;; live  gen 	 145
;; live  kill	
;; rd  in  	(46)
3, 14, 28, 40, 49, 50, 59, 60, 157, 158, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(1)
982
;; rd  kill	(2)
981, 982

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [71.0%] 
(code_label 80 77 81 8 8 "" [2 uses])

(note 81 80 161 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 161 81 83 8 arch/arm/kernel/irq.c:155 (set (reg/v:SI 145 [ affinity_broken ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 145 146 148 150 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 145 146 148 150 173 178
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 157, 158, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 145 146 148 150 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 145 146 148 150 173 178
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]
;; rd  in  	(49)
3, 9, 11, 14, 28, 40, 49, 50, 59, 60, 155, 157, 158, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(1)
152
;; rd  kill	(30)
61, 62, 63, 64, 65, 66, 67, 68, 69, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  6 [30.2%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 83 161 84 9 11 "" [1 uses])

(note 84 83 85 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 9 arch/arm/kernel/irq.c:195 (set (reg:SI 0 r0)
        (reg/f:SI 150 [ D.21609 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150 [ D.21609 ])
        (nil)))

(call_insn 86 85 87 9 arch/arm/kernel/irq.c:195 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock") [flags 0x41] <function_decl 0x10b86c00 _raw_spin_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 87 86 88 9 arch/arm/kernel/irq.c:197 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ affinity_broken ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ affinity_broken ])
        (nil)))

(jump_insn 88 87 89 9 arch/arm/kernel/irq.c:197 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; rd  out 	(47)
3, 9, 11, 14, 28, 40, 49, 50, 59, 60, 152, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  10 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; live  gen 	 0 [r0] 24 [cc] 149
;; live  kill	 14 [lr]
;; rd  in  	(47)
3, 9, 11, 14, 28, 40, 49, 50, 59, 60, 152, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(3)
6, 150, 988
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 62, 63, 64, 65, 66, 67, 68, 69, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 988

;; Pred edge  9 [29.0%]  (fallthru)
(note 89 88 159 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 159 89 92 10 arch/arm/kernel/irq.c:197 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(call_insn 92 159 93 10 arch/arm/kernel/irq.c:197 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printk_ratelimit") [flags 0x41] <function_decl 0x10a53b80 __printk_ratelimit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 93 92 94 10 arch/arm/kernel/irq.c:197 discrim 1 (set (reg:SI 149 [ D.21613 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 94 93 95 10 arch/arm/kernel/irq.c:197 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149 [ D.21613 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ D.21613 ])
        (nil)))

(jump_insn 95 94 96 10 arch/arm/kernel/irq.c:197 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; rd  out 	(44)
6, 28, 40, 49, 50, 59, 60, 150, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  11 [0.0%]  (fallthru)
;; Succ edge  12 [100.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(44)
6, 28, 40, 49, 50, 59, 60, 150, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(1)
5
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 62, 63, 64, 65, 66, 67, 68, 69

;; Pred edge  10 [0.0%]  (fallthru)
(note 96 95 160 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 160 96 99 11 arch/arm/kernel/irq.c:198 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1131db40>)) 167 {*arm_movsi_insn} (nil))

(insn 99 160 100 11 arch/arm/kernel/irq.c:198 (set (reg:SI 1 r1)
        (reg/v:SI 148 [ i ])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 11 arch/arm/kernel/irq.c:198 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/f:SI 141 [ D.21704 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 101 100 102 11 arch/arm/kernel/irq.c:198 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a53b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; rd  out 	(44)
5, 28, 40, 49, 50, 59, 60, 150, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 3 11 9 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u117(11){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 148 173 178
;; live  gen 	 0 [r0] 147 148
;; live  kill	 14 [lr]
;; rd  in  	(51)
3, 5, 6, 9, 11, 14, 28, 40, 49, 50, 59, 60, 150, 152, 160, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(3)
3, 984, 986
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 62, 63, 64, 65, 66, 67, 68, 69, 984, 985, 986, 987

;; Pred edge  3 [15.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  9 [71.0%] 
;; Pred edge  10 [100.0%] 
(code_label 102 101 103 12 7 "" [3 uses])

(note 103 102 104 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 12 arch/arm/kernel/irq.c:187 (set (reg/v:SI 148 [ i ])
        (plus:SI (reg/v:SI 148 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 105 104 106 12 arch/arm/kernel/irq.c:187 (set (reg:SI 0 r0)
        (reg/v:SI 148 [ i ])) 167 {*arm_movsi_insn} (nil))

(call_insn 106 105 107 12 arch/arm/kernel/irq.c:187 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("irq_to_desc") [flags 0x41] <function_decl 0x10b30e00 irq_to_desc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 107 106 108 12 arch/arm/kernel/irq.c:187 (set (reg/v/f:SI 147 [ desc ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; rd  out 	(44)
3, 28, 40, 49, 50, 59, 60, 150, 152, 160, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  13 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 173
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(47)
3, 14, 28, 40, 49, 50, 59, 60, 150, 152, 160, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(2)
147, 1004
;; rd  kill	(22)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 1004

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru,dfs_back)
(code_label 108 107 109 13 6 "" [0 uses])

(note 109 108 112 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 112 109 113 13 arch/arm/kernel/irq.c:187 discrim 1 (set (reg:SI 171 [ nr_irqs ])
        (mem/c/i:SI (reg/f:SI 173) [0 nr_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_irqs") [flags 0xc0] <var_decl 0x10b39600 nr_irqs>) [0 nr_irqs+0 S4 A32])
        (nil)))

(insn 113 112 114 13 arch/arm/kernel/irq.c:187 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ i ])
            (reg:SI 171 [ nr_irqs ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171 [ nr_irqs ])
        (nil)))

(jump_insn 114 113 115 13 arch/arm/kernel/irq.c:187 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 13 -> ( 3 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141 146 147 148 173 178
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 147, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007


;; Succ edge  3 [91.0%] 
;; Succ edge  14 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 24 [cc] 172
;; live  kill	
;; rd  in  	(45)
3, 14, 28, 40, 49, 50, 59, 60, 147, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007
;; rd  gen 	(2)
146, 1005
;; rd  kill	(22)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 1005

;; Pred edge  13 [9.0%]  (fallthru,loop_exit)
(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:SI 172)
        (and:SI (reg/v:SI 146 [ flags ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 117 116 118 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(jump_insn 118 117 119 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; rd  out 	(46)
3, 14, 28, 40, 49, 50, 59, 60, 146, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007


;; Succ edge  15 [39.0%]  (fallthru)
;; Succ edge  16 [61.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(46)
3, 14, 28, 40, 49, 50, 59, 60, 146, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007
;; rd  gen 	(0)

;; rd  kill	(21)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162

;; Pred edge  14 [39.0%]  (fallthru)
(note 119 118 120 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 123 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:142 (parallel [
            (asm_operands/v ("	msr	cpsr_c, %0	@ local_irq_restore") ("") 0 [
                    (reg/v:SI 146 [ flags ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 1126928)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 146 [ flags ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(46)
3, 14, 28, 40, 49, 50, 59, 60, 146, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007
;; rd  gen 	(0)

;; rd  kill	(21)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162

;; Pred edge  14 [61.0%] 
(code_label 123 120 124 16 13 "" [1 uses])

(note 124 123 125 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 131 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:142 (parallel [
            (asm_operands/v ("	msr	cpsr_c, %0	@ local_irq_restore") ("") 0 [
                    (reg/v:SI 146 [ flags ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 1126928)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 146 [ flags ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(45)
3, 14, 28, 40, 49, 50, 59, 60, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 131 125 134 17 15 "" [0 uses])

(note 134 131 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 17 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(45)
3, 14, 28, 40, 49, 50, 59, 60, 163, 164, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 40.
deleting insn with uid = 41.
rescanning insn with uid = 42.
deleting insn with uid = 42.
ending the processing of deferred insns

;; Function set_irq_flags (set_irq_flags)[0:1141]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



set_irq_flags

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={4d,1u} r3={3d} r11={1d,8u} r12={3d} r13={1d,10u} r14={1d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,8u} r26={1d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={3d,4u} r134={1d,3u} r135={1d,3u} r136={1d,1u} r137={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 326{263d,63u,0e} in 26{24 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250
0[0,5] 1[5,5] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,1] 15[23,2] 16[25,2] 17[27,2] 18[29,2] 19[31,2] 20[33,2] 21[35,2] 22[37,2] 23[39,2] 24[41,6] 25[47,1] 26[48,1] 27[49,2] 28[51,2] 29[53,2] 30[55,2] 31[57,2] 32[59,2] 33[61,2] 34[63,2] 35[65,2] 36[67,2] 37[69,2] 38[71,2] 39[73,2] 40[75,2] 41[77,2] 42[79,2] 43[81,2] 44[83,2] 45[85,2] 46[87,2] 47[89,2] 48[91,2] 49[93,2] 50[95,2] 51[97,2] 52[99,2] 53[101,2] 54[103,2] 55[105,2] 56[107,2] 57[109,2] 58[111,2] 59[113,2] 60[115,2] 61[117,2] 62[119,2] 63[121,2] 64[123,2] 65[125,2] 66[127,2] 67[129,2] 68[131,2] 69[133,2] 70[135,2] 71[137,2] 72[139,2] 73[141,2] 74[143,2] 75[145,2] 76[147,2] 77[149,2] 78[151,2] 79[153,2] 80[155,2] 81[157,2] 82[159,2] 83[161,2] 84[163,2] 85[165,2] 86[167,2] 87[169,2] 88[171,2] 89[173,2] 90[175,2] 91[177,2] 92[179,2] 93[181,2] 94[183,2] 95[185,2] 96[187,2] 97[189,2] 98[191,2] 99[193,2] 100[195,2] 101[197,2] 102[199,2] 103[201,2] 104[203,2] 105[205,2] 106[207,2] 107[209,2] 108[211,2] 109[213,2] 110[215,2] 111[217,2] 112[219,2] 113[221,2] 114[223,2] 115[225,2] 116[227,2] 117[229,2] 118[231,2] 119[233,2] 120[235,2] 121[237,2] 122[239,2] 123[241,2] 124[243,2] 125[245,2] 126[247,2] 127[249,2] 133[251,3] 134[254,1] 135[255,1] 136[256,1] 137[257,1] 139[258,1] 140[259,1] 141[260,1] 142[261,1] 143[262,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137
;; live  kill	
;; rd  in  	(10)
4, 9, 13, 16, 17, 20, 21, 22, 47, 48
;; rd  gen 	(5)
46, 254, 255, 256, 257
;; rd  kill	(10)
41, 42, 43, 44, 45, 46, 254, 255, 256, 257

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/irq.c:110 (set (reg/v:SI 134 [ irq ])
        (reg:SI 0 r0 [ irq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ irq ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/irq.c:110 (set (reg/v:SI 135 [ iflags ])
        (reg:SI 1 r1 [ iflags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ iflags ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/irq.c:113 (set (reg/f:SI 136)
        (symbol_ref:SI ("nr_irqs") [flags 0xc0] <var_decl 0x10b39600 nr_irqs>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/irq.c:113 (set (reg:SI 137 [ nr_irqs ])
        (mem/c/i:SI (reg/f:SI 136) [0 nr_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_irqs") [flags 0xc0] <var_decl 0x10b39600 nr_irqs>) [0 nr_irqs+0 S4 A32])
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/irq.c:113 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ irq ])
            (reg:SI 137 [ nr_irqs ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ nr_irqs ])
        (nil)))

(jump_insn 10 9 11 2 arch/arm/kernel/irq.c:113 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; rd  out 	(15)
4, 9, 13, 16, 17, 20, 21, 22, 46, 47, 48, 254, 255, 256, 257


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(15)
4, 9, 13, 16, 17, 20, 21, 22, 46, 47, 48, 254, 255, 256, 257
;; rd  gen 	(1)
3
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 14 3 arch/arm/kernel/irq.c:114 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1130ff40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1130ff40>)
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/irq.c:114 (set (reg:SI 1 r1)
        (reg/v:SI 134 [ irq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ irq ])
        (nil)))

(call_insn/j 15 14 17 3 arch/arm/kernel/irq.c:114 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a53b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 9, 13, 16, 17, 20, 21, 22, 46, 47, 48, 254, 255, 256, 257


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 133 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 24 [cc] 133 139 140
;; live  kill	
;; rd  in  	(15)
4, 9, 13, 16, 17, 20, 21, 22, 46, 47, 48, 254, 255, 256, 257
;; rd  gen 	(4)
43, 251, 258, 259
;; rd  kill	(11)
41, 42, 43, 44, 45, 46, 251, 252, 253, 258, 259

;; Pred edge  2 [100.0%] 
(code_label 17 15 18 4 20 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/irq.c:118 (set (reg:SI 139)
        (and:SI (reg/v:SI 135 [ iflags ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 19 61 4 arch/arm/kernel/irq.c:118 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 61 20 31 4 arch/arm/kernel/irq.c:111 (set (reg/v:SI 133 [ clr ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 139)
            (const_int 2048 [0x800]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 31 61 32 4 arch/arm/kernel/irq.c:120 (set (reg:SI 140)
        (and:SI (reg/v:SI 135 [ iflags ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 32 31 33 4 arch/arm/kernel/irq.c:120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 33 32 34 4 arch/arm/kernel/irq.c:120 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; rd  out 	(18)
4, 9, 13, 16, 17, 20, 21, 22, 43, 47, 48, 251, 254, 255, 256, 257, 258, 259


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; live  gen 	 133
;; live  kill	
;; rd  in  	(18)
4, 9, 13, 16, 17, 20, 21, 22, 43, 47, 48, 251, 254, 255, 256, 257, 258, 259
;; rd  gen 	(1)
253
;; rd  kill	(3)
251, 252, 253

;; Pred edge  4 [50.0%]  (fallthru)
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 5 arch/arm/kernel/irq.c:121 (set (reg/v:SI 133 [ clr ])
        (ior:SI (reg/v:SI 133 [ clr ])
            (const_int 1024 [0x400]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; rd  out 	(18)
4, 9, 13, 16, 17, 20, 21, 22, 43, 47, 48, 253, 254, 255, 256, 257, 258, 259


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; live  gen 	 24 [cc] 141
;; live  kill	
;; rd  in  	(19)
4, 9, 13, 16, 17, 20, 21, 22, 43, 47, 48, 251, 253, 254, 255, 256, 257, 258, 259
;; rd  gen 	(2)
42, 260
;; rd  kill	(7)
41, 42, 43, 44, 45, 46, 260

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 36 35 37 6 23 "" [1 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 arch/arm/kernel/irq.c:122 (set (reg:SI 141)
        (and:SI (reg/v:SI 135 [ iflags ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ iflags ])
        (nil)))

(insn 39 38 40 6 arch/arm/kernel/irq.c:122 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 40 39 41 6 arch/arm/kernel/irq.c:122 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(20)
4, 9, 13, 16, 17, 20, 21, 22, 42, 47, 48, 251, 253, 254, 255, 256, 257, 258, 259, 260


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(20)
4, 9, 13, 16, 17, 20, 21, 22, 42, 47, 48, 251, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(1)
252
;; rd  kill	(3)
251, 252, 253

;; Pred edge  6 [50.0%]  (fallthru)
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 arch/arm/kernel/irq.c:123 (set (reg/v:SI 133 [ clr ])
        (ior:SI (reg/v:SI 133 [ clr ])
            (const_int 4096 [0x1000]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(19)
4, 9, 13, 16, 17, 20, 21, 22, 42, 47, 48, 252, 254, 255, 256, 257, 258, 259, 260


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 142 143
;; live  kill	
;; rd  in  	(21)
4, 9, 13, 16, 17, 20, 21, 22, 42, 47, 48, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(2)
261, 262
;; rd  kill	(2)
261, 262

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 43 42 44 8 24 "" [1 uses])

(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 8 arch/arm/kernel/irq.c:125 (set (reg:SI 142)
        (not:SI (reg/v:SI 133 [ clr ]))) 134 {*arm_one_cmplsi2} (nil))

(insn 46 45 47 8 arch/arm/kernel/irq.c:125 (set (reg:SI 143)
        (and:SI (reg:SI 142)
            (const_int 7168 [0x1c00]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 47 46 48 8 arch/arm/kernel/irq.c:125 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ irq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ irq ])
        (nil)))

(insn 48 47 49 8 arch/arm/kernel/irq.c:125 (set (reg:SI 1 r1)
        (reg/v:SI 133 [ clr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ clr ])
        (nil)))

(insn 49 48 50 8 arch/arm/kernel/irq.c:125 (set (reg:SI 2 r2)
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(call_insn/j 50 49 0 8 arch/arm/kernel/irq.c:125 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_modify_status") [flags 0x41] <function_decl 0x10eef800 irq_modify_status>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
4, 9, 13, 16, 17, 20, 21, 22, 42, 47, 48, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function handle_IRQ (handle_IRQ)[0:1139]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



handle_IRQ

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,5u} r1={7d,2u} r2={6d} r3={6d} r11={1d,7u} r12={6d} r13={1d,14u,2d} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={7d,2u} r25={1d,7u} r26={1d,6u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r134={1d,1u} r136={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,3u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u,1d} r149={1d,2u} r156={1d,1u} r157={1d,1u} r161={1d,2u} r163={1d,1u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u,1d} r171={1d,1u} 
;;    total ref usage 700{624d,72u,4e} in 39{34 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600
0[0,9] 1[9,7] 2[16,6] 3[22,6] 11[28,1] 12[29,6] 13[35,1] 14[36,6] 15[42,5] 16[47,5] 17[52,5] 18[57,5] 19[62,5] 20[67,5] 21[72,5] 22[77,5] 23[82,5] 24[87,7] 25[94,1] 26[95,1] 27[96,5] 28[101,5] 29[106,5] 30[111,5] 31[116,5] 32[121,5] 33[126,5] 34[131,5] 35[136,5] 36[141,5] 37[146,5] 38[151,5] 39[156,5] 40[161,5] 41[166,5] 42[171,5] 43[176,5] 44[181,5] 45[186,5] 46[191,5] 47[196,5] 48[201,5] 49[206,5] 50[211,5] 51[216,5] 52[221,5] 53[226,5] 54[231,5] 55[236,5] 56[241,5] 57[246,5] 58[251,5] 59[256,5] 60[261,5] 61[266,5] 62[271,5] 63[276,5] 64[281,5] 65[286,5] 66[291,5] 67[296,5] 68[301,5] 69[306,5] 70[311,5] 71[316,5] 72[321,5] 73[326,5] 74[331,5] 75[336,5] 76[341,5] 77[346,5] 78[351,5] 79[356,5] 80[361,5] 81[366,5] 82[371,5] 83[376,5] 84[381,5] 85[386,5] 86[391,5] 87[396,5] 88[401,5] 89[406,5] 90[411,5] 91[416,5] 92[421,5] 93[426,5] 94[431,5] 95[436,5] 96[441,5] 97[446,5] 98[451,5] 99[456,5] 100[461,5] 101[466,5] 102[471,5] 103[476,5] 104[481,5] 105[486,5] 106[491,5] 107[496,5] 108[501,5] 109[506,5] 110[511,5] 111[516,5] 112[521,5] 113[526,5] 114[531,5] 115[536,5] 116[541,5] 117[546,5] 118[551,5] 119[556,5] 120[561,5] 121[566,5] 122[571,5] 123[576,5] 124[581,5] 125[586,5] 126[591,5] 127[596,5] 134[601,1] 136[602,1] 140[603,1] 141[604,1] 142[605,1] 143[606,1] 144[607,1] 145[608,1] 146[609,1] 147[610,1] 148[611,1] 149[612,1] 156[613,1] 157[614,1] 161[615,1] 163[616,1] 164[617,1] 166[618,1] 167[619,1] 168[620,1] 169[621,1] 170[622,1] 171[623,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 140 142 143 144 145 146 147 148 149 156 157
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 140 142 143 144 145 146 147 148 149 156 157
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 15, 21, 27, 28, 34, 35, 41, 94, 95
;; rd  gen 	(13)
92, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614
;; rd  kill	(25)
36, 37, 38, 39, 40, 41, 87, 88, 89, 90, 91, 92, 93, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/irq.c:76 (set (reg/v:SI 142 [ irq ])
        (reg:SI 0 r0 [ irq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ irq ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/irq.c:76 (set (reg/v/f:SI 143 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/f:SI 144)
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x10eac360 __irq_regs>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 136 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 144)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 7419546)) -1 (expr_list:REG_DEAD (reg/f:SI 144)
        (nil)))

(insn 10 8 11 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/f:SI 145)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1a4e0 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 147)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 146)
        (and:SI (reg:SI 147)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 13 12 14 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 148 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 146)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 14 13 15 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 149)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 148 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 145)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 145)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 148 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1a4e0 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 15 14 24 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v/f:SI 140 [ old_regs ])
        (mem/f:SI (plus:SI (reg/v:SI 136 [ __ptr ])
                (reg:SI 149)) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 15 25 2 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 136 [ __ptr ])
                (reg:SI 149)) [0 S4 A32])
        (reg/v/f:SI 143 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg/v/f:SI 143 [ regs ])
            (expr_list:REG_DEAD (reg/v:SI 136 [ __ptr ])
                (nil)))))

(call_insn 25 24 26 2 arch/arm/kernel/irq.c:79 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x10b4ae80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 26 25 27 2 arch/arm/kernel/irq.c:85 (set (reg/f:SI 156)
        (symbol_ref:SI ("nr_irqs") [flags 0xc0] <var_decl 0x10b39600 nr_irqs>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 arch/arm/kernel/irq.c:85 (set (reg:SI 157 [ nr_irqs ])
        (mem/c/i:SI (reg/f:SI 156) [0 nr_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_irqs") [flags 0xc0] <var_decl 0x10b39600 nr_irqs>) [0 nr_irqs+0 S4 A32])
            (nil))))

(insn 28 27 29 2 arch/arm/kernel/irq.c:85 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ irq ])
            (reg:SI 157 [ nr_irqs ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 157 [ nr_irqs ])
        (nil)))

(jump_insn 29 28 30 2 arch/arm/kernel/irq.c:85 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; rd  out 	(22)
8, 15, 21, 27, 28, 34, 35, 92, 94, 95, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  gen 	 0 [r0] 24 [cc] 141
;; live  kill	 14 [lr]
;; rd  in  	(22)
8, 15, 21, 27, 28, 34, 35, 92, 94, 95, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614
;; rd  gen 	(3)
6, 90, 604
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 40, 41, 87, 88, 89, 90, 91, 92, 93, 604

;; Pred edge  2 [0.0%]  (fallthru)
(note 30 29 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 33 30 34 3 arch/arm/kernel/irq.c:86 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 34 33 35 3 arch/arm/kernel/irq.c:86 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__printk_ratelimit") [flags 0x41] <function_decl 0x10a53b80 __printk_ratelimit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 35 34 36 3 arch/arm/kernel/irq.c:86 (set (reg:SI 141 [ D.21509 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 36 35 37 3 arch/arm/kernel/irq.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.21509 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.21509 ])
        (nil)))

(jump_insn 37 36 38 3 arch/arm/kernel/irq.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; rd  out 	(23)
6, 15, 21, 27, 28, 34, 35, 90, 94, 95, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(23)
6, 15, 21, 27, 28, 34, 35, 90, 94, 95, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614
;; rd  gen 	(1)
5
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 40, 41

;; Pred edge  3 [0.0%]  (fallthru)
(note 38 37 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 41 4 arch/arm/kernel/irq.c:87 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11331b10>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11331b10>)
        (nil)))

(insn 41 40 42 4 arch/arm/kernel/irq.c:87 (set (reg:SI 1 r1)
        (reg/v:SI 142 [ irq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ irq ])
        (nil)))

(call_insn 42 41 43 4 arch/arm/kernel/irq.c:87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a53b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(23)
5, 15, 21, 27, 28, 34, 35, 90, 94, 95, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 161 163 164
;; live  kill	
;; rd  in  	(24)
5, 6, 15, 21, 27, 28, 34, 35, 90, 94, 95, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614
;; rd  gen 	(3)
615, 616, 617
;; rd  kill	(3)
615, 616, 617

;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 43 42 44 5 30 "" [1 uses])

(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 47 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_irq.h:10 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 47 45 48 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_irq.h:10 (set (reg:SI 163 [ irq_err_count ])
        (mem/c/i:SI (reg/f:SI 161) [0 irq_err_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 irq_err_count+0 S4 A32])
        (nil)))

(insn 48 47 49 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_irq.h:10 (set (reg:SI 164)
        (plus:SI (reg:SI 163 [ irq_err_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 163 [ irq_err_count ])
        (nil)))

(insn 49 48 52 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_irq.h:10 (set (mem/c/i:SI (reg/f:SI 161) [0 irq_err_count+0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 161)
            (nil))))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(27)
5, 6, 15, 21, 27, 28, 34, 35, 90, 94, 95, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(22)
8, 15, 21, 27, 28, 34, 35, 92, 94, 95, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614
;; rd  gen 	(1)
3
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 40, 41

;; Pred edge  2 [100.0%] 
(code_label 52 49 53 6 29 "" [1 uses])

(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 6 arch/arm/kernel/irq.c:90 (set (reg:SI 0 r0)
        (reg/v:SI 142 [ irq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ irq ])
        (nil)))

(call_insn 55 54 56 6 arch/arm/kernel/irq.c:90 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("generic_handle_irq") [flags 0x41] <function_decl 0x10ee5300 generic_handle_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(22)
3, 15, 21, 27, 28, 34, 35, 92, 94, 95, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 166 167 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 134 166 167 168 169 170 171
;; live  kill	 14 [lr]
;; rd  in  	(29)
3, 5, 6, 15, 21, 27, 28, 34, 35, 90, 92, 94, 95, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
;; rd  gen 	(7)
601, 618, 619, 620, 621, 622, 623
;; rd  kill	(13)
36, 37, 38, 39, 40, 41, 601, 618, 619, 620, 621, 622, 623

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 56 55 57 7 31 "" [0 uses])

(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 58 57 61 7 arch/arm/kernel/irq.c:96 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_exit") [flags 0x41] <function_decl 0x10b4af00 irq_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 61 58 62 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/f:SI 166)
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x10eac360 __irq_regs>)) 167 {*arm_movsi_insn} (nil))

(insn 62 61 64 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 166)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 7419552)) -1 (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))

(insn 64 62 65 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/f:SI 167)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1a4e0 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 169)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 66 65 67 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 168)
        (and:SI (reg:SI 169)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 67 66 68 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 170 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 168)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 68 67 69 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 171)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 170 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 167)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 167)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 170 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10b1a4e0 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 69 68 0 7 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 134 [ __ptr ])
                (reg:SI 171)) [0 S4 A32])
        (reg/v/f:SI 140 [ old_regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg/v/f:SI 140 [ old_regs ])
            (expr_list:REG_DEAD (reg/v:SI 134 [ __ptr ])
                (nil)))))
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(36)
3, 5, 6, 15, 21, 27, 28, 34, 35, 90, 92, 94, 95, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function asm_do_IRQ (asm_do_IRQ)[0:1140]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



asm_do_IRQ

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={2d,1u} r1={2d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 137{126d,11u,0e} in 1{0 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,1] 15[13,1] 16[14,1] 17[15,1] 18[16,1] 19[17,1] 20[18,1] 21[19,1] 22[20,1] 23[21,1] 24[22,1] 25[23,1] 26[24,1] 27[25,1] 28[26,1] 29[27,1] 30[28,1] 31[29,1] 32[30,1] 33[31,1] 34[32,1] 35[33,1] 36[34,1] 37[35,1] 38[36,1] 39[37,1] 40[38,1] 41[39,1] 42[40,1] 43[41,1] 44[42,1] 45[43,1] 46[44,1] 47[45,1] 48[46,1] 49[47,1] 50[48,1] 51[49,1] 52[50,1] 53[51,1] 54[52,1] 55[53,1] 56[54,1] 57[55,1] 58[56,1] 59[57,1] 60[58,1] 61[59,1] 62[60,1] 63[61,1] 64[62,1] 65[63,1] 66[64,1] 67[65,1] 68[66,1] 69[67,1] 70[68,1] 71[69,1] 72[70,1] 73[71,1] 74[72,1] 75[73,1] 76[74,1] 77[75,1] 78[76,1] 79[77,1] 80[78,1] 81[79,1] 82[80,1] 83[81,1] 84[82,1] 85[83,1] 86[84,1] 87[85,1] 88[86,1] 89[87,1] 90[88,1] 91[89,1] 92[90,1] 93[91,1] 94[92,1] 95[93,1] 96[94,1] 97[95,1] 98[96,1] 99[97,1] 100[98,1] 101[99,1] 102[100,1] 103[101,1] 104[102,1] 105[103,1] 106[104,1] 107[105,1] 108[106,1] 109[107,1] 110[108,1] 111[109,1] 112[110,1] 113[111,1] 114[112,1] 115[113,1] 116[114,1] 117[115,1] 118[116,1] 119[117,1] 120[118,1] 121[119,1] 122[120,1] 123[121,1] 124[122,1] 125[123,1] 126[124,1] 127[125,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 12, 23, 24
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 9 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 9 4 0 2 arch/arm/kernel/irq.c:106 (parallel [
            (call (mem:SI (symbol_ref:SI ("handle_IRQ") [flags 0x3] <function_decl 0x10b4a580 handle_IRQ>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 3, 5, 7, 8, 10, 11, 12, 23, 24


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_show_interrupts (arch_show_interrupts)[0:1138]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



arch_show_interrupts

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={9d,7u} r1={8d,5u} r2={6d,1u} r3={6d,1u} r11={1d,2u} r12={5d} r13={1d,7u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,1u} r134={1d,3u} r135={1d,3u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 532{494d,38u,0e} in 22{18 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486
0[0,9] 1[9,8] 2[17,6] 3[23,6] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,4] 25[81,1] 26[82,1] 27[83,4] 28[87,4] 29[91,4] 30[95,4] 31[99,4] 32[103,4] 33[107,4] 34[111,4] 35[115,4] 36[119,4] 37[123,4] 38[127,4] 39[131,4] 40[135,4] 41[139,4] 42[143,4] 43[147,4] 44[151,4] 45[155,4] 46[159,4] 47[163,4] 48[167,4] 49[171,4] 50[175,4] 51[179,4] 52[183,4] 53[187,4] 54[191,4] 55[195,4] 56[199,4] 57[203,4] 58[207,4] 59[211,4] 60[215,4] 61[219,4] 62[223,4] 63[227,4] 64[231,4] 65[235,4] 66[239,4] 67[243,4] 68[247,4] 69[251,4] 70[255,4] 71[259,4] 72[263,4] 73[267,4] 74[271,4] 75[275,4] 76[279,4] 77[283,4] 78[287,4] 79[291,4] 80[295,4] 81[299,4] 82[303,4] 83[307,4] 84[311,4] 85[315,4] 86[319,4] 87[323,4] 88[327,4] 89[331,4] 90[335,4] 91[339,4] 92[343,4] 93[347,4] 94[351,4] 95[355,4] 96[359,4] 97[363,4] 98[367,4] 99[371,4] 100[375,4] 101[379,4] 102[383,4] 103[387,4] 104[391,4] 105[395,4] 106[399,4] 107[403,4] 108[407,4] 109[411,4] 110[415,4] 111[419,4] 112[423,4] 113[427,4] 114[431,4] 115[435,4] 116[439,4] 117[443,4] 118[447,4] 119[451,4] 120[455,4] 121[459,4] 122[463,4] 123[467,4] 124[471,4] 125[475,4] 126[479,4] 127[483,4] 133[487,1] 134[488,1] 135[489,1] 136[490,1] 137[491,1] 138[492,1] 139[493,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 16, 22, 28, 29, 34, 35, 40, 81, 82
;; rd  gen 	(8)
0, 487, 488, 489, 490, 491, 492, 493
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 40, 487, 488, 489, 490, 491, 492, 493

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/irq.c:55 (set (reg/v/f:SI 134 [ p ])
        (reg:SI 0 r0 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/irq.c:55 (set (reg/v:SI 135 [ prec ])
        (reg:SI 1 r1 [ prec ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 9 4 10 2 arch/arm/kernel/irq.c:57 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("show_fiq_list") [flags 0x41] <function_decl 0x112b1a00 show_fiq_list>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 9 11 2 arch/arm/kernel/irq.c:60 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/irq.c:60 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ prec ])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 13 2 arch/arm/kernel/irq.c:60 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_ipi_list") [flags 0x41] <function_decl 0x10b19480 show_ipi_list>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/irq.c:63 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/irq.c:63 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ prec ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 2 arch/arm/kernel/irq.c:63 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_local_irqs") [flags 0x41] <function_decl 0x10b19d00 show_local_irqs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 17 2 arch/arm/kernel/irq.c:65 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1133d1b0>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/irq.c:65 (set (reg/f:SI 137)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1133c1e0>)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/kernel/irq.c:65 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/irq.c:65 (set (reg:SI 139 [ irq_err_count ])
        (mem/c/i:SI (reg/f:SI 138) [0 irq_err_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))

(insn 20 19 21 2 arch/arm/kernel/irq.c:65 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 139 [ irq_err_count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ irq_err_count ])
        (nil)))

(insn 21 20 22 2 arch/arm/kernel/irq.c:65 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ p ])
        (nil)))

(insn 22 21 23 2 arch/arm/kernel/irq.c:65 (set (reg:SI 1 r1)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1133d1b0>)
            (nil))))

(insn 23 22 24 2 arch/arm/kernel/irq.c:65 (set (reg:SI 2 r2)
        (reg/v:SI 135 [ prec ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ prec ])
        (nil)))

(insn 24 23 25 2 arch/arm/kernel/irq.c:65 (set (reg:SI 3 r3)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1133c1e0>)
            (nil))))

(call_insn 25 24 26 2 arch/arm/kernel/irq.c:65 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x10f70280 seq_printf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 26 25 30 2 arch/arm/kernel/irq.c:67 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 30 26 36 2 arch/arm/kernel/irq.c:67 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 36 30 0 2 arch/arm/kernel/irq.c:67 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
0, 16, 22, 28, 29, 34, 35, 81, 82, 487, 488, 489, 490, 491, 492, 493


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
