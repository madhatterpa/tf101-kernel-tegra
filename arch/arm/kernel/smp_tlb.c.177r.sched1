
;; Function ipi_flush_tlb_all (ipi_flush_tlb_all)[0:746]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 11 -- before reload
;;   ======================================================

;;	  0-->     6 r135=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  3-->     7 r133=[r135+0x8]                   :cortex_a8_load_store_1
;;	  4-->     8 {asm_operands;clobber [scratch];} :nothing
;;	  5-->    10 cc=cmp(zxt(r133,0x1,0xc),0x0)     :cortex_a8_default
;;	  7-->    11 pc={(cc==0x0)?L15:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 6
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 13 to 14 -- before reload
;;   ======================================================

;;	  0-->    13 r137=0x0                          :cortex_a8_default
;;	  1-->    14 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 13
;;   new tail = 14

;;   ======================================================
;;   -- basic block 4 from 18 to 19 -- before reload
;;   ======================================================

;;	  0-->    18 cc=cmp(zxt(r133,0x1,0x14),0x0)    :cortex_a8_default
;;	  2-->    19 pc={(cc==0x0)?L23:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 18
;;   new tail = 19

;;   ======================================================
;;   -- basic block 5 from 21 to 22 -- before reload
;;   ======================================================

;;	  0-->    21 r139=0x0                          :cortex_a8_default
;;	  1-->    22 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 21
;;   new tail = 22

;;   ======================================================
;;   -- basic block 6 from 25 to 26 -- before reload
;;   ======================================================

;;	  0-->    25 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    26 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 25
;;   new tail = 26


;; Procedure interblock/speculative motions == 0/0 




ipi_flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,6u} r14={1d,1u} r24={4d,2u} r25={1d,6u} r26={1d,5u} r133={1d,2u} r135={1d,1u} r137={1d,1u} r139={1d,1u} 
;;    total ref usage 49{18d,31u,0e} in 13{13 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 6 2 NOTE_INSN_DELETED)

(insn 6 9 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 135)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 135)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 8 7 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 10 8 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 137
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 137)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 137)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 2 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 16 18 4 NOTE_INSN_DELETED)

(insn 18 17 19 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 19 18 20 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 139)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 139)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 23 22 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 26 25 53 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 53 26 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_page (ipi_flush_tlb_page)[0:748]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


ipi_flush_tlb_page

Dataflow summary:
def_info->table_size = 40, use_info->table_size = 63
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,7u} r14={1d,1u} r24={5d,2u} r25={1d,6u} r26={1d,5u} r133={1d,2u} r135={1d} r137={1d,2u} r139={1d,2u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={2d,2u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={2d,2u} r153={1d,3u,1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r160={2d,2u} 
;;    total ref usage 91{36d,54u,1e} in 29{29 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d13(25){ }d14(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137 139 140 141 142 143 145 146 148 149 150 153 154 155 156
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137 139 140 141 142 143 145 146 148 149 150 153 154 155 156
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 160
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u59(11){ }u60(13){ }u61(14){ }u62(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 17 to worklist
  Adding insn 36 to worklist
  Adding insn 41 to worklist
  Adding insn 45 to worklist
  Adding insn 48 to worklist
Finished finding needed instructions:
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
  Adding insn 40 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
  Adding insn 33 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;;   ======================================================
;;   -- basic block 2 from 2 to 34 -- before reload
;;   ======================================================

;;	  0-->     2 r140=r0                           :cortex_a8_default
;;	  0-->     8 r141=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  2-->     7 r139=[r140]                       :cortex_a8_load_store_1
;;	  3-->    13 r146=[r140+0x4]                   :cortex_a8_load_store_1
;;	  4-->     9 r133=[r141+0x8]                   :cortex_a8_load_store_1
;;	  5-->    10 r142=[r139]                       :cortex_a8_load_store_1
;;	  5-->    58 r145=r146&0xfffffffffffff00f      :cortex_a8_default
;;	  6-->    59 r145=r145&0xfffffffffffffff0      :cortex_a8_default
;;	  8-->    12 r143=zxn([r142+0x160])            :cortex_a8_load_store_1
;;	 10-->    16 r137=r143|r145                    :cortex_a8_default
;;	 11-->    17 {asm_operands;clobber [scratch];} :nothing
;;	 12-->    60 r150=sp&0xffffffffffffe03f        :cortex_a8_default
;;	 12-->    19 r149=[r139]                       :cortex_a8_load_store_1
;;	 13-->    61 r150=r150&0xffffffffffffffc0      :cortex_a8_default
;;	 14-->    20 r148=r149+0x15c                   :cortex_a8_default
;;	 15-->    23 r153=[r150+0x14]                  :cortex_a8_load_store_1
;;	 17-->    25 r155=r153+0x1f                    :cortex_a8_default
;;	 18-->    27 {r154={(r153>=0x0)?r153:r155};clob:cortex_a8_default
;;	 18-->    33 cc=cmp(zxt(r133,0x1,0x4),0x0)     :cortex_a8_default
;;	 20-->    28 r156=r154>>0x5                    :cortex_a8_default
;;	 22-->    31 r135=[r156*0x4+r148]              :cortex_a8_load_store_1
;;	 22-->    34 pc={(cc==0x0)?L37:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 22
;;   new head = 2
;;   new tail = 34

;;   ======================================================
;;   -- basic block 3 from 36 to 36 -- before reload
;;   ======================================================

;;	  0-->    36 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 36
;;   new tail = 36

;;   ======================================================
;;   -- basic block 4 from 40 to 41 -- before reload
;;   ======================================================

;;	  0-->    40 cc=cmp(zxt(r133,0x1,0x13),0x0)    :cortex_a8_default
;;	  2-->    41 pc={(cc==0x0)?L46:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 40
;;   new tail = 41

;;   ======================================================
;;   -- basic block 5 from 56 to 45 -- before reload
;;   ======================================================

;;	  0-->    56 r160=r137&0xfffffffffffff00f      :cortex_a8_default
;;	  1-->    57 r160=r160&0xfffffffffffffff0      :cortex_a8_default
;;	  2-->    45 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 56
;;   new tail = 45

;;   ======================================================
;;   -- basic block 6 from 48 to 48 -- before reload
;;   ======================================================

;;	  0-->    48 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 48
;;   new tail = 48


;; Procedure interblock/speculative motions == 0/0 




ipi_flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,7u} r14={1d,1u} r24={5d,2u} r25={1d,6u} r26={1d,5u} r133={1d,2u} r135={1d} r137={1d,2u} r139={1d,2u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={2d,2u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={2d,2u} r153={1d,3u,1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r160={2d,2u} 
;;    total ref usage 91{36d,54u,1e} in 29{29 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 137 139 140 141 142 143 145 146 148 149 150 153 154 155 156
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 137 139 140 141 142 143 145 146 148 149 150 153 154 155 156
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 14 2 NOTE_INSN_DELETED)

(note 14 11 21 2 NOTE_INSN_DELETED)

(note 21 14 26 2 NOTE_INSN_DELETED)

(note 26 21 32 2 NOTE_INSN_DELETED)

(note 32 26 2 2 NOTE_INSN_DELETED)

(insn 2 32 8 2 arch/arm/kernel/smp_tlb.c:52 (set (reg/v/f:SI 140 [ arg ])
        (reg:SI 0 r0 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn 8 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 141)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 7 8 13 2 arch/arm/kernel/smp_tlb.c:55 (set (reg/f:SI 139 [ D.13370 ])
        (mem/s/f/j:SI (reg/v/f:SI 140 [ arg ]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 146 [ <variable>.ta_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 140 [ arg ])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ arg ])
        (nil)))

(insn 9 13 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 141)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 10 9 58 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 142 [ <variable>.vm_mm ])
        (mem/s/f/j:SI (reg/f:SI 139 [ D.13370 ]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 10 59 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 145)
        (and:SI (reg:SI 146 [ <variable>.ta_start ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146 [ <variable>.ta_start ])
        (nil)))

(insn 59 58 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 145)
        (and:SI (reg:SI 145)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 59 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 143)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 142 [ <variable>.vm_mm ])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 142 [ <variable>.vm_mm ])
        (nil)))

(insn 16 12 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 137 [ uaddr ])
        (ior:SI (reg:SI 143)
            (reg:SI 145))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_DEAD (reg:SI 143)
            (nil))))

(insn 17 16 60 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 60 17 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 150)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 60 61 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 149 [ <variable>.vm_mm ])
        (mem/s/f/j:SI (reg/f:SI 139 [ D.13370 ]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.13370 ])
        (nil)))

(insn 61 19 20 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 150)
        (and:SI (reg:SI 150)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 61 23 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 148)
        (plus:SI (reg/f:SI 149 [ <variable>.vm_mm ])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 149 [ <variable>.vm_mm ])
        (nil)))

(insn 23 20 25 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 153 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 150)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 25 23 27 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 155)
        (plus:SI (reg:SI 153 [ <variable>.cpu ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 27 25 33 2 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 154 [ <variable>.cpu ])
                (if_then_else:SI (ge (reg:SI 153 [ <variable>.cpu ])
                        (const_int 0 [0x0]))
                    (reg:SI 153 [ <variable>.cpu ])
                    (reg:SI 155)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg:SI 153 [ <variable>.cpu ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 33 27 28 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 28 33 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 156)
        (ashiftrt:SI (reg:SI 154 [ <variable>.cpu ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.cpu ])
        (expr_list:REG_EQUAL (div:SI (reg:SI 153 [ <variable>.cpu ])
                (const_int 32 [0x20]))
            (nil))))

(insn 31 28 34 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 135 [ D.13510 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 156)
                    (const_int 4 [0x4]))
                (reg/f:SI 148)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_DEAD (reg/f:SI 148)
            (expr_list:REG_UNUSED (reg:SI 135 [ D.13510 ])
                (nil)))))

(jump_insn 34 31 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 137 [ uaddr ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 9 "" [1 uses])

(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 39 38 40 4 NOTE_INSN_DELETED)

(insn 40 39 41 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 41 40 42 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 160
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 43 42 56 5 NOTE_INSN_DELETED)

(insn 56 43 57 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 160)
        (and:SI (reg/v:SI 137 [ uaddr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ uaddr ])
        (nil)))

(insn 57 56 45 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 160)
        (and:SI (reg:SI 160)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 45 57 46 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 160)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 46 45 47 6 10 "" [1 uses])

(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 62 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 48 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_kernel_page (ipi_flush_tlb_kernel_page)[0:749]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


ipi_flush_tlb_kernel_page

Dataflow summary:
def_info->table_size = 22, use_info->table_size = 38
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,6u} r14={1d,1u} r24={4d,2u} r25={1d,6u} r26={1d,5u} r133={1d,2u} r134={2d,3u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 53{19d,34u,0e} in 14{14 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d12(25){ }d13(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 136 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u34(11){ }u35(13){ }u36(14){ }u37(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 16 to worklist
  Adding insn 21 to worklist
  Adding insn 23 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 20 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 13 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;;   ======================================================
;;   -- basic block 2 from 6 to 14 -- before reload
;;   ======================================================

;;	  0-->     8 r137=[r0+0x4]                     :cortex_a8_load_store_1
;;	  1-->     6 r136=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  2-->    35 r134=r137&0xfffffffffffff00f      :cortex_a8_default
;;	  3-->    36 r134=r134&0xfffffffffffffff0      :cortex_a8_default
;;	  4-->     7 r133=[r136+0x8]                   :cortex_a8_load_store_1
;;	  5-->    11 {asm_operands;clobber [scratch];} :nothing
;;	  6-->    13 cc=cmp(zxt(r133,0x1,0x4),0x0)     :cortex_a8_default
;;	  8-->    14 pc={(cc==0x0)?L17:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 6
;;   new tail = 14

;;   ======================================================
;;   -- basic block 3 from 16 to 16 -- before reload
;;   ======================================================

;;	  0-->    16 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 16
;;   new tail = 16

;;   ======================================================
;;   -- basic block 4 from 20 to 21 -- before reload
;;   ======================================================

;;	  0-->    20 cc=cmp(zxt(r133,0x1,0x13),0x0)    :cortex_a8_default
;;	  2-->    21 pc={(cc==0x0)?L24:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 20
;;   new tail = 21

;;   ======================================================
;;   -- basic block 5 from 23 to 23 -- before reload
;;   ======================================================

;;	  0-->    23 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 23
;;   new tail = 23

;;   ======================================================
;;   -- basic block 6 from 26 to 27 -- before reload
;;   ======================================================

;;	  0-->    26 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    27 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 26
;;   new tail = 27


;; Procedure interblock/speculative motions == 0/0 




ipi_flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,6u} r14={1d,1u} r24={4d,2u} r25={1d,6u} r26={1d,5u} r133={1d,2u} r134={2d,3u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 53{19d,34u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 136 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 12 2 NOTE_INSN_DELETED)

(note 12 9 8 2 NOTE_INSN_DELETED)

(insn 8 12 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg:SI 137 [ <variable>.ta_start ])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ arg ])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn 6 8 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 136)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 35 6 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 134 [ kaddr ])
        (and:SI (reg:SI 137 [ <variable>.ta_start ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137 [ <variable>.ta_start ])
        (nil)))

(insn 36 35 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 134 [ kaddr ])
        (and:SI (reg/v:SI 134 [ kaddr ])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 36 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 136)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 11 7 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 13 11 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 134 [ kaddr ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 15 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 4 NOTE_INSN_DELETED)

(insn 20 19 21 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 21 20 22 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 134 [ kaddr ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ kaddr ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 24 23 25 6 16 "" [1 uses])

(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 27 26 37 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 27 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_range (ipi_flush_tlb_range)[0:750]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 12 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->     7 r135=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  2-->    11 r2=[r134]                         :cortex_a8_load_store_1
;;	  3-->     9 r0=[r134+0x4]                     :cortex_a8_load_store_1
;;	  4-->    10 r1=[r134+0x8]                     :cortex_a8_load_store_1
;;	  5-->    12 call [[r135]]                     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2
;;   new tail = 12


;; Procedure interblock/speculative motions == 0/0 




ipi_flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,3u} r135={1d,1u} 
;;    total ref usage 149{132d,17u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 2 2 NOTE_INSN_DELETED)

(insn 2 8 7 2 arch/arm/kernel/smp_tlb.c:66 (set (reg/v/f:SI 134 [ arg ])
        (reg:SI 0 r0 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn 7 2 11 2 arch/arm/kernel/smp_tlb.c:69 (set (reg/f:SI 135)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 11 7 9 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (reg/v/f:SI 134 [ arg ]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ arg ])
        (nil)))

(insn 9 11 10 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ arg ])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 12 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ arg ])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 10 20 2 arch/arm/kernel/smp_tlb.c:69 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 135) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 12 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_kernel_range (ipi_flush_tlb_kernel_range)[0:751]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 11 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->     7 r135=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  2-->    10 r1=[r134+0x8]                     :cortex_a8_load_store_1
;;	  3-->     9 r0=[r134+0x4]                     :cortex_a8_load_store_1
;;	  4-->    11 call [[r135+0x4]]                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 2
;;   new tail = 11


;; Procedure interblock/speculative motions == 0/0 




ipi_flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,2u} r135={1d,1u} 
;;    total ref usage 146{131d,15u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134 135
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 2 2 NOTE_INSN_DELETED)

(insn 2 8 7 2 arch/arm/kernel/smp_tlb.c:73 (set (reg/v/f:SI 134 [ arg ])
        (reg:SI 0 r0 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn 7 2 10 2 arch/arm/kernel/smp_tlb.c:76 (set (reg/f:SI 135)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 10 7 9 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ arg ])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ arg ])
        (nil)))

(insn 9 10 11 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ arg ])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 9 19 2 arch/arm/kernel/smp_tlb.c:76 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 135)
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 11 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_kernel_range (flush_tlb_kernel_range)[0:757]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 10 -- before reload
;;   ======================================================

;;	  0-->     7 r136=`smp_on_up'                  :cortex_a8_load_store_1
;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  1-->     3 r135=r1                           :cortex_a8_default
;;	  3-->     8 r137=[r136]                       :cortex_a8_load_store_1
;;	  5-->     9 cc=cmp(r137,0x0)                  :cortex_a8_default
;;	  7-->    10 pc={(cc==0x0)?L28:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 12 to 16 -- before reload
;;   ======================================================

;;	  0-->    12 {r133=asm_operands;clobber cc;}   :nothing
;;	  1-->    14 r139=zxt(r133,0x4,0xc)            :cortex_a8_default
;;	  2-->    15 cc=cmp(r139,0x1)                  :cortex_a8_default
;;	  4-->    16 pc={(gtu(cc,0x0))?L28:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 12
;;   new tail = 16

;;   ======================================================
;;   -- basic block 4 from 18 to 44 -- before reload
;;   ======================================================

;;	  0-->    23 r1=sfp-0xc                        :cortex_a8_default
;;	  0-->    24 r2=0x1                            :cortex_a8_default
;;	  1-->    22 r0=`ipi_flush_tlb_kernel_range'   :cortex_a8_load_store_1
;;	  2-->    18 [sfp-0x8]=r134                    :cortex_a8_load_store_1
;;	  3-->    19 [sfp-0x4]=r135                    :cortex_a8_load_store_1
;;	  3-->    25 r0=call [`on_each_cpu']           :cortex_a8_issue_branch
;;	  4-->    44 pc=L40                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 18
;;   new tail = 44

;;   ======================================================
;;   -- basic block 5 from 30 to 34 -- before reload
;;   ======================================================

;;	  0-->    32 r0=r134                           :cortex_a8_default
;;	  0-->    33 r1=r135                           :cortex_a8_default
;;	  1-->    30 r142=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  2-->    34 call [[r142+0x4]]                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 30
;;   new tail = 34


;; Procedure interblock/speculative motions == 0/0 




flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={4d,1u} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r25={1d,9u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r139={1d,1u} r142={1d,1u} 
;;    total ref usage 306{259d,47u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 136)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 2 7 3 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 134 [ start ])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ start ])
        (nil)))

(insn 3 2 8 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 135 [ end ])
        (reg:SI 1 r1 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ end ])
        (nil)))

(insn 8 3 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 137 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 136) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
            (nil))))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ smp_on_up ])
        (nil)))

(jump_insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 24 [cc] 133 139
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn 12 13 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 133 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 14 12 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 139)
        (zero_extract:SI (reg/v:SI 133 [ __val ])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 133 [ __val ])
        (nil)))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2200 [0x898])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(insn 23 21 24 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 24 23 22 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 22 24 18 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)
        (nil)))

(insn 18 22 19 4 arch/arm/kernel/smp_tlb.c:133 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 134 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ start ])
        (nil)))

(insn 19 18 25 4 arch/arm/kernel/smp_tlb.c:134 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 135 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ end ])
        (nil)))

(call_insn 25 19 44 4 arch/arm/kernel/smp_tlb.c:135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 44 25 45 4 (set (pc)
        (label_ref 40)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%] 

(barrier 45 44 28)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; live  gen 	 0 [r0] 1 [r1] 142
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 28 45 29 5 29 "" [2 uses])

(note 29 28 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 29 32 5 NOTE_INSN_DELETED)

(insn 32 31 33 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ start ])
        (nil)))

(insn 33 32 30 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ end ])
        (nil)))

(insn 30 33 34 5 arch/arm/kernel/smp_tlb.c:137 (set (reg/f:SI 142)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(call_insn 34 30 40 5 arch/arm/kernel/smp_tlb.c:137 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 142)
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 40 34 43 6 31 "" [1 uses])

(note 43 40 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 46 43 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_kernel_page (flush_tlb_kernel_page)[0:755]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)


flush_tlb_kernel_page

Dataflow summary:
def_info->table_size = 150, use_info->table_size = 69
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,10u} r12={2d} r13={1d,11u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r25={1d,12u} r26={1d,9u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={2d,3u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r143={1d,1u} 
;;    total ref usage 209{146d,63u,0e} in 28{27 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d34(25){ }d35(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc] 135 140
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 3 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 134 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc] 133 134 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 9 4 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u65(11){ }u66(13){ }u67(14){ }u68(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 15 to worklist
  Adding insn 58 to worklist
  Adding insn 23 to worklist
  Adding insn 17 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 37 to worklist
  Adding insn 42 to worklist
  Adding insn 44 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
Finished finding needed instructions:
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 41 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 34 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 2 to 9 -- before reload
;;   ======================================================

;;	  0-->     6 r137=`smp_on_up'                  :cortex_a8_load_store_1
;;	  0-->     2 r136=r0                           :cortex_a8_default
;;	  3-->     7 r138=[r137]                       :cortex_a8_load_store_1
;;	  5-->     8 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  7-->     9 pc={(cc==0x0)?L26:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 11 to 15 -- before reload
;;   ======================================================

;;	  0-->    11 {r135=asm_operands;clobber cc;}   :nothing
;;	  1-->    13 r140=zxt(r135,0x4,0xc)            :cortex_a8_default
;;	  2-->    14 cc=cmp(r140,0x1)                  :cortex_a8_default
;;	  4-->    15 pc={(gtu(cc,0x0))?L26:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 11
;;   new tail = 15

;;   ======================================================
;;   -- basic block 4 from 17 to 58 -- before reload
;;   ======================================================

;;	  0-->    21 r1=sfp-0xc                        :cortex_a8_default
;;	  0-->    22 r2=0x1                            :cortex_a8_default
;;	  1-->    20 r0=`ipi_flush_tlb_kernel_page'    :cortex_a8_load_store_1
;;	  2-->    17 [sfp-0x8]=r136                    :cortex_a8_load_store_1
;;	  2-->    23 r0=call [`on_each_cpu']           :cortex_a8_issue_branch
;;	  3-->    58 pc=L54                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 17
;;   new tail = 58

;;   ======================================================
;;   -- basic block 5 from 28 to 35 -- before reload
;;   ======================================================

;;	  0-->    28 r143=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  0-->    60 r134=r136&0xfffffffffffff00f      :cortex_a8_default
;;	  1-->    61 r134=r134&0xfffffffffffffff0      :cortex_a8_default
;;	  3-->    29 r133=[r143+0x8]                   :cortex_a8_load_store_1
;;	  4-->    32 {asm_operands;clobber [scratch];} :nothing
;;	  5-->    34 cc=cmp(zxt(r133,0x1,0x4),0x0)     :cortex_a8_default
;;	  7-->    35 pc={(cc==0x0)?L38:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 28
;;   new tail = 35

;;   ======================================================
;;   -- basic block 6 from 37 to 37 -- before reload
;;   ======================================================

;;	  0-->    37 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 37
;;   new tail = 37

;;   ======================================================
;;   -- basic block 7 from 41 to 42 -- before reload
;;   ======================================================

;;	  0-->    41 cc=cmp(zxt(r133,0x1,0x13),0x0)    :cortex_a8_default
;;	  2-->    42 pc={(cc==0x0)?L45:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 41
;;   new tail = 42

;;   ======================================================
;;   -- basic block 8 from 44 to 44 -- before reload
;;   ======================================================

;;	  0-->    44 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 44
;;   new tail = 44

;;   ======================================================
;;   -- basic block 9 from 47 to 48 -- before reload
;;   ======================================================

;;	  0-->    47 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    48 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 47
;;   new tail = 48


;; Procedure interblock/speculative motions == 0/0 




flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,10u} r12={2d} r13={1d,11u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r25={1d,12u} r26={1d,9u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={2d,3u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r143={1d,1u} 
;;    total ref usage 209{146d,63u,0e} in 28{27 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 137)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 2 6 7 2 arch/arm/kernel/smp_tlb.c:107 (set (reg/v:SI 136 [ kaddr ])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ kaddr ])
        (nil)))

(insn 7 2 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 138 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 137) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
            (nil))))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ smp_on_up ])
        (nil)))

(jump_insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc] 135 140
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn 11 12 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 135 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 13 11 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 140)
        (zero_extract:SI (reg/v:SI 135 [ __val ])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 135 [ __val ])
        (nil)))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 16 21 4 NOTE_INSN_DELETED)

(insn 21 19 22 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 22 21 20 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 20 22 17 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)
        (nil)))

(insn 17 20 23 4 arch/arm/kernel/smp_tlb.c:110 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 136 [ kaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ kaddr ])
        (nil)))

(call_insn 23 17 58 4 arch/arm/kernel/smp_tlb.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 58 23 59 4 (set (pc)
        (label_ref 54)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%] 

(barrier 59 58 26)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 134 143
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc] 133 134 143
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 26 59 27 5 35 "" [2 uses])

(note 27 26 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 30 27 33 5 NOTE_INSN_DELETED)

(note 33 30 28 5 NOTE_INSN_DELETED)

(insn 28 33 60 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 143)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 60 28 61 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 134 [ kaddr ])
        (and:SI (reg/v:SI 136 [ kaddr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ kaddr ])
        (nil)))

(insn 61 60 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 134 [ kaddr ])
        (and:SI (reg/v:SI 134 [ kaddr ])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 61 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 143)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 32 29 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 34 32 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 134 [ kaddr ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 38 37 39 7 37 "" [1 uses])

(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 40 39 41 7 NOTE_INSN_DELETED)

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 134 [ kaddr ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ kaddr ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 45 44 46 9 38 "" [1 uses])

(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 48 47 54 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 54 48 57 10 39 "" [1 uses])

(note 57 54 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 57 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_all (flush_tlb_all)[0:752]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 5 to 8 -- before reload
;;   ======================================================

;;	  0-->     5 r135=`smp_on_up'                  :cortex_a8_load_store_1
;;	  3-->     6 r136=[r135]                       :cortex_a8_load_store_1
;;	  5-->     7 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  7-->     8 pc={(cc==0x0)?L22:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 5
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 14 -- before reload
;;   ======================================================

;;	  0-->    10 {r134=asm_operands;clobber cc;}   :nothing
;;	  1-->    12 r138=zxt(r134,0x4,0xc)            :cortex_a8_default
;;	  2-->    13 cc=cmp(r138,0x1)                  :cortex_a8_default
;;	  4-->    14 pc={(gtu(cc,0x0))?L22:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 10
;;   new tail = 14

;;   ======================================================
;;   -- basic block 4 from 17 to 20 -- before reload
;;   ======================================================

;;	  0-->    17 r0=`ipi_flush_tlb_all'            :cortex_a8_load_store_1
;;	  0-->    18 r1=0x0                            :cortex_a8_default
;;	  1-->    19 r2=0x1                            :cortex_a8_default
;;	  2-->    20 r0=call [`on_each_cpu']           :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 17
;;   new tail = 20

;;   ======================================================
;;   -- basic block 5 from 24 to 29 -- before reload
;;   ======================================================

;;	  0-->    24 r140=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  3-->    25 r133=[r140+0x8]                   :cortex_a8_load_store_1
;;	  4-->    26 {asm_operands;clobber [scratch];} :nothing
;;	  5-->    28 cc=cmp(zxt(r133,0x1,0xc),0x0)     :cortex_a8_default
;;	  7-->    29 pc={(cc==0x0)?L33:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 24
;;   new tail = 29

;;   ======================================================
;;   -- basic block 6 from 31 to 32 -- before reload
;;   ======================================================

;;	  0-->    31 r142=0x0                          :cortex_a8_default
;;	  1-->    32 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 31
;;   new tail = 32

;;   ======================================================
;;   -- basic block 7 from 36 to 37 -- before reload
;;   ======================================================

;;	  0-->    36 cc=cmp(zxt(r133,0x1,0x14),0x0)    :cortex_a8_default
;;	  2-->    37 pc={(cc==0x0)?L41:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 36
;;   new tail = 37

;;   ======================================================
;;   -- basic block 8 from 39 to 40 -- before reload
;;   ======================================================

;;	  0-->    39 r144=0x0                          :cortex_a8_default
;;	  1-->    40 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 39
;;   new tail = 40

;;   ======================================================
;;   -- basic block 9 from 43 to 44 -- before reload
;;   ======================================================

;;	  0-->    43 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    44 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 43
;;   new tail = 44


;; Procedure interblock/speculative motions == 0/0 




flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,9u} r12={2d} r13={1d,10u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r25={1d,9u} r26={1d,8u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r140={1d,1u} r142={1d,1u} r144={1d,1u} 
;;    total ref usage 197{144d,53u,0e} in 25{24 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 135)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 136 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 135) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
            (nil))))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ smp_on_up ])
        (nil)))

(jump_insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 138
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn 10 11 12 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 134 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 12 10 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 138)
        (zero_extract:SI (reg/v:SI 134 [ __val ])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 134 [ __val ])
        (nil)))

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(jump_insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 15 18 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 20 19 21 4 arch/arm/kernel/smp_tlb.c:82 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 21 20 22)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 140
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 22 21 23 5 43 "" [2 uses])

(note 23 22 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 23 24 5 NOTE_INSN_DELETED)

(insn 24 27 25 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 140)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 26 25 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 28 26 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 29 28 30 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 142
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 142)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 142)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 33 32 34 7 44 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 35 34 36 7 NOTE_INSN_DELETED)

(insn 36 35 37 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 144)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 144)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 41 40 42 9 45 "" [1 uses])

(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 44 43 53 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 53 44 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_mm (ipi_flush_tlb_mm)[0:747]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


ipi_flush_tlb_mm

Dataflow summary:
def_info->table_size = 156, use_info->table_size = 72
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,10u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,3u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r135={2d,7u} r138={1d} r143={1d,1u} r146={1d,2u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r155={1d,3u,1d} r156={1d,1u} r157={1d,1u} r158={1d,1u} r161={1d,1u} r162={1d,1u} r166={1d,1u} r168={1d,1u} 
;;    total ref usage 218{152d,65u,1e} in 35{34 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 138 143 146 147 149 150 151 155 156 157 158 161 162
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 138 143 146 147 149 150 151 155 156 157 158 161 162
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 166
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134

( 4 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 168
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u68(11){ }u69(13){ }u70(14){ }u71(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 47 to worklist
  Adding insn 52 to worklist
  Adding insn 55 to worklist
  Adding insn 60 to worklist
  Adding insn 63 to worklist
  Adding insn 66 to worklist
Finished finding needed instructions:
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 62 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 59 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 54 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 51 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 44 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 2 to 45 -- before reload
;;   ======================================================

;;	  0-->     8 r147=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  0-->     2 r146=r0                           :cortex_a8_default
;;	  2-->     7 r133=[r146+0x160]                 :cortex_a8_load_store_1
;;	  3-->     9 r134=[r147+0x8]                   :cortex_a8_load_store_1
;;	  4-->    10 {asm_operands;clobber [scratch];} :nothing
;;	  5-->    74 r135=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  6-->    75 r135=r135&0xffffffffffffffc0      :cortex_a8_default
;;	  8-->    14 r149=[r135+0x4]                   :cortex_a8_load_store_1
;;	 10-->    15 r150=r149+0x1                     :cortex_a8_default
;;	 10-->    16 [r135+0x4]=r150                   :cortex_a8_load_store_1
;;	 11-->    17 {asm_operands;clobber [scratch];} :nothing
;;	 12-->    22 r155=[r135+0x14]                  :cortex_a8_load_store_1
;;	 12-->    19 r151=r146+0x15c                   :cortex_a8_default
;;	 14-->    24 r157=r155+0x1f                    :cortex_a8_default
;;	 15-->    26 {r156={(r155>=0x0)?r155:r157};clob:cortex_a8_default
;;	 17-->    27 r158=r156>>0x5                    :cortex_a8_default
;;	 19-->    30 r138=[r158*0x4+r151]              :cortex_a8_load_store_1
;;	 20-->    31 {asm_operands;clobber [scratch];} :nothing
;;	 21-->    35 r161=[r135+0x4]                   :cortex_a8_load_store_1
;;	 23-->    36 r162=r161-0x1                     :cortex_a8_default
;;	 23-->    37 [r135+0x4]=r162                   :cortex_a8_load_store_1
;;	 24-->    38 {asm_operands;clobber [scratch];} :nothing
;;	 25-->    42 r143=[r135]                       :cortex_a8_load_store_1
;;	 27-->    44 cc=cmp(zxt(r143,0x1,0x1),0x0)     :cortex_a8_default
;;	 29-->    45 pc={(cc==0x0)?L48:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 29
;;   new head = 2
;;   new tail = 45

;;   ======================================================
;;   -- basic block 3 from 47 to 47 -- before reload
;;   ======================================================

;;	  0-->    47 call [`preempt_schedule']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 47
;;   new tail = 47

;;   ======================================================
;;   -- basic block 4 from 51 to 52 -- before reload
;;   ======================================================

;;	  0-->    51 cc=cmp(zxt(r134,0x1,0x10),0x0)    :cortex_a8_default
;;	  2-->    52 pc={(cc==0x0)?L56:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 51
;;   new tail = 52

;;   ======================================================
;;   -- basic block 5 from 54 to 55 -- before reload
;;   ======================================================

;;	  0-->    54 r166=r133&0xff                    :cortex_a8_default
;;	  1-->    55 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 54
;;   new tail = 55

;;   ======================================================
;;   -- basic block 6 from 59 to 60 -- before reload
;;   ======================================================

;;	  0-->    59 cc=cmp(zxt(r134,0x1,0x15),0x0)    :cortex_a8_default
;;	  2-->    60 pc={(cc==0x0)?L64:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 59
;;   new tail = 60

;;   ======================================================
;;   -- basic block 7 from 62 to 63 -- before reload
;;   ======================================================

;;	  0-->    62 r168=0x0                          :cortex_a8_default
;;	  1-->    63 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 62
;;   new tail = 63

;;   ======================================================
;;   -- basic block 8 from 66 to 66 -- before reload
;;   ======================================================

;;	  0-->    66 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 66
;;   new tail = 66


;; Procedure interblock/speculative motions == 0/0 




ipi_flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,10u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,3u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r135={2d,7u} r138={1d} r143={1d,1u} r146={1d,2u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r155={1d,3u,1d} r156={1d,1u} r157={1d,1u} r158={1d,1u} r161={1d,1u} r162={1d,1u} r166={1d,1u} r168={1d,1u} 
;;    total ref usage 218{152d,65u,1e} in 35{34 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 138 143 146 147 149 150 151 155 156 157 158 161 162
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 138 143 146 147 149 150 151 155 156 157 158 161 162
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 3 25 2 NOTE_INSN_DELETED)

(note 25 12 43 2 NOTE_INSN_DELETED)

(note 43 25 8 2 NOTE_INSN_DELETED)

(insn 8 43 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 147)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 2 8 7 2 arch/arm/kernel/smp_tlb.c:45 (set (reg/v/f:SI 146 [ arg ])
        (reg:SI 0 r0 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn 7 2 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 133 [ D.13829 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ arg ])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 7 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 134 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 147)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 10 9 74 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 74 10 75 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 135 [ D.13817 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 75 74 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 135 [ D.13817 ])
        (and:SI (reg/f:SI 135 [ D.13817 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 75 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 149 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13817 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 150)
        (plus:SI (reg:SI 149 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 149 [ <variable>.preempt_count ])
        (nil)))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13817 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 17 16 22 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 22 17 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 155 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13817 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 22 24 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 151)
        (plus:SI (reg/v/f:SI 146 [ arg ])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 146 [ arg ])
        (nil)))

(insn 24 19 26 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 157)
        (plus:SI (reg:SI 155 [ <variable>.cpu ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 26 24 27 2 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 156 [ <variable>.cpu ])
                (if_then_else:SI (ge (reg:SI 155 [ <variable>.cpu ])
                        (const_int 0 [0x0]))
                    (reg:SI 155 [ <variable>.cpu ])
                    (reg:SI 157)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 155 [ <variable>.cpu ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 27 26 30 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 158)
        (ashiftrt:SI (reg:SI 156 [ <variable>.cpu ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 156 [ <variable>.cpu ])
        (expr_list:REG_EQUAL (div:SI (reg:SI 155 [ <variable>.cpu ])
                (const_int 32 [0x20]))
            (nil))))

(insn 30 27 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.13810 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 158)
                    (const_int 4 [0x4]))
                (reg/f:SI 151)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/f:SI 151)
            (expr_list:REG_UNUSED (reg:SI 138 [ D.13810 ])
                (nil)))))

(insn 31 30 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 31 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 161 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13817 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 162)
        (plus:SI (reg:SI 161 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.preempt_count ])
        (nil)))

(insn 37 36 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13817 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 38 37 42 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 42 38 44 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 143 [ D.13797 ])
        (mem/v:SI (reg/f:SI 135 [ D.13817 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.13817 ])
        (nil)))

(insn 44 42 45 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 143 [ D.13797 ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 143 [ D.13797 ])
        (nil)))

(jump_insn 45 44 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 46 45 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 47 46 48 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 47 49 4 50 "" [1 uses])

(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 4 NOTE_INSN_DELETED)

(insn 51 50 52 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 134 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 52 51 53 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 166
;; live  kill	 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 166)
        (and:SI (reg:SI 133 [ D.13829 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.13829 ])
        (nil)))

(insn 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 166)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 56 55 57 6 51 "" [1 uses])

(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 6 NOTE_INSN_DELETED)

(insn 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 134 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 134 [ __tlb_flag ])
        (nil)))

(jump_insn 60 59 61 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  7 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 168
;; live  kill	 24 [cc]

;; Pred edge  6 [61.0%]  (fallthru)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 168)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 168)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [39.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 64 63 65 8 52 "" [1 uses])

(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 76 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 76 66 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function on_each_cpu_mask.clone.0 (on_each_cpu_mask.clone.0)[0:758]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)


on_each_cpu_mask.clone.0

Dataflow summary:
def_info->table_size = 390, use_info->table_size = 75
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,3u} r1={5d,2u} r2={5d,2u} r3={5d,1u} r11={1d,6u} r12={4d} r13={1d,11u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,2u} r25={1d,6u} r26={1d,5u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,4u,1d} r134={2d,4u} r137={1d,1u} r139={2d,4u} r142={1d,1u} r144={1d,2u} r145={1d,2u} r146={1d,2u} r148={1d,1u} r149={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r161={1d,1u} r162={1d,1u} 
;;    total ref usage 456{387d,68u,1e} in 36{33 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d15(2){ }d20(3){ }d21(11){ }d25(12){ }d26(13){ }d29(14){ }d63(25){ }d64(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 137 144 145 146 148 149 153 154 155 157 158
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 133 134 137 144 145 146 148 149 153 154 155 157 158
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 142 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 142 161 162
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 5 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u71(11){ }u72(13){ }u73(14){ }u74(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 31 to worklist
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 39 to worklist
  Adding insn 56 to worklist
  Adding insn 53 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 42 to worklist
  Adding insn 58 to worklist
Finished finding needed instructions:
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 55 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 38 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;;   ======================================================
;;   -- basic block 2 from 2 to 36 -- before reload
;;   ======================================================

;;	  0-->    71 r134=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->     2 r144=r0                           :cortex_a8_default
;;	  1-->    72 r134=r134&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->     3 r145=r1                           :cortex_a8_default
;;	  2-->     4 r146=r2                           :cortex_a8_default
;;	  3-->    11 r148=[r134+0x4]                   :cortex_a8_load_store_1
;;	  5-->    12 r149=r148+0x1                     :cortex_a8_default
;;	  5-->    13 [r134+0x4]=r149                   :cortex_a8_load_store_1
;;	  6-->    14 {asm_operands;clobber [scratch];} :nothing
;;	  7-->    18 r3=0x1                            :cortex_a8_default
;;	  7-->    15 r0=r146                           :cortex_a8_default
;;	  8-->    16 r1=r144                           :cortex_a8_default
;;	  8-->    17 r2=r145                           :cortex_a8_default
;;	  9-->    19 call [`smp_call_function_many']   :cortex_a8_issue_branch
;;	  9-->    23 r133=[r134+0x14]                  :cortex_a8_load_store_1
;;	 11-->    25 r154=r133+0x1f                    :cortex_a8_default
;;	 11-->    32 r157=r133&0x1f                    :cortex_a8_default
;;	 12-->    27 {r153={(r133>=0x0)?r133:r154};clob:cortex_a8_default
;;	 14-->    28 r155=r153>>0x5                    :cortex_a8_default
;;	 16-->    31 r137=[r155*0x4+r146]              :cortex_a8_load_store_1
;;	 19-->    33 r158=r137 0>>r157                 :cortex_a8_default
;;	 20-->    35 cc=cmp(zxt(r158,0x1,0x0),0x0)     :cortex_a8_default
;;	 22-->    36 pc={(cc==0x0)?L40:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 22
;;   new head = 2
;;   new tail = 36

;;   ======================================================
;;   -- basic block 3 from 38 to 39 -- before reload
;;   ======================================================

;;	  0-->    38 r0=r145                           :cortex_a8_default
;;	  1-->    39 call [r144]                       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 38
;;   new tail = 39

;;   ======================================================
;;   -- basic block 4 from 42 to 56 -- before reload
;;   ======================================================

;;	  0-->    42 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    69 r139=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  2-->    70 r139=r139&0xffffffffffffffc0      :cortex_a8_default
;;	  4-->    46 r161=[r139+0x4]                   :cortex_a8_load_store_1
;;	  6-->    47 r162=r161-0x1                     :cortex_a8_default
;;	  6-->    48 [r139+0x4]=r162                   :cortex_a8_load_store_1
;;	  7-->    49 {asm_operands;clobber [scratch];} :nothing
;;	  8-->    53 r142=[r139]                       :cortex_a8_load_store_1
;;	 10-->    55 cc=cmp(zxt(r142,0x1,0x1),0x0)     :cortex_a8_default
;;	 12-->    56 pc={(cc==0x0)?L65:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 12
;;   new head = 42
;;   new tail = 56

;;   ======================================================
;;   -- basic block 5 from 58 to 58 -- before reload
;;   ======================================================

;;	  0-->    58 call [`preempt_schedule']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 58
;;   new tail = 58


;; Procedure interblock/speculative motions == 0/0 




on_each_cpu_mask.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,3u} r1={5d,2u} r2={5d,2u} r3={5d,1u} r11={1d,6u} r12={4d} r13={1d,11u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,2u} r25={1d,6u} r26={1d,5u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,4u,1d} r134={2d,4u} r137={1d,1u} r139={2d,4u} r142={1d,1u} r144={1d,2u} r145={1d,2u} r146={1d,2u} r148={1d,1u} r149={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r161={1d,1u} r162={1d,1u} 
;;    total ref usage 456{387d,68u,1e} in 36{33 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 137 144 145 146 148 149 153 154 155 157 158
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 133 134 137 144 145 146 148 149 153 154 155 157 158
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 26 2 NOTE_INSN_DELETED)

(note 26 9 34 2 NOTE_INSN_DELETED)

(note 34 26 71 2 NOTE_INSN_DELETED)

(insn 71 34 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 134 [ D.13871 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 71 72 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 144 [ func ])
        (reg:SI 0 r0 [ func ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ func ])
        (nil)))

(insn 72 2 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 134 [ D.13871 ])
        (and:SI (reg/f:SI 134 [ D.13871 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 72 4 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 145 [ info ])
        (reg:SI 1 r1 [ info ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ info ])
        (nil)))

(insn 4 3 11 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 146 [ mask ])
        (reg:SI 2 r2 [ mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ mask ])
        (nil)))

(insn 11 4 12 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 148 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 134 [ D.13871 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 149)
        (plus:SI (reg:SI 148 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.preempt_count ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/smp_tlb.c:19 (set (mem/s/j:SI (plus:SI (reg/f:SI 134 [ D.13871 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 14 13 18 2 arch/arm/kernel/smp_tlb.c:19 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180162)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 18 14 15 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 15 18 16 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 0 r0)
        (reg/v/f:SI 146 [ mask ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ func ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 19 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 2 r2)
        (reg/v/f:SI 145 [ info ])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 17 23 2 arch/arm/kernel/smp_tlb.c:21 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_call_function_many") [flags 0x41] <function_decl 0x10b23100 smp_call_function_many>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 23 19 25 2 arch/arm/kernel/smp_tlb.c:22 (set (reg:SI 133 [ D.13877 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 134 [ D.13871 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134 [ D.13871 ])
        (nil)))

(insn 25 23 32 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 154)
        (plus:SI (reg:SI 133 [ D.13877 ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 32 25 27 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 157)
        (and:SI (reg:SI 133 [ D.13877 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.13877 ])
        (nil)))

(insn 27 32 28 2 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 153 [ D.13877 ])
                (if_then_else:SI (ge (reg:SI 133 [ D.13877 ])
                        (const_int 0 [0x0]))
                    (reg:SI 133 [ D.13877 ])
                    (reg:SI 154)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 28 27 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 155)
        (ashiftrt:SI (reg:SI 153 [ D.13877 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 153 [ D.13877 ])
        (expr_list:REG_EQUAL (div:SI (reg:SI 133 [ D.13877 ])
                (const_int 32 [0x20]))
            (nil))))

(insn 31 28 33 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 137 [ D.13860 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 155)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 146 [ mask ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg/v/f:SI 146 [ mask ])
            (nil))))

(insn 33 31 35 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 158)
        (lshiftrt:SI (reg:SI 137 [ D.13860 ])
            (reg:SI 157))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg:SI 137 [ D.13860 ])
            (nil))))

(insn 35 33 36 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 158)
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(jump_insn 36 35 37 2 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/kernel/smp_tlb.c:23 (set (reg:SI 0 r0)
        (reg/v/f:SI 145 [ info ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ info ])
        (nil)))

(call_insn 39 38 40 3 arch/arm/kernel/smp_tlb.c:23 (parallel [
            (call (mem:SI (reg/v/f:SI 144 [ func ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/v/f:SI 144 [ func ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 142 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 142 161 162
;; live  kill	

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 40 39 41 4 57 "" [1 uses])

(note 41 40 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 44 41 54 4 NOTE_INSN_DELETED)

(note 54 44 42 4 NOTE_INSN_DELETED)

(insn 42 54 69 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 69 42 70 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 139 [ D.13855 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 70 69 46 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 139 [ D.13855 ])
        (and:SI (reg/f:SI 139 [ D.13855 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 46 70 47 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 161 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.13855 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 162)
        (plus:SI (reg:SI 161 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.preempt_count ])
        (nil)))

(insn 48 47 49 4 arch/arm/kernel/smp_tlb.c:25 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.13855 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 162)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 49 48 53 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 53 49 55 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 142 [ D.13847 ])
        (mem/v:SI (reg/f:SI 139 [ D.13855 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ D.13855 ])
        (nil)))

(insn 55 53 56 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 142 [ D.13847 ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 142 [ D.13847 ])
        (nil)))

(jump_insn 56 55 57 4 arch/arm/kernel/smp_tlb.c:25 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 58 57 59 5 arch/arm/kernel/smp_tlb.c:25 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 59 58 65)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 65 59 68 6 59 "" [1 uses])

(note 68 65 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 73 68 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_mm (flush_tlb_mm)[0:753]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 21 (  1.8)


flush_tlb_mm

Dataflow summary:
def_info->table_size = 283, use_info->table_size = 97
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,2u} r2={4d,1u} r3={3d} r11={1d,11u} r12={3d} r13={1d,14u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={11d,5u} r25={1d,11u} r26={1d,10u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,2u} r135={2d,7u} r138={1d} r143={1d,1u} r145={1d,1u} r146={1d,3u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r161={1d,3u,1d} r162={1d,1u} r163={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r172={1d,1u} r174={1d,1u} 
;;    total ref usage 368{278d,89u,1e} in 47{45 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d21(14){ }d51(25){ }d52(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 147 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 146 147 148
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 24 [cc] 145 150
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 3 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 133 134 135 138 143 153 155 156 157 161 162 163 164 167 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 24 [cc] 133 134 135 138 143 153 155 156 157 161 162 163 164 167 168
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 172
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 172
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134

( 7 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 174
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 9 10 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u93(11){ }u94(13){ }u95(14){ }u96(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 29 to worklist
  Adding insn 66 to worklist
  Adding insn 71 to worklist
  Adding insn 74 to worklist
  Adding insn 79 to worklist
  Adding insn 82 to worklist
  Adding insn 85 to worklist
Finished finding needed instructions:
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 81 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 78 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 73 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 70 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 63 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 2 to 9 -- before reload
;;   ======================================================

;;	  0-->     6 r147=`smp_on_up'                  :cortex_a8_load_store_1
;;	  0-->     2 r146=r0                           :cortex_a8_default
;;	  3-->     7 r148=[r147]                       :cortex_a8_load_store_1
;;	  5-->     8 cc=cmp(r148,0x0)                  :cortex_a8_default
;;	  7-->     9 pc={(cc==0x0)?L24:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 11 to 15 -- before reload
;;   ======================================================

;;	  0-->    11 {r145=asm_operands;clobber cc;}   :nothing
;;	  1-->    13 r150=zxt(r145,0x4,0xc)            :cortex_a8_default
;;	  2-->    14 cc=cmp(r150,0x1)                  :cortex_a8_default
;;	  4-->    15 pc={(gtu(cc,0x0))?L24:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 11
;;   new tail = 15

;;   ======================================================
;;   -- basic block 4 from 19 to 22 -- before reload
;;   ======================================================

;;	  0-->    20 r1=r146                           :cortex_a8_default
;;	  0-->    19 r0=`ipi_flush_tlb_mm'             :cortex_a8_load_store_1
;;	  1-->    21 r2=r1+0x15c                       :cortex_a8_default
;;	  2-->    22 call [`on_each_cpu_mask.clone.0'] :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 19
;;   new tail = 22

;;   ======================================================
;;   -- basic block 5 from 26 to 64 -- before reload
;;   ======================================================

;;	  0-->    27 r153=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  1-->    26 r133=[r146+0x160]                 :cortex_a8_load_store_1
;;	  3-->    28 r134=[r153+0x8]                   :cortex_a8_load_store_1
;;	  4-->    29 {asm_operands;clobber [scratch];} :nothing
;;	  5-->    94 r135=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  6-->    95 r135=r135&0xffffffffffffffc0      :cortex_a8_default
;;	  8-->    33 r155=[r135+0x4]                   :cortex_a8_load_store_1
;;	 10-->    34 r156=r155+0x1                     :cortex_a8_default
;;	 10-->    35 [r135+0x4]=r156                   :cortex_a8_load_store_1
;;	 11-->    36 {asm_operands;clobber [scratch];} :nothing
;;	 12-->    41 r161=[r135+0x14]                  :cortex_a8_load_store_1
;;	 12-->    38 r157=r146+0x15c                   :cortex_a8_default
;;	 14-->    43 r163=r161+0x1f                    :cortex_a8_default
;;	 15-->    45 {r162={(r161>=0x0)?r161:r163};clob:cortex_a8_default
;;	 17-->    46 r164=r162>>0x5                    :cortex_a8_default
;;	 19-->    49 r138=[r164*0x4+r157]              :cortex_a8_load_store_1
;;	 20-->    50 {asm_operands;clobber [scratch];} :nothing
;;	 21-->    54 r167=[r135+0x4]                   :cortex_a8_load_store_1
;;	 23-->    55 r168=r167-0x1                     :cortex_a8_default
;;	 23-->    56 [r135+0x4]=r168                   :cortex_a8_load_store_1
;;	 24-->    57 {asm_operands;clobber [scratch];} :nothing
;;	 25-->    61 r143=[r135]                       :cortex_a8_load_store_1
;;	 27-->    63 cc=cmp(zxt(r143,0x1,0x1),0x0)     :cortex_a8_default
;;	 29-->    64 pc={(cc==0x0)?L67:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 29
;;   new head = 26
;;   new tail = 64

;;   ======================================================
;;   -- basic block 6 from 66 to 66 -- before reload
;;   ======================================================

;;	  0-->    66 call [`preempt_schedule']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 66
;;   new tail = 66

;;   ======================================================
;;   -- basic block 7 from 70 to 71 -- before reload
;;   ======================================================

;;	  0-->    70 cc=cmp(zxt(r134,0x1,0x10),0x0)    :cortex_a8_default
;;	  2-->    71 pc={(cc==0x0)?L75:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 70
;;   new tail = 71

;;   ======================================================
;;   -- basic block 8 from 73 to 74 -- before reload
;;   ======================================================

;;	  0-->    73 r172=r133&0xff                    :cortex_a8_default
;;	  1-->    74 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 73
;;   new tail = 74

;;   ======================================================
;;   -- basic block 9 from 78 to 79 -- before reload
;;   ======================================================

;;	  0-->    78 cc=cmp(zxt(r134,0x1,0x15),0x0)    :cortex_a8_default
;;	  2-->    79 pc={(cc==0x0)?L83:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 78
;;   new tail = 79

;;   ======================================================
;;   -- basic block 10 from 81 to 82 -- before reload
;;   ======================================================

;;	  0-->    81 r174=0x0                          :cortex_a8_default
;;	  1-->    82 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 81
;;   new tail = 82

;;   ======================================================
;;   -- basic block 11 from 85 to 85 -- before reload
;;   ======================================================

;;	  0-->    85 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 85
;;   new tail = 85


;; Procedure interblock/speculative motions == 0/0 




flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,2u} r2={4d,1u} r3={3d} r11={1d,11u} r12={3d} r13={1d,14u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={11d,5u} r25={1d,11u} r26={1d,10u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,2u} r135={2d,7u} r138={1d} r143={1d,1u} r145={1d,1u} r146={1d,3u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r161={1d,3u,1d} r162={1d,1u} r163={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r172={1d,1u} r174={1d,1u} 
;;    total ref usage 368{278d,89u,1e} in 47{45 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 147 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 146 147 148
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 147)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 2 6 7 2 arch/arm/kernel/smp_tlb.c:88 (set (reg/v/f:SI 146 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(insn 7 2 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 148 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 147) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
            (nil))))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ smp_on_up ])
        (nil)))

(jump_insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 24 [cc] 145 150
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn 11 12 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 145 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 13 11 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 150)
        (zero_extract:SI (reg/v:SI 145 [ __val ])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 145 [ __val ])
        (nil)))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 16 20 4 NOTE_INSN_DELETED)

(insn 20 18 19 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ mm ])
        (nil)))

(insn 19 20 21 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)
        (nil)))

(insn 21 19 22 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 1 r1)
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(call_insn/j 22 21 23 4 arch/arm/kernel/smp_tlb.c:90 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 23 22 24)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 133 134 135 138 143 153 155 156 157 161 162 163 164 167 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 24 [cc] 133 134 135 138 143 153 155 156 157 161 162 163 164 167 168
;; live  kill	 24 [cc]

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 24 23 25 5 61 "" [2 uses])

(note 25 24 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 25 44 5 NOTE_INSN_DELETED)

(note 44 31 62 5 NOTE_INSN_DELETED)

(note 62 44 27 5 NOTE_INSN_DELETED)

(insn 27 62 26 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 153)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 26 27 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 133 [ D.13780 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ mm ])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 26 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 134 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 153)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 29 28 94 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 94 29 95 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 135 [ D.13768 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 95 94 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 135 [ D.13768 ])
        (and:SI (reg/f:SI 135 [ D.13768 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 95 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 155 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13768 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 156)
        (plus:SI (reg:SI 155 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 155 [ <variable>.preempt_count ])
        (nil)))

(insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13768 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 36 35 41 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 41 36 38 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 161 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13768 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 41 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 157)
        (plus:SI (reg/v/f:SI 146 [ mm ])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 146 [ mm ])
        (nil)))

(insn 43 38 45 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 163)
        (plus:SI (reg:SI 161 [ <variable>.cpu ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 45 43 46 5 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 162 [ <variable>.cpu ])
                (if_then_else:SI (ge (reg:SI 161 [ <variable>.cpu ])
                        (const_int 0 [0x0]))
                    (reg:SI 161 [ <variable>.cpu ])
                    (reg:SI 163)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 161 [ <variable>.cpu ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 46 45 49 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 164)
        (ashiftrt:SI (reg:SI 162 [ <variable>.cpu ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162 [ <variable>.cpu ])
        (expr_list:REG_EQUAL (div:SI (reg:SI 161 [ <variable>.cpu ])
                (const_int 32 [0x20]))
            (nil))))

(insn 49 46 50 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.13761 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 164)
                    (const_int 4 [0x4]))
                (reg/f:SI 157)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_DEAD (reg/f:SI 157)
            (expr_list:REG_UNUSED (reg:SI 138 [ D.13761 ])
                (nil)))))

(insn 50 49 54 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 54 50 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 167 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13768 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 168)
        (plus:SI (reg:SI 167 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 167 [ <variable>.preempt_count ])
        (nil)))

(insn 56 55 57 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.13768 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 57 56 61 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 61 57 63 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 143 [ D.13748 ])
        (mem/v:SI (reg/f:SI 135 [ D.13768 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.13768 ])
        (nil)))

(insn 63 61 64 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 143 [ D.13748 ])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 143 [ D.13748 ])
        (nil)))

(jump_insn 64 63 65 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 66 65 67 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 67 66 68 7 62 "" [1 uses])

(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 69 68 70 7 NOTE_INSN_DELETED)

(insn 70 69 71 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 134 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 71 70 72 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 172
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 172
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 172)
        (and:SI (reg:SI 133 [ D.13780 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.13780 ])
        (nil)))

(insn 74 73 75 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 172)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 75 74 76 9 63 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 77 76 78 9 NOTE_INSN_DELETED)

(insn 78 77 79 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 134 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 134 [ __tlb_flag ])
        (nil)))

(jump_insn 79 78 80 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 174
;; live  kill	 24 [cc]

;; Pred edge  9 [50.0%]  (fallthru)
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 174)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 174)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 174)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 83 82 84 11 64 "" [1 uses])

(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 96 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 96 85 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_page (flush_tlb_page)[0:754]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)


flush_tlb_page

Dataflow summary:
def_info->table_size = 169, use_info->table_size = 98
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,10u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,4u} r25={1d,13u} r26={1d,9u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r135={1d} r137={1d,2u} r138={1d,1u} r139={1d,4u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r148={1d,1u} r149={1d,1u} r150={2d,2u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={2d,2u} r160={1d,3u,1d} r161={1d,1u} r162={1d,1u} r163={1d,1u} r167={2d,2u} 
;;    total ref usage 250{163d,86u,1e} in 44{43 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d35(25){ }d36(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 24 [cc] 138 144
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 148
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 3 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 133 135 137 149 150 152 153 155 156 157 160 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 24 [cc] 133 135 137 149 150 152 153 155 156 157 160 161 162 163
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 167
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 9 4 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u94(11){ }u95(13){ }u96(14){ }u97(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 16 to worklist
  Adding insn 81 to worklist
  Adding insn 27 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 57 to worklist
  Adding insn 54 to worklist
  Adding insn 40 to worklist
  Adding insn 59 to worklist
  Adding insn 64 to worklist
  Adding insn 68 to worklist
  Adding insn 71 to worklist
Finished finding needed instructions:
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 84 to worklist
  Adding insn 83 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
  Adding insn 63 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
  Adding insn 56 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 2 to 10 -- before reload
;;   ======================================================

;;	  0-->     7 r141=`smp_on_up'                  :cortex_a8_load_store_1
;;	  0-->     2 r139=r0                           :cortex_a8_default
;;	  1-->     3 r140=r1                           :cortex_a8_default
;;	  3-->     8 r142=[r141]                       :cortex_a8_load_store_1
;;	  5-->     9 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  7-->    10 pc={(cc==0x0)?L30:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 10

;;   ======================================================
;;   -- basic block 3 from 12 to 16 -- before reload
;;   ======================================================

;;	  0-->    12 {r138=asm_operands;clobber cc;}   :nothing
;;	  1-->    14 r144=zxt(r138,0x4,0xc)            :cortex_a8_default
;;	  2-->    15 cc=cmp(r144,0x1)                  :cortex_a8_default
;;	  4-->    16 pc={(gtu(cc,0x0))?L30:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 12
;;   new tail = 16

;;   ======================================================
;;   -- basic block 4 from 18 to 81 -- before reload
;;   ======================================================

;;	  0-->    22 r148=[r139]                       :cortex_a8_load_store_1
;;	  0-->    25 r1=sfp-0xc                        :cortex_a8_default
;;	  1-->    24 r0=`ipi_flush_tlb_page'           :cortex_a8_load_store_1
;;	  2-->    26 r2=r148+0x15c                     :cortex_a8_default
;;	  2-->    19 [sfp-0x8]=r140                    :cortex_a8_load_store_1
;;	  3-->    18 [sfp-0xc]=r139                    :cortex_a8_load_store_1
;;	  3-->    27 call [`on_each_cpu_mask.clone.0'] :cortex_a8_issue_branch
;;	  4-->    81 pc=L77                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 18
;;   new tail = 81

;;   ======================================================
;;   -- basic block 5 from 32 to 57 -- before reload
;;   ======================================================

;;	  0-->    36 r152=[r139]                       :cortex_a8_load_store_1
;;	  0-->    85 r150=r140&0xfffffffffffff00f      :cortex_a8_default
;;	  1-->    32 r149=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  1-->    86 r150=r150&0xfffffffffffffff0      :cortex_a8_default
;;	  3-->    38 r153=zxn([r152+0x160])            :cortex_a8_load_store_1
;;	  4-->    33 r133=[r149+0x8]                   :cortex_a8_load_store_1
;;	  5-->    39 r137=r150|r153                    :cortex_a8_default
;;	  6-->    40 {asm_operands;clobber [scratch];} :nothing
;;	  7-->    87 r157=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  7-->    42 r156=[r139]                       :cortex_a8_load_store_1
;;	  8-->    88 r157=r157&0xffffffffffffffc0      :cortex_a8_default
;;	  9-->    43 r155=r156+0x15c                   :cortex_a8_default
;;	 10-->    46 r160=[r157+0x14]                  :cortex_a8_load_store_1
;;	 12-->    48 r162=r160+0x1f                    :cortex_a8_default
;;	 13-->    50 {r161={(r160>=0x0)?r160:r162};clob:cortex_a8_default
;;	 13-->    56 cc=cmp(zxt(r133,0x1,0x4),0x0)     :cortex_a8_default
;;	 15-->    51 r163=r161>>0x5                    :cortex_a8_default
;;	 17-->    54 r135=[r163*0x4+r155]              :cortex_a8_load_store_1
;;	 17-->    57 pc={(cc==0x0)?L60:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 17
;;   new head = 32
;;   new tail = 57

;;   ======================================================
;;   -- basic block 6 from 59 to 59 -- before reload
;;   ======================================================

;;	  0-->    59 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 59
;;   new tail = 59

;;   ======================================================
;;   -- basic block 7 from 63 to 64 -- before reload
;;   ======================================================

;;	  0-->    63 cc=cmp(zxt(r133,0x1,0x13),0x0)    :cortex_a8_default
;;	  2-->    64 pc={(cc==0x0)?L69:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 63
;;   new tail = 64

;;   ======================================================
;;   -- basic block 8 from 83 to 68 -- before reload
;;   ======================================================

;;	  0-->    83 r167=r137&0xfffffffffffff00f      :cortex_a8_default
;;	  1-->    84 r167=r167&0xfffffffffffffff0      :cortex_a8_default
;;	  2-->    68 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 83
;;   new tail = 68

;;   ======================================================
;;   -- basic block 9 from 71 to 71 -- before reload
;;   ======================================================

;;	  0-->    71 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 71
;;   new tail = 71


;; Procedure interblock/speculative motions == 0/0 




flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,10u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,4u} r25={1d,13u} r26={1d,9u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r135={1d} r137={1d,2u} r138={1d,1u} r139={1d,4u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r148={1d,1u} r149={1d,1u} r150={2d,2u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={2d,2u} r160={1d,3u,1d} r161={1d,1u} r162={1d,1u} r163={1d,1u} r167={2d,2u} 
;;    total ref usage 250{163d,86u,1e} in 44{43 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 141)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 2 7 3 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v/f:SI 139 [ vma ])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vma ])
        (nil)))

(insn 3 2 8 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v:SI 140 [ uaddr ])
        (reg:SI 1 r1 [ uaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ uaddr ])
        (nil)))

(insn 8 3 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 142 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 141) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
            (nil))))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ smp_on_up ])
        (nil)))

(jump_insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 24 [cc] 138 144
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn 12 13 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 138 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 14 12 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 144)
        (zero_extract:SI (reg/v:SI 138 [ __val ])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 138 [ __val ])
        (nil)))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 148
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(note 23 21 22 4 NOTE_INSN_DELETED)

(insn 22 23 25 4 arch/arm/kernel/smp_tlb.c:101 (set (reg/f:SI 148 [ <variable>.vm_mm ])
        (mem/s/f/j:SI (reg/v/f:SI 139 [ vma ]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ vma ])
        (nil)))

(insn 25 22 24 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 24 25 26 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)
        (nil)))

(insn 26 24 19 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 148 [ <variable>.vm_mm ])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 148 [ <variable>.vm_mm ])
        (nil)))

(insn 19 26 18 4 arch/arm/kernel/smp_tlb.c:100 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 140 [ uaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ uaddr ])
        (nil)))

(insn 18 19 27 4 arch/arm/kernel/smp_tlb.c:99 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 139 [ vma ])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 18 81 4 arch/arm/kernel/smp_tlb.c:101 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 81 27 82 4 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%] 

(barrier 82 81 30)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 133 135 137 149 150 152 153 155 156 157 160 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140
;; live  gen 	 24 [cc] 133 135 137 149 150 152 153 155 156 157 160 161 162 163
;; live  kill	 24 [cc]

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 30 82 31 5 69 "" [2 uses])

(note 31 30 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 34 31 37 5 NOTE_INSN_DELETED)

(note 37 34 44 5 NOTE_INSN_DELETED)

(note 44 37 49 5 NOTE_INSN_DELETED)

(note 49 44 55 5 NOTE_INSN_DELETED)

(note 55 49 36 5 NOTE_INSN_DELETED)

(insn 36 55 85 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 152 [ <variable>.vm_mm ])
        (mem/s/f/j:SI (reg/v/f:SI 139 [ vma ]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 85 36 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 150)
        (and:SI (reg/v:SI 140 [ uaddr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ uaddr ])
        (nil)))

(insn 32 85 86 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 149)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 86 32 38 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 150)
        (and:SI (reg:SI 150)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 86 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 153)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 152 [ <variable>.vm_mm ])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 152 [ <variable>.vm_mm ])
        (nil)))

(insn 33 38 39 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 149)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 39 33 40 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 137 [ uaddr ])
        (ior:SI (reg:SI 150)
            (reg:SI 153))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_DEAD (reg:SI 150)
            (nil))))

(insn 40 39 87 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 87 40 42 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 157)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 42 87 88 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 156 [ <variable>.vm_mm ])
        (mem/s/f/j:SI (reg/v/f:SI 139 [ vma ]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ vma ])
        (nil)))

(insn 88 42 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 157)
        (and:SI (reg:SI 157)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 88 46 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 155)
        (plus:SI (reg/f:SI 156 [ <variable>.vm_mm ])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 156 [ <variable>.vm_mm ])
        (nil)))

(insn 46 43 48 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 160 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 157)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 48 46 50 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 162)
        (plus:SI (reg:SI 160 [ <variable>.cpu ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 50 48 56 5 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 161 [ <variable>.cpu ])
                (if_then_else:SI (ge (reg:SI 160 [ <variable>.cpu ])
                        (const_int 0 [0x0]))
                    (reg:SI 160 [ <variable>.cpu ])
                    (reg:SI 162)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_DEAD (reg:SI 160 [ <variable>.cpu ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 56 50 51 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 51 56 54 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 163)
        (ashiftrt:SI (reg:SI 161 [ <variable>.cpu ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 161 [ <variable>.cpu ])
        (expr_list:REG_EQUAL (div:SI (reg:SI 160 [ <variable>.cpu ])
                (const_int 32 [0x20]))
            (nil))))

(insn 54 51 57 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 135 [ D.13646 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 163)
                    (const_int 4 [0x4]))
                (reg/f:SI 155)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg/f:SI 155)
            (expr_list:REG_UNUSED (reg:SI 135 [ D.13646 ])
                (nil)))))

(jump_insn 57 54 58 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 137 [ uaddr ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 60 59 61 7 71 "" [1 uses])

(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 62 61 63 7 NOTE_INSN_DELETED)

(insn 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 64 63 65 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 167
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 66 65 83 8 NOTE_INSN_DELETED)

(insn 83 66 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 167)
        (and:SI (reg/v:SI 137 [ uaddr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ uaddr ])
        (nil)))

(insn 84 83 68 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 167)
        (and:SI (reg:SI 167)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 68 84 69 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 167)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 69 68 70 9 72 "" [1 uses])

(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 77 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 77 71 80 10 73 "" [1 uses])

(note 80 77 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 89 80 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_range (flush_tlb_range)[0:756]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 11 -- before reload
;;   ======================================================

;;	  0-->     8 r137=`smp_on_up'                  :cortex_a8_load_store_1
;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  1-->     3 r135=r1                           :cortex_a8_default
;;	  1-->     4 r136=r2                           :cortex_a8_default
;;	  3-->     9 r138=[r137]                       :cortex_a8_load_store_1
;;	  5-->    10 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  7-->    11 pc={(cc==0x0)?L32:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 13 to 17 -- before reload
;;   ======================================================

;;	  0-->    13 {r133=asm_operands;clobber cc;}   :nothing
;;	  1-->    15 r140=zxt(r133,0x4,0xc)            :cortex_a8_default
;;	  2-->    16 cc=cmp(r140,0x1)                  :cortex_a8_default
;;	  4-->    17 pc={(gtu(cc,0x0))?L32:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 13
;;   new tail = 17

;;   ======================================================
;;   -- basic block 4 from 19 to 49 -- before reload
;;   ======================================================

;;	  0-->    24 r144=[r134]                       :cortex_a8_load_store_1
;;	  0-->    27 r1=sfp-0xc                        :cortex_a8_default
;;	  1-->    26 r0=`ipi_flush_tlb_range'          :cortex_a8_load_store_1
;;	  2-->    28 r2=r144+0x15c                     :cortex_a8_default
;;	  2-->    20 [sfp-0x8]=r135                    :cortex_a8_load_store_1
;;	  3-->    21 [sfp-0x4]=r136                    :cortex_a8_load_store_1
;;	  4-->    19 [sfp-0xc]=r134                    :cortex_a8_load_store_1
;;	  4-->    29 call [`on_each_cpu_mask.clone.0'] :cortex_a8_issue_branch
;;	  5-->    49 pc=L45                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 19
;;   new tail = 49

;;   ======================================================
;;   -- basic block 5 from 34 to 39 -- before reload
;;   ======================================================

;;	  0-->    36 r0=r135                           :cortex_a8_default
;;	  0-->    37 r1=r136                           :cortex_a8_default
;;	  1-->    38 r2=r134                           :cortex_a8_default
;;	  1-->    34 r145=`cpu_tlb'                    :cortex_a8_load_store_1
;;	  2-->    39 call [[r145]]                     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 34
;;   new tail = 39


;; Procedure interblock/speculative motions == 0/0 




flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={3d} r11={1d,6u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r25={1d,10u} r26={1d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,3u} r135={1d,2u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r140={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 316{262d,54u,0e} in 25{23 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137 138
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 137)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 2 8 3 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v/f:SI 134 [ vma ])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vma ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 135 [ start ])
        (reg:SI 1 r1 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ start ])
        (nil)))

(insn 4 3 9 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 136 [ end ])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ end ])
        (nil)))

(insn 9 4 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 138 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 137) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
            (nil))))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ smp_on_up ])
        (nil)))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 24 [cc] 133 140
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 12 13 3 NOTE_INSN_DELETED)

(insn 13 14 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 133 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 15 13 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 140)
        (zero_extract:SI (reg/v:SI 133 [ __val ])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 133 [ __val ])
        (nil)))

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2200 [0x898])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 144
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 23 18 25 4 NOTE_INSN_DELETED)

(note 25 23 24 4 NOTE_INSN_DELETED)

(insn 24 25 27 4 arch/arm/kernel/smp_tlb.c:124 (set (reg/f:SI 144 [ <variable>.vm_mm ])
        (mem/s/f/j:SI (reg/v/f:SI 134 [ vma ]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ vma ])
        (nil)))

(insn 27 24 26 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 26 27 28 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)
        (nil)))

(insn 28 26 20 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 144 [ <variable>.vm_mm ])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 144 [ <variable>.vm_mm ])
        (nil)))

(insn 20 28 21 4 arch/arm/kernel/smp_tlb.c:122 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 135 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ start ])
        (nil)))

(insn 21 20 19 4 arch/arm/kernel/smp_tlb.c:123 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 136 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ end ])
        (nil)))

(insn 19 21 29 4 arch/arm/kernel/smp_tlb.c:121 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 134 [ vma ])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 19 49 4 arch/arm/kernel/smp_tlb.c:124 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 49 29 50 4 (set (pc)
        (label_ref 45)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%] 

(barrier 50 49 32)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 145
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 32 50 33 5 77 "" [2 uses])

(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 35 33 36 5 NOTE_INSN_DELETED)

(insn 36 35 37 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ start ])
        (nil)))

(insn 37 36 38 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ end ])
        (nil)))

(insn 38 37 34 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ vma ])
        (nil)))

(insn 34 38 39 5 arch/arm/kernel/smp_tlb.c:126 (set (reg/f:SI 145)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(call_insn 39 34 45 5 arch/arm/kernel/smp_tlb.c:126 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 145) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 45 39 48 6 79 "" [1 uses])

(note 48 45 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 51 48 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
