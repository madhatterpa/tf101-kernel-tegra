
;; Function save_trace (save_trace)[0:792]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a4(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a4(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 57(l0): point = 0
   Insn 51(l0): point = 2
   Insn 43(l0): point = 5
   Insn 40(l0): point = 7
   Insn 41(l0): point = 9
   Insn 38(l0): point = 11
   Insn 39(l0): point = 13
   Insn 37(l0): point = 15
   Insn 36(l0): point = 17
   Insn 82(l0): point = 20
   Insn 31(l0): point = 22
   Insn 30(l0): point = 24
   Insn 29(l0): point = 26
   Insn 27(l0): point = 29
   Insn 26(l0): point = 31
   Insn 25(l0): point = 33
   Insn 80(l0): point = 36
   Insn 20(l0): point = 38
   Insn 18(l0): point = 41
   Insn 17(l0): point = 43
   Insn 15(l0): point = 45
   Insn 14(l0): point = 47
   Insn 12(l0): point = 50
   Insn 11(l0): point = 52
   Insn 8(l0): point = 54
   Insn 10(l0): point = 56
   Insn 9(l0): point = 58
   Insn 3(l0): point = 60
 a0(r139): [36..38] [20..22] [3..5]
 a1(r147): [6..9]
 a2(r136): [6..13]
 a3(r134): [41..54] [29..35] [8..19]
 a4(r146): [12..15]
 a5(r137): [12..17]
 a6(r133): [41..58] [29..35] [12..19]
 a7(r143): [41..60] [25..35]
 a8(r145): [25..26]
 a9(r138): [27..33]
 a10(r144): [53..56]
Compressing live ranges: from 63 to 26 - 41%
Ranges after the compression:
 a0(r139): [18..19] [10..11] [0..1]
 a1(r147): [2..4]
 a2(r136): [2..6]
 a3(r134): [20..22] [15..17] [3..9]
 a4(r146): [5..7]
 a5(r137): [5..8]
 a6(r133): [20..24] [15..17] [5..9]
 a7(r143): [20..25] [12..17]
 a8(r145): [12..13]
 a9(r138): [14..16]
 a10(r144): [21..23]
+++Allocating 88 bytes for conflict table (uncompressed size 88)
;; a0(r139,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r147,l0) conflicts: a2(r136,l0) a3(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r136,l0) conflicts: a1(r147,l0) a3(r134,l0) a4(r146,l0) a5(r137,l0) a6(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r134,l0) conflicts: a1(r147,l0) a2(r136,l0) a4(r146,l0) a5(r137,l0) a6(r133,l0) a7(r143,l0) a9(r138,l0) a10(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r146,l0) conflicts: a2(r136,l0) a3(r134,l0) a5(r137,l0) a6(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r137,l0) conflicts: a2(r136,l0) a3(r134,l0) a4(r146,l0) a6(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r133,l0) conflicts: a2(r136,l0) a3(r134,l0) a4(r146,l0) a5(r137,l0) a7(r143,l0) a9(r138,l0) a10(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a7(r143,l0) conflicts: a3(r134,l0) a6(r133,l0) a8(r145,l0) a9(r138,l0) a10(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a8(r145,l0) conflicts: a7(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r138,l0) conflicts: a3(r134,l0) a6(r133,l0) a7(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r144,l0) conflicts: a3(r134,l0) a6(r133,l0) a7(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r139)<->a2(r136)@125:shuffle
  cp1:a0(r139)<->a1(r147)@125:shuffle
  cp2:a8(r145)<->a9(r138)@125:shuffle
  regions=1, blocks=9, points=26
    allocnos=11, copies=3, conflicts=1, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r139 1r147 2r136 3r134 4r146 5r137 6r133 7r143 8r145 9r138 10r144
    modified regnos: 133 134 136 137 138 139 143 144 145 146 147
    border:
    Pressure: GENERAL_REGS=6
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
      Pushing a10(r144,l0)
      Pushing a8(r145,l0)
      Pushing a4(r146,l0)
      Pushing a1(r147,l0)
      Pushing a9(r138,l0)
      Pushing a5(r137,l0)
      Pushing a2(r136,l0)
      Pushing a0(r139,l0)
      Pushing a6(r133,l0)
      Pushing a7(r143,l0)
      Pushing a3(r134,l0)
      Popping a3(r134,l0)  -- assign reg 4
      Popping a7(r143,l0)  -- assign reg 5
      Popping a6(r133,l0)  -- assign reg 6
      Popping a0(r139,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
      Popping a5(r137,l0)  -- assign reg 2
      Popping a9(r138,l0)  -- assign reg 3
      Popping a1(r147,l0)  -- assign reg 0
      Popping a4(r146,l0)  -- assign reg 1
      Popping a8(r145,l0)  -- assign reg 3
      Popping a10(r144,l0)  -- assign reg 3
Disposition:
    6:r133 l0     6    3:r134 l0     4    2:r136 l0     3    5:r137 l0     2
    9:r138 l0     3    0:r139 l0     0    7:r143 l0     5   10:r144 l0     3
    8:r145 l0     3    4:r146 l0     1    1:r147 l0     0
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 13, 14, dead_or_set: 1, 143
insn=9, live_throughout: 13, 14, 143, dead_or_set: 0, 133
insn=10, live_throughout: 13, 14, 133, 143, dead_or_set: 144
insn=8, live_throughout: 13, 14, 133, 143, 144, dead_or_set: 134
insn=11, live_throughout: 13, 14, 133, 134, 143, dead_or_set: 144
insn=12, live_throughout: 13, 14, 133, 134, 143, dead_or_set: 
insn=14, live_throughout: 13, 133, 134, 143, dead_or_set: 0
insn=15, live_throughout: 13, 133, 134, 143, dead_or_set: 0, 14
insn=17, live_throughout: 13, 14, 133, 134, 143, dead_or_set: 0
insn=18, live_throughout: 13, 14, 133, 134, 143, dead_or_set: 
insn=20, live_throughout: 13, 14, dead_or_set: 139
insn=80, live_throughout: 13, 14, 139, dead_or_set: 
insn=23, live_throughout: 13, 14, 133, 134, 143, dead_or_set: 
insn=25, live_throughout: 13, 14, 133, 134, 143, dead_or_set: 138
insn=26, live_throughout: 13, 14, 133, 134, 138, 143, dead_or_set: 
insn=27, live_throughout: 13, 14, 133, 134, 138, 143, dead_or_set: 
insn=29, live_throughout: 13, 14, 143, dead_or_set: 138, 145
insn=30, live_throughout: 13, 14, dead_or_set: 143, 145
insn=31, live_throughout: 13, 14, dead_or_set: 139
insn=82, live_throughout: 13, 14, 139, dead_or_set: 
insn=34, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=36, live_throughout: 13, 14, 133, 134, dead_or_set: 137
insn=37, live_throughout: 13, 14, 133, 134, 137, dead_or_set: 146
insn=39, live_throughout: 13, 14, 133, 134, 137, 146, dead_or_set: 136
insn=38, live_throughout: 13, 14, 134, 136, dead_or_set: 133, 137, 146
insn=41, live_throughout: 13, 14, 134, 136, dead_or_set: 147
insn=40, live_throughout: 13, 14, 136, 147, dead_or_set: 134
insn=43, live_throughout: 13, 14, dead_or_set: 136, 139, 147
insn=45, live_throughout: 13, 14, 139, dead_or_set: 
insn=51, live_throughout: 13, 14, dead_or_set: 0, 139
insn=57, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 36 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 37 (nil))
changing reg in insn 9
changing reg in insn 38
changing reg in insn 14
changing reg in insn 8
changing reg in insn 41
changing reg in insn 40
changing reg in insn 37
changing reg in insn 36
changing reg in insn 37
changing reg in insn 36
changing reg in insn 39
changing reg in insn 43
changing reg in insn 40
changing reg in insn 36
changing reg in insn 39
changing reg in insn 38
changing reg in insn 25
changing reg in insn 29
changing reg in insn 26
changing reg in insn 43
changing reg in insn 31
changing reg in insn 20
changing reg in insn 51
changing reg in insn 3
changing reg in insn 30
changing reg in insn 25
changing reg in insn 10
changing reg in insn 8
changing reg in insn 29
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 29
changing reg in insn 30
changing reg in insn 37
changing reg in insn 38
changing reg in insn 41
changing reg in insn 43
Spilling for insn 30.
Spilling for insn 38.
Spilling for insn 40.

Reloads for insn # 30
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143])
                                                        (const_int 8 [0x8])) [0 <variable>.skip+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143])
                                                        (const_int 8 [0x8])) [0 <variable>.skip+0 S4 A32])

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:137 D.14786 ] [137])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:137 D.14786 ] [137])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])) [0 S4 A32])

Reloads for insn # 40
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134]) [0 <variable>.nr_entries+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134]) [0 <variable>.nr_entries+0 S4 A32])
deleting insn with uid = 51.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


save_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,6u} r1={3d,2u} r2={3d,2u} r3={6d,6u} r4={1d,4u,2d} r5={1d,4u,2d} r6={1d,2u} r12={2d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 185{142d,39u,4e} in 27{26 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 4 2 NOTE_INSN_DELETED)

(note 4 2 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 4 9 2 arch/arm/kernel/stacktrace.c:69 (set (reg/v/f:SI 5 r5 [orig:143 d ] [143])
        (reg:SI 1 r1 [ d ])) 167 {*arm_movsi_insn} (nil))

(insn 9 3 10 2 arch/arm/kernel/stacktrace.c:72 (set (reg/v:SI 6 r6 [orig:133 addr ] [133])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ frame ])
                (const_int 12 [0xc])) [0 <variable>.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 8 2 arch/arm/kernel/stacktrace.c:74 (set (reg:SI 3 r3 [orig:144 <variable>.no_sched_functions ] [144])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143])
                (const_int 4 [0x4])) [0 <variable>.no_sched_functions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143])
                (const_int 4 [0x4])) [0 <variable>.no_sched_functions+0 S4 A32])
        (nil)))

(insn 8 10 11 2 arch/arm/kernel/stacktrace.c:71 (set (reg/v/f:SI 4 r4 [orig:134 trace ] [134])
        (mem/s/f/j:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143]) [0 <variable>.trace+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 8 12 2 arch/arm/kernel/stacktrace.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:144 <variable>.no_sched_functions ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/kernel/stacktrace.c:74 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  5 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 13 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 16 13 14 3 NOTE_INSN_DELETED)

(insn 14 16 15 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:133 addr ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 17 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("in_sched_functions") [flags 0x41] <function_decl 0x10f44c00 in_sched_functions>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 15 18 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 3 arch/arm/kernel/stacktrace.c:74 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [39.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 80 4 arch/arm/kernel/stacktrace.c:75 (set (reg:SI 0 r0 [orig:139 D.14780 ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 80 20 81 4 (set (pc)
        (label_ref 45)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 8)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 81 80 23)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [61.0%] 
(code_label 23 81 24 5 2 "" [2 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/kernel/stacktrace.c:76 (set (reg:SI 3 r3 [orig:138 D.14781 ] [138])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143])
                (const_int 8 [0x8])) [0 <variable>.skip+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/kernel/stacktrace.c:76 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:138 D.14781 ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 28 5 arch/arm/kernel/stacktrace.c:76 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  6 [39.0%]  (fallthru)
;; Succ edge  7 [61.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  5 [39.0%]  (fallthru)
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 6 arch/arm/kernel/stacktrace.c:77 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [orig:138 D.14781 ] [138])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143])
                (const_int 8 [0x8])) [0 <variable>.skip+0 S4 A32])
        (nil)))

(insn 30 29 31 6 arch/arm/kernel/stacktrace.c:77 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 d ] [143])
                (const_int 8 [0x8])) [0 <variable>.skip+0 S4 A32])
        (reg:SI 3 r3 [145])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 82 6 arch/arm/kernel/stacktrace.c:78 (set (reg:SI 0 r0 [orig:139 D.14780 ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 82 31 83 6 arch/arm/kernel/stacktrace.c:78 (set (pc)
        (label_ref 45)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%] 

(barrier 83 82 34)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  5 [61.0%] 
(code_label 34 83 35 7 4 "" [1 uses])

(note 35 34 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 42 35 36 7 NOTE_INSN_DELETED)

(insn 36 42 37 7 arch/arm/kernel/stacktrace.c:81 (set (reg:SI 2 r2 [orig:137 D.14786 ] [137])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134]) [0 <variable>.nr_entries+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134]) [0 <variable>.nr_entries+0 S4 A32])
        (nil)))

(insn 37 36 39 7 arch/arm/kernel/stacktrace.c:81 (set (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])
        (nil)))

(insn 39 37 38 7 arch/arm/kernel/stacktrace.c:81 (set (reg:SI 3 r3 [orig:136 D.14787 ] [136])
        (plus:SI (reg:SI 2 r2 [orig:137 D.14786 ] [137])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 38 39 41 7 arch/arm/kernel/stacktrace.c:81 (set (mem:SI (plus:SI (mult:SI (reg:SI 2 r2 [orig:137 D.14786 ] [137])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])) [0 S4 A32])
        (reg/v:SI 6 r6 [orig:133 addr ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 41 38 40 7 arch/arm/kernel/stacktrace.c:83 (set (reg:SI 0 r0 [orig:147 <variable>.max_entries ] [147])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 41 43 7 arch/arm/kernel/stacktrace.c:81 (set (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:134 trace ] [134]) [0 <variable>.nr_entries+0 S4 A32])
        (reg:SI 3 r3 [orig:136 D.14787 ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 43 40 45 7 arch/arm/kernel/stacktrace.c:83 (parallel [
            (set (reg:SI 0 r0 [orig:139 D.14780 ] [139])
                (geu:SI (reg:SI 3 r3 [orig:136 D.14787 ] [136])
                    (reg:SI 0 r0 [orig:147 <variable>.max_entries ] [147])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 4 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 45 43 46 8 3 "" [2 uses])

(note 46 45 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 46 84 8 arch/arm/kernel/stacktrace.c:84 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 84 57 85 NOTE_INSN_DELETED)

(note 85 84 0 NOTE_INSN_DELETED)


;; Function walk_stackframe (walk_stackframe)[0:791]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a5 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 4(l0): point = 1
   Insn 3(l0): point = 3
   Insn 2(l0): point = 5
   Insn 21(l1): point = 8
   Insn 20(l1): point = 10
   Insn 17(l1): point = 12
   Insn 14(l1): point = 15
   Insn 16(l1): point = 17
   Insn 13(l1): point = 19
   Insn 11(l1): point = 21
   Insn 9(l1): point = 23
   Insn 10(l1): point = 25
 a0(r137): [1..1]
 a1(r136): [1..3]
 a2(r135): [1..5]
 a3(r135): [8..27]
 a4(r136): [8..27]
 a5(r137): [8..27]
Compressing live ranges: from 28 to 5 - 17%
Ranges after the compression:
 a0(r137): [3..4] [0..0]
 a1(r136): [3..4] [0..1]
 a2(r135): [3..4] [0..2]
+++Allocating 24 bytes for conflict table (uncompressed size 48)
;; a0(r137,l0) conflicts: a1(r136,l0) a2(r135,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r136,l0) conflicts: a0(r137,l0) a2(r135,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r135,l0) conflicts: a0(r137,l0) a1(r136,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14

  regions=2, blocks=6, points=5
    allocnos=6, copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r137 1r136 2r135
    modified regnos: 135 136 137
    border:
    Pressure: GENERAL_REGS=6
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 4 regs less
      Pushing a0(r137,l0)
      Pushing a1(r136,l0)
      Pushing a2(r135,l0)
      Popping a2(r135,l0)  -- assign reg 4
      Popping a1(r136,l0)  -- assign reg 5
      Popping a0(r137,l0)  -- assign reg 6
Disposition:
    2:r135 l0     4    1:r136 l0     5    0:r137 l0     6
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, dead_or_set: 0, 135
insn=3, live_throughout: 2, 13, 135, dead_or_set: 1, 136
insn=4, live_throughout: 13, 135, 136, dead_or_set: 2, 137
insn=19, live_throughout: 13, 135, 136, 137, dead_or_set: 
insn=10, live_throughout: 13, 135, 136, 137, dead_or_set: 1
insn=9, live_throughout: 1, 13, 135, 136, 137, dead_or_set: 0
insn=11, live_throughout: 13, 135, 136, 137, dead_or_set: 0, 1, 14
insn=13, live_throughout: 13, 14, 135, 136, 137, dead_or_set: 0
insn=16, live_throughout: 13, 14, 24, 135, 136, 137, dead_or_set: 0
insn=14, live_throughout: 0, 13, 14, 135, 136, 137, dead_or_set: 
insn=17, live_throughout: 13, 135, 136, 137, dead_or_set: 0, 14
insn=20, live_throughout: 13, 14, 135, 136, 137, dead_or_set: 0
insn=21, live_throughout: 13, 14, 135, 136, 137, dead_or_set: 
insn=27, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 16
changing reg in insn 9
changing reg in insn 3
changing reg in insn 11
changing reg in insn 4
changing reg in insn 10


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 11.
deleting insn with uid = 11.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


walk_stackframe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,2u} r2={3d,1u} r3={3d} r4={1d,2u} r5={1d,1u} r6={1d,1u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 271{249d,22u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 6 [r6]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 6 [r6]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/stacktrace.c:48 (set (reg/v/f:SI 4 r4 [orig:135 frame ] [135])
        (reg:SI 0 r0 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/stacktrace.c:48 (set (reg/v/f:SI 5 r5 [orig:136 fn ] [136])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/stacktrace.c:48 (set (reg/v/f:SI 6 r6 [orig:137 data ] [137])
        (reg:SI 2 r2 [ data ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 19 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [86.0%]  (dfs_back)
(code_label 19 5 8 3 10 "" [1 uses])

(note 8 19 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 8 10 3 NOTE_INSN_DELETED)

(insn 10 12 9 3 arch/arm/kernel/stacktrace.c:52 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:137 data ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 9 10 11 3 arch/arm/kernel/stacktrace.c:52 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:135 frame ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 9 13 3 arch/arm/kernel/stacktrace.c:52 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 5 r5 [orig:136 fn ] [136]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 11 16 3 arch/arm/kernel/stacktrace.c:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 16 13 14 3 arch/arm/kernel/stacktrace.c:54 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:135 frame ] [135])) 167 {*arm_movsi_insn} (nil))

(jump_insn 14 16 15 3 arch/arm/kernel/stacktrace.c:52 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [4.5%]  (loop_exit)
;; Succ edge  4 [95.5%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [95.5%]  (fallthru)
(note 15 14 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 15 17 4 NOTE_INSN_DELETED)

(call_insn 17 18 20 4 arch/arm/kernel/stacktrace.c:54 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x10ffbe00 unwind_frame>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 20 17 21 4 arch/arm/kernel/stacktrace.c:55 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 27 4 arch/arm/kernel/stacktrace.c:55 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 4 -> ( 5 3)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [14.0%]  (fallthru,loop_exit)
;; Succ edge  3 [86.0%]  (dfs_back)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [14.0%]  (fallthru,loop_exit)
;; Pred edge  3 [4.5%]  (loop_exit)
(code_label 27 21 30 5 11 "" [1 uses])

(note 30 27 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 30 34 NOTE_INSN_DELETED)

(note 34 33 0 NOTE_INSN_DELETED)


;; Function save_stack_trace_tsk (save_stack_trace_tsk)[0:793]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 73.
verify found no changes in insn with uid = 73.
deleting insn with uid = 31.
scanning new insn with uid = 74.
verify found no changes in insn with uid = 74.
deleting insn with uid = 39.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)

Pass 0 for finding allocno costs

    a1 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:160000
  a1(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:160000
  a1(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 57(l0): point = 1
   Insn 55(l0): point = 3
   Insn 54(l0): point = 5
   Insn 56(l0): point = 7
   Insn 53(l0): point = 9
   Insn 51(l0): point = 12
   Insn 50(l0): point = 14
   Insn 49(l0): point = 16
   Insn 48(l0): point = 18
   Insn 47(l0): point = 20
   Insn 36(l0): point = 22
   Insn 34(l0): point = 24
   Insn 32(l0): point = 26
   Insn 73(l0): point = 28
   Insn 40(l0): point = 30
   Insn 74(l0): point = 32
   Insn 38(l0): point = 34
   Insn 46(l0): point = 36
   Insn 45(l0): point = 38
   Insn 44(l0): point = 40
   Insn 68(l0): point = 43
   Insn 26(l0): point = 45
   Insn 24(l0): point = 47
   Insn 23(l0): point = 49
   Insn 25(l0): point = 51
   Insn 22(l0): point = 53
   Insn 20(l0): point = 56
   Insn 19(l0): point = 58
   Insn 18(l0): point = 60
   Insn 17(l0): point = 62
   Insn 15(l0): point = 65
   Insn 9(l0): point = 67
   Insn 14(l0): point = 69
   Insn 13(l0): point = 71
   Insn 67(l0): point = 73
   Insn 8(l0): point = 75
   Insn 7(l0): point = 77
   Insn 71(l0): point = 79
   Insn 3(l0): point = 81
   Insn 70(l0): point = 83
 a0(r140): [46..81] [2..42]
 a1(r158): [2..7]
 a2(r156): [4..9]
 a3(r133): [4..18]
 a4(r157): [4..5]
 a5(r155): [15..16]
 a6(r149): [27..28]
 a7(r151): [31..32]
 a8(r150): [65..73] [35..42]
 a9(r148): [46..51]
 a10(r146): [48..53]
 a11(r138): [48..62]
 a12(r147): [48..49]
 a13(r145): [59..60]
 a14(r141): [68..75]
 a15(r144): [70..71]
 a16(r142): [72..83]
Compressing live ranges: from 86 to 31 - 36%
Ranges after the compression:
 a0(r140): [14..29] [0..13]
 a1(r158): [0..3]
 a2(r156): [1..4]
 a3(r133): [1..7]
 a4(r157): [1..2]
 a5(r155): [5..6]
 a6(r149): [8..9]
 a7(r151): [10..11]
 a8(r150): [22..27] [12..13]
 a9(r148): [14..17]
 a10(r146): [15..18]
 a11(r138): [15..21]
 a12(r147): [15..16]
 a13(r145): [19..20]
 a14(r141): [23..28]
 a15(r144): [24..25]
 a16(r142): [26..30]
+++Allocating 136 bytes for conflict table (uncompressed size 136)
;; a0(r140,l0) conflicts: a1(r158,l0) a4(r157,l0) a2(r156,l0) a3(r133,l0) a5(r155,l0) a6(r149,l0) a7(r151,l0) a8(r150,l0) a9(r148,l0) a12(r147,l0) a10(r146,l0) a11(r138,l0) a13(r145,l0) a14(r141,l0) a15(r144,l0) a16(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r158,l0) conflicts: a0(r140,l0) a4(r157,l0) a2(r156,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r156,l0) conflicts: a1(r158,l0) a0(r140,l0) a4(r157,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r133,l0) conflicts: a1(r158,l0) a0(r140,l0) a4(r157,l0) a2(r156,l0) a5(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r157,l0) conflicts: a1(r158,l0) a0(r140,l0) a2(r156,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r155,l0) conflicts: a0(r140,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r149,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a7(r151,l0) conflicts: a0(r140,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a8(r150,l0) conflicts: a0(r140,l0) a14(r141,l0) a15(r144,l0) a16(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a9(r148,l0) conflicts: a0(r140,l0) a12(r147,l0) a10(r146,l0) a11(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r146,l0) conflicts: a0(r140,l0) a9(r148,l0) a12(r147,l0) a11(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r138,l0) conflicts: a0(r140,l0) a9(r148,l0) a12(r147,l0) a10(r146,l0) a13(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r147,l0) conflicts: a0(r140,l0) a9(r148,l0) a10(r146,l0) a11(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r145,l0) conflicts: a0(r140,l0) a11(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r141,l0) conflicts: a0(r140,l0) a8(r150,l0) a15(r144,l0) a16(r142,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a15(r144,l0) conflicts: a0(r140,l0) a8(r150,l0) a14(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a16(r142,l0) conflicts: a0(r140,l0) a8(r150,l0) a14(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=1, blocks=8, points=31
    allocnos=17, copies=0, conflicts=2, ranges=19

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r140 1r158 2r156 3r133 4r157 5r155 6r149 7r151 8r150 9r148 10r146 11r138 12r147 13r145 14r141 15r144 16r142
    modified regnos: 133 138 140 141 142 144 145 146 147 148 149 150 151 155 156 157 158
    border:
    Pressure: GENERAL_REGS=6
    Reg 140 of GENERAL_REGS has 5 regs less
    Reg 158 of GENERAL_REGS has 2 regs less
    Reg 156 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 157 of GENERAL_REGS has 2 regs less
    Reg 155 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 4 regs less
    Reg 151 of GENERAL_REGS has 4 regs less
    Reg 150 of GENERAL_REGS has 5 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 146 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 147 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 144 of GENERAL_REGS has 3 regs less
    Reg 142 of GENERAL_REGS has 4 regs less
      Pushing a13(r145,l0)
      Pushing a12(r147,l0)
      Pushing a10(r146,l0)
      Pushing a9(r148,l0)
      Pushing a5(r155,l0)
      Pushing a4(r157,l0)
      Pushing a2(r156,l0)
      Pushing a1(r158,l0)
      Pushing a11(r138,l0)
      Pushing a3(r133,l0)
      Pushing a15(r144,l0)
      Pushing a14(r141,l0)
      Pushing a7(r151,l0)
      Pushing a6(r149,l0)
      Pushing a16(r142,l0)
      Pushing a8(r150,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 4
      Popping a8(r150,l0)  -- assign reg 3
      Popping a16(r142,l0)  -- assign reg 2
      Popping a6(r149,l0)  -- assign reg 3
      Popping a7(r151,l0)  -- assign reg 3
      Popping a14(r141,l0)  -- assign reg 1
      Popping a15(r144,l0)  -- assign reg 2
      Popping a3(r133,l0)  -- assign reg 3
      Popping a11(r138,l0)  -- assign reg 3
      Popping a1(r158,l0)  -- assign reg 2
      Popping a2(r156,l0)  -- assign reg 1
      Popping a4(r157,l0)  -- assign reg 0
      Popping a5(r155,l0)  -- assign reg 2
      Popping a9(r148,l0)  -- assign reg 2
      Popping a10(r146,l0)  -- assign reg 1
      Popping a12(r147,l0)  -- assign reg 0
      Popping a13(r145,l0)  -- assign reg 2
Disposition:
    3:r133 l0     3   11:r138 l0     3    0:r140 l0     4   14:r141 l0     1
   16:r142 l0     2   15:r144 l0     2   13:r145 l0     2   10:r146 l0     1
   12:r147 l0     0    9:r148 l0     2    6:r149 l0     3    8:r150 l0     3
    7:r151 l0     3    5:r155 l0     2    2:r156 l0     1    4:r157 l0     0
    1:r158 l0     2
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=70, live_throughout: 0, 1, 13, 14, dead_or_set: 142
insn=3, live_throughout: 0, 13, 14, 142, dead_or_set: 1, 140
insn=71, live_throughout: 0, 13, 14, 140, dead_or_set: 142
insn=7, live_throughout: 0, 13, 14, 140, 142, dead_or_set: 
insn=8, live_throughout: 0, 13, 14, 140, 142, dead_or_set: 141
insn=67, live_throughout: 0, 13, 14, 140, 141, 142, dead_or_set: 150
insn=13, live_throughout: 0, 13, 14, 140, 141, 150, dead_or_set: 142, 144
insn=14, live_throughout: 13, 14, 140, 141, 150, dead_or_set: 0, 144
insn=9, live_throughout: 13, 14, 24, 140, 150, dead_or_set: 141
insn=15, live_throughout: 13, 14, 140, 150, dead_or_set: 
insn=17, live_throughout: 13, 14, 140, dead_or_set: 138
insn=18, live_throughout: 13, 14, 138, 140, dead_or_set: 145
insn=19, live_throughout: 13, 14, 138, 140, dead_or_set: 145
insn=20, live_throughout: 13, 14, 138, 140, dead_or_set: 
insn=22, live_throughout: 13, 14, 138, 140, dead_or_set: 146
insn=25, live_throughout: 13, 14, 138, 140, 146, dead_or_set: 148
insn=23, live_throughout: 13, 14, 138, 140, 146, 148, dead_or_set: 147
insn=24, live_throughout: 13, 14, 140, 148, dead_or_set: 138, 146, 147
insn=26, live_throughout: 13, 14, dead_or_set: 140, 148
insn=68, live_throughout: 13, 14, dead_or_set: 
insn=29, live_throughout: 13, 140, 150, dead_or_set: 
insn=44, live_throughout: 13, 140, 150, dead_or_set: 0
insn=45, live_throughout: 0, 13, 140, 150, dead_or_set: 1
insn=46, live_throughout: 0, 1, 13, 140, 150, dead_or_set: 2
insn=38, live_throughout: 0, 1, 2, 13, 140, dead_or_set: 150
insn=74, live_throughout: 0, 1, 2, 13, 140, dead_or_set: 151
insn=40, live_throughout: 0, 1, 2, 13, 140, dead_or_set: 151
insn=73, live_throughout: 0, 1, 2, 13, 140, dead_or_set: 149
insn=32, live_throughout: 0, 1, 2, 13, 140, dead_or_set: 149
insn=34, live_throughout: 0, 1, 2, 13, 140, dead_or_set: 11
insn=36, live_throughout: 0, 1, 2, 13, 140, dead_or_set: 
insn=47, live_throughout: 13, 140, dead_or_set: 0, 1, 2, 14
insn=48, live_throughout: 13, 14, 140, dead_or_set: 133
insn=49, live_throughout: 13, 14, 133, 140, dead_or_set: 155
insn=50, live_throughout: 13, 14, 133, 140, dead_or_set: 155
insn=51, live_throughout: 13, 14, 133, 140, dead_or_set: 
insn=53, live_throughout: 13, 14, 133, 140, dead_or_set: 156
insn=56, live_throughout: 13, 14, 133, 140, 156, dead_or_set: 158
insn=54, live_throughout: 13, 14, 133, 140, 156, 158, dead_or_set: 157
insn=55, live_throughout: 13, 14, 140, 158, dead_or_set: 133, 156, 157
insn=57, live_throughout: 13, 14, dead_or_set: 140, 158
insn=63, live_throughout: 13, 14, dead_or_set: 
init_insns for 141: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 73 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 49 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 53 (nil))
init_insns for 157: (insn_list:REG_DEP_TRUE 54 (nil))
changing reg in insn 48
changing reg in insn 56
changing reg in insn 55
changing reg in insn 50
changing reg in insn 17
changing reg in insn 25
changing reg in insn 24
changing reg in insn 19
changing reg in insn 3
changing reg in insn 57
changing reg in insn 53
changing reg in insn 49
changing reg in insn 48
changing reg in insn 26
changing reg in insn 22
changing reg in insn 18
changing reg in insn 17
changing reg in insn 8
changing reg in insn 7
changing reg in insn 53
changing reg in insn 49
changing reg in insn 22
changing reg in insn 18
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 71
changing reg in insn 70
changing reg in insn 71
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 18
changing reg in insn 19
changing reg in insn 22
changing reg in insn 24
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 73
changing reg in insn 32
changing reg in insn 67
changing reg in insn 38
changing reg in insn 74
changing reg in insn 40
changing reg in insn 49
changing reg in insn 50
changing reg in insn 53
changing reg in insn 55
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
Spilling for insn 70.
Using reg 3 for reload 0
Spilling for insn 7.
Spilling for insn 9.
Spilling for insn 24.
Spilling for insn 26.
Spilling for insn 38.
Spilling for insn 40.
Spilling for insn 32.
Spilling for insn 34.
Spilling for insn 36.
Spilling for insn 55.
Spilling for insn 57.

Reloads for insn # 70
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -24 [0xffffffffffffffe8])) [0 data.trace+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -24 [0xffffffffffffffe8])) [0 data.trace+0 S4 A32])

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -16 [0xfffffffffffffff0])) [0 data.skip+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -16 [0xfffffffffffffff0])) [0 data.skip+0 S4 A32])

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:138 D.14803 ] [138])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:138 D.14803 ] [138])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])) [0 S4 A32])

Reloads for insn # 26
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -32 [0xffffffffffffffe0])) [0 frame.lr+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -32 [0xffffffffffffffe0])) [0 frame.lr+0 S4 A32])

Reloads for insn # 40
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -28 [0xffffffffffffffe4])) [0 frame.pc+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -28 [0xffffffffffffffe4])) [0 frame.pc+0 S4 A32])

Reloads for insn # 32
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -20 [0xffffffffffffffec])) [0 data.no_sched_functions+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -20 [0xffffffffffffffec])) [0 data.no_sched_functions+0 S4 A32])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -40 [0xffffffffffffffd8])) [0 frame.fp+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -40 [0xffffffffffffffd8])) [0 frame.fp+0 S4 A32])

Reloads for insn # 36
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -36 [0xffffffffffffffdc])) [0 frame.sp+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                                                        (const_int -36 [0xffffffffffffffdc])) [0 frame.sp+0 S4 A32])

Reloads for insn # 55
Reload 0: reload_out (SI) = (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:133 temp.280 ] [133])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 1 r1 [orig:156 <variable>.entries ] [156])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:133 temp.280 ] [133])
                                                            (const_int 4 [0x4]))
                                                        (reg/f:SI 1 r1 [orig:156 <variable>.entries ] [156])) [0 S4 A32])

Reloads for insn # 57
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


save_stack_trace_tsk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 11 [fp] 13 [sp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={6d,5u} r2={10d,8u} r3={8d,10u} r4={1d,10u,5d} r11={1d,17u} r12={2d} r13={1d,10u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 226{151d,70u,5e} in 41{40 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 4 2 NOTE_INSN_DELETED)

(note 4 2 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 4 76 2 NOTE_INSN_DELETED)

(insn 76 11 70 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 70 76 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2 [142])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 70 71 2 arch/arm/kernel/stacktrace.c:87 (set (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
        (reg:SI 1 r1 [ trace ])) 167 {*arm_movsi_insn} (nil))

(insn 71 3 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2 [142])
        (and:SI (reg:SI 2 r2 [142])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 71 8 2 arch/arm/kernel/stacktrace.c:91 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -24 [0xffffffffffffffe8])) [0 data.trace+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:140 trace ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 67 2 arch/arm/kernel/stacktrace.c:92 (set (reg:SI 1 r1 [orig:141 <variable>.skip ] [141])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 12 [0xc])) [0 <variable>.skip+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 12 [0xc])) [0 <variable>.skip+0 S4 A32])
        (nil)))

(insn 67 8 13 2 (set (reg:SI 3 r3 [150])
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (nil))

(insn 13 67 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
        (mem/s/f/j:SI (plus:SI (reg:SI 2 r2 [142])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:144 <variable>.task ] [144])
            (reg:SI 0 r0 [ tsk ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 9 14 15 2 arch/arm/kernel/stacktrace.c:92 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -16 [0xfffffffffffffff0])) [0 data.skip+0 S4 A32])
        (reg:SI 1 r1 [orig:141 <variable>.skip ] [141])) 167 {*arm_movsi_insn} (nil))

(jump_insn 15 9 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]


;; Succ edge  3 [93.3%]  (fallthru)
;; Succ edge  5 [6.7%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [93.3%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/kernel/stacktrace.c:101 (set (reg:SI 3 r3 [orig:138 D.14803 ] [138])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/kernel/stacktrace.c:101 (set (reg:SI 2 r2 [orig:145 <variable>.max_entries ] [145])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])
        (nil)))

(insn 19 18 20 3 arch/arm/kernel/stacktrace.c:101 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:138 D.14803 ] [138])
            (reg:SI 2 r2 [orig:145 <variable>.max_entries ] [145]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 3 arch/arm/kernel/stacktrace.c:101 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 25 4 arch/arm/kernel/stacktrace.c:102 (set (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])
        (nil)))

(insn 25 22 23 4 arch/arm/kernel/stacktrace.c:102 (set (reg:SI 2 r2 [148])
        (plus:SI (reg:SI 3 r3 [orig:138 D.14803 ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 23 25 24 4 arch/arm/kernel/stacktrace.c:102 (set (reg:SI 0 r0 [147])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 24 23 26 4 arch/arm/kernel/stacktrace.c:102 (set (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:138 D.14803 ] [138])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:146 <variable>.entries ] [146])) [0 S4 A32])
        (reg:SI 0 r0 [147])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 26 24 68 4 arch/arm/kernel/stacktrace.c:102 (set (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])
        (reg:SI 2 r2 [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 68 26 69 4 (set (pc)
        (label_ref 63)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]


;; Succ edge  7 [100.0%] 

(barrier 69 68 29)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 25 [sfp]
;; lr  use 	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [6.7%] 
(code_label 29 69 30 5 14 "" [1 uses])

(note 30 29 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 41 30 43 5 NOTE_INSN_DELETED)

(note 43 41 44 5 NOTE_INSN_DELETED)

(insn 44 43 45 5 arch/arm/kernel/stacktrace.c:121 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -40 [0xffffffffffffffd8]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 5 arch/arm/kernel/stacktrace.c:121 (set (reg:SI 1 r1)
        (symbol_ref:SI ("save_trace") [flags 0x3] <function_decl 0x11007080 save_trace>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("save_trace") [flags 0x3] <function_decl 0x11007080 save_trace>)
        (nil)))

(insn 46 45 38 5 arch/arm/kernel/stacktrace.c:121 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 11 fp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 38 46 74 5 arch/arm/kernel/stacktrace.c:117 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -32 [0xffffffffffffffe0])) [0 frame.lr+0 S4 A32])
        (reg:SI 3 r3 [150])) 167 {*arm_movsi_insn} (nil))

(insn 74 38 40 5 arch/arm/kernel/stacktrace.c:118 (set (reg/f:SI 3 r3 [151])
        (symbol_ref:SI ("save_stack_trace_tsk") [flags 0x3] <function_decl 0x10ffbd00 save_stack_trace_tsk>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("save_stack_trace_tsk") [flags 0x3] <function_decl 0x10ffbd00 save_stack_trace_tsk>)
        (nil)))

(insn 40 74 73 5 arch/arm/kernel/stacktrace.c:118 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -28 [0xffffffffffffffe4])) [0 frame.pc+0 S4 A32])
        (reg/f:SI 3 r3 [151])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("save_stack_trace_tsk") [flags 0x3] <function_decl 0x10ffbd00 save_stack_trace_tsk>)
        (nil)))

(insn 73 40 32 5 arch/arm/kernel/stacktrace.c:114 (set (reg:SI 3 r3 [149])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 32 73 34 5 arch/arm/kernel/stacktrace.c:114 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -20 [0xffffffffffffffec])) [0 data.no_sched_functions+0 S4 A32])
        (reg:SI 3 r3 [149])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 32 36 5 arch/arm/kernel/stacktrace.c:115 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -40 [0xffffffffffffffd8])) [0 frame.fp+0 S4 A32])
        (reg/f:SI 11 fp)) 167 {*arm_movsi_insn} (nil))

(insn 36 34 47 5 arch/arm/kernel/stacktrace.c:116 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 11 fp)
                (const_int -36 [0xffffffffffffffdc])) [0 frame.sp+0 S4 A32])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(call_insn 47 36 48 5 arch/arm/kernel/stacktrace.c:121 (parallel [
            (call (mem:SI (symbol_ref:SI ("walk_stackframe") [flags 0x3] <function_decl 0x10ffbe80 walk_stackframe>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 49 5 arch/arm/kernel/stacktrace.c:122 (set (reg:SI 3 r3 [orig:133 temp.280 ] [133])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 5 arch/arm/kernel/stacktrace.c:122 (set (reg:SI 2 r2 [orig:155 <variable>.max_entries ] [155])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 4 [0x4])) [0 <variable>.max_entries+0 S4 A32])
        (nil)))

(insn 50 49 51 5 arch/arm/kernel/stacktrace.c:122 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:133 temp.280 ] [133])
            (reg:SI 2 r2 [orig:155 <variable>.max_entries ] [155]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 5 arch/arm/kernel/stacktrace.c:122 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  out 	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 25 [sfp]


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  7 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 3 [r3] 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2]
;; live  in  	 3 [r3] 4 [r4] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  5 [61.0%]  (fallthru)
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 56 6 arch/arm/kernel/stacktrace.c:123 (set (reg/f:SI 1 r1 [orig:156 <variable>.entries ] [156])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140])
                (const_int 8 [0x8])) [0 <variable>.entries+0 S4 A32])
        (nil)))

(insn 56 53 54 6 arch/arm/kernel/stacktrace.c:123 (set (reg:SI 2 r2 [158])
        (plus:SI (reg:SI 3 r3 [orig:133 temp.280 ] [133])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 54 56 55 6 arch/arm/kernel/stacktrace.c:123 (set (reg:SI 0 r0 [157])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 55 54 57 6 arch/arm/kernel/stacktrace.c:123 (set (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [orig:133 temp.280 ] [133])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [orig:156 <variable>.entries ] [156])) [0 S4 A32])
        (reg:SI 0 r0 [157])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 57 55 63 6 arch/arm/kernel/stacktrace.c:123 (set (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 trace ] [140]) [0 <variable>.nr_entries+0 S4 A32])
        (reg:SI 2 r2 [158])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [50.0%] 
;; Pred edge  5 [39.0%] 
;; Pred edge  4 [100.0%] 
(code_label 63 57 66 7 16 "" [3 uses])

(note 66 63 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 72 66 75 NOTE_INSN_DELETED)

(note 75 72 0 NOTE_INSN_DELETED)


;; Function save_stack_trace (save_stack_trace)[0:794]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 11(l0): point = 0
   Insn 9(l0): point = 2
   Insn 10(l0): point = 4
   Insn 21(l0): point = 6
   Insn 2(l0): point = 8
   Insn 20(l0): point = 10
 a0(r135): [3..10]
 a1(r134): [5..8]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r135): [0..3]
 a1(r134): [1..2]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r134,l0) conflicts: a0(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r134
    modified regnos: 134 135
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a1(r134,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 1
Disposition:
    1:r134 l0     1    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=20, live_throughout: 0, 13, 14, dead_or_set: 135
insn=2, live_throughout: 13, 14, 135, dead_or_set: 0, 134
insn=21, live_throughout: 13, 14, 134, dead_or_set: 135
insn=10, live_throughout: 13, 14, 135, dead_or_set: 1, 134
insn=9, live_throughout: 1, 13, 14, dead_or_set: 0, 135
insn=11, live_throughout: 13, 14, dead_or_set: 0, 1
changing reg in insn 2
changing reg in insn 10
changing reg in insn 21
changing reg in insn 20
changing reg in insn 21
changing reg in insn 9
Spilling for insn 20.
Using reg 2 for reload 0
Spilling for insn 20.
Using reg 2 for reload 0

Reloads for insn # 20
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)
deleting insn with uid = 10.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


save_stack_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={4d,2u} r12={2d} r13={1d,4u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 139{128d,11u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 23 2 NOTE_INSN_DELETED)

(insn 23 7 20 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 20 23 2 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 3 r3 [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 20 21 2 arch/arm/kernel/stacktrace.c:127 (set (reg/v/f:SI 1 r1 [orig:134 trace ] [134])
        (reg:SI 0 r0 [ trace ])) 167 {*arm_movsi_insn} (nil))

(insn 21 2 9 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 3 r3 [135])
        (and:SI (reg:SI 3 r3 [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 21 11 2 arch/arm/kernel/stacktrace.c:128 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [135])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 11 9 12 2 arch/arm/kernel/stacktrace.c:128 (parallel [
            (call (mem:SI (symbol_ref:SI ("save_stack_trace_tsk") [flags 0x3] <function_decl 0x10ffbd00 save_stack_trace_tsk>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 12 11 22)

(note 22 12 0 NOTE_INSN_DELETED)

