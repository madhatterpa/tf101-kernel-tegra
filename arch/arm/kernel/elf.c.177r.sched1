
;; Function elf_check_arch (elf_check_arch)[0:793]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 8 -- before reload
;;   ======================================================

;;	  0-->     2 r137=r0                           :cortex_a8_default
;;	  2-->     6 r138=zxn([r137+0x12])             :cortex_a8_load_store_1
;;	  4-->     7 cc=cmp(r138,0x28)                 :cortex_a8_default
;;	  6-->     8 pc={(cc!=0x0)?L57:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 13 -- before reload
;;   ======================================================

;;	  0-->    10 r134=[r137+0x18]                  :cortex_a8_load_store_1
;;	  2-->    12 cc=cmp(zxt(r134,0x1,0x0),0x0)     :cortex_a8_default
;;	  4-->    13 pc={(cc==0x0)?L23:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 10
;;   new tail = 13

;;   ======================================================
;;   -- basic block 4 from 15 to 19 -- before reload
;;   ======================================================

;;	  0-->    15 r140=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  3-->    16 r142=[r140]                       :cortex_a8_load_store_1
;;	  5-->    18 cc=cmp(zxt(r142,0x1,0x2),0x0)     :cortex_a8_default
;;	  7-->    19 pc={(cc!=0x0)?L28:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 15
;;   new tail = 19

;;   ======================================================
;;   -- basic block 5 from 101 to 101 -- before reload
;;   ======================================================

;;	  0-->   101 pc=L57                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 101
;;   new tail = 101

;;   ======================================================
;;   -- basic block 6 from 26 to 27 -- before reload
;;   ======================================================

;;	  0-->    26 cc=cmp(zxt(r134,0x2,0x0),0x0)     :cortex_a8_default
;;	  2-->    27 pc={(cc!=0x0)?L57:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 26
;;   new tail = 27

;;   ======================================================
;;   -- basic block 7 from 30 to 33 -- before reload
;;   ======================================================

;;	  0-->    30 r133=[r137+0x24]                  :cortex_a8_load_store_1
;;	  2-->    32 {cc=cmp(r133&0xffffffffff000000,0x:cortex_a8_default
;;	  4-->    33 pc={(cc!=0x0)?L62:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 30
;;   new tail = 33

;;   ======================================================
;;   -- basic block 8 from 36 to 37 -- before reload
;;   ======================================================

;;	  0-->    36 cc=cmp(zxt(r133,0x1,0x3),0x0)     :cortex_a8_default
;;	  2-->    37 pc={(cc==0x0)?L44:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 36
;;   new tail = 37

;;   ======================================================
;;   -- basic block 9 from 39 to 43 -- before reload
;;   ======================================================

;;	  0-->    39 r146=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  3-->    40 r148=[r146]                       :cortex_a8_load_store_1
;;	  5-->    42 cc=cmp(zxt(r148,0x1,0x3),0x0)     :cortex_a8_default
;;	  7-->    43 pc={(cc==0x0)?L57:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 39
;;   new tail = 43

;;   ======================================================
;;   -- basic block 10 from 46 to 48 -- before reload
;;   ======================================================

;;	  0-->    46 r149=r133&0x600                   :cortex_a8_default
;;	  1-->    47 cc=cmp(r149,0x400)                :cortex_a8_default
;;	  3-->    48 pc={(cc!=0x0)?L62:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 46
;;   new tail = 48

;;   ======================================================
;;   -- basic block 11 from 50 to 103 -- before reload
;;   ======================================================

;;	  0-->    50 r150=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  3-->    51 r152=[r150]                       :cortex_a8_load_store_1
;;	  5-->    53 r135=zxt(r152,0x1,0x6)            :cortex_a8_default
;;	  5-->   103 pc=L65                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 50
;;   new tail = 103

;;   ======================================================
;;   -- basic block 12 from 59 to 105 -- before reload
;;   ======================================================

;;	  0-->    59 r135=0x0                          :cortex_a8_default
;;	  0-->   105 pc=L65                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 59
;;   new tail = 105

;;   ======================================================
;;   -- basic block 13 from 64 to 64 -- before reload
;;   ======================================================

;;	  0-->    64 r135=0x1                          :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 64
;;   new tail = 64

;;   ======================================================
;;   -- basic block 14 from 71 to 77 -- before reload
;;   ======================================================

;;	  0-->    71 r0=r135                           :cortex_a8_default
;;	  0-->    77 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 71
;;   new tail = 77


;; Procedure interblock/speculative motions == 0/0 




elf_check_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,14u} r12={1d} r13={1d,14u} r14={1d,1u} r24={8d,8u} r25={1d,14u} r26={1d,13u} r133={1d,3u} r134={1d,2u} r135={3d,1u} r137={1d,3u} r138={1d,1u} r140={1d,1u} r142={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 117{33d,84u,0e} in 35{35 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 6 2 arch/arm/kernel/elf.c:8 (set (reg/v/f:SI 137 [ x ])
        (reg:SI 0 r0 [ x ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ x ])
        (nil)))

(insn 6 2 7 2 arch/arm/kernel/elf.c:12 (set (reg:SI 138 [ <variable>.e_machine ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 137 [ x ])
                    (const_int 18 [0x12])) [0 <variable>.e_machine+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 7 6 8 2 arch/arm/kernel/elf.c:12 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ <variable>.e_machine ])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ <variable>.e_machine ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/elf.c:12 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  12 [62.2%] 
;; Succ edge  3 [37.8%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 134
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn 10 11 12 3 arch/arm/kernel/elf.c:16 (set (reg:SI 134 [ D.14873 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ x ])
                (const_int 24 [0x18])) [0 <variable>.e_entry+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 10 13 3 arch/arm/kernel/elf.c:16 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 134 [ D.14873 ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/elf.c:16 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 140 142
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 14 15 4 NOTE_INSN_DELETED)

(insn 15 17 16 4 arch/arm/kernel/elf.c:17 (set (reg/f:SI 140)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 18 4 arch/arm/kernel/elf.c:17 (set (reg:SI 142 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 140) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 18 16 19 4 arch/arm/kernel/elf.c:17 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 142 [ elf_hwcap ])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 142 [ elf_hwcap ])
        (nil)))

(jump_insn 19 18 100 4 arch/arm/kernel/elf.c:17 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  7 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%]  (fallthru)
(note 100 19 101 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 101 100 102 5 (set (pc)
        (label_ref 57)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  12 [100.0%] 

(barrier 102 101 23)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 137
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 23 102 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 25 24 26 6 NOTE_INSN_DELETED)

(insn 26 25 27 6 arch/arm/kernel/elf.c:19 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 134 [ D.14873 ])
                (const_int 2 [0x2])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 134 [ D.14873 ])
        (nil)))

(jump_insn 27 26 28 6 arch/arm/kernel/elf.c:19 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 12 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  12 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  6 [61.0%]  (fallthru)
;; Pred edge  4 [61.0%] 
(code_label 28 27 29 7 4 "" [1 uses])

(note 29 28 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 31 29 30 7 NOTE_INSN_DELETED)

(insn 30 31 32 7 arch/arm/kernel/elf.c:22 (set (reg/v:SI 133 [ eflags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ x ])
                (const_int 36 [0x24])) [0 <variable>.e_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ x ])
        (nil)))

(insn 32 30 33 7 arch/arm/kernel/elf.c:23 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 133 [ eflags ])
                        (const_int -16777216 [0xffffffffff000000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 33 32 34 7 arch/arm/kernel/elf.c:23 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 35 34 36 8 NOTE_INSN_DELETED)

(insn 36 35 37 8 arch/arm/kernel/elf.c:27 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ eflags ])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 37 36 38 8 arch/arm/kernel/elf.c:27 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 146 148
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 38 37 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 41 38 39 9 NOTE_INSN_DELETED)

(insn 39 41 40 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg/f:SI 146)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 42 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg:SI 148 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 146) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 42 40 43 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 148 [ elf_hwcap ])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 148 [ elf_hwcap ])
        (nil)))

(jump_insn 43 42 44 9 arch/arm/kernel/elf.c:27 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 12 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  12 [39.0%] 
;; Succ edge  10 [61.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 149
;; live  kill	

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [61.0%]  (fallthru)
(code_label 44 43 45 10 6 "" [1 uses])

(note 45 44 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 10 arch/arm/kernel/elf.c:30 (set (reg:SI 149)
        (and:SI (reg/v:SI 133 [ eflags ])
            (const_int 1536 [0x600]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ eflags ])
        (nil)))

(insn 47 46 48 10 arch/arm/kernel/elf.c:30 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 1024 [0x400]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(jump_insn 48 47 49 10 arch/arm/kernel/elf.c:30 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 10 -> ( 11 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 150 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 150 152
;; live  kill	

;; Pred edge  10 [28.0%]  (fallthru)
(note 49 48 52 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 52 49 50 11 NOTE_INSN_DELETED)

(insn 50 52 51 11 arch/arm/kernel/elf.c:13 (set (reg/f:SI 150)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 53 11 arch/arm/kernel/elf.c:13 (set (reg:SI 152 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 150) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 53 51 103 11 arch/arm/kernel/elf.c:13 (set (reg:SI 135 [ D.14872 ])
        (zero_extract:SI (reg:SI 152 [ elf_hwcap ])
            (const_int 1 [0x1])
            (const_int 6 [0x6]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 152 [ elf_hwcap ])
        (nil)))

(jump_insn 103 53 104 11 (set (pc)
        (label_ref 65)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135


;; Succ edge  14 [100.0%] 

(barrier 104 103 57)

;; Start of basic block ( 2 9 6 5) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [62.2%] 
;; Pred edge  9 [39.0%] 
;; Pred edge  6 [39.0%] 
;; Pred edge  5 [100.0%] 
(code_label 57 104 58 12 2 "" [4 uses])

(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 105 12 arch/arm/kernel/elf.c:13 (set (reg:SI 135 [ D.14872 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 105 59 106 12 (set (pc)
        (label_ref 65)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135


;; Succ edge  14 [100.0%] 

(barrier 106 105 62)

;; Start of basic block ( 10 7) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  10 [72.0%] 
;; Pred edge  7 [50.0%] 
(code_label 62 106 63 13 5 "" [2 uses])

(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 13 arch/arm/kernel/elf.c:36 (set (reg:SI 135 [ D.14872 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 11 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
(code_label 65 64 66 14 7 "" [2 uses])

(note 66 65 71 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 71 66 77 14 arch/arm/kernel/elf.c:37 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.14872 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.14872 ])
        (nil)))

(insn 77 71 107 14 arch/arm/kernel/elf.c:37 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 107 77 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_elf_read_implies_exec (arm_elf_read_implies_exec)[0:795]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 8 -- before reload
;;   ======================================================

;;	  0-->     7 cc=cmp(r1,0x1)                    :cortex_a8_default
;;	  2-->     8 pc={(cc==0x0)?L13:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 7
;;   new tail = 8

;;   ======================================================
;;   -- basic block 3 from 10 to 36 -- before reload
;;   ======================================================

;;	  0-->    10 r134=0x1                          :cortex_a8_default
;;	  0-->    36 pc=L20                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 36

;;   ======================================================
;;   -- basic block 4 from 15 to 18 -- before reload
;;   ======================================================

;;	  0-->    15 r0=call [`cpu_architecture']      :cortex_a8_issue_branch
;;	 32-->    18 {r134=r0<=0x7;clobber cc;}        :cortex_a8_default
;;	Ready list (final):  
;;   total time = 32
;;   new head = 15
;;   new tail = 18

;;   ======================================================
;;   -- basic block 5 from 26 to 32 -- before reload
;;   ======================================================

;;	  0-->    26 r0=r134                           :cortex_a8_default
;;	  0-->    32 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 26
;;   new tail = 32


;; Procedure interblock/speculative motions == 0/0 




arm_elf_read_implies_exec

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={2d,1u} 
;;    total ref usage 159{132d,27u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/elf.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ executable_stack ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ executable_stack ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/elf.c:77 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1990 [0x7c6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 [80.1%]  (fallthru)
;; Succ edge  4 [19.9%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [80.1%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 36 3 arch/arm/kernel/elf.c:78 (set (reg:SI 134 [ D.14939 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 36 10 37 3 (set (pc)
        (label_ref 20)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%] 

(barrier 37 36 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [19.9%] 
(code_label 13 37 14 4 13 "" [1 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 16 14 17 4 NOTE_INSN_DELETED)

(note 17 16 15 4 NOTE_INSN_DELETED)

(call_insn 15 17 18 4 arch/arm/kernel/elf.c:79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 18 15 20 4 arch/arm/kernel/elf.c:78 (parallel [
            (set (reg:SI 134 [ D.14939 ])
                (le:SI (reg:SI 0 r0)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 20 18 21 5 14 "" [1 uses])

(note 21 20 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 21 32 5 arch/arm/kernel/elf.c:82 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.14939 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.14939 ])
        (nil)))

(insn 32 26 38 5 arch/arm/kernel/elf.c:82 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 38 32 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function elf_set_personality (elf_set_personality)[0:794]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 21 (  1.8)


elf_set_personality

Dataflow summary:
def_info->table_size = 387, use_info->table_size = 86
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={8d,4u} r2={4d} r3={4d} r11={1d,11u} r12={4d} r13={1d,17u} r14={2d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,5u} r25={1d,11u} r26={1d,10u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={2d,2u} r137={1d,4u} r139={1d,1u} r141={2d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={2d,2u} 
;;    total ref usage 461{383d,78u,0e} in 32{29 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d12(1){ }d16(2){ }d20(3){ }d21(11){ }d25(12){ }d26(13){ }d28(14){ }d64(25){ }d65(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137

( 2 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137

( 5 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 141 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 24 [cc] 141 143 144
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137

( 7 6 )->[8]->( 9 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 145 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 148
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 9 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 9 8 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 11 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u82(11){ }u83(13){ }u84(14){ }u85(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 13 to worklist
  Adding insn 70 to worklist
  Adding insn 29 to worklist
  Adding insn 32 to worklist
  Adding insn 39 to worklist
  Adding insn 44 to worklist
  Adding insn 51 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 49 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 58 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 43 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
  Adding insn 31 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
  Adding insn 15 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
  Adding insn 20 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
  Adding insn 12 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
  Adding insn 8 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
;;   ======================================================
;;   -- basic block 2 from 6 to 9 -- before reload
;;   ======================================================

;;	  0-->     6 r137=[r0+0x24]                    :cortex_a8_load_store_1
;;	  2-->     8 {cc=cmp(r137&0xffffffffff000000,0x:cortex_a8_default
;;	  4-->     9 pc={(cc!=0x0)?L18:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 6
;;   new tail = 9

;;   ======================================================
;;   -- basic block 3 from 12 to 13 -- before reload
;;   ======================================================

;;	  0-->    12 cc=cmp(zxt(r137,0x1,0x3),0x0)     :cortex_a8_default
;;	  2-->    13 pc={(cc==0x0)?L18:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 12
;;   new tail = 13

;;   ======================================================
;;   -- basic block 4 from 15 to 70 -- before reload
;;   ======================================================

;;	  0-->    15 r136=r139                         :cortex_a8_default
;;	  0-->    70 pc=L21                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 15
;;   new tail = 70

;;   ======================================================
;;   -- basic block 5 from 20 to 20 -- before reload
;;   ======================================================

;;	  0-->    20 r136=0x800000                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 20
;;   new tail = 20

;;   ======================================================
;;   -- basic block 6 from 79 to 29 -- before reload
;;   ======================================================

;;	  0-->    79 r141=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->    80 r141=r141&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->    26 r143=[r141+0xc]                   :cortex_a8_load_store_1
;;	  6-->    27 r144=[r143+0x20c]                 :cortex_a8_load_store_1
;;	  8-->    28 cc=cmp(r144,r136)                 :cortex_a8_default
;;	 10-->    29 pc={(cc==0x0)?L33:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 79
;;   new tail = 29

;;   ======================================================
;;   -- basic block 7 from 31 to 32 -- before reload
;;   ======================================================

;;	  0-->    31 r0=r136                           :cortex_a8_default
;;	  1-->    32 r0=call [`__set_personality']     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 31
;;   new tail = 32

;;   ======================================================
;;   -- basic block 8 from 35 to 39 -- before reload
;;   ======================================================

;;	  0-->    35 r145=`elf_hwcap'                  :cortex_a8_load_store_1
;;	  3-->    36 r147=[r145]                       :cortex_a8_load_store_1
;;	  5-->    38 cc=cmp(zxt(r147,0x1,0x9),0x0)     :cortex_a8_default
;;	  7-->    39 pc={(cc==0x0)?L53:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 35
;;   new tail = 39

;;   ======================================================
;;   -- basic block 9 from 76 to 44 -- before reload
;;   ======================================================

;;	  0-->    76 r148=0xffffffffff000200           :cortex_a8_load_store_1
;;	  2-->    77 r148=r137&r148                    :cortex_a8_default
;;	  3-->    43 cc=cmp(r148,0x0)                  :cortex_a8_default
;;	  5-->    44 pc={(cc==0x0)?L53:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 76
;;   new tail = 44

;;   ======================================================
;;   -- basic block 10 from 49 to 51 -- before reload
;;   ======================================================

;;	  0-->    74 r1=sp&0xffffffffffffe03f          :cortex_a8_default
;;	  0-->    49 r0=0x11                           :cortex_a8_default
;;	  1-->    75 r1=r1&0xffffffffffffffc0          :cortex_a8_default
;;	  2-->    51 call [`_set_bit']                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 49
;;   new tail = 51

;;   ======================================================
;;   -- basic block 11 from 58 to 60 -- before reload
;;   ======================================================

;;	  0-->    72 r1=sp&0xffffffffffffe03f          :cortex_a8_default
;;	  0-->    58 r0=0x11                           :cortex_a8_default
;;	  1-->    73 r1=r1&0xffffffffffffffc0          :cortex_a8_default
;;	  2-->    60 call [`_clear_bit']               :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 58
;;   new tail = 60


;; Procedure interblock/speculative motions == 0/0 




elf_set_personality

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={8d,4u} r2={4d} r3={4d} r11={1d,11u} r12={4d} r13={1d,17u} r14={2d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,5u} r25={1d,11u} r26={1d,10u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r136={2d,2u} r137={1d,4u} r139={1d,1u} r141={2d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={2d,2u} 
;;    total ref usage 461{383d,78u,0e} in 32{29 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 6 2 NOTE_INSN_DELETED)

(insn 6 7 8 2 arch/arm/kernel/elf.c:42 (set (reg/v:SI 137 [ eflags ])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ x ])
                (const_int 36 [0x24])) [0 <variable>.e_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ x ])
        (nil)))

(insn 8 6 9 2 arch/arm/kernel/elf.c:48 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 137 [ eflags ])
                        (const_int -16777216 [0xffffffffff000000]))
                    (const_int 0 [0x0])))
            (set (reg:SI 139)
                (and:SI (reg/v:SI 137 [ eflags ])
                    (const_int -16777216 [0xffffffffff000000])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/elf.c:48 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 10 12 3 NOTE_INSN_DELETED)

(insn 12 11 13 3 arch/arm/kernel/elf.c:49 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ eflags ])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/elf.c:49 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 136
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 70 4 arch/arm/kernel/elf.c:50 (set (reg/v:SI 136 [ personality ])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 70 15 71 4 (set (pc)
        (label_ref 21)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137


;; Succ edge  6 [100.0%] 

(barrier 71 70 18)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 136
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%] 
(code_label 18 71 19 5 17 "" [2 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 arch/arm/kernel/elf.c:43 (set (reg/v:SI 136 [ personality ])
        (const_int 8388608 [0x800000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 141 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 24 [cc] 141 143 144
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 21 20 22 6 18 "" [1 uses])

(note 22 21 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 24 22 79 6 NOTE_INSN_DELETED)

(insn 79 24 80 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 141)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 80 79 26 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 141)
        (and:SI (reg:SI 141)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 80 27 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 143 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 141)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 27 26 28 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 144 [ <variable>.personality ])
        (mem/s/j:SI (plus:SI (reg/f:SI 143 [ <variable>.task ])
                (const_int 524 [0x20c])) [0 <variable>.personality+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ <variable>.task ])
        (nil)))

(insn 28 27 29 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ <variable>.personality ])
            (reg/v:SI 136 [ personality ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.personality ])
        (nil)))

(jump_insn 29 28 30 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4877 [0x130d])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137


;; Succ edge  7 [51.2%]  (fallthru)
;; Succ edge  8 [48.8%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [51.2%]  (fallthru)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 7 arch/arm/kernel/elf.c:53 discrim 1 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ personality ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ personality ])
        (nil)))

(call_insn 32 31 33 7 arch/arm/kernel/elf.c:53 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__set_personality") [flags 0x41] <function_decl 0x10ffbd00 __set_personality>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 145 147
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [48.8%] 
(code_label 33 32 34 8 19 "" [1 uses])

(note 34 33 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 37 34 35 8 NOTE_INSN_DELETED)

(insn 35 37 36 8 arch/arm/kernel/elf.c:61 (set (reg/f:SI 145)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 38 8 arch/arm/kernel/elf.c:61 (set (reg:SI 147 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 145) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 38 36 39 8 arch/arm/kernel/elf.c:61 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 147 [ elf_hwcap ])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 147 [ elf_hwcap ])
        (nil)))

(jump_insn 39 38 40 8 arch/arm/kernel/elf.c:61 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137


;; Succ edge  9 [71.0%]  (fallthru)
;; Succ edge  11 [29.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc] 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 24 [cc] 148
;; live  kill	

;; Pred edge  8 [71.0%]  (fallthru)
(note 40 39 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 76 40 77 9 arch/arm/kernel/elf.c:62 (set (reg:SI 148)
        (const_int -16776704 [0xffffffffff000200])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 43 9 arch/arm/kernel/elf.c:62 (set (reg:SI 148)
        (and:SI (reg/v:SI 137 [ eflags ])
            (reg:SI 148))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ eflags ])
        (nil)))

(insn 43 77 44 9 arch/arm/kernel/elf.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(jump_insn 44 43 45 9 arch/arm/kernel/elf.c:62 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  10 [20.7%]  (fallthru)
;; Succ edge  11 [79.3%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  9 [20.7%]  (fallthru)
(note 45 44 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 47 45 48 10 NOTE_INSN_DELETED)

(note 48 47 74 10 NOTE_INSN_DELETED)

(insn 74 48 49 10 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 49 74 75 10 include/linux/thread_info.h:64 (set (reg:SI 0 r0)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(insn 75 49 51 10 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(call_insn/j 51 75 52 10 include/linux/thread_info.h:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 52 51 53)

;; Start of basic block ( 9 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  9 [79.3%] 
;; Pred edge  8 [29.0%] 
(code_label 53 52 54 11 20 "" [2 uses])

(note 54 53 56 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 56 54 57 11 NOTE_INSN_DELETED)

(note 57 56 72 11 NOTE_INSN_DELETED)

(insn 72 57 58 11 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 72 73 11 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(insn 73 58 60 11 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(call_insn/j 60 73 61 11 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 61 60 0)

starting the processing of deferred insns
ending the processing of deferred insns
