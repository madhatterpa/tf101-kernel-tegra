
;; Function elf_check_arch (elf_check_arch)[0:793]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r152: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 77(l0): point = 0
   Insn 71(l0): point = 2
   Insn 64(l0): point = 5
   Insn 105(l0): point = 8
   Insn 59(l0): point = 10
   Insn 103(l0): point = 13
   Insn 53(l0): point = 15
   Insn 51(l0): point = 17
   Insn 50(l0): point = 19
   Insn 48(l0): point = 22
   Insn 47(l0): point = 24
   Insn 46(l0): point = 26
   Insn 43(l0): point = 29
   Insn 42(l0): point = 31
   Insn 40(l0): point = 33
   Insn 39(l0): point = 35
   Insn 37(l0): point = 38
   Insn 36(l0): point = 40
   Insn 33(l0): point = 43
   Insn 32(l0): point = 45
   Insn 30(l0): point = 47
   Insn 27(l0): point = 50
   Insn 26(l0): point = 52
   Insn 101(l0): point = 55
   Insn 19(l0): point = 58
   Insn 18(l0): point = 60
   Insn 16(l0): point = 62
   Insn 15(l0): point = 64
   Insn 13(l0): point = 67
   Insn 12(l0): point = 69
   Insn 10(l0): point = 71
   Insn 8(l0): point = 74
   Insn 7(l0): point = 76
   Insn 6(l0): point = 78
   Insn 2(l0): point = 80
 a0(r135): [13..15] [8..10] [3..5]
 a1(r152): [16..17]
 a2(r150): [18..19]
 a3(r149): [25..26]
 a4(r133): [27..47]
 a5(r148): [32..33]
 a6(r146): [34..35]
 a7(r137): [58..80] [48..54]
 a8(r134): [67..71] [53..54]
 a9(r142): [61..62]
 a10(r140): [63..64]
 a11(r138): [77..78]
Compressing live ranges: from 83 to 31 - 37%
Ranges after the compression:
 a0(r135): [4..5] [2..3] [0..1]
 a1(r152): [6..7]
 a2(r150): [8..9]
 a3(r149): [10..11]
 a4(r133): [12..17]
 a5(r148): [13..14]
 a6(r146): [15..16]
 a7(r137): [21..30] [18..20]
 a8(r134): [26..27] [19..20]
 a9(r142): [22..23]
 a10(r140): [24..25]
 a11(r138): [28..29]
+++Allocating 64 bytes for conflict table (uncompressed size 96)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r152,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r150,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r149,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r133,l0) conflicts: a5(r148,l0) a6(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r148,l0) conflicts: a4(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r146,l0) conflicts: a4(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r137,l0) conflicts: a8(r134,l0) a9(r142,l0) a10(r140,l0) a11(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r134,l0) conflicts: a7(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r142,l0) conflicts: a7(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r140,l0) conflicts: a7(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r138,l0) conflicts: a7(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r135)<->a1(r152)@125:shuffle
  cp1:a3(r149)<->a4(r133)@125:shuffle
  regions=1, blocks=15, points=31
    allocnos=12, copies=2, conflicts=6, ranges=16

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r135 1r152 2r150 3r149 4r133 5r148 6r146 7r137 8r134 9r142 10r140 11r138
    modified regnos: 133 134 135 137 138 140 142 146 148 149 150 152
    border:
    Pressure: GENERAL_REGS=3
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a11(r138,l0)
      Pushing a10(r140,l0)
      Pushing a9(r142,l0)
      Pushing a6(r146,l0)
      Pushing a5(r148,l0)
      Pushing a3(r149,l0)
      Pushing a2(r150,l0)
      Pushing a1(r152,l0)
      Pushing a8(r134,l0)
      Pushing a7(r137,l0)
      Pushing a4(r133,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 0
      Popping a4(r133,l0)  -- assign reg 3
      Popping a7(r137,l0)  -- assign reg 0
      Popping a8(r134,l0)  -- assign reg 3
      Popping a1(r152,l0)  -- assign reg 0
      Popping a2(r150,l0)  -- assign reg 3
      Popping a3(r149,l0)  -- assign reg 3
      Popping a5(r148,l0)  -- assign reg 2
      Popping a6(r146,l0)  -- assign reg 2
      Popping a9(r142,l0)  -- assign reg 3
      Popping a10(r140,l0)  -- assign reg 3
      Popping a11(r138,l0)  -- assign reg 3
Disposition:
    4:r133 l0     3    8:r134 l0     3    0:r135 l0     0    7:r137 l0     0
   11:r138 l0     3   10:r140 l0     3    9:r142 l0     3    6:r146 l0     2
    5:r148 l0     2    3:r149 l0     3    2:r150 l0     3    1:r152 l0     0
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 137
insn=6, live_throughout: 13, 14, 137, dead_or_set: 138
insn=7, live_throughout: 13, 14, 137, dead_or_set: 138
insn=8, live_throughout: 13, 14, 137, dead_or_set: 
insn=10, live_throughout: 13, 14, 137, dead_or_set: 134
insn=12, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=13, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=15, live_throughout: 13, 14, 137, dead_or_set: 140
insn=16, live_throughout: 13, 14, 137, dead_or_set: 140, 142
insn=18, live_throughout: 13, 14, 137, dead_or_set: 142
insn=19, live_throughout: 13, 14, 137, dead_or_set: 
insn=101, live_throughout: 13, 14, dead_or_set: 
insn=23, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=26, live_throughout: 13, 14, 137, dead_or_set: 134
insn=27, live_throughout: 13, 14, 137, dead_or_set: 
insn=28, live_throughout: 13, 14, 137, dead_or_set: 
insn=30, live_throughout: 13, 14, dead_or_set: 133, 137
insn=32, live_throughout: 13, 14, 133, dead_or_set: 
insn=33, live_throughout: 13, 14, 133, dead_or_set: 
insn=36, live_throughout: 13, 14, 133, dead_or_set: 
insn=37, live_throughout: 13, 14, 133, dead_or_set: 
insn=39, live_throughout: 13, 14, 133, dead_or_set: 146
insn=40, live_throughout: 13, 14, 133, dead_or_set: 146, 148
insn=42, live_throughout: 13, 14, 133, dead_or_set: 148
insn=43, live_throughout: 13, 14, 133, dead_or_set: 
insn=44, live_throughout: 13, 14, 133, dead_or_set: 
insn=46, live_throughout: 13, 14, dead_or_set: 133, 149
insn=47, live_throughout: 13, 14, dead_or_set: 149
insn=48, live_throughout: 13, 14, dead_or_set: 
insn=50, live_throughout: 13, 14, dead_or_set: 150
insn=51, live_throughout: 13, 14, dead_or_set: 150, 152
insn=53, live_throughout: 13, 14, dead_or_set: 135, 152
insn=103, live_throughout: 13, 14, 135, dead_or_set: 
insn=57, live_throughout: 13, 14, dead_or_set: 
insn=59, live_throughout: 13, 14, dead_or_set: 135
insn=105, live_throughout: 13, 14, 135, dead_or_set: 
insn=62, live_throughout: 13, 14, dead_or_set: 
insn=64, live_throughout: 13, 14, dead_or_set: 135
insn=65, live_throughout: 13, 14, 135, dead_or_set: 
insn=71, live_throughout: 13, 14, dead_or_set: 0, 135
insn=77, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 50 (nil))
changing reg in insn 30
changing reg in insn 36
changing reg in insn 32
changing reg in insn 46
changing reg in insn 10
changing reg in insn 26
changing reg in insn 12
changing reg in insn 53
changing reg in insn 64
changing reg in insn 59
changing reg in insn 71
changing reg in insn 2
changing reg in insn 30
changing reg in insn 10
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 15
changing reg in insn 16
changing reg in insn 16
changing reg in insn 18
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 42
changing reg in insn 46
changing reg in insn 47
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 53
deleting insn with uid = 2.
deleting insn with uid = 71.


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 12 failed.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 22 count 28 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 22 count 28 (  1.9)


elf_check_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={5d,6u} r1={1d} r2={3d,2u} r3={8d,10u} r12={1d} r13={1d,14u} r14={1d,1u} r24={8d,8u} 
;;    total ref usage 69{28d,41u,0e} in 33{33 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/elf.c:12 (set (reg:SI 3 r3 [orig:138 <variable>.e_machine ] [138])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 0 r0 [orig:137 x ] [137])
                    (const_int 18 [0x12])) [0 <variable>.e_machine+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 7 6 8 2 arch/arm/kernel/elf.c:12 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:138 <variable>.e_machine ] [138])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/elf.c:12 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  12 [62.2%] 
;; Succ edge  3 [37.8%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn 10 11 12 3 arch/arm/kernel/elf.c:16 (set (reg:SI 3 r3 [orig:134 D.14873 ] [134])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 x ] [137])
                (const_int 24 [0x18])) [0 <variable>.e_entry+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 10 13 3 arch/arm/kernel/elf.c:16 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:134 D.14873 ] [134])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/elf.c:16 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 14 13 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 14 15 4 NOTE_INSN_DELETED)

(insn 15 17 16 4 arch/arm/kernel/elf.c:17 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn 16 15 18 4 arch/arm/kernel/elf.c:17 (set (reg:SI 3 r3 [orig:142 elf_hwcap ] [142])
        (mem/c/i:SI (reg/f:SI 3 r3 [140]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 18 16 19 4 arch/arm/kernel/elf.c:17 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:142 elf_hwcap ] [142])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 19 18 100 4 arch/arm/kernel/elf.c:17 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  7 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%]  (fallthru)
(note 100 19 101 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 101 100 102 5 (set (pc)
        (label_ref 57)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 12)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 102 101 23)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 23 102 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 25 24 26 6 NOTE_INSN_DELETED)

(insn 26 25 27 6 arch/arm/kernel/elf.c:19 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:134 D.14873 ] [134])
                (const_int 2 [0x2])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 27 26 28 6 arch/arm/kernel/elf.c:19 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 6 -> ( 12 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  12 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  6 [61.0%]  (fallthru)
;; Pred edge  4 [61.0%] 
(code_label 28 27 29 7 4 "" [1 uses])

(note 29 28 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 31 29 30 7 NOTE_INSN_DELETED)

(insn 30 31 32 7 arch/arm/kernel/elf.c:22 (set (reg/v:SI 3 r3 [orig:133 eflags ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 x ] [137])
                (const_int 36 [0x24])) [0 <variable>.e_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 30 33 7 arch/arm/kernel/elf.c:23 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:133 eflags ] [133])
                        (const_int -16777216 [0xffffffffff000000]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 33 32 34 7 arch/arm/kernel/elf.c:23 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 13)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 35 34 36 8 NOTE_INSN_DELETED)

(insn 36 35 37 8 arch/arm/kernel/elf.c:27 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 eflags ] [133])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 37 36 38 8 arch/arm/kernel/elf.c:27 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 38 37 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 41 38 39 9 NOTE_INSN_DELETED)

(insn 39 41 40 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg/f:SI 2 r2 [146])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn 40 39 42 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg:SI 2 r2 [orig:148 elf_hwcap ] [148])
        (mem/c/i:SI (reg/f:SI 2 r2 [146]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 42 40 43 9 arch/arm/kernel/elf.c:27 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:148 elf_hwcap ] [148])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 43 42 44 9 arch/arm/kernel/elf.c:27 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 9 -> ( 12 10)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  12 [39.0%] 
;; Succ edge  10 [61.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [61.0%]  (fallthru)
(code_label 44 43 45 10 6 "" [1 uses])

(note 45 44 46 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 10 arch/arm/kernel/elf.c:30 (set (reg:SI 3 r3 [149])
        (and:SI (reg/v:SI 3 r3 [orig:133 eflags ] [133])
            (const_int 1536 [0x600]))) 67 {*arm_andsi3_insn} (nil))

(insn 47 46 48 10 arch/arm/kernel/elf.c:30 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [149])
            (const_int 1024 [0x400]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 10 arch/arm/kernel/elf.c:30 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 10 -> ( 11 13)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  10 [28.0%]  (fallthru)
(note 49 48 52 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 52 49 50 11 NOTE_INSN_DELETED)

(insn 50 52 51 11 arch/arm/kernel/elf.c:13 (set (reg/f:SI 3 r3 [150])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn 51 50 53 11 arch/arm/kernel/elf.c:13 (set (reg:SI 0 r0 [orig:152 elf_hwcap ] [152])
        (mem/c/i:SI (reg/f:SI 3 r3 [150]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 53 51 103 11 arch/arm/kernel/elf.c:13 (set (reg:SI 0 r0 [orig:135 D.14872 ] [135])
        (zero_extract:SI (reg:SI 0 r0 [orig:152 elf_hwcap ] [152])
            (const_int 1 [0x1])
            (const_int 6 [0x6]))) 124 {extzv_t2} (nil))

(jump_insn 103 53 104 11 (set (pc)
        (label_ref 65)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%] 

(barrier 104 103 57)

;; Start of basic block ( 2 9 6 5) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [62.2%] 
;; Pred edge  9 [39.0%] 
;; Pred edge  6 [39.0%] 
;; Pred edge  5 [100.0%] 
(code_label 57 104 58 12 2 "" [4 uses])

(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 105 12 arch/arm/kernel/elf.c:13 (set (reg:SI 0 r0 [orig:135 D.14872 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 105 59 106 12 (set (pc)
        (label_ref 65)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%] 

(barrier 106 105 62)

;; Start of basic block ( 10 7) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  10 [72.0%] 
;; Pred edge  7 [50.0%] 
(code_label 62 106 63 13 5 "" [2 uses])

(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 13 arch/arm/kernel/elf.c:36 (set (reg:SI 0 r0 [orig:135 D.14872 ] [135])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 11 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
(code_label 65 64 66 14 7 "" [2 uses])

(note 66 65 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 77 66 107 14 arch/arm/kernel/elf.c:37 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 107 77 108 NOTE_INSN_DELETED)

(note 108 107 0 NOTE_INSN_DELETED)


;; Function arm_elf_read_implies_exec (arm_elf_read_implies_exec)[0:795]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 32(l0): point = 0
   Insn 26(l0): point = 2
   Insn 18(l0): point = 5
   Insn 15(l0): point = 7
   Insn 36(l0): point = 10
   Insn 10(l0): point = 12
   Insn 8(l0): point = 15
   Insn 7(l0): point = 17
 a0(r134): [10..12] [3..5]
Compressing live ranges: from 20 to 4 - 20%
Ranges after the compression:
 a0(r134): [2..3] [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=6, points=4
    allocnos=1, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r134
    modified regnos: 134
    border:
    Pressure: GENERAL_REGS=2
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 0
Disposition:
    0:r134 l0     0
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, 14, dead_or_set: 1
insn=8, live_throughout: 13, 14, dead_or_set: 
insn=10, live_throughout: 13, 14, dead_or_set: 134
insn=36, live_throughout: 13, 14, 134, dead_or_set: 
insn=13, live_throughout: 13, dead_or_set: 
insn=15, live_throughout: 13, dead_or_set: 0, 14
insn=18, live_throughout: 13, 14, dead_or_set: 0, 134
insn=20, live_throughout: 13, 14, 134, dead_or_set: 
insn=26, live_throughout: 13, 14, dead_or_set: 0, 134
insn=32, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 18
changing reg in insn 10
changing reg in insn 26
deleting insn with uid = 26.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


arm_elf_read_implies_exec

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={2d,1u} r2={2d} r3={2d} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 140{128d,12u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/elf.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ executable_stack ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/elf.c:77 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1990 [0x7c6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  3 [80.1%]  (fallthru)
;; Succ edge  4 [19.9%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [80.1%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 36 3 arch/arm/kernel/elf.c:78 (set (reg:SI 0 r0 [orig:134 D.14939 ] [134])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 36 10 37 3 (set (pc)
        (label_ref 20)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 37 36 13)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  2 [19.9%] 
(code_label 13 37 14 4 13 "" [1 uses])

(note 14 13 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 16 14 17 4 NOTE_INSN_DELETED)

(note 17 16 15 4 NOTE_INSN_DELETED)

(call_insn 15 17 18 4 arch/arm/kernel/elf.c:79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 18 15 20 4 arch/arm/kernel/elf.c:78 (parallel [
            (set (reg:SI 0 r0 [orig:134 D.14939 ] [134])
                (le:SI (reg:SI 0 r0)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 20 18 21 5 14 "" [1 uses])

(note 21 20 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 21 38 5 arch/arm/kernel/elf.c:82 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 38 32 39 NOTE_INSN_DELETED)

(note 39 38 0 NOTE_INSN_DELETED)


;; Function elf_set_personality (elf_set_personality)[0:794]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a8(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a8(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 60(l0): point = 0
   Insn 73(l0): point = 2
   Insn 58(l0): point = 4
   Insn 72(l0): point = 6
   Insn 51(l0): point = 9
   Insn 75(l0): point = 11
   Insn 49(l0): point = 13
   Insn 74(l0): point = 15
   Insn 44(l0): point = 18
   Insn 43(l0): point = 20
   Insn 77(l0): point = 22
   Insn 76(l0): point = 24
   Insn 39(l0): point = 27
   Insn 38(l0): point = 29
   Insn 36(l0): point = 31
   Insn 35(l0): point = 33
   Insn 32(l0): point = 36
   Insn 31(l0): point = 38
   Insn 29(l0): point = 41
   Insn 28(l0): point = 43
   Insn 27(l0): point = 45
   Insn 26(l0): point = 47
   Insn 80(l0): point = 49
   Insn 79(l0): point = 51
   Insn 20(l0): point = 54
   Insn 70(l0): point = 57
   Insn 15(l0): point = 59
   Insn 13(l0): point = 62
   Insn 12(l0): point = 64
   Insn 9(l0): point = 67
   Insn 8(l0): point = 69
   Insn 6(l0): point = 71
 a0(r148): [21..24]
 a1(r137): [23..71]
 a2(r147): [30..31]
 a3(r145): [32..33]
 a4(r136): [57..59] [39..54]
 a5(r144): [44..45]
 a6(r143): [46..47]
 a7(r141): [48..51]
 a8(r139): [60..69]
Compressing live ranges: from 74 to 20 - 27%
Ranges after the compression:
 a0(r148): [0..2]
 a1(r137): [1..19]
 a2(r147): [3..4]
 a3(r145): [5..6]
 a4(r136): [15..16] [7..14]
 a5(r144): [8..9]
 a6(r143): [10..11]
 a7(r141): [12..13]
 a8(r139): [17..18]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r148,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a0(r148,l0) a2(r147,l0) a3(r145,l0) a4(r136,l0) a5(r144,l0) a6(r143,l0) a7(r141,l0) a8(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r147,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r145,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r136,l0) conflicts: a1(r137,l0) a5(r144,l0) a6(r143,l0) a7(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r144,l0) conflicts: a1(r137,l0) a4(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r143,l0) conflicts: a1(r137,l0) a4(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r141,l0) conflicts: a1(r137,l0) a4(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r139,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a4(r136)<->a8(r139)@1000:move
  regions=1, blocks=12, points=20
    allocnos=9, copies=1, conflicts=4, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r148 1r137 2r147 3r145 4r136 5r144 6r143 7r141 8r139
    modified regnos: 136 137 139 141 143 144 145 147 148
    border:
    Pressure: GENERAL_REGS=4
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
      Pushing a8(r139,l0)
      Pushing a6(r143,l0)
      Pushing a5(r144,l0)
      Pushing a3(r145,l0)
      Pushing a2(r147,l0)
      Pushing a7(r141,l0)
      Pushing a4(r136,l0)
      Pushing a0(r148,l0)
      Pushing a1(r137,l0)
      Popping a1(r137,l0)  -- assign reg 4
      Popping a0(r148,l0)  -- assign reg 3
      Popping a4(r136,l0)  -- assign reg 0
      Popping a7(r141,l0)  -- assign reg 3
      Popping a2(r147,l0)  -- assign reg 3
      Popping a3(r145,l0)  -- assign reg 3
      Popping a5(r144,l0)  -- assign reg 3
      Popping a6(r143,l0)  -- assign reg 3
      Popping a8(r139,l0)  -- assign reg 0
Disposition:
    4:r136 l0     0    1:r137 l0     4    8:r139 l0     0    7:r141 l0     3
    6:r143 l0     3    5:r144 l0     3    3:r145 l0     3    2:r147 l0     3
    0:r148 l0     3
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, 14, dead_or_set: 0, 137
insn=8, live_throughout: 13, 14, 137, dead_or_set: 139
insn=9, live_throughout: 13, 14, 137, 139, dead_or_set: 
insn=12, live_throughout: 13, 14, 137, 139, dead_or_set: 
insn=13, live_throughout: 13, 14, 137, 139, dead_or_set: 
insn=15, live_throughout: 13, 14, 137, dead_or_set: 136, 139
insn=70, live_throughout: 13, 14, 136, 137, dead_or_set: 
insn=18, live_throughout: 13, 14, 137, dead_or_set: 
insn=20, live_throughout: 13, 14, 137, dead_or_set: 136
insn=21, live_throughout: 13, 14, 136, 137, dead_or_set: 
insn=79, live_throughout: 13, 14, 136, 137, dead_or_set: 141
insn=80, live_throughout: 13, 14, 136, 137, dead_or_set: 141
insn=26, live_throughout: 13, 14, 136, 137, dead_or_set: 141, 143
insn=27, live_throughout: 13, 14, 136, 137, dead_or_set: 143, 144
insn=28, live_throughout: 13, 14, 136, 137, dead_or_set: 144
insn=29, live_throughout: 13, 14, 136, 137, dead_or_set: 
insn=31, live_throughout: 13, 137, dead_or_set: 0, 136
insn=32, live_throughout: 13, 137, dead_or_set: 0, 14
insn=33, live_throughout: 13, 14, 137, dead_or_set: 
insn=35, live_throughout: 13, 14, 137, dead_or_set: 145
insn=36, live_throughout: 13, 14, 137, dead_or_set: 145, 147
insn=38, live_throughout: 13, 14, 137, dead_or_set: 147
insn=39, live_throughout: 13, 14, 137, dead_or_set: 
insn=76, live_throughout: 13, 14, 137, dead_or_set: 148
insn=77, live_throughout: 13, 14, dead_or_set: 137, 148
insn=43, live_throughout: 13, 14, dead_or_set: 148
insn=44, live_throughout: 13, 14, dead_or_set: 
insn=74, live_throughout: 13, 14, dead_or_set: 1
insn=49, live_throughout: 1, 13, 14, dead_or_set: 0
insn=75, live_throughout: 0, 13, 14, dead_or_set: 1
insn=51, live_throughout: 13, 14, dead_or_set: 0, 1
insn=53, live_throughout: 13, 14, dead_or_set: 
insn=72, live_throughout: 13, 14, dead_or_set: 1
insn=58, live_throughout: 1, 13, 14, dead_or_set: 0
insn=73, live_throughout: 0, 13, 14, dead_or_set: 1
insn=60, live_throughout: 13, 14, dead_or_set: 0, 1
init_insns for 145: (insn_list:REG_DEP_TRUE 35 (nil))
changing reg in insn 15
changing reg in insn 20
changing reg in insn 31
changing reg in insn 28
changing reg in insn 6
changing reg in insn 77
changing reg in insn 12
changing reg in insn 8
changing reg in insn 8
changing reg in insn 8
changing reg in insn 15
changing reg in insn 80
changing reg in insn 79
changing reg in insn 80
changing reg in insn 26
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 28
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 38
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 43
Spilling for insn 79.
Using reg 2 for reload 0
Spilling for insn 74.
Using reg 3 for reload 0
Spilling for insn 72.
Using reg 3 for reload 0
Spilling for insn 79.
Using reg 2 for reload 0
Spilling for insn 74.
Using reg 3 for reload 0
Spilling for insn 72.
Using reg 3 for reload 0

Reloads for insn # 79
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 74
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 72
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)
deleting insn with uid = 15.
deleting insn with uid = 31.


try_optimize_cfg iteration 1

Simplifying condjump 13 around jump 70
deleting insn with uid = 14.
deleting insn with uid = 70.
deleting insn with uid = 71.
deleting block 4


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 60.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 19 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 20 (  1.8)


elf_set_personality

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,5u} r1={8d,4u} r2={6d,2u} r3={13d,9u} r4={1d,4u} r12={4d} r13={1d,16u} r14={2d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={8d,5u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 427{381d,46u,0e} in 32{29 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 6 2 NOTE_INSN_DELETED)

(insn 6 7 8 2 arch/arm/kernel/elf.c:42 (set (reg/v:SI 4 r4 [orig:137 eflags ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ x ])
                (const_int 36 [0x24])) [0 <variable>.e_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 6 9 2 arch/arm/kernel/elf.c:48 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 4 r4 [orig:137 eflags ] [137])
                        (const_int -16777216 [0xffffffffff000000]))
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [139])
                (and:SI (reg/v:SI 4 r4 [orig:137 eflags ] [137])
                    (const_int -16777216 [0xffffffffff000000])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/elf.c:48 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 10 12 3 NOTE_INSN_DELETED)

(insn 12 11 13 3 arch/arm/kernel/elf.c:49 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:137 eflags ] [137])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 13 12 18 3 arch/arm/kernel/elf.c:49 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 6 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%]  (fallthru)
(code_label 18 13 19 5 17 "" [1 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 arch/arm/kernel/elf.c:43 (set (reg/v:SI 0 r0 [orig:136 personality ] [136])
        (const_int 8388608 [0x800000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8388608 [0x800000])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  3 [50.0%] 
(code_label 21 20 22 6 18 "" [1 uses])

(note 22 21 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 24 22 82 6 NOTE_INSN_DELETED)

(insn 82 24 79 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 79 82 80 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 80 79 26 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 3 r3 [141])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 80 27 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:143 <variable>.task ] [143])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [141])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [orig:144 <variable>.personality ] [144])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:143 <variable>.task ] [143])
                (const_int 524 [0x20c])) [0 <variable>.personality+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:144 <variable>.personality ] [144])
            (reg/v:SI 0 r0 [orig:136 personality ] [136]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4877 [0x130d])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  7 [51.2%]  (fallthru)
;; Succ edge  8 [48.8%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [51.2%]  (fallthru)
(note 30 29 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 32 30 33 7 arch/arm/kernel/elf.c:53 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__set_personality") [flags 0x41] <function_decl 0x10ffbd00 __set_personality>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [48.8%] 
(code_label 33 32 34 8 19 "" [1 uses])

(note 34 33 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 37 34 35 8 NOTE_INSN_DELETED)

(insn 35 37 36 8 arch/arm/kernel/elf.c:61 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>)
        (nil)))

(insn 36 35 38 8 arch/arm/kernel/elf.c:61 (set (reg:SI 3 r3 [orig:147 elf_hwcap ] [147])
        (mem/c/i:SI (reg/f:SI 3 r3 [145]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512ba240 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 38 36 39 8 arch/arm/kernel/elf.c:61 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:147 elf_hwcap ] [147])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 39 38 40 8 arch/arm/kernel/elf.c:61 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  9 [71.0%]  (fallthru)
;; Succ edge  11 [29.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [71.0%]  (fallthru)
(note 40 39 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 76 40 77 9 arch/arm/kernel/elf.c:62 (set (reg:SI 3 r3 [148])
        (const_int -16776704 [0xffffffffff000200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -16776704 [0xffffffffff000200])
        (nil)))

(insn 77 76 43 9 arch/arm/kernel/elf.c:62 (set (reg:SI 3 r3 [148])
        (and:SI (reg/v:SI 4 r4 [orig:137 eflags ] [137])
            (reg:SI 3 r3 [148]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 77 44 9 arch/arm/kernel/elf.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 9 arch/arm/kernel/elf.c:62 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  10 [20.7%]  (fallthru)
;; Succ edge  11 [79.3%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	

;; Pred edge  9 [20.7%]  (fallthru)
(note 45 44 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 47 45 48 10 NOTE_INSN_DELETED)

(note 48 47 83 10 NOTE_INSN_DELETED)

(insn 83 48 74 10 include/linux/thread_info.h:64 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 74 83 49 10 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 49 74 75 10 include/linux/thread_info.h:64 (set (reg:SI 0 r0)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(insn 75 49 51 10 include/linux/thread_info.h:64 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(call_insn/j 51 75 52 10 include/linux/thread_info.h:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 52 51 53)

;; Start of basic block ( 9 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  9 [79.3%] 
;; Pred edge  8 [29.0%] 
(code_label 53 52 54 11 20 "" [2 uses])

(note 54 53 56 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 56 54 57 11 NOTE_INSN_DELETED)

(note 57 56 84 11 NOTE_INSN_DELETED)

(insn 84 57 72 11 include/linux/thread_info.h:69 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 72 84 58 11 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 72 73 11 include/linux/thread_info.h:69 (set (reg:SI 0 r0)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(insn 73 58 60 11 include/linux/thread_info.h:69 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(call_insn/j 60 73 61 11 include/linux/thread_info.h:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 61 60 81)

(note 81 61 0 NOTE_INSN_DELETED)

