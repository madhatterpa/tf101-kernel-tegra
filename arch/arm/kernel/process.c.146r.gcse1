
;; Function disable_hlt (disable_hlt)[0:1338]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(11){ }u10(13){ }u11(14){ }u12(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 4 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


disable_hlt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,2u} 
;;    total ref usage 25{13d,12u,0e} in 4{4 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/process.c:80 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/process.c:80 (set (reg:SI 134 [ hlt_counter.325 ])
        (mem/v/c/i:SI (reg/f:SI 135) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/process.c:80 (set (reg:SI 133 [ hlt_counter.326 ])
        (plus:SI (reg:SI 134 [ hlt_counter.325 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 134 [ hlt_counter.325 ])
        (nil)))

(insn 9 7 0 2 arch/arm/kernel/process.c:80 (set (mem/v/c/i:SI (reg/f:SI 135) [0 hlt_counter+0 S4 A32])
        (reg:SI 133 [ hlt_counter.326 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 133 [ hlt_counter.326 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function enable_hlt (enable_hlt)[0:1339]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(11){ }u10(13){ }u11(14){ }u12(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 4 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


enable_hlt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,2u} 
;;    total ref usage 25{13d,12u,0e} in 4{4 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/process.c:87 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/process.c:87 (set (reg:SI 134 [ hlt_counter.327 ])
        (mem/v/c/i:SI (reg/f:SI 135) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/process.c:87 (set (reg:SI 133 [ hlt_counter.328 ])
        (plus:SI (reg:SI 134 [ hlt_counter.327 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 134 [ hlt_counter.327 ])
        (nil)))

(insn 9 7 0 2 arch/arm/kernel/process.c:87 (set (mem/v/c/i:SI (reg/f:SI 135) [0 hlt_counter+0 S4 A32])
        (reg:SI 133 [ hlt_counter.328 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 133 [ hlt_counter.328 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function nohlt_setup (nohlt_setup)[0:1340] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ }u10(11){ }u11(13){ }u12(14){ }u13(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 5 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


nohlt_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,2u} 
;;    total ref usage 26{13d,13u,0e} in 5{5 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/process.c:94 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:94 (set (reg:SI 136)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 13 2 arch/arm/kernel/process.c:94 (set (mem/v/c/i:SI (reg/f:SI 135) [0 hlt_counter+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 13 8 19 2 arch/arm/kernel/process.c:96 (set (reg/i:SI 0 r0)
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 19 13 0 2 arch/arm/kernel/process.c:96 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hlt_setup (hlt_setup)[0:1341] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 135 136
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u8(0){ }u9(11){ }u10(13){ }u11(14){ }u12(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 6 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


hlt_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 27{14d,13u,0e} in 6{6 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/process.c:100 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:100 (set (reg:SI 136)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/process.c:100 (set (mem/v/c/i:SI (reg/f:SI 135) [0 hlt_counter+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 9 8 13 2 arch/arm/kernel/process.c:102 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 13 9 19 2 arch/arm/kernel/process.c:102 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 19 13 0 2 arch/arm/kernel/process.c:102 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_machine_flush_console (arm_machine_flush_console)[0:1342]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(11){ }u5(13){ }u6(14){ }u7(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


arm_machine_flush_console

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_nothing (do_nothing)[0:1344]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(11){ }u5(13){ }u6(14){ }u7(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


do_nothing

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function default_idle (default_idle)[0:1346]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136
;; live  kill	 24 [cc]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(11){ }u10(13){ }u11(14){ }u12(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 6 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


default_idle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp] 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,3u,1d} r14={1d,1u} r24={1d} r25={1d,2u} r26={1d,1u} r134={1d} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 26{14d,11u,1e} in 4{4 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 136
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 include/linux/thread_info.h:84 (set (reg:SI 136)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 6 8 2 include/linux/thread_info.h:84 (set (reg/f:SI 135 [ D.26267 ])
        (and:SI (reg:SI 136)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 8 7 9 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 134 [ D.26270 ])
        (mem/v:SI (reg/f:SI 135 [ D.26267 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.26267 ])
        (expr_list:REG_UNUSED (reg:SI 134 [ D.26270 ])
            (nil))))

(insn 9 8 0 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function reboot_setup (reboot_setup)[0:1348] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u11(0){ }u12(11){ }u13(13){ }u14(14){ }u15(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 7 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


reboot_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 30{15d,15u,0e} in 7{7 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/process.c:259 (set (reg/v/f:SI 134 [ str ])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ str ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/process.c:260 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/process.c:260 (set (reg:SI 136)
        (zero_extend:SI (mem:QI (reg/v/f:SI 134 [ str ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 134 [ str ])
        (nil)))

(insn 9 7 10 2 arch/arm/kernel/process.c:260 (set (mem/c/i:QI (reg/f:SI 135) [0 reboot_mode+0 S1 A8])
        (subreg:QI (reg:SI 136) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_DEAD (reg/f:SI 135)
            (nil))))

(insn 10 9 14 2 arch/arm/kernel/process.c:262 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 14 10 20 2 arch/arm/kernel/process.c:262 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 20 14 0 2 arch/arm/kernel/process.c:262 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function release_thread (release_thread)[0:1359]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(11){ }u5(13){ }u6(14){ }u7(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


release_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_task_regs (dump_task_regs)[0:1361]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d28(25){ }d29(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u19(0){ }u20(11){ }u21(13){ }u22(14){ }u23(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 15 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


dump_task_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u,1d} r137={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 162{138d,23u,1e} in 13{12 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/process.c:503 (set (reg/v/f:SI 134 [ t ])
        (reg:SI 0 r0 [ t ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ t ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/process.c:503 (set (reg/v/f:SI 135 [ elfregs ])
        (reg:SI 1 r1 [ elfregs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ elfregs ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 include/linux/elfcore.h:112 (set (reg/f:SI 136 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 134 [ t ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ t ])
        (nil)))

(insn 8 7 10 2 include/linux/elfcore.h:112 (set (reg:SI 137)
        (const_int 8112 [0x1fb0])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 include/linux/elfcore.h:112 (set (reg:SI 139)
        (plus:SI (reg/f:SI 136 [ <variable>.stack ])
            (reg:SI 137))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_DEAD (reg/f:SI 136 [ <variable>.stack ])
            (expr_list:REG_EQUAL (plus:SI (reg/f:SI 136 [ <variable>.stack ])
                    (const_int 8112 [0x1fb0]))
                (nil)))))

(insn 11 10 12 2 include/linux/elfcore.h:112 (set (reg:SI 140)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/elfcore.h:112 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ elfregs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ elfregs ])
        (nil)))

(insn 13 12 14 2 include/linux/elfcore.h:112 (set (reg:SI 1 r1)
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 14 13 15 2 include/linux/elfcore.h:112 (set (reg:SI 2 r2)
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int 72 [0x48])
            (nil))))

(call_insn 15 14 17 2 include/linux/elfcore.h:112 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 17 15 21 2 arch/arm/kernel/process.c:506 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 21 17 27 2 arch/arm/kernel/process.c:506 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 27 21 0 2 arch/arm/kernel/process.c:506 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_vma_name (arch_vma_name)[0:1367]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	

Successors:  4 [77.8%]  3 [22.2%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2222, maybe hot.
Predecessors:  2 [22.2%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 7778, maybe hot.
Predecessors:  2 [77.8%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 3 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ }u24(11){ }u25(13){ }u26(14){ }u27(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 136 in basic block 4
Found 1 implicit sets
SET hash table (11 buckets, 3 entries)
Index 0 (hash value 1)
  (set (reg/f:SI 133 [ D.26176 ])
    (const_int 0 [0x0]))
Index 1 (hash value 4)
  (set (reg:SI 136 [ <variable>.vm_start ])
    (const_int -65536 [0xffffffffffff0000]))
Index 2 (hash value 1)
  (set (reg/f:SI 133 [ D.26176 ])
    (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>))


CPROP of arch_vma_name, pass 1: 3080 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 2 entries)
Index 0 (hash value 1)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ vma ])
        (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])
Index 1 (hash value 6)
  (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>)

hoisting vbeinout computation: 2 passes


Implicit set of reg 136 in basic block 4
Found 1 implicit sets
SET hash table (11 buckets, 3 entries)
Index 0 (hash value 1)
  (set (reg/f:SI 133 [ D.26176 ])
    (const_int 0 [0x0]))
Index 1 (hash value 4)
  (set (reg:SI 136 [ <variable>.vm_start ])
    (const_int -65536 [0xffffffffffff0000]))
Index 2 (hash value 1)
  (set (reg/f:SI 133 [ D.26176 ])
    (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>))


CPROP of arch_vma_name, pass 2: 7296 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of arch_vma_name: 6 basic blocks, 1 pass, 5128 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 4 sets: 2 
;; Following path with 1 sets: 3 
;; Following path with 1 sets: 4 
;; Following path with 2 sets: 5 
starting the processing of deferred insns
ending the processing of deferred insns


arch_vma_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={2d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 43{16d,27u,0e} in 8{8 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/process.c:625 (set (reg/v/f:SI 135 [ vma ])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vma ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/process.c:626 (set (reg:SI 136 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ vma ])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/process.c:626 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ <variable>.vm_start ])
            (const_int -65536 [0xffffffffffff0000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ <variable>.vm_start ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/process.c:626 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7778 [0x1e62])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  4 [77.8%] 
;; Succ edge  3 [22.2%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [22.2%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 13 3 arch/arm/kernel/process.c:626 discrim 2 (set (reg/f:SI 133 [ D.26176 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [77.8%] 
(code_label 13 10 14 4 32 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 4 arch/arm/kernel/process.c:626 discrim 1 (set (reg/f:SI 133 [ D.26176 ])
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115b6c60>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 16 15 17 5 33 "" [0 uses])

(note 17 16 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 17 28 5 arch/arm/kernel/process.c:627 (set (reg/i:SI 0 r0)
        (reg/f:SI 133 [ D.26176 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ D.26176 ])
        (nil)))

(insn 28 22 0 5 arch/arm/kernel/process.c:627 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vectors_user_mapping (vectors_user_mapping)[0:1366]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 137 138 139 140
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u22(0){ }u23(11){ }u24(13){ }u25(14){ }u26(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 14 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


vectors_user_mapping

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,5u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 159{136d,22u,1e} in 12{11 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 137 138 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 arch/arm/kernel/process.c:617 (set (reg:SI 137)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:617 (set (reg:SI 136)
        (and:SI (reg:SI 137)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/process.c:617 (set (reg/f:SI 138 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 136)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/process.c:617 (set (reg:SI 139)
        (const_int 67633237 [0x4080055])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/process.c:617 (set (reg:SI 140)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/process.c:617 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 12 11 13 2 arch/arm/kernel/process.c:617 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ <variable>.task ])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ <variable>.task ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/process.c:617 (set (reg:SI 1 r1)
        (const_int -65536 [0xffffffffffff0000])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/process.c:617 (set (reg:SI 2 r2)
        (const_int 4096 [0x1000])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/process.c:617 (set (reg:SI 3 r3)
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 67633237 [0x4080055])
            (nil))))

(call_insn 16 15 28 2 arch/arm/kernel/process.c:617 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("install_special_mapping") [flags 0x41] <function_decl 0x11145500 install_special_mapping>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 28 16 0 2 arch/arm/kernel/process.c:622 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_randomize_brk (arch_randomize_brk)[0:1365]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 136 137
;; live  kill	 14 [lr]

Successors:  4 [39.0%]  3 [61.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 133
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [39.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u28(0){ }u29(11){ }u30(13){ }u31(14){ }u32(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 133 in basic block 3
Found 1 implicit sets
SET hash table (11 buckets, 0 entries)

CPROP of arch_randomize_brk, pass 1: 2884 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 2 entries)
Index 0 (hash value 3)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ mm ])
        (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])
Index 1 (hash value 7)
  (plus:SI (reg:SI 134 [ D.26158 ])
    (const_int 33554432 [0x2000000]))

hoisting vbeinout computation: 2 passes


Implicit set of reg 133 in basic block 3
Found 1 implicit sets
SET hash table (11 buckets, 0 entries)

CPROP of arch_randomize_brk, pass 2: 6832 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of arch_randomize_brk: 5 basic blocks, 1 pass, 4940 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 12 sets: 2 
;; Following path with 1 sets: 3 
;; Following path with 2 sets: 4 
starting the processing of deferred insns
ending the processing of deferred insns


arch_randomize_brk

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,2u} r134={1d,2u} r136={1d,2u} r137={1d,1u} 
;;    total ref usage 169{137d,32u,0e} in 13{12 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 136 137
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/process.c:602 (set (reg/v/f:SI 136 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/process.c:603 (set (reg:SI 134 [ D.26158 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ mm ])
                (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:604 (set (reg:SI 137)
        (plus:SI (reg:SI 134 [ D.26158 ])
            (const_int 33554432 [0x2000000]))) 4 {*arm_addsi3} (nil))

(insn 8 7 9 2 arch/arm/kernel/process.c:604 (set (reg:SI 0 r0)
        (reg:SI 134 [ D.26158 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.26158 ])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/process.c:604 (set (reg:SI 1 r1)
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/process.c:604 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 10 12 2 arch/arm/kernel/process.c:604 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("randomize_range") [flags 0x41] <function_decl 0x11401c80 randomize_range>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 13 2 arch/arm/kernel/process.c:604 (set (reg:SI 133 [ D.26161 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/process.c:604 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.26161 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/process.c:604 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136


;; Succ edge  4 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 133
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 arch/arm/kernel/process.c:604 discrim 2 (set (reg:SI 133 [ D.26161 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ mm ])
                (const_int 148 [0x94])) [0 <variable>.brk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ mm ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 42 "" [1 uses])

(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 18 29 4 arch/arm/kernel/process.c:605 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.26161 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.26161 ])
        (nil)))

(insn 29 23 0 4 arch/arm/kernel/process.c:605 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function get_wchan (get_wchan)[0:1364]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 27 (  2.1)

13 basic blocks, 18 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 2323, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d22(14){ }d49(25){ }d50(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 2323, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141
;; live  kill	

Successors:  11 [10.1%]  3 [89.9%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2087, maybe hot.
Predecessors:  2 [89.9%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 142 143 144
;; live  kill	

Successors:  11 [10.1%]  4 [89.9%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1876, maybe hot.
Predecessors:  3 [89.9%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 139
;; live  kill	

Successors:  11 [39.0%]  5 [61.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1144, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 136 145 146 148 149 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 136 145 146 148 149 151
;; live  kill	

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 24 [cc] 135 152
;; live  kill	 14 [lr]

Successors:  11 [3.0%]  7 [97.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 9700, maybe hot.
Predecessors:  6 [97.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 24 [cc] 137
;; live  kill	 14 [lr]

Successors:  8 [3.0%]  (fallthru) 9 [97.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 291, maybe hot.
Predecessors:  7 [3.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138


Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 9409, maybe hot.
Predecessors:  7 [97.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [94.1%]  (fallthru) 11 [5.9%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 8856, maybe hot.
Predecessors:  9 [94.1%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 136
;; live  kill	

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2032, maybe hot.
Predecessors:  3 [10.1%]  6 [3.0%]  4 [39.0%]  9 [5.9%]  2 [10.1%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 2323, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 8 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 2323, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u94(0){ }u95(11){ }u96(13){ }u97(14){ }u98(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 137 in basic block 8
Found 1 implicit sets
SET hash table (11 buckets, 4 entries)
Index 0 (hash value 6)
  (set (reg:SI 149)
    (const_int 0 [0x0]))
Index 1 (hash value 4)
  (set (reg/v:SI 136 [ count ])
    (reg:SI 149))
Index 2 (hash value 5)
  (set (reg:SI 137 [ D.26150 ])
    (const_int 0 [0x0]))
Index 3 (hash value 6)
  (set (reg:SI 138 [ D.26140 ])
    (const_int 0 [0x0]))


CPROP of get_wchan, pass 1: 3752 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 10 entries)
Index 0 (hash value 9)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8129 [0xffffffffffffe03f]))
Index 1 (hash value 1)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8192 [0xffffffffffffe000]))
Index 2 (hash value 5)
  (mem/s/f/j:SI (plus:SI (reg:SI 142)
        (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
Index 3 (hash value 7)
  (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ p ])
        (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])
Index 4 (hash value 8)
  (mem/s/j:SI (plus:SI (reg/f:SI 145 [ <variable>.stack ])
        (const_int 56 [0x38])) [0 <variable>.cpu_context.fp+0 S4 A64])
Index 5 (hash value 1)
  (mem/s/j:SI (plus:SI (reg/f:SI 145 [ <variable>.stack ])
        (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])
Index 6 (hash value 5)
  (mem/s/j:SI (plus:SI (reg/f:SI 145 [ <variable>.stack ])
        (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])
Index 7 (hash value 4)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
Index 8 (hash value 4)
  (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
        (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
Index 9 (hash value 0)
  (plus:SI (reg/v:SI 136 [ count ])
    (const_int 1 [0x1]))

hoisting vbeinout computation: 3 passes


rescanning insn with uid = 32.
deleting insn with uid = 32.
LOCAL CONST-PROP: Replacing reg 149 in insn 32 with constant (const_int 0 [0x0])
Implicit set of reg 137 in basic block 8
Found 1 implicit sets
SET hash table (11 buckets, 4 entries)
Index 0 (hash value 6)
  (set (reg:SI 149)
    (const_int 0 [0x0]))
Index 1 (hash value 4)
  (set (reg/v:SI 136 [ count ])
    (const_int 0 [0x0]))
Index 2 (hash value 5)
  (set (reg:SI 137 [ D.26150 ])
    (const_int 0 [0x0]))
Index 3 (hash value 6)
  (set (reg:SI 138 [ D.26140 ])
    (const_int 0 [0x0]))


CPROP of get_wchan, pass 2: 10584 bytes needed, 1 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of get_wchan: 13 basic blocks, 1 pass, 6832 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)


get_wchan

Dataflow summary:
def_info->table_size = 274, use_info->table_size = 99
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={3d} r2={3d} r3={3d} r11={1d,12u} r12={3d} r13={1d,15u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r25={1d,19u,1d} r26={1d,11u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={2d,2u} r137={1d,1u} r138={2d,1u} r139={1d,1u} r141={1d,4u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 364{270d,92u,2e} in 39{37 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d8(1){ }d11(2){ }d14(3){ }d15(11){ }d18(12){ }d19(13){ }d22(14){ }d49(25){ }d50(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 11 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141

( 2 )->[3]->( 11 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 142 143 144
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141

( 3 )->[4]->( 11 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 136 145 146 148 149 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 136 145 146 148 149 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 5 10 )->[6]->( 11 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 24 [cc] 135 152
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 24 [cc] 137
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 7 )->[8]->( 12 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138

( 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 9 )->[10]->( 6 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 3 6 4 9 2 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138

( 11 8 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u94(0){ }u95(11){ }u96(13){ }u97(14){ }u98(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 15 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 53 to worklist
  Adding insn 74 to worklist
Finished finding needed instructions:
processing block 12 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 68 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
  Adding insn 61 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
  Adding insn 47 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
  Adding insn 55 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 52 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 18 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 7 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 27 (  2.1)
;; Following path with 3 sets: 2 
;; Following path with 5 sets: 3 
;; Following path with 3 sets: 4 
;; Following path with 10 sets: 5 
deferring rescan insn with uid = 32.
;; Following path with 8 sets: 6 
;; Following path with 7 sets: 7 
;; Following path with 2 sets: 9 
;; Following path with 1 sets: 10 
;; Following path with 1 sets: 8 
;; Following path with 1 sets: 11 
;; Following path with 2 sets: 12 
starting the processing of deferred insns
rescanning insn with uid = 32.
deleting insn with uid = 32.
ending the processing of deferred insns


get_wchan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={3d} r2={3d} r3={3d} r11={1d,12u} r12={3d} r13={1d,15u,1d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r25={1d,19u,1d} r26={1d,11u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={2d,2u} r137={1d,1u} r138={2d,1u} r139={1d,1u} r141={1d,4u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,1u} r148={1d,1u} r149={1d,2u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 365{270d,93u,2e} in 39{37 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/process.c:581 (set (reg/v/f:SI 141 [ p ])
        (reg:SI 0 r0 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ p ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/process.c:584 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 141 [ p ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/process.c:584 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 2 -> ( 11 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141


;; Succ edge  11 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 142 143 144
;; live  kill	

;; Pred edge  2 [89.9%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 143)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 144 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 142)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 141 [ p ])
            (reg/f:SI 144 [ <variable>.task ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ <variable>.task ])
        (nil)))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 3 -> ( 11 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141


;; Succ edge  11 [10.1%] 
;; Succ edge  4 [89.9%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 139
;; live  kill	

;; Pred edge  3 [89.9%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/process.c:584 discrim 2 (set (reg:SI 139 [ D.26139 ])
        (mem/s/v/j:SI (reg/v/f:SI 141 [ p ]) [0 <variable>.state+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 arch/arm/kernel/process.c:584 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.26139 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.26139 ])
        (nil)))

(jump_insn 19 18 20 4 arch/arm/kernel/process.c:584 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 11 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141


;; Succ edge  11 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 136 145 146 148 149 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 136 145 146 148 149 151
;; live  kill	

;; Pred edge  4 [61.0%]  (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 arch/arm/kernel/process.c:587 (set (reg/f:SI 145 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ p ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ p ])
        (nil)))

(insn 22 21 23 5 arch/arm/kernel/process.c:587 (set (reg:SI 146 [ <variable>.cpu_context.fp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 145 [ <variable>.stack ])
                (const_int 56 [0x38])) [0 <variable>.cpu_context.fp+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 25 5 arch/arm/kernel/process.c:587 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 frame.fp+0 S4 A64])
        (reg:SI 146 [ <variable>.cpu_context.fp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ <variable>.cpu_context.fp ])
        (nil)))

(insn 25 23 26 5 arch/arm/kernel/process.c:588 (set (reg:SI 148 [ <variable>.cpu_context.sp ])
        (mem/s/j:SI (plus:SI (reg/f:SI 145 [ <variable>.stack ])
                (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/kernel/process.c:588 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 frame.sp+0 S4 A32])
        (reg:SI 148 [ <variable>.cpu_context.sp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.cpu_context.sp ])
        (nil)))

(insn 27 26 28 5 arch/arm/kernel/process.c:589 (set (reg:SI 149)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 30 5 arch/arm/kernel/process.c:589 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 frame.lr+0 S4 A64])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 30 28 31 5 arch/arm/kernel/process.c:590 (set (reg:SI 151 [ <variable>.cpu_context.pc ])
        (mem/s/j:SI (plus:SI (reg/f:SI 145 [ <variable>.stack ])
                (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145 [ <variable>.stack ])
        (nil)))

(insn 31 30 32 5 arch/arm/kernel/process.c:590 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])
        (reg:SI 151 [ <variable>.cpu_context.pc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.cpu_context.pc ])
        (nil)))

(insn 32 31 56 5 arch/arm/kernel/process.c:583 (set (reg/v:SI 136 [ count ])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 10) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 24 [cc] 135 152
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru,dfs_back)
(code_label 56 32 33 6 48 "" [0 uses])

(note 33 56 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 arch/arm/kernel/process.c:592 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 35 34 36 6 arch/arm/kernel/process.c:592 (set (reg:SI 0 r0)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0]))
            (nil))))

(call_insn 36 35 37 6 arch/arm/kernel/process.c:592 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_frame") [flags 0x41] <function_decl 0x114f2100 unwind_frame>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 37 36 38 6 arch/arm/kernel/process.c:592 (set (reg/v:SI 135 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 38 37 39 6 arch/arm/kernel/process.c:593 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ ret ])
        (nil)))

(jump_insn 39 38 40 6 arch/arm/kernel/process.c:593 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 300 [0x12c])
            (nil))))
;; End of basic block 6 -> ( 11 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  11 [3.0%] 
;; Succ edge  7 [97.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 24 [cc] 137
;; live  kill	 14 [lr]

;; Pred edge  6 [97.0%]  (fallthru)
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 7 arch/arm/kernel/process.c:595 (set (reg:SI 0 r0)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 42 41 43 7 arch/arm/kernel/process.c:595 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("in_sched_functions") [flags 0x41] <function_decl 0x10f44c00 in_sched_functions>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 43 42 44 7 arch/arm/kernel/process.c:595 (set (reg:SI 137 [ D.26150 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 44 43 45 7 arch/arm/kernel/process.c:595 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.26150 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.26150 ])
        (nil)))

(jump_insn 45 44 46 7 arch/arm/kernel/process.c:595 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  8 [3.0%]  (fallthru)
;; Succ edge  9 [97.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	

;; Pred edge  7 [3.0%]  (fallthru)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 50 8 arch/arm/kernel/process.c:596 (set (reg:SI 138 [ D.26140 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 frame.pc+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [97.0%] 
(code_label 50 47 51 9 46 "" [1 uses])

(note 51 50 52 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 9 arch/arm/kernel/process.c:597 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ count ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 9 arch/arm/kernel/process.c:597 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 588 [0x24c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  10 [94.1%]  (fallthru)
;; Succ edge  11 [5.9%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 136
;; live  kill	

;; Pred edge  9 [94.1%]  (fallthru)
(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 59 10 arch/arm/kernel/process.c:597 (set (reg/v:SI 136 [ count ])
        (plus:SI (reg/v:SI 136 [ count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 10 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 6 4 9 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	

;; Pred edge  3 [10.1%] 
;; Pred edge  6 [3.0%] 
;; Pred edge  4 [39.0%] 
;; Pred edge  9 [5.9%] 
;; Pred edge  2 [10.1%] 
(code_label 59 55 60 11 45 "" [5 uses])

(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 11 arch/arm/kernel/process.c:585 (set (reg:SI 138 [ D.26140 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 62 61 63 12 47 "" [0 uses])

(note 63 62 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 68 63 74 12 arch/arm/kernel/process.c:599 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ D.26140 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.26140 ])
        (nil)))

(insn 74 68 0 12 arch/arm/kernel/process.c:599 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function kernel_thread (kernel_thread)[0:1363]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d14(2){ }d18(3){ }d19(11){ }d22(12){ }d23(13){ }d26(14){ }d47(25){ }d48(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 141 142 143 144 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 138 139 140 141 142 143 144 146
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u49(0){ }u50(11){ }u51(13){ }u52(14){ }u53(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 32 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


kernel_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,5u} r1={5d,3u} r2={4d,2u} r3={4d,1u} r11={1d,2u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,9u,2d} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={1d,1u} r137={1d,1u,1d} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r146={1d,4u} 
;;    total ref usage 309{261d,45u,3e} in 28{26 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 141 142 143 144 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 138 139 140 141 142 143 144 146
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/process.c:564 (set (reg/v/f:SI 135 [ fn ])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ fn ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/process.c:564 (set (reg/v/f:SI 136 [ arg ])
        (reg:SI 1 r1 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ arg ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/process.c:564 (set (reg/v:SI 137 [ flags ])
        (reg:SI 2 r2 [ flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ flags ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/process.c:567 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 10 12 2 arch/arm/kernel/process.c:567 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 11 13 2 arch/arm/kernel/process.c:569 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -56 [0xffffffffffffffc8])) [0 regs.uregs+16 S4 A64])
        (reg/v/f:SI 136 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ arg ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/process.c:570 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -52 [0xffffffffffffffcc])) [0 regs.uregs+20 S4 A32])
        (reg/v/f:SI 135 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ fn ])
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/process.c:571 (set (reg/f:SI 139)
        (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/process.c:571 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -48 [0xffffffffffffffd0])) [0 regs.uregs+24 S4 A64])
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_thread_exit") [flags 0x41] <function_decl 0x11544100 kernel_thread_exit>)
            (nil))))

(insn 16 15 17 2 arch/arm/kernel/process.c:572 (set (reg:SI 140)
        (const_int 19 [0x13])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/process.c:572 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -44 [0xffffffffffffffd4])) [0 regs.uregs+28 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int 19 [0x13])
            (nil))))

(insn 18 17 19 2 arch/arm/kernel/process.c:573 (set (reg/f:SI 141)
        (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/process.c:573 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 regs.uregs+60 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (symbol_ref:SI ("kernel_thread_helper") [flags 0x41] <function_decl 0x11544080 kernel_thread_helper>)
            (nil))))

(insn 20 19 21 2 arch/arm/kernel/process.c:574 (set (reg:SI 142)
        (const_int 147 [0x93])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/kernel/process.c:574 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 regs.uregs+64 S4 A64])
        (reg:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (const_int 147 [0x93])
            (nil))))

(insn 22 21 23 2 arch/arm/kernel/process.c:576 (set (reg:SI 144)
        (ior:SI (reg/v:SI 137 [ flags ])
            (const_int 8388608 [0x800000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ flags ])
        (nil)))

(insn 23 22 25 2 arch/arm/kernel/process.c:576 (set (reg:SI 143)
        (ior:SI (reg:SI 144)
            (const_int 256 [0x100]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (ior:SI (reg/v:SI 137 [ flags ])
                (const_int 8388864 [0x800100]))
            (nil))))

(insn 25 23 26 2 arch/arm/kernel/process.c:576 (set (reg:SI 146)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 28 2 arch/arm/kernel/process.c:576 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 28 26 29 2 arch/arm/kernel/process.c:576 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 29 28 30 2 arch/arm/kernel/process.c:576 (set (reg:SI 0 r0)
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 30 29 31 2 arch/arm/kernel/process.c:576 (set (reg:SI 1 r1)
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 31 30 32 2 arch/arm/kernel/process.c:576 (set (reg:SI 2 r2)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))

(insn 32 31 33 2 arch/arm/kernel/process.c:576 (set (reg:SI 3 r3)
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 33 32 45 2 arch/arm/kernel/process.c:576 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_fork") [flags 0x41] <function_decl 0x10fdc100 do_fork>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 45 33 0 2 arch/arm/kernel/process.c:577 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dump_fpu (dump_fpu)[0:1362]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 138 139 141 143 144
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 138 139 141 143 144
;; live  kill	

Successors:  3 [39.0%]  (fallthru) 4 [61.0%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3898, maybe hot.
Predecessors:  2 [39.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 145 148
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [61.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u41(0){ }u42(11){ }u43(13){ }u44(14){ }u45(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Found 0 implicit sets
SET hash table (11 buckets, 1 entries)
Index 0 (hash value 5)
  (set (reg:SI 148)
    (const_int 116 [0x74]))


CPROP of dump_fpu, pass 1: 3256 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 8 entries)
Index 0 (hash value 9)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8129 [0xffffffffffffe03f]))
Index 1 (hash value 1)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8192 [0xffffffffffffe000]))
Index 2 (hash value 3)
  (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 135 [ thread ])
            (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16]))
Index 3 (hash value 2)
  (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 135 [ thread ])
            (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8]))
Index 4 (hash value 7)
  (ior:SI (reg:SI 141 [ <variable>.used_cp+2 ])
    (reg:SI 143 [ <variable>.used_cp+1 ]))
Index 5 (hash value 0)
  (zero_extend:SI (subreg:QI (reg:SI 144) 0))
Index 6 (hash value 0)
  (plus:SI (reg/v/f:SI 135 [ thread ])
    (const_int 288 [0x120]))
Index 7 (hash value 6)
  (ne:SI (reg:CC 24 cc)
    (const_int 0 [0x0]))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 25.
deleting insn with uid = 25.
LOCAL CONST-PROP: Replacing reg 148 in insn 25 with constant (const_int 116 [0x74])
Found 0 implicit sets
SET hash table (11 buckets, 1 entries)
Index 0 (hash value 5)
  (set (reg:SI 148)
    (const_int 116 [0x74]))


CPROP of dump_fpu, pass 2: 9256 bytes needed, 1 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of dump_fpu: 5 basic blocks, 1 pass, 6000 bytes

deleting insn with uid = 22.
Deleted 1 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


dump_fpu

Dataflow summary:
def_info->table_size = 149, use_info->table_size = 46
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,4u} r12={2d} r13={1d,6u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,2u} r135={1d,3u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r151={1d,1u} 
;;    total ref usage 181{142d,38u,1e} in 18{17 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 138 139 141 143 144
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 138 139 141 143 144
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 145 148
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u41(0){ }u42(11){ }u43(13){ }u44(14){ }u45(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 26 to worklist
  Adding insn 42 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 36 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 3 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;; Following path with 9 sets: 2 
;; Following path with 7 sets: 3 
;; Following path with 4 sets: 4 
starting the processing of deferred insns
ending the processing of deferred insns


dump_fpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,4u} r12={2d} r13={1d,6u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,2u} r135={1d,3u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r151={1d,1u} 
;;    total ref usage 181{142d,38u,1e} in 18{17 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 138 139 141 143 144
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 138 139 141 143 144
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/process.c:512 (set (reg/v/f:SI 138 [ fp ])
        (reg:SI 1 r1 [ fp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fp ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 135 [ thread ])
        (and:SI (reg:SI 139)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 10 9 12 2 arch/arm/kernel/process.c:514 (set (reg:SI 141 [ <variable>.used_cp+2 ])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 135 [ thread ])
                    (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 12 10 14 2 arch/arm/kernel/process.c:514 (set (reg:SI 143 [ <variable>.used_cp+1 ])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 135 [ thread ])
                    (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 14 12 15 2 arch/arm/kernel/process.c:514 (set (reg:SI 144)
        (ior:SI (reg:SI 141 [ <variable>.used_cp+2 ])
            (reg:SI 143 [ <variable>.used_cp+1 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 143 [ <variable>.used_cp+1 ])
        (expr_list:REG_DEAD (reg:SI 141 [ <variable>.used_cp+2 ])
            (nil))))

(insn 15 14 16 2 arch/arm/kernel/process.c:514 (set (reg/v:SI 134 [ used_math ])
        (zero_extend:SI (subreg:QI (reg:SI 144) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 16 15 17 2 arch/arm/kernel/process.c:516 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ used_math ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 2 arch/arm/kernel/process.c:516 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 145
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 23 3 arch/arm/kernel/process.c:517 (set (reg/f:SI 145)
        (plus:SI (reg/v/f:SI 135 [ thread ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 135 [ thread ])
        (nil)))

(insn 23 19 24 3 arch/arm/kernel/process.c:517 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ fp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ fp ])
        (nil)))

(insn 24 23 25 3 arch/arm/kernel/process.c:517 (set (reg:SI 1 r1)
        (reg/f:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (nil)))

(insn 25 24 26 3 arch/arm/kernel/process.c:517 (set (reg:SI 2 r2)
        (const_int 116 [0x74])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 116 [0x74])
        (nil)))

(call_insn 26 25 28 3 arch/arm/kernel/process.c:517 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 28 26 29 4 56 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 4 arch/arm/kernel/process.c:520 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ used_math ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ used_math ])
        (nil)))

(insn 31 30 36 4 arch/arm/kernel/process.c:520 (set (reg:SI 151)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 36 31 42 4 arch/arm/kernel/process.c:520 (set (reg/i:SI 0 r0)
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 42 36 0 4 arch/arm/kernel/process.c:520 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function copy_thread (copy_thread)[0:1360]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d9(0){ }d17(1){ }d24(2){ }d29(3){ }d30(11){ }d35(12){ }d36(13){ }d41(14){ }d83(25){ }d84(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 137 138 140 141 142 145 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 137 138 140 141 142 145 147 148 149 150
;; live  kill	 14 [lr]

Successors:  3 [61.0%]  (fallthru) 4 [39.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 151
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [39.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 136 152 153
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u62(0){ }u63(11){ }u64(13){ }u65(14){ }u66(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Found 0 implicit sets
SET hash table (11 buckets, 6 entries)
Index 0 (hash value 2)
  (set (reg:SI 145)
    (const_int 72 [0x48]))
Index 1 (hash value 4)
  (set (reg:SI 147)
    (const_int 0 [0x0]))
Index 2 (hash value 6)
  (set (reg/f:SI 149)
    (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>))
Index 3 (hash value 9)
  (set (reg/f:SI 152)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 4 (hash value 10)
  (set (reg/f:SI 153)
    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 4 [0x4]))))
Index 5 (hash value 4)
  (set (reg:SI 136 [ <result> ])
    (const_int 0 [0x0]))


CPROP of copy_thread, pass 1: 3776 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 9 entries)
Index 0 (hash value 6)
  (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ p ])
        (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])
Index 1 (hash value 9)
  (plus:SI (reg/v/f:SI 134 [ thread ])
    (const_int 8064 [0x1f80]))
Index 2 (hash value 2)
  (plus:SI (reg/v/f:SI 134 [ thread ])
    (const_int 8112 [0x1fb0]))
Index 3 (hash value 3)
  (plus:SI (reg/v/f:SI 134 [ thread ])
    (const_int 28 [0x1c]))
Index 4 (hash value 4)
  (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)
Index 5 (hash value 7)
  (and:SI (reg/v:SI 137 [ clone_flags ])
    (const_int 524288 [0x80000]))
Index 6 (hash value 4)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ regs ])
        (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])
Index 7 (hash value 9)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 8 (hash value 4)
  (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 19.
deleting insn with uid = 19.
LOCAL CONST-PROP: Replacing reg 145 in insn 19 with constant (const_int 72 [0x48])
rescanning insn with uid = 43.
deleting insn with uid = 43.
LOCAL CONST-PROP: Replacing reg 152 in insn 43 with constant (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
rescanning insn with uid = 44.
deleting insn with uid = 44.
LOCAL CONST-PROP: Replacing reg 153 in insn 44 with constant (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
rescanning insn with uid = 52.
deleting insn with uid = 52.
LOCAL CONST-PROP: Replacing reg 136 in insn 52 with constant (const_int 0 [0x0])
Found 0 implicit sets
SET hash table (11 buckets, 6 entries)
Index 0 (hash value 2)
  (set (reg:SI 145)
    (const_int 72 [0x48]))
Index 1 (hash value 4)
  (set (reg:SI 147)
    (const_int 0 [0x0]))
Index 2 (hash value 6)
  (set (reg/f:SI 149)
    (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>))
Index 3 (hash value 9)
  (set (reg/f:SI 152)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 4 (hash value 10)
  (set (reg/f:SI 153)
    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 4 [0x4]))))
Index 5 (hash value 4)
  (set (reg:SI 136 [ <result> ])
    (const_int 0 [0x0]))


CPROP of copy_thread, pass 2: 10444 bytes needed, 4 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of copy_thread: 5 basic blocks, 1 pass, 6668 bytes

deleting insn with uid = 48.
deleting insn with uid = 43.
deleting insn with uid = 42.
deleting insn with uid = 16.
Deleted 4 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


copy_thread

Dataflow summary:
def_info->table_size = 508, use_info->table_size = 68
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={8d,4u} r2={7d,2u} r3={5d,1u} r11={1d,4u} r12={5d} r13={1d,8u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={5d,1u} r25={1d,4u} r26={1d,4u,1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,3u} r134={1d,6u,1d} r137={1d,1u} r138={1d,1u} r140={1d,2u} r141={1d,2u} r142={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 561{501d,58u,2e} in 34{30 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d17(1){ }d24(2){ }d29(3){ }d30(11){ }d35(12){ }d36(13){ }d41(14){ }d83(25){ }d84(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 137 138 140 141 142 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 137 138 140 141 142 145 147 148 149 150
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 136 152 153
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u62(0){ }u63(11){ }u64(13){ }u65(14){ }u66(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 39 to worklist
  Adding insn 58 to worklist
  Adding insn 47 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 52 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
  Adding insn 38 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;; Following path with 32 sets: 2 
;; Following path with 2 sets: 3 
;; Following path with 8 sets: 4 
starting the processing of deferred insns
ending the processing of deferred insns


copy_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={8d,4u} r2={7d,2u} r3={5d,1u} r11={1d,4u} r12={5d} r13={1d,8u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={5d,1u} r25={1d,4u} r26={1d,4u,1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,3u} r134={1d,6u,1d} r137={1d,1u} r138={1d,1u} r140={1d,2u} r141={1d,2u} r142={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 561{501d,58u,2e} in 34{30 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 137 138 140 141 142 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 137 138 140 141 142 147 148 149 150
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/kernel/process.c:477 (set (reg/v:SI 137 [ clone_flags ])
        (reg:SI 0 r0 [ clone_flags ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ clone_flags ])
        (nil)))

(insn 3 2 5 2 arch/arm/kernel/process.c:477 (set (reg/v:SI 138 [ stack_start ])
        (reg:SI 1 r1 [ stack_start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ stack_start ])
        (nil)))

(insn 5 3 6 2 arch/arm/kernel/process.c:477 (set (reg/v/f:SI 140 [ p ])
        (reg:SI 3 r3 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ p ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/process.c:477 (set (reg/v/f:SI 141 [ regs ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 regs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 regs+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 12 2 arch/arm/kernel/process.c:478 (set (reg/v/f:SI 134 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ p ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 10 13 2 arch/arm/kernel/process.c:479 (set (reg/f:SI 142)
        (plus:SI (reg/v/f:SI 134 [ thread ])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (nil))

(insn 13 12 17 2 arch/arm/kernel/process.c:479 (set (reg/v/f:SI 133 [ childregs ])
        (plus:SI (reg/f:SI 142)
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v/f:SI 134 [ thread ])
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 17 13 18 2 arch/arm/kernel/process.c:481 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ childregs ])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/kernel/process.c:481 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/process.c:481 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(call_insn 20 19 22 2 arch/arm/kernel/process.c:481 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11573080 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 20 23 2 arch/arm/kernel/process.c:482 (set (reg:SI 147)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/kernel/process.c:482 (set (mem/s/j:SI (plus:SI (reg/f:SI 142)
                (const_int 48 [0x30])) [0 <variable>.uregs+0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg/f:SI 142)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 24 23 25 2 arch/arm/kernel/process.c:483 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ childregs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
        (reg/v:SI 138 [ stack_start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ stack_start ])
        (nil)))

(insn 25 24 26 2 arch/arm/kernel/process.c:485 discrim 1 (set (reg/f:SI 148)
        (plus:SI (reg/v/f:SI 134 [ thread ])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 2 arch/arm/kernel/process.c:485 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))

(insn 27 26 28 2 arch/arm/kernel/process.c:485 discrim 1 (set (reg:SI 1 r1)
        (const_int 48 [0x30])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 29 2 arch/arm/kernel/process.c:485 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 2 arch/arm/kernel/process.c:486 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ thread ])
                (const_int 60 [0x3c])) [0 <variable>.cpu_context.sp+0 S4 A32])
        (reg/v/f:SI 133 [ childregs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ childregs ])
        (nil)))

(insn 30 29 31 2 arch/arm/kernel/process.c:487 (set (reg/f:SI 149)
        (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 2 arch/arm/kernel/process.c:487 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ thread ])
                (const_int 64 [0x40])) [0 <variable>.cpu_context.pc+0 S4 A64])
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*ret_from_fork") [flags 0x41] <function_decl 0x1150cd00 ret_from_fork>)
            (nil))))

(insn 32 31 33 2 arch/arm/kernel/process.c:489 (set (reg:SI 0 r0)
        (reg/v/f:SI 140 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ p ])
        (nil)))

(call_insn 33 32 34 2 arch/arm/kernel/process.c:489 (parallel [
            (call (mem:SI (symbol_ref:SI ("clear_ptrace_hw_breakpoint") [flags 0x41] <function_decl 0x10ab8580 clear_ptrace_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 34 33 35 2 arch/arm/kernel/process.c:491 (set (reg:SI 150)
        (and:SI (reg/v:SI 137 [ clone_flags ])
            (const_int 524288 [0x80000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ clone_flags ])
        (nil)))

(insn 35 34 36 2 arch/arm/kernel/process.c:491 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 36 35 37 2 arch/arm/kernel/process.c:491 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 151
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/kernel/process.c:492 (set (reg:SI 151 [ <variable>.uregs+12 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ regs ])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ regs ])
        (nil)))

(insn 39 38 40 3 arch/arm/kernel/process.c:492 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ thread ])
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
        (reg:SI 151 [ <variable>.uregs+12 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.uregs+12 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 40 39 41 4 59 "" [1 uses])

(note 41 40 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 44 41 45 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 45 44 46 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ thread ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ thread ])
        (nil)))

(call_insn 47 46 52 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 52 47 58 4 arch/arm/kernel/process.c:497 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 58 52 0 4 arch/arm/kernel/process.c:497 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function exit_thread (exit_thread)[0:1357]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d15(14){ }d26(25){ }d27(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 137
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(11){ }u16(13){ }u17(14){ }u18(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 10 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


exit_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,4u,1d} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 151{133d,17u,1e} in 8{7 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg/f:SI 135)
        (plus:SI (reg/f:SI 134)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 137)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 136)
        (and:SI (reg:SI 137)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(call_insn/j 13 12 0 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_thread (flush_thread)[0:1358]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d10(0){ }d20(1){ }d27(2){ }d33(3){ }d34(11){ }d40(12){ }d41(13){ }d46(14){ }d97(25){ }d98(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 140 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 136 137 140 141 142 143 144
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u38(11){ }u39(13){ }u40(14){ }u41(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 33 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


flush_thread

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={11d,5u} r1={10d,4u} r2={7d,1u} r3={6d} r11={1d,2u} r12={6d} r13={1d,8u,1d} r14={5d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={5d} r25={1d,2u} r26={1d,1u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r135={1d,2u} r136={1d,4u} r137={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 649{612d,36u,1e} in 23{18 regular + 5 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 140 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 136 137 140 141 142 143 144
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 6 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 136 [ thread ])
        (and:SI (reg:SI 137)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 7 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 135 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ thread ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/process.c:459 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 2 arch/arm/kernel/process.c:459 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_ptrace_hw_breakpoint") [flags 0x41] <function_decl 0x114b5e00 flush_ptrace_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/process.c:461 discrim 1 (set (reg/f:SI 140)
        (plus:SI (reg/v/f:SI 136 [ thread ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 15 14 16 2 arch/arm/kernel/process.c:461 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (nil)))

(insn 16 15 17 2 arch/arm/kernel/process.c:461 discrim 1 (set (reg:SI 1 r1)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(call_insn 17 16 18 2 arch/arm/kernel/process.c:461 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 18 17 19 2 arch/arm/kernel/process.c:462 discrim 1 (set (reg/f:SI 141)
        (plus:SI (reg/v/f:SI 135 [ tsk ])
            (const_int 796 [0x31c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 135 [ tsk ])
        (nil)))

(insn 19 18 20 2 arch/arm/kernel/process.c:462 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (nil)))

(insn 20 19 21 2 arch/arm/kernel/process.c:462 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(call_insn 21 20 22 2 arch/arm/kernel/process.c:462 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 22 21 23 2 arch/arm/kernel/process.c:463 discrim 1 (set (reg/f:SI 142)
        (plus:SI (reg/v/f:SI 136 [ thread ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 2 arch/arm/kernel/process.c:463 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (nil)))

(insn 24 23 25 2 arch/arm/kernel/process.c:463 discrim 1 (set (reg:SI 1 r1)
        (const_int 140 [0x8c])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 26 2 arch/arm/kernel/process.c:463 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg/f:SI 143)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg/f:SI 144)
        (plus:SI (reg/f:SI 143)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 28 27 29 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 0 r0)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))

(insn 29 28 30 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (set (reg:SI 2 r2)
        (reg/v/f:SI 136 [ thread ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ thread ])
        (nil)))

(call_insn/j 31 30 0 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_notify.h:35 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("atomic_notifier_call_chain") [flags 0x41] <function_decl 0x10c43c80 atomic_notifier_call_chain>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_shutdown (machine_shutdown)[0:1349]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d12(14){ }d23(25){ }d24(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u5(11){ }u6(13){ }u7(14){ }u8(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 3 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


machine_shutdown

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 135{126d,9u,0e} in 1{0 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 5 2 0 2 arch/arm/kernel/process.c:269 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_send_stop") [flags 0x41] <function_decl 0x10c9f800 smp_send_stop>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_restart (machine_restart)[0:1352]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d10(2){ }d13(3){ }d14(11){ }d17(12){ }d18(13){ }d21(14){ }d44(25){ }d45(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 137
;; live  kill	 14 [lr] 24 [cc]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(11){ }u16(13){ }u17(14){ }u18(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 18 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


machine_restart

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,2u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 270{252d,18u,0e} in 10{8 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 136 137
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/process.c:287 (set (reg/v/f:SI 133 [ cmd ])
        (reg:SI 0 r0 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cmd ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105916)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/process.c:294 (parallel [
            (asm_operands/v ("cpsid f	@ __clf") ("") 0 []
                 [] 8827068)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(call_insn 8 7 9 2 arch/arm/kernel/process.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 9 8 11 2 arch/arm/kernel/process.c:297 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 11 9 12 2 arch/arm/kernel/process.c:297 (set (reg:SI 136 [ reboot_mode ])
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 134) [0 reboot_mode+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 12 11 13 2 arch/arm/kernel/process.c:297 (set (reg/f:SI 137 [ arm_pm_restart ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 134)
                (const_int 4 [0x4])) [0 arm_pm_restart+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/process.c:297 (set (reg:SI 0 r0)
        (reg:SI 136 [ reboot_mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ reboot_mode ])
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/process.c:297 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ cmd ])
        (nil)))

(call_insn 15 14 0 2 arch/arm/kernel/process.c:297 (parallel [
            (call (mem:SI (reg/f:SI 137 [ arm_pm_restart ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 137 [ arm_pm_restart ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_power_off (machine_power_off)[0:1351]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d15(12){ }d16(13){ }d19(14){ }d41(25){ }d42(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134
;; live  kill	 14 [lr]

Successors:  3 [78.3%]  (fallthru) 4 [21.6%] 
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 7835, maybe hot.
Predecessors:  2 [78.3%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [21.6%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(11){ }u19(13){ }u20(14){ }u21(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Found 0 implicit sets
SET hash table (11 buckets, 1 entries)
Index 0 (hash value 2)
  (set (reg/f:SI 134)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))


CPROP of machine_power_off, pass 1: 2820 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 2 entries)
Index 0 (hash value 9)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 1 (hash value 1)
  (mem/f/c/i:SI (plus:SI (reg/f:SI 134)
        (const_int 16 [0x10])) [0 pm_power_off+0 S4 A32])

hoisting vbeinout computation: 2 passes


Found 0 implicit sets
SET hash table (11 buckets, 1 entries)
Index 0 (hash value 2)
  (set (reg/f:SI 134)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))


CPROP of machine_power_off, pass 2: 6644 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of machine_power_off: 5 basic blocks, 1 pass, 4780 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 7 sets: 2 
;; Following path with 3 sets: 3 
starting the processing of deferred insns
ending the processing of deferred insns


machine_power_off

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,2u} r134={1d,1u} 
;;    total ref usage 269{247d,22u,0e} in 6{4 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/kernel/process.c:281 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 6 5 7 2 arch/arm/kernel/process.c:282 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:282 (set (reg/f:SI 133 [ pm_power_off.335 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 134)
                (const_int 16 [0x10])) [0 pm_power_off+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 16 [0x10]))) [0 pm_power_off+0 S4 A32])
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/process.c:282 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ pm_power_off.335 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/process.c:282 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 11 10 17 3 arch/arm/kernel/process.c:283 (parallel [
            (call (mem:SI (reg/f:SI 133 [ pm_power_off.335 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 133 [ pm_power_off.335 ])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [21.6%] 
(code_label 17 11 20 4 79 "" [1 uses])

(note 20 17 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function machine_halt (machine_halt)[0:1350]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

4 basic blocks, 3 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1.
Predecessors: 
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d24(25){ }d25(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  3 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 3 , prev 2, next 1, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ }u6(13){ }u7(25){ }u8(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  3 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 3, loop_depth 0, count 0, freq 0.
Predecessors: 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(11){ }u10(13){ }u11(14){ }u12(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Found 0 implicit sets
SET hash table (11 buckets, 0 entries)

CPROP of machine_halt, pass 1: 2676 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 0 entries)


Found 0 implicit sets
SET hash table (11 buckets, 0 entries)

CPROP of machine_halt, pass 2: 6164 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of machine_halt: 4 basic blocks, 1 pass, 4420 bytes

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 3 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


machine_halt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp] 14[lr]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r11={1d,3u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,3u} r26={1d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 140{127d,13u,0e} in 1{0 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 7 2 arch/arm/kernel/process.c:275 (parallel [
            (call (mem:SI (symbol_ref:SI ("machine_shutdown") [flags 0x3] <function_decl 0x11153e00 machine_shutdown>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ }u6(13){ }u7(25){ }u8(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 7 5 6 3 83 "" [0 uses])

(note 6 7 0 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 3 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  3 [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_idle (cpu_idle)[0:1347]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 42 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 35 (  2.1)

17 basic blocks, 22 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 0.
Predecessors: 
;; bb 0 artificial_defs: { d14(0){ }d26(1){ }d37(2){ }d48(3){ }d49(11){ }d60(12){ }d61(13){ }d72(14){ }d185(25){ }d186(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 0.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 136 139 144 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 139 144 149
;; live  kill	 24 [cc]

Successors:  3 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 4.
Predecessors:  2 [100.0%]  (fallthru) 17 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 4 , prev 3, next 5, loop_depth 2, count 0, freq 9996, maybe hot.
Predecessors:  16 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 141 142 148 153 155 156 157 158 159 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 141 142 148 153 155 156 157 158 159 160 161 162
;; live  kill	

Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 5 , prev 4, next 6, loop_depth 2, count 0, freq 4.
Predecessors:  4 [0.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 6 , prev 5, next 7, loop_depth 2, count 0, freq 9996, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 140 163
;; live  kill	 24 [cc]

Successors:  7 [69.8%]  (fallthru) 8 [30.2%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 140 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 140 144


Basic block 7 , prev 6, next 8, loop_depth 2, count 0, freq 6980, maybe hot.
Predecessors:  6 [69.8%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 140 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 140 144
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 8 , prev 7, next 9, loop_depth 2, count 0, freq 9996, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 6 [30.2%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 147 164
;; live  kill	

Successors:  9 [71.0%]  (fallthru) 10 [29.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 9 , prev 8, next 10, loop_depth 2, count 0, freq 7097, maybe hot.
Predecessors:  8 [71.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 10 , prev 9, next 11, loop_depth 2, count 0, freq 2899, maybe hot.
Predecessors:  8 [29.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0] 24 [cc] 146
;; live  kill	 14 [lr]

Successors:  11 [29.0%]  (fallthru) 12 [71.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 11 , prev 10, next 12, loop_depth 2, count 0, freq 841, maybe hot.
Predecessors:  10 [29.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 165 166
;; live  kill	 14 [lr]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 12 , prev 11, next 13, loop_depth 2, count 0, freq 2899, maybe hot.
Predecessors:  10 [71.0%]  11 [100.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 145 167
;; live  kill	 24 [cc]

Successors:  13 [0.0%]  (fallthru) 14 [100.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 13 , prev 12, next 14, loop_depth 2, count 0, freq 1.
Predecessors:  12 [0.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0] 1 [r1] 168
;; live  kill	 14 [lr]

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 14 , prev 13, next 16, loop_depth 2, count 0, freq 2899, maybe hot.
Predecessors:  12 [100.0%]  13 [100.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	
;; live  kill	 24 [cc]

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 16 , prev 14, next 17, loop_depth 2, count 0, freq 10000, maybe hot.
Predecessors:  14 [100.0%]  (fallthru) 3 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 138 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 138 169
;; live  kill	

Successors:  4 [100.0%]  17 [0.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 17 , prev 16, next 1, loop_depth 1, count 0, freq 4.
Predecessors:  16 [0.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0] 170 171 172 173
;; live  kill	 14 [lr]

Successors:  3 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144


Basic block 1 , prev 17, loop_depth 0, count 0, freq 0.
Predecessors: 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u143(11){ }u144(13){ }u145(14){ }u146(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 162 in basic block 5
Implicit set of reg 147 in basic block 10
Implicit set of reg 169 in basic block 4
Found 3 implicit sets
SET hash table (19 buckets, 11 entries)
Index 0 (hash value 11)
  (set (reg/f:SI 144 [ D.26499 ])
    (reg/f:SI 139 [ D.26530 ]))
Index 1 (hash value 3)
  (set (reg/f:SI 136 [ D.26547 ])
    (reg/f:SI 139 [ D.26530 ]))
Index 2 (hash value 1)
  (set (reg/f:SI 134 [ D.26557 ])
    (reg/f:SI 139 [ D.26530 ]))
Index 3 (hash value 17)
  (set (reg:SI 169)
    (const_int 0 [0x0]))
Index 4 (hash value 1)
  (set (reg/f:SI 153)
    (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>))
Index 5 (hash value 10)
  (set (reg:SI 162)
    (const_int 0 [0x0]))
Index 6 (hash value 11)
  (set (reg/f:SI 163)
    (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>))
Index 7 (hash value 12)
  (set (reg/f:SI 164)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 8 (hash value 14)
  (set (reg:SI 147 [ hlt_counter.331 ])
    (const_int 0 [0x0]))
Index 9 (hash value 13)
  (set (reg/f:SI 165)
    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
Index 10 (hash value 16)
  (set (reg/f:SI 168)
    (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>))

rescanning insn with uid = 26.
deleting insn with uid = 26.
GLOBAL COPY-PROP: Replacing reg 144 in insn 26 with reg 139
rescanning insn with uid = 101.
deleting insn with uid = 101.
GLOBAL COPY-PROP: Replacing reg 136 in insn 101 with reg 139
rescanning insn with uid = 103.
deleting insn with uid = 103.
GLOBAL COPY-PROP: Replacing reg 136 in insn 103 with reg 139
rescanning insn with uid = 105.
deleting insn with uid = 105.
GLOBAL COPY-PROP: Replacing reg 134 in insn 105 with reg 139
rescanning insn with uid = 107.
deleting insn with uid = 107.
GLOBAL COPY-PROP: Replacing reg 134 in insn 107 with reg 139

CPROP of cpu_idle, pass 1: 4952 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 5 global copy props

Code Hosting Expressions hash table (19 buckets, 24 entries)
Index 0 (hash value 17)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8129 [0xffffffffffffe03f]))
Index 1 (hash value 11)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8192 [0xffffffffffffe000]))
Index 2 (hash value 1)
  (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26530 ])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
Index 3 (hash value 5)
  (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)
Index 4 (hash value 16)
  (plus:SI (reg:SI 148 [ D.25786 ])
    (const_int 31 [0x1f]))
Index 5 (hash value 11)
  (if_then_else:SI (lt (reg:CC 24 cc)
        (const_int 0 [0x0]))
    (reg:SI 156)
    (reg:SI 148 [ D.25786 ]))
Index 6 (hash value 15)
  (ashiftrt:SI (reg:SI 155 [ D.25786 ])
    (const_int 5 [0x5]))
Index 7 (hash value 12)
  (ashift:SI (reg:SI 157)
    (const_int 2 [0x2]))
Index 8 (hash value 11)
  (mem/u/f/c/i:SI (reg/f:SI 153) [0 cpu_online_mask+0 S4 A32])
Index 9 (hash value 0)
  (plus:SI (reg/f:SI 159 [ cpu_online_mask ])
    (reg:SI 158))
Index 10 (hash value 9)
  (and:SI (reg:SI 148 [ D.25786 ])
    (const_int 31 [0x1f]))
Index 11 (hash value 4)
  (lshiftrt:SI (reg:SI 142 [ D.26511 ])
    (reg:SI 160))
Index 12 (hash value 11)
  (and:SI (reg:SI 161)
    (const_int 1 [0x1]))
Index 13 (hash value 2)
  (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
Index 14 (hash value 10)
  (mem/s/f/j/c:SI (plus:SI (reg/f:SI 163)
        (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])
Index 15 (hash value 18)
  (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Index 16 (hash value 0)
  (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Index 17 (hash value 15)
  (mem/f/c/i:SI (plus:SI (reg/f:SI 165)
        (const_int 8 [0x8])) [0 pm_idle+0 S4 A32])
Index 18 (hash value 8)
  (and:SI (reg/v:SI 145 [ _flags ])
    (const_int 128 [0x80]))
Index 19 (hash value 18)
  (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>)
Index 20 (hash value 8)
  (and:SI (reg:SI 138 [ D.26533 ])
    (const_int 2 [0x2]))
Index 21 (hash value 4)
  (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26530 ])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
Index 22 (hash value 6)
  (plus:SI (reg:SI 170 [ <variable>.preempt_count ])
    (const_int -1 [0xffffffffffffffff]))
Index 23 (hash value 10)
  (plus:SI (reg:SI 172 [ <variable>.preempt_count ])
    (const_int 1 [0x1]))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 83.
deleting insn with uid = 83.
LOCAL CONST-PROP: Replacing reg 168 in insn 83 with constant (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>)
Implicit set of reg 162 in basic block 5
Implicit set of reg 147 in basic block 10
Implicit set of reg 169 in basic block 4
Found 3 implicit sets
SET hash table (19 buckets, 11 entries)
Index 0 (hash value 11)
  (set (reg/f:SI 144 [ D.26499 ])
    (reg/f:SI 139 [ D.26530 ]))
Index 1 (hash value 3)
  (set (reg/f:SI 136 [ D.26547 ])
    (reg/f:SI 139 [ D.26530 ]))
Index 2 (hash value 1)
  (set (reg/f:SI 134 [ D.26557 ])
    (reg/f:SI 139 [ D.26530 ]))
Index 3 (hash value 17)
  (set (reg:SI 169)
    (const_int 0 [0x0]))
Index 4 (hash value 1)
  (set (reg/f:SI 153)
    (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>))
Index 5 (hash value 10)
  (set (reg:SI 162)
    (const_int 0 [0x0]))
Index 6 (hash value 11)
  (set (reg/f:SI 163)
    (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>))
Index 7 (hash value 12)
  (set (reg/f:SI 164)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Index 8 (hash value 14)
  (set (reg:SI 147 [ hlt_counter.331 ])
    (const_int 0 [0x0]))
Index 9 (hash value 13)
  (set (reg/f:SI 165)
    (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
Index 10 (hash value 16)
  (set (reg/f:SI 168)
    (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>))


CPROP of cpu_idle, pass 2: 14544 bytes needed, 1 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of cpu_idle: 17 basic blocks, 1 pass, 9592 bytes

deleting insn with uid = 82.
deleting insn with uid = 17.
deleting insn with uid = 14.
deleting insn with uid = 11.
Deleted 4 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 28 (  1.6)


cpu_idle

Dataflow summary:
def_info->table_size = 1238, use_info->table_size = 147
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,5u} r1={12d,1u} r2={11d} r3={11d} r11={1d,16u} r12={11d} r13={1d,27u,1d} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={22d,7u} r25={1d,16u} r26={1d,15u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r138={1d,1u} r139={1d,6u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,5u,1d} r149={1d,1u} r153={1d,1u} r155={2d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 1356{1227d,127u,2e} in 68{58 regular + 10 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d26(1){ }d37(2){ }d48(3){ }d49(11){ }d60(12){ }d61(13){ }d72(14){ }d185(25){ }d186(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 136 139 144 149
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 2 17 )->[3]->( 16 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 16 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 141 142 148 153 155 156 157 158 159 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 141 142 148 153 155 156 157 158 159 160 161 162
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 5 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 140 163
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 140 144

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 140 144
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 7 6 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 147 164
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 8 )->[9]->( 16 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0] 24 [cc] 146
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 165 166
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 10 11 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 145 167
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0] 1 [r1] 168
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 12 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 14 3 9 )->[16]->( 4 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 138 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 24 [cc] 138 169
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( 16 )->[17]->( 3 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144
;; live  gen 	 0 [r0] 170 171 172 173
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 139 144

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u143(11){ }u144(13){ }u145(14){ }u146(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 5 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 41 to worklist
  Adding insn 36 to worklist
  Adding insn 43 to worklist
  Adding insn 51 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 53 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 74 to worklist
  Adding insn 80 to worklist
  Adding insn 77 to worklist
  Adding insn 85 to worklist
  Adding insn 88 to worklist
  Adding insn 95 to worklist
  Adding insn 91 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 97 to worklist
Finished finding needed instructions:
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 84 to worklist
  Adding insn 83 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 79 to worklist
  Adding insn 78 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 58 to worklist
  Adding insn 56 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 98 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 21 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 8 to worklist
  Adding insn 7 to worklist
DCE: Deleting insn 28
deleting insn with uid = 28.
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 28 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 35 (  2.1)
;; Following path with 5 sets: 2 
;; Following path with 8 sets: 3 
;; Following path with 4 sets: 16 
;; Following path with 20 sets: 17 
;; Following path with 15 sets: 4 
;; Following path with 3 sets: 5 
;; Following path with 9 sets: 6 
;; Following path with 3 sets: 7 
;; Following path with 4 sets: 8 
;; Following path with 6 sets: 10 
;; Following path with 5 sets: 11 
;; Following path with 6 sets: 12 
;; Following path with 5 sets: 13 
;; Following path with 3 sets: 14 
;; Following path with 5 sets: 9 
starting the processing of deferred insns
ending the processing of deferred insns


cpu_idle

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,5u} r1={12d,1u} r2={11d} r3={11d} r11={1d,16u} r12={11d} r13={1d,27u,1d} r14={11d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={22d,7u} r25={1d,16u} r26={1d,15u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r138={1d,1u} r139={1d,6u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,4u,1d} r149={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} 
;;    total ref usage 1354{1226d,126u,2e} in 67{57 regular + 10 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139 149
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 7 2 arch/arm/kernel/process.c:215 (parallel [
            (asm_operands/v ("cpsie f	@ __stf") ("") 0 []
                 [] 8816956)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 7 5 8 2 include/linux/thread_info.h:84 (set (reg:SI 149)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 109 2 include/linux/thread_info.h:84 (set (reg/f:SI 139 [ D.26530 ])
        (and:SI (reg:SI 149)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 17) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru,dfs_back)
(code_label 109 8 18 3 93 "" [0 uses])

(note 18 109 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 arch/arm/kernel/process.c:219 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 21 3 arch/arm/kernel/process.c:219 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_notifier_call_chain") [flags 0x41] <function_decl 0x111e7780 idle_notifier_call_chain>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/process.c:220 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 92 3 arch/arm/kernel/process.c:220 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_nohz_stop_sched_tick") [flags 0x41] <function_decl 0x113e3680 tick_nohz_stop_sched_tick>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 141 142 148 153 155 156 157 158 159 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 24 [cc] 141 142 148 153 155 156 157 158 159 160 161 162
;; live  kill	

;; Pred edge  16 [100.0%] 
(code_label 92 22 25 4 92 "" [1 uses])

(note 25 92 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 4 arch/arm/kernel/process.c:223 (set (reg:SI 148 [ D.25786 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26530 ])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 29 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 153)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 29 27 30 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 156)
        (plus:SI (reg:SI 148 [ D.25786 ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 30 29 31 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ D.25786 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 31 30 32 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 155 [ D.25786 ])
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 156)
            (reg:SI 148 [ D.25786 ]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 32 31 33 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 157)
        (ashiftrt:SI (reg:SI 155 [ D.25786 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 155 [ D.25786 ])
        (expr_list:REG_EQUAL (div:SI (reg:SI 148 [ D.25786 ])
                (const_int 32 [0x20]))
            (nil))))

(insn 33 32 34 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 158)
        (ashift:SI (reg:SI 157)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 34 33 35 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 159 [ cpu_online_mask ])
        (mem/u/f/c/i:SI (reg/f:SI 153) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
            (nil))))

(insn 35 34 36 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 141 [ D.26512 ])
        (plus:SI (reg/f:SI 159 [ cpu_online_mask ])
            (reg:SI 158))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 159 [ cpu_online_mask ])
        (expr_list:REG_DEAD (reg:SI 158)
            (nil))))

(insn 36 35 37 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 142 [ D.26511 ])
        (mem/v:SI (reg/f:SI 141 [ D.26512 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ D.26512 ])
        (nil)))

(insn 37 36 38 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 160)
        (and:SI (reg:SI 148 [ D.25786 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 148 [ D.25786 ])
        (nil)))

(insn 38 37 39 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 161)
        (lshiftrt:SI (reg:SI 142 [ D.26511 ])
            (reg:SI 160))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg:SI 142 [ D.26511 ])
            (nil))))

(insn 39 38 40 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 162)
        (and:SI (reg:SI 161)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 40 39 41 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(jump_insn 41 40 42 4 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 43 42 44 5 arch/arm/kernel/process.c:224 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_die") [flags 0x41] <function_decl 0x10c9f400 cpu_die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 24 [cc] 140 163
;; live  kill	 24 [cc]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 44 43 45 6 87 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105916)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 47 46 48 6 arch/arm/kernel/process.c:229 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8818750)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 48 47 49 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 163)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 140 [ D.26517 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 163)
                (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                        (const_int 24 [0x18]))) [0 outer_cache.sync+0 S4 A32])
            (nil))))

(insn 50 49 51 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 140 [ D.26517 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140


;; Succ edge  7 [69.8%]  (fallthru)
;; Succ edge  8 [30.2%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  6 [69.8%]  (fallthru)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 53 52 54 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:95 (parallel [
            (call (mem:SI (reg/f:SI 140 [ D.26517 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 140 [ D.26517 ])
        (nil))
    (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 147 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 24 [cc] 147 164
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [30.2%] 
(code_label 54 53 55 8 88 "" [1 uses])

(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 8 arch/arm/kernel/process.c:231 (set (reg/f:SI 164)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 8 arch/arm/kernel/process.c:231 (set (reg:SI 147 [ hlt_counter.331 ])
        (mem/v/c/i:SI (reg/f:SI 164) [0 hlt_counter+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 164)
        (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 hlt_counter+0 S4 A32])
            (nil))))

(insn 58 57 59 8 arch/arm/kernel/process.c:231 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147 [ hlt_counter.331 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ hlt_counter.331 ])
        (nil)))

(jump_insn 59 58 60 8 arch/arm/kernel/process.c:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  9 [71.0%]  (fallthru)
;; Succ edge  10 [29.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  8 [71.0%]  (fallthru)
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 62 61 65 9 arch/arm/kernel/process.c:233 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8819263)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  16 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 24 [cc] 146
;; live  kill	 14 [lr]

;; Pred edge  8 [29.0%] 
(code_label 65 62 66 10 89 "" [1 uses])

(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(call_insn 67 66 68 10 arch/arm/kernel/process.c:236 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpuidle_idle_call") [flags 0x41] <function_decl 0x114be300 cpuidle_idle_call>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 68 67 69 10 arch/arm/kernel/process.c:236 (set (reg:SI 146 [ D.25799 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 69 68 70 10 arch/arm/kernel/process.c:236 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146 [ D.25799 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.25799 ])
        (nil)))

(jump_insn 70 69 71 10 arch/arm/kernel/process.c:236 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  11 [29.0%]  (fallthru)
;; Succ edge  12 [71.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 165 166
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 11 arch/arm/kernel/process.c:237 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 11 arch/arm/kernel/process.c:237 (set (reg/f:SI 166 [ pm_idle ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 165)
                (const_int 8 [0x8])) [0 pm_idle+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 165)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 8 [0x8]))) [0 pm_idle+0 S4 A32])
            (nil))))

(call_insn 74 73 75 11 arch/arm/kernel/process.c:237 (parallel [
            (call (mem:SI (reg/f:SI 166 [ pm_idle ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 166 [ pm_idle ])
        (nil))
    (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 24 [cc] 145 167
;; live  kill	 24 [cc]

;; Pred edge  10 [71.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 75 74 76 12 90 "" [1 uses])

(note 76 75 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 145 [ _flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118204))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 78 77 79 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:SI 167)
        (and:SI (reg/v:SI 145 [ _flags ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ _flags ])
        (nil)))

(insn 79 78 80 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(jump_insn 80 79 81 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  13 [0.0%]  (fallthru)
;; Succ edge  14 [100.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [0.0%]  (fallthru)
(note 81 80 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 83 81 84 13 arch/arm/kernel/process.c:244 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11640640>)
        (nil)))

(insn 84 83 85 13 arch/arm/kernel/process.c:244 discrim 1 (set (reg:SI 1 r1)
        (const_int 244 [0xf4])) 167 {*arm_movsi_insn} (nil))

(call_insn 85 84 86 13 arch/arm/kernel/process.c:244 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 12 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
(code_label 86 85 87 14 91 "" [1 uses])

(note 87 86 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 119 14 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104764)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  16 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 3 9) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 138 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 24 [cc] 138 169
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru,dfs_back)
(note 119 88 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 91 119 93 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.26533 ])
        (mem/v:SI (reg/f:SI 139 [ D.26530 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 93 91 94 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 169)
        (and:SI (reg:SI 138 [ D.26533 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.26533 ])
        (nil)))

(insn 94 93 95 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 95 94 96 16 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 16 -> ( 4 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  4 [100.0%] 
;; Succ edge  17 [0.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 170 171 172 173
;; live  kill	 14 [lr]

;; Pred edge  16 [0.0%]  (fallthru)
(note 96 95 97 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(call_insn 97 96 98 17 arch/arm/kernel/process.c:248 (parallel [
            (call (mem:SI (symbol_ref:SI ("tick_nohz_restart_sched_tick") [flags 0x41] <function_decl 0x113e3700 tick_nohz_restart_sched_tick>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 98 97 99 17 arch/arm/kernel/process.c:249 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn 99 98 100 17 arch/arm/kernel/process.c:249 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_notifier_call_chain") [flags 0x41] <function_decl 0x111e7780 idle_notifier_call_chain>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 100 99 101 17 arch/arm/kernel/process.c:250 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8821437)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 101 100 102 17 arch/arm/kernel/process.c:250 (set (reg:SI 170 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26530 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 17 arch/arm/kernel/process.c:250 (set (reg:SI 171)
        (plus:SI (reg:SI 170 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 170 [ <variable>.preempt_count ])
        (nil)))

(insn 103 102 104 17 arch/arm/kernel/process.c:250 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26530 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(call_insn 104 103 105 17 arch/arm/kernel/process.c:251 (parallel [
            (call (mem:SI (symbol_ref:SI ("schedule") [flags 0x41] <function_decl 0x10f44e80 schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 105 104 106 17 arch/arm/kernel/process.c:252 (set (reg:SI 172 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26530 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 17 arch/arm/kernel/process.c:252 (set (reg:SI 173)
        (plus:SI (reg:SI 172 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172 [ <variable>.preempt_count ])
        (nil)))

(insn 107 106 108 17 arch/arm/kernel/process.c:252 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.26530 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 108 107 0 17 arch/arm/kernel/process.c:252 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8821693)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 17 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  3 [100.0%]  (fallthru,dfs_back)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_idle_wait (cpu_idle_wait)[0:1345]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d15(14){ }d26(25){ }d27(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(11){ }u10(13){ }u11(14){ }u12(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 9 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


cpu_idle_wait

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} 
;;    total ref usage 143{130d,13u,0e} in 6{5 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/process.c:187 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8813372)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/process.c:189 (set (reg/f:SI 133)
        (symbol_ref:SI ("do_nothing") [flags 0x3] <function_decl 0x114f2c80 do_nothing>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:189 (set (reg:SI 0 r0)
        (reg/f:SI 133)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133)
        (expr_list:REG_EQUAL (symbol_ref:SI ("do_nothing") [flags 0x3] <function_decl 0x114f2c80 do_nothing>)
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/process.c:189 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/process.c:189 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 10 9 0 2 arch/arm/kernel/process.c:189 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function") [flags 0x41] <function_decl 0x10c9fa80 smp_call_function>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_machine_restart (arm_machine_restart)[0:1343]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 8 (  1.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)

7 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1.
Predecessors: 
;; bb 0 artificial_defs: { d11(0){ }d20(1){ }d28(2){ }d36(3){ }d37(11){ }d45(12){ }d46(13){ }d54(14){ }d126(25){ }d127(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140 141
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 139 140 141
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 99, maybe hot.
Predecessors:  4 [99.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 100, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 3 [100.0%]  (fallthru,dfs_back)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 133
;; live  kill	

Successors:  3 [99.0%]  5 [1.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1.
Predecessors:  4 [1.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 142
;; live  kill	 14 [lr]

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 6 , prev 5, next 1, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  6 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 6, loop_depth 0, count 0, freq 0.
Predecessors: 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u48(11){ }u49(13){ }u50(14){ }u51(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 133 in basic block 5
Found 1 implicit sets
SET hash table (11 buckets, 5 entries)
Index 0 (hash value 4)
  (set (reg/f:SI 136)
    (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>))
Index 1 (hash value 8)
  (set (reg/f:SI 140)
    (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>))
Index 2 (hash value 1)
  (set (reg/v:SI 133 [ __ms ])
    (const_int 1000 [0x3e8]))
Index 3 (hash value 1)
  (set (reg/v:SI 133 [ __ms ])
    (const_int -1 [0xffffffffffffffff]))
Index 4 (hash value 10)
  (set (reg/f:SI 142)
    (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>))


CPROP of arm_machine_restart, pass 1: 3424 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (11 buckets, 6 entries)
Index 0 (hash value 8)
  (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)
Index 1 (hash value 2)
  (mem/s/f/j/c:SI (plus:SI (reg/f:SI 136)
        (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32])
Index 2 (hash value 1)
  (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>)
Index 3 (hash value 2)
  (mem/f/c/i:SI (reg/f:SI 140) [0 arch_reset+0 S4 A32])
Index 4 (hash value 6)
  (plus:SI (reg/v:SI 133 [ __ms ])
    (const_int -1 [0xffffffffffffffff]))
Index 5 (hash value 8)
  (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 35.
deleting insn with uid = 35.
LOCAL CONST-PROP: Replacing reg 142 in insn 35 with constant (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)
Implicit set of reg 133 in basic block 5
Found 1 implicit sets
SET hash table (11 buckets, 5 entries)
Index 0 (hash value 4)
  (set (reg/f:SI 136)
    (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>))
Index 1 (hash value 8)
  (set (reg/f:SI 140)
    (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>))
Index 2 (hash value 1)
  (set (reg/v:SI 133 [ __ms ])
    (const_int 1000 [0x3e8]))
Index 3 (hash value 1)
  (set (reg/v:SI 133 [ __ms ])
    (const_int -1 [0xffffffffffffffff]))
Index 4 (hash value 10)
  (set (reg/f:SI 142)
    (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>))


CPROP of arm_machine_restart, pass 2: 9316 bytes needed, 1 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of arm_machine_restart: 7 basic blocks, 1 pass, 5892 bytes

deleting insn with uid = 34.
Deleted 1 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 8 (  1.1)


arm_machine_restart

Dataflow summary:
def_info->table_size = 846, use_info->table_size = 52
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,5u} r1={9d,2u} r2={8d} r3={8d} r11={1d,6u} r12={8d} r13={1d,13u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={8d,1u} r25={1d,6u} r26={1d,5u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={2d,2u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 892{843d,49u,0e} in 22{15 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d11(0){ }d20(1){ }d28(2){ }d36(3){ }d37(11){ }d45(12){ }d46(13){ }d54(14){ }d126(25){ }d127(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140 141
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 139 140 141
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 4 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 2 3 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 133
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 142
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 6 5 )->[6]->( 6 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u48(11){ }u49(13){ }u50(14){ }u51(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 26 to worklist
  Adding insn 32 to worklist
  Adding insn 36 to worklist
Finished finding needed instructions:
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
  Adding insn 25 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 35 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
  Adding insn 31 to worklist
  Adding insn 29 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 7 count 11 (  1.6)
;; Following path with 25 sets: 2 
;; Following path with 3 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 4 sets: 3 
starting the processing of deferred insns
ending the processing of deferred insns


arm_machine_restart

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,5u} r1={9d,2u} r2={8d} r3={8d} r11={1d,6u} r12={8d} r13={1d,13u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={8d,1u} r25={1d,6u} r26={1d,5u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={2d,2u} r134={1d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 892{843d,49u,0e} in 22{15 regular + 7 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140 141
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 139 140 141
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/process.c:133 (set (reg/v:SI 134 [ mode ])
        (reg:SI 0 r0 [ mode ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/process.c:133 (set (reg/v/f:SI 135 [ cmd ])
        (reg:SI 1 r1 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ cmd ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 8 4 9 2 arch/arm/kernel/process.c:139 (parallel [
            (call (mem:SI (symbol_ref:SI ("setup_mm_for_reboot") [flags 0x41] <function_decl 0x114f2280 setup_mm_for_reboot>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/process.c:142 (set (reg/f:SI 136)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/process.c:142 (set (reg/f:SI 137 [ cpu_cache.flush_kern_all ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 136)
                (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)
                    (const_int 4 [0x4]))) [0 cpu_cache.flush_kern_all+0 S4 A32])
        (nil)))

(call_insn 11 10 12 2 arch/arm/kernel/process.c:142 (parallel [
            (call (mem:SI (reg/f:SI 137 [ cpu_cache.flush_kern_all ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 137 [ cpu_cache.flush_kern_all ])
        (nil))
    (nil))

(call_insn 12 11 14 2 arch/arm/kernel/process.c:145 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_proc_fin") [flags 0x41] <function_decl 0x11004c00 cpu_v7_proc_fin>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 14 12 15 2 arch/arm/kernel/process.c:148 (set (reg/f:SI 139 [ cpu_cache.flush_kern_all ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 136)
                (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x114d5600 cpu_cache>)
                        (const_int 4 [0x4]))) [0 cpu_cache.flush_kern_all+0 S4 A32])
            (nil))))

(call_insn 15 14 16 2 arch/arm/kernel/process.c:148 (parallel [
            (call (mem:SI (reg/f:SI 139 [ cpu_cache.flush_kern_all ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 139 [ cpu_cache.flush_kern_all ])
        (nil))
    (nil))

(insn 16 15 17 2 arch/arm/kernel/process.c:153 (set (reg/f:SI 140)
        (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/process.c:153 (set (reg/f:SI 141 [ arch_reset ])
        (mem/f/c/i:SI (reg/f:SI 140) [0 arch_reset+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("arch_reset") [flags 0xc0] <var_decl 0x114eccc0 arch_reset>) [0 arch_reset+0 S4 A32])
            (nil))))

(insn 18 17 19 2 arch/arm/kernel/process.c:153 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ mode ])
        (nil)))

(insn 19 18 20 2 arch/arm/kernel/process.c:153 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ cmd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ cmd ])
        (nil)))

(call_insn 20 19 21 2 arch/arm/kernel/process.c:153 (parallel [
            (call (mem:SI (reg/f:SI 141 [ arch_reset ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 141 [ arch_reset ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 21 20 30 2 arch/arm/kernel/process.c:159 (set (reg/v:SI 133 [ __ms ])
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [99.0%] 
(code_label 30 21 24 3 104 "" [1 uses])

(note 24 30 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 3 arch/arm/kernel/process.c:159 discrim 2 (set (reg:SI 0 r0)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 3 arch/arm/kernel/process.c:159 discrim 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x11153600 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 27 26 28 4 103 "" [0 uses])

(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 31 4 arch/arm/kernel/process.c:159 discrim 1 (set (reg/v:SI 133 [ __ms ])
        (plus:SI (reg/v:SI 133 [ __ms ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 31 29 32 4 arch/arm/kernel/process.c:159 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ __ms ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 4 arch/arm/kernel/process.c:159 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  3 [99.0%] 
;; Succ edge  5 [1.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [1.0%]  (fallthru)
(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 36 5 arch/arm/kernel/process.c:160 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1164c780>)
        (nil)))

(call_insn 36 35 38 5 arch/arm/kernel/process.c:160 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 38 36 37 6 105 "" [0 uses])

(note 37 38 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_trigger_all_cpu_backtrace (arch_trigger_all_cpu_backtrace)[0:1337]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d12(14){ }d23(25){ }d24(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u5(11){ }u6(13){ }u7(14){ }u8(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 3 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


arch_trigger_all_cpu_backtrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 135{126d,9u,0e} in 1{0 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 5 2 0 2 arch/arm/kernel/process.c:69 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_send_all_cpu_backtrace") [flags 0x41] <function_decl 0x10c9f780 smp_send_all_cpu_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_data.clone.0 (show_data.clone.0)[0:1368]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 28 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 24 (  1.8)

13 basic blocks, 17 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d13(0){ }d25(1){ }d35(2){ }d43(3){ }d44(11){ }d52(12){ }d53(13){ }d61(14){ }d137(25){ }d138(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 157 158
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 157 158
;; live  kill	

Successors:  12 [100.0%]  3 [0.0%]  (fallthru)
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4, maybe hot.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 140 142 145 147 148 152 154 159 160 161 162 163
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; live  gen 	 0 [r0] 2 [r2] 138 139 140 142 145 147 148 152 154 159 160 161 162 163
;; live  kill	 14 [lr]

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 0, maybe hot.
Predecessors:  11 (dfs_back) 3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 169 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 1 [r1] 135 136 169 170 171
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154


Basic block 5 , prev 4, next 6, loop_depth 2, count 0, freq 0, maybe hot.
Predecessors:  10 [88.9%]  (dfs_back) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 142 145 147 148 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 141 149 172 173 174 175 176 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 141 149 172 173 174 175 176 177 178 179
;; live  kill	 14 [lr]

Successors:  6 [0.0%]  (fallthru) 7 [100.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154


Basic block 6 , prev 5, next 7, loop_depth 2, count 0, freq 0, maybe hot.
Predecessors:  5 [0.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154


Basic block 7 , prev 6, next 8, loop_depth 2, count 0, freq 0, maybe hot.
Predecessors:  5 [100.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 154
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154


Basic block 8 , prev 7, next 9, loop_depth 2, count 0, freq 0, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 180
;; live  kill	 14 [lr]

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154


Basic block 9 , prev 8, next 10, loop_depth 2, count 0, freq 0, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 1 [r1] 181
;; live  kill	 14 [lr]

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154


Basic block 10 , prev 9, next 11, loop_depth 2, count 0, freq 0, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 24 [cc] 135
;; live  kill	

Successors:  5 [88.9%]  (dfs_back) 11 [11.1%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154


Basic block 11 , prev 10, next 12, loop_depth 1, count 0, freq 0, maybe hot.
Predecessors:  10 [11.1%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 140 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 24 [cc] 138 140 182
;; live  kill	 14 [lr]

Successors:  4 (dfs_back) 12 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154


Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 2 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u145(11){ }u146(13){ }u147(14){ }u148(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 137 in basic block 9
Implicit set of reg 135 in basic block 11
Found 2 implicit sets
SET hash table (19 buckets, 17 entries)
Index 0 (hash value 6)
  (set (reg:SI 158)
    (const_int 1073741568 [0x3fffff00]))
Index 1 (hash value 7)
  (set (reg/f:SI 159)
    (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>))
Index 2 (hash value 12)
  (set (reg/f:SI 145 [ D.26604 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 3 (hash value 14)
  (set (reg/f:SI 147 [ D.26601 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 4 (hash value 0)
  (set (reg/f:SI 152 [ D.26587 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 5 (hash value 15)
  (set (reg/f:SI 148 [ D.26597 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 6 (hash value 2)
  (set (reg/f:SI 154 [ D.26580 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 7 (hash value 5)
  (set (reg/v:SI 138 [ i ])
    (const_int 0 [0x0]))
Index 8 (hash value 3)
  (set (reg/f:SI 136 [ p.339 ])
    (reg/v/f:SI 140 [ p ]))
Index 9 (hash value 17)
  (set (reg/f:SI 169)
    (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>))
Index 10 (hash value 2)
  (set (reg:SI 135 [ ivtmp.1032 ])
    (const_int 0 [0x0]))
Index 11 (hash value 1)
  (set (reg:SI 172)
    (const_int 0 [0x0]))
Index 12 (hash value 9)
  (set (reg/f:SI 180)
    (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>))
Index 13 (hash value 4)
  (set (reg:SI 137 [ D.26611 ])
    (const_int 0 [0x0]))
Index 14 (hash value 10)
  (set (reg/f:SI 181)
    (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>))
Index 15 (hash value 2)
  (set (reg:SI 135 [ ivtmp.1032 ])
    (const_int 32 [0x20]))
Index 16 (hash value 11)
  (set (reg/f:SI 182)
    (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>))

rescanning insn with uid = 55.
deleting insn with uid = 55.
GLOBAL COPY-PROP: Replacing reg 145 in insn 55 with reg 142
rescanning insn with uid = 56.
deleting insn with uid = 56.
GLOBAL COPY-PROP: Replacing reg 147 in insn 56 with reg 142
rescanning insn with uid = 58.
deleting insn with uid = 58.
GLOBAL COPY-PROP: Replacing reg 147 in insn 58 with reg 142
rescanning insn with uid = 61.
deleting insn with uid = 61.
GLOBAL COPY-PROP: Replacing reg 136 in insn 61 with reg 140
rescanning insn with uid = 68.
deleting insn with uid = 68.
GLOBAL COPY-PROP: Replacing reg 152 in insn 68 with reg 142
rescanning insn with uid = 70.
deleting insn with uid = 70.
GLOBAL COPY-PROP: Replacing reg 152 in insn 70 with reg 142
rescanning insn with uid = 72.
deleting insn with uid = 72.
GLOBAL COPY-PROP: Replacing reg 148 in insn 72 with reg 142
rescanning insn with uid = 80.
deleting insn with uid = 80.
GLOBAL COPY-PROP: Replacing reg 154 in insn 80 with reg 142

CPROP of show_data.clone.0, pass 1: 5524 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 8 global copy props

Code Hosting Expressions hash table (19 buckets, 25 entries)
Index 0 (hash value 3)
  (plus:SI (reg/v:SI 155 [ addr ])
    (const_int 1073741824 [0x40000000]))
Index 1 (hash value 1)
  (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)
Index 2 (hash value 0)
  (and:SI (reg/v:SI 155 [ addr ])
    (const_int -4 [0xfffffffffffffffc]))
Index 3 (hash value 7)
  (and:SI (reg/v:SI 155 [ addr ])
    (const_int 3 [0x3]))
Index 4 (hash value 6)
  (plus:SI (reg:SI 160)
    (const_int 256 [0x100]))
Index 5 (hash value 10)
  (plus:SI (reg:SI 161)
    (const_int 31 [0x1f]))
Index 6 (hash value 3)
  (ashiftrt:SI (reg:SI 162)
    (const_int 5 [0x5]))
Index 7 (hash value 17)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8129 [0xffffffffffffe03f]))
Index 8 (hash value 11)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8192 [0xffffffffffffe000]))
Index 9 (hash value 2)
  (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>)
Index 10 (hash value 9)
  (ashift:SI (reg/v/f:SI 140 [ p ])
    (const_int 16 [0x10]))
Index 11 (hash value 12)
  (and:SI (reg/v/f:SI 140 [ p ])
    (const_int 65535 [0xffff]))
Index 12 (hash value 11)
  (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
Index 13 (hash value 7)
  (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
Index 14 (hash value 11)
  (plus:SI (reg:SI 173 [ <variable>.preempt_count ])
    (const_int 1 [0x1]))
Index 15 (hash value 10)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))
Index 16 (hash value 15)
  (plus:SI (reg/v/f:SI 140 [ p ])
    (reg:SI 135 [ ivtmp.1032 ]))
Index 17 (hash value 13)
  (plus:SI (reg:SI 177 [ <variable>.preempt_count ])
    (const_int -1 [0xffffffffffffffff]))
Index 18 (hash value 0)
  (and:SI (reg:SI 149 [ D.26594 ])
    (const_int 2 [0x2]))
Index 19 (hash value 3)
  (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>)
Index 20 (hash value 4)
  (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>)
Index 21 (hash value 14)
  (plus:SI (reg:SI 135 [ ivtmp.1032 ])
    (const_int 4 [0x4]))
Index 22 (hash value 9)
  (plus:SI (reg/v/f:SI 140 [ p ])
    (const_int 32 [0x20]))
Index 23 (hash value 5)
  (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)
Index 24 (hash value 14)
  (plus:SI (reg/v:SI 138 [ i ])
    (const_int 1 [0x1]))

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 15.
deleting insn with uid = 15.
LOCAL CONST-PROP: Replacing reg 159 in insn 15 with constant (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)
rescanning insn with uid = 48.
deleting insn with uid = 48.
LOCAL CONST-PROP: Replacing reg 169 in insn 48 with constant (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>)
rescanning insn with uid = 85.
deleting insn with uid = 85.
LOCAL CONST-PROP: Replacing reg 180 in insn 85 with constant (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>)
rescanning insn with uid = 92.
deleting insn with uid = 92.
LOCAL CONST-PROP: Replacing reg 181 in insn 92 with constant (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>)
rescanning insn with uid = 104.
deleting insn with uid = 104.
LOCAL CONST-PROP: Replacing reg 182 in insn 104 with constant (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)
Implicit set of reg 137 in basic block 9
Implicit set of reg 135 in basic block 11
Found 2 implicit sets
SET hash table (19 buckets, 17 entries)
Index 0 (hash value 6)
  (set (reg:SI 158)
    (const_int 1073741568 [0x3fffff00]))
Index 1 (hash value 7)
  (set (reg/f:SI 159)
    (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>))
Index 2 (hash value 12)
  (set (reg/f:SI 145 [ D.26604 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 3 (hash value 14)
  (set (reg/f:SI 147 [ D.26601 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 4 (hash value 0)
  (set (reg/f:SI 152 [ D.26587 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 5 (hash value 15)
  (set (reg/f:SI 148 [ D.26597 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 6 (hash value 2)
  (set (reg/f:SI 154 [ D.26580 ])
    (reg/f:SI 142 [ D.26609 ]))
Index 7 (hash value 5)
  (set (reg/v:SI 138 [ i ])
    (const_int 0 [0x0]))
Index 8 (hash value 3)
  (set (reg/f:SI 136 [ p.339 ])
    (reg/v/f:SI 140 [ p ]))
Index 9 (hash value 17)
  (set (reg/f:SI 169)
    (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>))
Index 10 (hash value 2)
  (set (reg:SI 135 [ ivtmp.1032 ])
    (const_int 0 [0x0]))
Index 11 (hash value 1)
  (set (reg:SI 172)
    (const_int 0 [0x0]))
Index 12 (hash value 9)
  (set (reg/f:SI 180)
    (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>))
Index 13 (hash value 4)
  (set (reg:SI 137 [ D.26611 ])
    (const_int 0 [0x0]))
Index 14 (hash value 10)
  (set (reg/f:SI 181)
    (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>))
Index 15 (hash value 2)
  (set (reg:SI 135 [ ivtmp.1032 ])
    (const_int 32 [0x20]))
Index 16 (hash value 11)
  (set (reg/f:SI 182)
    (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>))


CPROP of show_data.clone.0, pass 2: 16016 bytes needed, 5 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of show_data.clone.0: 13 basic blocks, 1 pass, 10492 bytes

deleting insn with uid = 103.
deleting insn with uid = 91.
deleting insn with uid = 84.
deleting insn with uid = 45.
deleting insn with uid = 44.
deleting insn with uid = 41.
deleting insn with uid = 38.
deleting insn with uid = 35.
deleting insn with uid = 32.
deleting insn with uid = 29.
deleting insn with uid = 14.
Deleted 11 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)


show_data.clone.0

Dataflow summary:
def_info->table_size = 897, use_info->table_size = 149
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,8u} r1={11d,4u} r2={10d,2u} r3={8d} r11={1d,12u} r12={8d} r13={1d,20u,1d} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,5u} r25={1d,14u,1d} r26={1d,11u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r135={2d,3u} r137={1d,1u} r138={2d,2u} r139={1d,1u} r140={2d,3u,1d} r141={1d,1u} r142={1d,8u} r149={1d,1u} r155={1d,4u} r157={1d,1u,1d} r158={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 994{873d,117u,4e} in 63{56 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d13(0){ }d25(1){ }d35(2){ }d43(3){ }d44(11){ }d52(12){ }d53(13){ }d61(14){ }d137(25){ }d138(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 12 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 157 158
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 157 158
;; live  kill	
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 140 142 160 161 162 163
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; live  gen 	 0 [r0] 2 [r2] 138 139 140 142 145 147 148 152 154 159 160 161 162 163
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154

( 11 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 1 [r1] 135 136 169 170 171
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154

( 10 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 141 149 172 173 174 175 176 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 141 149 172 173 174 175 176 177 178 179
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139 140 141 142 145 147 148 152 154
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 180
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 1 [r1] 181
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154

( 8 9 )->[10]->( 5 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154
;; live  gen 	 24 [cc] 135
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140 142 145 147 148 152 154

( 10 )->[11]->( 4 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154
;; live  gen 	 0 [r0] 24 [cc] 138 140 182
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142 145 147 148 152 154

( 11 2 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u145(11){ }u146(13){ }u147(14){ }u148(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 18 to worklist
  Adding insn 50 to worklist
  Adding insn 75 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 77 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 86 to worklist
  Adding insn 94 to worklist
  Adding insn 100 to worklist
  Adding insn 109 to worklist
  Adding insn 105 to worklist
Finished finding needed instructions:
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 142
  Adding insn 108 to worklist
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 102 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
  Adding insn 99 to worklist
  Adding insn 97 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
  Adding insn 85 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
  Adding insn 93 to worklist
  Adding insn 92 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
  Adding insn 81 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
  Adding insn 42 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
processing block 2 lr out =  1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 4 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 24 (  1.8)
;; Following path with 5 sets: 2 
;; Following path with 13 sets: 3 
;; Following path with 8 sets: 4 
;; Following path with 28 sets: 5 
;; Following path with 3 sets: 6 
;; Following path with 3 sets: 7 
;; Following path with 5 sets: 9 
;; Following path with 4 sets: 8 
;; Following path with 3 sets: 10 
;; Following path with 8 sets: 11 
starting the processing of deferred insns
ending the processing of deferred insns


show_data.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,8u} r1={11d,4u} r2={10d,2u} r3={8d} r11={1d,12u} r12={8d} r13={1d,20u,1d} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={12d,5u} r25={1d,14u,1d} r26={1d,11u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r135={2d,3u} r137={1d,1u} r138={2d,2u} r139={1d,1u} r140={2d,3u,1d} r141={1d,1u} r142={1d,8u} r149={1d,1u} r155={1d,4u} r157={1d,1u,1d} r158={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} 
;;    total ref usage 994{873d,117u,4e} in 63{56 regular + 7 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 155 157 158
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 155 157 158
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 7 6 2 arch/arm/kernel/process.c:303 (set (reg/v:SI 155 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ addr ])
        (nil)))

(note 6 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/kernel/process.c:313 (set (reg:SI 157)
        (plus:SI (reg/v:SI 155 [ addr ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 10 9 11 2 arch/arm/kernel/process.c:313 (set (reg:SI 158)
        (const_int 1073741568 [0x3fffff00])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/process.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 157)
            (reg:SI 158))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 157)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 157)
                    (const_int 1073741568 [0x3fffff00]))
                (nil)))))

(jump_insn 12 11 13 2 arch/arm/kernel/process.c:313 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155
;; live  out 	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 155


;; Succ edge  12 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 140 142 160 161 162 163
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; live  gen 	 0 [r0] 2 [r2] 138 139 140 142 160 161 162 163
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 13 12 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 13 17 3 arch/arm/kernel/process.c:316 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1159e8a0>)
        (nil)))

(insn 17 15 18 3 arch/arm/kernel/process.c:316 (set (reg:SI 2 r2)
        (reg/v:SI 155 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 3 arch/arm/kernel/process.c:316 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 19 18 20 3 arch/arm/kernel/process.c:322 (set (reg/v/f:SI 140 [ p ])
        (and:SI (reg/v:SI 155 [ addr ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 19 21 3 arch/arm/kernel/process.c:324 (set (reg:SI 160)
        (and:SI (reg/v:SI 155 [ addr ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ addr ])
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/process.c:324 (set (reg:SI 161)
        (plus:SI (reg:SI 160)
            (const_int 256 [0x100]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 22 21 23 3 arch/arm/kernel/process.c:324 (set (reg:SI 162)
        (plus:SI (reg:SI 161)
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 23 22 25 3 arch/arm/kernel/process.c:324 (set (reg/v:SI 139 [ nlines ])
        (ashiftrt:SI (reg:SI 162)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 25 23 26 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 25 42 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 142 [ D.26609 ])
        (and:SI (reg:SI 163)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 42 26 107 3 arch/arm/kernel/process.c:327 (set (reg/v:SI 138 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 11 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; live  gen 	 0 [r0] 1 [r1] 135 170 171
;; live  kill	 14 [lr]

;; Pred edge  11 (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 107 42 43 4 117 "" [1 uses])

(note 43 107 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 46 43 47 4 arch/arm/kernel/process.c:332 (set (reg:SI 171)
        (ashift:SI (reg/v/f:SI 140 [ p ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 47 46 48 4 arch/arm/kernel/process.c:332 (set (reg:SI 170)
        (lshiftrt:SI (reg:SI 171)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (and:SI (reg/v/f:SI 140 [ p ])
                (const_int 65535 [0xffff]))
            (nil))))

(insn 48 47 49 4 arch/arm/kernel/process.c:332 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1164ff80>)
        (nil)))

(insn 49 48 50 4 arch/arm/kernel/process.c:332 (set (reg:SI 1 r1)
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(call_insn 50 49 51 4 arch/arm/kernel/process.c:332 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 51 50 98 4 arch/arm/kernel/process.c:332 (set (reg:SI 135 [ ivtmp.1032 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 10 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 141 149 172 173 174 175 176 177 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 137 141 149 172 173 174 175 176 177 178 179
;; live  kill	 14 [lr]

;; Pred edge  10 [88.9%]  (dfs_back)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 98 51 52 5 116 "" [1 uses])

(note 52 98 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 5 arch/arm/kernel/process.c:335 (set (reg/v:SI 141 [ old_fs ])
        (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 172)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 172)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 56 55 57 5 include/linux/uaccess.h:18 (set (reg:SI 173 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 5 include/linux/uaccess.h:18 (set (reg:SI 174)
        (plus:SI (reg:SI 173 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 173 [ <variable>.preempt_count ])
        (nil)))

(insn 58 57 59 5 include/linux/uaccess.h:18 (set (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 174)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 59 58 60 5 include/linux/uaccess.h:23 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8095453)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 60 59 61 5 arch/arm/kernel/process.c:335 (set (reg/f:SI 175)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 61 60 62 5 arch/arm/kernel/process.c:335 (set (reg:SI 176)
        (plus:SI (reg/v/f:SI 140 [ p ])
            (reg:SI 135 [ ivtmp.1032 ]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 5 arch/arm/kernel/process.c:335 (set (reg:SI 0 r0)
        (reg/f:SI 175)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 175)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn 63 62 64 5 arch/arm/kernel/process.c:335 (set (reg:SI 1 r1)
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 64 63 65 5 arch/arm/kernel/process.c:335 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 65 64 66 5 arch/arm/kernel/process.c:335 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113eda00 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 66 65 67 5 arch/arm/kernel/process.c:335 (set (reg:SI 137 [ D.26611 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 67 66 68 5 include/linux/uaccess.h:32 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8096605)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 68 67 69 5 include/linux/uaccess.h:33 (set (reg:SI 177 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 69 68 70 5 include/linux/uaccess.h:33 (set (reg:SI 178)
        (plus:SI (reg:SI 177 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 177 [ <variable>.preempt_count ])
        (nil)))

(insn 70 69 71 5 include/linux/uaccess.h:33 (set (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(insn 71 70 72 5 include/linux/uaccess.h:37 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8097245)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 72 71 73 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 149 [ D.26594 ])
        (mem/v:SI (reg/f:SI 142 [ D.26609 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 179)
        (and:SI (reg:SI 149 [ D.26594 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 149 [ D.26594 ])
        (nil)))

(insn 74 73 75 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 75 74 76 5 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 76 75 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 77 76 78 6 include/linux/uaccess.h:38 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 137 138 139 140 141 142
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 78 77 79 7 113 "" [1 uses])

(note 79 78 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg/f:SI 142 [ D.26609 ])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 141 [ old_fs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ old_fs ])
        (nil)))

(insn 81 80 82 7 arch/arm/kernel/process.c:335 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ D.26611 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.26611 ])
        (nil)))

(jump_insn 82 81 83 7 arch/arm/kernel/process.c:335 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  7 [50.0%]  (fallthru)
(note 83 82 85 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 85 83 86 8 arch/arm/kernel/process.c:336 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1165f7b0>)
        (nil)))

(call_insn 86 85 89 8 arch/arm/kernel/process.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  7 [50.0%] 
(code_label 89 86 90 9 114 "" [1 uses])

(note 90 89 92 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 92 90 93 9 arch/arm/kernel/process.c:338 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x1165cdc0>)
        (nil)))

(insn 93 92 94 9 arch/arm/kernel/process.c:338 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 data+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 94 93 95 9 arch/arm/kernel/process.c:338 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  gen 	 24 [cc] 135
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 95 94 96 10 115 "" [0 uses])

(note 96 95 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 99 10 arch/arm/kernel/process.c:338 (set (reg:SI 135 [ ivtmp.1032 ])
        (plus:SI (reg:SI 135 [ ivtmp.1032 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 99 97 100 10 arch/arm/kernel/process.c:333 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ ivtmp.1032 ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 100 99 101 10 arch/arm/kernel/process.c:333 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 10 -> ( 5 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 140 142


;; Succ edge  5 [88.9%]  (dfs_back)
;; Succ edge  11 [11.1%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142
;; live  gen 	 0 [r0] 24 [cc] 138 140
;; live  kill	 14 [lr]

;; Pred edge  10 [11.1%]  (fallthru)
(note 101 100 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 104 11 arch/arm/kernel/process.c:333 discrim 1 (set (reg/v/f:SI 140 [ p ])
        (plus:SI (reg/v/f:SI 140 [ p ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 104 102 105 11 arch/arm/kernel/process.c:342 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)
        (nil)))

(call_insn 105 104 106 11 arch/arm/kernel/process.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 106 105 108 11 arch/arm/kernel/process.c:327 (set (reg/v:SI 138 [ i ])
        (plus:SI (reg/v:SI 138 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 108 106 109 11 arch/arm/kernel/process.c:327 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ i ])
            (reg/v:SI 139 [ nlines ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 109 108 115 11 arch/arm/kernel/process.c:327 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 11 -> ( 4 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 142


;; Succ edge  4 (dfs_back)
;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 115 109 118 12 118 "" [1 uses])

(note 118 115 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __show_regs (__show_regs)[0:1355]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 30 count 41 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 30 count 46 (  1.9)

24 basic blocks, 30 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d55(0){ }d111(1){ }d148(2){ }d184(3){ }d185(11){ }d214(12){ }d215(13){ }d244(14){ }d532(25){ }d533(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 156 157 158 159 160 161 162 163 164 165 167 169 170 172 173 174 175 176 177 178 179 180 181
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145 156 157 158 159 160 161 162 163 164 165 167 169 170 172 173 174 175 176 177 178 179 180 181
;; live  kill	 14 [lr]

Successors:  4 [27.0%]  3 [73.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 7300, maybe hot.
Predecessors:  2 [73.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 154
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2700, maybe hot.
Predecessors:  2 [27.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 154
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 3 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  gen 	 24 [cc] 183
;; live  kill	

Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 153
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  5 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 153
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 6 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  gen 	 24 [cc] 185
;; live  kill	

Successors:  10 [50.0%]  9 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  8 [50.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 152
;; live  kill	

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  8 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 152
;; live  kill	

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  gen 	 24 [cc] 187
;; live  kill	

Successors:  13 [50.0%]  12 [50.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  gen 	 151
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  11 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  gen 	 151
;; live  kill	

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 12 [100.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; lr  def 	 24 [cc] 133 189 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  gen 	 24 [cc] 133 189 191
;; live  kill	

Successors:  15 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  gen 	 150
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  14 [50.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  gen 	 150
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 16 [100.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u191(11){ }u192(13){ }u193(25){ }u194(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 24 [cc] 192
;; live  kill	

Successors:  18 [50.0%]  (fallthru) 19 [50.0%] 
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  17 [50.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 149
;; live  kill	

Successors:  20 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  17 [50.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 149
;; live  kill	

Successors:  20 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  18 [100.0%]  (fallthru) 19 [100.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 147 148 193 194 196 197 198 199 200 202 203 205 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  gen 	 24 [cc] 147 148 193 194 196 197 198 199 200 202 203 205 206 207
;; live  kill	

Successors:  22 [39.0%]  21 [61.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  20 [61.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  gen 	 146
;; live  kill	

Successors:  23 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  20 [39.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  gen 	 146
;; live  kill	

Successors:  23 [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158


Basic block 23 , prev 22, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 21 [100.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 142 143 144 208 209 210 213 214 216 217 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 142 143 144 208 209 210 213 214 216 217 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (fallthru)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 23, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  23 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u417(11){ }u418(13){ }u419(14){ }u420(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


GCSE pass 1

Implicit set of reg 183 in basic block 6
Implicit set of reg 185 in basic block 9
Implicit set of reg 187 in basic block 12
Implicit set of reg 191 in basic block 15
Implicit set of reg 192 in basic block 18
Implicit set of reg 207 in basic block 22
Found 6 implicit sets
SET hash table (63 buckets, 52 entries)
Index 0 (hash value 35)
  (set (reg/f:SI 161)
    (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
            (const_int 199 [0xc7]))))
Index 1 (hash value 36)
  (set (reg/f:SI 162)
    (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>))
Index 2 (hash value 38)
  (set (reg/f:SI 164)
    (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>))
Index 3 (hash value 39)
  (set (reg/f:SI 165)
    (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
            (const_int 134 [0x86]))))
Index 4 (hash value 43)
  (set (reg/f:SI 169)
    (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>))
Index 5 (hash value 46)
  (set (reg/f:SI 172)
    (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>))
Index 6 (hash value 47)
  (set (reg/f:SI 173)
    (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>))
Index 7 (hash value 51)
  (set (reg/f:SI 177)
    (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>))
Index 8 (hash value 52)
  (set (reg/f:SI 178)
    (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>))
Index 9 (hash value 54)
  (set (reg/f:SI 180)
    (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>))
Index 10 (hash value 28)
  (set (reg:SI 154 [ iftmp.342 ])
    (const_int 110 [0x6e]))
Index 11 (hash value 28)
  (set (reg:SI 154 [ iftmp.342 ])
    (const_int 78 [0x4e]))
Index 12 (hash value 57)
  (set (reg:SI 183)
    (const_int 0 [0x0]))
Index 13 (hash value 27)
  (set (reg:SI 153 [ iftmp.344 ])
    (const_int 122 [0x7a]))
Index 14 (hash value 27)
  (set (reg:SI 153 [ iftmp.344 ])
    (const_int 90 [0x5a]))
Index 15 (hash value 59)
  (set (reg:SI 185)
    (const_int 0 [0x0]))
Index 16 (hash value 26)
  (set (reg:SI 152 [ iftmp.345 ])
    (const_int 99 [0x63]))
Index 17 (hash value 26)
  (set (reg:SI 152 [ iftmp.345 ])
    (const_int 67 [0x43]))
Index 18 (hash value 61)
  (set (reg:SI 187)
    (const_int 0 [0x0]))
Index 19 (hash value 25)
  (set (reg:SI 151 [ iftmp.346 ])
    (const_int 118 [0x76]))
Index 20 (hash value 25)
  (set (reg:SI 151 [ iftmp.346 ])
    (const_int 86 [0x56]))
Index 21 (hash value 0)
  (set (reg:SI 189)
    (const_int 0 [0x0]))
Index 22 (hash value 2)
  (set (reg:SI 191)
    (const_int 0 [0x0]))
Index 23 (hash value 24)
  (set (reg/f:SI 150 [ iftmp.347 ])
    (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>))
Index 24 (hash value 24)
  (set (reg/f:SI 150 [ iftmp.347 ])
    (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>))
Index 25 (hash value 3)
  (set (reg:SI 192)
    (const_int 0 [0x0]))
Index 26 (hash value 23)
  (set (reg/f:SI 149 [ iftmp.348 ])
    (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>))
Index 27 (hash value 23)
  (set (reg/f:SI 149 [ iftmp.348 ])
    (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>))
Index 28 (hash value 4)
  (set (reg/f:SI 193)
    (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]))
Index 29 (hash value 20)
  (set (reg/f:SI 146 [ iftmp.349 ])
    (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>))
Index 30 (hash value 18)
  (set (reg:SI 207 [ <variable>.addr_limit ])
    (const_int 0 [0x0]))
Index 31 (hash value 20)
  (set (reg/f:SI 146 [ iftmp.349 ])
    (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>))
Index 32 (hash value 19)
  (set (reg/f:SI 208)
    (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>))
Index 33 (hash value 21)
  (set (reg:SI 210)
    (const_int 0 [0x0]))
Index 34 (hash value 24)
  (set (reg/f:SI 213)
    (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>))
Index 35 (hash value 25)
  (set (reg/f:SI 214)
    (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>))
Index 36 (hash value 34)
  (set (reg/f:SI 223)
    (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>))
Index 37 (hash value 37)
  (set (reg/f:SI 226)
    (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>))
Index 38 (hash value 40)
  (set (reg/f:SI 229)
    (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>))
Index 39 (hash value 43)
  (set (reg/f:SI 232)
    (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>))
Index 40 (hash value 46)
  (set (reg/f:SI 235)
    (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>))
Index 41 (hash value 49)
  (set (reg/f:SI 238)
    (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>))
Index 42 (hash value 52)
  (set (reg/f:SI 241)
    (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>))
Index 43 (hash value 55)
  (set (reg/f:SI 244)
    (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>))
Index 44 (hash value 58)
  (set (reg/f:SI 247)
    (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>))
Index 45 (hash value 61)
  (set (reg/f:SI 250)
    (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>))
Index 46 (hash value 1)
  (set (reg/f:SI 253)
    (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>))
Index 47 (hash value 4)
  (set (reg/f:SI 256)
    (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>))
Index 48 (hash value 7)
  (set (reg/f:SI 259)
    (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>))
Index 49 (hash value 10)
  (set (reg/f:SI 262)
    (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>))
Index 50 (hash value 13)
  (set (reg/f:SI 265)
    (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>))
Index 51 (hash value 16)
  (set (reg/f:SI 268)
    (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>))


CPROP of __show_regs, pass 1: 11220 bytes needed, 0 local const props, 0 local copy props, 0 global const props, 0 global copy props

Code Hosting Expressions hash table (63 buckets, 88 entries)
Index 0 (hash value 38)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8129 [0xffffffffffffe03f]))
Index 1 (hash value 38)
  (and:SI (reg/f:SI 13 sp)
    (const_int -8192 [0xffffffffffffe000]))
Index 2 (hash value 48)
  (mem/s/j:SI (plus:SI (reg:SI 159)
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
Index 3 (hash value 43)
  (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
        (const_int 199 [0xc7])))
Index 4 (hash value 60)
  (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)
Index 5 (hash value 61)
  (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)
Index 6 (hash value 41)
  (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
        (const_int 134 [0x86])))
Index 7 (hash value 24)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
Index 8 (hash value 29)
  (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)
Index 9 (hash value 20)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
Index 10 (hash value 30)
  (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)
Index 11 (hash value 31)
  (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)
Index 12 (hash value 16)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])
Index 13 (hash value 12)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
Index 14 (hash value 8)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])
Index 15 (hash value 32)
  (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)
Index 16 (hash value 33)
  (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)
Index 17 (hash value 43)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])
Index 18 (hash value 34)
  (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)
Index 19 (hash value 23)
  (mem/s/j:SI (reg/v/f:SI 158 [ regs ]) [0 <variable>.uregs+0 S4 A32])
Index 20 (hash value 28)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
Index 21 (hash value 47)
  (and:SI (reg/v:SI 145 [ flags ])
    (const_int 1073741824 [0x40000000]))
Index 22 (hash value 15)
  (and:SI (reg/v:SI 145 [ flags ])
    (const_int 536870912 [0x20000000]))
Index 23 (hash value 62)
  (and:SI (reg/v:SI 145 [ flags ])
    (const_int 268435456 [0x10000000]))
Index 24 (hash value 36)
  (and:SI (reg:SI 133 [ temp.1067 ])
    (const_int 128 [0x80]))
Index 25 (hash value 35)
  (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>)
Index 26 (hash value 36)
  (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>)
Index 27 (hash value 35)
  (and:SI (reg:SI 133 [ temp.1067 ])
    (const_int 64 [0x40]))
Index 28 (hash value 52)
  (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
Index 29 (hash value 2)
  (and:SI (reg:SI 133 [ temp.1067 ])
    (const_int 31 [0x1f]))
Index 30 (hash value 31)
  (mem/s/u/f/j:SI (plus:SI (mult:SI (reg:SI 194)
            (const_int 4 [0x4]))
        (reg/f:SI 193)) [0 processor_modes S4 A32])
Index 31 (hash value 3)
  (and:SI (reg:SI 133 [ temp.1067 ])
    (const_int 32 [0x20]))
Index 32 (hash value 46)
  (lshiftrt:SI (reg:SI 196)
    (const_int 5 [0x5]))
Index 33 (hash value 35)
  (and:SI (reg:SI 133 [ temp.1067 ])
    (const_int 16777216 [0x1000000]))
Index 34 (hash value 3)
  (lshiftrt:SI (reg:SI 198)
    (const_int 23 [0x17]))
Index 35 (hash value 62)
  (ior:SI (reg:SI 197)
    (reg:SI 199))
Index 36 (hash value 44)
  (ashift:SI (reg:SI 200)
    (const_int 2 [0x2]))
Index 37 (hash value 48)
  (plus:SI (reg/f:SI 193)
    (reg:SI 202))
Index 38 (hash value 11)
  (mem/s/u/f/j:SI (plus:SI (reg:SI 203)
        (const_int 128 [0x80])) [0 isa_modes S4 A32])
Index 39 (hash value 19)
  (mem/s/j:SI (plus:SI (reg:SI 205)
        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
Index 40 (hash value 37)
  (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>)
Index 41 (hash value 38)
  (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>)
Index 42 (hash value 32)
  (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)
Index 43 (hash value 39)
  (plus:SI (reg/f:SI 25 sfp)
    (const_int -64 [0xffffffffffffffc0]))
Index 44 (hash value 33)
  (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)
Index 45 (hash value 34)
  (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)
Index 46 (hash value 30)
  (mem/s/j:SI (plus:SI (reg:SI 216)
        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
Index 47 (hash value 46)
  (plus:SI (reg:SI 222 [ <variable>.uregs+60 ])
    (const_int -128 [0xffffffffffffff80]))
Index 48 (hash value 35)
  (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)
Index 49 (hash value 49)
  (plus:SI (reg:SI 225 [ <variable>.uregs+56 ])
    (const_int -128 [0xffffffffffffff80]))
Index 50 (hash value 36)
  (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)
Index 51 (hash value 52)
  (plus:SI (reg:SI 228 [ <variable>.uregs+52 ])
    (const_int -128 [0xffffffffffffff80]))
Index 52 (hash value 37)
  (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)
Index 53 (hash value 55)
  (plus:SI (reg:SI 231 [ <variable>.uregs+48 ])
    (const_int -128 [0xffffffffffffff80]))
Index 54 (hash value 38)
  (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)
Index 55 (hash value 58)
  (plus:SI (reg:SI 234 [ <variable>.uregs+44 ])
    (const_int -128 [0xffffffffffffff80]))
Index 56 (hash value 39)
  (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)
Index 57 (hash value 61)
  (plus:SI (reg:SI 237 [ <variable>.uregs ])
    (const_int -128 [0xffffffffffffff80]))
Index 58 (hash value 40)
  (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)
Index 59 (hash value 31)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])
Index 60 (hash value 1)
  (plus:SI (reg:SI 240 [ <variable>.uregs+4 ])
    (const_int -128 [0xffffffffffffff80]))
Index 61 (hash value 41)
  (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)
Index 62 (hash value 35)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])
Index 63 (hash value 4)
  (plus:SI (reg:SI 243 [ <variable>.uregs+8 ])
    (const_int -128 [0xffffffffffffff80]))
Index 64 (hash value 35)
  (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)
Index 65 (hash value 39)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])
Index 66 (hash value 7)
  (plus:SI (reg:SI 246 [ <variable>.uregs+12 ])
    (const_int -128 [0xffffffffffffff80]))
Index 67 (hash value 36)
  (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)
Index 68 (hash value 10)
  (plus:SI (reg:SI 249 [ <variable>.uregs+16 ])
    (const_int -128 [0xffffffffffffff80]))
Index 69 (hash value 37)
  (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)
Index 70 (hash value 47)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])
Index 71 (hash value 13)
  (plus:SI (reg:SI 252 [ <variable>.uregs+20 ])
    (const_int -128 [0xffffffffffffff80]))
Index 72 (hash value 38)
  (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)
Index 73 (hash value 51)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])
Index 74 (hash value 16)
  (plus:SI (reg:SI 255 [ <variable>.uregs+24 ])
    (const_int -128 [0xffffffffffffff80]))
Index 75 (hash value 39)
  (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)
Index 76 (hash value 55)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])
Index 77 (hash value 19)
  (plus:SI (reg:SI 258 [ <variable>.uregs+28 ])
    (const_int -128 [0xffffffffffffff80]))
Index 78 (hash value 40)
  (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)
Index 79 (hash value 59)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])
Index 80 (hash value 22)
  (plus:SI (reg:SI 261 [ <variable>.uregs+32 ])
    (const_int -128 [0xffffffffffffff80]))
Index 81 (hash value 41)
  (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)
Index 82 (hash value 0)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])
Index 83 (hash value 25)
  (plus:SI (reg:SI 264 [ <variable>.uregs+36 ])
    (const_int -128 [0xffffffffffffff80]))
Index 84 (hash value 42)
  (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)
Index 85 (hash value 4)
  (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
        (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])
Index 86 (hash value 28)
  (plus:SI (reg:SI 267 [ <variable>.uregs+40 ])
    (const_int -128 [0xffffffffffffff80]))
Index 87 (hash value 43)
  (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)

hoisting vbeinout computation: 2 passes


rescanning insn with uid = 14.
deleting insn with uid = 14.
LOCAL CONST-PROP: Replacing reg 161 in insn 14 with constant (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
        (const_int 199 [0xc7])))
rescanning insn with uid = 15.
deleting insn with uid = 15.
LOCAL CONST-PROP: Replacing reg 162 in insn 15 with constant (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)
rescanning insn with uid = 24.
deleting insn with uid = 24.
LOCAL CONST-PROP: Replacing reg 164 in insn 24 with constant (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)
rescanning insn with uid = 27.
deleting insn with uid = 27.
LOCAL CONST-PROP: Replacing reg 165 in insn 27 with constant (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
        (const_int 134 [0x86])))
rescanning insn with uid = 34.
deleting insn with uid = 34.
LOCAL CONST-PROP: Replacing reg 169 in insn 34 with constant (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)
rescanning insn with uid = 42.
deleting insn with uid = 42.
LOCAL CONST-PROP: Replacing reg 172 in insn 42 with constant (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)
rescanning insn with uid = 52.
deleting insn with uid = 52.
LOCAL CONST-PROP: Replacing reg 173 in insn 52 with constant (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)
rescanning insn with uid = 58.
deleting insn with uid = 58.
LOCAL CONST-PROP: Replacing reg 177 in insn 58 with constant (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)
rescanning insn with uid = 66.
deleting insn with uid = 66.
LOCAL CONST-PROP: Replacing reg 178 in insn 66 with constant (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)
rescanning insn with uid = 74.
deleting insn with uid = 74.
LOCAL CONST-PROP: Replacing reg 180 in insn 74 with constant (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)
rescanning insn with uid = 197.
deleting insn with uid = 197.
LOCAL CONST-PROP: Replacing reg 208 in insn 197 with constant (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)
rescanning insn with uid = 211.
deleting insn with uid = 211.
LOCAL CONST-PROP: Replacing reg 213 in insn 211 with constant (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)
rescanning insn with uid = 217.
deleting insn with uid = 217.
LOCAL CONST-PROP: Replacing reg 214 in insn 217 with constant (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)
rescanning insn with uid = 234.
deleting insn with uid = 234.
LOCAL CONST-PROP: Replacing reg 223 in insn 234 with constant (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)
rescanning insn with uid = 240.
deleting insn with uid = 240.
LOCAL CONST-PROP: Replacing reg 226 in insn 240 with constant (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)
rescanning insn with uid = 246.
deleting insn with uid = 246.
LOCAL CONST-PROP: Replacing reg 229 in insn 246 with constant (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)
rescanning insn with uid = 252.
deleting insn with uid = 252.
LOCAL CONST-PROP: Replacing reg 232 in insn 252 with constant (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)
rescanning insn with uid = 258.
deleting insn with uid = 258.
LOCAL CONST-PROP: Replacing reg 235 in insn 258 with constant (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)
rescanning insn with uid = 264.
deleting insn with uid = 264.
LOCAL CONST-PROP: Replacing reg 238 in insn 264 with constant (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)
rescanning insn with uid = 270.
deleting insn with uid = 270.
LOCAL CONST-PROP: Replacing reg 241 in insn 270 with constant (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)
rescanning insn with uid = 276.
deleting insn with uid = 276.
LOCAL CONST-PROP: Replacing reg 244 in insn 276 with constant (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)
rescanning insn with uid = 282.
deleting insn with uid = 282.
LOCAL CONST-PROP: Replacing reg 247 in insn 282 with constant (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)
rescanning insn with uid = 288.
deleting insn with uid = 288.
LOCAL CONST-PROP: Replacing reg 250 in insn 288 with constant (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)
rescanning insn with uid = 294.
deleting insn with uid = 294.
LOCAL CONST-PROP: Replacing reg 253 in insn 294 with constant (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)
rescanning insn with uid = 300.
deleting insn with uid = 300.
LOCAL CONST-PROP: Replacing reg 256 in insn 300 with constant (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)
rescanning insn with uid = 306.
deleting insn with uid = 306.
LOCAL CONST-PROP: Replacing reg 259 in insn 306 with constant (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)
rescanning insn with uid = 312.
deleting insn with uid = 312.
LOCAL CONST-PROP: Replacing reg 262 in insn 312 with constant (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)
rescanning insn with uid = 318.
deleting insn with uid = 318.
LOCAL CONST-PROP: Replacing reg 265 in insn 318 with constant (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)
rescanning insn with uid = 324.
deleting insn with uid = 324.
LOCAL CONST-PROP: Replacing reg 268 in insn 324 with constant (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)
Implicit set of reg 183 in basic block 6
Implicit set of reg 185 in basic block 9
Implicit set of reg 187 in basic block 12
Implicit set of reg 191 in basic block 15
Implicit set of reg 192 in basic block 18
Implicit set of reg 207 in basic block 22
Found 6 implicit sets
SET hash table (63 buckets, 52 entries)
Index 0 (hash value 35)
  (set (reg/f:SI 161)
    (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
            (const_int 199 [0xc7]))))
Index 1 (hash value 36)
  (set (reg/f:SI 162)
    (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>))
Index 2 (hash value 38)
  (set (reg/f:SI 164)
    (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>))
Index 3 (hash value 39)
  (set (reg/f:SI 165)
    (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
            (const_int 134 [0x86]))))
Index 4 (hash value 43)
  (set (reg/f:SI 169)
    (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>))
Index 5 (hash value 46)
  (set (reg/f:SI 172)
    (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>))
Index 6 (hash value 47)
  (set (reg/f:SI 173)
    (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>))
Index 7 (hash value 51)
  (set (reg/f:SI 177)
    (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>))
Index 8 (hash value 52)
  (set (reg/f:SI 178)
    (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>))
Index 9 (hash value 54)
  (set (reg/f:SI 180)
    (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>))
Index 10 (hash value 28)
  (set (reg:SI 154 [ iftmp.342 ])
    (const_int 110 [0x6e]))
Index 11 (hash value 28)
  (set (reg:SI 154 [ iftmp.342 ])
    (const_int 78 [0x4e]))
Index 12 (hash value 57)
  (set (reg:SI 183)
    (const_int 0 [0x0]))
Index 13 (hash value 27)
  (set (reg:SI 153 [ iftmp.344 ])
    (const_int 122 [0x7a]))
Index 14 (hash value 27)
  (set (reg:SI 153 [ iftmp.344 ])
    (const_int 90 [0x5a]))
Index 15 (hash value 59)
  (set (reg:SI 185)
    (const_int 0 [0x0]))
Index 16 (hash value 26)
  (set (reg:SI 152 [ iftmp.345 ])
    (const_int 99 [0x63]))
Index 17 (hash value 26)
  (set (reg:SI 152 [ iftmp.345 ])
    (const_int 67 [0x43]))
Index 18 (hash value 61)
  (set (reg:SI 187)
    (const_int 0 [0x0]))
Index 19 (hash value 25)
  (set (reg:SI 151 [ iftmp.346 ])
    (const_int 118 [0x76]))
Index 20 (hash value 25)
  (set (reg:SI 151 [ iftmp.346 ])
    (const_int 86 [0x56]))
Index 21 (hash value 0)
  (set (reg:SI 189)
    (const_int 0 [0x0]))
Index 22 (hash value 2)
  (set (reg:SI 191)
    (const_int 0 [0x0]))
Index 23 (hash value 24)
  (set (reg/f:SI 150 [ iftmp.347 ])
    (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>))
Index 24 (hash value 24)
  (set (reg/f:SI 150 [ iftmp.347 ])
    (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>))
Index 25 (hash value 3)
  (set (reg:SI 192)
    (const_int 0 [0x0]))
Index 26 (hash value 23)
  (set (reg/f:SI 149 [ iftmp.348 ])
    (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>))
Index 27 (hash value 23)
  (set (reg/f:SI 149 [ iftmp.348 ])
    (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>))
Index 28 (hash value 4)
  (set (reg/f:SI 193)
    (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]))
Index 29 (hash value 20)
  (set (reg/f:SI 146 [ iftmp.349 ])
    (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>))
Index 30 (hash value 18)
  (set (reg:SI 207 [ <variable>.addr_limit ])
    (const_int 0 [0x0]))
Index 31 (hash value 20)
  (set (reg/f:SI 146 [ iftmp.349 ])
    (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>))
Index 32 (hash value 19)
  (set (reg/f:SI 208)
    (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>))
Index 33 (hash value 21)
  (set (reg:SI 210)
    (const_int 0 [0x0]))
Index 34 (hash value 24)
  (set (reg/f:SI 213)
    (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>))
Index 35 (hash value 25)
  (set (reg/f:SI 214)
    (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>))
Index 36 (hash value 34)
  (set (reg/f:SI 223)
    (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>))
Index 37 (hash value 37)
  (set (reg/f:SI 226)
    (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>))
Index 38 (hash value 40)
  (set (reg/f:SI 229)
    (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>))
Index 39 (hash value 43)
  (set (reg/f:SI 232)
    (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>))
Index 40 (hash value 46)
  (set (reg/f:SI 235)
    (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>))
Index 41 (hash value 49)
  (set (reg/f:SI 238)
    (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>))
Index 42 (hash value 52)
  (set (reg/f:SI 241)
    (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>))
Index 43 (hash value 55)
  (set (reg/f:SI 244)
    (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>))
Index 44 (hash value 58)
  (set (reg/f:SI 247)
    (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>))
Index 45 (hash value 61)
  (set (reg/f:SI 250)
    (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>))
Index 46 (hash value 1)
  (set (reg/f:SI 253)
    (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>))
Index 47 (hash value 4)
  (set (reg/f:SI 256)
    (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>))
Index 48 (hash value 7)
  (set (reg/f:SI 259)
    (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>))
Index 49 (hash value 10)
  (set (reg/f:SI 262)
    (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>))
Index 50 (hash value 13)
  (set (reg/f:SI 265)
    (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>))
Index 51 (hash value 16)
  (set (reg/f:SI 268)
    (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>))


CPROP of __show_regs, pass 2: 34784 bytes needed, 29 local const props, 0 local copy props, 0 global const props, 0 global copy props

GCSE of __show_regs: 24 basic blocks, 1 pass, 23564 bytes

deleting insn with uid = 322.
deleting insn with uid = 316.
deleting insn with uid = 310.
deleting insn with uid = 304.
deleting insn with uid = 298.
deleting insn with uid = 292.
deleting insn with uid = 286.
deleting insn with uid = 280.
deleting insn with uid = 274.
deleting insn with uid = 268.
deleting insn with uid = 262.
deleting insn with uid = 256.
deleting insn with uid = 250.
deleting insn with uid = 244.
deleting insn with uid = 238.
deleting insn with uid = 232.
deleting insn with uid = 215.
deleting insn with uid = 207.
deleting insn with uid = 192.
deleting insn with uid = 71.
deleting insn with uid = 63.
deleting insn with uid = 57.
deleting insn with uid = 45.
deleting insn with uid = 41.
deleting insn with uid = 33.
deleting insn with uid = 20.
deleting insn with uid = 19.
deleting insn with uid = 13.
Deleted 28 trivially dead insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 30 count 41 (  1.7)


__show_regs

Dataflow summary:
def_info->table_size = 3507, use_info->table_size = 422
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={56d,30u} r1={56d,27u} r2={37d,8u} r3={36d,7u} r11={1d,23u} r12={29d} r13={1d,65u,3d} r14={29d,1u} r15={28d} r16={28d} r17={28d} r18={28d} r19={28d} r20={28d} r21={28d} r22={28d} r23={28d} r24={35d,7u} r25={1d,30u,3d} r26={1d,22u} r27={28d} r28={28d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={28d} r37={28d} r38={28d} r39={28d} r40={28d} r41={28d} r42={28d} r43={28d} r44={28d} r45={28d} r46={28d} r47={28d} r48={28d} r49={28d} r50={28d} r51={28d} r52={28d} r53={28d} r54={28d} r55={28d} r56={28d} r57={28d} r58={28d} r59={28d} r60={28d} r61={28d} r62={28d} r63={28d} r64={28d} r65={28d} r66={28d} r67={28d} r68={28d} r69={28d} r70={28d} r71={28d} r72={28d} r73={28d} r74={28d} r75={28d} r76={28d} r77={28d} r78={28d} r79={28d} r80={28d} r81={28d} r82={28d} r83={28d} r84={28d} r85={28d} r86={28d} r87={28d} r88={28d} r89={28d} r90={28d} r91={28d} r92={28d} r93={28d} r94={28d} r95={28d} r96={28d} r97={28d} r98={28d} r99={28d} r100={28d} r101={28d} r102={28d} r103={28d} r104={28d} r105={28d} r106={28d} r107={28d} r108={28d} r109={28d} r110={28d} r111={28d} r112={28d} r113={28d} r114={28d} r115={28d} r116={28d} r117={28d} r118={28d} r119={28d} r120={28d} r121={28d} r122={28d} r123={28d} r124={28d} r125={28d} r126={28d} r127={28d} r133={1d,5u} r134={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,4u} r146={2d,1u} r147={1d,1u} r148={1d,1u} r149={2d,1u} r150={2d,1u} r151={2d,1u} r152={2d,1u} r153={2d,1u} r154={2d,1u} r156={1d,1u} r157={1d,1u} r158={1d,39u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r163={1d,1u} r167={1d,2u} r170={1d,2u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r179={1d,1u} r181={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r194={1d,1u,1d} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u,1d} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,3u} r210={1d,2u} r216={1d,3u} r217={1d,1u} r221={1d,1u} r222={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r231={1d,1u} r233={1d,1u} r234={1d,1u} r236={1d,1u} r237={1d,1u} r239={1d,1u} r240={1d,1u} r242={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d,1u} r249={1d,1u} r251={1d,1u} r252={1d,1u} r254={1d,1u} r255={1d,1u} r257={1d,1u} r258={1d,1u} r260={1d,1u} r261={1d,1u} r263={1d,1u} r264={1d,1u} r266={1d,1u} r267={1d,1u} 
;;    total ref usage 3816{3452d,356u,8e} in 221{193 regular + 28 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d55(0){ }d111(1){ }d148(2){ }d184(3){ }d185(11){ }d214(12){ }d215(13){ }d244(14){ }d532(25){ }d533(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 156 157 158 159 160 161 163 167 170 174 175 176 179 181
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145 156 157 158 159 160 161 162 163 164 165 167 169 170 172 173 174 175 176 177 178 179 180 181
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 154
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 154
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158

( 4 3 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  gen 	 24 [cc] 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 153
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158

( 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 153
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158

( 7 6 )->[8]->( 10 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  gen 	 24 [cc] 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158

( 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158

( 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 152
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158

( 10 9 )->[11]->( 13 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  gen 	 24 [cc] 187
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  gen 	 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158

( 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  gen 	 151
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158

( 13 12 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; lr  def 	 24 [cc] 133 189 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  gen 	 24 [cc] 133 189 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158

( 14 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  gen 	 150
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158

( 14 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  gen 	 150
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158

( 15 16 )->[17]->( 18 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u191(11){ }u192(13){ }u193(25){ }u194(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 24 [cc] 192
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158

( 17 )->[18]->( 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158

( 17 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 149
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158

( 18 19 )->[20]->( 22 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 147 148 193 194 196 197 198 199 200 202 203 205 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  gen 	 24 [cc] 147 148 193 194 196 197 198 199 200 202 203 205 206 207
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158

( 20 )->[21]->( 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  gen 	 146
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158

( 20 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  gen 	 146
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158

( 22 21 )->[23]->( 1 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 142 143 144 209 210 216 217 221 222 224 225 227 228 230 231 233 234 236 237 239 240 242 243 245 246 248 249 251 252 254 255 257 258 260 261 263 264 266 267
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 142 143 144 208 209 210 213 214 216 217 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 23 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u417(11){ }u418(13){ }u419(14){ }u420(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 73 to worklist
  Adding insn 70 to worklist
  Adding insn 65 to worklist
  Adding insn 62 to worklist
  Adding insn 56 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 95 to worklist
  Adding insn 92 to worklist
  Adding insn 109 to worklist
  Adding insn 106 to worklist
  Adding insn 123 to worklist
  Adding insn 120 to worklist
  Adding insn 141 to worklist
  Adding insn 137 to worklist
  Adding insn 134 to worklist
  Adding insn 153 to worklist
  Adding insn 182 to worklist
  Adding insn 329 to worklist
  Adding insn 325 to worklist
  Adding insn 319 to worklist
  Adding insn 313 to worklist
  Adding insn 307 to worklist
  Adding insn 301 to worklist
  Adding insn 295 to worklist
  Adding insn 289 to worklist
  Adding insn 283 to worklist
  Adding insn 277 to worklist
  Adding insn 271 to worklist
  Adding insn 265 to worklist
  Adding insn 259 to worklist
  Adding insn 253 to worklist
  Adding insn 247 to worklist
  Adding insn 241 to worklist
  Adding insn 235 to worklist
  Adding insn 229 to worklist
  Adding insn 220 to worklist
  Adding insn 213 to worklist
  Adding insn 208 to worklist
  Adding insn 204 to worklist
  Adding insn 201 to worklist
  Adding insn 196 to worklist
  Adding insn 195 to worklist
  Adding insn 194 to worklist
Finished finding needed instructions:
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 324 to worklist
  Adding insn 323 to worklist
  Adding insn 321 to worklist
  Adding insn 320 to worklist
  Adding insn 318 to worklist
  Adding insn 317 to worklist
  Adding insn 315 to worklist
  Adding insn 314 to worklist
  Adding insn 312 to worklist
  Adding insn 311 to worklist
  Adding insn 309 to worklist
  Adding insn 308 to worklist
  Adding insn 306 to worklist
  Adding insn 305 to worklist
  Adding insn 303 to worklist
  Adding insn 302 to worklist
  Adding insn 300 to worklist
  Adding insn 299 to worklist
  Adding insn 297 to worklist
  Adding insn 296 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 291 to worklist
  Adding insn 290 to worklist
  Adding insn 288 to worklist
  Adding insn 287 to worklist
  Adding insn 285 to worklist
  Adding insn 284 to worklist
  Adding insn 282 to worklist
  Adding insn 281 to worklist
  Adding insn 279 to worklist
  Adding insn 278 to worklist
  Adding insn 276 to worklist
  Adding insn 275 to worklist
  Adding insn 273 to worklist
  Adding insn 272 to worklist
  Adding insn 270 to worklist
  Adding insn 269 to worklist
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 264 to worklist
  Adding insn 263 to worklist
  Adding insn 261 to worklist
  Adding insn 260 to worklist
  Adding insn 258 to worklist
  Adding insn 257 to worklist
  Adding insn 255 to worklist
  Adding insn 254 to worklist
  Adding insn 252 to worklist
  Adding insn 251 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 243 to worklist
  Adding insn 242 to worklist
  Adding insn 240 to worklist
  Adding insn 239 to worklist
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
  Adding insn 231 to worklist
  Adding insn 230 to worklist
  Adding insn 224 to worklist
  Adding insn 223 to worklist
  Adding insn 222 to worklist
  Adding insn 219 to worklist
  Adding insn 218 to worklist
  Adding insn 217 to worklist
  Adding insn 214 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 210 to worklist
  Adding insn 209 to worklist
  Adding insn 205 to worklist
  Adding insn 202 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 197 to worklist
  Adding insn 193 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
  Adding insn 189 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
  Adding insn 184 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
  Adding insn 181 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 176 to worklist
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 171 to worklist
  Adding insn 170 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
  Adding insn 165 to worklist
  Adding insn 164 to worklist
  Adding insn 163 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
  Adding insn 155 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
  Adding insn 160 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
  Adding insn 152 to worklist
  Adding insn 151 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
  Adding insn 143 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
  Adding insn 148 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 135 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
  Adding insn 130 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
  Adding insn 125 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
  Adding insn 122 to worklist
  Adding insn 121 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
  Adding insn 116 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
  Adding insn 111 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
  Adding insn 108 to worklist
  Adding insn 107 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
  Adding insn 102 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
  Adding insn 97 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
  Adding insn 88 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
  Adding insn 83 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 72 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 30 count 46 (  1.9)
;; Following path with 79 sets: 2 
deferring rescan insn with uid = 14.
;; Following path with 1 sets: 3 
;; Following path with 1 sets: 4 
;; Following path with 4 sets: 5 
;; Following path with 1 sets: 6 
;; Following path with 1 sets: 7 
;; Following path with 4 sets: 8 
;; Following path with 1 sets: 9 
;; Following path with 1 sets: 10 
;; Following path with 4 sets: 11 
;; Following path with 1 sets: 12 
;; Following path with 1 sets: 13 
;; Following path with 7 sets: 14 
;; Following path with 1 sets: 16 
;; Following path with 1 sets: 15 
;; Following path with 3 sets: 17 
;; Following path with 1 sets: 19 
;; Following path with 1 sets: 18 
;; Following path with 16 sets: 20 
;; Following path with 1 sets: 21 
;; Following path with 1 sets: 22 
;; Following path with 147 sets: 23 
starting the processing of deferred insns
rescanning insn with uid = 14.
deleting insn with uid = 14.
ending the processing of deferred insns


__show_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={56d,30u} r1={56d,27u} r2={37d,8u} r3={36d,7u} r11={1d,23u} r12={29d} r13={1d,65u,3d} r14={29d,1u} r15={28d} r16={28d} r17={28d} r18={28d} r19={28d} r20={28d} r21={28d} r22={28d} r23={28d} r24={35d,7u} r25={1d,30u,3d} r26={1d,22u} r27={28d} r28={28d} r29={28d} r30={28d} r31={28d} r32={28d} r33={28d} r34={28d} r35={28d} r36={28d} r37={28d} r38={28d} r39={28d} r40={28d} r41={28d} r42={28d} r43={28d} r44={28d} r45={28d} r46={28d} r47={28d} r48={28d} r49={28d} r50={28d} r51={28d} r52={28d} r53={28d} r54={28d} r55={28d} r56={28d} r57={28d} r58={28d} r59={28d} r60={28d} r61={28d} r62={28d} r63={28d} r64={28d} r65={28d} r66={28d} r67={28d} r68={28d} r69={28d} r70={28d} r71={28d} r72={28d} r73={28d} r74={28d} r75={28d} r76={28d} r77={28d} r78={28d} r79={28d} r80={28d} r81={28d} r82={28d} r83={28d} r84={28d} r85={28d} r86={28d} r87={28d} r88={28d} r89={28d} r90={28d} r91={28d} r92={28d} r93={28d} r94={28d} r95={28d} r96={28d} r97={28d} r98={28d} r99={28d} r100={28d} r101={28d} r102={28d} r103={28d} r104={28d} r105={28d} r106={28d} r107={28d} r108={28d} r109={28d} r110={28d} r111={28d} r112={28d} r113={28d} r114={28d} r115={28d} r116={28d} r117={28d} r118={28d} r119={28d} r120={28d} r121={28d} r122={28d} r123={28d} r124={28d} r125={28d} r126={28d} r127={28d} r133={1d,5u} r134={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,4u} r146={2d,1u} r147={1d,1u} r148={1d,1u} r149={2d,1u} r150={2d,1u} r151={2d,1u} r152={2d,1u} r153={2d,1u} r154={2d,1u} r156={1d,1u} r157={1d,1u} r158={1d,39u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r163={1d,1u} r167={1d,2u} r170={1d,2u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r179={1d,1u} r181={1d,1u} r183={1d,1u} r185={1d,1u} r187={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r194={1d,1u,1d} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r202={1d,1u,1d} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r209={1d,3u} r210={1d,2u} r216={1d,3u} r217={1d,1u} r221={1d,1u} r222={1d,1u} r224={1d,1u} r225={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r231={1d,1u} r233={1d,1u} r234={1d,1u} r236={1d,1u} r237={1d,1u} r239={1d,1u} r240={1d,1u} r242={1d,1u} r243={1d,1u} r245={1d,1u} r246={1d,1u} r248={1d,1u} r249={1d,1u} r251={1d,1u} r252={1d,1u} r254={1d,1u} r255={1d,1u} r257={1d,1u} r258={1d,1u} r260={1d,1u} r261={1d,1u} r263={1d,1u} r264={1d,1u} r266={1d,1u} r267={1d,1u} 
;;    total ref usage 3817{3452d,357u,8e} in 221{193 regular + 28 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 156 157 158 159 160 161 163 167 170 174 175 176 179 181
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 145 156 157 158 159 160 161 163 167 170 174 175 176 179 181
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/process.c:372 (set (reg/v/f:SI 158 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 arch/arm/kernel/process.c:376 (set (reg:SI 160)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/process.c:376 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/process.c:376 (set (reg:SI 157 [ D.25923 ])
        (mem/s/j:SI (plus:SI (reg:SI 159)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(call_insn 10 9 11 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("print_tainted") [flags 0x41] <function_decl 0x10a82b00 print_tainted>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 11 10 12 2 arch/arm/kernel/process.c:376 (set (reg/f:SI 156 [ D.25924 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 11 14 2 arch/arm/kernel/process.c:376 (set (reg/f:SI 161)
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))) 167 {*arm_movsi_insn} (nil))

(insn 14 12 15 2 arch/arm/kernel/process.c:376 (set (reg:SI 0 r0)
        (reg/f:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 199 [0xc7])))
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/process.c:376 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11556fa0>)
        (nil)))

(call_insn/i 16 15 17 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcspn") [flags 0x41] <function_decl 0x51157880 strcspn>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 16 21 2 arch/arm/kernel/process.c:376 (set (reg:SI 163)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 21 17 23 2 arch/arm/kernel/process.c:376 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 23 21 24 2 arch/arm/kernel/process.c:376 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                    (const_int 199 [0xc7])))
            (nil))))

(insn 24 23 25 2 arch/arm/kernel/process.c:376 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1158d840>)
        (nil)))

(insn 25 24 26 2 arch/arm/kernel/process.c:376 (set (reg:SI 1 r1)
        (reg:SI 157 [ D.25923 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157 [ D.25923 ])
        (nil)))

(insn 26 25 27 2 arch/arm/kernel/process.c:376 (set (reg:SI 2 r2)
        (reg/f:SI 156 [ D.25924 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156 [ D.25924 ])
        (nil)))

(insn 27 26 28 2 arch/arm/kernel/process.c:376 (set (reg:SI 3 r3)
        (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 134 [0x86])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_uts_ns") [flags 0xc0] <var_decl 0x113e66c0 init_uts_ns>)
                (const_int 134 [0x86])))
        (nil)))

(call_insn 28 27 29 2 arch/arm/kernel/process.c:376 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 29 28 31 2 include/linux/kallsyms.h:113 (set (reg:SI 167 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 29 34 2 include/linux/kallsyms.h:113 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 167 [ <variable>.uregs+60 ])) 167 {*arm_movsi_insn} (nil))

(insn 34 31 35 2 include/linux/kallsyms.h:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1158bf90>)
        (nil)))

(insn 35 34 36 2 include/linux/kallsyms.h:113 (set (reg:SI 1 r1)
        (reg:SI 167 [ <variable>.uregs+60 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 167 [ <variable>.uregs+60 ])
        (nil)))

(call_insn 36 35 37 2 include/linux/kallsyms.h:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("__print_symbol") [flags 0x41] <function_decl 0x111b7680 __print_symbol>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 39 2 include/linux/kallsyms.h:113 (set (reg:SI 170 [ <variable>.uregs+56 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 37 42 2 include/linux/kallsyms.h:113 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])
        (reg:SI 170 [ <variable>.uregs+56 ])) 167 {*arm_movsi_insn} (nil))

(insn 42 39 43 2 include/linux/kallsyms.h:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115940f0>)
        (nil)))

(insn 43 42 44 2 include/linux/kallsyms.h:113 (set (reg:SI 1 r1)
        (reg:SI 170 [ <variable>.uregs+56 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170 [ <variable>.uregs+56 ])
        (nil)))

(call_insn 44 43 46 2 include/linux/kallsyms.h:113 (parallel [
            (call (mem:SI (symbol_ref:SI ("__print_symbol") [flags 0x41] <function_decl 0x111b7680 __print_symbol>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 44 47 2 arch/arm/kernel/process.c:383 (set (reg:SI 174 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 2 arch/arm/kernel/process.c:383 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 174 [ <variable>.uregs+52 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 174 [ <variable>.uregs+52 ])
        (nil)))

(insn 48 47 49 2 arch/arm/kernel/process.c:383 (set (reg:SI 175 [ <variable>.uregs+48 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 2 arch/arm/kernel/process.c:383 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 175 [ <variable>.uregs+48 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 175 [ <variable>.uregs+48 ])
        (nil)))

(insn 50 49 51 2 arch/arm/kernel/process.c:383 (set (reg:SI 176 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 2 arch/arm/kernel/process.c:383 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 176 [ <variable>.uregs+44 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ <variable>.uregs+44 ])
        (nil)))

(insn 52 51 53 2 arch/arm/kernel/process.c:383 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11659ee0>)
        (nil)))

(insn 53 52 54 2 arch/arm/kernel/process.c:383 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 2 arch/arm/kernel/process.c:383 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 2 arch/arm/kernel/process.c:383 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 56 55 58 2 arch/arm/kernel/process.c:383 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 58 56 59 2 arch/arm/kernel/process.c:387 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x1156d200>)
        (nil)))

(insn 59 58 60 2 arch/arm/kernel/process.c:387 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 2 arch/arm/kernel/process.c:387 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 2 arch/arm/kernel/process.c:387 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 62 61 64 2 arch/arm/kernel/process.c:387 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 64 62 65 2 arch/arm/kernel/process.c:390 (set (reg:SI 179 [ <variable>.uregs+16 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 2 arch/arm/kernel/process.c:390 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 179 [ <variable>.uregs+16 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ <variable>.uregs+16 ])
        (nil)))

(insn 66 65 67 2 arch/arm/kernel/process.c:390 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x115a7aa0>)
        (nil)))

(insn 67 66 68 2 arch/arm/kernel/process.c:390 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 2 arch/arm/kernel/process.c:390 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 69 68 70 2 arch/arm/kernel/process.c:390 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 70 69 72 2 arch/arm/kernel/process.c:390 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 72 70 73 2 arch/arm/kernel/process.c:393 (set (reg:SI 181 [ <variable>.uregs ])
        (mem/s/j:SI (reg/v/f:SI 158 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 2 arch/arm/kernel/process.c:393 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 181 [ <variable>.uregs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 181 [ <variable>.uregs ])
        (nil)))

(insn 74 73 75 2 arch/arm/kernel/process.c:393 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115a7af0>)
        (nil)))

(insn 75 74 76 2 arch/arm/kernel/process.c:393 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 2 arch/arm/kernel/process.c:393 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 2 arch/arm/kernel/process.c:393 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 78 77 79 2 arch/arm/kernel/process.c:393 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 79 78 80 2 arch/arm/kernel/process.c:397 (set (reg/v:SI 145 [ flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 80 79 81 2 arch/arm/kernel/process.c:398 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ flags ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 81 80 82 2 arch/arm/kernel/process.c:398 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158


;; Succ edge  4 [27.0%] 
;; Succ edge  3 [73.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 154
;; live  kill	

;; Pred edge  2 [73.0%]  (fallthru)
(note 82 81 83 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 86 3 arch/arm/kernel/process.c:398 discrim 2 (set (reg:SI 154 [ iftmp.342 ])
        (const_int 110 [0x6e])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 154
;; live  kill	

;; Pred edge  2 [27.0%] 
(code_label 86 83 87 4 124 "" [1 uses])

(note 87 86 88 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 4 arch/arm/kernel/process.c:398 discrim 1 (set (reg:SI 154 [ iftmp.342 ])
        (const_int 78 [0x4e])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 158
;; live  gen 	 24 [cc] 183
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 89 88 90 5 125 "" [0 uses])

(note 90 89 92 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 92 90 93 5 arch/arm/kernel/process.c:398 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 buf+0 S1 A64])
        (subreg/s/u:QI (reg:SI 154 [ iftmp.342 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 154 [ iftmp.342 ])
        (nil)))

(insn 93 92 94 5 arch/arm/kernel/process.c:399 (set (reg:SI 183)
        (and:SI (reg/v:SI 145 [ flags ])
            (const_int 1073741824 [0x40000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 94 93 95 5 arch/arm/kernel/process.c:399 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(jump_insn 95 94 96 5 arch/arm/kernel/process.c:399 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158


;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u125(11){ }u126(13){ }u127(25){ }u128(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 153
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 96 95 97 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 100 6 arch/arm/kernel/process.c:399 discrim 2 (set (reg:SI 153 [ iftmp.344 ])
        (const_int 122 [0x7a])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 153
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 100 97 101 7 126 "" [1 uses])

(note 101 100 102 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 7 arch/arm/kernel/process.c:399 discrim 1 (set (reg:SI 153 [ iftmp.344 ])
        (const_int 90 [0x5a])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153
;; lr  def 	 24 [cc] 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 153 158
;; live  gen 	 24 [cc] 185
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 103 102 104 8 127 "" [0 uses])

(note 104 103 106 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 106 104 107 8 arch/arm/kernel/process.c:399 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -63 [0xffffffffffffffc1])) [0 buf+1 S1 A8])
        (subreg/s/u:QI (reg:SI 153 [ iftmp.344 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 153 [ iftmp.344 ])
        (nil)))

(insn 107 106 108 8 arch/arm/kernel/process.c:400 (set (reg:SI 185)
        (and:SI (reg/v:SI 145 [ flags ])
            (const_int 536870912 [0x20000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 108 107 109 8 arch/arm/kernel/process.c:400 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 109 108 110 8 arch/arm/kernel/process.c:400 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158


;; Succ edge  10 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 152
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 110 109 111 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 114 9 arch/arm/kernel/process.c:400 discrim 2 (set (reg:SI 152 [ iftmp.345 ])
        (const_int 99 [0x63])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 158
;; live  gen 	 152
;; live  kill	

;; Pred edge  8 [50.0%] 
(code_label 114 111 115 10 128 "" [1 uses])

(note 115 114 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 10 arch/arm/kernel/process.c:400 discrim 1 (set (reg:SI 152 [ iftmp.345 ])
        (const_int 67 [0x43])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152
;; lr  def 	 24 [cc] 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 152 158
;; live  gen 	 24 [cc] 187
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 117 116 118 11 129 "" [0 uses])

(note 118 117 120 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 120 118 121 11 arch/arm/kernel/process.c:400 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -62 [0xffffffffffffffc2])) [0 buf+2 S1 A16])
        (subreg/s/u:QI (reg:SI 152 [ iftmp.345 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 152 [ iftmp.345 ])
        (nil)))

(insn 121 120 122 11 arch/arm/kernel/process.c:401 (set (reg:SI 187)
        (and:SI (reg/v:SI 145 [ flags ])
            (const_int 268435456 [0x10000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ flags ])
        (nil)))

(insn 122 121 123 11 arch/arm/kernel/process.c:401 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(jump_insn 123 122 124 11 arch/arm/kernel/process.c:401 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 13 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158


;; Succ edge  13 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  gen 	 151
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 124 123 125 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 128 12 arch/arm/kernel/process.c:401 discrim 2 (set (reg:SI 151 [ iftmp.346 ])
        (const_int 118 [0x76])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; live  gen 	 151
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 128 125 129 13 130 "" [1 uses])

(note 129 128 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 13 arch/arm/kernel/process.c:401 discrim 1 (set (reg:SI 151 [ iftmp.346 ])
        (const_int 86 [0x56])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; lr  def 	 24 [cc] 133 189 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 158
;; live  gen 	 24 [cc] 133 189 191
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 131 130 132 14 131 "" [0 uses])

(note 132 131 134 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 134 132 135 14 arch/arm/kernel/process.c:401 discrim 3 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -61 [0xffffffffffffffc3])) [0 buf+3 S1 A8])
        (subreg/s/u:QI (reg:SI 151 [ iftmp.346 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 151 [ iftmp.346 ])
        (nil)))

(insn 135 134 137 14 arch/arm/kernel/process.c:402 (set (reg:SI 189)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 137 135 138 14 arch/arm/kernel/process.c:402 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -60 [0xffffffffffffffc4])) [0 buf+4 S1 A32])
        (subreg:QI (reg:SI 189) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 138 137 139 14 arch/arm/kernel/process.c:405 (set (reg:SI 133 [ temp.1067 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 14 arch/arm/kernel/process.c:404 (set (reg:SI 191)
        (and:SI (reg:SI 133 [ temp.1067 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 140 139 141 14 arch/arm/kernel/process.c:404 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(jump_insn 141 140 142 14 arch/arm/kernel/process.c:404 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 146)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u183(11){ }u184(13){ }u185(25){ }u186(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  gen 	 150
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 142 141 143 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 146 15 arch/arm/kernel/process.c:404 discrim 1 (set (reg/f:SI 150 [ iftmp.347 ])
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 158
;; live  gen 	 150
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 146 143 147 16 132 "" [1 uses])

(note 147 146 148 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 149 16 arch/arm/kernel/process.c:404 discrim 2 (set (reg/f:SI 150 [ iftmp.347 ])
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u191(11){ }u192(13){ }u193(25){ }u194(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 24 [cc] 192
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 149 148 150 17 133 "" [0 uses])

(note 150 149 151 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 152 17 arch/arm/kernel/process.c:406 (set (reg:SI 192)
        (and:SI (reg:SI 133 [ temp.1067 ])
            (const_int 64 [0x40]))) 67 {*arm_andsi3_insn} (nil))

(insn 152 151 153 17 arch/arm/kernel/process.c:406 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 192)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(jump_insn 153 152 154 17 arch/arm/kernel/process.c:406 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 149
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 154 153 155 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 155 154 158 18 arch/arm/kernel/process.c:404 discrim 4 (set (reg/f:SI 149 [ iftmp.348 ])
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116771c0>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150 158
;; live  gen 	 149
;; live  kill	

;; Pred edge  17 [50.0%] 
(code_label 158 155 159 19 134 "" [1 uses])

(note 159 158 160 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 19 arch/arm/kernel/process.c:404 discrim 5 (set (reg/f:SI 149 [ iftmp.348 ])
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116772a0>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u206(11){ }u207(13){ }u208(25){ }u209(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 147 148 193 194 196 197 198 199 200 202 203 205 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 149 150 158
;; live  gen 	 24 [cc] 147 148 193 194 196 197 198 199 200 202 203 205 206 207
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 161 160 162 20 135 "" [0 uses])

(note 162 161 163 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 193)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 164 163 165 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 194)
        (and:SI (reg:SI 133 [ temp.1067 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 165 164 167 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 148 [ D.25984 ])
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg:SI 194)
                    (const_int 4 [0x4]))
                (reg/f:SI 193)) [0 processor_modes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_EQUAL (mem/s/u/f/j:SI (plus:SI (mult:SI (reg:SI 194)
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) [0 processor_modes S4 A32])
            (nil))))

(insn 167 165 168 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 196)
        (and:SI (reg:SI 133 [ temp.1067 ])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (nil))

(insn 168 167 169 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 197)
        (lshiftrt:SI (reg:SI 196)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 169 168 170 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 198)
        (and:SI (reg:SI 133 [ temp.1067 ])
            (const_int 16777216 [0x1000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 133 [ temp.1067 ])
        (nil)))

(insn 170 169 171 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 199)
        (lshiftrt:SI (reg:SI 198)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(insn 171 170 173 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 200)
        (ior:SI (reg:SI 197)
            (reg:SI 199))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg:SI 197)
            (nil))))

(insn 173 171 174 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 202)
        (ashift:SI (reg:SI 200)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 174 173 176 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg:SI 203)
        (plus:SI (reg/f:SI 193)
            (reg:SI 202))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_DEAD (reg/f:SI 193)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 202)
                    (symbol_ref:SI ("*.LANCHOR2") [flags 0x182]))
                (nil)))))

(insn 176 174 178 20 arch/arm/kernel/process.c:404 discrim 6 (set (reg/f:SI 147 [ D.25990 ])
        (mem/s/u/f/j:SI (plus:SI (reg:SI 203)
                (const_int 128 [0x80])) [0 isa_modes S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 178 176 179 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 206)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 179 178 180 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 205)
        (and:SI (reg:SI 206)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 180 179 181 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 207 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 205)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 205)
        (nil)))

(insn 181 180 182 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 207 [ <variable>.addr_limit ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 207 [ <variable>.addr_limit ])
        (nil)))

(jump_insn 182 181 183 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 20 -> ( 22 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158


;; Succ edge  22 [39.0%] 
;; Succ edge  21 [61.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  gen 	 146
;; live  kill	

;; Pred edge  20 [61.0%]  (fallthru)
(note 183 182 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 187 21 arch/arm/kernel/process.c:404 discrim 8 (set (reg/f:SI 146 [ iftmp.349 ])
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11677900>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 150 158
;; live  gen 	 146
;; live  kill	

;; Pred edge  20 [39.0%] 
(code_label 187 184 188 22 136 "" [1 uses])

(note 188 187 189 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 22 arch/arm/kernel/process.c:404 discrim 7 (set (reg/f:SI 146 [ iftmp.349 ])
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x11677a00>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 22 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 142 143 144 209 210 216 217 221 222 224 225 227 228 230 231 233 234 236 237 239 240 242 243 245 246 248 249 251 252 254 255 257 258 260 261 263 264 266 267
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 149 150 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 142 143 144 209 210 216 217 221 222 224 225 227 228 230 231 233 234 236 237 239 240 242 243 245 246 248 249 251 252 254 255 257 258 260 261 263 264 266 267
;; live  kill	 14 [lr]

;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  21 [100.0%]  (fallthru)
(code_label 190 189 191 23 137 "" [0 uses])

(note 191 190 193 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 193 191 194 23 arch/arm/kernel/process.c:404 discrim 9 (set (reg/f:SI 209)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(insn 194 193 195 23 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 148 [ D.25984 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 148 [ D.25984 ])
        (nil)))

(insn 195 194 196 23 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 147 [ D.25990 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147 [ D.25990 ])
        (nil)))

(insn 196 195 197 23 arch/arm/kernel/process.c:404 discrim 9 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/f:SI 146 [ iftmp.349 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146 [ iftmp.349 ])
        (nil)))

(insn 197 196 198 23 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112506c0>)
        (nil)))

(insn 198 197 199 23 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 1 r1)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn 199 198 200 23 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 2 r2)
        (reg/f:SI 150 [ iftmp.347 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150 [ iftmp.347 ])
        (nil)))

(insn 200 199 201 23 arch/arm/kernel/process.c:404 discrim 9 (set (reg:SI 3 r3)
        (reg/f:SI 149 [ iftmp.348 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ iftmp.348 ])
        (nil)))

(call_insn 201 200 202 23 arch/arm/kernel/process.c:404 discrim 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 202 201 204 23 arch/arm/kernel/process.c:414 (set (reg:SI 210)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 204 202 205 23 arch/arm/kernel/process.c:414 (set (mem/s/j:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0])) [0 buf+0 S1 A64])
        (subreg:QI (reg:SI 210) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 205 204 208 23 arch/arm/kernel/process.c:418 (parallel [
            (set (reg/v:SI 143 [ transbase ])
                (asm_operands:SI ("mrc p15, 0, %0, c2, c0
	mrc p15, 0, %1, c3, c0
") ("=r") 0 []
                     [] 8842942))
            (set (reg/v:SI 142 [ dac ])
                (asm_operands:SI ("mrc p15, 0, %0, c2, c0
	mrc p15, 0, %1, c3, c0
") ("=r") 1 []
                     [] 8842942))
        ]) -1 (nil))

(insn 208 205 209 23 arch/arm/kernel/process.c:421 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 142 [ dac ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 142 [ dac ])
        (nil)))

(insn 209 208 210 23 arch/arm/kernel/process.c:421 (set (reg:SI 0 r0)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -64 [0xffffffffffffffc0]))
        (nil)))

(insn 210 209 211 23 arch/arm/kernel/process.c:421 (set (reg:SI 1 r1)
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 211 210 212 23 arch/arm/kernel/process.c:421 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x11673e00>)
        (nil)))

(insn 212 211 213 23 arch/arm/kernel/process.c:421 (set (reg:SI 3 r3)
        (reg/v:SI 143 [ transbase ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ transbase ])
        (nil)))

(call_insn 213 212 214 23 arch/arm/kernel/process.c:421 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("snprintf") [flags 0x41] <function_decl 0x5115e680 snprintf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 214 213 217 23 arch/arm/kernel/process.c:425 (set (reg/v:SI 144 [ ctrl ])
        (asm_operands:SI ("mrc p15, 0, %0, c1, c0
") ("=r") 0 []
             [] 8843837)) -1 (nil))

(insn 217 214 218 23 arch/arm/kernel/process.c:427 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x11679960>)
        (nil)))

(insn 218 217 219 23 arch/arm/kernel/process.c:427 (set (reg:SI 1 r1)
        (reg/v:SI 144 [ ctrl ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 144 [ ctrl ])
        (nil)))

(insn 219 218 220 23 arch/arm/kernel/process.c:427 (set (reg:SI 2 r2)
        (reg/f:SI 209)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 209)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -64 [0xffffffffffffffc0]))
            (nil))))

(call_insn 220 219 222 23 arch/arm/kernel/process.c:427 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 222 220 223 23 arch/arm/kernel/process.c:350 (set (reg:SI 217)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 223 222 224 23 arch/arm/kernel/process.c:350 (set (reg:SI 216)
        (and:SI (reg:SI 217)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 217)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 224 223 229 23 arch/arm/kernel/process.c:350 (set (reg/v:SI 134 [ fs ])
        (mem/s/j:SI (plus:SI (reg:SI 216)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 229 224 230 23 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 216)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 230 229 231 23 arch/arm/kernel/process.c:352 (set (reg:SI 222 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 231 230 233 23 arch/arm/kernel/process.c:352 (set (reg:SI 221)
        (plus:SI (reg:SI 222 [ <variable>.uregs+60 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 222 [ <variable>.uregs+60 ])
        (nil)))

(insn 233 231 234 23 arch/arm/kernel/process.c:352 (set (reg:SI 0 r0)
        (reg:SI 221)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(insn 234 233 235 23 arch/arm/kernel/process.c:352 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x11677080>)
        (nil)))

(call_insn 235 234 236 23 arch/arm/kernel/process.c:352 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 236 235 237 23 arch/arm/kernel/process.c:353 (set (reg:SI 225 [ <variable>.uregs+56 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 56 [0x38])) [0 <variable>.uregs+56 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 237 236 239 23 arch/arm/kernel/process.c:353 (set (reg:SI 224)
        (plus:SI (reg:SI 225 [ <variable>.uregs+56 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 225 [ <variable>.uregs+56 ])
        (nil)))

(insn 239 237 240 23 arch/arm/kernel/process.c:353 (set (reg:SI 0 r0)
        (reg:SI 224)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(insn 240 239 241 23 arch/arm/kernel/process.c:353 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x11677140>)
        (nil)))

(call_insn 241 240 242 23 arch/arm/kernel/process.c:353 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 242 241 243 23 arch/arm/kernel/process.c:354 (set (reg:SI 228 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 243 242 245 23 arch/arm/kernel/process.c:354 (set (reg:SI 227)
        (plus:SI (reg:SI 228 [ <variable>.uregs+52 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 228 [ <variable>.uregs+52 ])
        (nil)))

(insn 245 243 246 23 arch/arm/kernel/process.c:354 (set (reg:SI 0 r0)
        (reg:SI 227)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 227)
        (nil)))

(insn 246 245 247 23 arch/arm/kernel/process.c:354 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11677120>)
        (nil)))

(call_insn 247 246 248 23 arch/arm/kernel/process.c:354 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 248 247 249 23 arch/arm/kernel/process.c:355 (set (reg:SI 231 [ <variable>.uregs+48 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 251 23 arch/arm/kernel/process.c:355 (set (reg:SI 230)
        (plus:SI (reg:SI 231 [ <variable>.uregs+48 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 231 [ <variable>.uregs+48 ])
        (nil)))

(insn 251 249 252 23 arch/arm/kernel/process.c:355 (set (reg:SI 0 r0)
        (reg:SI 230)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 230)
        (nil)))

(insn 252 251 253 23 arch/arm/kernel/process.c:355 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x11677100>)
        (nil)))

(call_insn 253 252 254 23 arch/arm/kernel/process.c:355 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 254 253 255 23 arch/arm/kernel/process.c:356 (set (reg:SI 234 [ <variable>.uregs+44 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 44 [0x2c])) [0 <variable>.uregs+44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 255 254 257 23 arch/arm/kernel/process.c:356 (set (reg:SI 233)
        (plus:SI (reg:SI 234 [ <variable>.uregs+44 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 234 [ <variable>.uregs+44 ])
        (nil)))

(insn 257 255 258 23 arch/arm/kernel/process.c:356 (set (reg:SI 0 r0)
        (reg:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 233)
        (nil)))

(insn 258 257 259 23 arch/arm/kernel/process.c:356 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11677220>)
        (nil)))

(call_insn 259 258 260 23 arch/arm/kernel/process.c:356 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 260 259 261 23 arch/arm/kernel/process.c:357 (set (reg:SI 237 [ <variable>.uregs ])
        (mem/s/j:SI (reg/v/f:SI 158 [ regs ]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 261 260 263 23 arch/arm/kernel/process.c:357 (set (reg:SI 236)
        (plus:SI (reg:SI 237 [ <variable>.uregs ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 237 [ <variable>.uregs ])
        (nil)))

(insn 263 261 264 23 arch/arm/kernel/process.c:357 (set (reg:SI 0 r0)
        (reg:SI 236)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(insn 264 263 265 23 arch/arm/kernel/process.c:357 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x116770e0>)
        (nil)))

(call_insn 265 264 266 23 arch/arm/kernel/process.c:357 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 266 265 267 23 arch/arm/kernel/process.c:358 (set (reg:SI 240 [ <variable>.uregs+4 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 267 266 269 23 arch/arm/kernel/process.c:358 (set (reg:SI 239)
        (plus:SI (reg:SI 240 [ <variable>.uregs+4 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 240 [ <variable>.uregs+4 ])
        (nil)))

(insn 269 267 270 23 arch/arm/kernel/process.c:358 (set (reg:SI 0 r0)
        (reg:SI 239)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 239)
        (nil)))

(insn 270 269 271 23 arch/arm/kernel/process.c:358 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x11677340>)
        (nil)))

(call_insn 271 270 272 23 arch/arm/kernel/process.c:358 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 272 271 273 23 arch/arm/kernel/process.c:359 (set (reg:SI 243 [ <variable>.uregs+8 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 273 272 275 23 arch/arm/kernel/process.c:359 (set (reg:SI 242)
        (plus:SI (reg:SI 243 [ <variable>.uregs+8 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 243 [ <variable>.uregs+8 ])
        (nil)))

(insn 275 273 276 23 arch/arm/kernel/process.c:359 (set (reg:SI 0 r0)
        (reg:SI 242)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 242)
        (nil)))

(insn 276 275 277 23 arch/arm/kernel/process.c:359 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11677400>)
        (nil)))

(call_insn 277 276 278 23 arch/arm/kernel/process.c:359 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 278 277 279 23 arch/arm/kernel/process.c:360 (set (reg:SI 246 [ <variable>.uregs+12 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 12 [0xc])) [0 <variable>.uregs+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 279 278 281 23 arch/arm/kernel/process.c:360 (set (reg:SI 245)
        (plus:SI (reg:SI 246 [ <variable>.uregs+12 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 246 [ <variable>.uregs+12 ])
        (nil)))

(insn 281 279 282 23 arch/arm/kernel/process.c:360 (set (reg:SI 0 r0)
        (reg:SI 245)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 245)
        (nil)))

(insn 282 281 283 23 arch/arm/kernel/process.c:360 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11677320>)
        (nil)))

(call_insn 283 282 284 23 arch/arm/kernel/process.c:360 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 284 283 285 23 arch/arm/kernel/process.c:361 (set (reg:SI 249 [ <variable>.uregs+16 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 16 [0x10])) [0 <variable>.uregs+16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 285 284 287 23 arch/arm/kernel/process.c:361 (set (reg:SI 248)
        (plus:SI (reg:SI 249 [ <variable>.uregs+16 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 249 [ <variable>.uregs+16 ])
        (nil)))

(insn 287 285 288 23 arch/arm/kernel/process.c:361 (set (reg:SI 0 r0)
        (reg:SI 248)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 248)
        (nil)))

(insn 288 287 289 23 arch/arm/kernel/process.c:361 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x116774c0>)
        (nil)))

(call_insn 289 288 290 23 arch/arm/kernel/process.c:361 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 290 289 291 23 arch/arm/kernel/process.c:362 (set (reg:SI 252 [ <variable>.uregs+20 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 20 [0x14])) [0 <variable>.uregs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 291 290 293 23 arch/arm/kernel/process.c:362 (set (reg:SI 251)
        (plus:SI (reg:SI 252 [ <variable>.uregs+20 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 252 [ <variable>.uregs+20 ])
        (nil)))

(insn 293 291 294 23 arch/arm/kernel/process.c:362 (set (reg:SI 0 r0)
        (reg:SI 251)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 251)
        (nil)))

(insn 294 293 295 23 arch/arm/kernel/process.c:362 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x116776c0>)
        (nil)))

(call_insn 295 294 296 23 arch/arm/kernel/process.c:362 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 296 295 297 23 arch/arm/kernel/process.c:363 (set (reg:SI 255 [ <variable>.uregs+24 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 24 [0x18])) [0 <variable>.uregs+24 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 297 296 299 23 arch/arm/kernel/process.c:363 (set (reg:SI 254)
        (plus:SI (reg:SI 255 [ <variable>.uregs+24 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 255 [ <variable>.uregs+24 ])
        (nil)))

(insn 299 297 300 23 arch/arm/kernel/process.c:363 (set (reg:SI 0 r0)
        (reg:SI 254)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 254)
        (nil)))

(insn 300 299 301 23 arch/arm/kernel/process.c:363 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x11677860>)
        (nil)))

(call_insn 301 300 302 23 arch/arm/kernel/process.c:363 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 302 301 303 23 arch/arm/kernel/process.c:364 (set (reg:SI 258 [ <variable>.uregs+28 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 28 [0x1c])) [0 <variable>.uregs+28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 303 302 305 23 arch/arm/kernel/process.c:364 (set (reg:SI 257)
        (plus:SI (reg:SI 258 [ <variable>.uregs+28 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 258 [ <variable>.uregs+28 ])
        (nil)))

(insn 305 303 306 23 arch/arm/kernel/process.c:364 (set (reg:SI 0 r0)
        (reg:SI 257)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 257)
        (nil)))

(insn 306 305 307 23 arch/arm/kernel/process.c:364 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC35") [flags 0x82] <string_cst 0x11677820>)
        (nil)))

(call_insn 307 306 308 23 arch/arm/kernel/process.c:364 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 308 307 309 23 arch/arm/kernel/process.c:365 (set (reg:SI 261 [ <variable>.uregs+32 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 32 [0x20])) [0 <variable>.uregs+32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 309 308 311 23 arch/arm/kernel/process.c:365 (set (reg:SI 260)
        (plus:SI (reg:SI 261 [ <variable>.uregs+32 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 261 [ <variable>.uregs+32 ])
        (nil)))

(insn 311 309 312 23 arch/arm/kernel/process.c:365 (set (reg:SI 0 r0)
        (reg:SI 260)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 260)
        (nil)))

(insn 312 311 313 23 arch/arm/kernel/process.c:365 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC36") [flags 0x82] <string_cst 0x11677800>)
        (nil)))

(call_insn 313 312 314 23 arch/arm/kernel/process.c:365 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 314 313 315 23 arch/arm/kernel/process.c:366 (set (reg:SI 264 [ <variable>.uregs+36 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 36 [0x24])) [0 <variable>.uregs+36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 315 314 317 23 arch/arm/kernel/process.c:366 (set (reg:SI 263)
        (plus:SI (reg:SI 264 [ <variable>.uregs+36 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 264 [ <variable>.uregs+36 ])
        (nil)))

(insn 317 315 318 23 arch/arm/kernel/process.c:366 (set (reg:SI 0 r0)
        (reg:SI 263)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 263)
        (nil)))

(insn 318 317 319 23 arch/arm/kernel/process.c:366 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC37") [flags 0x82] <string_cst 0x116774a0>)
        (nil)))

(call_insn 319 318 320 23 arch/arm/kernel/process.c:366 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 320 319 321 23 arch/arm/kernel/process.c:367 (set (reg:SI 267 [ <variable>.uregs+40 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 40 [0x28])) [0 <variable>.uregs+40 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 158 [ regs ])
        (nil)))

(insn 321 320 323 23 arch/arm/kernel/process.c:367 (set (reg:SI 266)
        (plus:SI (reg:SI 267 [ <variable>.uregs+40 ])
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 267 [ <variable>.uregs+40 ])
        (nil)))

(insn 323 321 324 23 arch/arm/kernel/process.c:367 (set (reg:SI 0 r0)
        (reg:SI 266)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 266)
        (nil)))

(insn 324 323 325 23 arch/arm/kernel/process.c:367 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC38") [flags 0x82] <string_cst 0x116779a0>)
        (nil)))

(call_insn 325 324 329 23 arch/arm/kernel/process.c:367 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_data.clone.0") [flags 0x3] <function_decl 0x1156b000 show_data.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 329 325 0 23 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 216)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg/v:SI 134 [ fs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg/v:SI 134 [ fs ])
            (nil))))
;; End of basic block 23 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_regs (show_regs)[0:1356]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d7(0){ }d13(1){ }d19(2){ }d24(3){ }d25(11){ }d30(12){ }d31(13){ }d35(14){ }d76(25){ }d77(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 143
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 136 137 138 139 140 143
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u30(11){ }u31(13){ }u32(14){ }u33(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; Following path with 24 sets: 2 
starting the processing of deferred insns
ending the processing of deferred insns


show_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={8d,4u} r1={6d,1u} r2={6d,1u} r3={5d} r11={1d,2u} r12={5d} r13={1d,7u,1d} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={1d,2u} r26={1d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r143={1d,1u} 
;;    total ref usage 517{489d,27u,1e} in 16{12 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 143
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 136 137 138 139 140 143
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/process.c:435 (set (reg/v/f:SI 135 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/process.c:436 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/process.c:436 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1165cfc0>)
            (nil))))

(call_insn 8 7 11 2 arch/arm/kernel/process.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 8 12 2 arch/arm/kernel/process.c:437 (set (reg/f:SI 137)
        (symbol_ref/v/f:SI ("*.LC39") [flags 0x82] <string_cst 0x115524b0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/process.c:437 (set (reg:SI 139)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/process.c:437 (set (reg:SI 138)
        (and:SI (reg:SI 139)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 14 13 18 2 arch/arm/kernel/process.c:437 (set (reg/f:SI 140 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 138)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 18 14 19 2 arch/arm/kernel/process.c:437 (set (reg/f:SI 143)
        (plus:SI (reg/f:SI 140 [ <variable>.task ])
            (const_int 756 [0x2f4]))) 4 {*arm_addsi3} (nil))

(insn 19 18 20 2 arch/arm/kernel/process.c:437 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC39") [flags 0x82] <string_cst 0x115524b0>)
            (nil))))

(insn 20 19 21 2 arch/arm/kernel/process.c:437 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 140 [ <variable>.task ])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ <variable>.task ])
        (nil)))

(insn 21 20 22 2 arch/arm/kernel/process.c:437 (set (reg:SI 2 r2)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (nil)))

(call_insn 22 21 23 2 arch/arm/kernel/process.c:437 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 23 22 24 2 arch/arm/kernel/process.c:438 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ regs ])
        (nil)))

(call_insn 24 23 25 2 arch/arm/kernel/process.c:438 (parallel [
            (call (mem:SI (symbol_ref:SI ("__show_regs") [flags 0x3] <function_decl 0x512d9680 __show_regs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn/j 25 24 0 2 arch/arm/kernel/process.c:439 (parallel [
            (call (mem:SI (symbol_ref:SI ("__backtrace") [flags 0x41] <function_decl 0x512d9500 __backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns
