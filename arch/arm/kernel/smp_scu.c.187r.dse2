
;; Function scu_get_core_count (scu_get_core_count)[0:721] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=7
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = false

**scanning insn=28
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0


scu_get_core_count

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={4d,5u} r1={1d} r2={1d} r3={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 17{9d,8u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 26 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 26 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 26 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 7 2 NOTE_INSN_DELETED)

(insn 7 9 8 2 arch/arm/kernel/smp_scu.c:30 (set (reg/v:SI 0 r0 [orig:133 ncores ] [133])
        (mem/v:SI (plus:SI (reg/v/f:SI 0 r0 [orig:136 scu_base ] [136])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 14 2 arch/arm/kernel/smp_scu.c:32 (set (reg:SI 0 r0 [138])
        (and:SI (reg/v:SI 0 r0 [orig:133 ncores ] [133])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 8 20 2 arch/arm/kernel/smp_scu.c:32 (set (reg/i:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 20 14 27 2 arch/arm/kernel/smp_scu.c:32 (use (reg/i:SI 0 r0)) -1 (nil))

(note 27 20 28 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 28 27 29 2 arch/arm/kernel/smp_scu.c:32 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 29 28 24)

(note 24 29 25 NOTE_INSN_DELETED)

(note 25 24 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function scu_enable (scu_enable)[0:722] (unlikely executed)

deferring rescan insn with uid = 33.
starting the processing of deferred insns
verify found no changes in insn with uid = 33.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=14
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
  mem: (plus:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
    (const_int 48 [0x30]))
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
    (const_int 48 [0x30]))
  varying cselib base=2 offset = 48
 processing cselib store [48..52)
mems_found = 1, cannot_delete = true

**scanning insn=24
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
  mem: (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])

   after canon_rtx address: (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
expanding: r0 into: NULL

   after cselib_expand address: (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])

   after canon_rtx address: (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
  varying cselib base=2 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=33
  mem: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [146])
        (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32])

   after canon_rtx address: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [146])
        (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32])
expanding: r3 into: (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)

   after cselib_expand address: (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)
            (const_int 4 [0x4]))) [0 cpu_cache.flush_kern_all+0 S4 A32])

   after canon_rtx address: (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)
            (const_int 4 [0x4]))) [0 cpu_cache.flush_kern_all+0 S4 A32])
 no cselib val - should be a wild read.
 adding wild read, canon_address failure.
  mem: (plus:SI (reg/f:SI 3 r3 [146])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [146])
    (const_int 4 [0x4]))
expanding: r3 into: (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)
        (const_int 4 [0x4])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const load gid=0[4..8)

**scanning insn=70
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


scu_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,4u} r1={2d} r2={3d,1u} r3={10d,10u,2d} r4={1d,2u} r12={1d} r13={2d,9u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 171{138d,31u,2e} in 20{19 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 67 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 67 4 68 2 arch/arm/kernel/smp_scu.c:38 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 68 67 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 68 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/smp_scu.c:43 (parallel [
            (set (reg/v:SI 3 r3 [orig:136 __val ] [136])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 4545179))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/smp_scu.c:43 (set (reg:SI 3 r3 [142])
        (and:SI (reg/v:SI 3 r3 [orig:136 __val ] [136])
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 64 2 arch/arm/kernel/smp_scu.c:43 (set (reg:SI 3 r3 [141])
        (and:SI (reg:SI 3 r3 [142])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 3 r3 [orig:136 __val ] [136])
            (const_int -15728656 [0xffffffffff0ffff0]))
        (nil)))

(insn 64 8 10 2 arch/arm/kernel/smp_scu.c:43 (set (reg:SI 2 r2 [143])
        (const_int 1091551376 [0x410fc090])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1091551376 [0x410fc090])
        (nil)))

(insn 10 64 11 2 arch/arm/kernel/smp_scu.c:43 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (reg:SI 2 r2 [143]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [141])
        (expr_list:REG_DEAD (reg:SI 2 r2 [143])
            (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [141])
                    (const_int 1091551376 [0x410fc090]))
                (nil)))))

(jump_insn 11 10 12 2 arch/arm/kernel/smp_scu.c:43 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 12 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 15 12 14 3 NOTE_INSN_DELETED)

(insn 14 15 16 3 arch/arm/kernel/smp_scu.c:44 (set (reg/v:SI 3 r3 [orig:137 scu_ctrl ] [137])
        (mem/v:SI (plus:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
                (const_int 48 [0x30])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 14 17 3 arch/arm/kernel/smp_scu.c:45 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:137 scu_ctrl ] [137])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 17 16 18 3 arch/arm/kernel/smp_scu.c:45 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/smp_scu.c:46 (set (reg:SI 3 r3 [orig:138 D.11045 ] [138])
        (ior:SI (reg/v:SI 3 r3 [orig:137 scu_ctrl ] [137])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 20 19 21 4 arch/arm/kernel/smp_scu.c:46 (set (mem/v:SI (plus:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
                (const_int 48 [0x30])) [0 S4 A32])
        (reg:SI 3 r3 [orig:138 D.11045 ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:138 D.11045 ] [138])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 21 20 22 5 4 "" [2 uses])

(note 22 21 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 25 22 24 5 NOTE_INSN_DELETED)

(insn 24 25 26 5 arch/arm/kernel/smp_scu.c:50 (set (reg/v:SI 3 r3 [orig:134 scu_ctrl.256 ] [134])
        (mem/v:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 24 27 5 arch/arm/kernel/smp_scu.c:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:134 scu_ctrl.256 ] [134])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 27 26 28 5 arch/arm/kernel/smp_scu.c:52 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 5 -> ( 1 6)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [61.0%] 
;; Succ edge  6 [39.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  5 [39.0%]  (fallthru)
(note 28 27 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 32 28 29 6 NOTE_INSN_DELETED)

(insn 29 32 30 6 arch/arm/kernel/smp_scu.c:55 (set (reg/v:SI 3 r3 [orig:133 scu_ctrl.259 ] [133])
        (ior:SI (reg/v:SI 3 r3 [orig:134 scu_ctrl.256 ] [134])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 30 29 31 6 arch/arm/kernel/smp_scu.c:56 (set (mem/v:SI (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140]) [0 S4 A32])
        (reg/v:SI 3 r3 [orig:133 scu_ctrl.259 ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:133 scu_ctrl.259 ] [133])
        (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:140 scu_base ] [140])
            (nil))))

(insn 31 30 33 6 arch/arm/kernel/smp_scu.c:62 (set (reg/f:SI 3 r3 [146])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)
        (nil)))

(call_insn 33 31 39 6 arch/arm/kernel/smp_scu.c:62 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [146])
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [146])
        (nil))
    (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
(code_label 39 33 42 7 6 "" [0 uses])

(note 42 39 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 70 42 69 7 (return) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 69 70 63)

(note 63 69 65 NOTE_INSN_DELETED)

(note 65 63 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function scu_power_mode (scu_power_mode)[0:723]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (plus:SI (reg:SI 3 r3 [143])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [143])
    (const_int 20 [0x14]))
expanding: r3 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 3 r3 [143])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 3 r3 [143])
    (const_int 20 [0x14]))
  varying cselib base=-542 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 3 r3 [143])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=28
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=35
  mem: (plus:SI (reg/v/f:SI 0 r0 [orig:141 scu_base ] [141])
    (reg:SI 3 r3 [152]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 0 r0 [orig:141 scu_base ] [141])
    (reg:SI 3 r3 [152]))
expanding: r0 into: NULL
expanding: r3 into: (plus:SI (value:SI)
    (const_int 8 [0x8]))
expanding value SI into: NULL
NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 0 r0 [orig:141 scu_base ] [141])
    (reg:SI 3 r3 [152]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 0 r0 [orig:141 scu_base ] [141])
    (reg:SI 3 r3 [152]))
  varying cselib base=3899 offset = 0
 processing cselib store [0..1)
mems_found = 1, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = false

**scanning insn=67
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0


scu_power_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 24[cc]
;;  ref usage 	r0={2d,4u} r1={3d,5u} r2={5d,4u} r3={5d,6u} r12={2d,2u} r13={1d,7u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 54{23d,31u,0e} in 21{21 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 65 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 65 5 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 65 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 11 2 NOTE_INSN_DELETED)

(note 11 8 12 2 NOTE_INSN_DELETED)

(note 12 11 14 2 NOTE_INSN_DELETED)

(note 14 12 17 2 NOTE_INSN_DELETED)

(note 17 14 18 2 NOTE_INSN_DELETED)

(note 18 17 64 2 NOTE_INSN_DELETED)

(insn 64 18 60 2 arch/arm/kernel/smp_scu.c:77 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 60 64 15 2 arch/arm/kernel/smp_scu.c:77 (set (reg:SI 3 r3 [143])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 15 60 61 2 arch/arm/kernel/smp_scu.c:79 (parallel [
            (set (reg:SI 2 r2 [148])
                (gtu:SI (reg/v:SI 1 r1 [orig:142 mode ] [142])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 61 15 19 2 arch/arm/kernel/smp_scu.c:77 (set (reg:SI 3 r3 [143])
        (and:SI (reg:SI 3 r3 [143])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 61 20 2 arch/arm/kernel/smp_scu.c:79 (parallel [
            (set (reg:SI 2 r2 [151])
                (ior:SI (eq:SI (reg/v:SI 1 r1 [orig:142 mode ] [142])
                        (const_int 1 [0x1]))
                    (reg:SI 2 r2 [148])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 20 19 10 2 arch/arm/kernel/smp_scu.c:79 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [151])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 10 20 21 2 arch/arm/kernel/smp_scu.c:77 (set (reg:SI 3 r3 [orig:139 D.11057 ] [139])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [143])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 21 10 22 2 arch/arm/kernel/smp_scu.c:79 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [96.0%] 
;; Succ edge  3 [4.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [4.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/kernel/smp_scu.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:139 D.11057 ] [139])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 3 arch/arm/kernel/smp_scu.c:77 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 12 [ip]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 12 [ip]
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 25 24 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 29 25 30 4 NOTE_INSN_DELETED)

(note 30 29 26 4 NOTE_INSN_DELETED)

(insn 26 30 28 4 arch/arm/kernel/smp_scu.c:82 (set (reg:SI 3 r3 [152])
        (plus:SI (reg:SI 3 r3 [orig:139 D.11057 ] [139])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 28 26 31 4 arch/arm/kernel/smp_scu.c:82 (set (reg:SI 12 ip [154])
        (zero_extend:SI (mem/v:QI (plus:SI (reg/v/f:SI 0 r0 [orig:141 scu_base ] [141])
                    (reg:SI 3 r3 [152])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 31 28 32 4 arch/arm/kernel/smp_scu.c:82 (set (reg/v:SI 12 ip [orig:134 val ] [134])
        (and:SI (reg:SI 12 ip [154])
            (const_int 252 [0xfc]))) 67 {*arm_andsi3_insn} (nil))

(insn 32 31 33 4 arch/arm/kernel/smp_scu.c:84 (set (reg:SI 1 r1 [155])
        (ior:SI (reg/v:SI 12 ip [orig:134 val ] [134])
            (reg/v:SI 1 r1 [orig:142 mode ] [142]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:134 val ] [134])
        (nil)))

(insn 33 32 35 4 arch/arm/kernel/smp_scu.c:84 (set (reg:SI 1 r1 [orig:135 D.11071 ] [135])
        (zero_extend:SI (reg:QI 1 r1 [155]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 35 33 58 4 arch/arm/kernel/smp_scu.c:84 (set (mem/v:QI (plus:SI (reg/v/f:SI 0 r0 [orig:141 scu_base ] [141])
                (reg:SI 3 r3 [152])) [0 S1 A8])
        (reg:QI 1 r1 [orig:135 D.11071 ] [135])) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [152])
        (expr_list:REG_DEAD (reg:QI 1 r1 [orig:135 D.11071 ] [135])
            (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:141 scu_base ] [141])
                (nil)))))

(jump_insn 58 35 59 4 arch/arm/kernel/smp_scu.c:86 (set (pc)
        (label_ref 42)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%] 

(barrier 59 58 39)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  3 [39.0%] 
;; Pred edge  2 [96.0%] 
(code_label 39 59 40 5 11 "" [2 uses])

(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 5 arch/arm/kernel/smp_scu.c:80 (set (reg:SI 2 r2 [orig:138 D.11064 ] [138])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 42 41 43 6 12 "" [1 uses])

(note 43 42 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 48 43 54 6 arch/arm/kernel/smp_scu.c:87 (set (reg/i:SI 0 r0)
        (reg:SI 2 r2 [orig:138 D.11064 ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:138 D.11064 ] [138])
        (nil)))

(insn 54 48 66 6 arch/arm/kernel/smp_scu.c:87 (use (reg/i:SI 0 r0)) -1 (nil))

(note 66 54 67 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 67 66 68 6 arch/arm/kernel/smp_scu.c:87 (return) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 68 67 62)

(note 62 68 63 NOTE_INSN_DELETED)

(note 63 62 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
