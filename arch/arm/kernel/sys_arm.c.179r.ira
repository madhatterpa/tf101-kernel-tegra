
;; Function sys_arm_fadvise64_64 (sys_arm_fadvise64_64)[0:1333]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 30.
rescanning insn with uid = 30.
deleting insn with uid = 30.
deleting insn with uid = 5.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 25(l0): point = 0
   Insn 13(l0): point = 2
   Insn 9(l0): point = 4
   Insn 30(l0): point = 6
   Insn 10(l0): point = 8
 a0(r138): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r138): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r138,l0) conflicts:
;;     total conflict hard regs: 0 2 3
;;     conflict hard regs: 0 2 3

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138
    modified regnos: 138
    border:
    Pressure: GENERAL_REGS=5
    Reg 138 of GENERAL_REGS has 3 regs less
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 4
Disposition:
    0:r138 l0     4
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=10, live_throughout: 0, 2, 3, 13, dead_or_set: 1
insn=30, live_throughout: 0, 2, 3, 13, dead_or_set: 138
insn=9, live_throughout: 0, 2, 3, 13, dead_or_set: 138
insn=13, live_throughout: 13, dead_or_set: 0, 2, 3, 14
insn=25, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 30 (nil))
changing reg in insn 30
changing reg in insn 9
Spilling for insn 10.
Spilling for insn 9.

Reloads for insn # 10
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 9
Reload 0: reload_out (DI) = (mem:DI (reg/f:SI 13 sp) [0 S8 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:DI (reg/f:SI 13 sp) [0 S8 A64])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


sys_arm_fadvise64_64

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={2d,1u} r3={2d,1u} r4={1d,1u} r5={1d,1u} r12={2d} r13={1d,6u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 142{126d,15u,1e} in 5{4 regular + 1 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 30 2 arch/arm/kernel/sys_arm.c:132 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1 r1 [ advice ])) 167 {*arm_movsi_insn} (nil))

(insn 30 10 9 2 arch/arm/kernel/sys_arm.c:132 (set (reg/v:DI 4 r4 [orig:138 len ] [138])
        (mem/c/i:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 len+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/c/i:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 len+0 S8 A64])
        (nil)))

(insn 9 30 13 2 arch/arm/kernel/sys_arm.c:132 (set (mem:DI (reg/f:SI 13 sp) [0 S8 A64])
        (reg/v:DI 4 r4 [orig:138 len ] [138])) 163 {*arm_movdi} (nil))

(call_insn 13 9 25 2 arch/arm/kernel/sys_arm.c:132 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sys_fadvise64_64") [flags 0x41] <function_decl 0x11433280 sys_fadvise64_64>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 25 13 29 2 arch/arm/kernel/sys_arm.c:133 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 29 25 31 NOTE_INSN_DELETED)

(note 31 29 0 NOTE_INSN_DELETED)


;; Function kernel_execve (kernel_execve)[0:1332]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 41(l0): point = 0
   Insn 35(l0): point = 2
   Insn 28(l0): point = 5
   Insn 26(l0): point = 7
   Insn 65(l0): point = 9
   Insn 22(l0): point = 11
   Insn 64(l0): point = 13
   Insn 20(l0): point = 16
   Insn 19(l0): point = 18
   Insn 17(l0): point = 20
   Insn 16(l0): point = 22
   Insn 15(l0): point = 24
   Insn 14(l0): point = 26
   Insn 13(l0): point = 28
   Insn 11(l0): point = 30
   Insn 10(l0): point = 32
   Insn 9(l0): point = 34
   Insn 4(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
   Insn 8(l0): point = 42
 a0(r134): [3..18]
 a1(r141): [6..13]
 a2(r143): [6..7]
 a3(r139): [6..42]
 a4(r138): [25..36]
 a5(r137): [27..38]
 a6(r136): [29..40]
Compressing live ranges: from 45 to 12 - 26%
Ranges after the compression:
 a0(r134): [0..4]
 a1(r141): [1..3]
 a2(r143): [1..2]
 a3(r139): [1..11]
 a4(r138): [5..8]
 a5(r137): [6..9]
 a6(r136): [7..10]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r134,l0) conflicts: a2(r143,l0) a1(r141,l0) a3(r139,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14
;; a1(r141,l0) conflicts: a0(r134,l0) a2(r143,l0) a3(r139,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14
;; a2(r143,l0) conflicts: a0(r134,l0) a1(r141,l0) a3(r139,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14
;; a3(r139,l0) conflicts: a0(r134,l0) a2(r143,l0) a1(r141,l0) a4(r138,l0) a5(r137,l0) a6(r136,l0)
;;     total conflict hard regs: 0-3 12 14
;;     conflict hard regs: 0-3 12 14
;; a4(r138,l0) conflicts: a3(r139,l0) a5(r137,l0) a6(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r137,l0) conflicts: a3(r139,l0) a4(r138,l0) a6(r136,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r136,l0) conflicts: a3(r139,l0) a4(r138,l0) a5(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14

  regions=1, blocks=5, points=12
    allocnos=7, copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r134 1r141 2r143 3r139 4r138 5r137 6r136
    modified regnos: 134 136 137 138 139 141 143
    border:
    Pressure: GENERAL_REGS=10
    Reg 134 of GENERAL_REGS has 6 regs less
    Reg 141 of GENERAL_REGS has 6 regs less
    Reg 143 of GENERAL_REGS has 6 regs less
    Reg 139 of GENERAL_REGS has 6 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 4 regs less
    Reg 136 of GENERAL_REGS has 4 regs less
      Pushing a4(r138,l0)
      Pushing a6(r136,l0)
      Pushing a5(r137,l0)
      Pushing a0(r134,l0)(potential spill: pri=3425, cost=34250)
      Pushing a1(r141,l0)(potential spill: pri=4444, cost=40000)
      Pushing a2(r143,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 4
      Popping a2(r143,l0)  -- assign reg 5
      Popping a1(r141,l0)  -- assign reg 6
      Popping a0(r134,l0)  -- assign reg 7
      Popping a5(r137,l0)  -- assign reg 5
      Popping a6(r136,l0)  -- assign reg 6
      Popping a4(r138,l0)  -- assign reg 7
Disposition:
    0:r134 l0     7    6:r136 l0     6    5:r137 l0     5    4:r138 l0     7
    3:r139 l0     4    1:r141 l0     6    2:r143 l0     5
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 0, 1, 2, 13, dead_or_set: 139
insn=2, live_throughout: 1, 2, 13, 139, dead_or_set: 0, 136
insn=3, live_throughout: 2, 13, 136, 139, dead_or_set: 1, 137
insn=4, live_throughout: 13, 136, 137, 139, dead_or_set: 2, 138
insn=9, live_throughout: 13, 136, 137, 138, 139, dead_or_set: 0
insn=10, live_throughout: 0, 13, 136, 137, 138, 139, dead_or_set: 1
insn=11, live_throughout: 13, 136, 137, 138, 139, dead_or_set: 0, 1, 14
insn=13, live_throughout: 13, 137, 138, 139, dead_or_set: 0, 136
insn=14, live_throughout: 0, 13, 138, 139, dead_or_set: 1, 137
insn=15, live_throughout: 0, 1, 13, 139, dead_or_set: 2, 138
insn=16, live_throughout: 0, 1, 2, 13, 139, dead_or_set: 3
insn=17, live_throughout: 13, 139, dead_or_set: 0, 1, 2, 3, 14
insn=19, live_throughout: 13, 14, 139, dead_or_set: 0, 134
insn=20, live_throughout: 13, 14, 134, 139, dead_or_set: 
insn=64, live_throughout: 13, 134, 139, dead_or_set: 141
insn=22, live_throughout: 13, 134, 139, 141, dead_or_set: 
insn=65, live_throughout: 13, 134, 139, dead_or_set: 141
insn=26, live_throughout: 13, 134, 139, 141, dead_or_set: 143
insn=28, live_throughout: 13, 134, dead_or_set: 0, 1, 2, 3, 12, 14, 139, 141, 143
insn=29, live_throughout: 13, 14, 134, dead_or_set: 
insn=35, live_throughout: 13, 14, dead_or_set: 0, 134
insn=41, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 26 (nil))
changing reg in insn 19
changing reg in insn 35
changing reg in insn 22
changing reg in insn 2
changing reg in insn 13
changing reg in insn 3
changing reg in insn 14
changing reg in insn 4
changing reg in insn 15
changing reg in insn 8
changing reg in insn 28
changing reg in insn 16
changing reg in insn 9
changing reg in insn 65
changing reg in insn 64
changing reg in insn 65
changing reg in insn 28
changing reg in insn 26
changing reg in insn 28
Spilling for insn 64.
Using reg 3 for reload 0
Spilling for insn 22.

Reloads for insn # 64
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/f:SI 13 sp) [0 regs.uregs+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/f:SI 13 sp) [0 regs.uregs+0 S4 A64])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


kernel_execve

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,7u} r1={6d,3u} r2={5d,2u} r3={6d,2u} r4={1d,1u} r5={2d,2u} r6={3d,3u} r7={2d,3u} r12={4d} r13={1d,11u,3d} r14={4d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 303{264d,36u,3e} in 22{20 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 5 8 2 NOTE_INSN_DELETED)

(insn 8 18 2 2 arch/arm/kernel/sys_arm.c:89 discrim 1 (set (reg/f:SI 4 r4 [139])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 2 8 3 2 arch/arm/kernel/sys_arm.c:85 (set (reg/v/f:SI 6 r6 [orig:136 filename ] [136])
        (reg:SI 0 r0 [ filename ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/sys_arm.c:85 (set (reg/v/f:SI 5 r5 [orig:137 argv ] [137])
        (reg:SI 1 r1 [ argv ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 9 2 arch/arm/kernel/sys_arm.c:85 (set (reg/v/f:SI 7 r7 [orig:138 envp ] [138])
        (reg:SI 2 r2 [ envp ])) 167 {*arm_movsi_insn} (nil))

(insn 9 4 10 2 arch/arm/kernel/sys_arm.c:89 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/sys_arm.c:89 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 10 13 2 arch/arm/kernel/sys_arm.c:89 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 11 14 2 arch/arm/kernel/sys_arm.c:90 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:136 filename ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/sys_arm.c:90 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:137 argv ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/sys_arm.c:90 (set (reg:SI 2 r2)
        (reg/v/f:SI 7 r7 [orig:138 envp ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/sys_arm.c:90 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))

(call_insn 17 16 19 2 arch/arm/kernel/sys_arm.c:90 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_execve") [flags 0x41] <function_decl 0x10fdc080 do_execve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 19 17 20 2 arch/arm/kernel/sys_arm.c:93 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 7 r7 [orig:134 ret ] [134])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 20 19 21 2 arch/arm/kernel/sys_arm.c:93 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 4 [r4] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 7 [r7] 13 [sp]


;; Succ edge  4 [19.1%] 
;; Succ edge  3 [80.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr]
;; live  in  	 4 [r4] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 6 [r6]
;; live  kill	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr]

;; Pred edge  2 [80.9%]  (fallthru)
(note 21 20 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 24 21 69 3 NOTE_INSN_DELETED)

(insn 69 24 64 3 arch/arm/kernel/sys_arm.c:105 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 64 69 22 3 arch/arm/kernel/sys_arm.c:105 (set (reg:SI 6 r6 [141])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 64 65 3 arch/arm/kernel/sys_arm.c:99 (set (mem/s/j:SI (reg/f:SI 13 sp) [0 regs.uregs+0 S4 A64])
        (reg/v:SI 7 r7 [orig:134 ret ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 65 22 26 3 arch/arm/kernel/sys_arm.c:105 (set (reg:SI 6 r6 [141])
        (and:SI (reg:SI 6 r6 [141])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 65 28 3 arch/arm/kernel/sys_arm.c:105 (set (reg:SI 5 r5 [143])
        (const_int 8112 [0x1fb0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8112 [0x1fb0])
        (nil)))

(insn 28 26 29 3 arch/arm/kernel/sys_arm.c:105 (parallel [
            (asm_operands/v ("add	r0, %0, %1
	mov	r1, %2
	mov	r2, %3
	bl	memmove
	mov	r8, #0
	mov	r9, %0
	mov	sp, r0
	b	ret_to_user") ("") 0 [
                    (reg:SI 6 r6 [141])
                    (reg:SI 5 r5 [143])
                    (reg/f:SI 4 r4 [139])
                    (const_int 72 [0x48])
                ]
                 [
                    (asm_input:SI ("r") 0)
                    (asm_input:SI ("Ir") 0)
                    (asm_input:SI ("r") 0)
                    (asm_input:SI ("Ir") 0)
                ] 8669379)
            (clobber (mem:BLK (scratch) [0 A8]))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
            (clobber (reg:QI 3 r3))
            (clobber (reg:QI 2 r2))
            (clobber (reg:QI 1 r1))
            (clobber (reg:QI 0 r0))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 7 [r7] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [19.1%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 29 28 30 4 4 ("out") [1 uses])

(note 30 29 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 30 41 4 arch/arm/kernel/sys_arm.c:122 (set (reg/i:SI 0 r0)
        (reg/v:SI 7 r7 [orig:134 ret ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 41 35 67 4 arch/arm/kernel/sys_arm.c:122 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 67 41 68 NOTE_INSN_DELETED)

(note 68 67 0 NOTE_INSN_DELETED)


;; Function sys_execve (sys_execve)[0:1331]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 49.
verify found no changes in insn with uid = 49.
deleting insn with uid = 26.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

Pass 0 for finding allocno costs

    a1 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 42(l0): point = 0
   Insn 36(l0): point = 2
   Insn 29(l0): point = 5
   Insn 27(l0): point = 7
   Insn 49(l0): point = 9
   Insn 28(l0): point = 11
   Insn 25(l0): point = 13
   Insn 24(l0): point = 15
   Insn 23(l0): point = 17
   Insn 22(l0): point = 19
   Insn 21(l0): point = 21
   Insn 46(l0): point = 24
   Insn 15(l0): point = 26
   Insn 13(l0): point = 29
   Insn 12(l0): point = 31
   Insn 11(l0): point = 33
   Insn 10(l0): point = 35
   Insn 5(l0): point = 37
   Insn 4(l0): point = 39
   Insn 3(l0): point = 41
 a0(r134): [24..26] [3..13]
 a1(r140): [8..9]
 a2(r133): [27..33] [12..23]
 a3(r139): [29..37] [18..23]
 a4(r138): [29..39] [20..23]
 a5(r137): [29..41] [22..23]
Compressing live ranges: from 44 to 17 - 38%
Ranges after the compression:
 a0(r134): [9..10] [0..4]
 a1(r140): [1..2]
 a2(r133): [11..13] [3..8]
 a3(r139): [12..14] [5..8]
 a4(r138): [12..15] [6..8]
 a5(r137): [12..16] [7..8]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r134,l0) conflicts: a1(r140,l0) a2(r133,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r140,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a2(r133,l0) conflicts: a0(r134,l0) a3(r139,l0) a4(r138,l0) a5(r137,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a3(r139,l0) conflicts: a2(r133,l0) a4(r138,l0) a5(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r138,l0) conflicts: a2(r133,l0) a3(r139,l0) a5(r137,l0)
;;     total conflict hard regs: 0 1 3 14
;;     conflict hard regs: 0 1 3 14
;; a5(r137,l0) conflicts: a2(r133,l0) a3(r139,l0) a4(r138,l0)
;;     total conflict hard regs: 0 2 3 14
;;     conflict hard regs: 0 2 3 14

  regions=1, blocks=6, points=17
    allocnos=6, copies=0, conflicts=1, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r134 1r140 2r133 3r139 4r138 5r137
    modified regnos: 133 134 137 138 139 140
    border:
    Pressure: GENERAL_REGS=6
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 5 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 4 regs less
      Pushing a1(r140,l0)
      Pushing a0(r134,l0)
      Pushing a5(r137,l0)
      Pushing a4(r138,l0)
      Pushing a3(r139,l0)
      Pushing a2(r133,l0)
      Popping a2(r133,l0)  -- assign reg 4
      Popping a3(r139,l0)  -- assign reg 5
      Popping a4(r138,l0)  -- assign reg 6
      Popping a5(r137,l0)  -- assign reg 7
      Popping a0(r134,l0)  -- assign reg 5
      Popping a1(r140,l0)  -- assign reg 3
Disposition:
    2:r133 l0     4    0:r134 l0     5    5:r137 l0     7    4:r138 l0     6
    3:r139 l0     5    1:r140 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 0, 2, 3, 13, dead_or_set: 1, 137
insn=4, live_throughout: 0, 3, 13, 137, dead_or_set: 2, 138
insn=5, live_throughout: 0, 13, 137, 138, dead_or_set: 3, 139
insn=10, live_throughout: 13, 137, 138, 139, dead_or_set: 0, 14
insn=11, live_throughout: 0, 13, 14, 137, 138, 139, dead_or_set: 133
insn=12, live_throughout: 0, 13, 14, 133, 137, 138, 139, dead_or_set: 
insn=13, live_throughout: 0, 13, 14, 133, 137, 138, 139, dead_or_set: 
insn=15, live_throughout: 13, 14, dead_or_set: 133, 134
insn=46, live_throughout: 13, 14, 134, dead_or_set: 
insn=18, live_throughout: 0, 13, 133, 137, 138, 139, dead_or_set: 
insn=21, live_throughout: 0, 13, 133, 138, 139, dead_or_set: 1, 137
insn=22, live_throughout: 0, 1, 13, 133, 139, dead_or_set: 2, 138
insn=23, live_throughout: 0, 1, 2, 13, 133, dead_or_set: 3, 139
insn=24, live_throughout: 13, 133, dead_or_set: 0, 1, 2, 3, 14
insn=25, live_throughout: 13, 133, dead_or_set: 0, 134
insn=28, live_throughout: 13, 134, dead_or_set: 1, 133
insn=49, live_throughout: 1, 13, 134, dead_or_set: 140
insn=27, live_throughout: 1, 13, 134, dead_or_set: 0, 140
insn=29, live_throughout: 13, 134, dead_or_set: 0, 1, 14
insn=30, live_throughout: 13, 14, 134, dead_or_set: 
insn=36, live_throughout: 13, 14, dead_or_set: 0, 134
insn=42, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 49 (nil))
changing reg in insn 11
changing reg in insn 28
changing reg in insn 15
changing reg in insn 12
changing reg in insn 25
changing reg in insn 15
changing reg in insn 36
changing reg in insn 3
changing reg in insn 21
changing reg in insn 4
changing reg in insn 22
changing reg in insn 5
changing reg in insn 23
changing reg in insn 49
changing reg in insn 27


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 29.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


sys_execve

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={6d,3u} r2={5d,2u} r3={6d,3u} r4={1d,3u} r5={3d,2u} r6={1d,1u} r7={1d,1u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 404{372d,32u,0e} in 20{17 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 6 4 2 arch/arm/kernel/sys_arm.c:68 (set (reg/v/f:SI 7 r7 [orig:137 argv ] [137])
        (reg:SI 1 r1 [ argv ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/sys_arm.c:68 (set (reg/v/f:SI 6 r6 [orig:138 envp ] [138])
        (reg:SI 2 r2 [ envp ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 10 2 arch/arm/kernel/sys_arm.c:68 (set (reg/v/f:SI 5 r5 [orig:139 regs ] [139])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 5 11 2 arch/arm/kernel/sys_arm.c:72 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("getname") [flags 0x41] <function_decl 0x112c7180 getname>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/sys_arm.c:72 (set (reg/v/f:SI 4 r4 [orig:133 filename ] [133])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:133 filename ] [133])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 46 3 include/linux/err.h:29 (set (reg/v:SI 5 r5 [orig:134 error ] [134])
        (reg/v/f:SI 4 r4 [orig:133 filename ] [133])) 167 {*arm_movsi_insn} (nil))

(jump_insn 46 15 47 3 (set (pc)
        (label_ref 30)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 47 46 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
(code_label 18 47 19 4 8 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 22 4 arch/arm/kernel/sys_arm.c:76 (set (reg:SI 1 r1)
        (reg/v/f:SI 7 r7 [orig:137 argv ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/kernel/sys_arm.c:76 (set (reg:SI 2 r2)
        (reg/v/f:SI 6 r6 [orig:138 envp ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/kernel/sys_arm.c:76 (set (reg:SI 3 r3)
        (reg/v/f:SI 5 r5 [orig:139 regs ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 25 4 arch/arm/kernel/sys_arm.c:76 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_execve") [flags 0x41] <function_decl 0x10fdc080 do_execve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 25 24 28 4 arch/arm/kernel/sys_arm.c:76 (set (reg/v:SI 5 r5 [orig:134 error ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 28 25 49 4 arch/arm/kernel/sys_arm.c:77 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:133 filename ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 49 28 27 4 arch/arm/kernel/sys_arm.c:77 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x112c4240 names_cachep>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x112c4240 names_cachep>)
        (nil)))

(insn 27 49 29 4 arch/arm/kernel/sys_arm.c:77 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (reg/f:SI 3 r3 [140]) [0 names_cachep+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("names_cachep") [flags 0xc0] <var_decl 0x112c4240 names_cachep>) [0 names_cachep+0 S4 A32])
        (nil)))

(call_insn 29 27 30 4 arch/arm/kernel/sys_arm.c:77 (parallel [
            (call (mem:SI (symbol_ref:SI ("kmem_cache_free") [flags 0x41] <function_decl 0x11486300 kmem_cache_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 30 29 31 5 9 ("out") [1 uses])

(note 31 30 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 31 42 5 arch/arm/kernel/sys_arm.c:80 (set (reg/i:SI 0 r0)
        (reg/v:SI 5 r5 [orig:134 error ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 42 36 48 5 arch/arm/kernel/sys_arm.c:80 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 48 42 50 NOTE_INSN_DELETED)

(note 50 48 0 NOTE_INSN_DELETED)


;; Function sys_vfork (sys_vfork)[0:1330]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 27(l0): point = 0
   Insn 15(l0): point = 2
   Insn 10(l0): point = 4
   Insn 8(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 14(l0): point = 12
   Insn 13(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
 a0(r137): [5..16]
 a1(r135): [9..18]
Compressing live ranges: from 21 to 4 - 19%
Ranges after the compression:
 a0(r137): [0..2]
 a1(r135): [1..3]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r137,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r135,l0) conflicts: a0(r137,l0)
;;     total conflict hard regs: 0 2 3
;;     conflict hard regs: 0 2 3

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r137 1r135
    modified regnos: 135 137
    border:
    Pressure: GENERAL_REGS=5
    Reg 137 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
      Pushing a1(r135,l0)
      Pushing a0(r137,l0)
      Popping a0(r137,l0)  -- assign reg 12
      Popping a1(r135,l0)  -- assign reg 1
Disposition:
    1:r135 l0     1    0:r137 l0    12
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 135
insn=7, live_throughout: 13, 135, dead_or_set: 137
insn=13, live_throughout: 13, 135, 137, dead_or_set: 2
insn=14, live_throughout: 2, 13, 135, 137, dead_or_set: 3
insn=11, live_throughout: 2, 3, 13, 135, 137, dead_or_set: 0
insn=12, live_throughout: 0, 2, 3, 13, 137, dead_or_set: 1, 135
insn=8, live_throughout: 0, 1, 2, 3, 13, 137, dead_or_set: 
insn=10, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 137
insn=15, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=27, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 7 (nil))
changing reg in insn 2
changing reg in insn 13
changing reg in insn 12
changing reg in insn 7
changing reg in insn 14
changing reg in insn 10
changing reg in insn 8
Spilling for insn 8.
Spilling for insn 10.

Reloads for insn # 8
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 10
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


sys_vfork

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={3d,1u} r3={3d,1u} r12={3d,3u} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 148{130d,18u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 2 2 NOTE_INSN_DELETED)

(insn 2 6 7 2 arch/arm/kernel/sys_arm.c:58 (set (reg/v/f:SI 1 r1 [orig:135 regs ] [135])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 7 2 13 2 arch/arm/kernel/sys_arm.c:59 (set (reg:SI 12 ip [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 13 7 14 2 arch/arm/kernel/sys_arm.c:59 (set (reg:SI 2 r2)
        (reg/v/f:SI 1 r1 [orig:135 regs ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 11 2 arch/arm/kernel/sys_arm.c:59 (set (reg:SI 3 r3)
        (reg:SI 12 ip [137])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 11 14 12 2 arch/arm/kernel/sys_arm.c:59 (set (reg:SI 0 r0)
        (const_int 16657 [0x4111])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 16657 [0x4111])
        (nil)))

(insn 12 11 8 2 arch/arm/kernel/sys_arm.c:59 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:135 regs ] [135])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 12 10 2 arch/arm/kernel/sys_arm.c:59 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [137])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 10 8 15 2 arch/arm/kernel/sys_arm.c:59 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [137])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 15 10 27 2 arch/arm/kernel/sys_arm.c:59 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_fork") [flags 0x41] <function_decl 0x10fdc100 do_fork>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 27 15 32 2 arch/arm/kernel/sys_arm.c:60 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 32 27 33 NOTE_INSN_DELETED)

(note 33 32 0 NOTE_INSN_DELETED)


;; Function sys_clone (sys_clone)[0:1329]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 23(l0): point = 0
   Insn 18(l0): point = 2
   Insn 17(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 14(l0): point = 15
   Insn 12(l0): point = 18
   Insn 7(l0): point = 20
   Insn 6(l0): point = 22
   Insn 4(l0): point = 24
   Insn 2(l0): point = 26
   Insn 11(l0): point = 28
 a0(r139): [3..22]
 a1(r137): [5..24]
 a2(r140): [9..20]
 a3(r136): [18..28] [11..15]
 a4(r135): [13..26]
Compressing live ranges: from 31 to 12 - 38%
Ranges after the compression:
 a0(r139): [0..8]
 a1(r137): [1..9]
 a2(r140): [2..7]
 a3(r136): [6..11] [3..5]
 a4(r135): [4..10]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r139,l0) conflicts: a1(r137,l0) a2(r140,l0) a3(r136,l0) a4(r135,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r137,l0) conflicts: a0(r139,l0) a2(r140,l0) a3(r136,l0) a4(r135,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r140,l0) conflicts: a0(r139,l0) a1(r137,l0) a3(r136,l0) a4(r135,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r136,l0) conflicts: a0(r139,l0) a1(r137,l0) a2(r140,l0) a4(r135,l0)
;;     total conflict hard regs: 0 2 14
;;     conflict hard regs: 0 2 14
;; a4(r135,l0) conflicts: a0(r139,l0) a1(r137,l0) a2(r140,l0) a3(r136,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14

  regions=1, blocks=5, points=12
    allocnos=5, copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r139 1r137 2r140 3r136 4r135
    modified regnos: 135 136 137 139 140
    border:
    Pressure: GENERAL_REGS=7
    Reg 139 of GENERAL_REGS has 5 regs less
    Reg 137 of GENERAL_REGS has 5 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
      Pushing a4(r135,l0)
      Pushing a3(r136,l0)
      Pushing a2(r140,l0)
      Pushing a1(r137,l0)
      Pushing a0(r139,l0)
      Popping a0(r139,l0)  -- assign reg 12
      Popping a1(r137,l0)  -- assign reg 4
      Popping a2(r140,l0)  -- assign reg 2
      Popping a3(r136,l0)  -- assign reg 1
      Popping a4(r135,l0)  -- assign reg 0
Disposition:
    4:r135 l0     0    3:r136 l0     1    1:r137 l0     4    0:r139 l0    12
    2:r140 l0     2
New iteration of spill/restore move
+++Costs: overall -16250, reg -16250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=11, live_throughout: 0, 2, 13, 14, dead_or_set: 1, 136
insn=2, live_throughout: 2, 13, 14, 24, 136, dead_or_set: 0, 135
insn=4, live_throughout: 13, 14, 24, 135, 136, dead_or_set: 2, 137
insn=6, live_throughout: 13, 14, 24, 135, 136, 137, dead_or_set: 139
insn=7, live_throughout: 13, 14, 24, 135, 136, 137, 139, dead_or_set: 140
insn=12, live_throughout: 13, 14, 135, 136, 137, 139, 140, dead_or_set: 
insn=14, live_throughout: 13, 14, 135, 137, 139, 140, dead_or_set: 136
insn=15, live_throughout: 13, 14, 135, 136, 137, 139, 140, dead_or_set: 
insn=19, live_throughout: 13, 14, 136, 137, 139, 140, dead_or_set: 0, 135
insn=20, live_throughout: 0, 13, 14, 137, 139, 140, dead_or_set: 1, 136
insn=21, live_throughout: 0, 1, 13, 14, 137, 139, dead_or_set: 2, 140
insn=22, live_throughout: 0, 1, 2, 13, 14, 137, 139, dead_or_set: 3
insn=17, live_throughout: 0, 1, 2, 3, 13, 14, 139, dead_or_set: 137
insn=18, live_throughout: 0, 1, 2, 3, 13, 14, dead_or_set: 139
insn=23, live_throughout: 13, 14, dead_or_set: 0, 1, 2, 3
changing reg in insn 2
changing reg in insn 19
changing reg in insn 11
changing reg in insn 14
changing reg in insn 20
changing reg in insn 4
changing reg in insn 17
changing reg in insn 6
changing reg in insn 18
changing reg in insn 7
changing reg in insn 21
changing reg in insn 14
Spilling for insn 17.
Spilling for insn 18.

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 18
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 19.
deleting insn with uid = 20.
deleting insn with uid = 21.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


sys_clone

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 24[cc]
;;  ref usage 	r0={2d,2u} r1={4d,3u} r2={3d,3u} r3={3d,1u} r4={1d,1u} r12={3d,1u} r13={1d,9u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 152{130d,22u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 4 [r4] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 9 8 2 NOTE_INSN_DELETED)

(note 8 3 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 4 2 arch/arm/kernel/sys_arm.c:51 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 1 r1 [ newsp ])
                    (const_int 0 [0x0])))
            (set (reg/v:SI 1 r1 [orig:136 newsp ] [136])
                (reg:SI 1 r1 [ newsp ]))
        ]) 174 {*movsi_compare0} (nil))

(insn 4 11 6 2 arch/arm/kernel/sys_arm.c:50 (set (reg/v/f:SI 4 r4 [orig:137 parent_tidptr ] [137])
        (reg:SI 2 r2 [ parent_tidptr ])) 167 {*arm_movsi_insn} (nil))

(insn 6 4 7 2 arch/arm/kernel/sys_arm.c:50 (set (reg/v/f:SI 12 ip [orig:139 child_tidptr ] [139])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 child_tidptr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 12 2 arch/arm/kernel/sys_arm.c:50 (set (reg/v/f:SI 2 r2 [orig:140 regs ] [140])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 regs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 12 7 13 2 arch/arm/kernel/sys_arm.c:51 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/kernel/sys_arm.c:52 (set (reg/v:SI 1 r1 [orig:136 newsp ] [136])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:140 regs ] [140])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 16 "" [1 uses])

(note 16 15 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 16 17 4 arch/arm/kernel/sys_arm.c:54 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 17 22 18 4 arch/arm/kernel/sys_arm.c:54 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:137 parent_tidptr ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 23 4 arch/arm/kernel/sys_arm.c:54 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg/v/f:SI 12 ip [orig:139 child_tidptr ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 23 18 24 4 arch/arm/kernel/sys_arm.c:54 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_fork") [flags 0x41] <function_decl 0x10fdc100 do_fork>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 24 23 37)

(note 37 24 0 NOTE_INSN_DELETED)


;; Function sys_fork (sys_fork)[0:1328]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 26(l0): point = 0
   Insn 14(l0): point = 2
   Insn 9(l0): point = 4
   Insn 7(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 13(l0): point = 12
   Insn 12(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r136): [5..16]
 a1(r135): [9..18]
Compressing live ranges: from 21 to 4 - 19%
Ranges after the compression:
 a0(r136): [0..2]
 a1(r135): [1..3]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r135,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 2 3
;;     conflict hard regs: 0 2 3

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r135
    modified regnos: 135 136
    border:
    Pressure: GENERAL_REGS=5
    Reg 136 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
      Pushing a1(r135,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 12
      Popping a1(r135,l0)  -- assign reg 1
Disposition:
    1:r135 l0     1    0:r136 l0    12
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 135
insn=6, live_throughout: 13, 135, dead_or_set: 136
insn=12, live_throughout: 13, 135, 136, dead_or_set: 2
insn=13, live_throughout: 2, 13, 135, 136, dead_or_set: 3
insn=10, live_throughout: 2, 3, 13, 135, 136, dead_or_set: 0
insn=11, live_throughout: 0, 2, 3, 13, 136, dead_or_set: 1, 135
insn=7, live_throughout: 0, 1, 2, 3, 13, 136, dead_or_set: 
insn=9, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 136
insn=14, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=26, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 2
changing reg in insn 12
changing reg in insn 11
changing reg in insn 6
changing reg in insn 13
changing reg in insn 9
changing reg in insn 7
Spilling for insn 7.
Spilling for insn 9.

Reloads for insn # 7
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


sys_fork

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={4d,3u} r2={3d,1u} r3={3d,1u} r12={3d,3u} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 148{130d,18u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 6 2 arch/arm/kernel/sys_arm.c:35 (set (reg/v/f:SI 1 r1 [orig:135 regs ] [135])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 12 2 arch/arm/kernel/sys_arm.c:37 (set (reg:SI 12 ip [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 12 6 13 2 arch/arm/kernel/sys_arm.c:37 (set (reg:SI 2 r2)
        (reg/v/f:SI 1 r1 [orig:135 regs ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 10 2 arch/arm/kernel/sys_arm.c:37 (set (reg:SI 3 r3)
        (reg:SI 12 ip [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 10 13 11 2 arch/arm/kernel/sys_arm.c:37 (set (reg:SI 0 r0)
        (const_int 17 [0x11])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 7 2 arch/arm/kernel/sys_arm.c:37 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:135 regs ] [135])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 11 9 2 arch/arm/kernel/sys_arm.c:37 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 9 7 14 2 arch/arm/kernel/sys_arm.c:37 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 14 9 26 2 arch/arm/kernel/sys_arm.c:37 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_fork") [flags 0x41] <function_decl 0x10fdc100 do_fork>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 26 14 30 2 arch/arm/kernel/sys_arm.c:42 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 30 26 31 NOTE_INSN_DELETED)

(note 31 30 0 NOTE_INSN_DELETED)

