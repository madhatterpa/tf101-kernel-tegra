
;; Function ipi_flush_tlb_all (ipi_flush_tlb_all)[0:746]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


ipi_flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={4d,4u} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 28{14d,14u,0e} in 14{14 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 22 to worklist
  Adding insn 57 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
Finished finding needed instructions:
processing block 6 lr out =  13 [sp] 14 [lr]
processing block 5 lr out =  13 [sp] 14 [lr]
  Adding insn 21 to worklist
processing block 4 lr out =  13 [sp] 14 [lr]
  Adding insn 18 to worklist
processing block 3 lr out =  3 [r3] 13 [sp] 14 [lr]
  Adding insn 13 to worklist
processing block 2 lr out =  3 [r3] 13 [sp] 14 [lr]
  Adding insn 10 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist


ipi_flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={4d,4u} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 28{14d,14u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 55 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 55 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 55 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 6 2 NOTE_INSN_DELETED)

(insn 6 9 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 8 7 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 10 8 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 2 r2 [137])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 2 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 16 18 4 NOTE_INSN_DELETED)

(insn 18 17 19 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn 19 18 20 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 22 21 23 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [139])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [139])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 23 22 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 26 25 56 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 56 26 57 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 57 56 58 6 arch/arm/kernel/smp_tlb.c:42 (return) 260 {return} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 58 57 53)

(note 53 58 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_page (ipi_flush_tlb_page)[0:748]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


ipi_flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 24[cc]
;;  ref usage 	r0={4d,5u} r1={2d,2u} r2={10d,10u,1d} r3={7d,7u} r12={2d,3u,1d} r13={1d,7u} r14={1d,1u} r24={5d,3u} 
;;    total ref usage 72{32d,38u,2e} in 31{31 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 17 to worklist
  Adding insn 36 to worklist
  Adding insn 41 to worklist
  Adding insn 45 to worklist
  Adding insn 70 to worklist
  Adding insn 48 to worklist
Finished finding needed instructions:
processing block 6 lr out =  13 [sp] 14 [lr]
processing block 5 lr out =  13 [sp] 14 [lr]
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  3 [r3] 13 [sp] 14 [lr]
  Adding insn 40 to worklist
processing block 3 lr out =  1 [r1] 3 [r3] 13 [sp] 14 [lr]
processing block 2 lr out =  1 [r1] 3 [r3] 13 [sp] 14 [lr]
  Adding insn 28 to worklist
  Adding insn 33 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 61 to worklist
  Adding insn 19 to worklist
  Adding insn 60 to worklist
  Adding insn 65 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 63 to worklist
  Adding insn 13 to worklist
  Adding insn 7 to worklist


ipi_flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 24[cc]
;;  ref usage 	r0={4d,5u} r1={2d,2u} r2={10d,10u,1d} r3={7d,7u} r12={2d,3u,1d} r13={1d,7u} r14={1d,1u} r24={5d,3u} 
;;    total ref usage 72{32d,38u,2e} in 31{31 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 68 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 68 4 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 68 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 14 2 NOTE_INSN_DELETED)

(note 14 11 21 2 NOTE_INSN_DELETED)

(note 21 14 26 2 NOTE_INSN_DELETED)

(note 26 21 32 2 NOTE_INSN_DELETED)

(note 32 26 7 2 NOTE_INSN_DELETED)

(insn 7 32 13 2 arch/arm/kernel/smp_tlb.c:55 (set (reg/f:SI 12 ip [orig:139 D.13370 ] [139])
        (mem/s/f/j:SI (reg/v/f:SI 0 r0 [orig:140 arg ] [140]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 7 63 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [orig:146 <variable>.ta_start ] [146])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:140 arg ] [140])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:140 arg ] [140])
        (nil)))

(insn 63 13 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 2 r2 [141])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 9 63 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [141])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [141])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 10 9 58 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 2 r2 [orig:142 <variable>.vm_mm ] [142])
        (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 58 10 59 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 3 r3 [orig:146 <variable>.ta_start ] [146])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 59 58 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 3 r3 [145])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 59 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 2 r2 [143])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 2 r2 [orig:142 <variable>.vm_mm ] [142])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 16 12 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
        (ior:SI (reg:SI 2 r2 [143])
            (reg:SI 3 r3 [145]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [143])
        (nil)))

(insn 17 16 65 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 65 17 60 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 60 65 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [150])
        (and:SI (reg:SI 0 r0)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 19 60 61 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [orig:149 <variable>.vm_mm ] [149])
        (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [orig:139 D.13370 ] [139])
        (nil)))

(insn 61 19 20 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [150])
        (and:SI (reg:SI 2 r2 [150])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 61 23 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [148])
        (plus:SI (reg/f:SI 0 r0 [orig:149 <variable>.vm_mm ] [149])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 23 20 25 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [150])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 23 66 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 12 ip [155])
        (plus:SI (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 66 25 67 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 67 66 33 2 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:154 <variable>.cpu ] [154])
            (reg:SI 12 ip [155]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 12 ip [155])
            (nil))))

(insn 33 67 28 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 28 33 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [156])
        (ashiftrt:SI (reg:SI 2 r2 [orig:154 <variable>.cpu ] [154])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 32 [0x20]))
        (nil)))

(insn 31 28 34 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:135 D.13510 ] [135])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [148])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [148])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:135 D.13510 ] [135])
            (nil))))

(jump_insn 34 31 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 9 "" [1 uses])

(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 39 38 40 4 NOTE_INSN_DELETED)

(insn 40 39 41 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn 41 40 42 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 43 42 56 5 NOTE_INSN_DELETED)

(insn 56 43 57 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 3 r3 [160])
        (and:SI (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 45 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 3 r3 [160])
        (and:SI (reg:SI 3 r3 [160])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 45 57 46 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 3 r3 [160])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [160])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 46 45 47 6 10 "" [1 uses])

(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 69 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 69 48 70 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 70 69 71 6 arch/arm/kernel/smp_tlb.c:56 (return) 260 {return} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 71 70 62)

(note 62 71 64 NOTE_INSN_DELETED)

(note 64 62 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_kernel_page (ipi_flush_tlb_kernel_page)[0:749]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


ipi_flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,3u} r3={4d,4u} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 32{15d,17u,0e} in 15{15 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 16 to worklist
  Adding insn 21 to worklist
  Adding insn 23 to worklist
  Adding insn 42 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
processing block 6 lr out =  13 [sp] 14 [lr]
processing block 5 lr out =  13 [sp] 14 [lr]
processing block 4 lr out =  3 [r3] 13 [sp] 14 [lr]
  Adding insn 20 to worklist
processing block 3 lr out =  2 [r2] 3 [r3] 13 [sp] 14 [lr]
processing block 2 lr out =  2 [r2] 3 [r3] 13 [sp] 14 [lr]
  Adding insn 13 to worklist
  Adding insn 7 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 8 to worklist


ipi_flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,3u} r3={4d,4u} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 32{15d,17u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 40 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 40 4 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 40 3 2 NOTE_INSN_DELETED)

(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 12 2 NOTE_INSN_DELETED)

(note 12 9 8 2 NOTE_INSN_DELETED)

(insn 8 12 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg:SI 3 r3 [orig:137 <variable>.ta_start ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ arg ])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn 35 8 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg:SI 3 r3 [orig:137 <variable>.ta_start ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 36 35 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 36 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 2 r2 [136])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 7 38 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [136])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 11 7 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 13 11 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 15 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 4 NOTE_INSN_DELETED)

(insn 20 19 21 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn 21 20 22 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 24 23 25 6 16 "" [1 uses])

(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 27 26 41 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 41 27 42 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 42 41 43 6 arch/arm/kernel/smp_tlb.c:63 (return) 260 {return} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 43 42 37)

(note 37 43 39 NOTE_INSN_DELETED)

(note 39 37 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_range (ipi_flush_tlb_range)[0:750]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ipi_flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={3d,1u} r3={4d,2u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 146{130d,16u,0e} in 8{7 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 12 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
processing block 2 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 21 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 11 to worklist
  Adding insn 2 to worklist


ipi_flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={3d,1u} r3={4d,2u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 146{130d,16u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 23 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 23 4 24 2 arch/arm/kernel/smp_tlb.c:66 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 24 23 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 24 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 2 2 NOTE_INSN_DELETED)

(insn 2 8 11 2 arch/arm/kernel/smp_tlb.c:66 (set (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
        (reg:SI 0 r0 [ arg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ arg ])
        (nil)))

(insn 11 2 9 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (reg/f:SI 0 r0 [orig:134 arg ] [134]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 11 10 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 21 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
        (nil)))

(insn 21 10 12 2 arch/arm/kernel/smp_tlb.c:69 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 12 21 25 2 arch/arm/kernel/smp_tlb.c:69 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [135]) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(note 25 12 26 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 26 25 27 2 arch/arm/kernel/smp_tlb.c:70 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 27 26 20)

(note 20 27 22 NOTE_INSN_DELETED)

(note 22 20 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_kernel_range (ipi_flush_tlb_kernel_range)[0:751]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


ipi_flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{128d,13u,0e} in 6{5 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 25 to worklist
  Adding insn 11 to worklist
  Adding insn 22 to worklist
Finished finding needed instructions:
processing block 2 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 20 to worklist
  Adding insn 9 to worklist
  Adding insn 10 to worklist


ipi_flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,4u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{128d,13u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 22 4 23 2 arch/arm/kernel/smp_tlb.c:73 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 23 22 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 23 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 10 2 NOTE_INSN_DELETED)

(insn 10 8 9 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 10 20 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 9 11 2 arch/arm/kernel/smp_tlb.c:76 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 11 20 24 2 arch/arm/kernel/smp_tlb.c:76 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [135])
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [135])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 24 11 25 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 25 24 26 2 arch/arm/kernel/smp_tlb.c:77 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 26 25 19)

(note 19 26 21 NOTE_INSN_DELETED)

(note 21 19 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_kernel_range (flush_tlb_kernel_range)[0:757]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={5d,4u} r2={8d,6u} r3={5d,4u} r4={1d,2u} r12={3d,2u} r13={2d,12u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 295{257d,38u,0e} in 23{21 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 3 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 5 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 49 to worklist
  Adding insn 16 to worklist
  Adding insn 44 to worklist
  Adding insn 25 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 34 to worklist
  Adding insn 52 to worklist
Finished finding needed instructions:
processing block 6 lr out =  4 [r4] 13 [sp] 14 [lr]
processing block 5 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 30 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
processing block 4 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 22 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
processing block 3 lr out =  3 [r3] 4 [r4] 12 [ip] 13 [sp]
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
processing block 2 lr out =  3 [r3] 4 [r4] 12 [ip] 13 [sp]
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 47 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist


flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={5d,4u} r2={8d,6u} r3={5d,4u} r4={1d,2u} r12={3d,2u} r13={2d,12u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 295{257d,38u,0e} in 23{21 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 49 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 49 5 50 2 arch/arm/kernel/smp_tlb.c:130 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -24 [0xffffffffffffffe8])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 0 r0))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 1 r1))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 2 r2))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 3 r3))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 50 49 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 50 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 12 ip [orig:134 start ] [134])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ start ])
        (nil)))

(insn 3 2 47 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 3 r3 [orig:135 end ] [135])
        (reg:SI 1 r1 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ end ])
        (nil)))

(insn 47 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [136])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 8 47 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
        (mem/c/i:SI (reg/f:SI 2 r2 [136]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
        (nil)))

(jump_insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn 12 13 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 14 12 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [139])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __val ] [133])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [139])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [139])
        (nil)))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2200 [0x898])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 12 [ip] 13 [sp]


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(insn 23 21 24 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 24 23 22 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 22 24 18 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)
        (nil)))

(insn 18 22 19 4 arch/arm/kernel/smp_tlb.c:133 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 12 ip [orig:134 start ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:134 start ] [134])
        (nil)))

(insn 19 18 25 4 arch/arm/kernel/smp_tlb.c:134 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 3 r3 [orig:135 end ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:135 end ] [135])
        (nil)))

(call_insn 25 19 44 4 arch/arm/kernel/smp_tlb.c:135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 44 25 45 4 (set (pc)
        (label_ref 40)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 45 44 28)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 28 45 29 5 29 "" [2 uses])

(note 29 28 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 29 32 5 NOTE_INSN_DELETED)

(insn 32 31 33 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 0 r0)
        (reg/v:SI 12 ip [orig:134 start ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:134 start ] [134])
        (nil)))

(insn 33 32 30 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 1 r1)
        (reg/v:SI 3 r3 [orig:135 end ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:135 end ] [135])
        (nil)))

(insn 30 33 34 5 arch/arm/kernel/smp_tlb.c:137 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 34 30 40 5 arch/arm/kernel/smp_tlb.c:137 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [142])
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [142])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 40 34 43 6 31 "" [1 uses])

(note 43 40 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 51 43 52 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 52 51 53 6 arch/arm/kernel/smp_tlb.c:138 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 53 52 46)

(note 46 53 48 NOTE_INSN_DELETED)

(note 48 46 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_kernel_page (flush_tlb_kernel_page)[0:755]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={9d,9u} r3={5d,6u} r4={1d,2u} r12={1d} r13={2d,14u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 186{144d,42u,0e} in 30{29 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 3 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]

( 9 4 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 66 to worklist
  Adding insn 15 to worklist
  Adding insn 58 to worklist
  Adding insn 23 to worklist
  Adding insn 17 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 37 to worklist
  Adding insn 42 to worklist
  Adding insn 44 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 69 to worklist
Finished finding needed instructions:
processing block 10 lr out =  4 [r4] 13 [sp] 14 [lr]
processing block 9 lr out =  4 [r4] 13 [sp] 14 [lr]
processing block 8 lr out =  4 [r4] 13 [sp] 14 [lr]
processing block 7 lr out =  3 [r3] 4 [r4] 13 [sp] 14 [lr]
  Adding insn 41 to worklist
processing block 6 lr out =  2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
processing block 5 lr out =  2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
  Adding insn 34 to worklist
  Adding insn 29 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
processing block 4 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 20 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 3 lr out =  3 [r3] 4 [r4] 13 [sp] 14 [lr]
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
processing block 2 lr out =  3 [r3] 4 [r4] 13 [sp] 14 [lr]
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 64 to worklist
  Adding insn 2 to worklist


flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={9d,9u} r3={5d,6u} r4={1d,2u} r12={1d} r13={2d,14u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 186{144d,42u,0e} in 30{29 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 66 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 66 4 67 2 arch/arm/kernel/smp_tlb.c:107 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -24 [0xffffffffffffffe8])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 0 r0))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 1 r1))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 2 r2))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 3 r3))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 67 66 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 67 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 64 2 arch/arm/kernel/smp_tlb.c:107 (set (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ kaddr ])
        (nil)))

(insn 64 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 7 64 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (nil)))

(jump_insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn 11 12 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:135 __val ] [135])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 13 11 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [140])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:135 __val ] [135])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [140])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [140])
        (nil)))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 16 21 4 NOTE_INSN_DELETED)

(insn 21 19 22 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 22 21 20 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 20 22 17 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)
        (nil)))

(insn 17 20 23 4 arch/arm/kernel/smp_tlb.c:110 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 3 r3 [orig:136 kaddr ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
        (nil)))

(call_insn 23 17 58 4 arch/arm/kernel/smp_tlb.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 58 23 59 4 (set (pc)
        (label_ref 54)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 59 58 26)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 26 59 27 5 35 "" [2 uses])

(note 27 26 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 30 27 33 5 NOTE_INSN_DELETED)

(note 33 30 60 5 NOTE_INSN_DELETED)

(insn 60 33 61 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 61 60 63 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 63 61 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 2 r2 [143])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 29 63 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [143])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 32 29 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 34 32 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 38 37 39 7 37 "" [1 uses])

(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 40 39 41 7 NOTE_INSN_DELETED)

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 45 44 46 9 38 "" [1 uses])

(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 48 47 54 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 54 48 57 10 39 "" [1 uses])

(note 57 54 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 68 57 69 10 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 69 68 70 10 arch/arm/kernel/smp_tlb.c:114 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 70 69 62)

(note 62 70 65 NOTE_INSN_DELETED)

(note 65 62 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_all (flush_tlb_all)[0:752]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={4d,2u} r3={9d,8u} r12={1d} r13={1d,10u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 168{140d,28u,0e} in 27{26 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 3 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 7 8 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]

( 4 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(13){ }u-1(14){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 14 to worklist
  Adding insn 20 to worklist
  Adding insn 60 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 32 to worklist
  Adding insn 37 to worklist
  Adding insn 40 to worklist
  Adding insn 57 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
Finished finding needed instructions:
processing block 9 lr out =  13 [sp] 14 [lr]
processing block 8 lr out =  13 [sp] 14 [lr]
  Adding insn 39 to worklist
processing block 7 lr out =  13 [sp] 14 [lr]
  Adding insn 36 to worklist
processing block 6 lr out =  3 [r3] 13 [sp] 14 [lr]
  Adding insn 31 to worklist
processing block 5 lr out =  3 [r3] 13 [sp] 14 [lr]
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
processing block 4 lr out =  13 [sp] 14 [lr]
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
processing block 3 lr out =  13 [sp] 14 [lr]
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
processing block 2 lr out =  13 [sp] 14 [lr]
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist


flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={4d,2u} r3={9d,8u} r12={1d} r13={1d,10u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 168{140d,28u,0e} in 27{26 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 55 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 55 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 55 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 6 5 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
        (mem/c/i:SI (reg/f:SI 3 r3 [135]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
        (nil)))

(jump_insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn 10 11 12 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 __val ] [134])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 12 10 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 3 r3 [138])
        (zero_extract:SI (reg/v:SI 3 r3 [orig:134 __val ] [134])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [138])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [138])
        (nil)))

(jump_insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 15 18 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 59 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 59 19 60 4 NOTE_INSN_EPILOGUE_BEG)

(insn 60 59 20 4 arch/arm/kernel/smp_tlb.c:85 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j 20 60 21 4 arch/arm/kernel/smp_tlb.c:82 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 21 20 22)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 22 21 23 5 43 "" [2 uses])

(note 23 22 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 23 24 5 NOTE_INSN_DELETED)

(insn 24 27 25 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 25 24 26 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 26 25 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 28 26 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 29 28 30 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [142])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 2 r2 [142])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 33 32 34 7 44 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 35 34 36 7 NOTE_INSN_DELETED)

(insn 36 35 37 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 40 39 41 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [144])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [144])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 41 40 42 9 45 "" [1 uses])

(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 44 43 56 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 56 44 57 9 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 57 56 58 9 arch/arm/kernel/smp_tlb.c:85 (return) 260 {return} (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 58 57 53)

(note 53 58 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_flush_tlb_mm (ipi_flush_tlb_mm)[0:747]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


ipi_flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={11d,10u,1d} r3={8d,11u,5d} r4={2d,4u} r5={2d,3u} r6={1d,2u} r12={1d} r13={2d,11u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 209{152d,51u,6e} in 38{37 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 4 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 6 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 10 to worklist
  Adding insn 82 to worklist
  Adding insn 47 to worklist
  Adding insn 52 to worklist
  Adding insn 55 to worklist
  Adding insn 60 to worklist
  Adding insn 63 to worklist
  Adding insn 85 to worklist
  Adding insn 66 to worklist
Finished finding needed instructions:
processing block 8 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
processing block 7 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 62 to worklist
processing block 6 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 59 to worklist
processing block 5 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 54 to worklist
processing block 4 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 51 to worklist
processing block 3 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
processing block 2 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 44 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 27 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 24 to worklist
  Adding insn 19 to worklist
  Adding insn 22 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 79 to worklist
  Adding insn 9 to worklist
  Adding insn 77 to worklist
  Adding insn 7 to worklist


ipi_flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={11d,10u,1d} r3={8d,11u,5d} r4={2d,4u} r5={2d,3u} r6={1d,2u} r12={1d} r13={2d,11u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 209{152d,51u,6e} in 38{37 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 82 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 82 4 83 2 arch/arm/kernel/smp_tlb.c:45 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -16 [0xfffffffffffffff0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 83 82 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 83 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 3 25 2 NOTE_INSN_DELETED)

(note 25 12 43 2 NOTE_INSN_DELETED)

(note 43 25 7 2 NOTE_INSN_DELETED)

(insn 7 43 77 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 5 r5 [orig:133 D.13829 ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:146 arg ] [146])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 9 77 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [147])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 10 9 79 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 79 10 74 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 74 79 75 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 75 74 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 75 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [orig:149 <variable>.preempt_count ] [149])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [150])
        (plus:SI (reg:SI 2 r2 [orig:149 <variable>.preempt_count ] [149])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [150])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [150])
        (nil)))

(insn 17 16 22 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 22 17 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 19 22 24 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [151])
        (plus:SI (reg/v/f:SI 0 r0 [orig:146 arg ] [146])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 24 19 80 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 1 r1 [157])
        (plus:SI (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 80 24 81 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 81 80 27 2 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:156 <variable>.cpu ] [156])
            (reg:SI 1 r1 [157]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [157])
            (nil))))

(insn 27 81 30 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [158])
        (ashiftrt:SI (reg:SI 2 r2 [orig:156 <variable>.cpu ] [156])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 32 [0x20]))
        (nil)))

(insn 30 27 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:138 D.13810 ] [138])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [158])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [151])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [151])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:138 D.13810 ] [138])
            (nil))))

(insn 31 30 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 31 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 36 35 37 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 37 36 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [162])
        (nil)))

(insn 38 37 42 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 42 38 44 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:143 D.13797 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 42 45 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:143 D.13797 ] [143])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:143 D.13797 ] [143])
        (nil)))

(jump_insn 45 44 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 46 45 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 47 46 48 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 47 49 4 50 "" [1 uses])

(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 4 NOTE_INSN_DELETED)

(insn 51 50 52 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 52 51 53 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 3 r3 [166])
        (and:SI (reg:SI 5 r5 [orig:133 D.13829 ] [133])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 3 r3 [166])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [166])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 56 55 57 6 51 "" [1 uses])

(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 6 NOTE_INSN_DELETED)

(insn 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 60 59 61 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  7 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  6 [61.0%]  (fallthru)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 3 r3 [168])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [168])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [168])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [39.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 64 63 65 8 52 "" [1 uses])

(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 84 66 85 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 85 84 86 8 arch/arm/kernel/smp_tlb.c:49 (return) 260 {return} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 86 85 76)

(note 76 86 78 NOTE_INSN_DELETED)

(note 78 76 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function on_each_cpu_mask.clone.0 (on_each_cpu_mask.clone.0)[0:758]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


on_each_cpu_mask.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,3u} r1={6d,3u} r2={9d,7u} r3={16d,17u,3d} r4={3d,6u,2d} r5={2d,4u} r6={2d,4u} r7={2d,3u} r8={1d,2u} r12={3d} r13={2d,11u} r14={3d,3u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 462{391d,66u,5e} in 41{38 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 2 3 )->[4]->( 5 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]

( 5 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 36 to worklist
  Adding insn 31 to worklist
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 79 to worklist
  Adding insn 39 to worklist
  Adding insn 56 to worklist
  Adding insn 53 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 42 to worklist
  Adding insn 58 to worklist
  Adding insn 84 to worklist
Finished finding needed instructions:
processing block 5 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
processing block 4 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
  Adding insn 55 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 76 to worklist
processing block 3 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
  Adding insn 38 to worklist
processing block 2 lr out =  4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 28 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 32 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 72 to worklist
  Adding insn 2 to worklist
  Adding insn 71 to worklist
  Adding insn 75 to worklist


on_each_cpu_mask.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,3u} r1={6d,3u} r2={9d,7u} r3={16d,17u,3d} r4={3d,6u,2d} r5={2d,4u} r6={2d,4u} r7={2d,3u} r8={1d,2u} r12={3d} r13={2d,11u} r14={3d,3u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 462{391d,66u,5e} in 41{38 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 79 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 79 6 80 2 arch/arm/kernel/smp_tlb.c:16 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 7 r7)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -24 [0xffffffffffffffe8])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 8 r8))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(note 80 79 5 2 NOTE_INSN_PROLOGUE_END)

(note 5 80 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 26 2 NOTE_INSN_DELETED)

(note 26 9 34 2 NOTE_INSN_DELETED)

(note 34 26 75 2 NOTE_INSN_DELETED)

(insn 75 34 71 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 71 75 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 2 71 72 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 5 r5 [orig:144 func ] [144])
        (reg:SI 0 r0 [ func ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ func ])
        (nil)))

(insn 72 2 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
        (and:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 72 4 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 6 r6 [orig:145 info ] [145])
        (reg:SI 1 r1 [ info ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ info ])
        (nil)))

(insn 4 3 11 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 7 r7 [orig:146 mask ] [146])
        (reg:SI 2 r2 [ mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ mask ])
        (nil)))

(insn 11 4 12 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 3 r3 [149])
        (plus:SI (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/smp_tlb.c:19 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [149])
        (nil)))

(insn 14 13 18 2 arch/arm/kernel/smp_tlb.c:19 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180162)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 18 14 15 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 15 18 16 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 0 r0)
        (reg/f:SI 2 r2 [orig:146 mask ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:144 func ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 19 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 2 r2)
        (reg/v/f:SI 6 r6 [orig:145 info ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 17 23 2 arch/arm/kernel/smp_tlb.c:21 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_call_function_many") [flags 0x41] <function_decl 0x10b23100 smp_call_function_many>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 23 19 25 2 arch/arm/kernel/smp_tlb.c:22 (set (reg:SI 3 r3 [orig:133 D.13877 ] [133])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 23 32 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 1 r1 [154])
        (plus:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 32 25 77 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 77 32 78 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 78 77 28 2 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:153 D.13877 ] [153])
            (reg:SI 1 r1 [154]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [154])
            (nil))))

(insn 28 78 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [155])
        (ashiftrt:SI (reg:SI 3 r3 [orig:153 D.13877 ] [153])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 32 [0x20]))
        (nil)))

(insn 31 28 33 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:137 D.13860 ] [137])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [155])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 7 r7 [orig:146 mask ] [146])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 31 35 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [158])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.13860 ] [137])
            (reg:SI 2 r2 [157]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [157])
        (nil)))

(insn 35 33 36 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [158])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [158])
        (nil)))

(jump_insn 36 35 37 2 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/kernel/smp_tlb.c:23 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:145 info ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 40 3 arch/arm/kernel/smp_tlb.c:23 (parallel [
            (call (mem:SI (reg/v/f:SI 5 r5 [orig:144 func ] [144]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 40 39 41 4 57 "" [1 uses])

(note 41 40 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 44 41 54 4 NOTE_INSN_DELETED)

(note 54 44 42 4 NOTE_INSN_DELETED)

(insn 42 54 76 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 76 42 69 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 69 76 70 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 70 69 46 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 46 70 47 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 47 46 48 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 48 47 49 4 arch/arm/kernel/smp_tlb.c:25 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [162])
        (nil)))

(insn 49 48 53 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 53 49 55 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:142 D.13847 ] [142])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 53 56 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:142 D.13847 ] [142])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:142 D.13847 ] [142])
        (nil)))

(jump_insn 56 55 57 4 arch/arm/kernel/smp_tlb.c:25 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  EXIT [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 57 56 83 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 83 57 84 5 NOTE_INSN_EPILOGUE_BEG)

(insn 84 83 58 5 arch/arm/kernel/smp_tlb.c:26 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j 58 84 59 5 arch/arm/kernel/smp_tlb.c:25 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 59 58 73)

(note 73 59 74 NOTE_INSN_DELETED)

(note 74 73 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_mm (flush_tlb_mm)[0:753]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,5u} r2={13d,11u,1d} r3={13d,15u,5d} r4={2d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,15u} r14={2d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={11d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 351{278d,67u,6e} in 51{49 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 3 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 7 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 9 10 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]

( 4 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 103 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 109 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 29 to worklist
  Adding insn 66 to worklist
  Adding insn 71 to worklist
  Adding insn 74 to worklist
  Adding insn 79 to worklist
  Adding insn 82 to worklist
  Adding insn 106 to worklist
  Adding insn 85 to worklist
Finished finding needed instructions:
processing block 11 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
processing block 10 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 81 to worklist
processing block 9 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 78 to worklist
processing block 8 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 73 to worklist
processing block 7 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 70 to worklist
processing block 6 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
processing block 5 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 63 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 46 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 43 to worklist
  Adding insn 38 to worklist
  Adding insn 41 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 100 to worklist
  Adding insn 28 to worklist
  Adding insn 97 to worklist
  Adding insn 26 to worklist
processing block 4 lr out =  4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 21 to worklist
  Adding insn 19 to worklist
processing block 3 lr out =  1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
processing block 2 lr out =  1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 98 to worklist
  Adding insn 2 to worklist


flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,5u} r2={13d,11u,1d} r3={13d,15u,5d} r4={2d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,15u} r14={2d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={11d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 351{278d,67u,6e} in 51{49 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 103 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 103 4 104 2 arch/arm/kernel/smp_tlb.c:88 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -16 [0xfffffffffffffff0])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 5 r5))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 8 [0x8])) [0 S4 A32])
                    (reg:SI 6 r6))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 12 [0xc])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 104 103 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 104 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 98 2 arch/arm/kernel/smp_tlb.c:88 (set (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(insn 98 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 7 98 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
        (mem/c/i:SI (reg/f:SI 3 r3 [147]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
        (nil)))

(jump_insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn 11 12 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 3 r3 [orig:145 __val ] [145])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 13 11 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 3 r3 [150])
        (zero_extract:SI (reg/v:SI 3 r3 [orig:145 __val ] [145])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [150])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [150])
        (nil)))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 16 19 4 NOTE_INSN_DELETED)

(insn 19 18 21 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)
        (nil)))

(insn 21 19 108 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 1 r1)
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(note 108 21 109 4 NOTE_INSN_EPILOGUE_BEG)

(insn 109 108 22 4 arch/arm/kernel/smp_tlb.c:93 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j 22 109 23 4 arch/arm/kernel/smp_tlb.c:90 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 23 22 24)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 24 23 25 5 61 "" [2 uses])

(note 25 24 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 25 44 5 NOTE_INSN_DELETED)

(note 44 31 62 5 NOTE_INSN_DELETED)

(note 62 44 26 5 NOTE_INSN_DELETED)

(insn 26 62 97 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 5 r5 [orig:133 D.13780 ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 97 26 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 3 r3 [153])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 28 97 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [153])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [153])
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 29 28 100 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 100 29 94 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 94 100 95 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn 95 94 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 95 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [orig:155 <variable>.preempt_count ] [155])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 34 33 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [156])
        (plus:SI (reg:SI 2 r2 [orig:155 <variable>.preempt_count ] [155])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [156])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [156])
        (nil)))

(insn 36 35 41 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 41 36 38 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 38 41 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 1 r1 [157])
        (plus:SI (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 43 38 101 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0 [163])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 101 43 102 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 102 101 46 5 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:162 <variable>.cpu ] [162])
            (reg:SI 0 r0 [163]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 0 r0 [163])
            (nil))))

(insn 46 102 49 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [164])
        (ashiftrt:SI (reg:SI 2 r2 [orig:162 <variable>.cpu ] [162])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 32 [0x20]))
        (nil)))

(insn 49 46 50 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:138 D.13761 ] [138])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [164])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [157])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [157])
        (expr_list:REG_UNUSED (reg:SI 2 r2 [orig:138 D.13761 ] [138])
            (nil))))

(insn 50 49 54 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 54 50 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [orig:167 <variable>.preempt_count ] [167])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [168])
        (plus:SI (reg:SI 2 r2 [orig:167 <variable>.preempt_count ] [167])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 56 55 57 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [168])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [168])
        (nil)))

(insn 57 56 61 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 61 57 63 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:143 D.13748 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 63 61 64 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:143 D.13748 ] [143])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:143 D.13748 ] [143])
        (nil)))

(jump_insn 64 63 65 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 66 65 67 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 67 66 68 7 62 "" [1 uses])

(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 69 68 70 7 NOTE_INSN_DELETED)

(insn 70 69 71 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 71 70 72 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 3 r3 [172])
        (and:SI (reg:SI 5 r5 [orig:133 D.13780 ] [133])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 74 73 75 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 3 r3 [172])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [172])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 75 74 76 9 63 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 77 76 78 9 NOTE_INSN_DELETED)

(insn 78 77 79 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 79 78 80 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  9 [50.0%]  (fallthru)
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 3 r3 [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 82 81 83 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [174])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 3 r3 [174])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 83 82 84 11 64 "" [1 uses])

(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 105 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(note 105 85 106 11 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 106 105 107 11 arch/arm/kernel/smp_tlb.c:93 (return) 260 {return} (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 107 106 96)

(note 96 107 99 NOTE_INSN_DELETED)

(note 99 96 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_page (flush_tlb_page)[0:754]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 19 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)


flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={5d,6u} r2={13d,12u} r3={7d,9u,3d} r4={1d,2u} r12={7d,8u} r13={2d,16u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 232{162d,67u,3e} in 48{47 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]

( 3 )->[4]->( 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 3 2 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]

( 5 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	 24 [cc]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]

( 9 4 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 96 to worklist
  Adding insn 16 to worklist
  Adding insn 81 to worklist
  Adding insn 27 to worklist
  Adding insn 18 to worklist
  Adding insn 19 to worklist
  Adding insn 57 to worklist
  Adding insn 54 to worklist
  Adding insn 40 to worklist
  Adding insn 59 to worklist
  Adding insn 64 to worklist
  Adding insn 68 to worklist
  Adding insn 71 to worklist
  Adding insn 99 to worklist
Finished finding needed instructions:
processing block 10 lr out =  4 [r4] 13 [sp] 14 [lr]
processing block 9 lr out =  4 [r4] 13 [sp] 14 [lr]
processing block 8 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 84 to worklist
  Adding insn 83 to worklist
processing block 7 lr out =  4 [r4] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 63 to worklist
processing block 6 lr out =  1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
processing block 5 lr out =  1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 51 to worklist
  Adding insn 56 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 88 to worklist
  Adding insn 42 to worklist
  Adding insn 87 to worklist
  Adding insn 93 to worklist
  Adding insn 39 to worklist
  Adding insn 33 to worklist
  Adding insn 90 to worklist
  Adding insn 38 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 36 to worklist
processing block 4 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
processing block 3 lr out =  0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
processing block 2 lr out =  0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 91 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist


flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,7u} r1={5d,6u} r2={13d,12u} r3={7d,9u,3d} r4={1d,2u} r12={7d,8u} r13={2d,16u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 232{162d,67u,3e} in 48{47 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 96 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 96 5 97 2 arch/arm/kernel/smp_tlb.c:96 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -24 [0xffffffffffffffe8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 3 r3))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 97 96 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 97 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vma ])
        (nil)))

(insn 3 2 91 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v:SI 12 ip [orig:140 uaddr ] [140])
        (reg:SI 1 r1 [ uaddr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ uaddr ])
        (nil)))

(insn 91 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [141])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 8 91 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
        (mem/c/i:SI (reg/f:SI 2 r2 [141]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
        (nil)))

(jump_insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn 12 13 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:138 __val ] [138])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 14 12 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [144])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:138 __val ] [138])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [144])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [144])
        (nil)))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(note 23 21 22 4 NOTE_INSN_DELETED)

(insn 22 23 25 4 arch/arm/kernel/smp_tlb.c:101 (set (reg/f:SI 2 r2 [orig:148 <variable>.vm_mm ] [148])
        (mem/s/f/j:SI (reg/f:SI 0 r0 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 25 22 24 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 24 25 26 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)
        (nil)))

(insn 26 24 19 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.vm_mm ] [148])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 19 26 18 4 arch/arm/kernel/smp_tlb.c:100 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 12 ip [orig:140 uaddr ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:140 uaddr ] [140])
        (nil)))

(insn 18 19 27 4 arch/arm/kernel/smp_tlb.c:99 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:139 vma ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
        (nil)))

(call_insn 27 18 81 4 arch/arm/kernel/smp_tlb.c:101 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 81 27 82 4 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 82 81 30)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 30 82 31 5 69 "" [2 uses])

(note 31 30 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 34 31 37 5 NOTE_INSN_DELETED)

(note 37 34 44 5 NOTE_INSN_DELETED)

(note 44 37 49 5 NOTE_INSN_DELETED)

(note 49 44 55 5 NOTE_INSN_DELETED)

(note 55 49 36 5 NOTE_INSN_DELETED)

(insn 36 55 85 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 2 r2 [orig:152 <variable>.vm_mm ] [152])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 85 36 86 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 12 ip [150])
        (and:SI (reg/v:SI 12 ip [orig:140 uaddr ] [140])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 86 85 38 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 12 ip [150])
        (and:SI (reg:SI 12 ip [150])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 86 90 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 2 r2 [153])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 2 r2 [orig:152 <variable>.vm_mm ] [152])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 90 38 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 1 r1 [149])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 33 90 39 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 1 r1 [149])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 39 33 40 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 12 ip [orig:137 uaddr ] [137])
        (ior:SI (reg:SI 12 ip [150])
            (reg:SI 2 r2 [153]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [153])
        (nil)))

(insn 40 39 93 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 93 40 87 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 87 93 42 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 0 r0)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 42 87 88 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [orig:156 <variable>.vm_mm ] [156])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
        (nil)))

(insn 88 42 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 2 r2 [157])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 88 46 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [155])
        (plus:SI (reg/f:SI 0 r0 [orig:156 <variable>.vm_mm ] [156])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 46 43 48 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [157])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [157])
        (nil)))

(insn 48 46 94 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 94 48 95 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 95 94 56 5 include/asm-generic/bitops/non-atomic.h:105 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:161 <variable>.cpu ] [161])
            (reg:SI 2 r2 [162]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2 [162])
            (nil))))

(insn 56 95 51 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 51 56 54 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [163])
        (ashiftrt:SI (reg:SI 3 r3 [orig:161 <variable>.cpu ] [161])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 32 [0x20]))
        (nil)))

(insn 54 51 57 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:135 D.13646 ] [135])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [163])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [155])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [155])
        (expr_list:REG_UNUSED (reg:SI 3 r3 [orig:135 D.13646 ] [135])
            (nil))))

(jump_insn 57 54 58 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 12 ip [orig:137 uaddr ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 60 59 61 7 71 "" [1 uses])

(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 62 61 63 7 NOTE_INSN_DELETED)

(insn 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (nil)))

(jump_insn 64 63 65 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 66 65 83 8 NOTE_INSN_DELETED)

(insn 83 66 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 12 ip [167])
        (and:SI (reg/v:SI 12 ip [orig:137 uaddr ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 68 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 12 ip [167])
        (and:SI (reg:SI 12 ip [167])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 68 84 69 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 12 ip [167])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 12 ip [167])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 69 68 70 9 72 "" [1 uses])

(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 77 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 77 71 80 10 73 "" [1 uses])

(note 80 77 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 98 80 99 10 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 99 98 100 10 arch/arm/kernel/smp_tlb.c:104 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 100 99 89)

(note 89 100 92 NOTE_INSN_DELETED)

(note 92 89 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_tlb_range (flush_tlb_range)[0:756]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={5d,4u} r2={10d,9u} r3={5d,4u,1d} r4={1d,2u} r12={3d,2u} r13={2d,13u} r14={4d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 306{260d,45u,1e} in 27{25 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 3 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 5 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 54 to worklist
  Adding insn 17 to worklist
  Adding insn 49 to worklist
  Adding insn 29 to worklist
  Adding insn 19 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 39 to worklist
  Adding insn 57 to worklist
Finished finding needed instructions:
processing block 6 lr out =  4 [r4] 13 [sp] 14 [lr]
processing block 5 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 34 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
processing block 4 lr out =  4 [r4] 13 [sp] 14 [lr]
  Adding insn 28 to worklist
  Adding insn 26 to worklist
  Adding insn 27 to worklist
  Adding insn 24 to worklist
processing block 3 lr out =  0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
processing block 2 lr out =  0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 52 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist


flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={5d,4u} r2={10d,9u} r3={5d,4u,1d} r4={1d,2u} r12={3d,2u} r13={2d,13u} r14={4d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 306{260d,45u,1e} in 27{25 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 54 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 54 6 55 2 arch/arm/kernel/smp_tlb.c:118 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -24 [0xffffffffffffffe8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 3 r3))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 55 54 5 2 NOTE_INSN_PROLOGUE_END)

(note 5 55 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 5 3 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vma ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 14 lr [orig:135 start ] [135])
        (reg:SI 1 r1 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ start ])
        (nil)))

(insn 4 3 52 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 12 ip [orig:136 end ] [136])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ end ])
        (nil)))

(insn 52 4 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 9 52 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (nil)))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 12 13 3 NOTE_INSN_DELETED)

(insn 13 14 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 15 13 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [140])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __val ] [133])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [140])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [140])
        (nil)))

(jump_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2200 [0x898])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 23 18 25 4 NOTE_INSN_DELETED)

(note 25 23 24 4 NOTE_INSN_DELETED)

(insn 24 25 27 4 arch/arm/kernel/smp_tlb.c:124 (set (reg/f:SI 2 r2 [orig:144 <variable>.vm_mm ] [144])
        (mem/s/f/j:SI (reg/f:SI 0 r0 [orig:134 vma ] [134]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:134 vma ] [134]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 27 24 26 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 26 27 28 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)
        (nil)))

(insn 28 26 20 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.vm_mm ] [144])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 20 28 21 4 arch/arm/kernel/smp_tlb.c:122 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 14 lr [orig:135 start ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:135 start ] [135])
        (nil)))

(insn 21 20 19 4 arch/arm/kernel/smp_tlb.c:123 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 12 ip [orig:136 end ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:136 end ] [136])
        (nil)))

(insn 19 21 29 4 arch/arm/kernel/smp_tlb.c:121 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:134 vma ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
        (nil)))

(call_insn 29 19 49 4 arch/arm/kernel/smp_tlb.c:124 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 49 29 50 4 (set (pc)
        (label_ref 45)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 50 49 32)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 32 50 33 5 77 "" [2 uses])

(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 35 33 36 5 NOTE_INSN_DELETED)

(insn 36 35 37 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 0 r0)
        (reg/v:SI 14 lr [orig:135 start ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:135 start ] [135])
        (nil)))

(insn 37 36 38 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 1 r1)
        (reg/v:SI 12 ip [orig:136 end ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:136 end ] [136])
        (nil)))

(insn 38 37 34 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 2 r2)
        (reg/v/f:SI 3 r3 [orig:134 vma ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
        (nil)))

(insn 34 38 39 5 arch/arm/kernel/smp_tlb.c:126 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 39 34 45 5 arch/arm/kernel/smp_tlb.c:126 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [145]) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [145])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 45 39 48 6 79 "" [1 uses])

(note 48 45 56 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 56 48 57 6 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 57 56 58 6 arch/arm/kernel/smp_tlb.c:127 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 58 57 51)

(note 51 58 53 NOTE_INSN_DELETED)

(note 53 51 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
