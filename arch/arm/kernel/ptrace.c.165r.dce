
;; Function regs_query_register_name (regs_query_register_name)[0:1537]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


regs_query_register_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,2u} r25={1d,5u} r26={1d,4u} r162={2d,3u,2d} r163={1d,2u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r171={1d,2u} 
;;    total ref usage 57{20d,35u,2e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,2] 25[11,1] 26[12,1] 162[13,2] 163[15,1] 164[16,1] 166[17,1] 168[18,1] 171[19,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d11(25){ }d12(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d11(bb 0 insn -1) }u3(26){ d12(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162 166 171
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162 166 171
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  gen 	(3)
14, 17, 19
;; rd  kill	(4)
13, 14, 17, 19
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 17, 19
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 31
;;      reg 0 { d1(bb 0 insn -1) }

( 4 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ d5(bb 0 insn -1) }u6(13){ d7(bb 0 insn -1) }u7(25){ d11(bb 0 insn -1) }u8(26){ d12(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 166 171
;; lr  def 	 24 [cc] 162 164 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; live  gen 	 24 [cc] 162 164 168
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(4)
10, 13, 16, 18
;; rd  kill	(6)
9, 10, 13, 14, 16, 18
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 162 { d14(bb 2 insn 35) d13(bb 3 insn 42) }
;;      reg 171 { d19(bb 2 insn 47) }
;;   eq_note reg 162 { }
;;   UD chains for insn luid 1 uid 41
;;      reg 168 { d18(bb 3 insn 40) }
;;   UD chains for insn luid 2 uid 42
;;      reg 162 { d14(bb 2 insn 35) d13(bb 3 insn 42) }
;;   UD chains for insn luid 3 uid 43
;;      reg 164 { d16(bb 3 insn 41) }
;;      reg 166 { d17(bb 2 insn 31) }
;;   UD chains for insn luid 4 uid 44
;;      reg 24 { d10(bb 3 insn 43) }

( 3 2 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d5(bb 0 insn -1) }u18(13){ d7(bb 0 insn -1) }u19(25){ d11(bb 0 insn -1) }u20(26){ d12(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 171
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(2)
9, 15
;; rd  kill	(3)
9, 10, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 162 { d14(bb 2 insn 35) d13(bb 3 insn 42) }
;;      reg 171 { d19(bb 2 insn 47) }
;;   eq_note reg 162 { }
;;   UD chains for insn luid 1 uid 50
;;      reg 163 { d15(bb 4 insn 48) }
;;   UD chains for insn luid 2 uid 51
;;      reg 24 { d9(bb 4 insn 50) }

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ d5(bb 0 insn -1) }u27(13){ d7(bb 0 insn -1) }u28(25){ d11(bb 0 insn -1) }u29(26){ d12(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }
;;   reg 26 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 163 { d15(bb 4 insn 48) }
;;   UD chains for insn luid 1 uid 64
;;      reg 0 { d0(bb 5 insn 58) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(0){ d0(bb 5 insn 58) }u33(11){ d5(bb 0 insn -1) }u34(13){ d7(bb 0 insn -1) }u35(14){ d8(bb 0 insn -1) }u36(25){ d11(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 58) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d11(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 89 to worklist
  Adding insn 44 to worklist
  Adding insn 51 to worklist
  Adding insn 64 to worklist
Finished finding needed instructions:
  Adding insn 58 to worklist
Processing use of (reg 163 [ D.26794 ]) in insn 58:
  Adding insn 48 to worklist
Processing use of (reg 162 [ ivtmp.457 ]) in insn 48:
  Adding insn 35 to worklist
  Adding insn 42 to worklist
Processing use of (reg 171) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 162 [ ivtmp.457 ]) in insn 42:
Processing use of (reg 0 r0) in insn 64:
Processing use of (reg 24 cc) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 163 [ D.26794 ]) in insn 50:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 164 [ D.26791 ]) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 166 [ offset ]) in insn 43:
  Adding insn 31 to worklist
Processing use of (reg 0 r0) in insn 31:
Processing use of (reg 168) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 162 [ ivtmp.457 ]) in insn 40:
Processing use of (reg 171) in insn 40:


regs_query_register_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,2u} r25={1d,5u} r26={1d,4u} r162={2d,3u,2d} r163={1d,2u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r171={1d,2u} 
;;    total ref usage 57{20d,35u,2e} in 14{14 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,2] 25[11,1] 26[12,1] 162[13,2] 163[15,1] 164[16,1] 166[17,1] 168[18,1] 171[19,1] 
(note 30 0 33 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162 166 171
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162 166 171
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  gen 	(3)
14, 17, 19
;; rd  kill	(4)
13, 14, 17, 19

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 30 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 31 33 32 2 arch/arm/kernel/ptrace.c:111 (set (reg/v:SI 166 [ offset ])
        (reg:SI 0 r0 [ offset ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ offset ])
        (nil)))

(note 32 31 35 2 NOTE_INSN_FUNCTION_BEG)

(insn 35 32 47 2 arch/arm/kernel/ptrace.c:111 (set (reg:SI 162 [ ivtmp.457 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 47 35 89 2 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 171)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 89 47 90 2 arch/arm/kernel/ptrace.c:113 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; rd  out 	(13)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 17, 19


;; Succ edge  4 [100.0%] 

(barrier 90 89 49)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ }u6(13){ }u7(25){ }u8(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 166 171
;; lr  def 	 24 [cc] 162 164 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; live  gen 	 24 [cc] 162 164 168
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(4)
10, 13, 16, 18
;; rd  kill	(6)
9, 10, 13, 14, 16, 18

;; Pred edge  4 [95.5%] 
(code_label 49 90 38 3 4 "" [1 uses])

(note 38 49 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 41 3 arch/arm/kernel/ptrace.c:114 (set (reg:SI 168)
        (plus:SI (reg/f:SI 171)
            (reg:SI 162 [ ivtmp.457 ]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 162 [ ivtmp.457 ])
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
        (nil)))

(insn 41 40 42 3 arch/arm/kernel/ptrace.c:114 (set (reg:SI 164 [ D.26791 ])
        (mem/s/j:SI (plus:SI (reg:SI 168)
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 42 41 43 3 arch/arm/kernel/ptrace.c:114 (set (reg:SI 162 [ ivtmp.457 ])
        (plus:SI (reg:SI 162 [ ivtmp.457 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 43 42 44 3 arch/arm/kernel/ptrace.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ D.26791 ])
            (reg/v:SI 166 [ offset ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 164 [ D.26791 ])
        (nil)))

(jump_insn 44 43 45 3 arch/arm/kernel/ptrace.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19


;; Succ edge  5 [4.5%]  (loop_exit)
;; Succ edge  4 [95.5%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 171
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 171
;; live  gen 	 24 [cc] 163
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(2)
9, 15
;; rd  kill	(3)
9, 10, 15

;; Pred edge  3 [95.5%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 45 44 46 4 2 "" [1 uses])

(note 46 45 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 48 46 50 4 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 163 [ D.26794 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 171)
                (reg:SI 162 [ ivtmp.457 ])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (reg:SI 162 [ ivtmp.457 ])
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 <variable>.name+0 S4 A32])
        (nil)))

(insn 50 48 51 4 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ D.26794 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 4 arch/arm/kernel/ptrace.c:113 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166 171
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  3 [95.5%] 
;; Succ edge  5 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  3 [4.5%]  (loop_exit)
;; Pred edge  4 [4.5%]  (fallthru,loop_exit)
(code_label 52 51 53 5 3 "" [1 uses])

(note 53 52 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 58 53 64 5 arch/arm/kernel/ptrace.c:117 (set (reg/i:SI 0 r0)
        (reg/f:SI 163 [ D.26794 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ D.26794 ])
        (nil)))

(insn 64 58 0 5 arch/arm/kernel/ptrace.c:117 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function regs_within_kernel_stack (regs_within_kernel_stack)[0:1538]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


regs_within_kernel_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1d} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 44{21d,22u,1e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 138[16,1] 139[17,1] 140[18,1] 141[19,1] 142[20,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(11)
0, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  kill	(12)
0, 1, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d12(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 135 { d13(bb 2 insn 3) }
;;      reg 138 { d16(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 137 { d15(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 140 { d18(bb 2 insn 9) }
;;   eq_note reg 137 { }
;;   UD chains for insn luid 6 uid 11
;;      reg 139 { d17(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 24 { d9(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 141 { d19(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 14
;;      reg 136 { d14(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 19
;;      reg 142 { d20(bb 2 insn 14) }
;;   UD chains for insn luid 11 uid 25
;;      reg 0 { d0(bb 2 insn 19) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(0){ d0(bb 2 insn 19) }u19(11){ d5(bb 0 insn -1) }u20(13){ d7(bb 0 insn -1) }u21(14){ d8(bb 0 insn -1) }u22(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 19) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 25 to worklist
Finished finding needed instructions:
  Adding insn 19 to worklist
Processing use of (reg 142) in insn 19:
  Adding insn 14 to worklist
Processing use of (reg 136) in insn 14:
  Adding insn 13 to worklist
Processing use of (subreg (reg 141) 0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 139) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 140) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 135 [ addr ]) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 138 [ <variable>.uregs+52 ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134 [ regs ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 0 r0) in insn 25:


regs_within_kernel_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1d} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 44{21d,22u,1e} in 12{12 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 134[12,1] 135[13,1] 136[14,1] 137[15,1] 138[16,1] 139[17,1] 140[18,1] 141[19,1] 142[20,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(11)
0, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20
;; rd  kill	(12)
0, 1, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:128 (set (reg/v/f:SI 134 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:128 (set (reg/v:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 138 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ regs ])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 137)
        (xor:SI (reg/v:SI 135 [ addr ])
            (reg:SI 138 [ <variable>.uregs+52 ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 138 [ <variable>.uregs+52 ])
        (expr_list:REG_DEAD (reg/v:SI 135 [ addr ])
            (nil))))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 140)
        (and:SI (reg:SI 137)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (and:SI (reg:SI 137)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:131 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 141)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:131 (set (reg:QI 136)
        (subreg:QI (reg:SI 141) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 14 13 19 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 142)
        (zero_extend:SI (reg:QI 136))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 136)
        (nil)))

(insn 19 14 25 2 arch/arm/kernel/ptrace.c:131 (set (reg/i:SI 0 r0)
        (reg:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 25 19 0 2 arch/arm/kernel/ptrace.c:131 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function regs_get_kernel_stack_nth (regs_get_kernel_stack_nth)[0:1539]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


regs_get_kernel_stack_nth

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={1d,1u} r134={1d,3u} r136={2d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u,1d} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 60{22d,37u,1e} in 15{15 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,1] 134[13,1] 136[14,2] 138[16,1] 139[17,1] 140[18,1] 141[19,1] 142[20,1] 143[21,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d10(25){ }d11(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d10(bb 0 insn -1) }u3(26){ d11(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 138 139 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 138 139 140 141 142 143
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(9)
9, 12, 13, 16, 17, 18, 19, 20, 21
;; rd  kill	(9)
9, 12, 13, 16, 17, 18, 19, 20, 21
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d16(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 9
;;      reg 139 { d17(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 { d13(bb 2 insn 7) }
;;      reg 140 { d18(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 133 { d12(bb 2 insn 10) }
;;      reg 134 { d13(bb 2 insn 7) }
;;   UD chains for insn luid 6 uid 12
;;      reg 141 { d19(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 143 { d21(bb 2 insn 12) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 8 uid 14
;;      reg 142 { d20(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 24 { d9(bb 2 insn 14) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ d5(bb 0 insn -1) }u18(13){ d7(bb 0 insn -1) }u19(25){ d10(bb 0 insn -1) }u20(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21
;; rd  gen 	(1)
15
;; rd  kill	(2)
14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ d5(bb 0 insn -1) }u22(13){ d7(bb 0 insn -1) }u23(25){ d10(bb 0 insn -1) }u24(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; live  gen 	 136
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21
;; rd  gen 	(1)
14
;; rd  kill	(2)
14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 134 { d13(bb 2 insn 7) }
;;      reg 139 { d17(bb 2 insn 3) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d5(bb 0 insn -1) }u28(13){ d7(bb 0 insn -1) }u29(25){ d10(bb 0 insn -1) }u30(26){ d11(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }
;;   reg 26 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 136 { d15(bb 3 insn 17) d14(bb 4 insn 22) }
;;   UD chains for insn luid 1 uid 35
;;      reg 0 { d0(bb 5 insn 29) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(0){ d0(bb 5 insn 29) }u34(11){ d5(bb 0 insn -1) }u35(13){ d7(bb 0 insn -1) }u36(14){ d8(bb 0 insn -1) }u37(25){ d10(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(21)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 29) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d10(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 39 to worklist
  Adding insn 35 to worklist
Finished finding needed instructions:
  Adding insn 29 to worklist
Processing use of (reg 136 [ D.26815 ]) in insn 29:
  Adding insn 17 to worklist
  Adding insn 22 to worklist
Processing use of (reg 134 [ D.27412 ]) in insn 22:
  Adding insn 7 to worklist
Processing use of (reg 139 [ n ]) in insn 22:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 138 [ regs ]) in insn 7:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 0 r0) in insn 35:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 142) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 143) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 133 [ addr.512 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 134 [ D.27412 ]) in insn 11:
Processing use of (reg 134 [ D.27412 ]) in insn 10:
Processing use of (reg 140) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 139 [ n ]) in insn 9:


regs_get_kernel_stack_nth

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={1d,1u} r134={1d,3u} r136={2d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u,1d} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 60{22d,37u,1e} in 15{15 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,1] 25[10,1] 26[11,1] 133[12,1] 134[13,1] 136[14,2] 138[16,1] 139[17,1] 140[18,1] 141[19,1] 142[20,1] 143[21,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 138 139 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 138 139 140 141 142 143
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11
;; rd  gen 	(9)
9, 12, 13, 16, 17, 18, 19, 20, 21
;; rd  kill	(9)
9, 12, 13, 16, 17, 18, 19, 20, 21

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:143 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:143 (set (reg/v:SI 139 [ n ])
        (reg:SI 1 r1 [ n ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ n ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:244 (set (reg:SI 134 [ D.27412 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(insn 9 7 10 2 arch/arm/kernel/ptrace.c:145 (set (reg:SI 140)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:145 (set (reg/v/f:SI 133 [ addr.512 ])
        (plus:SI (reg:SI 134 [ D.27412 ])
            (reg:SI 140))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:146 (set (reg:SI 141)
        (xor:SI (reg/v/f:SI 133 [ addr.512 ])
            (reg:SI 134 [ D.27412 ]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg/v/f:SI 133 [ addr.512 ])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:146 (set (reg:SI 143)
        (and:SI (reg:SI 141)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:146 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (and:SI (reg:SI 141)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(jump_insn 15 14 16 2 arch/arm/kernel/ptrace.c:146 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21


;; Succ edge  4 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21
;; rd  gen 	(1)
15
;; rd  kill	(2)
14, 15

;; Pred edge  2 [39.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 39 3 arch/arm/kernel/ptrace.c:149 (set (reg:SI 136 [ D.26815 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 39 17 40 3 (set (pc)
        (label_ref 23)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21


;; Succ edge  5 [100.0%] 

(barrier 40 39 20)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139
;; live  gen 	 136
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21
;; rd  gen 	(1)
14
;; rd  kill	(2)
14, 15

;; Pred edge  2 [61.0%] 
(code_label 20 40 21 4 12 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/ptrace.c:147 (set (reg:SI 136 [ D.26815 ])
        (mem:SI (plus:SI (mult:SI (reg/v:SI 139 [ n ])
                    (const_int 4 [0x4]))
                (reg:SI 134 [ D.27412 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ n ])
        (expr_list:REG_DEAD (reg:SI 134 [ D.27412 ])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 23 22 24 5 13 "" [1 uses])

(note 24 23 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 24 35 5 arch/arm/kernel/ptrace.c:150 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ D.26815 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.26815 ])
        (nil)))

(insn 35 29 0 5 arch/arm/kernel/ptrace.c:150 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ptrace_disable (ptrace_disable)[0:1542]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ptrace_disable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d4(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(11){ d4(bb 0 insn -1) }u5(13){ d6(bb 0 insn -1) }u6(14){ d7(bb 0 insn -1) }u7(25){ d8(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
Finished finding needed instructions:


ptrace_disable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ptrace_write_user (ptrace_write_user)[0:1547]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)


ptrace_write_user

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,11u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,8u} r25={1d,14u,1d} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={4d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r139={1d,1u} r140={1d,4u,1d} r141={1d,2u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r158={1d,1u} r159={1d,1u,1d} r160={1d,1u} r161={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} 
;;    total ref usage 279{172d,103u,4e} in 57{56 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,9] 25[36,1] 26[37,1] 27[38,1] 28[39,1] 29[40,1] 30[41,1] 31[42,1] 32[43,1] 33[44,1] 34[45,1] 35[46,1] 36[47,1] 37[48,1] 38[49,1] 39[50,1] 40[51,1] 41[52,1] 42[53,1] 43[54,1] 44[55,1] 45[56,1] 46[57,1] 47[58,1] 48[59,1] 49[60,1] 50[61,1] 51[62,1] 52[63,1] 53[64,1] 54[65,1] 55[66,1] 56[67,1] 57[68,1] 58[69,1] 59[70,1] 60[71,1] 61[72,1] 62[73,1] 63[74,1] 64[75,1] 65[76,1] 66[77,1] 67[78,1] 68[79,1] 69[80,1] 70[81,1] 71[82,1] 72[83,1] 73[84,1] 74[85,1] 75[86,1] 76[87,1] 77[88,1] 78[89,1] 79[90,1] 80[91,1] 81[92,1] 82[93,1] 83[94,1] 84[95,1] 85[96,1] 86[97,1] 87[98,1] 88[99,1] 89[100,1] 90[101,1] 91[102,1] 92[103,1] 93[104,1] 94[105,1] 95[106,1] 96[107,1] 97[108,1] 98[109,1] 99[110,1] 100[111,1] 101[112,1] 102[113,1] 103[114,1] 104[115,1] 105[116,1] 106[117,1] 107[118,1] 108[119,1] 109[120,1] 110[121,1] 111[122,1] 112[123,1] 113[124,1] 114[125,1] 115[126,1] 116[127,1] 117[128,1] 118[129,1] 119[130,1] 120[131,1] 121[132,1] 122[133,1] 123[134,1] 124[135,1] 125[136,1] 126[137,1] 127[138,1] 133[139,1] 134[140,4] 135[144,1] 136[145,1] 137[146,1] 139[147,1] 140[148,1] 141[149,1] 142[150,1] 144[151,1] 146[152,1] 147[153,1] 148[154,1] 149[155,1] 150[156,1] 151[157,1] 152[158,1] 153[159,1] 158[160,1] 159[161,1] 160[162,1] 161[163,1] 163[164,1] 164[165,1] 165[166,1] 166[167,1] 168[168,1] 170[169,1] 171[170,1] 172[171,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d36(25){ }d37(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 36, 37
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 36, 37
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 36, 37

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d36(bb 0 insn -1) }u3(26){ d37(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 144 146 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 144 146 147 148 149 150
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 36, 37
;; rd  gen 	(11)
33, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  kill	(19)
27, 28, 29, 30, 31, 32, 33, 34, 35, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; rd  out 	(21)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d148(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 9
;;      reg 142 { d150(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 24 { d35(bb 2 insn 9) }
;;   UD chains for insn luid 7 uid 13
;;      reg 140 { d148(bb 2 insn 3) }
;;      reg 146 { d152(bb 2 insn 12) }
;;   eq_note reg 140 { }
;;   UD chains for insn luid 8 uid 14
;;      reg 24 { d34(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 16
;;      reg 144 { d151(bb 2 insn 10) }
;;      reg 147 { d153(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 17
;;      reg 148 { d154(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 18
;;      reg 149 { d155(bb 2 insn 17) }
;;   UD chains for insn luid 12 uid 19
;;      reg 150 { d156(bb 2 insn 18) }
;;   UD chains for insn luid 13 uid 20
;;      reg 24 { d33(bb 2 insn 19) }

( 2 )->[3]->( 11 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ d12(bb 0 insn -1) }u21(13){ d15(bb 0 insn -1) }u22(25){ d36(bb 0 insn -1) }u23(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(1)
143
;; rd  kill	(4)
140, 141, 142, 143
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ d12(bb 0 insn -1) }u25(13){ d15(bb 0 insn -1) }u26(25){ d36(bb 0 insn -1) }u27(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(1)
32
;; rd  kill	(9)
27, 28, 29, 30, 31, 32, 33, 34, 35
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; rd  out 	(21)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 27
;;      reg 140 { d148(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 28
;;      reg 24 { d32(bb 4 insn 27) }

( 4 )->[5]->( 11 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ d12(bb 0 insn -1) }u31(13){ d15(bb 0 insn -1) }u32(25){ d36(bb 0 insn -1) }u33(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 134
;; live  kill	
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(1)
140
;; rd  kill	(4)
140, 141, 142, 143
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 150 { d156(bb 2 insn 18) }

( 4 )->[6]->( 7 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ d12(bb 0 insn -1) }u36(13){ d15(bb 0 insn -1) }u37(25){ d36(bb 0 insn -1) }u38(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 137 151 152 153 158 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 137 151 152 153 158 159 160 161
;; live  kill	 14 [lr]
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(12)
1, 30, 139, 145, 146, 157, 158, 159, 160, 161, 162, 163
;; rd  kill	(25)
0, 1, 2, 3, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 139, 145, 146, 157, 158, 159, 160, 161, 162, 163
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141
;; rd  out 	(30)
1, 6, 9, 11, 12, 14, 15, 30, 36, 37, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 140 { d148(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 36
;;      reg 139 { d147(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 37
;;      reg 151 { d157(bb 6 insn 36) }
;;   UD chains for insn luid 3 uid 38
;;      reg 152 { d158(bb 6 insn 37) }
;;   eq_note reg 151 { }
;;   UD chains for insn luid 4 uid 39
;;      reg 25 { d36(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 42
;;      reg 153 { d159(bb 6 insn 39) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 6 uid 43
;;      reg 133 { d139(bb 6 insn 38) }
;;   UD chains for insn luid 8 uid 45
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d2(bb 6 insn 42) }
;;      reg 1 { d4(bb 6 insn 43) }
;;      reg 2 { d7(bb 6 insn 44) }
;;   UD chains for insn luid 9 uid 48
;;      reg 137 { d146(bb 6 insn 35) }
;;   UD chains for insn luid 10 uid 49
;;      reg 25 { d36(bb 0 insn -1) }
;;      reg 158 { d160(bb 6 insn 48) }
;;   UD chains for insn luid 11 uid 50
;;      reg 159 { d161(bb 6 insn 49) }
;;   eq_note reg 159 { }
;;   UD chains for insn luid 12 uid 51
;;      reg 141 { d149(bb 2 insn 4) }
;;      reg 160 { d162(bb 6 insn 50) }
;;   UD chains for insn luid 13 uid 52
;;      reg 25 { d36(bb 0 insn -1) }
;;   UD chains for insn luid 14 uid 53
;;      reg 136 { d145(bb 6 insn 52) }
;;   UD chains for insn luid 15 uid 54
;;      reg 161 { d163(bb 6 insn 53) }
;;   UD chains for insn luid 16 uid 55
;;      reg 24 { d30(bb 6 insn 54) }

( 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u63(11){ d12(bb 0 insn -1) }u64(13){ d15(bb 0 insn -1) }u65(25){ d36(bb 0 insn -1) }u66(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(30)
1, 6, 9, 11, 12, 14, 15, 30, 36, 37, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(2)
29, 144
;; rd  kill	(10)
27, 28, 29, 30, 31, 32, 33, 34, 35, 144
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; rd  out 	(31)
1, 6, 9, 11, 12, 14, 15, 29, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 136 { d145(bb 6 insn 52) }
;;   UD chains for insn luid 1 uid 58
;;      reg 135 { d144(bb 7 insn 57) }
;;   UD chains for insn luid 2 uid 59
;;      reg 24 { d29(bb 7 insn 58) }

( 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(11){ d12(bb 0 insn -1) }u71(13){ d15(bb 0 insn -1) }u72(25){ d36(bb 0 insn -1) }u73(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 163 164 165 166 168 170 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; live  gen 	 24 [cc] 163 164 165 166 168 170 171 172
;; live  kill	
;; rd  in  	(31)
1, 6, 9, 11, 12, 14, 15, 29, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(9)
27, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  kill	(17)
27, 28, 29, 30, 31, 32, 33, 34, 35, 164, 165, 166, 167, 168, 169, 170, 171
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; rd  out 	(39)
1, 6, 9, 11, 12, 14, 15, 27, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 61
;;      reg 135 { d144(bb 7 insn 57) }
;;   UD chains for insn luid 1 uid 62
;;      reg 24 { d28(bb 8 insn 61) }
;;   UD chains for insn luid 3 uid 65
;;      reg 164 { d165(bb 8 insn 64) }
;;   UD chains for insn luid 4 uid 66
;;      reg 166 { d167(bb 8 insn 65) }
;;   UD chains for insn luid 5 uid 68
;;      reg 165 { d166(bb 8 insn 66) }
;;   UD chains for insn luid 6 uid 70
;;      reg 163 { d164(bb 8 insn 62) }
;;      reg 168 { d168(bb 8 insn 68) }
;;   UD chains for insn luid 7 uid 71
;;      reg 170 { d169(bb 8 insn 70) }
;;   UD chains for insn luid 8 uid 72
;;      reg 171 { d170(bb 8 insn 71) }
;;   UD chains for insn luid 9 uid 73
;;      reg 172 { d171(bb 8 insn 72) }
;;   UD chains for insn luid 10 uid 74
;;      reg 24 { d27(bb 8 insn 73) }

( 7 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u85(11){ d12(bb 0 insn -1) }u86(13){ d15(bb 0 insn -1) }u87(25){ d36(bb 0 insn -1) }u88(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; live  gen 	 134
;; live  kill	
;; rd  in  	(40)
1, 6, 9, 11, 12, 14, 15, 27, 29, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(1)
142
;; rd  kill	(4)
140, 141, 142, 143
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(41)
1, 6, 9, 11, 12, 14, 15, 27, 29, 36, 37, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 133 { d139(bb 6 insn 38) }
;;      reg 137 { d146(bb 6 insn 35) }
;;      reg 141 { d149(bb 2 insn 4) }

( 6 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ d12(bb 0 insn -1) }u93(13){ d15(bb 0 insn -1) }u94(25){ d36(bb 0 insn -1) }u95(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(40)
1, 6, 9, 11, 12, 14, 15, 27, 30, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(1)
141
;; rd  kill	(4)
140, 141, 142, 143
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(41)
1, 6, 9, 11, 12, 14, 15, 27, 30, 36, 37, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }

( 10 5 3 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u96(11){ d12(bb 0 insn -1) }u97(13){ d15(bb 0 insn -1) }u98(25){ d36(bb 0 insn -1) }u99(26){ d37(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(49)
1, 3, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 32, 33, 36, 37, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(48)
0, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 32, 33, 36, 37, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }
;;   reg 26 { d37(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 134 { d143(bb 3 insn 22) d142(bb 9 insn 78) d141(bb 10 insn 83) d140(bb 5 insn 30) }
;;   UD chains for insn luid 1 uid 96
;;      reg 0 { d0(bb 11 insn 90) }

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u102(0){ d0(bb 11 insn 90) }u103(11){ d12(bb 0 insn -1) }u104(13){ d15(bb 0 insn -1) }u105(14){ d17(bb 0 insn -1) }u106(25){ d36(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(48)
0, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 32, 33, 36, 37, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(48)
0, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 32, 33, 36, 37, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 11 insn 90) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { d17(bb 0 insn -1) }
;;   reg 25 { d36(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 100 to worklist
  Adding insn 28 to worklist
  Adding insn 102 to worklist
  Adding insn 55 to worklist
  Adding insn 51 to worklist
  Adding insn 45 to worklist
  Adding insn 59 to worklist
  Adding insn 74 to worklist
  Adding insn 104 to worklist
  Adding insn 77 to worklist
  Adding insn 96 to worklist
Finished finding needed instructions:
  Adding insn 90 to worklist
Processing use of (reg 134 [ ret ]) in insn 90:
  Adding insn 22 to worklist
  Adding insn 78 to worklist
  Adding insn 83 to worklist
  Adding insn 30 to worklist
Processing use of (reg 150) in insn 30:
  Adding insn 18 to worklist
Processing use of (reg 149) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 148) 0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 144) in insn 16:
  Adding insn 10 to worklist
Processing use of (reg 147) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 140 [ off ]) in insn 13:
  Adding insn 3 to worklist
Processing use of (reg 146) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 142) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 140 [ off ]) in insn 8:
Processing use of (reg 0 r0) in insn 96:
Processing use of (reg 133 [ regs ]) in insn 77:
  Adding insn 38 to worklist
Processing use of (reg 137 [ D.26920 ]) in insn 77:
  Adding insn 35 to worklist
Processing use of (reg 141 [ val ]) in insn 77:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 140 [ off ]) in insn 35:
Processing use of (reg 152) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 151 [ <variable>.stack ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 139 [ tsk ]) in insn 36:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 172) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 171) in insn 72:
  Adding insn 71 to worklist
Processing use of (subreg (reg 170) 0) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 163) in insn 70:
  Adding insn 62 to worklist
Processing use of (reg 168) in insn 70:
  Adding insn 68 to worklist
Processing use of (reg 165) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 166 [ elf_hwcap ]) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 164) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 24 cc) in insn 62:
  Adding insn 61 to worklist
Processing use of (reg 135 [ mode ]) in insn 61:
  Adding insn 57 to worklist
Processing use of (reg 136 [ D.27452 ]) in insn 57:
  Adding insn 52 to worklist
Processing use of (reg 25 sfp) in insn 52:
Processing use of (reg 24 cc) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 135 [ mode ]) in insn 58:
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 0 r0) in insn 45:
  Adding insn 42 to worklist
Processing use of (reg 1 r1) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 2 r2) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 133 [ regs ]) in insn 43:
Processing use of (reg 153) in insn 42:
  Adding insn 39 to worklist
Processing use of (reg 25 sfp) in insn 39:
Processing use of (reg 141 [ val ]) in insn 51:
Processing use of (reg 160) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 159) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 25 sfp) in insn 49:
Processing use of (reg 158) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 137 [ D.26920 ]) in insn 48:
Processing use of (reg 24 cc) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 161) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 136 [ D.27452 ]) in insn 53:
Processing use of (reg 24 cc) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 140 [ off ]) in insn 27:
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 150) in insn 19:


ptrace_write_user

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,11u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,8u} r25={1d,14u,1d} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={4d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r139={1d,1u} r140={1d,4u,1d} r141={1d,2u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,2u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r158={1d,1u} r159={1d,1u,1d} r160={1d,1u} r161={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} 
;;    total ref usage 279{172d,103u,4e} in 57{56 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,9] 25[36,1] 26[37,1] 27[38,1] 28[39,1] 29[40,1] 30[41,1] 31[42,1] 32[43,1] 33[44,1] 34[45,1] 35[46,1] 36[47,1] 37[48,1] 38[49,1] 39[50,1] 40[51,1] 41[52,1] 42[53,1] 43[54,1] 44[55,1] 45[56,1] 46[57,1] 47[58,1] 48[59,1] 49[60,1] 50[61,1] 51[62,1] 52[63,1] 53[64,1] 54[65,1] 55[66,1] 56[67,1] 57[68,1] 58[69,1] 59[70,1] 60[71,1] 61[72,1] 62[73,1] 63[74,1] 64[75,1] 65[76,1] 66[77,1] 67[78,1] 68[79,1] 69[80,1] 70[81,1] 71[82,1] 72[83,1] 73[84,1] 74[85,1] 75[86,1] 76[87,1] 77[88,1] 78[89,1] 79[90,1] 80[91,1] 81[92,1] 82[93,1] 83[94,1] 84[95,1] 85[96,1] 86[97,1] 87[98,1] 88[99,1] 89[100,1] 90[101,1] 91[102,1] 92[103,1] 93[104,1] 94[105,1] 95[106,1] 96[107,1] 97[108,1] 98[109,1] 99[110,1] 100[111,1] 101[112,1] 102[113,1] 103[114,1] 104[115,1] 105[116,1] 106[117,1] 107[118,1] 108[119,1] 109[120,1] 110[121,1] 111[122,1] 112[123,1] 113[124,1] 114[125,1] 115[126,1] 116[127,1] 117[128,1] 118[129,1] 119[130,1] 120[131,1] 121[132,1] 122[133,1] 123[134,1] 124[135,1] 125[136,1] 126[137,1] 127[138,1] 133[139,1] 134[140,4] 135[144,1] 136[145,1] 137[146,1] 139[147,1] 140[148,1] 141[149,1] 142[150,1] 144[151,1] 146[152,1] 147[153,1] 148[154,1] 149[155,1] 150[156,1] 151[157,1] 152[158,1] 153[159,1] 158[160,1] 159[161,1] 160[162,1] 161[163,1] 163[164,1] 164[165,1] 165[166,1] 166[167,1] 168[168,1] 170[169,1] 171[170,1] 172[171,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 144 146 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 144 146 147 148 149 150
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 36, 37
;; rd  gen 	(11)
33, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  kill	(19)
27, 28, 29, 30, 31, 32, 33, 34, 35, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/ptrace.c:280 (set (reg/v/f:SI 139 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:280 (set (reg/v:SI 140 [ off ])
        (reg:SI 1 r1 [ off ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ off ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:280 (set (reg/v:SI 141 [ val ])
        (reg:SI 2 r2 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ val ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 142)
        (and:SI (reg/v:SI 140 [ off ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 10 9 12 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 144)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 12 10 13 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 146)
        (const_int 295 [0x127])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (reg:SI 146))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 140 [ off ])
                (const_int 295 [0x127]))
            (nil))))

(insn 14 13 16 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 147)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 16 14 17 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 148)
        (ior:SI (reg:SI 144)
            (reg:SI 147))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg:SI 144)
            (nil))))

(insn 17 16 18 2 arch/arm/kernel/ptrace.c:281 (set (reg:QI 149)
        (subreg:QI (reg:SI 148) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 18 17 19 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 150)
        (zero_extend:SI (reg:QI 149))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 149)
        (nil)))

(insn 19 18 20 2 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 2 arch/arm/kernel/ptrace.c:281 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; rd  out 	(21)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(1)
143
;; rd  kill	(4)
140, 141, 142, 143

;; Pred edge  2 [39.0%]  (fallthru)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 100 3 arch/arm/kernel/ptrace.c:282 (set (reg/v:SI 134 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))

(jump_insn 100 22 101 3 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 3 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156


;; Succ edge  11 [100.0%] 

(barrier 101 100 25)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 33, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(1)
32
;; rd  kill	(9)
27, 28, 29, 30, 31, 32, 33, 34, 35

;; Pred edge  2 [61.0%] 
(code_label 25 101 26 4 18 "" [1 uses])

(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 4 arch/arm/kernel/ptrace.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 4 arch/arm/kernel/ptrace.c:284 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141 150
;; rd  out 	(21)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 134
;; live  kill	
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(1)
140
;; rd  kill	(4)
140, 141, 142, 143

;; Pred edge  4 [39.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 102 5 arch/arm/kernel/ptrace.c:285 (set (reg/v:SI 134 [ ret ])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 102 30 103 5 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 5 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156


;; Succ edge  11 [100.0%] 

(barrier 103 102 33)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 137 151 152 153 158 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 137 151 152 153 158 159 160 161
;; live  kill	 14 [lr]
;; rd  in  	(21)
3, 6, 9, 11, 12, 14, 15, 17, 32, 36, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156
;; rd  gen 	(12)
1, 30, 139, 145, 146, 157, 158, 159, 160, 161, 162, 163
;; rd  kill	(25)
0, 1, 2, 3, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 139, 145, 146, 157, 158, 159, 160, 161, 162, 163

;; Pred edge  4 [61.0%] 
(code_label 33 103 34 6 20 "" [1 uses])

(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 6 arch/arm/kernel/ptrace.c:287 (set (reg:SI 137 [ D.26920 ])
        (lshiftrt:SI (reg/v:SI 140 [ off ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ off ])
        (nil)))

(insn 36 35 37 6 arch/arm/kernel/ptrace.c:172 (set (reg/f:SI 151 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ tsk ])
        (nil)))

(insn 37 36 38 6 arch/arm/kernel/ptrace.c:172 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 151 [ <variable>.stack ])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 151 [ <variable>.stack ])
        (nil)))

(insn 38 37 39 6 arch/arm/kernel/ptrace.c:172 (set (reg/v/f:SI 133 [ regs ])
        (plus:SI (reg/f:SI 152)
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 151 [ <variable>.stack ])
                (const_int 8112 [0x1fb0]))
            (nil))))

(insn 39 38 42 6 arch/arm/kernel/ptrace.c:175 (set (reg/f:SI 153)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 42 39 43 6 arch/arm/kernel/ptrace.c:175 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))

(insn 43 42 44 6 arch/arm/kernel/ptrace.c:175 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 6 arch/arm/kernel/ptrace.c:175 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(call_insn 45 44 48 6 arch/arm/kernel/ptrace.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 45 49 6 arch/arm/kernel/ptrace.c:176 (set (reg:SI 158)
        (ashift:SI (reg:SI 137 [ D.26920 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 49 48 50 6 arch/arm/kernel/ptrace.c:176 (set (reg:SI 159)
        (plus:SI (reg/f:SI 25 sfp)
            (reg:SI 158))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 158)
        (nil)))

(insn 50 49 51 6 arch/arm/kernel/ptrace.c:176 (set (reg/f:SI 160)
        (plus:SI (reg:SI 159)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 159)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))

(insn 51 50 52 6 arch/arm/kernel/ptrace.c:176 (set (mem/s/j:SI (reg/f:SI 160) [0 newregs.uregs S4 A32])
        (reg/v:SI 141 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 160)
        (nil)))

(insn 52 51 53 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 136 [ D.27452 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 161)
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 54 53 55 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 55 54 56 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141
;; rd  out 	(30)
1, 6, 9, 11, 12, 14, 15, 30, 36, 37, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(30)
1, 6, 9, 11, 12, 14, 15, 30, 36, 37, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(2)
29, 144
;; rd  kill	(10)
27, 28, 29, 30, 31, 32, 33, 34, 35, 144

;; Pred edge  6 [50.0%]  (fallthru)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.27452 ])
        (nil)))

(insn 58 57 59 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 59 58 60 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; rd  out 	(31)
1, 6, 9, 11, 12, 14, 15, 29, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163


;; Succ edge  9 [28.0%] 
;; Succ edge  8 [72.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 163 164 165 166 168 170 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; live  gen 	 24 [cc] 163 164 165 166 168 170 171 172
;; live  kill	
;; rd  in  	(31)
1, 6, 9, 11, 12, 14, 15, 29, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163
;; rd  gen 	(9)
27, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  kill	(17)
27, 28, 29, 30, 31, 32, 33, 34, 35, 164, 165, 166, 167, 168, 169, 170, 171

;; Pred edge  7 [72.0%]  (fallthru)
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ mode ])
        (nil)))

(insn 62 61 64 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 64 62 65 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 164)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 166 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 164) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 164)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 66 65 68 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 165)
        (lshiftrt:SI (reg:SI 166 [ elf_hwcap ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 166 [ elf_hwcap ])
        (nil)))

(insn 68 66 70 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 168)
        (and:SI (reg:SI 165)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 70 68 71 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 170)
        (and:SI (reg:SI 163)
            (reg:SI 168))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(insn 71 70 72 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 171)
        (subreg:QI (reg:SI 170) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 72 71 73 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 172)
        (zero_extend:SI (reg:QI 171))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 171)
        (nil)))

(insn 73 72 74 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(jump_insn 74 73 75 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; rd  out 	(39)
1, 6, 9, 11, 12, 14, 15, 27, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; live  gen 	 134
;; live  kill	
;; rd  in  	(40)
1, 6, 9, 11, 12, 14, 15, 27, 29, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(1)
142
;; rd  kill	(4)
140, 141, 142, 143

;; Pred edge  7 [28.0%] 
;; Pred edge  8 [50.0%]  (fallthru)
(code_label 75 74 76 9 22 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 9 arch/arm/kernel/ptrace.c:179 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 137 [ D.26920 ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 133 [ regs ])) [0 <variable>.uregs S4 A32])
        (reg/v:SI 141 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ val ])
        (expr_list:REG_DEAD (reg:SI 137 [ D.26920 ])
            (expr_list:REG_DEAD (reg/v/f:SI 133 [ regs ])
                (nil)))))

(insn 78 77 104 9 arch/arm/kernel/ptrace.c:180 (set (reg/v:SI 134 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 104 78 105 9 (set (pc)
        (label_ref 84)) -1 (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(41)
1, 6, 9, 11, 12, 14, 15, 27, 29, 36, 37, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171


;; Succ edge  11 [100.0%] 

(barrier 105 104 81)

;; Start of basic block ( 6 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(40)
1, 6, 9, 11, 12, 14, 15, 27, 30, 36, 37, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(1)
141
;; rd  kill	(4)
140, 141, 142, 143

;; Pred edge  6 [50.0%] 
;; Pred edge  8 [50.0%] 
(code_label 81 105 82 10 21 "" [2 uses])

(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 10 arch/arm/kernel/ptrace.c:173 (set (reg/v:SI 134 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(41)
1, 6, 9, 11, 12, 14, 15, 27, 30, 36, 37, 139, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 5 3 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(49)
1, 3, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 32, 33, 36, 37, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  3 [100.0%] 
;; Pred edge  9 [100.0%] 
(code_label 84 83 85 11 19 "" [3 uses])

(note 85 84 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 90 85 96 11 arch/arm/kernel/ptrace.c:288 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ ret ])
        (nil)))

(insn 96 90 0 11 arch/arm/kernel/ptrace.c:288 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(48)
0, 6, 9, 11, 12, 14, 15, 17, 27, 29, 30, 32, 33, 36, 37, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function task_user_regset_view (task_user_regset_view)[0:1563]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


task_user_regset_view

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 25{13d,12u,0e} in 4{4 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 135[11,1] 136[12,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(3)
0, 11, 12
;; rd  kill	(4)
0, 1, 11, 12
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 136 { d12(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 12
;;      reg 135 { d11(bb 2 insn 7) }
;;   UD chains for insn luid 3 uid 18
;;      reg 0 { d0(bb 2 insn 12) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u7(0){ d0(bb 2 insn 12) }u8(11){ d5(bb 0 insn -1) }u9(13){ d7(bb 0 insn -1) }u10(14){ d8(bb 0 insn -1) }u11(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 12) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
Finished finding needed instructions:
  Adding insn 12 to worklist
Processing use of (reg 135) in insn 12:
  Adding insn 7 to worklist
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 18:


task_user_regset_view

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 25{13d,12u,0e} in 4{4 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 135[11,1] 136[12,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(3)
0, 11, 12
;; rd  kill	(4)
0, 1, 11, 12

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/ptrace.c:786 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 12 2 arch/arm/kernel/ptrace.c:786 (set (reg/f:SI 135)
        (plus:SI (reg/f:SI 136)
            (const_int 152 [0x98]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 152 [0x98])))
            (nil))))

(insn 12 7 18 2 arch/arm/kernel/ptrace.c:786 (set (reg/i:SI 0 r0)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 152 [0x98])))
            (nil))))

(insn 18 12 0 2 arch/arm/kernel/ptrace.c:786 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ptrace_break_init (ptrace_break_init)[0:1545] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ptrace_break_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={8d,5u} r1={4d} r2={4d} r3={4d} r11={1d,2u} r12={4d} r13={1d,5u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={1d,2u} r26={1d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,3u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 391{369d,22u,0e} in 12{9 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364
0[0,8] 1[8,4] 2[12,4] 3[16,4] 11[20,1] 12[21,4] 13[25,1] 14[26,4] 15[30,3] 16[33,3] 17[36,3] 18[39,3] 19[42,3] 20[45,3] 21[48,3] 22[51,3] 23[54,3] 24[57,3] 25[60,1] 26[61,1] 27[62,3] 28[65,3] 29[68,3] 30[71,3] 31[74,3] 32[77,3] 33[80,3] 34[83,3] 35[86,3] 36[89,3] 37[92,3] 38[95,3] 39[98,3] 40[101,3] 41[104,3] 42[107,3] 43[110,3] 44[113,3] 45[116,3] 46[119,3] 47[122,3] 48[125,3] 49[128,3] 50[131,3] 51[134,3] 52[137,3] 53[140,3] 54[143,3] 55[146,3] 56[149,3] 57[152,3] 58[155,3] 59[158,3] 60[161,3] 61[164,3] 62[167,3] 63[170,3] 64[173,3] 65[176,3] 66[179,3] 67[182,3] 68[185,3] 69[188,3] 70[191,3] 71[194,3] 72[197,3] 73[200,3] 74[203,3] 75[206,3] 76[209,3] 77[212,3] 78[215,3] 79[218,3] 80[221,3] 81[224,3] 82[227,3] 83[230,3] 84[233,3] 85[236,3] 86[239,3] 87[242,3] 88[245,3] 89[248,3] 90[251,3] 91[254,3] 92[257,3] 93[260,3] 94[263,3] 95[266,3] 96[269,3] 97[272,3] 98[275,3] 99[278,3] 100[281,3] 101[284,3] 102[287,3] 103[290,3] 104[293,3] 105[296,3] 106[299,3] 107[302,3] 108[305,3] 109[308,3] 110[311,3] 111[314,3] 112[317,3] 113[320,3] 114[323,3] 115[326,3] 116[329,3] 117[332,3] 118[335,3] 119[338,3] 120[341,3] 121[344,3] 122[347,3] 123[350,3] 124[353,3] 125[356,3] 126[359,3] 127[362,3] 133[365,1] 134[366,1] 136[367,1] 138[368,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d11(1){ }d15(2){ }d19(3){ }d20(11){ }d24(12){ }d25(13){ }d29(14){ }d60(25){ }d61(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 11, 15, 19, 20, 24, 25, 29, 60, 61
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 60, 61
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 11, 15, 19, 20, 24, 25, 29, 60, 61

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d20(bb 0 insn -1) }u1(13){ d25(bb 0 insn -1) }u2(25){ d60(bb 0 insn -1) }u3(26){ d61(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 136 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
7, 11, 15, 19, 20, 24, 25, 29, 60, 61
;; rd  gen 	(5)
0, 365, 366, 367, 368
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 365, 366, 367, 368
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 11, 15, 19, 20, 24, 25, 60, 61, 365, 366, 367, 368
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d25(bb 0 insn -1) }
;;   reg 25 { d60(bb 0 insn -1) }
;;   reg 26 { d61(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 134 { d366(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 13 { d25(bb 0 insn -1) }
;;      reg 0 { d6(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 9
;;      reg 134 { d366(bb 2 insn 5) }
;;   UD chains for insn luid 4 uid 10
;;      reg 136 { d367(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 13 { d25(bb 0 insn -1) }
;;      reg 0 { d4(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 13
;;      reg 134 { d366(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 14
;;      reg 138 { d368(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 15
;;      reg 13 { d25(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 20
;;      reg 133 { d365(bb 2 insn 16) }
;;   UD chains for insn luid 11 uid 26
;;      reg 0 { d0(bb 2 insn 20) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u17(0){ d0(bb 2 insn 20) }u18(11){ d20(bb 0 insn -1) }u19(13){ d25(bb 0 insn -1) }u20(14){ }u21(25){ d60(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 11, 15, 19, 20, 24, 25, 60, 61, 365, 366, 367, 368
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 11, 15, 19, 20, 24, 25, 60, 61, 365, 366, 367, 368
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 20) }
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d25(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d60(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
  Adding insn 20 to worklist
Processing use of (reg 133 [ <result> ]) in insn 20:
  Adding insn 16 to worklist
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 0 r0) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 134) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 136) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 134) in insn 9:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 138) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134) in insn 13:
Processing use of (reg 0 r0) in insn 26:


ptrace_break_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={8d,5u} r1={4d} r2={4d} r3={4d} r11={1d,2u} r12={4d} r13={1d,5u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={1d,2u} r26={1d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,3u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 391{369d,22u,0e} in 12{9 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364
0[0,8] 1[8,4] 2[12,4] 3[16,4] 11[20,1] 12[21,4] 13[25,1] 14[26,4] 15[30,3] 16[33,3] 17[36,3] 18[39,3] 19[42,3] 20[45,3] 21[48,3] 22[51,3] 23[54,3] 24[57,3] 25[60,1] 26[61,1] 27[62,3] 28[65,3] 29[68,3] 30[71,3] 31[74,3] 32[77,3] 33[80,3] 34[83,3] 35[86,3] 36[89,3] 37[92,3] 38[95,3] 39[98,3] 40[101,3] 41[104,3] 42[107,3] 43[110,3] 44[113,3] 45[116,3] 46[119,3] 47[122,3] 48[125,3] 49[128,3] 50[131,3] 51[134,3] 52[137,3] 53[140,3] 54[143,3] 55[146,3] 56[149,3] 57[152,3] 58[155,3] 59[158,3] 60[161,3] 61[164,3] 62[167,3] 63[170,3] 64[173,3] 65[176,3] 66[179,3] 67[182,3] 68[185,3] 69[188,3] 70[191,3] 71[194,3] 72[197,3] 73[200,3] 74[203,3] 75[206,3] 76[209,3] 77[212,3] 78[215,3] 79[218,3] 80[221,3] 81[224,3] 82[227,3] 83[230,3] 84[233,3] 85[236,3] 86[239,3] 87[242,3] 88[245,3] 89[248,3] 90[251,3] 91[254,3] 92[257,3] 93[260,3] 94[263,3] 95[266,3] 96[269,3] 97[272,3] 98[275,3] 99[278,3] 100[281,3] 101[284,3] 102[287,3] 103[290,3] 104[293,3] 105[296,3] 106[299,3] 107[302,3] 108[305,3] 109[308,3] 110[311,3] 111[314,3] 112[317,3] 113[320,3] 114[323,3] 115[326,3] 116[329,3] 117[332,3] 118[335,3] 119[338,3] 120[341,3] 121[344,3] 122[347,3] 123[350,3] 124[353,3] 125[356,3] 126[359,3] 127[362,3] 133[365,1] 134[366,1] 136[367,1] 138[368,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 136 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
7, 11, 15, 19, 20, 24, 25, 29, 60, 61
;; rd  gen 	(5)
0, 365, 366, 367, 368
;; rd  kill	(16)
0, 1, 2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 365, 366, 367, 368

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/ptrace.c:241 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:241 (set (reg:SI 0 r0)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 7 6 9 2 arch/arm/kernel/ptrace.c:241 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 7 10 2 arch/arm/kernel/ptrace.c:242 (set (reg/f:SI 136)
        (plus:SI (reg/f:SI 134)
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:242 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 28 [0x1c])))
            (nil))))

(call_insn 11 10 13 2 arch/arm/kernel/ptrace.c:242 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 11 14 2 arch/arm/kernel/ptrace.c:243 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 134)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 56 [0x38])))
            (nil))))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:243 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 56 [0x38])))
            (nil))))

(call_insn 15 14 16 2 arch/arm/kernel/ptrace.c:243 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 16 15 20 2 arch/arm/kernel/ptrace.c:245 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 20 16 26 2 arch/arm/kernel/ptrace.c:245 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 26 20 0 2 arch/arm/kernel/ptrace.c:245 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 11, 15, 19, 20, 24, 25, 60, 61, 365, 366, 367, 368


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function syscall_trace (syscall_trace)[0:1565]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


syscall_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={4d,2u} r2={4d,2u} r3={3d} r11={1d,7u} r12={3d} r13={1d,11u,2d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,7u} r26={1d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r141={1d,5u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,3u} r149={2d,2u} r150={1d,1u} r151={1d,1u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r162={1d,1u} r163={1d,1u} r166={1d,2u} r167={1d,2u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} 
;;    total ref usage 351{274d,75u,2e} in 40{38 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252
0[0,6] 1[6,4] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,6] 25[49,1] 26[50,1] 27[51,2] 28[53,2] 29[55,2] 30[57,2] 31[59,2] 32[61,2] 33[63,2] 34[65,2] 35[67,2] 36[69,2] 37[71,2] 38[73,2] 39[75,2] 40[77,2] 41[79,2] 42[81,2] 43[83,2] 44[85,2] 45[87,2] 46[89,2] 47[91,2] 48[93,2] 49[95,2] 50[97,2] 51[99,2] 52[101,2] 53[103,2] 54[105,2] 55[107,2] 56[109,2] 57[111,2] 58[113,2] 59[115,2] 60[117,2] 61[119,2] 62[121,2] 63[123,2] 64[125,2] 65[127,2] 66[129,2] 67[131,2] 68[133,2] 69[135,2] 70[137,2] 71[139,2] 72[141,2] 73[143,2] 74[145,2] 75[147,2] 76[149,2] 77[151,2] 78[153,2] 79[155,2] 80[157,2] 81[159,2] 82[161,2] 83[163,2] 84[165,2] 85[167,2] 86[169,2] 87[171,2] 88[173,2] 89[175,2] 90[177,2] 91[179,2] 92[181,2] 93[183,2] 94[185,2] 95[187,2] 96[189,2] 97[191,2] 98[193,2] 99[195,2] 100[197,2] 101[199,2] 102[201,2] 103[203,2] 104[205,2] 105[207,2] 106[209,2] 107[211,2] 108[213,2] 109[215,2] 110[217,2] 111[219,2] 112[221,2] 113[223,2] 114[225,2] 115[227,2] 116[229,2] 117[231,2] 118[233,2] 119[235,2] 120[237,2] 121[239,2] 122[241,2] 123[243,2] 124[245,2] 125[247,2] 126[249,2] 127[251,2] 141[253,1] 142[254,1] 144[255,1] 145[256,1] 147[257,1] 148[258,1] 149[259,2] 150[261,1] 151[262,1] 154[263,1] 155[264,1] 156[265,1] 162[266,1] 163[267,1] 166[268,1] 167[269,1] 175[270,1] 176[271,1] 177[272,1] 178[273,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d9(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d24(14){ }d49(25){ }d50(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 9, 13, 16, 17, 20, 21, 24, 49, 50
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 49, 50
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 9, 13, 16, 17, 20, 21, 24, 49, 50

( 0 )->[2]->( 7 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d17(bb 0 insn -1) }u1(13){ d21(bb 0 insn -1) }u2(25){ d49(bb 0 insn -1) }u3(26){ d50(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 142 147 148 149 150 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 142 147 148 149 150 151
;; live  kill	
;; rd  in  	(10)
5, 9, 13, 16, 17, 20, 21, 24, 49, 50
;; rd  gen 	(8)
48, 253, 254, 257, 258, 260, 261, 262
;; rd  kill	(14)
43, 44, 45, 46, 47, 48, 253, 254, 257, 258, 259, 260, 261, 262
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; rd  out 	(18)
5, 9, 13, 16, 17, 20, 21, 24, 48, 49, 50, 253, 254, 257, 258, 260, 261, 262
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 13 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 150 { d261(bb 2 insn 9) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 141 { d253(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 142 { d254(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 151 { d262(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 14
;;      reg 24 { d48(bb 2 insn 13) }

( 2 )->[3]->( 7 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d17(bb 0 insn -1) }u15(13){ d21(bb 0 insn -1) }u16(25){ d49(bb 0 insn -1) }u17(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 154 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; live  gen 	 24 [cc] 154 155 156
;; live  kill	
;; rd  in  	(18)
5, 9, 13, 16, 17, 20, 21, 24, 48, 49, 50, 253, 254, 257, 258, 260, 261, 262
;; rd  gen 	(4)
47, 263, 264, 265
;; rd  kill	(9)
43, 44, 45, 46, 47, 48, 263, 264, 265
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149 154
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149 154
;; rd  out 	(21)
5, 9, 13, 16, 17, 20, 21, 24, 47, 49, 50, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 141 { d253(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 20
;;      reg 154 { d263(bb 3 insn 19) }
;;   UD chains for insn luid 2 uid 21
;;      reg 156 { d265(bb 3 insn 20) }
;;   UD chains for insn luid 3 uid 22
;;      reg 155 { d264(bb 3 insn 21) }
;;   UD chains for insn luid 4 uid 23
;;      reg 24 { d47(bb 3 insn 22) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ d17(bb 0 insn -1) }u24(13){ d21(bb 0 insn -1) }u25(25){ d49(bb 0 insn -1) }u26(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 147 148 149 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 147 148 149 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 162 163 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 147 148 149 154
;; live  gen 	 0 [r0] 24 [cc] 144 145 162 163 166 167
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 9, 13, 16, 17, 20, 21, 24, 47, 49, 50, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265
;; rd  gen 	(7)
44, 255, 256, 266, 267, 268, 269
;; rd  kill	(15)
22, 23, 24, 43, 44, 45, 46, 47, 48, 255, 256, 266, 267, 268, 269
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 148 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 148 166 167
;; rd  out 	(26)
5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 25
;;      reg 148 { d258(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 26
;;      reg 147 { d257(bb 2 insn 2) }
;;      reg 148 { d258(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 30
;;      reg 141 { d253(bb 2 insn 10) }
;;      reg 149 { d260(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 35
;;      reg 154 { d263(bb 3 insn 19) }
;;   UD chains for insn luid 4 uid 36
;;      reg 163 { d267(bb 4 insn 35) }
;;   UD chains for insn luid 5 uid 37
;;      reg 162 { d266(bb 4 insn 36) }
;;   UD chains for insn luid 6 uid 99
;;      reg 24 { d46(bb 4 insn 37) }
;;   UD chains for insn luid 7 uid 48
;;      reg 145 { d256(bb 4 insn 99) }
;;   UD chains for insn luid 8 uid 49
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d4(bb 4 insn 48) }
;;   UD chains for insn luid 9 uid 53
;;      reg 141 { d253(bb 2 insn 10) }
;;   UD chains for insn luid 10 uid 54
;;      reg 166 { d268(bb 4 insn 53) }
;;   UD chains for insn luid 11 uid 55
;;      reg 167 { d269(bb 4 insn 54) }
;;   UD chains for insn luid 12 uid 56
;;      reg 24 { d44(bb 4 insn 55) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ d17(bb 0 insn -1) }u44(13){ d21(bb 0 insn -1) }u45(25){ d49(bb 0 insn -1) }u46(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 148 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 166 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 148 166 167
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 175 176
;; live  kill	 14 [lr]
;; rd  in  	(26)
5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(3)
2, 270, 271
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 22, 23, 24, 270, 271
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(28)
2, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 167 { d269(bb 4 insn 54) }
;;   UD chains for insn luid 1 uid 66
;;      reg 166 { d268(bb 4 insn 53) }
;;   UD chains for insn luid 3 uid 68
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 65) }
;;      reg 1 { d6(bb 5 insn 66) }
;;      reg 2 { d11(bb 5 insn 67) }
;;   UD chains for insn luid 4 uid 72
;;      reg 141 { d253(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 74
;;      reg 175 { d270(bb 5 insn 72) }
;;      reg 176 { d271(bb 5 insn 73) }

( 4 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u56(11){ d17(bb 0 insn -1) }u57(13){ d21(bb 0 insn -1) }u58(25){ d49(bb 0 insn -1) }u59(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  def 	 149 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 149 177 178
;; live  kill	
;; rd  in  	(29)
2, 5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;; rd  gen 	(3)
259, 272, 273
;; rd  kill	(4)
259, 260, 272, 273
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; rd  out 	(31)
2, 5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 144 { d255(bb 4 insn 25) }
;;      reg 148 { d258(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 79
;;      reg 13 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 80
;;      reg 178 { d273(bb 6 insn 79) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 81
;;      reg 177 { d272(bb 6 insn 80) }

( 2 3 6 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(11){ d17(bb 0 insn -1) }u67(13){ d21(bb 0 insn -1) }u68(25){ d49(bb 0 insn -1) }u69(26){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(35)
2, 5, 9, 13, 16, 17, 20, 21, 24, 44, 47, 48, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(34)
0, 9, 13, 16, 17, 20, 21, 24, 44, 47, 48, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }
;;   reg 26 { d50(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 88
;;      reg 149 { d260(bb 2 insn 4) d259(bb 6 insn 81) }
;;   UD chains for insn luid 1 uid 94
;;      reg 0 { d0(bb 7 insn 88) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u72(0){ d0(bb 7 insn 88) }u73(11){ d17(bb 0 insn -1) }u74(13){ d21(bb 0 insn -1) }u75(14){ d24(bb 0 insn -1) }u76(25){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(34)
0, 9, 13, 16, 17, 20, 21, 24, 44, 47, 48, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(34)
0, 9, 13, 16, 17, 20, 21, 24, 44, 47, 48, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 7 insn 88) }
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 14 { d24(bb 0 insn -1) }
;;   reg 25 { d49(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 23 to worklist
  Adding insn 56 to worklist
  Adding insn 49 to worklist
  Adding insn 30 to worklist
  Adding insn 26 to worklist
  Adding insn 74 to worklist
  Adding insn 68 to worklist
  Adding insn 77 to worklist
  Adding insn 94 to worklist
Finished finding needed instructions:
  Adding insn 88 to worklist
Processing use of (reg 149 [ scno ]) in insn 88:
  Adding insn 4 to worklist
  Adding insn 81 to worklist
Processing use of (reg 177) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 178) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 13 sp) in insn 79:
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 94:
Processing use of (reg 144 [ ip ]) in insn 77:
  Adding insn 25 to worklist
Processing use of (reg 148 [ regs ]) in insn 77:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 148 [ regs ]) in insn 25:
Processing use of (reg 13 sp) in insn 68:
Processing use of (reg 0 r0) in insn 68:
  Adding insn 65 to worklist
Processing use of (reg 1 r1) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 2 r2) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 166 [ <variable>.task ]) in insn 66:
  Adding insn 53 to worklist
Processing use of (reg 141 [ D.27485 ]) in insn 53:
  Adding insn 10 to worklist
Processing use of (reg 150) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 167 [ <variable>.exit_code ]) in insn 65:
  Adding insn 54 to worklist
Processing use of (reg 166 [ <variable>.task ]) in insn 54:
Processing use of (reg 175 [ <variable>.task ]) in insn 74:
  Adding insn 72 to worklist
Processing use of (reg 176) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 141 [ D.27485 ]) in insn 72:
Processing use of (reg 147 [ why ]) in insn 26:
  Adding insn 2 to worklist
Processing use of (reg 148 [ regs ]) in insn 26:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141 [ D.27485 ]) in insn 30:
Processing use of (reg 149 [ scno ]) in insn 30:
Processing use of (reg 13 sp) in insn 49:
Processing use of (reg 0 r0) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 145 [ iftmp.405 ]) in insn 48:
  Adding insn 99 to worklist
Processing use of (reg 24 cc) in insn 99:
  Adding insn 37 to worklist
Processing use of (reg 162) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 163 [ <variable>.ptrace ]) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 154 [ <variable>.task ]) in insn 35:
  Adding insn 19 to worklist
Processing use of (reg 141 [ D.27485 ]) in insn 19:
Processing use of (reg 24 cc) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 167 [ <variable>.exit_code ]) in insn 55:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 155) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 156 [ <variable>.ptrace ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 154 [ <variable>.task ]) in insn 20:
Processing use of (reg 141 [ D.27485 ]) in insn 11:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 151) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 142 [ D.27480 ]) in insn 12:


syscall_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={4d,2u} r2={4d,2u} r3={3d} r11={1d,7u} r12={3d} r13={1d,11u,2d} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,7u} r26={1d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r141={1d,5u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,3u} r149={2d,2u} r150={1d,1u} r151={1d,1u} r154={1d,2u} r155={1d,1u} r156={1d,1u} r162={1d,1u} r163={1d,1u} r166={1d,2u} r167={1d,2u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} 
;;    total ref usage 351{274d,75u,2e} in 40{38 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252
0[0,6] 1[6,4] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,6] 25[49,1] 26[50,1] 27[51,2] 28[53,2] 29[55,2] 30[57,2] 31[59,2] 32[61,2] 33[63,2] 34[65,2] 35[67,2] 36[69,2] 37[71,2] 38[73,2] 39[75,2] 40[77,2] 41[79,2] 42[81,2] 43[83,2] 44[85,2] 45[87,2] 46[89,2] 47[91,2] 48[93,2] 49[95,2] 50[97,2] 51[99,2] 52[101,2] 53[103,2] 54[105,2] 55[107,2] 56[109,2] 57[111,2] 58[113,2] 59[115,2] 60[117,2] 61[119,2] 62[121,2] 63[123,2] 64[125,2] 65[127,2] 66[129,2] 67[131,2] 68[133,2] 69[135,2] 70[137,2] 71[139,2] 72[141,2] 73[143,2] 74[145,2] 75[147,2] 76[149,2] 77[151,2] 78[153,2] 79[155,2] 80[157,2] 81[159,2] 82[161,2] 83[163,2] 84[165,2] 85[167,2] 86[169,2] 87[171,2] 88[173,2] 89[175,2] 90[177,2] 91[179,2] 92[181,2] 93[183,2] 94[185,2] 95[187,2] 96[189,2] 97[191,2] 98[193,2] 99[195,2] 100[197,2] 101[199,2] 102[201,2] 103[203,2] 104[205,2] 105[207,2] 106[209,2] 107[211,2] 108[213,2] 109[215,2] 110[217,2] 111[219,2] 112[221,2] 113[223,2] 114[225,2] 115[227,2] 116[229,2] 117[231,2] 118[233,2] 119[235,2] 120[237,2] 121[239,2] 122[241,2] 123[243,2] 124[245,2] 125[247,2] 126[249,2] 127[251,2] 141[253,1] 142[254,1] 144[255,1] 145[256,1] 147[257,1] 148[258,1] 149[259,2] 150[261,1] 151[262,1] 154[263,1] 155[264,1] 156[265,1] 162[266,1] 163[267,1] 166[268,1] 167[269,1] 175[270,1] 176[271,1] 177[272,1] 178[273,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 142 147 148 149 150 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 142 147 148 149 150 151
;; live  kill	
;; rd  in  	(10)
5, 9, 13, 16, 17, 20, 21, 24, 49, 50
;; rd  gen 	(8)
48, 253, 254, 257, 258, 260, 261, 262
;; rd  kill	(14)
43, 44, 45, 46, 47, 48, 253, 254, 257, 258, 259, 260, 261, 262

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/ptrace.c:905 (set (reg/v:SI 147 [ why ])
        (reg:SI 0 r0 [ why ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ why ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:905 (set (reg/v/f:SI 148 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:905 (set (reg/v:SI 149 [ scno ])
        (reg:SI 2 r2 [ scno ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ scno ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 include/linux/thread_info.h:84 (set (reg:SI 150)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 include/linux/thread_info.h:84 (set (reg/f:SI 141 [ D.27485 ])
        (and:SI (reg:SI 150)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 142 [ D.27480 ])
        (mem/v:SI (reg/f:SI 141 [ D.27485 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:908 (set (reg:SI 151)
        (and:SI (reg:SI 142 [ D.27480 ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.27480 ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:908 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 14 13 15 2 arch/arm/kernel/ptrace.c:908 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; rd  out 	(18)
5, 9, 13, 16, 17, 20, 21, 24, 48, 49, 50, 253, 254, 257, 258, 260, 261, 262


;; Succ edge  7 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 154 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149
;; live  gen 	 24 [cc] 154 155 156
;; live  kill	
;; rd  in  	(18)
5, 9, 13, 16, 17, 20, 21, 24, 48, 49, 50, 253, 254, 257, 258, 260, 261, 262
;; rd  gen 	(4)
47, 263, 264, 265
;; rd  kill	(9)
43, 44, 45, 46, 47, 48, 263, 264, 265

;; Pred edge  2 [61.0%]  (fallthru)
(note 15 14 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 15 20 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 154 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 141 [ D.27485 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 156 [ <variable>.ptrace ])
        (mem/s/j:SI (plus:SI (reg/f:SI 154 [ <variable>.task ])
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 155)
        (and:SI (reg:SI 156 [ <variable>.ptrace ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 156 [ <variable>.ptrace ])
        (nil)))

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(jump_insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 7 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149 154
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 147 148 149 154
;; rd  out 	(21)
5, 9, 13, 16, 17, 20, 21, 24, 47, 49, 50, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265


;; Succ edge  7 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 147 148 149 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 147 148 149 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 162 163 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 147 148 149 154
;; live  gen 	 0 [r0] 24 [cc] 144 145 162 163 166 167
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 9, 13, 16, 17, 20, 21, 24, 47, 49, 50, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265
;; rd  gen 	(7)
44, 255, 256, 266, 267, 268, 269
;; rd  kill	(15)
22, 23, 24, 43, 44, 45, 46, 47, 48, 255, 256, 266, 267, 268, 269

;; Pred edge  3 [61.0%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 arch/arm/kernel/ptrace.c:917 (set (reg/v:SI 144 [ ip ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 30 4 arch/arm/kernel/ptrace.c:918 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 147 [ why ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ why ])
        (nil)))

(insn 30 26 35 4 arch/arm/kernel/ptrace.c:920 (set (mem/s/j:SI (plus:SI (reg/f:SI 141 [ D.27485 ])
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 149 [ scno ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ scno ])
        (nil)))

(insn 35 30 36 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163 [ <variable>.ptrace ])
        (mem/s/j:SI (plus:SI (reg/f:SI 154 [ <variable>.task ])
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154 [ <variable>.task ])
        (nil)))

(insn 36 35 37 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 162)
        (and:SI (reg:SI 163 [ <variable>.ptrace ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 163 [ <variable>.ptrace ])
        (nil)))

(insn 37 36 99 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 99 37 48 4 arch/arm/kernel/ptrace.c:924 discrim 2 (set (reg:SI 145 [ iftmp.405 ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 133 [0x85])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 48 99 49 4 arch/arm/kernel/ptrace.c:924 discrim 3 (set (reg:SI 0 r0)
        (reg:SI 145 [ iftmp.405 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145 [ iftmp.405 ])
        (nil)))

(call_insn 49 48 53 4 arch/arm/kernel/ptrace.c:924 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_notify") [flags 0x41] <function_decl 0x1109c700 ptrace_notify>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 53 49 54 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 166 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 141 [ D.27485 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 167 [ <variable>.exit_code ])
        (mem/s/j:SI (plus:SI (reg/f:SI 166 [ <variable>.task ])
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ <variable>.exit_code ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 144 148 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 148 166 167
;; rd  out 	(26)
5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  6 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 148 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 166 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 148 166 167
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 175 176
;; live  kill	 14 [lr]
;; rd  in  	(26)
5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(3)
2, 270, 271
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 22, 23, 24, 270, 271

;; Pred edge  4 [29.0%]  (fallthru)
(note 57 56 65 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 65 57 66 5 arch/arm/kernel/ptrace.c:932 (set (reg:SI 0 r0)
        (reg:SI 167 [ <variable>.exit_code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 167 [ <variable>.exit_code ])
        (nil)))

(insn 66 65 67 5 arch/arm/kernel/ptrace.c:932 (set (reg:SI 1 r1)
        (reg/f:SI 166 [ <variable>.task ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166 [ <variable>.task ])
        (nil)))

(insn 67 66 68 5 arch/arm/kernel/ptrace.c:932 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 68 67 72 5 arch/arm/kernel/ptrace.c:932 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("send_sig") [flags 0x41] <function_decl 0x10f01b80 send_sig>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 72 68 73 5 arch/arm/kernel/ptrace.c:933 (set (reg/f:SI 175 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 141 [ D.27485 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ D.27485 ])
        (nil)))

(insn 73 72 74 5 arch/arm/kernel/ptrace.c:933 (set (reg:SI 176)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 5 arch/arm/kernel/ptrace.c:933 (set (mem/s/j:SI (plus:SI (reg/f:SI 175 [ <variable>.task ])
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])
        (reg:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (expr_list:REG_DEAD (reg/f:SI 175 [ <variable>.task ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; rd  out 	(28)
2, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  def 	 149 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 149 177 178
;; live  kill	
;; rd  in  	(29)
2, 5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271
;; rd  gen 	(3)
259, 272, 273
;; rd  kill	(4)
259, 260, 272, 273

;; Pred edge  4 [71.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 75 74 76 6 38 "" [1 uses])

(note 76 75 77 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 79 6 arch/arm/kernel/ptrace.c:935 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 144 [ ip ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ regs ])
        (expr_list:REG_DEAD (reg/v:SI 144 [ ip ])
            (nil))))

(insn 79 77 80 6 arch/arm/kernel/ptrace.c:937 (set (reg:SI 178)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 80 79 81 6 arch/arm/kernel/ptrace.c:937 (set (reg:SI 177)
        (and:SI (reg:SI 178)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 81 80 82 6 arch/arm/kernel/ptrace.c:937 (set (reg/v:SI 149 [ scno ])
        (mem/s/j:SI (plus:SI (reg:SI 177)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; rd  out 	(31)
2, 5, 9, 13, 16, 17, 20, 21, 44, 49, 50, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(35)
2, 5, 9, 13, 16, 17, 20, 21, 24, 44, 47, 48, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 82 81 83 7 35 "" [2 uses])

(note 83 82 88 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 88 83 94 7 arch/arm/kernel/ptrace.c:938 (set (reg/i:SI 0 r0)
        (reg/v:SI 149 [ scno ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ scno ])
        (nil)))

(insn 94 88 0 7 arch/arm/kernel/ptrace.c:938 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(34)
0, 9, 13, 16, 17, 20, 21, 24, 44, 47, 48, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_set (vfp_set)[0:1562]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 32 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 36 (  1.9)


vfp_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,14u} r1={17d,7u} r2={16d,7u} r3={10d,1u} r11={1d,18u} r12={10d} r13={1d,27u} r14={10d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={20d,9u} r25={1d,21u,2d} r26={1d,19u,2d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,4u} r140={2d,1u} r142={1d,1u} r144={2d,8u,1d} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,2u} r149={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r166={1d,1u} r167={1d,1u} r171={1d,1u} 
;;    total ref usage 1306{1125d,176u,5e} in 83{74 regular + 9 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,20] 1[20,17] 2[37,16] 3[53,10] 11[63,1] 12[64,10] 13[74,1] 14[75,10] 15[85,9] 16[94,9] 17[103,9] 18[112,9] 19[121,9] 20[130,9] 21[139,9] 22[148,9] 23[157,9] 24[166,20] 25[186,1] 26[187,1] 27[188,9] 28[197,9] 29[206,9] 30[215,9] 31[224,9] 32[233,9] 33[242,9] 34[251,9] 35[260,9] 36[269,9] 37[278,9] 38[287,9] 39[296,9] 40[305,9] 41[314,9] 42[323,9] 43[332,9] 44[341,9] 45[350,9] 46[359,9] 47[368,9] 48[377,9] 49[386,9] 50[395,9] 51[404,9] 52[413,9] 53[422,9] 54[431,9] 55[440,9] 56[449,9] 57[458,9] 58[467,9] 59[476,9] 60[485,9] 61[494,9] 62[503,9] 63[512,9] 64[521,9] 65[530,9] 66[539,9] 67[548,9] 68[557,9] 69[566,9] 70[575,9] 71[584,9] 72[593,9] 73[602,9] 74[611,9] 75[620,9] 76[629,9] 77[638,9] 78[647,9] 79[656,9] 80[665,9] 81[674,9] 82[683,9] 83[692,9] 84[701,9] 85[710,9] 86[719,9] 87[728,9] 88[737,9] 89[746,9] 90[755,9] 91[764,9] 92[773,9] 93[782,9] 94[791,9] 95[800,9] 96[809,9] 97[818,9] 98[827,9] 99[836,9] 100[845,9] 101[854,9] 102[863,9] 103[872,9] 104[881,9] 105[890,9] 106[899,9] 107[908,9] 108[917,9] 109[926,9] 110[935,9] 111[944,9] 112[953,9] 113[962,9] 114[971,9] 115[980,9] 116[989,9] 117[998,9] 118[1007,9] 119[1016,9] 120[1025,9] 121[1034,9] 122[1043,9] 123[1052,9] 124[1061,9] 125[1070,9] 126[1079,9] 127[1088,9] 133[1097,1] 134[1098,2] 135[1100,1] 136[1101,1] 137[1102,2] 138[1104,1] 139[1105,1] 140[1106,2] 142[1108,1] 144[1109,2] 145[1111,2] 146[1113,2] 147[1115,2] 148[1117,1] 149[1118,1] 159[1119,1] 160[1120,1] 161[1121,1] 166[1122,1] 167[1123,1] 171[1124,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d19(0){ }d36(1){ }d52(2){ }d62(3){ }d63(11){ }d73(12){ }d74(13){ }d84(14){ }d186(25){ }d187(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
19, 36, 52, 62, 63, 73, 74, 84, 186, 187
;; rd  kill	(87)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 186, 187
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
19, 36, 52, 62, 63, 73, 74, 84, 186, 187

( 0 )->[2]->( 14 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d63(bb 0 insn -1) }u1(13){ d74(bb 0 insn -1) }u2(25){ d186(bb 0 insn -1) }u3(26){ d187(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 144 145 146 147 148 149
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 139 142 144 145 146 147 148 149
;; live  kill	 14 [lr]
;; rd  in  	(10)
19, 36, 52, 62, 63, 73, 74, 84, 186, 187
;; rd  gen 	(10)
17, 184, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  kill	(62)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; rd  out 	(18)
17, 36, 52, 62, 63, 73, 74, 184, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d19(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d62(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 6
;;      reg 26 { d187(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 4 uid 7
;;      reg 26 { d187(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 142 { d1108(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 25 { d186(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 13
;;      reg 139 { d1105(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 15
;;      reg 148 { d1117(bb 2 insn 12) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 9 uid 16
;;      reg 149 { d1118(bb 2 insn 13) }
;;   UD chains for insn luid 11 uid 18
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d18(bb 2 insn 15) }
;;      reg 1 { d35(bb 2 insn 16) }
;;      reg 2 { d38(bb 2 insn 17) }
;;   UD chains for insn luid 12 uid 20
;;      reg 145 { d1112(bb 2 insn 5) }
;;   UD chains for insn luid 13 uid 21
;;      reg 24 { d184(bb 2 insn 20) }

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ d63(bb 0 insn -1) }u24(13){ d74(bb 0 insn -1) }u25(25){ d186(bb 0 insn -1) }u26(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
17, 36, 52, 62, 63, 73, 74, 184, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(1)
183
;; rd  kill	(20)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; rd  out 	(18)
17, 36, 52, 62, 63, 73, 74, 183, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 144 { d1110(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 24
;;      reg 24 { d183(bb 3 insn 23) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ d63(bb 0 insn -1) }u30(13){ d74(bb 0 insn -1) }u31(25){ d186(bb 0 insn -1) }u32(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 146 148
;; lr  def 	 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  gen 	 24 [cc] 137 138
;; live  kill	 24 [cc]
;; rd  in  	(18)
17, 36, 52, 62, 63, 73, 74, 183, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(3)
181, 1102, 1104
;; rd  kill	(23)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1102, 1103, 1104
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; rd  out 	(20)
17, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 144 { d1110(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 27
;;      reg 137 { d1103(bb 4 insn 26) }
;;      reg 145 { d1112(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 29
;;      reg 144 { d1110(bb 2 insn 4) }
;;      reg 148 { d1117(bb 2 insn 12) }
;;   UD chains for insn luid 3 uid 30
;;      reg 146 { d1114(bb 2 insn 6) }
;;   UD chains for insn luid 4 uid 31
;;      reg 24 { d181(bb 4 insn 30) }

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(11){ d63(bb 0 insn -1) }u41(13){ d74(bb 0 insn -1) }u42(25){ d186(bb 0 insn -1) }u43(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 146
;; live  kill	 14 [lr]
;; rd  in  	(20)
17, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(2)
16, 1113
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1113, 1114
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(20)
16, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1113, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 138 { d1104(bb 4 insn 29) }
;;   UD chains for insn luid 1 uid 37
;;      reg 146 { d1114(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 38
;;      reg 137 { d1102(bb 4 insn 27) }
;;   UD chains for insn luid 3 uid 39
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d3(bb 5 insn 36) }
;;      reg 1 { d22(bb 5 insn 37) }
;;      reg 2 { d40(bb 5 insn 38) }
;;   UD chains for insn luid 4 uid 41
;;      reg 137 { d1102(bb 4 insn 27) }
;;      reg 146 { d1114(bb 2 insn 6) }

( 4 )->[6]->( 15 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ d63(bb 0 insn -1) }u54(13){ d74(bb 0 insn -1) }u55(25){ d186(bb 0 insn -1) }u56(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(20)
17, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(3)
14, 178, 1101
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1101
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(21)
14, 36, 52, 62, 63, 73, 74, 178, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 138 { d1104(bb 4 insn 29) }
;;   UD chains for insn luid 1 uid 47
;;      reg 147 { d1116(bb 2 insn 7) }
;;   UD chains for insn luid 2 uid 48
;;      reg 137 { d1102(bb 4 insn 27) }
;;   UD chains for insn luid 3 uid 49
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d15(bb 6 insn 46) }
;;      reg 1 { d32(bb 6 insn 47) }
;;      reg 2 { d49(bb 6 insn 48) }
;;   UD chains for insn luid 4 uid 50
;;      reg 0 { d14(bb 6 insn 49) }
;;   UD chains for insn luid 5 uid 51
;;      reg 136 { d1101(bb 6 insn 50) }
;;   UD chains for insn luid 6 uid 52
;;      reg 24 { d178(bb 6 insn 51) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(11){ d63(bb 0 insn -1) }u68(13){ d74(bb 0 insn -1) }u69(25){ d186(bb 0 insn -1) }u70(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 147
;; live  kill	
;; rd  in  	(21)
14, 36, 52, 62, 63, 73, 74, 178, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(1)
1115
;; rd  kill	(2)
1115, 1116
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(21)
14, 36, 52, 62, 63, 73, 74, 178, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1115, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 54
;;      reg 137 { d1102(bb 4 insn 27) }
;;      reg 147 { d1116(bb 2 insn 7) }

( 7 5 )->[8]->( 14 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(11){ d63(bb 0 insn -1) }u74(13){ d74(bb 0 insn -1) }u75(25){ d186(bb 0 insn -1) }u76(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(25)
14, 16, 36, 52, 62, 63, 73, 74, 178, 181, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(2)
177, 1111
;; rd  kill	(22)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1111, 1112
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(24)
14, 16, 36, 52, 62, 63, 73, 74, 177, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 137 { d1102(bb 4 insn 27) }
;;      reg 145 { d1112(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 58
;;      reg 145 { d1111(bb 8 insn 57) }
;;   UD chains for insn luid 2 uid 59
;;      reg 24 { d177(bb 8 insn 58) }

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u81(11){ d63(bb 0 insn -1) }u82(13){ d74(bb 0 insn -1) }u83(25){ d186(bb 0 insn -1) }u84(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(24)
14, 16, 36, 52, 62, 63, 73, 74, 177, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(2)
176, 1109
;; rd  kill	(22)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1109, 1110
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(24)
14, 16, 36, 52, 62, 63, 73, 74, 176, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 61
;;      reg 137 { d1102(bb 4 insn 27) }
;;      reg 144 { d1110(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 62
;;      reg 144 { d1109(bb 9 insn 61) }
;;   UD chains for insn luid 2 uid 63
;;      reg 24 { d176(bb 9 insn 62) }

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u89(11){ d63(bb 0 insn -1) }u90(13){ d74(bb 0 insn -1) }u91(25){ d186(bb 0 insn -1) }u92(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(24)
14, 16, 36, 52, 62, 63, 73, 74, 176, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(0)

;; rd  kill	(10)
75, 76, 77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
14, 16, 36, 52, 62, 63, 73, 74, 176, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 69
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d0(bb 10 insn 67) }
;;      reg 1 { d20(bb 10 insn 68) }

( 17 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u96(11){ d63(bb 0 insn -1) }u97(13){ d74(bb 0 insn -1) }u98(25){ d186(bb 0 insn -1) }u99(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 146
;; lr  def 	 24 [cc] 134 135 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 134 135 159 160 161
;; live  kill	 24 [cc]
;; rd  in  	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124
;; rd  gen 	(6)
173, 1098, 1100, 1119, 1120, 1121
;; rd  kill	(26)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1098, 1099, 1100, 1119, 1120, 1121
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146 147
;; rd  out 	(33)
14, 16, 17, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 144 { d1110(bb 2 insn 4) d1109(bb 9 insn 61) }
;;   UD chains for insn luid 1 uid 73
;;      reg 134 { d1099(bb 11 insn 72) }
;;      reg 145 { d1112(bb 2 insn 5) d1111(bb 8 insn 57) }
;;   UD chains for insn luid 2 uid 74
;;      reg 25 { d186(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 75
;;      reg 159 { d1119(bb 11 insn 74) }
;;   UD chains for insn luid 4 uid 76
;;      reg 144 { d1110(bb 2 insn 4) d1109(bb 9 insn 61) }
;;   UD chains for insn luid 5 uid 77
;;      reg 160 { d1120(bb 11 insn 75) }
;;      reg 161 { d1121(bb 11 insn 76) }
;;   UD chains for insn luid 6 uid 78
;;      reg 146 { d1114(bb 2 insn 6) d1113(bb 5 insn 41) }
;;   UD chains for insn luid 7 uid 79
;;      reg 24 { d173(bb 11 insn 78) }

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u110(11){ d63(bb 0 insn -1) }u111(13){ d74(bb 0 insn -1) }u112(25){ d186(bb 0 insn -1) }u113(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(33)
14, 16, 17, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(1)
12
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(31)
12, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 84
;;      reg 135 { d1100(bb 11 insn 77) }
;;   UD chains for insn luid 1 uid 85
;;      reg 146 { d1114(bb 2 insn 6) d1113(bb 5 insn 41) }
;;   UD chains for insn luid 2 uid 86
;;      reg 134 { d1098(bb 11 insn 73) }
;;   UD chains for insn luid 3 uid 87
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d2(bb 12 insn 84) }
;;      reg 1 { d21(bb 12 insn 85) }
;;      reg 2 { d39(bb 12 insn 86) }

( 11 )->[13]->( 15 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u121(11){ d63(bb 0 insn -1) }u122(13){ d74(bb 0 insn -1) }u123(25){ d186(bb 0 insn -1) }u124(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(33)
14, 16, 17, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(3)
10, 170, 1097
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1097
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(32)
10, 36, 52, 62, 63, 73, 74, 170, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 93
;;      reg 135 { d1100(bb 11 insn 77) }
;;   UD chains for insn luid 1 uid 94
;;      reg 147 { d1116(bb 2 insn 7) d1115(bb 7 insn 54) }
;;   UD chains for insn luid 2 uid 95
;;      reg 134 { d1098(bb 11 insn 73) }
;;   UD chains for insn luid 3 uid 96
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d11(bb 13 insn 93) }
;;      reg 1 { d28(bb 13 insn 94) }
;;      reg 2 { d45(bb 13 insn 95) }
;;   UD chains for insn luid 4 uid 97
;;      reg 0 { d10(bb 13 insn 96) }
;;   UD chains for insn luid 5 uid 98
;;      reg 133 { d1097(bb 13 insn 97) }
;;   UD chains for insn luid 6 uid 99
;;      reg 24 { d170(bb 13 insn 98) }

( 12 2 8 13 18 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u135(11){ d63(bb 0 insn -1) }u136(13){ d74(bb 0 insn -1) }u137(25){ d186(bb 0 insn -1) }u138(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 166 167
;; live  kill	 14 [lr]
;; rd  in  	(40)
10, 12, 14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(3)
1107, 1122, 1123
;; rd  kill	(14)
75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1106, 1107, 1122, 1123
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(43)
10, 12, 14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 102
;;      reg 139 { d1105(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 103
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d9(bb 14 insn 102) }
;;   UD chains for insn luid 2 uid 104
;;      reg 139 { d1105(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 105
;;      reg 25 { d186(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 107
;;      reg 166 { d1122(bb 14 insn 104) }
;;   UD chains for insn luid 5 uid 108
;;      reg 167 { d1123(bb 14 insn 105) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 7 uid 110
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d7(bb 14 insn 107) }
;;      reg 1 { d25(bb 14 insn 108) }
;;      reg 2 { d37(bb 14 insn 109) }
;;   UD chains for insn luid 8 uid 112
;;      reg 139 { d1105(bb 2 insn 11) }
;;   UD chains for insn luid 9 uid 113
;;      reg 13 { d74(bb 0 insn -1) }
;;      reg 0 { d5(bb 14 insn 112) }

( 6 13 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u154(11){ d63(bb 0 insn -1) }u155(13){ d74(bb 0 insn -1) }u156(25){ d186(bb 0 insn -1) }u157(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(34)
10, 14, 36, 52, 62, 63, 73, 74, 170, 178, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(1)
1106
;; rd  kill	(2)
1106, 1107
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(35)
10, 14, 36, 52, 62, 63, 73, 74, 170, 178, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }

( 15 14 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u158(11){ d63(bb 0 insn -1) }u159(13){ d74(bb 0 insn -1) }u160(25){ d186(bb 0 insn -1) }u161(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(45)
10, 12, 14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 178, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124
;; rd  gen 	(1)
1
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(41)
1, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 178, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 135
;;      reg 140 { d1107(bb 14 insn 114) d1106(bb 15 insn 119) }
;;   UD chains for insn luid 1 uid 141
;;      reg 0 { d1(bb 16 insn 135) }

( 3 9 )->[17]->( 11 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u164(11){ d63(bb 0 insn -1) }u165(13){ d74(bb 0 insn -1) }u166(25){ d186(bb 0 insn -1) }u167(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 176, 183, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(2)
166, 1124
;; rd  kill	(21)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1124
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 129
;;      reg 144 { d1110(bb 2 insn 4) d1109(bb 9 insn 61) }
;;      reg 171 { d1124(bb 17 insn 128) }
;;   eq_note reg 144 { }
;;   UD chains for insn luid 2 uid 130
;;      reg 24 { d166(bb 17 insn 129) }

( 17 )->[18]->( 14 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ d63(bb 0 insn -1) }u-1(13){ d74(bb 0 insn -1) }u-1(25){ d186(bb 0 insn -1) }u-1(26){ d187(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124
;;  UD chains for artificial uses
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 25 { d186(bb 0 insn -1) }
;;   reg 26 { d187(bb 0 insn -1) }

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u172(0){ d1(bb 16 insn 135) }u173(11){ d63(bb 0 insn -1) }u174(13){ d74(bb 0 insn -1) }u175(14){ }u176(25){ d186(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(41)
1, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 178, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(41)
1, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 178, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 16 insn 135) }
;;   reg 11 { d63(bb 0 insn -1) }
;;   reg 13 { d74(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d186(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 24 to worklist
  Adding insn 31 to worklist
  Adding insn 145 to worklist
  Adding insn 39 to worklist
  Adding insn 52 to worklist
  Adding insn 49 to worklist
  Adding insn 59 to worklist
  Adding insn 63 to worklist
  Adding insn 69 to worklist
  Adding insn 79 to worklist
  Adding insn 147 to worklist
  Adding insn 87 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 149 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 103 to worklist
  Adding insn 141 to worklist
  Adding insn 130 to worklist
  Adding insn 152 to worklist
Finished finding needed instructions:
  Adding insn 135 to worklist
Processing use of (reg 140 [ ret ]) in insn 135:
  Adding insn 114 to worklist
  Adding insn 119 to worklist
Processing use of (reg 24 cc) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 144 [ pos ]) in insn 129:
  Adding insn 4 to worklist
  Adding insn 61 to worklist
Processing use of (reg 171) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 137 [ copy ]) in insn 61:
  Adding insn 27 to worklist
Processing use of (reg 144 [ pos ]) in insn 61:
Processing use of (reg 137 [ copy ]) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 145 [ count ]) in insn 27:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 144 [ pos ]) in insn 26:
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 141:
Processing use of (reg 13 sp) in insn 103:
Processing use of (reg 0 r0) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 139 [ thread ]) in insn 102:
  Adding insn 11 to worklist
Processing use of (reg 142 [ target ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 110:
Processing use of (reg 0 r0) in insn 110:
  Adding insn 107 to worklist
Processing use of (reg 1 r1) in insn 110:
  Adding insn 108 to worklist
Processing use of (reg 2 r2) in insn 110:
  Adding insn 109 to worklist
Processing use of (reg 167) in insn 108:
  Adding insn 105 to worklist
Processing use of (reg 25 sfp) in insn 105:
Processing use of (reg 166) in insn 107:
  Adding insn 104 to worklist
Processing use of (reg 139 [ thread ]) in insn 104:
Processing use of (reg 13 sp) in insn 113:
Processing use of (reg 0 r0) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 139 [ thread ]) in insn 112:
Processing use of (reg 13 sp) in insn 96:
Processing use of (reg 0 r0) in insn 96:
  Adding insn 93 to worklist
Processing use of (reg 1 r1) in insn 96:
  Adding insn 94 to worklist
Processing use of (reg 2 r2) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 134 [ copy ]) in insn 95:
  Adding insn 73 to worklist
Processing use of (reg 134 [ copy ]) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 145 [ count ]) in insn 73:
  Adding insn 57 to worklist
Processing use of (reg 137 [ copy ]) in insn 57:
Processing use of (reg 145 [ count ]) in insn 57:
Processing use of (reg 144 [ pos ]) in insn 72:
Processing use of (reg 147 [ ubuf ]) in insn 94:
  Adding insn 7 to worklist
  Adding insn 54 to worklist
Processing use of (reg 137 [ copy ]) in insn 54:
Processing use of (reg 147 [ ubuf ]) in insn 54:
Processing use of (reg 26 afp) in insn 7:
Processing use of (reg 135 [ data ]) in insn 93:
  Adding insn 77 to worklist
Processing use of (reg 160) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 161) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 144 [ pos ]) in insn 76:
Processing use of (reg 159) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 25 sfp) in insn 74:
Processing use of (reg 24 cc) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 133 [ D.27591 ]) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 0 r0) in insn 97:
Processing use of (reg 13 sp) in insn 87:
Processing use of (reg 0 r0) in insn 87:
  Adding insn 84 to worklist
Processing use of (reg 1 r1) in insn 87:
  Adding insn 85 to worklist
Processing use of (reg 2 r2) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 134 [ copy ]) in insn 86:
Processing use of (reg 146 [ kbuf ]) in insn 85:
  Adding insn 6 to worklist
  Adding insn 41 to worklist
Processing use of (reg 137 [ copy ]) in insn 41:
Processing use of (reg 146 [ kbuf ]) in insn 41:
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 135 [ data ]) in insn 84:
Processing use of (reg 24 cc) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 146 [ kbuf ]) in insn 78:
Processing use of (reg 13 sp) in insn 69:
Processing use of (reg 0 r0) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 1 r1) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 24 cc) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 144 [ pos ]) in insn 62:
Processing use of (reg 24 cc) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 145 [ count ]) in insn 58:
Processing use of (reg 13 sp) in insn 49:
Processing use of (reg 0 r0) in insn 49:
  Adding insn 46 to worklist
Processing use of (reg 1 r1) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 2 r2) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 137 [ copy ]) in insn 48:
Processing use of (reg 147 [ ubuf ]) in insn 47:
Processing use of (reg 138 [ data ]) in insn 46:
  Adding insn 29 to worklist
Processing use of (reg 144 [ pos ]) in insn 29:
Processing use of (reg 148) in insn 29:
  Adding insn 12 to worklist
Processing use of (reg 25 sfp) in insn 12:
Processing use of (reg 24 cc) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 136 [ D.27545 ]) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 0 r0) in insn 50:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 0 r0) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 2 r2) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 137 [ copy ]) in insn 38:
Processing use of (reg 146 [ kbuf ]) in insn 37:
Processing use of (reg 138 [ data ]) in insn 36:
Processing use of (reg 24 cc) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 146 [ kbuf ]) in insn 30:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 144 [ pos ]) in insn 23:
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 1 r1) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 2 r2) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 149) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 139 [ thread ]) in insn 13:
Processing use of (reg 148) in insn 15:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 145 [ count ]) in insn 20:


vfp_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,14u} r1={17d,7u} r2={16d,7u} r3={10d,1u} r11={1d,18u} r12={10d} r13={1d,27u} r14={10d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={20d,9u} r25={1d,21u,2d} r26={1d,19u,2d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,4u} r140={2d,1u} r142={1d,1u} r144={2d,8u,1d} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,2u} r149={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r166={1d,1u} r167={1d,1u} r171={1d,1u} 
;;    total ref usage 1306{1125d,176u,5e} in 83{74 regular + 9 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	
0[0,20] 1[20,17] 2[37,16] 3[53,10] 11[63,1] 12[64,10] 13[74,1] 14[75,10] 15[85,9] 16[94,9] 17[103,9] 18[112,9] 19[121,9] 20[130,9] 21[139,9] 22[148,9] 23[157,9] 24[166,20] 25[186,1] 26[187,1] 27[188,9] 28[197,9] 29[206,9] 30[215,9] 31[224,9] 32[233,9] 33[242,9] 34[251,9] 35[260,9] 36[269,9] 37[278,9] 38[287,9] 39[296,9] 40[305,9] 41[314,9] 42[323,9] 43[332,9] 44[341,9] 45[350,9] 46[359,9] 47[368,9] 48[377,9] 49[386,9] 50[395,9] 51[404,9] 52[413,9] 53[422,9] 54[431,9] 55[440,9] 56[449,9] 57[458,9] 58[467,9] 59[476,9] 60[485,9] 61[494,9] 62[503,9] 63[512,9] 64[521,9] 65[530,9] 66[539,9] 67[548,9] 68[557,9] 69[566,9] 70[575,9] 71[584,9] 72[593,9] 73[602,9] 74[611,9] 75[620,9] 76[629,9] 77[638,9] 78[647,9] 79[656,9] 80[665,9] 81[674,9] 82[683,9] 83[692,9] 84[701,9] 85[710,9] 86[719,9] 87[728,9] 88[737,9] 89[746,9] 90[755,9] 91[764,9] 92[773,9] 93[782,9] 94[791,9] 95[800,9] 96[809,9] 97[818,9] 98[827,9] 99[836,9] 100[845,9] 101[854,9] 102[863,9] 103[872,9] 104[881,9] 105[890,9] 106[899,9] 107[908,9] 108[917,9] 109[926,9] 110[935,9] 111[944,9] 112[953,9] 113[962,9] 114[971,9] 115[980,9] 116[989,9] 117[998,9] 118[1007,9] 119[1016,9] 120[1025,9] 121[1034,9] 122[1043,9] 123[1052,9] 124[1061,9] 125[1070,9] 126[1079,9] 127[1088,9] 133[1097,1] 134[1098,2] 135[1100,1] 136[1101,1] 137[1102,2] 138[1104,1] 139[1105,1] 140[1106,2] 142[1108,1] 144[1109,2] 145[1111,2] 146[1113,2] 147[1115,2] 148[1117,1] 149[1118,1] 159[1119,1] 160[1120,1] 161[1121,1] 166[1122,1] 167[1123,1] 171[1124,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 144 145 146 147 148 149
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 139 142 144 145 146 147 148 149
;; live  kill	 14 [lr]
;; rd  in  	(10)
19, 36, 52, 62, 63, 73, 74, 84, 186, 187
;; rd  gen 	(10)
17, 184, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  kill	(62)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 142 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ target ])
        (nil)))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:698 (set (reg/v:SI 144 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pos ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:698 (set (reg/v:SI 145 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ count ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 146 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 147 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:700 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ target ])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:701 (set (reg/f:SI 148)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))) 4 {*arm_addsi3} (nil))

(insn 13 12 15 2 arch/arm/kernel/ptrace.c:701 (set (reg/f:SI 149)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 15 13 16 2 arch/arm/kernel/ptrace.c:701 (set (reg:SI 0 r0)
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))
        (nil)))

(insn 16 15 17 2 arch/arm/kernel/ptrace.c:701 (set (reg:SI 1 r1)
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149)
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/ptrace.c:701 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 280 [0x118])
        (nil)))

(call_insn 18 17 20 2 arch/arm/kernel/ptrace.c:701 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 18 21 2 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 2 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 14 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; rd  out 	(18)
17, 36, 52, 62, 63, 73, 74, 184, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118


;; Succ edge  14 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
17, 36, 52, 62, 63, 73, 74, 184, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(1)
183
;; rd  kill	(20)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185

;; Pred edge  2 [50.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 3 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; rd  out 	(18)
17, 36, 52, 62, 63, 73, 74, 183, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 146 148
;; lr  def 	 24 [cc] 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147 148
;; live  gen 	 24 [cc] 137 138
;; live  kill	 24 [cc]
;; rd  in  	(18)
17, 36, 52, 62, 63, 73, 74, 183, 186, 187, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(3)
181, 1102, 1104
;; rd  kill	(23)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1102, 1103, 1104

;; Pred edge  3 [50.0%]  (fallthru)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 4 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 27 26 29 4 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 29 27 30 4 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg/f:SI 148)
            (reg/v:SI 144 [ pos ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))

(insn 30 29 31 4 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 4 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; rd  out 	(20)
17, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  6 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 146
;; live  kill	 14 [lr]
;; rd  in  	(20)
17, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(2)
16, 1113
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1113, 1114

;; Pred edge  4 [85.0%]  (fallthru)
(note 32 31 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 36 32 37 5 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
        (nil)))

(insn 37 36 38 5 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 5 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 41 5 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 41 39 145 5 include/linux/regset.h:258 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))

(jump_insn 145 41 146 5 (set (pc)
        (label_ref 55)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(20)
16, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1113, 1116, 1117, 1118


;; Succ edge  8 [100.0%] 

(barrier 146 145 44)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(20)
17, 36, 52, 62, 63, 73, 74, 181, 186, 187, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(3)
14, 178, 1101
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1101

;; Pred edge  4 [15.0%] 
(code_label 44 146 45 6 43 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
        (nil)))

(insn 47 46 48 6 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 6 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 49 48 50 6 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 50 49 51 6 include/linux/regset.h:259 (set (reg:SI 136 [ D.27545 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 51 50 52 6 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27545 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.27545 ])
        (nil)))

(jump_insn 52 51 53 6 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 15 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(21)
14, 36, 52, 62, 63, 73, 74, 178, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118


;; Succ edge  15 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 147
;; live  kill	
;; rd  in  	(21)
14, 36, 52, 62, 63, 73, 74, 178, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1116, 1117, 1118
;; rd  gen 	(1)
1115
;; rd  kill	(2)
1115, 1116

;; Pred edge  6 [50.0%]  (fallthru)
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 include/linux/regset.h:262 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(21)
14, 36, 52, 62, 63, 73, 74, 178, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1114, 1115, 1117, 1118


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 145
;; live  kill	
;; rd  in  	(25)
14, 16, 36, 52, 62, 63, 73, 74, 178, 181, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1112, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(2)
177, 1111
;; rd  kill	(22)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1111, 1112

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 55 54 56 8 44 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 include/linux/regset.h:264 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) 28 {*arm_subsi3_insn} (nil))

(insn 58 57 59 8 include/linux/regset.h:305 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 59 58 60 8 include/linux/regset.h:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 8 -> ( 14 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(24)
14, 16, 36, 52, 62, 63, 73, 74, 177, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118


;; Succ edge  14
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 144
;; live  kill	
;; rd  in  	(24)
14, 16, 36, 52, 62, 63, 73, 74, 177, 186, 187, 1101, 1102, 1104, 1105, 1108, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(2)
176, 1109
;; rd  kill	(22)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1109, 1110

;; Pred edge  8 [100.0%]  (fallthru)
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 include/linux/regset.h:263 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ copy ])
        (nil)))

(insn 62 61 63 9 include/linux/regset.h:307 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 63 62 64 9 include/linux/regset.h:307 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
            (nil))))
;; End of basic block 9 -> ( 10 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(24)
14, 16, 36, 52, 62, 63, 73, 74, 176, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118


;; Succ edge  10 [0.2%]  (fallthru)
;; Succ edge  17 [99.8%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(24)
14, 16, 36, 52, 62, 63, 73, 74, 176, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(0)

;; rd  kill	(10)
75, 76, 77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  9 [0.2%]  (fallthru)
(note 64 63 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 67 64 68 10 include/linux/regset.h:307 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)
        (nil)))

(insn 68 67 69 10 include/linux/regset.h:307 discrim 1 (set (reg:SI 1 r1)
        (const_int 307 [0x133])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 307 [0x133])
        (nil)))

(call_insn 69 68 70 10 include/linux/regset.h:307 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
14, 16, 36, 52, 62, 63, 73, 74, 176, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118



(barrier 70 69 127)

;; Start of basic block ( 17) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 146
;; lr  def 	 24 [cc] 134 135 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 134 135 159 160 161
;; live  kill	 24 [cc]
;; rd  in  	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124
;; rd  gen 	(6)
173, 1098, 1100, 1119, 1120, 1121
;; rd  kill	(26)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1098, 1099, 1100, 1119, 1120, 1121

;; Pred edge  17 [50.0%] 
(code_label 127 70 71 11 48 "" [1 uses])

(note 71 127 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 11 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 73 72 74 11 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ count ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 74 73 75 11 include/linux/regset.h:255 (set (reg/f:SI 159)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))) 4 {*arm_addsi3} (nil))

(insn 75 74 76 11 include/linux/regset.h:255 (set (reg/f:SI 160)
        (plus:SI (reg/f:SI 159)
            (const_int 260 [0x104]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 159)
        (nil)))

(insn 76 75 77 11 include/linux/regset.h:255 (set (reg:SI 161)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ pos ])
        (nil)))

(insn 77 76 78 11 include/linux/regset.h:255 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg/f:SI 160)
            (reg:SI 161))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 161)
        (expr_list:REG_DEAD (reg/f:SI 160)
            (nil))))

(insn 78 77 79 11 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 79 78 80 11 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146 147
;; rd  out 	(33)
14, 16, 17, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124


;; Succ edge  12 [85.0%]  (fallthru)
;; Succ edge  13 [15.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(33)
14, 16, 17, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(1)
12
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84

;; Pred edge  11 [85.0%]  (fallthru)
(note 80 79 84 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 84 80 85 12 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ data ])
        (nil)))

(insn 85 84 86 12 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ kbuf ])
        (nil)))

(insn 86 85 87 12 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 87 86 147 12 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 147 87 148 12 (set (pc)
        (label_ref 100)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(31)
12, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124


;; Succ edge  14 [100.0%] 

(barrier 148 147 91)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(33)
14, 16, 17, 36, 52, 62, 63, 73, 74, 173, 186, 187, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(3)
10, 170, 1097
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1097

;; Pred edge  11 [15.0%] 
(code_label 91 148 92 13 46 "" [1 uses])

(note 92 91 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 13 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ data ])
        (nil)))

(insn 94 93 95 13 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ ubuf ])
        (nil)))

(insn 95 94 96 13 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 96 95 97 13 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 97 96 98 13 include/linux/regset.h:259 (set (reg:SI 133 [ D.27591 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 98 97 99 13 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27591 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.27591 ])
        (nil)))

(jump_insn 99 98 100 13 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(32)
10, 36, 52, 62, 63, 73, 74, 170, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124


;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 12 2 8 13 18) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 166 167
;; live  kill	 14 [lr]
;; rd  in  	(40)
10, 12, 14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(3)
1107, 1122, 1123
;; rd  kill	(14)
75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1106, 1107, 1122, 1123

;; Pred edge  12 [100.0%] 
;; Pred edge  2 [50.0%] 
;; Pred edge  8
;; Pred edge  13 [50.0%]  (fallthru)
;; Pred edge  18 [100.0%] 
(code_label 100 99 101 14 41 "" [4 uses])

(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 14 arch/arm/kernel/ptrace.c:725 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) 167 {*arm_movsi_insn} (nil))

(call_insn 103 102 104 14 arch/arm/kernel/ptrace.c:725 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 104 103 105 14 arch/arm/kernel/ptrace.c:726 (set (reg/f:SI 166)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 105 104 107 14 arch/arm/kernel/ptrace.c:726 (set (reg/f:SI 167)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))) 4 {*arm_addsi3} (nil))

(insn 107 105 108 14 arch/arm/kernel/ptrace.c:726 (set (reg:SI 0 r0)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))

(insn 108 107 109 14 arch/arm/kernel/ptrace.c:726 (set (reg:SI 1 r1)
        (reg/f:SI 167)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 167)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -280 [0xfffffffffffffee8]))
            (nil))))

(insn 109 108 110 14 arch/arm/kernel/ptrace.c:726 (set (reg:SI 2 r2)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 280 [0x118])
        (nil)))

(call_insn 110 109 112 14 arch/arm/kernel/ptrace.c:726 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 112 110 113 14 arch/arm/kernel/ptrace.c:727 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ thread ])
        (nil)))

(call_insn 113 112 114 14 arch/arm/kernel/ptrace.c:727 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_flush_hwstate") [flags 0x41] <function_decl 0x10a83b80 vfp_flush_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 114 113 149 14 arch/arm/kernel/ptrace.c:729 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 149 114 150 14 arch/arm/kernel/ptrace.c:729 (set (pc)
        (label_ref 120)) -1 (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(43)
10, 12, 14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124


;; Succ edge  16 [100.0%] 

(barrier 150 149 117)

;; Start of basic block ( 6 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(34)
10, 14, 36, 52, 62, 63, 73, 74, 170, 178, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124
;; rd  gen 	(1)
1106
;; rd  kill	(2)
1106, 1107

;; Pred edge  6 [50.0%] 
;; Pred edge  13 [50.0%] 
(code_label 117 150 118 15 45 "" [2 uses])

(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 15 include/linux/regset.h:260 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(35)
10, 14, 36, 52, 62, 63, 73, 74, 170, 178, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1124


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u158(11){ }u159(13){ }u160(25){ }u161(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(45)
10, 12, 14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 178, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124
;; rd  gen 	(1)
1
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
(code_label 120 119 121 16 47 "" [1 uses])

(note 121 120 135 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 135 121 141 16 arch/arm/kernel/ptrace.c:730 (set (reg/i:SI 0 r0)
        (reg/v:SI 140 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ ret ])
        (nil)))

(insn 141 135 125 16 arch/arm/kernel/ptrace.c:730 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(41)
1, 36, 52, 62, 63, 73, 74, 166, 170, 173, 177, 178, 184, 186, 187, 1097, 1098, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3 9) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u164(11){ }u165(13){ }u166(25){ }u167(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 171
;; live  kill	
;; rd  in  	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 176, 183, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118
;; rd  gen 	(2)
166, 1124
;; rd  kill	(21)
166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1124

;; Pred edge  3 [50.0%] 
;; Pred edge  9 [99.8%] 
(code_label 125 141 126 17 42 "" [2 uses])

(note 126 125 128 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 128 126 129 17 include/linux/regset.h:252 discrim 1 (set (reg:SI 171)
        (const_int 259 [0x103])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 17 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 171))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 144 [ pos ])
                (const_int 259 [0x103]))
            (nil))))

(jump_insn 130 129 151 17 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 11 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124


;; Succ edge  11 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  17 [50.0%]  (fallthru)
(note 151 130 152 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn 152 151 153 18 (set (pc)
        (label_ref 100)) -1 (nil))
;; End of basic block 18 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(28)
14, 16, 17, 36, 52, 62, 63, 73, 74, 166, 186, 187, 1101, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1124


;; Succ edge  14 [100.0%] 

(barrier 153 152 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function fpa_set (fpa_set)[0:1560]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)


fpa_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,3u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,2u} r149={1d,1u} 
;;    total ref usage 351{271d,78u,2e} in 37{35 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,7] 25[52,1] 26[53,1] 27[54,2] 28[56,2] 29[58,2] 30[60,2] 31[62,2] 32[64,2] 33[66,2] 34[68,2] 35[70,2] 36[72,2] 37[74,2] 38[76,2] 39[78,2] 40[80,2] 41[82,2] 42[84,2] 43[86,2] 44[88,2] 45[90,2] 46[92,2] 47[94,2] 48[96,2] 49[98,2] 50[100,2] 51[102,2] 52[104,2] 53[106,2] 54[108,2] 55[110,2] 56[112,2] 57[114,2] 58[116,2] 59[118,2] 60[120,2] 61[122,2] 62[124,2] 63[126,2] 64[128,2] 65[130,2] 66[132,2] 67[134,2] 68[136,2] 69[138,2] 70[140,2] 71[142,2] 72[144,2] 73[146,2] 74[148,2] 75[150,2] 76[152,2] 77[154,2] 78[156,2] 79[158,2] 80[160,2] 81[162,2] 82[164,2] 83[166,2] 84[168,2] 85[170,2] 86[172,2] 87[174,2] 88[176,2] 89[178,2] 90[180,2] 91[182,2] 92[184,2] 93[186,2] 94[188,2] 95[190,2] 96[192,2] 97[194,2] 98[196,2] 99[198,2] 100[200,2] 101[202,2] 102[204,2] 103[206,2] 104[208,2] 105[210,2] 106[212,2] 107[214,2] 108[216,2] 109[218,2] 110[220,2] 111[222,2] 112[224,2] 113[226,2] 114[228,2] 115[230,2] 116[232,2] 117[234,2] 118[236,2] 119[238,2] 120[240,2] 121[242,2] 122[244,2] 123[246,2] 124[248,2] 125[250,2] 126[252,2] 127[254,2] 133[256,1] 134[257,2] 135[259,3] 136[262,1] 137[263,1] 139[264,1] 141[265,1] 142[266,1] 143[267,1] 144[268,1] 145[269,1] 149[270,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d15(2){ }d18(3){ }d19(11){ }d22(12){ }d23(13){ }d26(14){ }d52(25){ }d53(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 52, 53
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d19(bb 0 insn -1) }u1(13){ d23(bb 0 insn -1) }u2(25){ d52(bb 0 insn -1) }u3(26){ d53(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144 145
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144 145
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  gen 	(8)
51, 263, 264, 265, 266, 267, 268, 269
;; rd  kill	(14)
45, 46, 47, 48, 49, 50, 51, 263, 264, 265, 266, 267, 268, 269
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(18)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d15(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 6
;;      reg 26 { d53(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 4 uid 7
;;      reg 26 { d53(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 139 { d264(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 14
;;      reg 137 { d263(bb 2 insn 11) }
;;      reg 145 { d269(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 17
;;      reg 137 { d263(bb 2 insn 11) }
;;      reg 145 { d269(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 18
;;      reg 142 { d266(bb 2 insn 5) }
;;   UD chains for insn luid 10 uid 19
;;      reg 24 { d51(bb 2 insn 18) }

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ d19(bb 0 insn -1) }u19(13){ d23(bb 0 insn -1) }u20(25){ d52(bb 0 insn -1) }u21(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
50
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 51
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(18)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 21
;;      reg 141 { d265(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 22
;;      reg 24 { d50(bb 3 insn 21) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ d19(bb 0 insn -1) }u25(13){ d23(bb 0 insn -1) }u26(25){ d52(bb 0 insn -1) }u27(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 149
;; live  kill	 24 [cc]
;; rd  in  	(18)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(4)
48, 257, 262, 270
;; rd  kill	(11)
45, 46, 47, 48, 49, 50, 51, 257, 258, 262, 270
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; rd  out 	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 24
;;      reg 141 { d265(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 25
;;      reg 134 { d258(bb 4 insn 24) }
;;      reg 142 { d266(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 26
;;      reg 137 { d263(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 27
;;      reg 141 { d265(bb 2 insn 4) }
;;      reg 149 { d270(bb 4 insn 26) }
;;   UD chains for insn luid 4 uid 28
;;      reg 143 { d267(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 29
;;      reg 24 { d48(bb 4 insn 28) }

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ d19(bb 0 insn -1) }u37(13){ d23(bb 0 insn -1) }u38(25){ d52(bb 0 insn -1) }u39(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(2)
4, 261
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 24, 25, 26, 259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(21)
4, 10, 15, 18, 19, 22, 23, 48, 52, 53, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 136 { d262(bb 4 insn 27) }
;;   UD chains for insn luid 1 uid 35
;;      reg 143 { d267(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 36
;;      reg 134 { d257(bb 4 insn 25) }
;;   UD chains for insn luid 3 uid 37
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 34) }
;;      reg 1 { d6(bb 5 insn 35) }
;;      reg 2 { d11(bb 5 insn 36) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ d19(bb 0 insn -1) }u48(13){ d23(bb 0 insn -1) }u49(25){ d52(bb 0 insn -1) }u50(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(3)
2, 45, 256
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 24, 25, 26, 45, 46, 47, 48, 49, 50, 51, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 136 { d262(bb 4 insn 27) }
;;   UD chains for insn luid 1 uid 45
;;      reg 144 { d268(bb 2 insn 7) }
;;   UD chains for insn luid 2 uid 46
;;      reg 134 { d257(bb 4 insn 25) }
;;   UD chains for insn luid 3 uid 47
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d3(bb 6 insn 44) }
;;      reg 1 { d8(bb 6 insn 45) }
;;      reg 2 { d13(bb 6 insn 46) }
;;   UD chains for insn luid 4 uid 48
;;      reg 0 { d2(bb 6 insn 47) }
;;   UD chains for insn luid 5 uid 49
;;      reg 133 { d256(bb 6 insn 48) }
;;   UD chains for insn luid 6 uid 50
;;      reg 24 { d45(bb 6 insn 49) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ d19(bb 0 insn -1) }u62(13){ d23(bb 0 insn -1) }u63(25){ d52(bb 0 insn -1) }u64(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
260
;; rd  kill	(3)
259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }

( 2 3 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ d19(bb 0 insn -1) }u66(13){ d23(bb 0 insn -1) }u67(25){ d52(bb 0 insn -1) }u68(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(25)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
259
;; rd  kill	(3)
259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(26)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }

( 8 5 7 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ d19(bb 0 insn -1) }u70(13){ d23(bb 0 insn -1) }u71(25){ d52(bb 0 insn -1) }u72(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
2, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 135 { d261(bb 5 insn 39) d260(bb 7 insn 52) d259(bb 8 insn 57) }
;;   UD chains for insn luid 1 uid 70
;;      reg 0 { d0(bb 9 insn 64) }

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u75(0){ d0(bb 9 insn 64) }u76(11){ d19(bb 0 insn -1) }u77(13){ d23(bb 0 insn -1) }u78(14){ d26(bb 0 insn -1) }u79(25){ d52(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 9 insn 64) }
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 14 { d26(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 22 to worklist
  Adding insn 29 to worklist
  Adding insn 74 to worklist
  Adding insn 37 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 76 to worklist
  Adding insn 70 to worklist
Finished finding needed instructions:
  Adding insn 64 to worklist
Processing use of (reg 135 [ D.27612 ]) in insn 64:
  Adding insn 39 to worklist
  Adding insn 52 to worklist
  Adding insn 57 to worklist
Processing use of (reg 0 r0) in insn 70:
Processing use of (reg 13 sp) in insn 47:
Processing use of (reg 0 r0) in insn 47:
  Adding insn 44 to worklist
Processing use of (reg 1 r1) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 2 r2) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 134 [ copy ]) in insn 46:
  Adding insn 25 to worklist
Processing use of (reg 134 [ copy ]) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 142 [ count ]) in insn 25:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 141 [ pos ]) in insn 24:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 144 [ ubuf ]) in insn 45:
  Adding insn 7 to worklist
Processing use of (reg 26 afp) in insn 7:
Processing use of (reg 136 [ data ]) in insn 44:
  Adding insn 27 to worklist
Processing use of (reg 141 [ pos ]) in insn 27:
Processing use of (reg 149) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 137 [ thread ]) in insn 26:
  Adding insn 11 to worklist
Processing use of (reg 139 [ target ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 133 [ D.27616 ]) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 0 r0) in insn 48:
Processing use of (reg 13 sp) in insn 37:
Processing use of (reg 0 r0) in insn 37:
  Adding insn 34 to worklist
Processing use of (reg 1 r1) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 2 r2) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 134 [ copy ]) in insn 36:
Processing use of (reg 143 [ kbuf ]) in insn 35:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 136 [ data ]) in insn 34:
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 143 [ kbuf ]) in insn 28:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 141 [ pos ]) in insn 21:
Processing use of (reg 137 [ thread ]) in insn 14:
Processing use of (subreg (reg 145) 0) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 137 [ thread ]) in insn 17:
Processing use of (subreg (reg 145) 0) in insn 17:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 142 [ count ]) in insn 18:


fpa_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,3u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,2u} r149={1d,1u} 
;;    total ref usage 351{271d,78u,2e} in 37{35 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,7] 25[52,1] 26[53,1] 27[54,2] 28[56,2] 29[58,2] 30[60,2] 31[62,2] 32[64,2] 33[66,2] 34[68,2] 35[70,2] 36[72,2] 37[74,2] 38[76,2] 39[78,2] 40[80,2] 41[82,2] 42[84,2] 43[86,2] 44[88,2] 45[90,2] 46[92,2] 47[94,2] 48[96,2] 49[98,2] 50[100,2] 51[102,2] 52[104,2] 53[106,2] 54[108,2] 55[110,2] 56[112,2] 57[114,2] 58[116,2] 59[118,2] 60[120,2] 61[122,2] 62[124,2] 63[126,2] 64[128,2] 65[130,2] 66[132,2] 67[134,2] 68[136,2] 69[138,2] 70[140,2] 71[142,2] 72[144,2] 73[146,2] 74[148,2] 75[150,2] 76[152,2] 77[154,2] 78[156,2] 79[158,2] 80[160,2] 81[162,2] 82[164,2] 83[166,2] 84[168,2] 85[170,2] 86[172,2] 87[174,2] 88[176,2] 89[178,2] 90[180,2] 91[182,2] 92[184,2] 93[186,2] 94[188,2] 95[190,2] 96[192,2] 97[194,2] 98[196,2] 99[198,2] 100[200,2] 101[202,2] 102[204,2] 103[206,2] 104[208,2] 105[210,2] 106[212,2] 107[214,2] 108[216,2] 109[218,2] 110[220,2] 111[222,2] 112[224,2] 113[226,2] 114[228,2] 115[230,2] 116[232,2] 117[234,2] 118[236,2] 119[238,2] 120[240,2] 121[242,2] 122[244,2] 123[246,2] 124[248,2] 125[250,2] 126[252,2] 127[254,2] 133[256,1] 134[257,2] 135[259,3] 136[262,1] 137[263,1] 139[264,1] 141[265,1] 142[266,1] 143[267,1] 144[268,1] 145[269,1] 149[270,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144 145
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144 145
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  gen 	(8)
51, 263, 264, 265, 266, 267, 268, 269
;; rd  kill	(14)
45, 46, 47, 48, 49, 50, 51, 263, 264, 265, 266, 267, 268, 269

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ target ])
        (nil)))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:624 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pos ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:624 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ count ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:625 (set (reg/v/f:SI 137 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ target ])
        (nil)))

(insn 12 11 14 2 arch/arm/kernel/ptrace.c:627 (set (reg:SI 145)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 14 12 17 2 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16])
        (subreg:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 17 14 18 2 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8])
        (subreg:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 18 17 19 2 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 2 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(18)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  8 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
50
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 51

;; Pred edge  2 [61.0%]  (fallthru)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 3 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 3 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(18)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 149
;; live  kill	 24 [cc]
;; rd  in  	(18)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(4)
48, 257, 262, 270
;; rd  kill	(11)
45, 46, 47, 48, 49, 50, 51, 257, 258, 262, 270

;; Pred edge  3 [61.0%]  (fallthru)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 25 24 26 4 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ count ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 26 25 27 4 include/linux/regset.h:255 (set (reg/f:SI 149)
        (plus:SI (reg/v/f:SI 137 [ thread ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 137 [ thread ])
        (nil)))

(insn 27 26 28 4 include/linux/regset.h:255 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg/f:SI 149)
            (reg/v:SI 141 [ pos ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_DEAD (reg/v:SI 141 [ pos ])
            (nil))))

(insn 28 27 29 4 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 4 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 73 [0x49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; rd  out 	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  5 [99.3%]  (fallthru)
;; Succ edge  6 [0.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(2)
4, 261
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 24, 25, 26, 259, 260, 261

;; Pred edge  4 [99.3%]  (fallthru)
(note 30 29 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 30 35 5 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ data ])
        (nil)))

(insn 35 34 36 5 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ kbuf ])
        (nil)))

(insn 36 35 37 5 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 37 36 39 5 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 39 37 74 5 include/linux/regset.h:266 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 74 39 75 5 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(21)
4, 10, 15, 18, 19, 22, 23, 48, 52, 53, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  9 [100.0%] 

(barrier 75 74 42)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(3)
2, 45, 256
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 24, 25, 26, 45, 46, 47, 48, 49, 50, 51, 256

;; Pred edge  4 [0.7%] 
(code_label 42 75 43 6 54 "" [1 uses])

(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 6 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ data ])
        (nil)))

(insn 45 44 46 6 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ ubuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ ubuf ])
        (nil)))

(insn 46 45 47 6 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 47 46 48 6 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 49 6 include/linux/regset.h:259 (set (reg:SI 133 [ D.27616 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 49 48 50 6 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27616 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.27616 ])
        (nil)))

(jump_insn 50 49 51 6 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
260
;; rd  kill	(3)
259, 260, 261

;; Pred edge  6 [39.0%]  (fallthru)
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 76 7 include/linux/regset.h:260 (set (reg:SI 135 [ D.27612 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 76 52 77 7 (set (pc)
        (label_ref 58)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  9 [100.0%] 

(barrier 77 76 55)

;; Start of basic block ( 2 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(25)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
259
;; rd  kill	(3)
259, 260, 261

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  6 [61.0%] 
(code_label 55 77 56 8 53 "" [3 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 include/linux/regset.h:250 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(26)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
2, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 58 57 59 9 55 "" [2 uses])

(note 59 58 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 59 70 9 arch/arm/kernel/ptrace.c:632 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.27612 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.27612 ])
        (nil)))

(insn 70 64 0 9 arch/arm/kernel/ptrace.c:632 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function gpr_set (gpr_set)[0:1558]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 20 count 26 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 20 count 26 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 20 count 26 (  1.9)


gpr_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={7d,3u} r2={7d,4u} r3={4d,1u} r11={1d,13u} r12={4d} r13={1d,16u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={12d,8u} r25={1d,17u,1d} r26={1d,14u,2d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={2d,3u} r138={1d,2u} r139={3d,1u} r141={1d,1u} r143={1d,3u} r144={1d,2u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u,1d} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 531{408d,119u,4e} in 61{58 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379
0[0,8] 1[8,7] 2[15,7] 3[22,4] 11[26,1] 12[27,4] 13[31,1] 14[32,4] 15[36,3] 16[39,3] 17[42,3] 18[45,3] 19[48,3] 20[51,3] 21[54,3] 22[57,3] 23[60,3] 24[63,12] 25[75,1] 26[76,1] 27[77,3] 28[80,3] 29[83,3] 30[86,3] 31[89,3] 32[92,3] 33[95,3] 34[98,3] 35[101,3] 36[104,3] 37[107,3] 38[110,3] 39[113,3] 40[116,3] 41[119,3] 42[122,3] 43[125,3] 44[128,3] 45[131,3] 46[134,3] 47[137,3] 48[140,3] 49[143,3] 50[146,3] 51[149,3] 52[152,3] 53[155,3] 54[158,3] 55[161,3] 56[164,3] 57[167,3] 58[170,3] 59[173,3] 60[176,3] 61[179,3] 62[182,3] 63[185,3] 64[188,3] 65[191,3] 66[194,3] 67[197,3] 68[200,3] 69[203,3] 70[206,3] 71[209,3] 72[212,3] 73[215,3] 74[218,3] 75[221,3] 76[224,3] 77[227,3] 78[230,3] 79[233,3] 80[236,3] 81[239,3] 82[242,3] 83[245,3] 84[248,3] 85[251,3] 86[254,3] 87[257,3] 88[260,3] 89[263,3] 90[266,3] 91[269,3] 92[272,3] 93[275,3] 94[278,3] 95[281,3] 96[284,3] 97[287,3] 98[290,3] 99[293,3] 100[296,3] 101[299,3] 102[302,3] 103[305,3] 104[308,3] 105[311,3] 106[314,3] 107[317,3] 108[320,3] 109[323,3] 110[326,3] 111[329,3] 112[332,3] 113[335,3] 114[338,3] 115[341,3] 116[344,3] 117[347,3] 118[350,3] 119[353,3] 120[356,3] 121[359,3] 122[362,3] 123[365,3] 124[368,3] 125[371,3] 126[374,3] 127[377,3] 133[380,1] 134[381,1] 135[382,1] 136[383,1] 137[384,2] 138[386,1] 139[387,3] 141[390,1] 143[391,1] 144[392,1] 145[393,1] 146[394,1] 147[395,1] 152[396,1] 154[397,1] 155[398,1] 156[399,1] 157[400,1] 159[401,1] 161[402,1] 162[403,1] 163[404,1] 164[405,1] 166[406,1] 167[407,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d14(1){ }d21(2){ }d25(3){ }d26(11){ }d30(12){ }d31(13){ }d35(14){ }d75(25){ }d76(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
7, 14, 21, 25, 26, 30, 31, 35, 75, 76
;; rd  kill	(38)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 75, 76
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
7, 14, 21, 25, 26, 30, 31, 35, 75, 76

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d26(bb 0 insn -1) }u1(13){ d31(bb 0 insn -1) }u2(25){ d75(bb 0 insn -1) }u3(26){ d76(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 145 146
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 145 146
;; live  kill	
;; rd  in  	(10)
7, 14, 21, 25, 26, 30, 31, 35, 75, 76
;; rd  gen 	(6)
74, 390, 391, 392, 393, 394
;; rd  kill	(17)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 390, 391, 392, 393, 394
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; rd  out 	(16)
7, 14, 21, 25, 26, 30, 31, 35, 74, 75, 76, 390, 391, 392, 393, 394
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 6
;;      reg 26 { d76(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 4 uid 7
;;      reg 26 { d76(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 144 { d392(bb 2 insn 5) }
;;   UD chains for insn luid 6 uid 12
;;      reg 24 { d74(bb 2 insn 11) }

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ d26(bb 0 insn -1) }u14(13){ d31(bb 0 insn -1) }u15(25){ d75(bb 0 insn -1) }u16(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
7, 14, 21, 25, 26, 30, 31, 35, 74, 75, 76, 390, 391, 392, 393, 394
;; rd  gen 	(1)
73
;; rd  kill	(12)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; rd  out 	(16)
7, 14, 21, 25, 26, 30, 31, 35, 73, 75, 76, 390, 391, 392, 393, 394
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 143 { d391(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 15
;;      reg 24 { d73(bb 3 insn 14) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d26(bb 0 insn -1) }u20(13){ d31(bb 0 insn -1) }u21(25){ d75(bb 0 insn -1) }u22(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 145
;; lr  def 	 24 [cc] 137 138 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  gen 	 24 [cc] 137 138 147
;; live  kill	 24 [cc]
;; rd  in  	(16)
7, 14, 21, 25, 26, 30, 31, 35, 73, 75, 76, 390, 391, 392, 393, 394
;; rd  gen 	(4)
71, 384, 386, 395
;; rd  kill	(16)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 384, 385, 386, 395
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145 146
;; rd  out 	(19)
7, 14, 21, 25, 26, 30, 31, 35, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 143 { d391(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 18
;;      reg 137 { d385(bb 4 insn 17) }
;;      reg 144 { d392(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 19
;;      reg 25 { d75(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 20
;;      reg 143 { d391(bb 2 insn 4) }
;;      reg 147 { d395(bb 4 insn 19) }
;;   UD chains for insn luid 4 uid 21
;;      reg 145 { d393(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 22
;;      reg 24 { d71(bb 4 insn 21) }

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ d26(bb 0 insn -1) }u32(13){ d31(bb 0 insn -1) }u33(25){ d75(bb 0 insn -1) }u34(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(19)
7, 14, 21, 25, 26, 30, 31, 35, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(1)
6
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(18)
6, 14, 21, 25, 26, 30, 31, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 27
;;      reg 138 { d386(bb 4 insn 20) }
;;   UD chains for insn luid 1 uid 28
;;      reg 145 { d393(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 29
;;      reg 137 { d384(bb 4 insn 18) }
;;   UD chains for insn luid 3 uid 30
;;      reg 13 { d31(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 27) }
;;      reg 1 { d8(bb 5 insn 28) }
;;      reg 2 { d16(bb 5 insn 29) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ d26(bb 0 insn -1) }u43(13){ d31(bb 0 insn -1) }u44(25){ d75(bb 0 insn -1) }u45(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(19)
7, 14, 21, 25, 26, 30, 31, 35, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(3)
4, 68, 383
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 383
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(19)
4, 14, 21, 25, 26, 30, 31, 68, 75, 76, 383, 384, 386, 390, 391, 392, 393, 394, 395
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 138 { d386(bb 4 insn 20) }
;;   UD chains for insn luid 1 uid 37
;;      reg 146 { d394(bb 2 insn 7) }
;;   UD chains for insn luid 2 uid 38
;;      reg 137 { d384(bb 4 insn 18) }
;;   UD chains for insn luid 3 uid 39
;;      reg 13 { d31(bb 0 insn -1) }
;;      reg 0 { d5(bb 6 insn 36) }
;;      reg 1 { d12(bb 6 insn 37) }
;;      reg 2 { d19(bb 6 insn 38) }
;;   UD chains for insn luid 4 uid 40
;;      reg 0 { d4(bb 6 insn 39) }
;;   UD chains for insn luid 5 uid 41
;;      reg 136 { d383(bb 6 insn 40) }
;;   UD chains for insn luid 6 uid 42
;;      reg 24 { d68(bb 6 insn 41) }

( 6 )->[7]->( 13 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ d26(bb 0 insn -1) }u57(13){ d31(bb 0 insn -1) }u58(25){ d75(bb 0 insn -1) }u59(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(19)
4, 14, 21, 25, 26, 30, 31, 68, 75, 76, 383, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(1)
389
;; rd  kill	(3)
387, 388, 389
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(20)
4, 14, 21, 25, 26, 30, 31, 68, 75, 76, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }

( 2 3 6 5 )->[8]->( 9 12 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ d26(bb 0 insn -1) }u61(13){ d31(bb 0 insn -1) }u62(25){ d75(bb 0 insn -1) }u63(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 133 134 152
;; live  kill	
;; rd  in  	(25)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 68, 71, 73, 74, 75, 76, 383, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(4)
67, 380, 381, 396
;; rd  kill	(15)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 380, 381, 396
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; rd  out 	(25)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 67, 75, 76, 380, 381, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 25 { d75(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 50
;;      reg 133 { d380(bb 8 insn 49) }
;;   UD chains for insn luid 2 uid 51
;;      reg 133 { d380(bb 8 insn 49) }
;;   UD chains for insn luid 3 uid 52
;;      reg 152 { d396(bb 8 insn 51) }
;;   UD chains for insn luid 4 uid 53
;;      reg 24 { d67(bb 8 insn 52) }

( 8 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ d26(bb 0 insn -1) }u70(13){ d31(bb 0 insn -1) }u71(25){ d75(bb 0 insn -1) }u72(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(25)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 67, 75, 76, 380, 381, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396
;; rd  gen 	(2)
66, 382
;; rd  kill	(13)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 382
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; rd  out 	(26)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 66, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 133 { d380(bb 8 insn 49) }
;;   UD chains for insn luid 1 uid 56
;;      reg 135 { d382(bb 9 insn 55) }
;;   UD chains for insn luid 2 uid 57
;;      reg 24 { d66(bb 9 insn 56) }

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ d26(bb 0 insn -1) }u77(13){ d31(bb 0 insn -1) }u78(25){ d75(bb 0 insn -1) }u79(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 154 155 156 157 159 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; live  gen 	 24 [cc] 154 155 156 157 159 161 162 163
;; live  kill	
;; rd  in  	(26)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 66, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396
;; rd  gen 	(9)
64, 397, 398, 399, 400, 401, 402, 403, 404
;; rd  kill	(20)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 397, 398, 399, 400, 401, 402, 403, 404
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(34)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 59
;;      reg 135 { d382(bb 9 insn 55) }
;;   UD chains for insn luid 1 uid 60
;;      reg 24 { d65(bb 10 insn 59) }
;;   UD chains for insn luid 3 uid 63
;;      reg 155 { d398(bb 10 insn 62) }
;;   UD chains for insn luid 4 uid 64
;;      reg 157 { d400(bb 10 insn 63) }
;;   UD chains for insn luid 5 uid 66
;;      reg 156 { d399(bb 10 insn 64) }
;;   UD chains for insn luid 6 uid 68
;;      reg 154 { d397(bb 10 insn 60) }
;;      reg 159 { d401(bb 10 insn 66) }
;;   UD chains for insn luid 7 uid 69
;;      reg 161 { d402(bb 10 insn 68) }
;;   UD chains for insn luid 8 uid 70
;;      reg 162 { d403(bb 10 insn 69) }
;;   UD chains for insn luid 9 uid 71
;;      reg 163 { d404(bb 10 insn 70) }
;;   UD chains for insn luid 10 uid 72
;;      reg 24 { d64(bb 10 insn 71) }

( 9 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(11){ d26(bb 0 insn -1) }u92(13){ d31(bb 0 insn -1) }u93(25){ d75(bb 0 insn -1) }u94(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 164 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 139 164 166 167
;; live  kill	 14 [lr]
;; rd  in  	(35)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 66, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404
;; rd  gen 	(5)
2, 388, 405, 406, 407
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 387, 388, 389, 405, 406, 407
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(36)
2, 14, 21, 25, 26, 30, 31, 64, 66, 75, 76, 380, 381, 382, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 25 { d75(bb 0 insn -1) }
;;      reg 134 { d381(bb 8 insn 50) }
;;   UD chains for insn luid 1 uid 76
;;      reg 141 { d390(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 78
;;      reg 164 { d405(bb 11 insn 76) }
;;   eq_note reg 164 { }
;;   UD chains for insn luid 3 uid 79
;;      reg 25 { d75(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 81
;;      reg 166 { d406(bb 11 insn 78) }
;;   UD chains for insn luid 5 uid 82
;;      reg 167 { d407(bb 11 insn 79) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 7 uid 84
;;      reg 13 { d31(bb 0 insn -1) }
;;      reg 0 { d3(bb 11 insn 81) }
;;      reg 1 { d10(bb 11 insn 82) }
;;      reg 2 { d15(bb 11 insn 83) }

( 8 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u108(11){ d26(bb 0 insn -1) }u109(13){ d31(bb 0 insn -1) }u110(25){ d75(bb 0 insn -1) }u111(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(35)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 67, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404
;; rd  gen 	(1)
387
;; rd  kill	(3)
387, 388, 389
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(36)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 67, 75, 76, 380, 381, 382, 383, 384, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }

( 12 7 11 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u112(11){ d26(bb 0 insn -1) }u113(13){ d31(bb 0 insn -1) }u114(25){ d75(bb 0 insn -1) }u115(26){ d76(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(44)
2, 4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 66, 67, 68, 75, 76, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407
;; rd  gen 	(1)
0
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(41)
0, 14, 21, 25, 26, 30, 31, 35, 64, 66, 67, 68, 75, 76, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407
;;  UD chains for artificial uses
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }
;;   reg 26 { d76(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 98
;;      reg 139 { d389(bb 7 insn 44) d388(bb 11 insn 86) d387(bb 12 insn 91) }
;;   UD chains for insn luid 1 uid 104
;;      reg 0 { d0(bb 13 insn 98) }

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u118(0){ d0(bb 13 insn 98) }u119(11){ d26(bb 0 insn -1) }u120(13){ d31(bb 0 insn -1) }u121(14){ d35(bb 0 insn -1) }u122(25){ d75(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(41)
0, 14, 21, 25, 26, 30, 31, 35, 64, 66, 67, 68, 75, 76, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(41)
0, 14, 21, 25, 26, 30, 31, 35, 64, 66, 67, 68, 75, 76, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 13 insn 98) }
;;   reg 11 { d26(bb 0 insn -1) }
;;   reg 13 { d31(bb 0 insn -1) }
;;   reg 14 { d35(bb 0 insn -1) }
;;   reg 25 { d75(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 108 to worklist
  Adding insn 30 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 110 to worklist
  Adding insn 53 to worklist
  Adding insn 57 to worklist
  Adding insn 72 to worklist
  Adding insn 112 to worklist
  Adding insn 84 to worklist
  Adding insn 75 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
  Adding insn 98 to worklist
Processing use of (reg 139 [ ret ]) in insn 98:
  Adding insn 44 to worklist
  Adding insn 86 to worklist
  Adding insn 91 to worklist
Processing use of (reg 0 r0) in insn 104:
Processing use of (reg 25 sfp) in insn 75:
Processing use of (reg 134 [ D.27666 ]) in insn 75:
  Adding insn 50 to worklist
Processing use of (reg 133 [ D.27667 ]) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 25 sfp) in insn 49:
Processing use of (reg 13 sp) in insn 84:
Processing use of (reg 0 r0) in insn 84:
  Adding insn 81 to worklist
Processing use of (reg 1 r1) in insn 84:
  Adding insn 82 to worklist
Processing use of (reg 2 r2) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 167) in insn 82:
  Adding insn 79 to worklist
Processing use of (reg 25 sfp) in insn 79:
Processing use of (reg 166) in insn 81:
  Adding insn 78 to worklist
Processing use of (reg 164 [ <variable>.stack ]) in insn 78:
  Adding insn 76 to worklist
Processing use of (reg 141 [ target ]) in insn 76:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 163) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 162) in insn 70:
  Adding insn 69 to worklist
Processing use of (subreg (reg 161) 0) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 154) in insn 68:
  Adding insn 60 to worklist
Processing use of (reg 159) in insn 68:
  Adding insn 66 to worklist
Processing use of (reg 156) in insn 66:
  Adding insn 64 to worklist
Processing use of (reg 157 [ elf_hwcap ]) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 155) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 24 cc) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 135 [ mode ]) in insn 59:
  Adding insn 55 to worklist
Processing use of (reg 133 [ D.27667 ]) in insn 55:
Processing use of (reg 24 cc) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 135 [ mode ]) in insn 56:
Processing use of (reg 24 cc) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 152) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 133 [ D.27667 ]) in insn 51:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 0 r0) in insn 39:
  Adding insn 36 to worklist
Processing use of (reg 1 r1) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 2 r2) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 137 [ copy ]) in insn 38:
  Adding insn 18 to worklist
Processing use of (reg 137 [ copy ]) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 144 [ count ]) in insn 18:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 143 [ pos ]) in insn 17:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 146 [ ubuf ]) in insn 37:
  Adding insn 7 to worklist
Processing use of (reg 26 afp) in insn 7:
Processing use of (reg 138 [ data ]) in insn 36:
  Adding insn 20 to worklist
Processing use of (reg 143 [ pos ]) in insn 20:
Processing use of (reg 147) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 25 sfp) in insn 19:
Processing use of (reg 24 cc) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 136 [ D.27641 ]) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 0 r0) in insn 40:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 1 r1) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 2 r2) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 137 [ copy ]) in insn 29:
Processing use of (reg 145 [ kbuf ]) in insn 28:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 138 [ data ]) in insn 27:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 145 [ kbuf ]) in insn 21:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 143 [ pos ]) in insn 14:
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 144 [ count ]) in insn 11:


gpr_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={7d,3u} r2={7d,4u} r3={4d,1u} r11={1d,13u} r12={4d} r13={1d,16u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={12d,8u} r25={1d,17u,1d} r26={1d,14u,2d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={2d,3u} r138={1d,2u} r139={3d,1u} r141={1d,1u} r143={1d,3u} r144={1d,2u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r152={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u,1d} r166={1d,1u} r167={1d,1u} 
;;    total ref usage 531{408d,119u,4e} in 61{58 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379
0[0,8] 1[8,7] 2[15,7] 3[22,4] 11[26,1] 12[27,4] 13[31,1] 14[32,4] 15[36,3] 16[39,3] 17[42,3] 18[45,3] 19[48,3] 20[51,3] 21[54,3] 22[57,3] 23[60,3] 24[63,12] 25[75,1] 26[76,1] 27[77,3] 28[80,3] 29[83,3] 30[86,3] 31[89,3] 32[92,3] 33[95,3] 34[98,3] 35[101,3] 36[104,3] 37[107,3] 38[110,3] 39[113,3] 40[116,3] 41[119,3] 42[122,3] 43[125,3] 44[128,3] 45[131,3] 46[134,3] 47[137,3] 48[140,3] 49[143,3] 50[146,3] 51[149,3] 52[152,3] 53[155,3] 54[158,3] 55[161,3] 56[164,3] 57[167,3] 58[170,3] 59[173,3] 60[176,3] 61[179,3] 62[182,3] 63[185,3] 64[188,3] 65[191,3] 66[194,3] 67[197,3] 68[200,3] 69[203,3] 70[206,3] 71[209,3] 72[212,3] 73[215,3] 74[218,3] 75[221,3] 76[224,3] 77[227,3] 78[230,3] 79[233,3] 80[236,3] 81[239,3] 82[242,3] 83[245,3] 84[248,3] 85[251,3] 86[254,3] 87[257,3] 88[260,3] 89[263,3] 90[266,3] 91[269,3] 92[272,3] 93[275,3] 94[278,3] 95[281,3] 96[284,3] 97[287,3] 98[290,3] 99[293,3] 100[296,3] 101[299,3] 102[302,3] 103[305,3] 104[308,3] 105[311,3] 106[314,3] 107[317,3] 108[320,3] 109[323,3] 110[326,3] 111[329,3] 112[332,3] 113[335,3] 114[338,3] 115[341,3] 116[344,3] 117[347,3] 118[350,3] 119[353,3] 120[356,3] 121[359,3] 122[362,3] 123[365,3] 124[368,3] 125[371,3] 126[374,3] 127[377,3] 133[380,1] 134[381,1] 135[382,1] 136[383,1] 137[384,2] 138[386,1] 139[387,3] 141[390,1] 143[391,1] 144[392,1] 145[393,1] 146[394,1] 147[395,1] 152[396,1] 154[397,1] 155[398,1] 156[399,1] 157[400,1] 159[401,1] 161[402,1] 162[403,1] 163[404,1] 164[405,1] 166[406,1] 167[407,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 145 146
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 145 146
;; live  kill	
;; rd  in  	(10)
7, 14, 21, 25, 26, 30, 31, 35, 75, 76
;; rd  gen 	(6)
74, 390, 391, 392, 393, 394
;; rd  kill	(17)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 390, 391, 392, 393, 394

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 141 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ target ])
        (nil)))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:593 (set (reg/v:SI 143 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pos ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:593 (set (reg/v:SI 144 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ count ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 145 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 146 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; rd  out 	(16)
7, 14, 21, 25, 26, 30, 31, 35, 74, 75, 76, 390, 391, 392, 393, 394


;; Succ edge  8 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
7, 14, 21, 25, 26, 30, 31, 35, 74, 75, 76, 390, 391, 392, 393, 394
;; rd  gen 	(1)
73
;; rd  kill	(12)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74

;; Pred edge  2 [50.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ pos ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 3 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; rd  out 	(16)
7, 14, 21, 25, 26, 30, 31, 35, 73, 75, 76, 390, 391, 392, 393, 394


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 145
;; lr  def 	 24 [cc] 137 138 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  gen 	 24 [cc] 137 138 147
;; live  kill	 24 [cc]
;; rd  in  	(16)
7, 14, 21, 25, 26, 30, 31, 35, 73, 75, 76, 390, 391, 392, 393, 394
;; rd  gen 	(4)
71, 384, 386, 395
;; rd  kill	(16)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 384, 385, 386, 395

;; Pred edge  3 [50.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 143 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 18 17 19 4 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 144 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ count ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 19 18 20 4 include/linux/regset.h:255 (set (reg/f:SI 147)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 4 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg/f:SI 147)
            (reg/v:SI 143 [ pos ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_DEAD (reg/v:SI 143 [ pos ])
            (nil))))

(insn 21 20 22 4 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 4 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145 146
;; rd  out 	(19)
7, 14, 21, 25, 26, 30, 31, 35, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  6 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(19)
7, 14, 21, 25, 26, 30, 31, 35, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(1)
6
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35

;; Pred edge  4 [85.0%]  (fallthru)
(note 23 22 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 23 28 5 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
        (nil)))

(insn 28 27 29 5 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ kbuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ kbuf ])
        (nil)))

(insn 29 28 30 5 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ copy ])
        (nil)))

(call_insn 30 29 108 5 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 108 30 109 5 (set (pc)
        (label_ref 47)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(18)
6, 14, 21, 25, 26, 30, 31, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395


;; Succ edge  8 [100.0%] 

(barrier 109 108 34)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(19)
7, 14, 21, 25, 26, 30, 31, 35, 71, 75, 76, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(3)
4, 68, 383
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 383

;; Pred edge  4 [15.0%] 
(code_label 34 109 35 6 59 "" [1 uses])

(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 6 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
        (nil)))

(insn 37 36 38 6 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ ubuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ ubuf ])
        (nil)))

(insn 38 37 39 6 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ copy ])
        (nil)))

(call_insn 39 38 40 6 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 40 39 41 6 include/linux/regset.h:259 (set (reg:SI 136 [ D.27641 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 41 40 42 6 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27641 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.27641 ])
        (nil)))

(jump_insn 42 41 43 6 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; rd  out 	(19)
4, 14, 21, 25, 26, 30, 31, 68, 75, 76, 383, 384, 386, 390, 391, 392, 393, 394, 395


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(19)
4, 14, 21, 25, 26, 30, 31, 68, 75, 76, 383, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(1)
389
;; rd  kill	(3)
387, 388, 389

;; Pred edge  6 [50.0%]  (fallthru)
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 110 7 include/linux/regset.h:260 (set (reg/v:SI 139 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 110 44 111 7 (set (pc)
        (label_ref 92)) -1 (nil))
;; End of basic block 7 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(20)
4, 14, 21, 25, 26, 30, 31, 68, 75, 76, 383, 384, 386, 389, 390, 391, 392, 393, 394, 395


;; Succ edge  13 [100.0%] 

(barrier 111 110 47)

;; Start of basic block ( 2 3 6 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 133 134 152
;; live  kill	
;; rd  in  	(25)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 68, 71, 73, 74, 75, 76, 383, 384, 386, 390, 391, 392, 393, 394, 395
;; rd  gen 	(4)
67, 380, 381, 396
;; rd  kill	(15)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 380, 381, 396

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  6 [50.0%] 
;; Pred edge  5 [100.0%] 
(code_label 47 111 48 8 58 "" [4 uses])

(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 133 [ D.27667 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 134 [ D.27666 ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int -321 [0xfffffffffffffebf]))) 67 {*arm_andsi3_insn} (nil))

(insn 51 50 52 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 152)
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 52 51 53 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(jump_insn 53 52 54 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; rd  out 	(25)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 67, 75, 76, 380, 381, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(25)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 67, 75, 76, 380, 381, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396
;; rd  gen 	(2)
66, 382
;; rd  kill	(13)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 382

;; Pred edge  8 [50.0%]  (fallthru)
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.27667 ])
        (nil)))

(insn 56 55 57 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 57 56 58 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; rd  out 	(26)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 66, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396


;; Succ edge  11 [28.0%] 
;; Succ edge  10 [72.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 154 155 156 157 159 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; live  gen 	 24 [cc] 154 155 156 157 159 161 162 163
;; live  kill	
;; rd  in  	(26)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 66, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396
;; rd  gen 	(9)
64, 397, 398, 399, 400, 401, 402, 403, 404
;; rd  kill	(20)
63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 397, 398, 399, 400, 401, 402, 403, 404

;; Pred edge  9 [72.0%]  (fallthru)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ mode ])
        (nil)))

(insn 60 59 62 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 154)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 62 60 63 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 155)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 157 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 155) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
            (nil))))

(insn 64 63 66 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 156)
        (lshiftrt:SI (reg:SI 157 [ elf_hwcap ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 157 [ elf_hwcap ])
        (nil)))

(insn 66 64 68 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 159)
        (and:SI (reg:SI 156)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 68 66 69 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 161)
        (and:SI (reg:SI 154)
            (reg:SI 159))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 159)
        (expr_list:REG_DEAD (reg:SI 154)
            (nil))))

(insn 69 68 70 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 162)
        (subreg:QI (reg:SI 161) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 70 69 71 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (zero_extend:SI (reg:QI 162))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 162)
        (nil)))

(insn 71 70 72 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(jump_insn 72 71 73 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(34)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 164 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 139 164 166 167
;; live  kill	 14 [lr]
;; rd  in  	(35)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 66, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404
;; rd  gen 	(5)
2, 388, 405, 406, 407
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 32, 33, 34, 35, 387, 388, 389, 405, 406, 407

;; Pred edge  9 [28.0%] 
;; Pred edge  10 [50.0%]  (fallthru)
(code_label 73 72 74 11 62 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])
        (reg:SI 134 [ D.27666 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.27666 ])
        (nil)))

(insn 76 75 78 11 arch/arm/kernel/ptrace.c:606 (set (reg/f:SI 164 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ target ])
        (nil)))

(insn 78 76 79 11 arch/arm/kernel/ptrace.c:606 (set (reg/f:SI 166)
        (plus:SI (reg/f:SI 164 [ <variable>.stack ])
            (const_int 8112 [0x1fb0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 164 [ <variable>.stack ])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 164 [ <variable>.stack ])
                (const_int 8112 [0x1fb0]))
            (nil))))

(insn 79 78 81 11 arch/arm/kernel/ptrace.c:606 (set (reg/f:SI 167)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 81 79 82 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 0 r0)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))

(insn 82 81 83 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 1 r1)
        (reg/f:SI 167)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 167)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))

(insn 83 82 84 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(call_insn 84 83 86 11 arch/arm/kernel/ptrace.c:606 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 86 84 112 11 arch/arm/kernel/ptrace.c:607 (set (reg/v:SI 139 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 112 86 113 11 arch/arm/kernel/ptrace.c:607 (set (pc)
        (label_ref 92)) -1 (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; rd  out 	(36)
2, 14, 21, 25, 26, 30, 31, 64, 66, 75, 76, 380, 381, 382, 383, 384, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407


;; Succ edge  13 [100.0%] 

(barrier 113 112 89)

;; Start of basic block ( 8 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	
;; rd  in  	(35)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 67, 75, 76, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404
;; rd  gen 	(1)
387
;; rd  kill	(3)
387, 388, 389

;; Pred edge  8 [50.0%] 
;; Pred edge  10 [50.0%] 
(code_label 89 113 90 12 61 "" [2 uses])

(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 12 arch/arm/kernel/ptrace.c:604 (set (reg/v:SI 139 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(36)
4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 67, 75, 76, 380, 381, 382, 383, 384, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 7 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(44)
2, 4, 6, 7, 14, 21, 25, 26, 30, 31, 35, 64, 66, 67, 68, 75, 76, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407
;; rd  gen 	(1)
0
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 6, 7

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 92 91 93 13 60 "" [2 uses])

(note 93 92 98 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 98 93 104 13 arch/arm/kernel/ptrace.c:608 (set (reg/i:SI 0 r0)
        (reg/v:SI 139 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ ret ])
        (nil)))

(insn 104 98 0 13 arch/arm/kernel/ptrace.c:608 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 13 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(41)
0, 14, 21, 25, 26, 30, 31, 35, 64, 66, 67, 68, 75, 76, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function clear_ptrace_hw_breakpoint (clear_ptrace_hw_breakpoint)[0:1551]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


clear_ptrace_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 144{130d,14u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 133[128,1] 134[129,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d14(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(2)
128, 129
;; rd  kill	(2)
128, 129
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 133 { d128(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d129(bb 2 insn 6) }
;;   UD chains for insn luid 4 uid 9
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 7) }
;;      reg 1 { d4(bb 2 insn 8) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(11){ d10(bb 0 insn -1) }u11(13){ d13(bb 0 insn -1) }u12(14){ d14(bb 0 insn -1) }u13(25){ d25(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 0 r0) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 1 r1) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 134) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 133 [ tsk ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:


clear_ptrace_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 144{130d,14u,0e} in 5{4 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,1] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 133[128,1] 134[129,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26
;; rd  gen 	(2)
128, 129
;; rd  kill	(2)
128, 129

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:406 (set (reg/v/f:SI 133 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg/f:SI 134)
        (plus:SI (reg/v/f:SI 133 [ tsk ])
            (const_int 796 [0x31c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 133 [ tsk ])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 9 8 10 2 arch/arm/kernel/ptrace.c:407 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(12)
2, 5, 7, 9, 10, 12, 13, 14, 25, 26, 128, 129


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 10 9 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_get (vfp_get)[0:1561]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 33 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 36 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 19 n_edges 26 count 36 (  1.9)


vfp_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,11u} r1={12d,5u} r2={11d,5u} r3={7d,1u} r11={1d,18u} r12={7d} r13={1d,24u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={17d,9u} r25={1d,18u} r26={1d,19u,2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,3u} r140={3d,1u} r142={1d,1u} r144={2d,8u,1d} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,1u} r155={1d,1u} r156={1d,1u} r162={1d,1u} 
;;    total ref usage 924{764d,157u,3e} in 70{64 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738
0[0,14] 1[14,12] 2[26,11] 3[37,7] 11[44,1] 12[45,7] 13[52,1] 14[53,7] 15[60,6] 16[66,6] 17[72,6] 18[78,6] 19[84,6] 20[90,6] 21[96,6] 22[102,6] 23[108,6] 24[114,17] 25[131,1] 26[132,1] 27[133,6] 28[139,6] 29[145,6] 30[151,6] 31[157,6] 32[163,6] 33[169,6] 34[175,6] 35[181,6] 36[187,6] 37[193,6] 38[199,6] 39[205,6] 40[211,6] 41[217,6] 42[223,6] 43[229,6] 44[235,6] 45[241,6] 46[247,6] 47[253,6] 48[259,6] 49[265,6] 50[271,6] 51[277,6] 52[283,6] 53[289,6] 54[295,6] 55[301,6] 56[307,6] 57[313,6] 58[319,6] 59[325,6] 60[331,6] 61[337,6] 62[343,6] 63[349,6] 64[355,6] 65[361,6] 66[367,6] 67[373,6] 68[379,6] 69[385,6] 70[391,6] 71[397,6] 72[403,6] 73[409,6] 74[415,6] 75[421,6] 76[427,6] 77[433,6] 78[439,6] 79[445,6] 80[451,6] 81[457,6] 82[463,6] 83[469,6] 84[475,6] 85[481,6] 86[487,6] 87[493,6] 88[499,6] 89[505,6] 90[511,6] 91[517,6] 92[523,6] 93[529,6] 94[535,6] 95[541,6] 96[547,6] 97[553,6] 98[559,6] 99[565,6] 100[571,6] 101[577,6] 102[583,6] 103[589,6] 104[595,6] 105[601,6] 106[607,6] 107[613,6] 108[619,6] 109[625,6] 110[631,6] 111[637,6] 112[643,6] 113[649,6] 114[655,6] 115[661,6] 116[667,6] 117[673,6] 118[679,6] 119[685,6] 120[691,6] 121[697,6] 122[703,6] 123[709,6] 124[715,6] 125[721,6] 126[727,6] 127[733,6] 133[739,1] 134[740,2] 135[742,1] 136[743,1] 137[744,2] 138[746,1] 139[747,1] 140[748,3] 142[751,1] 144[752,2] 145[754,2] 146[756,2] 147[758,2] 148[760,1] 155[761,1] 156[762,1] 162[763,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d13(0){ }d25(1){ }d36(2){ }d43(3){ }d44(11){ }d51(12){ }d52(13){ }d59(14){ }d131(25){ }d132(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
13, 25, 36, 43, 44, 51, 52, 59, 131, 132
;; rd  kill	(62)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 131, 132
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
13, 25, 36, 43, 44, 51, 52, 59, 131, 132

( 0 )->[2]->( 15 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d44(bb 0 insn -1) }u1(13){ d52(bb 0 insn -1) }u2(25){ d131(bb 0 insn -1) }u3(26){ d132(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 144 145 146 147
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 142 144 145 146 147
;; live  kill	 14 [lr]
;; rd  in  	(10)
13, 25, 36, 43, 44, 51, 52, 59, 131, 132
;; rd  gen 	(7)
129, 747, 751, 753, 755, 757, 759
;; rd  kill	(34)
53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(16)
13, 25, 36, 43, 44, 51, 52, 129, 131, 132, 747, 751, 753, 755, 757, 759
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d13(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d36(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 6
;;      reg 26 { d132(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 4 uid 7
;;      reg 26 { d132(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 142 { d751(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 139 { d747(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d12(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 14
;;      reg 145 { d755(bb 2 insn 5) }
;;   UD chains for insn luid 9 uid 15
;;      reg 24 { d129(bb 2 insn 14) }

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ d44(bb 0 insn -1) }u18(13){ d52(bb 0 insn -1) }u19(25){ d131(bb 0 insn -1) }u20(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
13, 25, 36, 43, 44, 51, 52, 129, 131, 132, 747, 751, 753, 755, 757, 759
;; rd  gen 	(1)
128
;; rd  kill	(17)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(16)
13, 25, 36, 43, 44, 51, 52, 128, 131, 132, 747, 751, 753, 755, 757, 759
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 144 { d753(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 18
;;      reg 24 { d128(bb 3 insn 17) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ d44(bb 0 insn -1) }u24(13){ d52(bb 0 insn -1) }u25(25){ d131(bb 0 insn -1) }u26(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146
;; lr  def 	 24 [cc] 137 138 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 137 138 148
;; live  kill	 24 [cc]
;; rd  in  	(16)
13, 25, 36, 43, 44, 51, 52, 128, 131, 132, 747, 751, 753, 755, 757, 759
;; rd  gen 	(4)
126, 744, 746, 760
;; rd  kill	(21)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 744, 745, 746, 760
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; rd  out 	(19)
13, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 757, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 144 { d753(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 21
;;      reg 137 { d745(bb 4 insn 20) }
;;      reg 145 { d755(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 22
;;      reg 139 { d747(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 23
;;      reg 144 { d753(bb 2 insn 4) }
;;      reg 148 { d760(bb 4 insn 22) }
;;   UD chains for insn luid 4 uid 24
;;      reg 146 { d757(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 25
;;      reg 24 { d126(bb 4 insn 24) }

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ d44(bb 0 insn -1) }u36(13){ d52(bb 0 insn -1) }u37(25){ d131(bb 0 insn -1) }u38(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 146
;; live  kill	 14 [lr]
;; rd  in  	(19)
13, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 757, 759, 760
;; rd  gen 	(2)
10, 756
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 756, 757
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(19)
10, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 756, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 146 { d757(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 31
;;      reg 138 { d746(bb 4 insn 23) }
;;   UD chains for insn luid 2 uid 32
;;      reg 137 { d744(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 33
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d3(bb 5 insn 30) }
;;      reg 1 { d16(bb 5 insn 31) }
;;      reg 2 { d27(bb 5 insn 32) }
;;   UD chains for insn luid 4 uid 35
;;      reg 137 { d744(bb 4 insn 21) }
;;      reg 146 { d757(bb 2 insn 6) }

( 4 )->[6]->( 14 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(11){ d44(bb 0 insn -1) }u49(13){ d52(bb 0 insn -1) }u50(25){ d131(bb 0 insn -1) }u51(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(19)
13, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 757, 759, 760
;; rd  gen 	(3)
8, 123, 743
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 743
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(20)
8, 25, 36, 43, 44, 51, 52, 123, 131, 132, 743, 744, 746, 747, 751, 753, 755, 757, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 147 { d759(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 41
;;      reg 138 { d746(bb 4 insn 23) }
;;   UD chains for insn luid 2 uid 42
;;      reg 137 { d744(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 43
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d9(bb 6 insn 40) }
;;      reg 1 { d22(bb 6 insn 41) }
;;      reg 2 { d33(bb 6 insn 42) }
;;   UD chains for insn luid 4 uid 44
;;      reg 0 { d8(bb 6 insn 43) }
;;   UD chains for insn luid 5 uid 45
;;      reg 136 { d743(bb 6 insn 44) }
;;   UD chains for insn luid 6 uid 46
;;      reg 24 { d123(bb 6 insn 45) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ d44(bb 0 insn -1) }u63(13){ d52(bb 0 insn -1) }u64(25){ d131(bb 0 insn -1) }u65(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 147
;; live  kill	
;; rd  in  	(20)
8, 25, 36, 43, 44, 51, 52, 123, 131, 132, 743, 744, 746, 747, 751, 753, 755, 757, 759, 760
;; rd  gen 	(1)
758
;; rd  kill	(2)
758, 759
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(20)
8, 25, 36, 43, 44, 51, 52, 123, 131, 132, 743, 744, 746, 747, 751, 753, 755, 757, 758, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 137 { d744(bb 4 insn 21) }
;;      reg 147 { d759(bb 2 insn 7) }

( 7 5 )->[8]->( 15 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u68(11){ d44(bb 0 insn -1) }u69(13){ d52(bb 0 insn -1) }u70(25){ d131(bb 0 insn -1) }u71(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 145
;; lr  def 	 24 [cc] 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 144 145
;; live  kill	
;; rd  in  	(24)
8, 10, 25, 36, 43, 44, 51, 52, 123, 126, 131, 132, 743, 744, 746, 747, 751, 753, 755, 756, 757, 758, 759, 760
;; rd  gen 	(3)
122, 752, 754
;; rd  kill	(21)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 752, 753, 754, 755
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(23)
8, 10, 25, 36, 43, 44, 51, 52, 122, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 51
;;      reg 137 { d744(bb 4 insn 21) }
;;      reg 144 { d753(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 52
;;      reg 137 { d744(bb 4 insn 21) }
;;      reg 145 { d755(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 53
;;      reg 145 { d754(bb 8 insn 52) }
;;   UD chains for insn luid 3 uid 54
;;      reg 24 { d122(bb 8 insn 53) }

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u78(11){ d44(bb 0 insn -1) }u79(13){ d52(bb 0 insn -1) }u80(25){ d131(bb 0 insn -1) }u81(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
8, 10, 25, 36, 43, 44, 51, 52, 122, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760
;; rd  gen 	(1)
121
;; rd  kill	(17)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(23)
8, 10, 25, 36, 43, 44, 51, 52, 121, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 144 { d752(bb 8 insn 51) }
;;   UD chains for insn luid 1 uid 57
;;      reg 24 { d121(bb 9 insn 56) }

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ d44(bb 0 insn -1) }u85(13){ d52(bb 0 insn -1) }u86(25){ d131(bb 0 insn -1) }u87(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(23)
8, 10, 25, 36, 43, 44, 51, 52, 121, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760
;; rd  gen 	(0)

;; rd  kill	(7)
53, 54, 55, 56, 57, 58, 59
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
8, 10, 25, 36, 43, 44, 51, 52, 121, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 63
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d0(bb 10 insn 61) }
;;      reg 1 { d14(bb 10 insn 62) }

( 17 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(11){ d44(bb 0 insn -1) }u92(13){ d52(bb 0 insn -1) }u93(25){ d131(bb 0 insn -1) }u94(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146
;; lr  def 	 24 [cc] 134 135 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 134 135 155 156
;; live  kill	 24 [cc]
;; rd  in  	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763
;; rd  gen 	(5)
118, 740, 742, 761, 762
;; rd  kill	(22)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 740, 741, 742, 761, 762
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146 147
;; rd  out 	(31)
8, 10, 13, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 66
;;      reg 144 { d753(bb 2 insn 4) d752(bb 8 insn 51) }
;;   UD chains for insn luid 1 uid 67
;;      reg 134 { d741(bb 11 insn 66) }
;;      reg 145 { d755(bb 2 insn 5) d754(bb 8 insn 52) }
;;   UD chains for insn luid 2 uid 68
;;      reg 139 { d747(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 69
;;      reg 144 { d753(bb 2 insn 4) d752(bb 8 insn 51) }
;;   UD chains for insn luid 4 uid 70
;;      reg 155 { d761(bb 11 insn 68) }
;;      reg 156 { d762(bb 11 insn 69) }
;;   UD chains for insn luid 5 uid 71
;;      reg 146 { d757(bb 2 insn 6) d756(bb 5 insn 35) }
;;   UD chains for insn luid 6 uid 72
;;      reg 24 { d118(bb 11 insn 71) }

( 11 )->[12]->( 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u104(11){ d44(bb 0 insn -1) }u105(13){ d52(bb 0 insn -1) }u106(25){ d131(bb 0 insn -1) }u107(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140
;; live  kill	 14 [lr]
;; rd  in  	(31)
8, 10, 13, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(2)
6, 750
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 748, 749, 750
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(30)
6, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 146 { d757(bb 2 insn 6) d756(bb 5 insn 35) }
;;   UD chains for insn luid 1 uid 78
;;      reg 135 { d742(bb 11 insn 70) }
;;   UD chains for insn luid 2 uid 79
;;      reg 134 { d740(bb 11 insn 67) }
;;   UD chains for insn luid 3 uid 80
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d2(bb 12 insn 77) }
;;      reg 1 { d15(bb 12 insn 78) }
;;      reg 2 { d26(bb 12 insn 79) }

( 11 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ d44(bb 0 insn -1) }u116(13){ d52(bb 0 insn -1) }u117(25){ d131(bb 0 insn -1) }u118(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(31)
8, 10, 13, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(3)
4, 115, 739
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 739
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
4, 25, 36, 43, 44, 51, 52, 115, 131, 132, 739, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 87
;;      reg 147 { d759(bb 2 insn 7) d758(bb 7 insn 48) }
;;   UD chains for insn luid 1 uid 88
;;      reg 135 { d742(bb 11 insn 70) }
;;   UD chains for insn luid 2 uid 89
;;      reg 134 { d740(bb 11 insn 67) }
;;   UD chains for insn luid 3 uid 90
;;      reg 13 { d52(bb 0 insn -1) }
;;      reg 0 { d5(bb 13 insn 87) }
;;      reg 1 { d18(bb 13 insn 88) }
;;      reg 2 { d29(bb 13 insn 89) }
;;   UD chains for insn luid 4 uid 91
;;      reg 0 { d4(bb 13 insn 90) }
;;   UD chains for insn luid 5 uid 92
;;      reg 133 { d739(bb 13 insn 91) }
;;   UD chains for insn luid 6 uid 93
;;      reg 24 { d115(bb 13 insn 92) }

( 6 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u129(11){ d44(bb 0 insn -1) }u130(13){ d52(bb 0 insn -1) }u131(25){ d131(bb 0 insn -1) }u132(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(32)
4, 8, 25, 36, 43, 44, 51, 52, 115, 123, 131, 132, 739, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
749
;; rd  kill	(3)
748, 749, 750
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(33)
4, 8, 25, 36, 43, 44, 51, 52, 115, 123, 131, 132, 739, 740, 742, 743, 744, 746, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }

( 2 13 8 18 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ d44(bb 0 insn -1) }u134(13){ d52(bb 0 insn -1) }u135(25){ d131(bb 0 insn -1) }u136(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(36)
4, 8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 115, 122, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
748
;; rd  kill	(3)
748, 749, 750
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(37)
4, 8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 115, 122, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }

( 15 12 14 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u137(11){ d44(bb 0 insn -1) }u138(13){ d52(bb 0 insn -1) }u139(25){ d131(bb 0 insn -1) }u140(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(42)
4, 6, 8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 115, 118, 122, 123, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
1
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(38)
1, 25, 36, 43, 44, 51, 52, 114, 115, 118, 122, 123, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 117
;;      reg 140 { d750(bb 12 insn 82) d749(bb 14 insn 96) d748(bb 15 insn 101) }
;;   UD chains for insn luid 1 uid 123
;;      reg 0 { d1(bb 16 insn 117) }

( 3 9 )->[17]->( 11 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u143(11){ d44(bb 0 insn -1) }u144(13){ d52(bb 0 insn -1) }u145(25){ d131(bb 0 insn -1) }u146(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 162
;; live  kill	
;; rd  in  	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 121, 128, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(2)
114, 763
;; rd  kill	(18)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 763
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 111
;;      reg 144 { d753(bb 2 insn 4) d752(bb 8 insn 51) }
;;      reg 162 { d763(bb 17 insn 110) }
;;   eq_note reg 144 { }
;;   UD chains for insn luid 2 uid 112
;;      reg 24 { d114(bb 17 insn 111) }

( 17 )->[18]->( 15 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ d44(bb 0 insn -1) }u-1(13){ d52(bb 0 insn -1) }u-1(25){ d131(bb 0 insn -1) }u-1(26){ d132(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 25 { d131(bb 0 insn -1) }
;;   reg 26 { d132(bb 0 insn -1) }

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u151(0){ d1(bb 16 insn 117) }u152(11){ d44(bb 0 insn -1) }u153(13){ d52(bb 0 insn -1) }u154(14){ }u155(25){ d131(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(38)
1, 25, 36, 43, 44, 51, 52, 114, 115, 118, 122, 123, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(38)
1, 25, 36, 43, 44, 51, 52, 114, 115, 118, 122, 123, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 16 insn 117) }
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d52(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d131(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 18 to worklist
  Adding insn 25 to worklist
  Adding insn 127 to worklist
  Adding insn 33 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 54 to worklist
  Adding insn 57 to worklist
  Adding insn 63 to worklist
  Adding insn 72 to worklist
  Adding insn 129 to worklist
  Adding insn 80 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 131 to worklist
  Adding insn 123 to worklist
  Adding insn 112 to worklist
  Adding insn 134 to worklist
Finished finding needed instructions:
  Adding insn 117 to worklist
Processing use of (reg 140 [ ret ]) in insn 117:
  Adding insn 82 to worklist
  Adding insn 96 to worklist
  Adding insn 101 to worklist
Processing use of (reg 24 cc) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 144 [ pos ]) in insn 111:
  Adding insn 4 to worklist
  Adding insn 51 to worklist
Processing use of (reg 162) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 137 [ copy ]) in insn 51:
  Adding insn 21 to worklist
Processing use of (reg 144 [ pos ]) in insn 51:
Processing use of (reg 137 [ copy ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 145 [ count ]) in insn 21:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 144 [ pos ]) in insn 20:
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 123:
Processing use of (reg 13 sp) in insn 90:
Processing use of (reg 0 r0) in insn 90:
  Adding insn 87 to worklist
Processing use of (reg 1 r1) in insn 90:
  Adding insn 88 to worklist
Processing use of (reg 2 r2) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 134 [ copy ]) in insn 89:
  Adding insn 67 to worklist
Processing use of (reg 134 [ copy ]) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 145 [ count ]) in insn 67:
  Adding insn 52 to worklist
Processing use of (reg 137 [ copy ]) in insn 52:
Processing use of (reg 145 [ count ]) in insn 52:
Processing use of (reg 144 [ pos ]) in insn 66:
Processing use of (reg 135 [ data ]) in insn 88:
  Adding insn 70 to worklist
Processing use of (reg 155) in insn 70:
  Adding insn 68 to worklist
Processing use of (reg 156) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 144 [ pos ]) in insn 69:
Processing use of (reg 139 [ thread ]) in insn 68:
  Adding insn 11 to worklist
Processing use of (reg 142 [ target ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 147 [ ubuf ]) in insn 87:
  Adding insn 7 to worklist
  Adding insn 48 to worklist
Processing use of (reg 137 [ copy ]) in insn 48:
Processing use of (reg 147 [ ubuf ]) in insn 48:
Processing use of (reg 26 afp) in insn 7:
Processing use of (reg 24 cc) in insn 93:
  Adding insn 92 to worklist
Processing use of (reg 133 [ D.27733 ]) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 0 r0) in insn 91:
Processing use of (reg 13 sp) in insn 80:
Processing use of (reg 0 r0) in insn 80:
  Adding insn 77 to worklist
Processing use of (reg 1 r1) in insn 80:
  Adding insn 78 to worklist
Processing use of (reg 2 r2) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 134 [ copy ]) in insn 79:
Processing use of (reg 135 [ data ]) in insn 78:
Processing use of (reg 146 [ kbuf ]) in insn 77:
  Adding insn 6 to worklist
  Adding insn 35 to worklist
Processing use of (reg 137 [ copy ]) in insn 35:
Processing use of (reg 146 [ kbuf ]) in insn 35:
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 146 [ kbuf ]) in insn 71:
Processing use of (reg 13 sp) in insn 63:
Processing use of (reg 0 r0) in insn 63:
  Adding insn 61 to worklist
Processing use of (reg 1 r1) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 24 cc) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 144 [ pos ]) in insn 56:
Processing use of (reg 24 cc) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 145 [ count ]) in insn 53:
Processing use of (reg 13 sp) in insn 43:
Processing use of (reg 0 r0) in insn 43:
  Adding insn 40 to worklist
Processing use of (reg 1 r1) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 2 r2) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 137 [ copy ]) in insn 42:
Processing use of (reg 138 [ data ]) in insn 41:
  Adding insn 23 to worklist
Processing use of (reg 144 [ pos ]) in insn 23:
Processing use of (reg 148) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 139 [ thread ]) in insn 22:
Processing use of (reg 147 [ ubuf ]) in insn 40:
Processing use of (reg 24 cc) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 136 [ D.27683 ]) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 0 r0) in insn 44:
Processing use of (reg 13 sp) in insn 33:
Processing use of (reg 0 r0) in insn 33:
  Adding insn 30 to worklist
Processing use of (reg 1 r1) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 2 r2) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 137 [ copy ]) in insn 32:
Processing use of (reg 138 [ data ]) in insn 31:
Processing use of (reg 146 [ kbuf ]) in insn 30:
Processing use of (reg 24 cc) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 146 [ kbuf ]) in insn 24:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 144 [ pos ]) in insn 17:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 139 [ thread ]) in insn 12:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 145 [ count ]) in insn 14:


vfp_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,11u} r1={12d,5u} r2={11d,5u} r3={7d,1u} r11={1d,18u} r12={7d} r13={1d,24u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={17d,9u} r25={1d,18u} r26={1d,19u,2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,3u} r140={3d,1u} r142={1d,1u} r144={2d,8u,1d} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,1u} r155={1d,1u} r156={1d,1u} r162={1d,1u} 
;;    total ref usage 924{764d,157u,3e} in 70{64 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738
0[0,14] 1[14,12] 2[26,11] 3[37,7] 11[44,1] 12[45,7] 13[52,1] 14[53,7] 15[60,6] 16[66,6] 17[72,6] 18[78,6] 19[84,6] 20[90,6] 21[96,6] 22[102,6] 23[108,6] 24[114,17] 25[131,1] 26[132,1] 27[133,6] 28[139,6] 29[145,6] 30[151,6] 31[157,6] 32[163,6] 33[169,6] 34[175,6] 35[181,6] 36[187,6] 37[193,6] 38[199,6] 39[205,6] 40[211,6] 41[217,6] 42[223,6] 43[229,6] 44[235,6] 45[241,6] 46[247,6] 47[253,6] 48[259,6] 49[265,6] 50[271,6] 51[277,6] 52[283,6] 53[289,6] 54[295,6] 55[301,6] 56[307,6] 57[313,6] 58[319,6] 59[325,6] 60[331,6] 61[337,6] 62[343,6] 63[349,6] 64[355,6] 65[361,6] 66[367,6] 67[373,6] 68[379,6] 69[385,6] 70[391,6] 71[397,6] 72[403,6] 73[409,6] 74[415,6] 75[421,6] 76[427,6] 77[433,6] 78[439,6] 79[445,6] 80[451,6] 81[457,6] 82[463,6] 83[469,6] 84[475,6] 85[481,6] 86[487,6] 87[493,6] 88[499,6] 89[505,6] 90[511,6] 91[517,6] 92[523,6] 93[529,6] 94[535,6] 95[541,6] 96[547,6] 97[553,6] 98[559,6] 99[565,6] 100[571,6] 101[577,6] 102[583,6] 103[589,6] 104[595,6] 105[601,6] 106[607,6] 107[613,6] 108[619,6] 109[625,6] 110[631,6] 111[637,6] 112[643,6] 113[649,6] 114[655,6] 115[661,6] 116[667,6] 117[673,6] 118[679,6] 119[685,6] 120[691,6] 121[697,6] 122[703,6] 123[709,6] 124[715,6] 125[721,6] 126[727,6] 127[733,6] 133[739,1] 134[740,2] 135[742,1] 136[743,1] 137[744,2] 138[746,1] 139[747,1] 140[748,3] 142[751,1] 144[752,2] 145[754,2] 146[756,2] 147[758,2] 148[760,1] 155[761,1] 156[762,1] 162[763,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 144 145 146 147
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 142 144 145 146 147
;; live  kill	 14 [lr]
;; rd  in  	(10)
13, 25, 36, 43, 44, 51, 52, 59, 131, 132
;; rd  gen 	(7)
129, 747, 751, 753, 755, 757, 759
;; rd  kill	(34)
53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 142 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ target ])
        (nil)))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:661 (set (reg/v:SI 144 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pos ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:661 (set (reg/v:SI 145 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ count ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 146 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 147 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:663 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ target ])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:668 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 2 arch/arm/kernel/ptrace.c:668 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 13 15 2 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 15 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(16)
13, 25, 36, 43, 44, 51, 52, 129, 131, 132, 747, 751, 753, 755, 757, 759


;; Succ edge  15 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
13, 25, 36, 43, 44, 51, 52, 129, 131, 132, 747, 751, 753, 755, 757, 759
;; rd  gen 	(1)
128
;; rd  kill	(17)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 3 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(16)
13, 25, 36, 43, 44, 51, 52, 128, 131, 132, 747, 751, 753, 755, 757, 759


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146
;; lr  def 	 24 [cc] 137 138 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 137 138 148
;; live  kill	 24 [cc]
;; rd  in  	(16)
13, 25, 36, 43, 44, 51, 52, 128, 131, 132, 747, 751, 753, 755, 757, 759
;; rd  gen 	(4)
126, 744, 746, 760
;; rd  kill	(21)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 744, 745, 746, 760

;; Pred edge  3 [50.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 include/linux/regset.h:229 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 21 20 22 4 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 22 21 23 4 include/linux/regset.h:230 (set (reg/f:SI 148)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 include/linux/regset.h:230 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg/f:SI 148)
            (reg/v:SI 144 [ pos ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 148)
        (nil)))

(insn 24 23 25 4 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 4 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; rd  out 	(19)
13, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 757, 759, 760


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  6 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 146
;; live  kill	 14 [lr]
;; rd  in  	(19)
13, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 757, 759, 760
;; rd  gen 	(2)
10, 756
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 756, 757

;; Pred edge  4 [85.0%]  (fallthru)
(note 26 25 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 26 31 5 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
        (nil)))

(insn 32 31 33 5 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 35 5 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 35 33 127 5 include/linux/regset.h:233 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))

(jump_insn 127 35 128 5 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(19)
10, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 756, 759, 760


;; Succ edge  8 [100.0%] 

(barrier 128 127 38)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(19)
13, 25, 36, 43, 44, 51, 52, 126, 131, 132, 744, 746, 747, 751, 753, 755, 757, 759, 760
;; rd  gen 	(3)
8, 123, 743
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 743

;; Pred edge  4 [15.0%] 
(code_label 38 128 39 6 71 "" [1 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 6 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ data ])
        (nil)))

(insn 42 41 43 6 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 6 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 44 43 45 6 include/linux/regset.h:234 (set (reg:SI 136 [ D.27683 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 45 44 46 6 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27683 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.27683 ])
        (nil)))

(jump_insn 46 45 47 6 include/linux/regset.h:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 14 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(20)
8, 25, 36, 43, 44, 51, 52, 123, 131, 132, 743, 744, 746, 747, 751, 753, 755, 757, 759, 760


;; Succ edge  14 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 147
;; live  kill	
;; rd  in  	(20)
8, 25, 36, 43, 44, 51, 52, 123, 131, 132, 743, 744, 746, 747, 751, 753, 755, 757, 759, 760
;; rd  gen 	(1)
758
;; rd  kill	(2)
758, 759

;; Pred edge  6 [50.0%]  (fallthru)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 include/linux/regset.h:237 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; rd  out 	(20)
8, 25, 36, 43, 44, 51, 52, 123, 131, 132, 743, 744, 746, 747, 751, 753, 755, 757, 758, 760


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 145
;; lr  def 	 24 [cc] 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 144 145
;; live  kill	
;; rd  in  	(24)
8, 10, 25, 36, 43, 44, 51, 52, 123, 126, 131, 132, 743, 744, 746, 747, 751, 753, 755, 756, 757, 758, 759, 760
;; rd  gen 	(3)
122, 752, 754
;; rd  kill	(21)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 752, 753, 754, 755

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 49 48 50 8 72 "" [1 uses])

(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 include/linux/regset.h:238 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))

(insn 52 51 53 8 include/linux/regset.h:239 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ copy ])
        (nil)))

(insn 53 52 54 8 include/linux/regset.h:279 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 8 include/linux/regset.h:279 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 8 -> ( 15 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(23)
8, 10, 25, 36, 43, 44, 51, 52, 122, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760


;; Succ edge  15
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
8, 10, 25, 36, 43, 44, 51, 52, 122, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760
;; rd  gen 	(1)
121
;; rd  kill	(17)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130

;; Pred edge  8 [100.0%]  (fallthru)
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 9 include/linux/regset.h:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 57 56 58 9 include/linux/regset.h:281 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
            (nil))))
;; End of basic block 9 -> ( 10 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(23)
8, 10, 25, 36, 43, 44, 51, 52, 121, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760


;; Succ edge  10 [0.2%]  (fallthru)
;; Succ edge  17 [99.8%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(23)
8, 10, 25, 36, 43, 44, 51, 52, 121, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760
;; rd  gen 	(0)

;; rd  kill	(7)
53, 54, 55, 56, 57, 58, 59

;; Pred edge  9 [0.2%]  (fallthru)
(note 58 57 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 61 58 62 10 include/linux/regset.h:281 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)
        (nil)))

(insn 62 61 63 10 include/linux/regset.h:281 discrim 1 (set (reg:SI 1 r1)
        (const_int 281 [0x119])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 281 [0x119])
        (nil)))

(call_insn 63 62 64 10 include/linux/regset.h:281 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
8, 10, 25, 36, 43, 44, 51, 52, 121, 131, 132, 743, 744, 746, 747, 751, 752, 754, 756, 757, 758, 759, 760



(barrier 64 63 109)

;; Start of basic block ( 17) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146
;; lr  def 	 24 [cc] 134 135 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 134 135 155 156
;; live  kill	 24 [cc]
;; rd  in  	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763
;; rd  gen 	(5)
118, 740, 742, 761, 762
;; rd  kill	(22)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 740, 741, 742, 761, 762

;; Pred edge  17 [50.0%] 
(code_label 109 64 65 11 76 "" [1 uses])

(note 65 109 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 11 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 67 66 68 11 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ count ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 68 67 69 11 include/linux/regset.h:230 (set (reg/f:SI 155)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 692 [0x2b4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 139 [ thread ])
        (nil)))

(insn 69 68 70 11 include/linux/regset.h:230 (set (reg:SI 156)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ pos ])
        (nil)))

(insn 70 69 71 11 include/linux/regset.h:230 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg/f:SI 155)
            (reg:SI 156))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_DEAD (reg/f:SI 155)
            (nil))))

(insn 71 70 72 11 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 11 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146 147
;; rd  out 	(31)
8, 10, 13, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  12 [85.0%]  (fallthru)
;; Succ edge  13 [15.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140
;; live  kill	 14 [lr]
;; rd  in  	(31)
8, 10, 13, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(2)
6, 750
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 748, 749, 750

;; Pred edge  11 [85.0%]  (fallthru)
(note 73 72 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 77 73 78 12 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ kbuf ])
        (nil)))

(insn 78 77 79 12 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ data ])
        (nil)))

(insn 79 78 80 12 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 80 79 82 12 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 82 80 129 12 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 129 82 130 12 (set (pc)
        (label_ref 102)) -1 (nil))
;; End of basic block 12 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(30)
6, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  16 [100.0%] 

(barrier 130 129 85)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(31)
8, 10, 13, 25, 36, 43, 44, 51, 52, 118, 131, 132, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(3)
4, 115, 739
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 53, 54, 55, 56, 57, 58, 59, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 739

;; Pred edge  11 [15.0%] 
(code_label 85 130 86 13 74 "" [1 uses])

(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 13 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 147 [ ubuf ])
        (nil)))

(insn 88 87 89 13 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ data ])
        (nil)))

(insn 89 88 90 13 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 90 89 91 13 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 91 90 92 13 include/linux/regset.h:234 (set (reg:SI 133 [ D.27733 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 92 91 93 13 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27733 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.27733 ])
        (nil)))

(jump_insn 93 92 94 13 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
4, 25, 36, 43, 44, 51, 52, 115, 131, 132, 739, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 6 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(32)
4, 8, 25, 36, 43, 44, 51, 52, 115, 123, 131, 132, 739, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
749
;; rd  kill	(3)
748, 749, 750

;; Pred edge  6 [50.0%] 
;; Pred edge  13 [50.0%]  (fallthru)
(code_label 94 93 95 14 73 "" [1 uses])

(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 131 14 include/linux/regset.h:235 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 131 96 132 14 (set (pc)
        (label_ref 102)) -1 (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(33)
4, 8, 25, 36, 43, 44, 51, 52, 115, 123, 131, 132, 739, 740, 742, 743, 744, 746, 747, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  16 [100.0%] 

(barrier 132 131 99)

;; Start of basic block ( 2 13 8 18) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(36)
4, 8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 115, 122, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
748
;; rd  kill	(3)
748, 749, 750

;; Pred edge  2 [50.0%] 
;; Pred edge  13 [50.0%] 
;; Pred edge  8
;; Pred edge  18 [100.0%] 
(code_label 99 132 100 15 69 "" [4 uses])

(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 15 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(37)
4, 8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 115, 122, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 12 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(42)
4, 6, 8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 115, 118, 122, 123, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763
;; rd  gen 	(1)
1
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
;; Pred edge  14 [100.0%] 
(code_label 102 101 103 16 75 "" [2 uses])

(note 103 102 117 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 117 103 123 16 arch/arm/kernel/ptrace.c:687 (set (reg/i:SI 0 r0)
        (reg/v:SI 140 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ ret ])
        (nil)))

(insn 123 117 107 16 arch/arm/kernel/ptrace.c:687 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(38)
1, 25, 36, 43, 44, 51, 52, 114, 115, 118, 122, 123, 129, 131, 132, 739, 740, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3 9) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 162
;; live  kill	
;; rd  in  	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 121, 128, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760
;; rd  gen 	(2)
114, 763
;; rd  kill	(18)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 763

;; Pred edge  3 [50.0%] 
;; Pred edge  9 [99.8%] 
(code_label 107 123 108 17 70 "" [2 uses])

(note 108 107 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 111 17 include/linux/regset.h:227 discrim 1 (set (reg:SI 162)
        (const_int 259 [0x103])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 17 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 162)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 144 [ pos ])
                (const_int 259 [0x103]))
            (nil))))

(jump_insn 112 111 133 17 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 11 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; rd  out 	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763


;; Succ edge  11 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  17 [50.0%]  (fallthru)
(note 133 112 134 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn 134 133 135 18 (set (pc)
        (label_ref 99)) -1 (nil))
;; End of basic block 18 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
8, 10, 13, 25, 36, 43, 44, 51, 52, 114, 131, 132, 743, 744, 746, 747, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 763


;; Succ edge  15 [100.0%] 

(barrier 135 134 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function fpa_get (fpa_get)[0:1559]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)


fpa_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 346{270d,74u,2e} in 34{32 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,7] 25[52,1] 26[53,1] 27[54,2] 28[56,2] 29[58,2] 30[60,2] 31[62,2] 32[64,2] 33[66,2] 34[68,2] 35[70,2] 36[72,2] 37[74,2] 38[76,2] 39[78,2] 40[80,2] 41[82,2] 42[84,2] 43[86,2] 44[88,2] 45[90,2] 46[92,2] 47[94,2] 48[96,2] 49[98,2] 50[100,2] 51[102,2] 52[104,2] 53[106,2] 54[108,2] 55[110,2] 56[112,2] 57[114,2] 58[116,2] 59[118,2] 60[120,2] 61[122,2] 62[124,2] 63[126,2] 64[128,2] 65[130,2] 66[132,2] 67[134,2] 68[136,2] 69[138,2] 70[140,2] 71[142,2] 72[144,2] 73[146,2] 74[148,2] 75[150,2] 76[152,2] 77[154,2] 78[156,2] 79[158,2] 80[160,2] 81[162,2] 82[164,2] 83[166,2] 84[168,2] 85[170,2] 86[172,2] 87[174,2] 88[176,2] 89[178,2] 90[180,2] 91[182,2] 92[184,2] 93[186,2] 94[188,2] 95[190,2] 96[192,2] 97[194,2] 98[196,2] 99[198,2] 100[200,2] 101[202,2] 102[204,2] 103[206,2] 104[208,2] 105[210,2] 106[212,2] 107[214,2] 108[216,2] 109[218,2] 110[220,2] 111[222,2] 112[224,2] 113[226,2] 114[228,2] 115[230,2] 116[232,2] 117[234,2] 118[236,2] 119[238,2] 120[240,2] 121[242,2] 122[244,2] 123[246,2] 124[248,2] 125[250,2] 126[252,2] 127[254,2] 133[256,1] 134[257,2] 135[259,3] 136[262,1] 137[263,1] 139[264,1] 141[265,1] 142[266,1] 143[267,1] 144[268,1] 145[269,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d15(2){ }d18(3){ }d19(11){ }d22(12){ }d23(13){ }d26(14){ }d52(25){ }d53(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 52, 53
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d19(bb 0 insn -1) }u1(13){ d23(bb 0 insn -1) }u2(25){ d52(bb 0 insn -1) }u3(26){ d53(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  gen 	(7)
51, 263, 264, 265, 266, 267, 268
;; rd  kill	(13)
45, 46, 47, 48, 49, 50, 51, 263, 264, 265, 266, 267, 268
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d15(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 6
;;      reg 26 { d53(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 4 uid 7
;;      reg 26 { d53(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 139 { d264(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 142 { d266(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 13
;;      reg 24 { d51(bb 2 insn 12) }

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d19(bb 0 insn -1) }u15(13){ d23(bb 0 insn -1) }u16(25){ d52(bb 0 insn -1) }u17(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(1)
50
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 51
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 141 { d265(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 16
;;      reg 24 { d50(bb 3 insn 15) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d19(bb 0 insn -1) }u21(13){ d23(bb 0 insn -1) }u22(25){ d52(bb 0 insn -1) }u23(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 145
;; live  kill	 24 [cc]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(4)
48, 257, 262, 269
;; rd  kill	(11)
45, 46, 47, 48, 49, 50, 51, 257, 258, 262, 269
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; rd  out 	(20)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 141 { d265(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 19
;;      reg 134 { d258(bb 4 insn 18) }
;;      reg 142 { d266(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 20
;;      reg 137 { d263(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 21
;;      reg 141 { d265(bb 2 insn 4) }
;;      reg 145 { d269(bb 4 insn 20) }
;;   UD chains for insn luid 4 uid 22
;;      reg 143 { d267(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 23
;;      reg 24 { d48(bb 4 insn 22) }

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ d19(bb 0 insn -1) }u33(13){ d23(bb 0 insn -1) }u34(25){ d52(bb 0 insn -1) }u35(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(2)
4, 261
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 24, 25, 26, 259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(20)
4, 10, 15, 18, 19, 22, 23, 48, 52, 53, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 143 { d267(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 29
;;      reg 136 { d262(bb 4 insn 21) }
;;   UD chains for insn luid 2 uid 30
;;      reg 134 { d257(bb 4 insn 19) }
;;   UD chains for insn luid 3 uid 31
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 28) }
;;      reg 1 { d6(bb 5 insn 29) }
;;      reg 2 { d11(bb 5 insn 30) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(11){ d19(bb 0 insn -1) }u44(13){ d23(bb 0 insn -1) }u45(25){ d52(bb 0 insn -1) }u46(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(3)
2, 45, 256
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 24, 25, 26, 45, 46, 47, 48, 49, 50, 51, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 144 { d268(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 39
;;      reg 136 { d262(bb 4 insn 21) }
;;   UD chains for insn luid 2 uid 40
;;      reg 134 { d257(bb 4 insn 19) }
;;   UD chains for insn luid 3 uid 41
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d3(bb 6 insn 38) }
;;      reg 1 { d8(bb 6 insn 39) }
;;      reg 2 { d13(bb 6 insn 40) }
;;   UD chains for insn luid 4 uid 42
;;      reg 0 { d2(bb 6 insn 41) }
;;   UD chains for insn luid 5 uid 43
;;      reg 133 { d256(bb 6 insn 42) }
;;   UD chains for insn luid 6 uid 44
;;      reg 24 { d45(bb 6 insn 43) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ d19(bb 0 insn -1) }u58(13){ d23(bb 0 insn -1) }u59(25){ d52(bb 0 insn -1) }u60(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(20)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
260
;; rd  kill	(3)
259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }

( 2 3 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ d19(bb 0 insn -1) }u62(13){ d23(bb 0 insn -1) }u63(25){ d52(bb 0 insn -1) }u64(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(24)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
259
;; rd  kill	(3)
259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(25)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }

( 8 5 7 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(11){ d19(bb 0 insn -1) }u66(13){ d23(bb 0 insn -1) }u67(25){ d52(bb 0 insn -1) }u68(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(29)
2, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 135 { d261(bb 5 insn 33) d260(bb 7 insn 46) d259(bb 8 insn 51) }
;;   UD chains for insn luid 1 uid 64
;;      reg 0 { d0(bb 9 insn 58) }

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u71(0){ d0(bb 9 insn 58) }u72(11){ d19(bb 0 insn -1) }u73(13){ d23(bb 0 insn -1) }u74(14){ d26(bb 0 insn -1) }u75(25){ d52(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(27)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 9 insn 58) }
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 14 { d26(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 16 to worklist
  Adding insn 23 to worklist
  Adding insn 68 to worklist
  Adding insn 31 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 70 to worklist
  Adding insn 64 to worklist
Finished finding needed instructions:
  Adding insn 58 to worklist
Processing use of (reg 135 [ D.27754 ]) in insn 58:
  Adding insn 33 to worklist
  Adding insn 46 to worklist
  Adding insn 51 to worklist
Processing use of (reg 0 r0) in insn 64:
Processing use of (reg 13 sp) in insn 41:
Processing use of (reg 0 r0) in insn 41:
  Adding insn 38 to worklist
Processing use of (reg 1 r1) in insn 41:
  Adding insn 39 to worklist
Processing use of (reg 2 r2) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 134 [ copy ]) in insn 40:
  Adding insn 19 to worklist
Processing use of (reg 134 [ copy ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 142 [ count ]) in insn 19:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 141 [ pos ]) in insn 18:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 136 [ data ]) in insn 39:
  Adding insn 21 to worklist
Processing use of (reg 141 [ pos ]) in insn 21:
Processing use of (reg 145) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 137 [ D.27170 ]) in insn 20:
  Adding insn 11 to worklist
Processing use of (reg 139 [ target ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 144 [ ubuf ]) in insn 38:
  Adding insn 7 to worklist
Processing use of (reg 26 afp) in insn 7:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 133 [ D.27758 ]) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 0 r0) in insn 42:
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 0 r0) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 1 r1) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 2 r2) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 134 [ copy ]) in insn 30:
Processing use of (reg 136 [ data ]) in insn 29:
Processing use of (reg 143 [ kbuf ]) in insn 28:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 143 [ kbuf ]) in insn 22:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 141 [ pos ]) in insn 15:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 142 [ count ]) in insn 12:


fpa_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 346{270d,74u,2e} in 34{32 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,7] 25[52,1] 26[53,1] 27[54,2] 28[56,2] 29[58,2] 30[60,2] 31[62,2] 32[64,2] 33[66,2] 34[68,2] 35[70,2] 36[72,2] 37[74,2] 38[76,2] 39[78,2] 40[80,2] 41[82,2] 42[84,2] 43[86,2] 44[88,2] 45[90,2] 46[92,2] 47[94,2] 48[96,2] 49[98,2] 50[100,2] 51[102,2] 52[104,2] 53[106,2] 54[108,2] 55[110,2] 56[112,2] 57[114,2] 58[116,2] 59[118,2] 60[120,2] 61[122,2] 62[124,2] 63[126,2] 64[128,2] 65[130,2] 66[132,2] 67[134,2] 68[136,2] 69[138,2] 70[140,2] 71[142,2] 72[144,2] 73[146,2] 74[148,2] 75[150,2] 76[152,2] 77[154,2] 78[156,2] 79[158,2] 80[160,2] 81[162,2] 82[164,2] 83[166,2] 84[168,2] 85[170,2] 86[172,2] 87[174,2] 88[176,2] 89[178,2] 90[180,2] 91[182,2] 92[184,2] 93[186,2] 94[188,2] 95[190,2] 96[192,2] 97[194,2] 98[196,2] 99[198,2] 100[200,2] 101[202,2] 102[204,2] 103[206,2] 104[208,2] 105[210,2] 106[212,2] 107[214,2] 108[216,2] 109[218,2] 110[220,2] 111[222,2] 112[224,2] 113[226,2] 114[228,2] 115[230,2] 116[232,2] 117[234,2] 118[236,2] 119[238,2] 120[240,2] 121[242,2] 122[244,2] 123[246,2] 124[248,2] 125[250,2] 126[252,2] 127[254,2] 133[256,1] 134[257,2] 135[259,3] 136[262,1] 137[263,1] 139[264,1] 141[265,1] 142[266,1] 143[267,1] 144[268,1] 145[269,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  gen 	(7)
51, 263, 264, 265, 266, 267, 268
;; rd  kill	(13)
45, 46, 47, 48, 49, 50, 51, 263, 264, 265, 266, 267, 268

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ target ])
        (nil)))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:614 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pos ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:614 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ count ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:616 (set (reg/f:SI 137 [ D.27170 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ target ])
        (nil)))

(insn 12 11 13 2 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268


;; Succ edge  8 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(1)
50
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 51

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 145
;; live  kill	 24 [cc]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(4)
48, 257, 262, 269
;; rd  kill	(11)
45, 46, 47, 48, 49, 50, 51, 257, 258, 262, 269

;; Pred edge  3 [61.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 19 18 20 4 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ count ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 20 19 21 4 include/linux/regset.h:230 (set (reg/f:SI 145)
        (plus:SI (reg/f:SI 137 [ D.27170 ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 137 [ D.27170 ])
        (nil)))

(insn 21 20 22 4 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg/f:SI 145)
            (reg/v:SI 141 [ pos ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_DEAD (reg/v:SI 141 [ pos ])
            (nil))))

(insn 22 21 23 4 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 73 [0x49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; rd  out 	(20)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  5 [99.3%]  (fallthru)
;; Succ edge  6 [0.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(2)
4, 261
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 24, 25, 26, 259, 260, 261

;; Pred edge  4 [99.3%]  (fallthru)
(note 24 23 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 24 29 5 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ kbuf ])
        (nil)))

(insn 29 28 30 5 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ data ])
        (nil)))

(insn 30 29 31 5 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 31 30 33 5 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 33 31 68 5 include/linux/regset.h:241 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 68 33 69 5 (set (pc)
        (label_ref 52)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(20)
4, 10, 15, 18, 19, 22, 23, 48, 52, 53, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  9 [100.0%] 

(barrier 69 68 36)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(20)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(3)
2, 45, 256
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 24, 25, 26, 45, 46, 47, 48, 49, 50, 51, 256

;; Pred edge  4 [0.7%] 
(code_label 36 69 37 6 82 "" [1 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ ubuf ])
        (nil)))

(insn 39 38 40 6 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ data ])
        (nil)))

(insn 40 39 41 6 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 41 40 42 6 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 43 6 include/linux/regset.h:234 (set (reg:SI 133 [ D.27758 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 43 42 44 6 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27758 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.27758 ])
        (nil)))

(jump_insn 44 43 45 6 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(20)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
260
;; rd  kill	(3)
259, 260, 261

;; Pred edge  6 [39.0%]  (fallthru)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 70 7 include/linux/regset.h:235 (set (reg:SI 135 [ D.27754 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 70 46 71 7 (set (pc)
        (label_ref 52)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  9 [100.0%] 

(barrier 71 70 49)

;; Start of basic block ( 2 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(24)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
259
;; rd  kill	(3)
259, 260, 261

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  6 [61.0%] 
(code_label 49 71 50 8 81 "" [3 uses])

(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 include/linux/regset.h:225 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(25)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(29)
2, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 52 51 53 9 83 "" [2 uses])

(note 53 52 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 58 53 64 9 arch/arm/kernel/ptrace.c:618 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.27754 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.27754 ])
        (nil)))

(insn 64 58 0 9 arch/arm/kernel/ptrace.c:618 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function gpr_get (gpr_get)[0:1557]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)


gpr_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u,1d} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} 
;;    total ref usage 349{271d,75u,3e} in 35{33 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,7] 25[52,1] 26[53,1] 27[54,2] 28[56,2] 29[58,2] 30[60,2] 31[62,2] 32[64,2] 33[66,2] 34[68,2] 35[70,2] 36[72,2] 37[74,2] 38[76,2] 39[78,2] 40[80,2] 41[82,2] 42[84,2] 43[86,2] 44[88,2] 45[90,2] 46[92,2] 47[94,2] 48[96,2] 49[98,2] 50[100,2] 51[102,2] 52[104,2] 53[106,2] 54[108,2] 55[110,2] 56[112,2] 57[114,2] 58[116,2] 59[118,2] 60[120,2] 61[122,2] 62[124,2] 63[126,2] 64[128,2] 65[130,2] 66[132,2] 67[134,2] 68[136,2] 69[138,2] 70[140,2] 71[142,2] 72[144,2] 73[146,2] 74[148,2] 75[150,2] 76[152,2] 77[154,2] 78[156,2] 79[158,2] 80[160,2] 81[162,2] 82[164,2] 83[166,2] 84[168,2] 85[170,2] 86[172,2] 87[174,2] 88[176,2] 89[178,2] 90[180,2] 91[182,2] 92[184,2] 93[186,2] 94[188,2] 95[190,2] 96[192,2] 97[194,2] 98[196,2] 99[198,2] 100[200,2] 101[202,2] 102[204,2] 103[206,2] 104[208,2] 105[210,2] 106[212,2] 107[214,2] 108[216,2] 109[218,2] 110[220,2] 111[222,2] 112[224,2] 113[226,2] 114[228,2] 115[230,2] 116[232,2] 117[234,2] 118[236,2] 119[238,2] 120[240,2] 121[242,2] 122[244,2] 123[246,2] 124[248,2] 125[250,2] 126[252,2] 127[254,2] 133[256,1] 134[257,2] 135[259,3] 136[262,1] 137[263,1] 139[264,1] 141[265,1] 142[266,1] 143[267,1] 144[268,1] 145[269,1] 146[270,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d10(1){ }d15(2){ }d18(3){ }d19(11){ }d22(12){ }d23(13){ }d26(14){ }d52(25){ }d53(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 52, 53
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d19(bb 0 insn -1) }u1(13){ d23(bb 0 insn -1) }u2(25){ d52(bb 0 insn -1) }u3(26){ d53(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  gen 	(7)
51, 263, 264, 265, 266, 267, 268
;; rd  kill	(13)
45, 46, 47, 48, 49, 50, 51, 263, 264, 265, 266, 267, 268
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d15(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 5
;;      reg 3 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 6
;;      reg 26 { d53(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 4 uid 7
;;      reg 26 { d53(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 139 { d264(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 12
;;      reg 142 { d266(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 13
;;      reg 24 { d51(bb 2 insn 12) }

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d19(bb 0 insn -1) }u15(13){ d23(bb 0 insn -1) }u16(25){ d52(bb 0 insn -1) }u17(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(1)
50
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 51
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 141 { d265(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 16
;;      reg 24 { d50(bb 3 insn 15) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d19(bb 0 insn -1) }u21(13){ d23(bb 0 insn -1) }u22(25){ d52(bb 0 insn -1) }u23(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 145 146
;; live  kill	 24 [cc]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(5)
48, 257, 262, 269, 270
;; rd  kill	(12)
45, 46, 47, 48, 49, 50, 51, 257, 258, 262, 269, 270
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; rd  out 	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 141 { d265(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 19
;;      reg 134 { d258(bb 4 insn 18) }
;;      reg 142 { d266(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 20
;;      reg 137 { d263(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 21
;;      reg 146 { d270(bb 4 insn 20) }
;;   eq_note reg 137 { }
;;   UD chains for insn luid 4 uid 22
;;      reg 141 { d265(bb 2 insn 4) }
;;      reg 145 { d269(bb 4 insn 21) }
;;   UD chains for insn luid 5 uid 23
;;      reg 143 { d267(bb 2 insn 6) }
;;   UD chains for insn luid 6 uid 24
;;      reg 24 { d48(bb 4 insn 23) }

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d19(bb 0 insn -1) }u35(13){ d23(bb 0 insn -1) }u36(25){ d52(bb 0 insn -1) }u37(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(2)
4, 261
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 24, 25, 26, 259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(21)
4, 10, 15, 18, 19, 22, 23, 48, 52, 53, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 143 { d267(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 30
;;      reg 136 { d262(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 31
;;      reg 134 { d257(bb 4 insn 19) }
;;   UD chains for insn luid 3 uid 32
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d1(bb 5 insn 29) }
;;      reg 1 { d6(bb 5 insn 30) }
;;      reg 2 { d11(bb 5 insn 31) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ d19(bb 0 insn -1) }u46(13){ d23(bb 0 insn -1) }u47(25){ d52(bb 0 insn -1) }u48(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(3)
2, 45, 256
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 24, 25, 26, 45, 46, 47, 48, 49, 50, 51, 256
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 144 { d268(bb 2 insn 7) }
;;   UD chains for insn luid 1 uid 40
;;      reg 136 { d262(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 41
;;      reg 134 { d257(bb 4 insn 19) }
;;   UD chains for insn luid 3 uid 42
;;      reg 13 { d23(bb 0 insn -1) }
;;      reg 0 { d3(bb 6 insn 39) }
;;      reg 1 { d8(bb 6 insn 40) }
;;      reg 2 { d13(bb 6 insn 41) }
;;   UD chains for insn luid 4 uid 43
;;      reg 0 { d2(bb 6 insn 42) }
;;   UD chains for insn luid 5 uid 44
;;      reg 133 { d256(bb 6 insn 43) }
;;   UD chains for insn luid 6 uid 45
;;      reg 24 { d45(bb 6 insn 44) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(11){ d19(bb 0 insn -1) }u60(13){ d23(bb 0 insn -1) }u61(25){ d52(bb 0 insn -1) }u62(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
260
;; rd  kill	(3)
259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }

( 2 3 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u63(11){ d19(bb 0 insn -1) }u64(13){ d23(bb 0 insn -1) }u65(25){ d52(bb 0 insn -1) }u66(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(25)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
259
;; rd  kill	(3)
259, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(26)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }

( 8 5 7 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ d19(bb 0 insn -1) }u68(13){ d23(bb 0 insn -1) }u69(25){ d52(bb 0 insn -1) }u70(26){ d53(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
2, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }
;;   reg 26 { d53(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 59
;;      reg 135 { d261(bb 5 insn 34) d260(bb 7 insn 47) d259(bb 8 insn 52) }
;;   UD chains for insn luid 1 uid 65
;;      reg 0 { d0(bb 9 insn 59) }

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u73(0){ d0(bb 9 insn 59) }u74(11){ d19(bb 0 insn -1) }u75(13){ d23(bb 0 insn -1) }u76(14){ d26(bb 0 insn -1) }u77(25){ d52(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 9 insn 59) }
;;   reg 11 { d19(bb 0 insn -1) }
;;   reg 13 { d23(bb 0 insn -1) }
;;   reg 14 { d26(bb 0 insn -1) }
;;   reg 25 { d52(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 16 to worklist
  Adding insn 24 to worklist
  Adding insn 69 to worklist
  Adding insn 32 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 71 to worklist
  Adding insn 65 to worklist
Finished finding needed instructions:
  Adding insn 59 to worklist
Processing use of (reg 135 [ D.27779 ]) in insn 59:
  Adding insn 34 to worklist
  Adding insn 47 to worklist
  Adding insn 52 to worklist
Processing use of (reg 0 r0) in insn 65:
Processing use of (reg 13 sp) in insn 42:
Processing use of (reg 0 r0) in insn 42:
  Adding insn 39 to worklist
Processing use of (reg 1 r1) in insn 42:
  Adding insn 40 to worklist
Processing use of (reg 2 r2) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 134 [ copy ]) in insn 41:
  Adding insn 19 to worklist
Processing use of (reg 134 [ copy ]) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 142 [ count ]) in insn 19:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 141 [ pos ]) in insn 18:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 136 [ data ]) in insn 40:
  Adding insn 22 to worklist
Processing use of (reg 141 [ pos ]) in insn 22:
Processing use of (reg 145) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 146) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 137 [ D.27137 ]) in insn 20:
  Adding insn 11 to worklist
Processing use of (reg 139 [ target ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 144 [ ubuf ]) in insn 39:
  Adding insn 7 to worklist
Processing use of (reg 26 afp) in insn 7:
Processing use of (reg 24 cc) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 133 [ D.27783 ]) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 0 r0) in insn 43:
Processing use of (reg 13 sp) in insn 32:
Processing use of (reg 0 r0) in insn 32:
  Adding insn 29 to worklist
Processing use of (reg 1 r1) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 2 r2) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 134 [ copy ]) in insn 31:
Processing use of (reg 136 [ data ]) in insn 30:
Processing use of (reg 143 [ kbuf ]) in insn 29:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 143 [ kbuf ]) in insn 23:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 141 [ pos ]) in insn 15:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 142 [ count ]) in insn 12:


gpr_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u,1d} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} 
;;    total ref usage 349{271d,75u,3e} in 35{33 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,3] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,7] 25[52,1] 26[53,1] 27[54,2] 28[56,2] 29[58,2] 30[60,2] 31[62,2] 32[64,2] 33[66,2] 34[68,2] 35[70,2] 36[72,2] 37[74,2] 38[76,2] 39[78,2] 40[80,2] 41[82,2] 42[84,2] 43[86,2] 44[88,2] 45[90,2] 46[92,2] 47[94,2] 48[96,2] 49[98,2] 50[100,2] 51[102,2] 52[104,2] 53[106,2] 54[108,2] 55[110,2] 56[112,2] 57[114,2] 58[116,2] 59[118,2] 60[120,2] 61[122,2] 62[124,2] 63[126,2] 64[128,2] 65[130,2] 66[132,2] 67[134,2] 68[136,2] 69[138,2] 70[140,2] 71[142,2] 72[144,2] 73[146,2] 74[148,2] 75[150,2] 76[152,2] 77[154,2] 78[156,2] 79[158,2] 80[160,2] 81[162,2] 82[164,2] 83[166,2] 84[168,2] 85[170,2] 86[172,2] 87[174,2] 88[176,2] 89[178,2] 90[180,2] 91[182,2] 92[184,2] 93[186,2] 94[188,2] 95[190,2] 96[192,2] 97[194,2] 98[196,2] 99[198,2] 100[200,2] 101[202,2] 102[204,2] 103[206,2] 104[208,2] 105[210,2] 106[212,2] 107[214,2] 108[216,2] 109[218,2] 110[220,2] 111[222,2] 112[224,2] 113[226,2] 114[228,2] 115[230,2] 116[232,2] 117[234,2] 118[236,2] 119[238,2] 120[240,2] 121[242,2] 122[244,2] 123[246,2] 124[248,2] 125[250,2] 126[252,2] 127[254,2] 133[256,1] 134[257,2] 135[259,3] 136[262,1] 137[263,1] 139[264,1] 141[265,1] 142[266,1] 143[267,1] 144[268,1] 145[269,1] 146[270,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 26, 52, 53
;; rd  gen 	(7)
51, 263, 264, 265, 266, 267, 268
;; rd  kill	(13)
45, 46, 47, 48, 49, 50, 51, 263, 264, 265, 266, 267, 268

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ target ])
        (nil)))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:581 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ pos ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:581 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ count ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:582 (set (reg/f:SI 137 [ D.27137 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 139 [ target ])
        (nil)))

(insn 12 11 13 2 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268


;; Succ edge  8 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 51, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(1)
50
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 51

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 145 146
;; live  kill	 24 [cc]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 26, 50, 52, 53, 263, 264, 265, 266, 267, 268
;; rd  gen 	(5)
48, 257, 262, 269, 270
;; rd  kill	(12)
45, 46, 47, 48, 49, 50, 51, 257, 258, 262, 269, 270

;; Pred edge  3 [61.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 141 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 19 18 20 4 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ count ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 20 19 21 4 include/linux/regset.h:230 (set (reg/f:SI 146)
        (plus:SI (reg/f:SI 137 [ D.27137 ])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 137 [ D.27137 ])
        (nil)))

(insn 21 20 22 4 include/linux/regset.h:230 (set (reg/f:SI 145)
        (plus:SI (reg/f:SI 146)
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 137 [ D.27137 ])
                (const_int 8112 [0x1fb0]))
            (nil))))

(insn 22 21 23 4 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg/f:SI 145)
            (reg/v:SI 141 [ pos ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_DEAD (reg/v:SI 141 [ pos ])
            (nil))))

(insn 23 22 24 4 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 73 [0x49])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; rd  out 	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  5 [99.3%]  (fallthru)
;; Succ edge  6 [0.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(2)
4, 261
;; rd  kill	(12)
0, 1, 2, 3, 4, 5, 24, 25, 26, 259, 260, 261

;; Pred edge  4 [99.3%]  (fallthru)
(note 25 24 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 25 30 5 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ kbuf ])
        (nil)))

(insn 30 29 31 5 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ data ])
        (nil)))

(insn 31 30 32 5 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 32 31 34 5 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 32 69 5 include/linux/regset.h:241 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 69 34 70 5 (set (pc)
        (label_ref 53)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(21)
4, 10, 15, 18, 19, 22, 23, 48, 52, 53, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  9 [100.0%] 

(barrier 70 69 37)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(21)
5, 10, 15, 18, 19, 22, 23, 26, 48, 52, 53, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(3)
2, 45, 256
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 24, 25, 26, 45, 46, 47, 48, 49, 50, 51, 256

;; Pred edge  4 [0.7%] 
(code_label 37 70 38 6 87 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ ubuf ])
        (nil)))

(insn 40 39 41 6 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ data ])
        (nil)))

(insn 41 40 42 6 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ copy ])
        (nil)))

(call_insn 42 41 43 6 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 43 42 44 6 include/linux/regset.h:234 (set (reg:SI 133 [ D.27783 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 44 43 45 6 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27783 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.27783 ])
        (nil)))

(jump_insn 45 44 46 6 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(21)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
260
;; rd  kill	(3)
259, 260, 261

;; Pred edge  6 [39.0%]  (fallthru)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 71 7 include/linux/regset.h:235 (set (reg:SI 135 [ D.27779 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 71 47 72 7 (set (pc)
        (label_ref 53)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(22)
2, 10, 15, 18, 19, 22, 23, 45, 52, 53, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  9 [100.0%] 

(barrier 72 71 50)

;; Start of basic block ( 2 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(25)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
259
;; rd  kill	(3)
259, 260, 261

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  6 [61.0%] 
(code_label 50 72 51 8 86 "" [3 uses])

(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 include/linux/regset.h:225 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(26)
2, 5, 10, 15, 18, 19, 22, 23, 26, 45, 50, 51, 52, 53, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
2, 4, 5, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270
;; rd  gen 	(1)
0
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 53 52 54 9 88 "" [2 uses])

(note 54 53 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 59 54 65 9 arch/arm/kernel/ptrace.c:587 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.27779 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.27779 ])
        (nil)))

(insn 65 59 0 9 arch/arm/kernel/ptrace.c:587 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 10, 15, 18, 19, 22, 23, 26, 45, 48, 50, 51, 52, 53, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ptrace_hbp_create (ptrace_hbp_create)[0:1554]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ptrace_hbp_create

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,5u} r1={5d,3u} r2={4d,1u} r3={4d,1u} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,11u,2d} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={1d,1u} r137={1d,2u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r156={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 316{267d,47u,2e} in 33{31 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,5] 1[5,5] 2[10,4] 3[14,4] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,2] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 135[250,1] 136[251,1] 137[252,1] 138[253,1] 139[254,1] 141[255,1] 142[256,1] 144[257,1] 146[258,1] 147[259,1] 149[260,1] 150[261,1] 152[262,1] 153[263,1] 156[264,1] 158[265,1] 159[266,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d13(2){ }d17(3){ }d18(11){ }d21(12){ }d22(13){ }d25(14){ }d46(25){ }d47(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 13, 17, 18, 21, 22, 25, 46, 47
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 46, 47
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 13, 17, 18, 21, 22, 25, 46, 47

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d18(bb 0 insn -1) }u1(13){ d22(bb 0 insn -1) }u2(25){ d46(bb 0 insn -1) }u3(26){ d47(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 141 142 144 146 147 149 150 152 153 156 158 159
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 138 139 141 142 144 146 147 149 150 152 153 156 158 159
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 13, 17, 18, 21, 22, 25, 46, 47
;; rd  gen 	(18)
1, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  kill	(25)
0, 1, 2, 3, 4, 23, 24, 25, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
1, 9, 13, 17, 18, 21, 22, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;;  UD chains for artificial uses
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 25 { d46(bb 0 insn -1) }
;;   reg 26 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 25 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 137 { d252(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d3(bb 2 insn 8) }
;;      reg 1 { d8(bb 2 insn 9) }
;;   UD chains for insn luid 7 uid 12
;;      reg 25 { d46(bb 0 insn -1) }
;;      reg 138 { d253(bb 2 insn 11) }
;;   UD chains for insn luid 9 uid 14
;;      reg 25 { d46(bb 0 insn -1) }
;;      reg 139 { d254(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 15
;;      reg 25 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 11 uid 18
;;      reg 141 { d255(bb 2 insn 15) }
;;   UD chains for insn luid 12 uid 62
;;      reg 142 { d256(bb 2 insn 18) }
;;   UD chains for insn luid 14 uid 22
;;      reg 25 { d46(bb 0 insn -1) }
;;      reg 144 { d257(bb 2 insn 21) }
;;   UD chains for insn luid 15 uid 23
;;      reg 158 { d265(bb 2 insn 62) }
;;   UD chains for insn luid 16 uid 26
;;      reg 146 { d258(bb 2 insn 23) }
;;   UD chains for insn luid 17 uid 63
;;      reg 147 { d259(bb 2 insn 26) }
;;   UD chains for insn luid 19 uid 30
;;      reg 25 { d46(bb 0 insn -1) }
;;      reg 149 { d260(bb 2 insn 29) }
;;   UD chains for insn luid 21 uid 32
;;      reg 25 { d46(bb 0 insn -1) }
;;      reg 150 { d261(bb 2 insn 31) }
;;   UD chains for insn luid 22 uid 33
;;      reg 25 { d46(bb 0 insn -1) }
;;      reg 136 { d251(bb 2 insn 3) }
;;   UD chains for insn luid 23 uid 34
;;      reg 159 { d266(bb 2 insn 63) }
;;   UD chains for insn luid 24 uid 37
;;      reg 152 { d262(bb 2 insn 34) }
;;   UD chains for insn luid 25 uid 39
;;      reg 25 { d46(bb 0 insn -1) }
;;      reg 153 { d263(bb 2 insn 37) }
;;   UD chains for insn luid 27 uid 42
;;      reg 137 { d252(bb 2 insn 7) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 28 uid 43
;;      reg 156 { d264(bb 2 insn 41) }
;;   UD chains for insn luid 30 uid 45
;;      reg 135 { d250(bb 2 insn 2) }
;;   UD chains for insn luid 31 uid 46
;;      reg 13 { d22(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 42) }
;;      reg 1 { d6(bb 2 insn 43) }
;;      reg 2 { d11(bb 2 insn 44) }
;;      reg 3 { d15(bb 2 insn 45) }
;;   UD chains for insn luid 32 uid 58
;;      reg 0 { d1(bb 2 insn 46) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u44(0){ d1(bb 2 insn 46) }u45(11){ d18(bb 0 insn -1) }u46(13){ d22(bb 0 insn -1) }u47(14){ }u48(25){ d46(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(26)
1, 9, 13, 17, 18, 21, 22, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(26)
1, 9, 13, 17, 18, 21, 22, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 2 insn 46) }
;;   reg 11 { d18(bb 0 insn -1) }
;;   reg 13 { d22(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d46(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 58 to worklist
  Adding insn 46 to worklist
  Adding insn 39 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 22 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 8 to worklist
Processing use of (reg 1 r1) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 25 sfp) in insn 7:
Processing use of (reg 25 sfp) in insn 12:
Processing use of (reg 138) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 25 sfp) in insn 14:
Processing use of (reg 139) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 25 sfp) in insn 22:
Processing use of (reg 144) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 25 sfp) in insn 30:
Processing use of (reg 149) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 25 sfp) in insn 32:
Processing use of (reg 150) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 25 sfp) in insn 33:
Processing use of (reg 136 [ type ]) in insn 33:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 25 sfp) in insn 39:
Processing use of (subreg (reg 153) 0) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 152 [+40 ]) in insn 37:
  Adding insn 34 to worklist
Processing use of (reg 159) in insn 34:
  Adding insn 63 to worklist
Processing use of (subreg (reg 147) 0) in insn 63:
  Adding insn 26 to worklist
Processing use of (reg 146 [+40 ]) in insn 26:
  Adding insn 23 to worklist
Processing use of (reg 158) in insn 23:
  Adding insn 62 to worklist
Processing use of (subreg (reg 142) 0) in insn 62:
  Adding insn 18 to worklist
Processing use of (reg 141 [+40 ]) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 25 sfp) in insn 15:
Processing use of (reg 13 sp) in insn 46:
Processing use of (reg 0 r0) in insn 46:
  Adding insn 42 to worklist
Processing use of (reg 1 r1) in insn 46:
  Adding insn 43 to worklist
Processing use of (reg 2 r2) in insn 46:
  Adding insn 44 to worklist
Processing use of (reg 3 r3) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 135 [ tsk ]) in insn 45:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 156) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 137) in insn 42:
Processing use of (reg 0 r0) in insn 58:


ptrace_hbp_create

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,5u} r1={5d,3u} r2={4d,1u} r3={4d,1u} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,11u,2d} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r135={1d,1u} r136={1d,1u} r137={1d,2u} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r147={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r156={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 316{267d,47u,2e} in 33{31 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,5] 1[5,5] 2[10,4] 3[14,4] 11[18,1] 12[19,3] 13[22,1] 14[23,3] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,2] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 135[250,1] 136[251,1] 137[252,1] 138[253,1] 139[254,1] 141[255,1] 142[256,1] 144[257,1] 146[258,1] 147[259,1] 149[260,1] 150[261,1] 152[262,1] 153[263,1] 156[264,1] 158[265,1] 159[266,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 141 142 144 146 147 149 150 152 153 156 158 159
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 138 139 141 142 144 146 147 149 150 152 153 156 158 159
;; live  kill	 14 [lr]
;; rd  in  	(10)
4, 9, 13, 17, 18, 21, 22, 25, 46, 47
;; rd  gen 	(18)
1, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  kill	(25)
0, 1, 2, 3, 4, 23, 24, 25, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:449 (set (reg/v/f:SI 135 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:449 (set (reg/v:SI 136 [ type ])
        (reg:SI 1 r1 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ type ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg/f:SI 137)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 8 7 9 2 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 9 8 10 2 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 include/linux/hw_breakpoint.h:40 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 11 10 12 2 include/linux/hw_breakpoint.h:42 (set (reg:SI 138)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/hw_breakpoint.h:42 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8])) [0 attr.type+0 S4 A64])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (const_int 5 [0x5])
            (nil))))

(insn 13 12 14 2 include/linux/hw_breakpoint.h:43 (set (reg:SI 139)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 include/linux/hw_breakpoint.h:43 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 attr.size+0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (const_int 72 [0x48])
            (nil))))

(insn 15 14 18 2 include/linux/hw_breakpoint.h:48 (set (reg:SI 141 [+40 ])
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 18 15 62 2 include/linux/hw_breakpoint.h:48 (set (reg:SI 142)
        (ior:SI (reg:SI 141 [+40 ])
            (const_int 4 [0x4]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 141 [+40 ])
        (nil)))

(insn 62 18 21 2 include/linux/hw_breakpoint.h:48 (set (reg:QI 158)
        (subreg:QI (reg:SI 142) 0)) -1 (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 21 62 22 2 include/linux/hw_breakpoint.h:49 (set (reg:DI 144)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 22 21 23 2 include/linux/hw_breakpoint.h:49 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -56 [0xffffffffffffffc8])) [0 attr.D.23422.sample_period+0 S8 A64])
        (reg:DI 144)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 144)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 23 22 26 2 include/linux/hw_breakpoint.h:55 (set (reg:SI 146 [+40 ])
        (zero_extend:SI (reg:QI 158))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 158)
        (nil)))

(insn 26 23 63 2 include/linux/hw_breakpoint.h:55 (set (reg:SI 147)
        (ior:SI (reg:SI 146 [+40 ])
            (const_int 32 [0x20]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 146 [+40 ])
        (nil)))

(insn 63 26 29 2 include/linux/hw_breakpoint.h:55 (set (reg:QI 159)
        (subreg:QI (reg:SI 147) 0)) -1 (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 29 63 30 2 arch/arm/kernel/ptrace.c:455 (set (reg:DI 149)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 30 29 31 2 arch/arm/kernel/ptrace.c:455 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23452.bp_addr+0 S8 A64])
        (reg:DI 149)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 149)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 31 30 32 2 arch/arm/kernel/ptrace.c:456 (set (reg:DI 150)
        (const_int 4 [0x4])) 163 {*arm_movdi} (nil))

(insn 32 31 33 2 arch/arm/kernel/ptrace.c:456 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 150)) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 150)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 33 32 34 2 arch/arm/kernel/ptrace.c:457 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 attr.bp_type+0 S4 A32])
        (reg/v:SI 136 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ type ])
        (nil)))

(insn 34 33 37 2 arch/arm/kernel/ptrace.c:458 (set (reg:SI 152 [+40 ])
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 37 34 39 2 arch/arm/kernel/ptrace.c:458 (set (reg:SI 153)
        (ior:SI (reg:SI 152 [+40 ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 152 [+40 ])
        (nil)))

(insn 39 37 41 2 arch/arm/kernel/ptrace.c:458 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (subreg:QI (reg:SI 153) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(insn 41 39 42 2 arch/arm/kernel/ptrace.c:460 (set (reg/f:SI 156)
        (symbol_ref:SI ("ptrace_hbptriggered") [flags 0x3] <function_decl 0x1155b780 ptrace_hbptriggered>)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))

(insn 43 42 44 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 1 r1)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (symbol_ref:SI ("ptrace_hbptriggered") [flags 0x3] <function_decl 0x1155b780 ptrace_hbptriggered>)
            (nil))))

(insn 44 43 45 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 3 r3)
        (reg/v/f:SI 135 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ tsk ])
        (nil)))

(call_insn 46 45 58 2 arch/arm/kernel/ptrace.c:460 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524700 register_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 58 46 0 2 arch/arm/kernel/ptrace.c:462 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
1, 9, 13, 17, 18, 21, 22, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_ptrace (arch_ptrace)[0:1564]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 66 n_edges 102 count 129 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 66 n_edges 102 count 131 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 66 n_edges 102 count 131 (    2)


arch_ptrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={48d,46u} r1={33d,13u} r2={35d,15u} r3={28d,8u} r11={1d,65u} r12={24d} r13={1d,103u,6d} r14={25d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={57d,28u} r25={1d,77u,4d} r26={1d,64u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r133={1d,1u} r134={1d,1u} r135={2d,1u} r136={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r141={2d,3u} r142={1d,1u} r143={1d,2u} r144={1d,2u} r145={1d,2u} r146={2d,2u} r147={1d,6u} r148={2d,6u} r149={1d,1u} r151={1d,2u} r152={4d,1u} r153={1d,2u} r154={1d,4u} r155={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,3u} r162={1d} r164={1d,3u} r165={1d} r167={1d,3u} r168={1d} r170={1d,3u} r171={1d} r173={1d,3u} r174={1d} r176={1d,3u} r177={1d} r179={2d,1u} r181={21d,2u} r182={1d,1u} r183={1d,1u} r184={6d,7u} r185={2d,7u} r188={1d,18u} r189={1d,2u} r190={1d,16u,1d} r191={1d,19u} r192={1d,2u} r193={1d,1u} r195={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,2u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u,1d} r208={1d,1u} r209={1d,1u} r210={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r258={1d,1u} r259={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r285={1d,1u} r286={1d,2u} r293={1d,1u} r294={1d,1u} r297={1d,1u} r300={1d,1u} r306={1d,1u} r312={1d,1u} r317={1d,1u} r319={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={2d,2u} r334={1d,1u} r335={1d,1u} r338={1d,1u} 
;;    total ref usage 3281{2622d,647u,12e} in 340{320 regular + 20 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1, 2, 24
  dense invalidated 	116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453
0[0,48] 1[48,33] 2[81,35] 3[116,28] 11[144,1] 12[145,24] 13[169,1] 14[170,25] 15[195,20] 16[215,20] 17[235,20] 18[255,20] 19[275,20] 20[295,20] 21[315,20] 22[335,20] 23[355,20] 24[375,57] 25[432,1] 26[433,1] 27[434,20] 28[454,20] 29[474,20] 30[494,20] 31[514,20] 32[534,20] 33[554,20] 34[574,20] 35[594,20] 36[614,20] 37[634,20] 38[654,20] 39[674,20] 40[694,20] 41[714,20] 42[734,20] 43[754,20] 44[774,20] 45[794,20] 46[814,20] 47[834,20] 48[854,20] 49[874,20] 50[894,20] 51[914,20] 52[934,20] 53[954,20] 54[974,20] 55[994,20] 56[1014,20] 57[1034,20] 58[1054,20] 59[1074,20] 60[1094,20] 61[1114,20] 62[1134,20] 63[1154,20] 64[1174,20] 65[1194,20] 66[1214,20] 67[1234,20] 68[1254,20] 69[1274,20] 70[1294,20] 71[1314,20] 72[1334,20] 73[1354,20] 74[1374,20] 75[1394,20] 76[1414,20] 77[1434,20] 78[1454,20] 79[1474,20] 80[1494,20] 81[1514,20] 82[1534,20] 83[1554,20] 84[1574,20] 85[1594,20] 86[1614,20] 87[1634,20] 88[1654,20] 89[1674,20] 90[1694,20] 91[1714,20] 92[1734,20] 93[1754,20] 94[1774,20] 95[1794,20] 96[1814,20] 97[1834,20] 98[1854,20] 99[1874,20] 100[1894,20] 101[1914,20] 102[1934,20] 103[1954,20] 104[1974,20] 105[1994,20] 106[2014,20] 107[2034,20] 108[2054,20] 109[2074,20] 110[2094,20] 111[2114,20] 112[2134,20] 113[2154,20] 114[2174,20] 115[2194,20] 116[2214,20] 117[2234,20] 118[2254,20] 119[2274,20] 120[2294,20] 121[2314,20] 122[2334,20] 123[2354,20] 124[2374,20] 125[2394,20] 126[2414,20] 127[2434,20] 133[2454,1] 134[2455,1] 135[2456,2] 136[2458,2] 137[2460,1] 138[2461,1] 139[2462,1] 141[2463,2] 142[2465,1] 143[2466,1] 144[2467,1] 145[2468,1] 146[2469,2] 147[2471,1] 148[2472,2] 149[2474,1] 151[2475,1] 152[2476,4] 153[2480,1] 154[2481,1] 155[2482,1] 158[2483,1] 159[2484,1] 161[2485,1] 162[2486,1] 164[2487,1] 165[2488,1] 167[2489,1] 168[2490,1] 170[2491,1] 171[2492,1] 173[2493,1] 174[2494,1] 176[2495,1] 177[2496,1] 179[2497,2] 181[2499,21] 182[2520,1] 183[2521,1] 184[2522,6] 185[2528,2] 188[2530,1] 189[2531,1] 190[2532,1] 191[2533,1] 192[2534,1] 193[2535,1] 195[2536,1] 197[2537,1] 198[2538,1] 199[2539,1] 200[2540,1] 201[2541,1] 202[2542,1] 203[2543,1] 204[2544,1] 205[2545,1] 206[2546,1] 208[2547,1] 209[2548,1] 210[2549,1] 214[2550,1] 215[2551,1] 216[2552,1] 220[2553,1] 221[2554,1] 222[2555,1] 227[2556,1] 228[2557,1] 229[2558,1] 234[2559,1] 235[2560,1] 236[2561,1] 237[2562,1] 238[2563,1] 243[2564,1] 244[2565,1] 245[2566,1] 250[2567,1] 251[2568,1] 252[2569,1] 253[2570,1] 254[2571,1] 255[2572,1] 256[2573,1] 258[2574,1] 259[2575,1] 261[2576,1] 262[2577,1] 263[2578,1] 264[2579,1] 265[2580,1] 266[2581,1] 267[2582,1] 268[2583,1] 269[2584,1] 270[2585,1] 271[2586,1] 272[2587,1] 273[2588,1] 274[2589,1] 275[2590,1] 276[2591,1] 277[2592,1] 278[2593,1] 279[2594,1] 280[2595,1] 281[2596,1] 282[2597,1] 283[2598,1] 285[2599,1] 286[2600,1] 293[2601,1] 294[2602,1] 297[2603,1] 300[2604,1] 306[2605,1] 312[2606,1] 317[2607,1] 319[2608,1] 324[2609,1] 325[2610,1] 326[2611,1] 327[2612,1] 328[2613,1] 330[2614,1] 331[2615,1] 332[2616,1] 333[2617,2] 334[2619,1] 335[2620,1] 338[2621,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d47(0){ }d80(1){ }d115(2){ }d143(3){ }d144(11){ }d168(12){ }d169(13){ }d194(14){ }d432(25){ }d433(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433
;; rd  kill	(81)
116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 432, 433
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433

( 0 )->[2]->( 62 3 8 9 11 13 15 17 18 19 21 23 41 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d144(bb 0 insn -1) }u1(13){ d169(bb 0 insn -1) }u2(25){ d432(bb 0 insn -1) }u3(26){ d433(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 188 189 190 191 192
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 188 189 190 191 192
;; live  kill	 24 [cc]
;; rd  in  	(10)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433
;; rd  gen 	(5)
2530, 2531, 2532, 2533, 2534
;; rd  kill	(5)
2530, 2531, 2532, 2533, 2534
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 189 190 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 189 190 191
;; rd  out 	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d47(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d80(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d115(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d143(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 189 { d2531(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 11
;;      reg 192 { d2534(bb 2 insn 10) }
;;      reg 192 { d2534(bb 2 insn 10) }

( 2 )->[3]->( 64 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d144(bb 0 insn -1) }u12(13){ d169(bb 0 insn -1) }u13(25){ d432(bb 0 insn -1) }u14(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc] 193 195 197 198 199 200 201
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 24 [cc] 193 195 197 198 199 200 201
;; live  kill	
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(8)
428, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  kill	(7)
2535, 2536, 2537, 2538, 2539, 2540, 2541
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191 201
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191 201
;; rd  out 	(23)
47, 80, 115, 143, 144, 168, 169, 194, 428, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 17
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 18
;;      reg 193 { d2535(bb 3 insn 17) }
;;   UD chains for insn luid 2 uid 19
;;      reg 24 { d430(bb 3 insn 18) }
;;   UD chains for insn luid 4 uid 22
;;      reg 190 { d2532(bb 2 insn 4) }
;;      reg 197 { d2537(bb 3 insn 21) }
;;   eq_note reg 190 { }
;;   UD chains for insn luid 5 uid 23
;;      reg 24 { d429(bb 3 insn 22) }
;;   UD chains for insn luid 6 uid 25
;;      reg 195 { d2536(bb 3 insn 19) }
;;      reg 198 { d2538(bb 3 insn 23) }
;;   UD chains for insn luid 7 uid 26
;;      reg 199 { d2539(bb 3 insn 25) }
;;   UD chains for insn luid 8 uid 27
;;      reg 200 { d2540(bb 3 insn 26) }
;;   UD chains for insn luid 9 uid 28
;;      reg 201 { d2541(bb 3 insn 27) }
;;   UD chains for insn luid 10 uid 29
;;      reg 24 { d428(bb 3 insn 28) }

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ d144(bb 0 insn -1) }u29(13){ d169(bb 0 insn -1) }u30(25){ d432(bb 0 insn -1) }u31(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
47, 80, 115, 143, 144, 168, 169, 194, 428, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  gen 	(1)
427
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; rd  out 	(23)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 31
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 32
;;      reg 24 { d427(bb 4 insn 31) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ d144(bb 0 insn -1) }u35(13){ d169(bb 0 insn -1) }u36(25){ d432(bb 0 insn -1) }u37(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191 201
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 201
;; lr  def 	 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191 201
;; live  gen 	 179
;; live  kill	
;; rd  in  	(23)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  gen 	(1)
2497
;; rd  kill	(2)
2497, 2498
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; rd  out 	(24)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2497, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 201 { d2541(bb 3 insn 27) }

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ d144(bb 0 insn -1) }u40(13){ d169(bb 0 insn -1) }u41(25){ d432(bb 0 insn -1) }u42(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190
;; lr  def 	 179 202 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 179 202 203 204 205 206
;; live  kill	
;; rd  in  	(23)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  gen 	(6)
2498, 2542, 2543, 2544, 2545, 2546
;; rd  kill	(7)
2497, 2498, 2542, 2543, 2544, 2545, 2546
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; rd  out 	(29)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2498, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 41
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 42
;;      reg 204 { d2544(bb 6 insn 41) }
;;   UD chains for insn luid 4 uid 43
;;      reg 202 { d2542(bb 6 insn 39) }
;;      reg 205 { d2545(bb 6 insn 42) }
;;   UD chains for insn luid 5 uid 45
;;      reg 203 { d2543(bb 6 insn 40) }
;;      reg 206 { d2546(bb 6 insn 43) }
;;   eq_note reg 206 { }

( 6 5 )->[7]->( 65 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u51(11){ d144(bb 0 insn -1) }u52(13){ d169(bb 0 insn -1) }u53(25){ d432(bb 0 insn -1) }u54(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; live  gen 	 0 [r0] 2 [r2] 181
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(30)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2497, 2498, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546
;; rd  gen 	(3)
45, 114, 2519
;; rd  kill	(70)
145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(28)
45, 80, 114, 143, 144, 169, 432, 433, 2497, 2498, 2519, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 179 { d2498(bb 6 insn 45) d2497(bb 5 insn 34) }
;;   UD chains for insn luid 1 uid 49
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 50
;;      reg 0 { d46(bb 7 insn 49) }
;;      reg 2 { d114(bb 7 insn 48) }
;;   UD chains for insn luid 3 uid 51
;;      reg 0 { d45(bb 7 insn 50) }

( 2 )->[8]->( 65 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ d144(bb 0 insn -1) }u61(13){ d169(bb 0 insn -1) }u62(25){ d432(bb 0 insn -1) }u63(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 181
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
43, 2518
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(15)
43, 80, 115, 143, 144, 168, 169, 432, 433, 2518, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 57
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 58
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 59
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d44(bb 8 insn 56) }
;;      reg 1 { d79(bb 8 insn 57) }
;;      reg 2 { d113(bb 8 insn 58) }
;;   UD chains for insn luid 4 uid 60
;;      reg 0 { d43(bb 8 insn 59) }

( 2 )->[9]->( 64 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ d144(bb 0 insn -1) }u73(13){ d169(bb 0 insn -1) }u74(25){ d432(bb 0 insn -1) }u75(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 176 177 208 209 210
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 176 177 208 209 210
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
424, 2495, 2496, 2547, 2548, 2549
;; rd  kill	(5)
2495, 2496, 2547, 2548, 2549
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 176 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 176 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 424, 432, 433, 2495, 2496, 2530, 2531, 2532, 2533, 2534, 2547, 2548, 2549
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 66
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 67
;;      reg 209 { d2548(bb 9 insn 66) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 68
;;      reg 208 { d2547(bb 9 insn 67) }
;;   UD chains for insn luid 3 uid 69
;;      reg 191 { d2533(bb 2 insn 5) }
;;      reg 210 { d2549(bb 9 insn 68) }
;;   UD chains for insn luid 4 uid 70
;;      reg 176 { d2495(bb 9 insn 69) }
;;   UD chains for insn luid 5 uid 71
;;      reg 24 { d424(bb 9 insn 70) }

( 9 )->[10]->( 65 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ d144(bb 0 insn -1) }u85(13){ d169(bb 0 insn -1) }u86(25){ d432(bb 0 insn -1) }u87(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 424, 432, 433, 2495, 2496, 2530, 2531, 2532, 2533, 2534, 2547, 2548, 2549
;; rd  gen 	(2)
41, 2517
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
41, 80, 115, 143, 144, 168, 169, 424, 432, 433, 2495, 2496, 2517, 2530, 2531, 2532, 2533, 2534, 2547, 2548, 2549
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 76
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 176 { d2495(bb 9 insn 69) }
;;   UD chains for insn luid 1 uid 77
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 78
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 80
;;      reg 176 { d2495(bb 9 insn 69) }
;;   UD chains for insn luid 6 uid 82
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d42(bb 10 insn 78) }
;;      reg 1 { d53(bb 10 insn 79) }
;;      reg 2 { d87(bb 10 insn 80) }
;;      reg 3 { d141(bb 10 insn 81) }
;;   UD chains for insn luid 7 uid 83
;;      reg 0 { d41(bb 10 insn 82) }

( 2 )->[11]->( 64 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u100(11){ d144(bb 0 insn -1) }u101(13){ d169(bb 0 insn -1) }u102(25){ d432(bb 0 insn -1) }u103(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 173 174 214 215 216
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 173 174 214 215 216
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
422, 2493, 2494, 2550, 2551, 2552
;; rd  kill	(5)
2493, 2494, 2550, 2551, 2552
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 422, 432, 433, 2493, 2494, 2530, 2531, 2532, 2533, 2534, 2550, 2551, 2552
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 89
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 90
;;      reg 215 { d2551(bb 11 insn 89) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 91
;;      reg 214 { d2550(bb 11 insn 90) }
;;   UD chains for insn luid 3 uid 92
;;      reg 191 { d2533(bb 2 insn 5) }
;;      reg 216 { d2552(bb 11 insn 91) }
;;   UD chains for insn luid 4 uid 93
;;      reg 173 { d2493(bb 11 insn 92) }
;;   UD chains for insn luid 5 uid 94
;;      reg 24 { d422(bb 11 insn 93) }

( 11 )->[12]->( 65 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u112(11){ d144(bb 0 insn -1) }u113(13){ d169(bb 0 insn -1) }u114(25){ d432(bb 0 insn -1) }u115(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 422, 432, 433, 2493, 2494, 2530, 2531, 2532, 2533, 2534, 2550, 2551, 2552
;; rd  gen 	(2)
39, 2516
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
39, 80, 115, 143, 144, 168, 169, 422, 432, 433, 2493, 2494, 2516, 2530, 2531, 2532, 2533, 2534, 2550, 2551, 2552
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 99
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 173 { d2493(bb 11 insn 92) }
;;   UD chains for insn luid 1 uid 100
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 101
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 103
;;      reg 173 { d2493(bb 11 insn 92) }
;;   UD chains for insn luid 6 uid 105
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d40(bb 12 insn 101) }
;;      reg 1 { d52(bb 12 insn 102) }
;;      reg 2 { d86(bb 12 insn 103) }
;;      reg 3 { d139(bb 12 insn 104) }
;;   UD chains for insn luid 7 uid 106
;;      reg 0 { d39(bb 12 insn 105) }

( 2 )->[13]->( 64 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u128(11){ d144(bb 0 insn -1) }u129(13){ d169(bb 0 insn -1) }u130(25){ d432(bb 0 insn -1) }u131(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 170 171 220 221 222
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 170 171 220 221 222
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
420, 2491, 2492, 2553, 2554, 2555
;; rd  kill	(5)
2491, 2492, 2553, 2554, 2555
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 420, 432, 433, 2491, 2492, 2530, 2531, 2532, 2533, 2534, 2553, 2554, 2555
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 112
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 113
;;      reg 221 { d2554(bb 13 insn 112) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 114
;;      reg 220 { d2553(bb 13 insn 113) }
;;   UD chains for insn luid 3 uid 115
;;      reg 191 { d2533(bb 2 insn 5) }
;;      reg 222 { d2555(bb 13 insn 114) }
;;   UD chains for insn luid 4 uid 116
;;      reg 170 { d2491(bb 13 insn 115) }
;;   UD chains for insn luid 5 uid 117
;;      reg 24 { d420(bb 13 insn 116) }

( 13 )->[14]->( 65 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u140(11){ d144(bb 0 insn -1) }u141(13){ d169(bb 0 insn -1) }u142(25){ d432(bb 0 insn -1) }u143(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 420, 432, 433, 2491, 2492, 2530, 2531, 2532, 2533, 2534, 2553, 2554, 2555
;; rd  gen 	(2)
37, 2515
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
37, 80, 115, 143, 144, 168, 169, 420, 432, 433, 2491, 2492, 2515, 2530, 2531, 2532, 2533, 2534, 2553, 2554, 2555
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 123
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 170 { d2491(bb 13 insn 115) }
;;   UD chains for insn luid 1 uid 124
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 125
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 127
;;      reg 170 { d2491(bb 13 insn 115) }
;;   UD chains for insn luid 6 uid 129
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d38(bb 14 insn 125) }
;;      reg 1 { d51(bb 14 insn 126) }
;;      reg 2 { d85(bb 14 insn 127) }
;;      reg 3 { d137(bb 14 insn 128) }
;;   UD chains for insn luid 7 uid 130
;;      reg 0 { d37(bb 14 insn 129) }

( 2 )->[15]->( 64 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u156(11){ d144(bb 0 insn -1) }u157(13){ d169(bb 0 insn -1) }u158(25){ d432(bb 0 insn -1) }u159(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 167 168 227 228 229
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 167 168 227 228 229
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
418, 2489, 2490, 2556, 2557, 2558
;; rd  kill	(5)
2489, 2490, 2556, 2557, 2558
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 418, 432, 433, 2489, 2490, 2530, 2531, 2532, 2533, 2534, 2556, 2557, 2558
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 136
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 137
;;      reg 228 { d2557(bb 15 insn 136) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 138
;;      reg 227 { d2556(bb 15 insn 137) }
;;   UD chains for insn luid 3 uid 139
;;      reg 191 { d2533(bb 2 insn 5) }
;;      reg 229 { d2558(bb 15 insn 138) }
;;   UD chains for insn luid 4 uid 140
;;      reg 167 { d2489(bb 15 insn 139) }
;;   UD chains for insn luid 5 uid 141
;;      reg 24 { d418(bb 15 insn 140) }

( 15 )->[16]->( 65 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u168(11){ d144(bb 0 insn -1) }u169(13){ d169(bb 0 insn -1) }u170(25){ d432(bb 0 insn -1) }u171(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 418, 432, 433, 2489, 2490, 2530, 2531, 2532, 2533, 2534, 2556, 2557, 2558
;; rd  gen 	(2)
35, 2514
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
35, 80, 115, 143, 144, 168, 169, 418, 432, 433, 2489, 2490, 2514, 2530, 2531, 2532, 2533, 2534, 2556, 2557, 2558
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 147
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 167 { d2489(bb 15 insn 139) }
;;   UD chains for insn luid 1 uid 148
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 149
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 151
;;      reg 167 { d2489(bb 15 insn 139) }
;;   UD chains for insn luid 6 uid 153
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d36(bb 16 insn 149) }
;;      reg 1 { d50(bb 16 insn 150) }
;;      reg 2 { d84(bb 16 insn 151) }
;;      reg 3 { d135(bb 16 insn 152) }
;;   UD chains for insn luid 7 uid 154
;;      reg 0 { d35(bb 16 insn 153) }

( 2 )->[17]->( 65 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u184(11){ d144(bb 0 insn -1) }u185(13){ d169(bb 0 insn -1) }u186(25){ d432(bb 0 insn -1) }u187(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 181 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 2 [r2] 181 234
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(4)
33, 107, 2513, 2559
;; rd  kill	(71)
145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2559
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(15)
33, 80, 107, 143, 144, 169, 432, 433, 2513, 2530, 2531, 2532, 2533, 2534, 2559
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 159
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 160
;;      reg 234 { d2559(bb 17 insn 159) }
;;   UD chains for insn luid 2 uid 161
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 3 uid 162
;;      reg 0 { d34(bb 17 insn 161) }
;;      reg 2 { d107(bb 17 insn 160) }
;;   UD chains for insn luid 4 uid 163
;;      reg 0 { d33(bb 17 insn 162) }

( 2 )->[18]->( 65 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u194(11){ d144(bb 0 insn -1) }u195(13){ d169(bb 0 insn -1) }u196(25){ d432(bb 0 insn -1) }u197(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  def 	 181 235
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 181 235
;; live  kill	
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2512, 2560
;; rd  kill	(22)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2560
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; rd  out 	(17)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2512, 2530, 2531, 2532, 2533, 2534, 2560
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 168
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 169
;;      reg 191 { d2533(bb 2 insn 5) }
;;      reg 235 { d2560(bb 18 insn 168) }

( 2 )->[19]->( 64 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u201(11){ d144(bb 0 insn -1) }u202(13){ d169(bb 0 insn -1) }u203(25){ d432(bb 0 insn -1) }u204(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 164 165 236 237 238
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 164 165 236 237 238
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
415, 2487, 2488, 2561, 2562, 2563
;; rd  kill	(5)
2487, 2488, 2561, 2562, 2563
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 415, 432, 433, 2487, 2488, 2530, 2531, 2532, 2533, 2534, 2561, 2562, 2563
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 176
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 177
;;      reg 237 { d2562(bb 19 insn 176) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 178
;;      reg 236 { d2561(bb 19 insn 177) }
;;   UD chains for insn luid 3 uid 179
;;      reg 191 { d2533(bb 2 insn 5) }
;;      reg 238 { d2563(bb 19 insn 178) }
;;   UD chains for insn luid 4 uid 180
;;      reg 164 { d2487(bb 19 insn 179) }
;;   UD chains for insn luid 5 uid 181
;;      reg 24 { d415(bb 19 insn 180) }

( 19 )->[20]->( 65 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u213(11){ d144(bb 0 insn -1) }u214(13){ d169(bb 0 insn -1) }u215(25){ d432(bb 0 insn -1) }u216(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 415, 432, 433, 2487, 2488, 2530, 2531, 2532, 2533, 2534, 2561, 2562, 2563
;; rd  gen 	(2)
31, 2511
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
31, 80, 115, 143, 144, 168, 169, 415, 432, 433, 2487, 2488, 2511, 2530, 2531, 2532, 2533, 2534, 2561, 2562, 2563
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 187
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 164 { d2487(bb 19 insn 179) }
;;   UD chains for insn luid 1 uid 188
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 189
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 191
;;      reg 164 { d2487(bb 19 insn 179) }
;;   UD chains for insn luid 6 uid 193
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d32(bb 20 insn 189) }
;;      reg 1 { d49(bb 20 insn 190) }
;;      reg 2 { d83(bb 20 insn 191) }
;;      reg 3 { d133(bb 20 insn 192) }
;;   UD chains for insn luid 7 uid 194
;;      reg 0 { d31(bb 20 insn 193) }

( 2 )->[21]->( 64 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u229(11){ d144(bb 0 insn -1) }u230(13){ d169(bb 0 insn -1) }u231(25){ d432(bb 0 insn -1) }u232(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 161 162 243 244 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 161 162 243 244 245
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
413, 2485, 2486, 2564, 2565, 2566
;; rd  kill	(5)
2485, 2486, 2564, 2565, 2566
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 413, 432, 433, 2485, 2486, 2530, 2531, 2532, 2533, 2534, 2564, 2565, 2566
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 200
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 201
;;      reg 244 { d2565(bb 21 insn 200) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 202
;;      reg 243 { d2564(bb 21 insn 201) }
;;   UD chains for insn luid 3 uid 203
;;      reg 191 { d2533(bb 2 insn 5) }
;;      reg 245 { d2566(bb 21 insn 202) }
;;   UD chains for insn luid 4 uid 204
;;      reg 161 { d2485(bb 21 insn 203) }
;;   UD chains for insn luid 5 uid 205
;;      reg 24 { d413(bb 21 insn 204) }

( 21 )->[22]->( 65 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u241(11){ d144(bb 0 insn -1) }u242(13){ d169(bb 0 insn -1) }u243(25){ d432(bb 0 insn -1) }u244(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 413, 432, 433, 2485, 2486, 2530, 2531, 2532, 2533, 2534, 2564, 2565, 2566
;; rd  gen 	(2)
29, 2510
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
29, 80, 115, 143, 144, 168, 169, 413, 432, 433, 2485, 2486, 2510, 2530, 2531, 2532, 2533, 2534, 2564, 2565, 2566
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 211
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 161 { d2485(bb 21 insn 203) }
;;   UD chains for insn luid 1 uid 212
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 213
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 215
;;      reg 161 { d2485(bb 21 insn 203) }
;;   UD chains for insn luid 6 uid 217
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d30(bb 22 insn 213) }
;;      reg 1 { d48(bb 22 insn 214) }
;;      reg 2 { d82(bb 22 insn 215) }
;;      reg 3 { d131(bb 22 insn 216) }
;;   UD chains for insn luid 7 uid 218
;;      reg 0 { d29(bb 22 insn 217) }

( 2 )->[23]->( 63 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u257(11){ d144(bb 0 insn -1) }u258(13){ d169(bb 0 insn -1) }u259(25){ d432(bb 0 insn -1) }u260(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 24 [cc] 183
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
27, 410, 2521
;; rd  kill	(26)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2521
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
27, 80, 115, 143, 144, 168, 169, 410, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 223
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 224
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d28(bb 23 insn 223) }
;;   UD chains for insn luid 2 uid 225
;;      reg 0 { d27(bb 23 insn 224) }
;;   UD chains for insn luid 3 uid 226
;;      reg 183 { d2521(bb 23 insn 225) }
;;   UD chains for insn luid 4 uid 227
;;      reg 24 { d410(bb 23 insn 226) }

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u267(11){ d144(bb 0 insn -1) }u268(13){ d169(bb 0 insn -1) }u269(25){ d432(bb 0 insn -1) }u270(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 410, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
383
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 230
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 231
;;      reg 24 { d383(bb 24 insn 230) }

( 24 )->[25]->( 39 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u273(11){ d144(bb 0 insn -1) }u274(13){ d169(bb 0 insn -1) }u275(25){ d432(bb 0 insn -1) }u276(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 152 155 158 159 250 251 252 253 254
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 137 138 139 152 155 158 159 250 251 252 253 254
;; live  kill	 14 [lr]
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(13)
22, 2460, 2461, 2462, 2479, 2482, 2483, 2484, 2567, 2568, 2569, 2570, 2571
;; rd  kill	(40)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2460, 2461, 2462, 2476, 2477, 2478, 2479, 2482, 2483, 2484, 2567, 2568, 2569, 2570, 2571
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(28)
22, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2460, 2461, 2462, 2479, 2482, 2483, 2484, 2521, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 233
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 234
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d1(bb 25 insn 233) }
;;   UD chains for insn luid 2 uid 235
;;      reg 0 { d26(bb 25 insn 234) }
;;   UD chains for insn luid 4 uid 237
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d25(bb 25 insn 236) }
;;   UD chains for insn luid 5 uid 238
;;      reg 0 { d24(bb 25 insn 237) }
;;   UD chains for insn luid 6 uid 239
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 240
;;      reg 0 { d23(bb 25 insn 239) }
;;   UD chains for insn luid 8 uid 242
;;      reg 13 { d169(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 243
;;      reg 0 { d22(bb 25 insn 242) }
;;   UD chains for insn luid 10 uid 245
;;      reg 250 { d2567(bb 25 insn 240) }
;;   UD chains for insn luid 11 uid 246
;;      reg 155 { d2482(bb 25 insn 245) }
;;      reg 251 { d2568(bb 25 insn 243) }
;;   UD chains for insn luid 12 uid 247
;;      reg 139 { d2462(bb 25 insn 246) }
;;   UD chains for insn luid 13 uid 248
;;      reg 158 { d2483(bb 25 insn 238) }
;;   UD chains for insn luid 14 uid 249
;;      reg 138 { d2461(bb 25 insn 247) }
;;      reg 252 { d2569(bb 25 insn 248) }
;;   UD chains for insn luid 15 uid 250
;;      reg 137 { d2460(bb 25 insn 249) }
;;   UD chains for insn luid 16 uid 251
;;      reg 159 { d2484(bb 25 insn 235) }
;;   UD chains for insn luid 17 uid 252
;;      reg 253 { d2570(bb 25 insn 250) }
;;      reg 254 { d2571(bb 25 insn 251) }

( 24 )->[26]->( 28 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u299(11){ d144(bb 0 insn -1) }u300(13){ d169(bb 0 insn -1) }u301(25){ d432(bb 0 insn -1) }u302(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 258
;;      reg 24 { d383(bb 24 insn 230) }

( 26 )->[27]->( 29 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u304(11){ d144(bb 0 insn -1) }u305(13){ d169(bb 0 insn -1) }u306(25){ d432(bb 0 insn -1) }u307(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 136
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2459
;; rd  kill	(2)
2458, 2459
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; rd  out 	(17)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2459, 2521, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 260
;;      reg 190 { d2532(bb 2 insn 4) }

( 26 )->[28]->( 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u309(11){ d144(bb 0 insn -1) }u310(13){ d169(bb 0 insn -1) }u311(25){ d432(bb 0 insn -1) }u312(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 136
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2458
;; rd  kill	(2)
2458, 2459
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; rd  out 	(17)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2458, 2521, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 265
;;      reg 190 { d2532(bb 2 insn 4) }

( 28 27 )->[29]->( 30 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u314(11){ d144(bb 0 insn -1) }u315(13){ d169(bb 0 insn -1) }u316(25){ d432(bb 0 insn -1) }u317(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 153 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; live  gen 	 24 [cc] 153 255
;; live  kill	
;; rd  in  	(18)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2458, 2459, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
405, 2480, 2572
;; rd  kill	(2)
2480, 2572
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; rd  out 	(20)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2521, 2530, 2531, 2532, 2533, 2534, 2572
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 268
;;      reg 136 { d2459(bb 27 insn 260) d2458(bb 28 insn 265) }
;;   UD chains for insn luid 1 uid 269
;;      reg 255 { d2572(bb 29 insn 268) }
;;   UD chains for insn luid 2 uid 270
;;      reg 153 { d2480(bb 29 insn 269) }
;;   UD chains for insn luid 3 uid 271
;;      reg 24 { d405(bb 29 insn 270) }

( 29 )->[30]->( 40 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u322(11){ d144(bb 0 insn -1) }u323(13){ d169(bb 0 insn -1) }u324(25){ d432(bb 0 insn -1) }u325(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(20)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2521, 2530, 2531, 2532, 2533, 2534, 2572
;; rd  gen 	(1)
2509
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(21)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2509, 2521, 2530, 2531, 2532, 2533, 2534, 2572
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }

( 29 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u326(11){ d144(bb 0 insn -1) }u327(13){ d169(bb 0 insn -1) }u328(25){ d432(bb 0 insn -1) }u329(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188
;; lr  def 	 24 [cc] 154 256 258 259
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; live  gen 	 24 [cc] 154 256 258 259
;; live  kill	
;; rd  in  	(20)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2521, 2530, 2531, 2532, 2533, 2534, 2572
;; rd  gen 	(5)
404, 2481, 2573, 2574, 2575
;; rd  kill	(4)
2481, 2573, 2574, 2575
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; rd  out 	(24)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 278
;;      reg 153 { d2480(bb 29 insn 269) }
;;   UD chains for insn luid 1 uid 280
;;      reg 256 { d2573(bb 31 insn 278) }
;;   UD chains for insn luid 2 uid 281
;;      reg 188 { d2530(bb 2 insn 2) }
;;      reg 258 { d2574(bb 31 insn 280) }
;;   UD chains for insn luid 3 uid 283
;;      reg 259 { d2575(bb 31 insn 281) }
;;   UD chains for insn luid 4 uid 284
;;      reg 154 { d2481(bb 31 insn 283) }
;;   UD chains for insn luid 5 uid 285
;;      reg 24 { d404(bb 31 insn 284) }

( 31 )->[32]->( 39 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u337(11){ d144(bb 0 insn -1) }u338(13){ d169(bb 0 insn -1) }u339(25){ d432(bb 0 insn -1) }u340(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; live  gen 	 152
;; live  kill	
;; rd  in  	(24)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575
;; rd  gen 	(1)
2476
;; rd  kill	(4)
2476, 2477, 2478, 2479
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(25)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2476, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 287
;;      reg 154 { d2481(bb 31 insn 283) }

( 31 )->[33]->( 35 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u342(11){ d144(bb 0 insn -1) }u343(13){ d169(bb 0 insn -1) }u344(25){ d432(bb 0 insn -1) }u345(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 141 185 261
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; live  gen 	 141 185 261
;; live  kill	
;; rd  in  	(24)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575
;; rd  gen 	(3)
2463, 2529, 2576
;; rd  kill	(5)
2463, 2464, 2528, 2529, 2576
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; rd  out 	(27)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2463, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 292
;;      reg 154 { d2481(bb 31 insn 283) }
;;   UD chains for insn luid 1 uid 293
;;      reg 185 { d2529(bb 33 insn 292) }
;;   UD chains for insn luid 2 uid 294
;;      reg 261 { d2576(bb 33 insn 293) }

( 35 )->[34]->( 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u349(11){ d144(bb 0 insn -1) }u350(13){ d169(bb 0 insn -1) }u351(25){ d432(bb 0 insn -1) }u352(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  gen 	 141 262
;; live  kill	
;; rd  in  	(30)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;; rd  gen 	(2)
2464, 2577
;; rd  kill	(3)
2463, 2464, 2577
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; rd  out 	(29)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 299
;;      reg 141 { d2464(bb 34 insn 300) d2463(bb 33 insn 294) }
;;   UD chains for insn luid 1 uid 300
;;      reg 262 { d2577(bb 34 insn 299) }

( 34 33 )->[35]->( 34 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u355(11){ d144(bb 0 insn -1) }u356(13){ d169(bb 0 insn -1) }u357(25){ d432(bb 0 insn -1) }u358(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  gen 	 24 [cc] 263
;; live  kill	
;; rd  in  	(31)
27, 80, 115, 143, 144, 168, 169, 403, 404, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;; rd  gen 	(2)
403, 2578
;; rd  kill	(1)
2578
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; rd  out 	(30)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 304
;;      reg 141 { d2464(bb 34 insn 300) d2463(bb 33 insn 294) }
;;   UD chains for insn luid 1 uid 305
;;      reg 263 { d2578(bb 35 insn 304) }
;;   UD chains for insn luid 2 uid 306
;;      reg 24 { d403(bb 35 insn 305) }

( 35 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u362(11){ d144(bb 0 insn -1) }u363(13){ d169(bb 0 insn -1) }u364(25){ d432(bb 0 insn -1) }u365(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc] 264
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  gen 	 24 [cc] 264
;; live  kill	
;; rd  in  	(30)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;; rd  gen 	(2)
402, 2579
;; rd  kill	(1)
2579
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 191
;; rd  out 	(31)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 308
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 309
;;      reg 264 { d2579(bb 36 insn 308) }
;;   UD chains for insn luid 2 uid 310
;;      reg 24 { d402(bb 36 insn 309) }

( 36 )->[37]->( 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u369(11){ d144(bb 0 insn -1) }u370(13){ d169(bb 0 insn -1) }u371(25){ d432(bb 0 insn -1) }u372(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; live  gen 	 152
;; live  kill	
;; rd  in  	(31)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579
;; rd  gen 	(1)
2478
;; rd  kill	(4)
2476, 2477, 2478, 2479
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(32)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2478, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 312
;;      reg 154 { d2481(bb 31 insn 283) }

( 36 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u374(11){ d144(bb 0 insn -1) }u375(13){ d169(bb 0 insn -1) }u376(25){ d432(bb 0 insn -1) }u377(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 185 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 185
;; lr  def 	 152 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 185 188 191
;; live  gen 	 152 185 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281
;; live  kill	
;; rd  in  	(31)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579
;; rd  gen 	(19)
2477, 2528, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;; rd  kill	(21)
2476, 2477, 2478, 2479, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(50)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2477, 2480, 2481, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 317
;;      reg 141 { d2464(bb 34 insn 300) d2463(bb 33 insn 294) }
;;      reg 185 read/write { d2529(bb 33 insn 292) }
;;   UD chains for insn luid 1 uid 319
;;      reg 185 { d2529(bb 33 insn 292) d2528(bb 38 insn 317) }
;;   UD chains for insn luid 2 uid 320
;;      reg 265 { d2580(bb 38 insn 319) }
;;   UD chains for insn luid 3 uid 321
;;      reg 266 { d2581(bb 38 insn 320) }
;;   UD chains for insn luid 4 uid 322
;;      reg 185 { d2529(bb 33 insn 292) d2528(bb 38 insn 317) }
;;   UD chains for insn luid 5 uid 323
;;      reg 268 { d2583(bb 38 insn 322) }
;;   UD chains for insn luid 6 uid 324
;;      reg 269 { d2584(bb 38 insn 323) }
;;   UD chains for insn luid 7 uid 325
;;      reg 267 { d2582(bb 38 insn 321) }
;;      reg 270 { d2585(bb 38 insn 324) }
;;   UD chains for insn luid 8 uid 326
;;      reg 185 { d2529(bb 33 insn 292) d2528(bb 38 insn 317) }
;;   UD chains for insn luid 9 uid 327
;;      reg 272 { d2587(bb 38 insn 326) }
;;   UD chains for insn luid 10 uid 328
;;      reg 271 { d2586(bb 38 insn 325) }
;;      reg 273 { d2588(bb 38 insn 327) }
;;   UD chains for insn luid 11 uid 329
;;      reg 185 { d2529(bb 33 insn 292) d2528(bb 38 insn 317) }
;;   UD chains for insn luid 12 uid 330
;;      reg 275 { d2590(bb 38 insn 329) }
;;   UD chains for insn luid 13 uid 331
;;      reg 276 { d2591(bb 38 insn 330) }
;;   UD chains for insn luid 14 uid 332
;;      reg 274 { d2589(bb 38 insn 328) }
;;      reg 277 { d2592(bb 38 insn 331) }
;;   UD chains for insn luid 15 uid 333
;;      reg 185 { d2529(bb 33 insn 292) d2528(bb 38 insn 317) }
;;   UD chains for insn luid 16 uid 334
;;      reg 279 { d2594(bb 38 insn 333) }
;;   UD chains for insn luid 17 uid 335
;;      reg 280 { d2595(bb 38 insn 334) }
;;   UD chains for insn luid 18 uid 336
;;      reg 278 { d2593(bb 38 insn 332) }
;;      reg 281 { d2596(bb 38 insn 335) }

( 38 25 32 37 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u402(11){ d144(bb 0 insn -1) }u403(13){ d169(bb 0 insn -1) }u404(25){ d432(bb 0 insn -1) }u405(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 191
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 151 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 151 181
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(67)
22, 27, 80, 115, 143, 144, 168, 169, 383, 402, 404, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;; rd  gen 	(5)
20, 99, 375, 2475, 2499
;; rd  kill	(71)
145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2475, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(65)
20, 80, 99, 143, 144, 169, 375, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2499, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 339
;;      reg 152 { d2479(bb 25 insn 252) d2478(bb 37 insn 312) d2477(bb 38 insn 336) d2476(bb 32 insn 287) }
;;   UD chains for insn luid 1 uid 340
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 341
;;      reg 0 { d21(bb 39 insn 340) }
;;      reg 2 { d99(bb 39 insn 339) }
;;   UD chains for insn luid 3 uid 342
;;      reg 0 { d20(bb 39 insn 341) }
;;   UD chains for insn luid 4 uid 568
;;      reg 151 { d2475(bb 39 insn 342) }
;;   UD chains for insn luid 5 uid 569
;;      reg 24 { d375(bb 39 insn 568) }
;;      reg 151 { d2475(bb 39 insn 342) }

( 39 30 )->[40]->( 65 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u414(11){ d144(bb 0 insn -1) }u415(13){ d169(bb 0 insn -1) }u416(25){ d432(bb 0 insn -1) }u417(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(70)
20, 27, 80, 99, 115, 143, 144, 168, 169, 375, 405, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2499, 2509, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;; rd  gen 	(0)

;; rd  kill	(25)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(70)
20, 27, 80, 99, 115, 143, 144, 168, 169, 375, 405, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2499, 2509, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 354
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 355
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d19(bb 40 insn 354) }

( 2 )->[41]->( 63 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u421(11){ d144(bb 0 insn -1) }u422(13){ d169(bb 0 insn -1) }u423(25){ d432(bb 0 insn -1) }u424(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 24 [cc] 182
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
16, 398, 2520
;; rd  kill	(26)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2520
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
16, 80, 115, 143, 144, 168, 169, 398, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 360
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 361
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d17(bb 41 insn 360) }
;;   UD chains for insn luid 2 uid 362
;;      reg 0 { d16(bb 41 insn 361) }
;;   UD chains for insn luid 3 uid 363
;;      reg 182 { d2520(bb 41 insn 362) }
;;   UD chains for insn luid 4 uid 364
;;      reg 24 { d398(bb 41 insn 363) }

( 41 )->[42]->( 43 44 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u431(11){ d144(bb 0 insn -1) }u432(13){ d169(bb 0 insn -1) }u433(25){ d432(bb 0 insn -1) }u434(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 398, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
382
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 367
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 368
;;      reg 24 { d382(bb 42 insn 367) }

( 42 )->[43]->( 61 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u437(11){ d144(bb 0 insn -1) }u438(13){ d169(bb 0 insn -1) }u439(25){ d432(bb 0 insn -1) }u440(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190
;; live  gen 	 181
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2500
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(17)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2500, 2520, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 370
;;      reg 190 { d2532(bb 2 insn 4) }

( 42 )->[44]->( 46 45 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u442(11){ d144(bb 0 insn -1) }u443(13){ d169(bb 0 insn -1) }u444(25){ d432(bb 0 insn -1) }u445(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 376
;;      reg 24 { d382(bb 42 insn 367) }

( 44 )->[45]->( 47 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u447(11){ d144(bb 0 insn -1) }u448(13){ d169(bb 0 insn -1) }u449(25){ d432(bb 0 insn -1) }u450(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 135 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 135 146
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2457, 2470
;; rd  kill	(4)
2456, 2457, 2469, 2470
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; rd  out 	(18)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2457, 2470, 2520, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 378
;;      reg 190 { d2532(bb 2 insn 4) }

( 44 )->[46]->( 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u452(11){ d144(bb 0 insn -1) }u453(13){ d169(bb 0 insn -1) }u454(25){ d432(bb 0 insn -1) }u455(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 135 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 135 146
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2456, 2469
;; rd  kill	(4)
2456, 2457, 2469, 2470
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; rd  out 	(18)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2456, 2469, 2520, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 384
;;      reg 190 { d2532(bb 2 insn 4) }

( 46 45 )->[47]->( 60 48 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u457(11){ d144(bb 0 insn -1) }u458(13){ d169(bb 0 insn -1) }u459(25){ d432(bb 0 insn -1) }u460(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 145 282
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; live  gen 	 24 [cc] 145 282
;; live  kill	
;; rd  in  	(20)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2456, 2457, 2469, 2470, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
397, 2468, 2597
;; rd  kill	(2)
2468, 2597
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; rd  out 	(22)
16, 80, 115, 143, 144, 168, 169, 397, 432, 433, 2456, 2457, 2468, 2469, 2470, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 388
;;      reg 135 { d2457(bb 45 insn 378) d2456(bb 46 insn 384) }
;;   UD chains for insn luid 1 uid 389
;;      reg 282 { d2597(bb 47 insn 388) }
;;   UD chains for insn luid 2 uid 390
;;      reg 145 { d2468(bb 47 insn 389) }
;;   UD chains for insn luid 3 uid 391
;;      reg 24 { d397(bb 47 insn 390) }

( 47 )->[48]->( 49 50 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u465(11){ d144(bb 0 insn -1) }u466(13){ d169(bb 0 insn -1) }u467(25){ d432(bb 0 insn -1) }u468(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 0 [r0] 2 [r2] 14 [lr] 24 [cc] 142 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 142 147
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(22)
16, 80, 115, 143, 144, 168, 169, 397, 432, 433, 2456, 2457, 2468, 2469, 2470, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;; rd  gen 	(5)
14, 96, 395, 2465, 2471
;; rd  kill	(27)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2465, 2471
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; rd  out 	(24)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 393
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 394
;;      reg 0 { d15(bb 48 insn 393) }
;;   UD chains for insn luid 2 uid 395
;;      reg 2 { d96(bb 48 insn 394) }
;;   UD chains for insn luid 3 uid 396
;;      reg 0 { d14(bb 48 insn 394) }
;;   UD chains for insn luid 4 uid 397
;;      reg 142 { d2465(bb 48 insn 396) }
;;   UD chains for insn luid 5 uid 398
;;      reg 24 { d395(bb 48 insn 397) }

( 48 )->[49]->( 61 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u475(11){ d144(bb 0 insn -1) }u476(13){ d169(bb 0 insn -1) }u477(25){ d432(bb 0 insn -1) }u478(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(24)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;; rd  gen 	(1)
2508
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(25)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2508, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }

( 48 )->[50]->( 51 54 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u479(11){ d144(bb 0 insn -1) }u480(13){ d169(bb 0 insn -1) }u481(25){ d432(bb 0 insn -1) }u482(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 188
;; lr  def 	 24 [cc] 148 283 285 286
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; live  gen 	 24 [cc] 148 283 285 286
;; live  kill	
;; rd  in  	(24)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;; rd  gen 	(5)
394, 2473, 2598, 2599, 2600
;; rd  kill	(5)
2472, 2473, 2598, 2599, 2600
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; rd  out 	(28)
14, 80, 96, 143, 144, 168, 169, 394, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 405
;;      reg 145 { d2468(bb 47 insn 389) }
;;   UD chains for insn luid 1 uid 407
;;      reg 283 { d2598(bb 50 insn 405) }
;;   UD chains for insn luid 2 uid 408
;;      reg 188 { d2530(bb 2 insn 2) }
;;      reg 285 { d2599(bb 50 insn 407) }
;;   UD chains for insn luid 3 uid 410
;;      reg 286 { d2600(bb 50 insn 408) }
;;   UD chains for insn luid 4 uid 411
;;      reg 148 { d2473(bb 50 insn 410) }
;;   UD chains for insn luid 5 uid 412
;;      reg 24 { d394(bb 50 insn 411) }

( 50 )->[51]->( 52 53 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u490(11){ d144(bb 0 insn -1) }u491(13){ d169(bb 0 insn -1) }u492(25){ d432(bb 0 insn -1) }u493(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 188 190 286
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 188 190 286
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 148
;; live  kill	 14 [lr]
;; rd  in  	(28)
14, 80, 96, 143, 144, 168, 169, 394, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(3)
12, 392, 2472
;; rd  kill	(27)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2472, 2473
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; rd  out 	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 414
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 415
;;      reg 146 { d2470(bb 45 insn 379) d2469(bb 46 insn 385) }
;;   UD chains for insn luid 2 uid 416
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d13(bb 51 insn 414) }
;;      reg 1 { d64(bb 51 insn 415) }
;;   UD chains for insn luid 3 uid 417
;;      reg 0 { d12(bb 51 insn 416) }
;;   UD chains for insn luid 4 uid 418
;;      reg 148 { d2472(bb 51 insn 417) }
;;   UD chains for insn luid 5 uid 419
;;      reg 24 { d392(bb 51 insn 418) }

( 51 )->[52]->( 61 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u502(11){ d144(bb 0 insn -1) }u503(13){ d169(bb 0 insn -1) }u504(25){ d432(bb 0 insn -1) }u505(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(1)
2507
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(29)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2507, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 421
;;      reg 148 { d2472(bb 51 insn 417) }

( 51 )->[53]->( 54 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u507(11){ d144(bb 0 insn -1) }u508(13){ d169(bb 0 insn -1) }u509(25){ d432(bb 0 insn -1) }u510(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 286
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; rd  out 	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 431
;;      reg 148 { d2472(bb 51 insn 417) }
;;      reg 286 { d2600(bb 50 insn 408) }

( 50 53 )->[54]->( 55 56 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u513(11){ d144(bb 0 insn -1) }u514(13){ d169(bb 0 insn -1) }u515(25){ d432(bb 0 insn -1) }u516(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 190
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 293 294 297
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 293 294 297
;; live  kill	 14 [lr]
;; rd  in  	(31)
12, 14, 80, 96, 143, 144, 168, 169, 392, 394, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(5)
10, 390, 2601, 2602, 2603
;; rd  kill	(28)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2601, 2602, 2603
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; rd  out 	(32)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 434
;;      reg 25 { d432(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 435
;;      reg 148 { d2473(bb 50 insn 410) d2472(bb 51 insn 417) }
;;   UD chains for insn luid 2 uid 437
;;      reg 293 { d2601(bb 54 insn 434) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 438
;;      reg 294 { d2602(bb 54 insn 435) }
;;   UD chains for insn luid 5 uid 440
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d11(bb 54 insn 437) }
;;      reg 1 { d62(bb 54 insn 438) }
;;      reg 2 { d81(bb 54 insn 439) }
;;   UD chains for insn luid 6 uid 442
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 7 uid 443
;;      reg 297 { d2603(bb 54 insn 442) }
;;   UD chains for insn luid 8 uid 444
;;      reg 24 { d390(bb 54 insn 443) }

( 54 )->[55]->( 59 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u529(11){ d144(bb 0 insn -1) }u530(13){ d169(bb 0 insn -1) }u531(25){ d432(bb 0 insn -1) }u532(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 188
;; live  gen 	 338
;; live  kill	
;; rd  in  	(32)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603
;; rd  gen 	(1)
2621
;; rd  kill	(1)
2621
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; rd  out 	(33)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2621
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 566
;;      reg 25 { d432(bb 0 insn -1) }
;;      reg 147 { d2471(bb 48 insn 395) }
;;   UD chains for insn luid 2 uid 567
;;      reg 25 { d432(bb 0 insn -1) }
;;      reg 338 { d2621(bb 55 insn 565) }

( 54 )->[56]->( 61 57 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u537(11){ d144(bb 0 insn -1) }u538(13){ d169(bb 0 insn -1) }u539(25){ d432(bb 0 insn -1) }u540(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 149 181 184 300 306 312 317 319 324 325
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 149 181 184 300 306 312 317 319 324 325
;; live  kill	 14 [lr]
;; rd  in  	(32)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603
;; rd  gen 	(14)
8, 388, 2454, 2455, 2474, 2506, 2523, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  kill	(56)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2454, 2455, 2474, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 181 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 181 184 188
;; rd  out 	(44)
8, 80, 96, 143, 144, 168, 169, 388, 432, 433, 2454, 2455, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 453
;;      reg 147 { d2471(bb 48 insn 395) }
;;   UD chains for insn luid 2 uid 458
;;      reg 300 { d2604(bb 56 insn 453) }
;;      reg 184 read/write { d2522(bb 56 insn 570) }
;;   UD chains for insn luid 3 uid 459
;;      reg 147 { d2471(bb 48 insn 395) }
;;   UD chains for insn luid 4 uid 461
;;      reg 149 { d2474(bb 56 insn 459) }
;;   UD chains for insn luid 5 uid 466
;;      reg 306 { d2605(bb 56 insn 461) }
;;      reg 184 read/write { d2526(bb 56 insn 458) d2522(bb 56 insn 570) }
;;   UD chains for insn luid 6 uid 467
;;      reg 147 { d2471(bb 48 insn 395) }
;;   UD chains for insn luid 7 uid 469
;;      reg 134 { d2455(bb 56 insn 467) }
;;   UD chains for insn luid 8 uid 474
;;      reg 312 { d2606(bb 56 insn 469) }
;;      reg 184 read/write { d2526(bb 56 insn 458) d2525(bb 56 insn 466) d2522(bb 56 insn 570) }
;;   UD chains for insn luid 9 uid 475
;;      reg 147 { d2471(bb 48 insn 395) }
;;   UD chains for insn luid 10 uid 476
;;      reg 133 { d2454(bb 56 insn 475) }
;;      reg 184 read/write { d2526(bb 56 insn 458) d2525(bb 56 insn 466) d2524(bb 56 insn 474) d2522(bb 56 insn 570) }
;;   UD chains for insn luid 11 uid 477
;;      reg 147 { d2471(bb 48 insn 395) }
;;   UD chains for insn luid 12 uid 479
;;      reg 317 { d2607(bb 56 insn 477) }
;;   UD chains for insn luid 13 uid 484
;;      reg 319 { d2608(bb 56 insn 479) }
;;      reg 184 read/write { d2527(bb 56 insn 476) d2526(bb 56 insn 458) d2525(bb 56 insn 466) d2524(bb 56 insn 474) d2522(bb 56 insn 570) }
;;   UD chains for insn luid 14 uid 485
;;      reg 25 { d432(bb 0 insn -1) }
;;   UD chains for insn luid 15 uid 486
;;      reg 25 { d432(bb 0 insn -1) }
;;   UD chains for insn luid 16 uid 487
;;      reg 184 { d2527(bb 56 insn 476) d2526(bb 56 insn 458) d2525(bb 56 insn 466) d2524(bb 56 insn 474) d2523(bb 56 insn 484) d2522(bb 56 insn 570) }
;;   UD chains for insn luid 17 uid 488
;;      reg 324 { d2609(bb 56 insn 485) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 18 uid 489
;;      reg 325 { d2610(bb 56 insn 486) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 19 uid 490
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d9(bb 56 insn 487) }
;;      reg 1 { d60(bb 56 insn 488) }
;;      reg 2 { d93(bb 56 insn 489) }
;;   UD chains for insn luid 20 uid 491
;;      reg 0 { d8(bb 56 insn 490) }
;;   UD chains for insn luid 21 uid 492
;;      reg 181 { d2506(bb 56 insn 491) }
;;   UD chains for insn luid 22 uid 493
;;      reg 24 { d388(bb 56 insn 492) }

( 56 )->[57]->( 60 58 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u573(11){ d144(bb 0 insn -1) }u574(13){ d169(bb 0 insn -1) }u575(25){ d432(bb 0 insn -1) }u576(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 184 188
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(44)
8, 80, 96, 143, 144, 168, 169, 388, 432, 433, 2454, 2455, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  gen 	(3)
387, 2466, 2467
;; rd  kill	(2)
2466, 2467
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; rd  out 	(46)
8, 80, 96, 143, 144, 168, 169, 387, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 495
;;      reg 25 { d432(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 496
;;      reg 143 { d2466(bb 57 insn 495) }
;;      reg 146 { d2470(bb 45 insn 379) d2469(bb 46 insn 385) }
;;   UD chains for insn luid 2 uid 497
;;      reg 143 { d2466(bb 57 insn 495) }
;;      reg 144 { d2467(bb 57 insn 496) }
;;   UD chains for insn luid 3 uid 498
;;      reg 24 { d387(bb 57 insn 497) }

( 57 )->[58]->( 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u583(11){ d144(bb 0 insn -1) }u584(13){ d169(bb 0 insn -1) }u585(25){ d432(bb 0 insn -1) }u586(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 184
;; lr  def 	 326 327 328 330 331 332 333 334
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; live  gen 	 326 327 328 330 331 332 333 334
;; live  kill	
;; rd  in  	(46)
8, 80, 96, 143, 144, 168, 169, 387, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  gen 	(8)
2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619
;; rd  kill	(7)
2611, 2612, 2613, 2614, 2615, 2616, 2619
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; rd  out 	(54)
8, 80, 96, 143, 144, 168, 169, 387, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 500
;;      reg 25 { d432(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 501
;;      reg 326 { d2611(bb 58 insn 500) }
;;   UD chains for insn luid 2 uid 502
;;      reg 25 { d432(bb 0 insn -1) }
;;      reg 327 { d2612(bb 58 insn 501) }
;;   UD chains for insn luid 3 uid 503
;;      reg 25 { d432(bb 0 insn -1) }
;;      reg 144 { d2467(bb 57 insn 496) }
;;   UD chains for insn luid 4 uid 504
;;      reg 184 { d2523(bb 56 insn 484) }
;;   UD chains for insn luid 5 uid 505
;;      reg 328 { d2613(bb 58 insn 504) }
;;   UD chains for insn luid 6 uid 506
;;      reg 330 { d2614(bb 58 insn 505) }
;;   UD chains for insn luid 7 uid 507
;;      reg 331 { d2615(bb 58 insn 506) }
;;   UD chains for insn luid 8 uid 508
;;      reg 25 { d432(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 509
;;      reg 334 { d2619(bb 58 insn 508) }
;;   UD chains for insn luid 10 uid 510
;;      reg 332 { d2616(bb 58 insn 507) }
;;      reg 333 read/write { d2618(bb 58 insn 509) }
;;   UD chains for insn luid 11 uid 511
;;      reg 25 { d432(bb 0 insn -1) }
;;      reg 333 { d2618(bb 58 insn 509) d2617(bb 58 insn 510) }

( 58 55 )->[59]->( 61 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u603(11){ d144(bb 0 insn -1) }u604(13){ d169(bb 0 insn -1) }u605(25){ d432(bb 0 insn -1) }u606(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 335
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  gen 	 0 [r0] 1 [r1] 181 335
;; live  kill	 14 [lr]
;; rd  in  	(57)
8, 10, 80, 96, 143, 144, 168, 169, 387, 390, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2621
;; rd  gen 	(3)
6, 2505, 2620
;; rd  kill	(47)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2620
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(57)
6, 80, 96, 143, 144, 168, 169, 387, 390, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2505, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 514
;;      reg 25 { d432(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 515
;;      reg 148 { d2473(bb 50 insn 410) d2472(bb 51 insn 417) }
;;   UD chains for insn luid 2 uid 516
;;      reg 335 { d2620(bb 59 insn 514) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 517
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d7(bb 59 insn 515) }
;;      reg 1 { d58(bb 59 insn 516) }
;;   UD chains for insn luid 4 uid 518
;;      reg 0 { d6(bb 59 insn 517) }

( 57 47 )->[60]->( 61 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u615(11){ d144(bb 0 insn -1) }u616(13){ d169(bb 0 insn -1) }u617(25){ d432(bb 0 insn -1) }u618(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(49)
8, 16, 80, 96, 115, 143, 144, 168, 169, 387, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  gen 	(1)
2504
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(49)
8, 16, 80, 96, 115, 143, 144, 168, 169, 387, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2504, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }

( 60 49 52 43 56 59 )->[61]->( 65 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u619(11){ d144(bb 0 insn -1) }u620(13){ d169(bb 0 insn -1) }u621(25){ d432(bb 0 insn -1) }u622(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(72)
6, 8, 12, 14, 16, 80, 96, 115, 143, 144, 168, 169, 382, 387, 388, 390, 392, 395, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2500, 2504, 2505, 2506, 2507, 2508, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;; rd  gen 	(0)

;; rd  kill	(25)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(72)
6, 8, 12, 14, 16, 80, 96, 115, 143, 144, 168, 169, 382, 387, 388, 390, 392, 395, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2500, 2504, 2505, 2506, 2507, 2508, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 526
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 527
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d5(bb 61 insn 526) }

( 2 )->[62]->( 65 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u626(11){ d144(bb 0 insn -1) }u627(13){ d169(bb 0 insn -1) }u628(25){ d432(bb 0 insn -1) }u629(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2, 2503
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(15)
2, 80, 115, 143, 144, 168, 169, 432, 433, 2503, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 532
;;      reg 188 { d2530(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 533
;;      reg 189 { d2531(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 534
;;      reg 190 { d2532(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 535
;;      reg 191 { d2533(bb 2 insn 5) }
;;   UD chains for insn luid 4 uid 536
;;      reg 13 { d169(bb 0 insn -1) }
;;      reg 0 { d3(bb 62 insn 532) }
;;      reg 1 { d55(bb 62 insn 533) }
;;      reg 2 { d89(bb 62 insn 534) }
;;      reg 3 { d117(bb 62 insn 535) }
;;   UD chains for insn luid 5 uid 537
;;      reg 0 { d2(bb 62 insn 536) }

( 23 41 )->[63]->( 65 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u640(11){ d144(bb 0 insn -1) }u641(13){ d169(bb 0 insn -1) }u642(25){ d432(bb 0 insn -1) }u643(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 181
;; live  kill	
;; rd  in  	(19)
16, 27, 80, 115, 143, 144, 168, 169, 398, 410, 432, 433, 2520, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2502
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(20)
16, 27, 80, 115, 143, 144, 168, 169, 398, 410, 432, 433, 2502, 2520, 2521, 2530, 2531, 2532, 2533, 2534
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }

( 21 19 3 9 11 13 15 )->[64]->( 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u644(11){ d144(bb 0 insn -1) }u645(13){ d169(bb 0 insn -1) }u646(25){ d432(bb 0 insn -1) }u647(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 181
;; live  kill	
;; rd  in  	(59)
47, 80, 115, 143, 144, 168, 169, 194, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2561, 2562, 2563, 2564, 2565, 2566
;; rd  gen 	(1)
2501
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; rd  out 	(60)
47, 80, 115, 143, 144, 168, 169, 194, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2501, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2561, 2562, 2563, 2564, 2565, 2566
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }

( 64 62 7 61 40 22 20 18 17 16 14 12 10 8 63 )->[65]->( 1 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u648(11){ d144(bb 0 insn -1) }u649(13){ d169(bb 0 insn -1) }u650(25){ d432(bb 0 insn -1) }u651(26){ d433(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(211)
2, 6, 8, 12, 14, 16, 20, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 80, 96, 99, 107, 114, 115, 143, 144, 168, 169, 194, 375, 382, 387, 388, 390, 392, 395, 397, 398, 405, 410, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2523, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;; rd  gen 	(1)
0
;; rd  kill	(0)

;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(194)
0, 80, 96, 99, 107, 114, 115, 143, 144, 168, 169, 194, 375, 382, 387, 388, 390, 392, 395, 397, 398, 405, 410, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2523, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;;  UD chains for artificial uses
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }
;;   reg 26 { d433(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 554
;;      reg 181 { d2519(bb 7 insn 51) d2518(bb 8 insn 60) d2517(bb 10 insn 83) d2516(bb 12 insn 106) d2515(bb 14 insn 130) d2514(bb 16 insn 154) d2513(bb 17 insn 163) d2512(bb 18 insn 170) d2511(bb 20 insn 194) d2510(bb 22 insn 218) d2509(bb 30 insn 273) d2508(bb 49 insn 400) d2507(bb 52 insn 421) d2506(bb 56 insn 491) d2505(bb 59 insn 518) d2504(bb 60 insn 523) d2503(bb 62 insn 537) d2502(bb 63 insn 542) d2501(bb 64 insn 547) d2500(bb 43 insn 370) d2499(bb 39 insn 569) }
;;   UD chains for insn luid 1 uid 560
;;      reg 0 { d0(bb 65 insn 554) }

( 65 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u654(0){ d0(bb 65 insn 554) }u655(11){ d144(bb 0 insn -1) }u656(13){ d169(bb 0 insn -1) }u657(14){ d194(bb 0 insn -1) }u658(25){ d432(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(194)
0, 80, 96, 99, 107, 114, 115, 143, 144, 168, 169, 194, 375, 382, 387, 388, 390, 392, 395, 397, 398, 405, 410, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2523, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(194)
0, 80, 96, 99, 107, 114, 115, 143, 144, 168, 169, 194, 375, 382, 387, 388, 390, 392, 395, 397, 398, 405, 410, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2523, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 65 insn 554) }
;;   reg 11 { d144(bb 0 insn -1) }
;;   reg 13 { d169(bb 0 insn -1) }
;;   reg 14 { d194(bb 0 insn -1) }
;;   reg 25 { d432(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 29 to worklist
  Adding insn 32 to worklist
  Adding insn 571 to worklist
  Adding insn 573 to worklist
  Adding insn 50 to worklist
  Adding insn 575 to worklist
  Adding insn 59 to worklist
  Adding insn 71 to worklist
  Adding insn 577 to worklist
  Adding insn 82 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 94 to worklist
  Adding insn 579 to worklist
  Adding insn 105 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 117 to worklist
  Adding insn 581 to worklist
  Adding insn 129 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 141 to worklist
  Adding insn 583 to worklist
  Adding insn 153 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
  Adding insn 585 to worklist
  Adding insn 162 to worklist
  Adding insn 587 to worklist
  Adding insn 169 to worklist
  Adding insn 181 to worklist
  Adding insn 589 to worklist
  Adding insn 193 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 205 to worklist
  Adding insn 591 to worklist
  Adding insn 217 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 227 to worklist
  Adding insn 224 to worklist
  Adding insn 231 to worklist
  Adding insn 593 to worklist
  Adding insn 242 to worklist
  Adding insn 239 to worklist
  Adding insn 237 to worklist
  Adding insn 234 to worklist
  Adding insn 258 to worklist
  Adding insn 595 to worklist
  Adding insn 271 to worklist
  Adding insn 597 to worklist
  Adding insn 285 to worklist
  Adding insn 599 to worklist
  Adding insn 601 to worklist
  Adding insn 306 to worklist
  Adding insn 310 to worklist
  Adding insn 603 to worklist
  Adding insn 341 to worklist
  Adding insn 605 to worklist
  Adding insn 355 to worklist
  Adding insn 364 to worklist
  Adding insn 361 to worklist
  Adding insn 368 to worklist
  Adding insn 607 to worklist
  Adding insn 376 to worklist
  Adding insn 609 to worklist
  Adding insn 391 to worklist
  Adding insn 398 to worklist
  Adding insn 394 to worklist
  Adding insn 611 to worklist
  Adding insn 412 to worklist
  Adding insn 419 to worklist
  Adding insn 416 to worklist
  Adding insn 613 to worklist
  Adding insn 431 to worklist
  Adding insn 444 to worklist
  Adding insn 440 to worklist
  Adding insn 615 to worklist
  Adding insn 567 to worklist
  Adding insn 566 to worklist
  Adding insn 493 to worklist
  Adding insn 490 to worklist
  Adding insn 498 to worklist
  Adding insn 511 to worklist
  Adding insn 503 to worklist
  Adding insn 502 to worklist
  Adding insn 617 to worklist
  Adding insn 517 to worklist
  Adding insn 619 to worklist
  Adding insn 527 to worklist
  Adding insn 621 to worklist
  Adding insn 536 to worklist
  Adding insn 623 to worklist
  Adding insn 560 to worklist
Finished finding needed instructions:
  Adding insn 554 to worklist
Processing use of (reg 181 [ ret ]) in insn 554:
  Adding insn 51 to worklist
  Adding insn 60 to worklist
  Adding insn 83 to worklist
  Adding insn 106 to worklist
  Adding insn 130 to worklist
  Adding insn 154 to worklist
  Adding insn 163 to worklist
  Adding insn 170 to worklist
  Adding insn 194 to worklist
  Adding insn 218 to worklist
  Adding insn 273 to worklist
  Adding insn 400 to worklist
  Adding insn 421 to worklist
  Adding insn 491 to worklist
  Adding insn 518 to worklist
  Adding insn 523 to worklist
  Adding insn 537 to worklist
  Adding insn 542 to worklist
  Adding insn 547 to worklist
  Adding insn 370 to worklist
  Adding insn 569 to worklist
Processing use of (reg 24 cc) in insn 569:
  Adding insn 568 to worklist
Processing use of (reg 151 [ D.28058 ]) in insn 569:
  Adding insn 342 to worklist
Processing use of (reg 0 r0) in insn 342:
Processing use of (reg 151 [ D.28058 ]) in insn 568:
Processing use of (reg 190 [ addr ]) in insn 370:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 0 r0) in insn 537:
Processing use of (reg 0 r0) in insn 518:
Processing use of (reg 0 r0) in insn 491:
Processing use of (reg 148 [ bp ]) in insn 421:
  Adding insn 417 to worklist
Processing use of (reg 0 r0) in insn 417:
Processing use of (reg 0 r0) in insn 218:
Processing use of (reg 0 r0) in insn 194:
Processing use of (reg 0 r0) in insn 163:
Processing use of (reg 0 r0) in insn 154:
Processing use of (reg 0 r0) in insn 130:
Processing use of (reg 0 r0) in insn 106:
Processing use of (reg 0 r0) in insn 83:
Processing use of (reg 0 r0) in insn 60:
Processing use of (reg 0 r0) in insn 51:
Processing use of (reg 0 r0) in insn 560:
Processing use of (reg 13 sp) in insn 536:
Processing use of (reg 0 r0) in insn 536:
  Adding insn 532 to worklist
Processing use of (reg 1 r1) in insn 536:
  Adding insn 533 to worklist
Processing use of (reg 2 r2) in insn 536:
  Adding insn 534 to worklist
Processing use of (reg 3 r3) in insn 536:
  Adding insn 535 to worklist
Processing use of (reg 191 [ data ]) in insn 535:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 190 [ addr ]) in insn 534:
Processing use of (reg 189 [ request ]) in insn 533:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 188 [ child ]) in insn 532:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 527:
Processing use of (reg 0 r0) in insn 527:
  Adding insn 526 to worklist
Processing use of (reg 188 [ child ]) in insn 526:
Processing use of (reg 13 sp) in insn 517:
Processing use of (reg 0 r0) in insn 517:
  Adding insn 515 to worklist
Processing use of (reg 1 r1) in insn 517:
  Adding insn 516 to worklist
Processing use of (reg 335) in insn 516:
  Adding insn 514 to worklist
Processing use of (reg 25 sfp) in insn 514:
Processing use of (reg 148 [ bp ]) in insn 515:
  Adding insn 410 to worklist
Processing use of (reg 286) in insn 410:
  Adding insn 408 to worklist
Processing use of (reg 188 [ child ]) in insn 408:
Processing use of (reg 285) in insn 408:
  Adding insn 407 to worklist
Processing use of (reg 283) in insn 407:
  Adding insn 405 to worklist
Processing use of (reg 145 [ idx ]) in insn 405:
  Adding insn 389 to worklist
Processing use of (reg 282) in insn 389:
  Adding insn 388 to worklist
Processing use of (reg 135 [ num.865 ]) in insn 388:
  Adding insn 378 to worklist
  Adding insn 384 to worklist
Processing use of (reg 190 [ addr ]) in insn 384:
Processing use of (reg 190 [ addr ]) in insn 378:
Processing use of (reg 25 sfp) in insn 502:
Processing use of (reg 327 [ gen_len ]) in insn 502:
  Adding insn 501 to worklist
Processing use of (reg 326 [ gen_len ]) in insn 501:
  Adding insn 500 to worklist
Processing use of (reg 25 sfp) in insn 500:
Processing use of (reg 25 sfp) in insn 503:
Processing use of (reg 144 [ D.28101 ]) in insn 503:
  Adding insn 496 to worklist
Processing use of (reg 143 [ gen_type.377 ]) in insn 496:
  Adding insn 495 to worklist
Processing use of (reg 146 [ implied_type ]) in insn 496:
  Adding insn 379 to worklist
  Adding insn 385 to worklist
Processing use of (reg 25 sfp) in insn 495:
Processing use of (reg 25 sfp) in insn 511:
Processing use of (reg 333 [+40 ]) in insn 511:
  Adding insn 509 to worklist
  Adding insn 510 to worklist
Processing use of (reg 332) in insn 510:
  Adding insn 507 to worklist
Processing use of (subreg (reg 333 [+40 ]) 0) in insn 510:
Processing use of (reg 331) in insn 507:
  Adding insn 506 to worklist
Processing use of (subreg (reg 330) 0) in insn 506:
  Adding insn 505 to worklist
Processing use of (subreg (reg 328) 0) in insn 505:
  Adding insn 504 to worklist
Processing use of (reg 184 [ ctrl ]) in insn 504:
  Adding insn 484 to worklist
Processing use of (reg 319) in insn 484:
  Adding insn 479 to worklist
Processing use of (reg 184 [ ctrl ]) in insn 484:
  Adding insn 476 to worklist
  Adding insn 458 to worklist
  Adding insn 466 to worklist
  Adding insn 474 to worklist
  Adding insn 570 to worklist
Processing use of (reg 312) in insn 474:
  Adding insn 469 to worklist
Processing use of (reg 184 [ ctrl ]) in insn 474:
Processing use of (reg 134 [ reg.867 ]) in insn 469:
  Adding insn 467 to worklist
Processing use of (reg 147 [ user_val ]) in insn 467:
  Adding insn 395 to worklist
Processing use of (reg 2 r2) in insn 395:
Processing use of (reg 306) in insn 466:
  Adding insn 461 to worklist
Processing use of (reg 184 [ ctrl ]) in insn 466:
Processing use of (reg 149 [ reg ]) in insn 461:
  Adding insn 459 to worklist
Processing use of (reg 147 [ user_val ]) in insn 459:
Processing use of (reg 300) in insn 458:
  Adding insn 453 to worklist
Processing use of (reg 184 [ ctrl ]) in insn 458:
Processing use of (reg 147 [ user_val ]) in insn 453:
Processing use of (reg 133 [ reg.871 ]) in insn 476:
  Adding insn 475 to worklist
Processing use of (reg 184 [ ctrl ]) in insn 476:
Processing use of (reg 147 [ user_val ]) in insn 475:
Processing use of (reg 317) in insn 479:
  Adding insn 477 to worklist
Processing use of (reg 147 [ user_val ]) in insn 477:
Processing use of (subreg (reg 334 [+40 ]) 0) in insn 509:
  Adding insn 508 to worklist
Processing use of (reg 25 sfp) in insn 508:
Processing use of (reg 24 cc) in insn 498:
  Adding insn 497 to worklist
Processing use of (reg 143 [ gen_type.377 ]) in insn 497:
Processing use of (reg 144 [ D.28101 ]) in insn 497:
Processing use of (reg 13 sp) in insn 490:
Processing use of (reg 0 r0) in insn 490:
  Adding insn 487 to worklist
Processing use of (reg 1 r1) in insn 490:
  Adding insn 488 to worklist
Processing use of (reg 2 r2) in insn 490:
  Adding insn 489 to worklist
Processing use of (reg 325) in insn 489:
  Adding insn 486 to worklist
Processing use of (reg 25 sfp) in insn 486:
Processing use of (reg 324) in insn 488:
  Adding insn 485 to worklist
Processing use of (reg 25 sfp) in insn 485:
Processing use of (reg 184 [ ctrl ]) in insn 487:
Processing use of (reg 24 cc) in insn 493:
  Adding insn 492 to worklist
Processing use of (reg 181 [ ret ]) in insn 492:
Processing use of (reg 25 sfp) in insn 566:
Processing use of (reg 147 [ user_val ]) in insn 566:
Processing use of (reg 25 sfp) in insn 567:
Processing use of (reg 338 [+4 ]) in insn 567:
  Adding insn 565 to worklist
Processing use of (reg 13 sp) in insn 440:
Processing use of (reg 0 r0) in insn 440:
  Adding insn 437 to worklist
Processing use of (reg 1 r1) in insn 440:
  Adding insn 438 to worklist
Processing use of (reg 2 r2) in insn 440:
  Adding insn 439 to worklist
Processing use of (reg 294) in insn 438:
  Adding insn 435 to worklist
Processing use of (reg 148 [ bp ]) in insn 435:
Processing use of (reg 293) in insn 437:
  Adding insn 434 to worklist
Processing use of (reg 25 sfp) in insn 434:
Processing use of (reg 24 cc) in insn 444:
  Adding insn 443 to worklist
Processing use of (reg 297) in insn 443:
  Adding insn 442 to worklist
Processing use of (reg 190 [ addr ]) in insn 442:
Processing use of (reg 148 [ bp ]) in insn 431:
Processing use of (reg 286) in insn 431:
Processing use of (reg 13 sp) in insn 416:
Processing use of (reg 0 r0) in insn 416:
  Adding insn 414 to worklist
Processing use of (reg 1 r1) in insn 416:
  Adding insn 415 to worklist
Processing use of (reg 146 [ implied_type ]) in insn 415:
Processing use of (reg 188 [ child ]) in insn 414:
Processing use of (reg 24 cc) in insn 419:
  Adding insn 418 to worklist
Processing use of (reg 148 [ bp ]) in insn 418:
Processing use of (reg 24 cc) in insn 412:
  Adding insn 411 to worklist
Processing use of (reg 148 [ bp ]) in insn 411:
Processing use of (reg 0 r0) in insn 394:
  Adding insn 393 to worklist
Processing use of (reg 191 [ data ]) in insn 393:
Processing use of (reg 24 cc) in insn 398:
  Adding insn 397 to worklist
Processing use of (reg 142 [ D.28105 ]) in insn 397:
  Adding insn 396 to worklist
Processing use of (reg 0 r0) in insn 396:
Processing use of (reg 24 cc) in insn 391:
  Adding insn 390 to worklist
Processing use of (reg 145 [ idx ]) in insn 390:
Processing use of (reg 24 cc) in insn 376:
  Adding insn 367 to worklist
Processing use of (reg 190 [ addr ]) in insn 367:
Processing use of (reg 24 cc) in insn 368:
Processing use of (reg 13 sp) in insn 361:
Processing use of (reg 0 r0) in insn 361:
  Adding insn 360 to worklist
Processing use of (reg 188 [ child ]) in insn 360:
Processing use of (reg 24 cc) in insn 364:
  Adding insn 363 to worklist
Processing use of (reg 182 [ D.27299 ]) in insn 363:
  Adding insn 362 to worklist
Processing use of (reg 0 r0) in insn 362:
Processing use of (reg 13 sp) in insn 355:
Processing use of (reg 0 r0) in insn 355:
  Adding insn 354 to worklist
Processing use of (reg 188 [ child ]) in insn 354:
Processing use of (reg 0 r0) in insn 341:
  Adding insn 340 to worklist
Processing use of (reg 2 r2) in insn 341:
  Adding insn 339 to worklist
Processing use of (reg 152 [ reg ]) in insn 339:
  Adding insn 252 to worklist
  Adding insn 312 to worklist
  Adding insn 336 to worklist
  Adding insn 287 to worklist
Processing use of (reg 154 [ bp ]) in insn 287:
  Adding insn 283 to worklist
Processing use of (reg 259) in insn 283:
  Adding insn 281 to worklist
Processing use of (reg 188 [ child ]) in insn 281:
Processing use of (reg 258) in insn 281:
  Adding insn 280 to worklist
Processing use of (reg 256) in insn 280:
  Adding insn 278 to worklist
Processing use of (reg 153 [ idx ]) in insn 278:
  Adding insn 269 to worklist
Processing use of (reg 255) in insn 269:
  Adding insn 268 to worklist
Processing use of (reg 136 [ num.864 ]) in insn 268:
  Adding insn 260 to worklist
  Adding insn 265 to worklist
Processing use of (reg 190 [ addr ]) in insn 265:
Processing use of (reg 190 [ addr ]) in insn 260:
Processing use of (reg 278) in insn 336:
  Adding insn 332 to worklist
Processing use of (reg 281) in insn 336:
  Adding insn 335 to worklist
Processing use of (reg 280) in insn 335:
  Adding insn 334 to worklist
Processing use of (reg 279) in insn 334:
  Adding insn 333 to worklist
Processing use of (reg 185 [ arch_ctrl ]) in insn 333:
  Adding insn 292 to worklist
  Adding insn 317 to worklist
Processing use of (reg 141 [ arch_ctrl$len ]) in insn 317:
  Adding insn 300 to worklist
  Adding insn 294 to worklist
Processing use of (reg 185 [ arch_ctrl ]) in insn 317:
Processing use of (reg 261) in insn 294:
  Adding insn 293 to worklist
Processing use of (reg 185 [ arch_ctrl ]) in insn 293:
Processing use of (subreg (reg 262) 0) in insn 300:
  Adding insn 299 to worklist
Processing use of (reg 141 [ arch_ctrl$len ]) in insn 299:
Processing use of (reg 154 [ bp ]) in insn 292:
Processing use of (reg 274) in insn 332:
  Adding insn 328 to worklist
Processing use of (reg 277) in insn 332:
  Adding insn 331 to worklist
Processing use of (reg 276) in insn 331:
  Adding insn 330 to worklist
Processing use of (reg 275) in insn 330:
  Adding insn 329 to worklist
Processing use of (reg 185 [ arch_ctrl ]) in insn 329:
Processing use of (reg 271) in insn 328:
  Adding insn 325 to worklist
Processing use of (reg 273) in insn 328:
  Adding insn 327 to worklist
Processing use of (reg 272) in insn 327:
  Adding insn 326 to worklist
Processing use of (reg 185 [ arch_ctrl ]) in insn 326:
Processing use of (reg 267) in insn 325:
  Adding insn 321 to worklist
Processing use of (reg 270) in insn 325:
  Adding insn 324 to worklist
Processing use of (reg 269) in insn 324:
  Adding insn 323 to worklist
Processing use of (reg 268) in insn 323:
  Adding insn 322 to worklist
Processing use of (reg 185 [ arch_ctrl ]) in insn 322:
Processing use of (reg 266) in insn 321:
  Adding insn 320 to worklist
Processing use of (reg 265) in insn 320:
  Adding insn 319 to worklist
Processing use of (reg 185 [ arch_ctrl ]) in insn 319:
Processing use of (reg 154 [ bp ]) in insn 312:
Processing use of (reg 253) in insn 252:
  Adding insn 250 to worklist
Processing use of (reg 254 [ D.28052 ]) in insn 252:
  Adding insn 251 to worklist
Processing use of (subreg (reg 159 [ D.28052 ]) 0) in insn 251:
  Adding insn 235 to worklist
Processing use of (reg 0 r0) in insn 235:
Processing use of (reg 137 [ reg.862 ]) in insn 250:
  Adding insn 249 to worklist
Processing use of (reg 138 [ reg.861 ]) in insn 249:
  Adding insn 247 to worklist
Processing use of (reg 252 [ D.28053 ]) in insn 249:
  Adding insn 248 to worklist
Processing use of (subreg (reg 158 [ D.28053 ]) 0) in insn 248:
  Adding insn 238 to worklist
Processing use of (reg 0 r0) in insn 238:
Processing use of (reg 139 [ reg.860 ]) in insn 247:
  Adding insn 246 to worklist
Processing use of (reg 155 [ reg ]) in insn 246:
  Adding insn 245 to worklist
Processing use of (reg 251) in insn 246:
  Adding insn 243 to worklist
Processing use of (reg 0 r0) in insn 243:
Processing use of (reg 250) in insn 245:
  Adding insn 240 to worklist
Processing use of (reg 0 r0) in insn 240:
Processing use of (reg 191 [ data ]) in insn 340:
Processing use of (reg 24 cc) in insn 310:
  Adding insn 309 to worklist
Processing use of (reg 264) in insn 309:
  Adding insn 308 to worklist
Processing use of (reg 190 [ addr ]) in insn 308:
Processing use of (reg 24 cc) in insn 306:
  Adding insn 305 to worklist
Processing use of (reg 263) in insn 305:
  Adding insn 304 to worklist
Processing use of (reg 141 [ arch_ctrl$len ]) in insn 304:
Processing use of (reg 24 cc) in insn 285:
  Adding insn 284 to worklist
Processing use of (reg 154 [ bp ]) in insn 284:
Processing use of (reg 24 cc) in insn 271:
  Adding insn 270 to worklist
Processing use of (reg 153 [ idx ]) in insn 270:
Processing use of (reg 24 cc) in insn 258:
  Adding insn 230 to worklist
Processing use of (reg 190 [ addr ]) in insn 230:
Processing use of (reg 13 sp) in insn 234:
Processing use of (reg 0 r0) in insn 234:
  Adding insn 233 to worklist
Processing use of (reg 190 [ addr ]) in insn 233:
Processing use of (reg 13 sp) in insn 237:
Processing use of (reg 0 r0) in insn 237:
  Adding insn 236 to worklist
Processing use of (reg 13 sp) in insn 239:
Processing use of (reg 13 sp) in insn 242:
Processing use of (reg 24 cc) in insn 231:
Processing use of (reg 13 sp) in insn 224:
Processing use of (reg 0 r0) in insn 224:
  Adding insn 223 to worklist
Processing use of (reg 188 [ child ]) in insn 223:
Processing use of (reg 24 cc) in insn 227:
  Adding insn 226 to worklist
Processing use of (reg 183 [ D.27292 ]) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 0 r0) in insn 225:
Processing use of (reg 13 sp) in insn 211:
Processing use of (reg 161 [ flag ]) in insn 211:
  Adding insn 203 to worklist
Processing use of (reg 191 [ data ]) in insn 203:
Processing use of (reg 245 [ <variable>.addr_limit ]) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 243) in insn 202:
  Adding insn 201 to worklist
Processing use of (reg 244) in insn 201:
  Adding insn 200 to worklist
Processing use of (reg 13 sp) in insn 200:
Processing use of (reg 13 sp) in insn 212:
Processing use of (reg 191 [ data ]) in insn 212:
Processing use of (reg 13 sp) in insn 217:
Processing use of (reg 0 r0) in insn 217:
  Adding insn 213 to worklist
Processing use of (reg 1 r1) in insn 217:
  Adding insn 214 to worklist
Processing use of (reg 2 r2) in insn 217:
  Adding insn 215 to worklist
Processing use of (reg 3 r3) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 161 [ flag ]) in insn 215:
Processing use of (reg 188 [ child ]) in insn 213:
Processing use of (reg 24 cc) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 161 [ flag ]) in insn 204:
Processing use of (reg 13 sp) in insn 187:
Processing use of (reg 164 [ flag ]) in insn 187:
  Adding insn 179 to worklist
Processing use of (reg 191 [ data ]) in insn 179:
Processing use of (reg 238 [ <variable>.addr_limit ]) in insn 179:
  Adding insn 178 to worklist
Processing use of (reg 236) in insn 178:
  Adding insn 177 to worklist
Processing use of (reg 237) in insn 177:
  Adding insn 176 to worklist
Processing use of (reg 13 sp) in insn 176:
Processing use of (reg 13 sp) in insn 188:
Processing use of (reg 191 [ data ]) in insn 188:
Processing use of (reg 13 sp) in insn 193:
Processing use of (reg 0 r0) in insn 193:
  Adding insn 189 to worklist
Processing use of (reg 1 r1) in insn 193:
  Adding insn 190 to worklist
Processing use of (reg 2 r2) in insn 193:
  Adding insn 191 to worklist
Processing use of (reg 3 r3) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 164 [ flag ]) in insn 191:
Processing use of (reg 188 [ child ]) in insn 189:
Processing use of (reg 24 cc) in insn 181:
  Adding insn 180 to worklist
Processing use of (reg 164 [ flag ]) in insn 180:
Processing use of (reg 191 [ data ]) in insn 169:
Processing use of (reg 235 [ <variable>.stack ]) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 188 [ child ]) in insn 168:
Processing use of (reg 0 r0) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 2 r2) in insn 162:
  Adding insn 160 to worklist
Processing use of (reg 234 [ <variable>.stack ]) in insn 160:
  Adding insn 159 to worklist
Processing use of (reg 188 [ child ]) in insn 159:
Processing use of (reg 191 [ data ]) in insn 161:
Processing use of (reg 13 sp) in insn 147:
Processing use of (reg 167 [ flag ]) in insn 147:
  Adding insn 139 to worklist
Processing use of (reg 191 [ data ]) in insn 139:
Processing use of (reg 229 [ <variable>.addr_limit ]) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 227) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 228) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 13 sp) in insn 136:
Processing use of (reg 13 sp) in insn 148:
Processing use of (reg 191 [ data ]) in insn 148:
Processing use of (reg 13 sp) in insn 153:
Processing use of (reg 0 r0) in insn 153:
  Adding insn 149 to worklist
Processing use of (reg 1 r1) in insn 153:
  Adding insn 150 to worklist
Processing use of (reg 2 r2) in insn 153:
  Adding insn 151 to worklist
Processing use of (reg 3 r3) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 167 [ flag ]) in insn 151:
Processing use of (reg 188 [ child ]) in insn 149:
Processing use of (reg 24 cc) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 167 [ flag ]) in insn 140:
Processing use of (reg 13 sp) in insn 123:
Processing use of (reg 170 [ flag ]) in insn 123:
  Adding insn 115 to worklist
Processing use of (reg 191 [ data ]) in insn 115:
Processing use of (reg 222 [ <variable>.addr_limit ]) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 220) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 221) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 13 sp) in insn 112:
Processing use of (reg 13 sp) in insn 124:
Processing use of (reg 191 [ data ]) in insn 124:
Processing use of (reg 13 sp) in insn 129:
Processing use of (reg 0 r0) in insn 129:
  Adding insn 125 to worklist
Processing use of (reg 1 r1) in insn 129:
  Adding insn 126 to worklist
Processing use of (reg 2 r2) in insn 129:
  Adding insn 127 to worklist
Processing use of (reg 3 r3) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 170 [ flag ]) in insn 127:
Processing use of (reg 188 [ child ]) in insn 125:
Processing use of (reg 24 cc) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 170 [ flag ]) in insn 116:
Processing use of (reg 13 sp) in insn 99:
Processing use of (reg 173 [ flag ]) in insn 99:
  Adding insn 92 to worklist
Processing use of (reg 191 [ data ]) in insn 92:
Processing use of (reg 216 [ <variable>.addr_limit ]) in insn 92:
  Adding insn 91 to worklist
Processing use of (reg 214) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 215) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 13 sp) in insn 89:
Processing use of (reg 13 sp) in insn 100:
Processing use of (reg 191 [ data ]) in insn 100:
Processing use of (reg 13 sp) in insn 105:
Processing use of (reg 0 r0) in insn 105:
  Adding insn 101 to worklist
Processing use of (reg 1 r1) in insn 105:
  Adding insn 102 to worklist
Processing use of (reg 2 r2) in insn 105:
  Adding insn 103 to worklist
Processing use of (reg 3 r3) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 173 [ flag ]) in insn 103:
Processing use of (reg 188 [ child ]) in insn 101:
Processing use of (reg 24 cc) in insn 94:
  Adding insn 93 to worklist
Processing use of (reg 173 [ flag ]) in insn 93:
Processing use of (reg 13 sp) in insn 76:
Processing use of (reg 176 [ flag ]) in insn 76:
  Adding insn 69 to worklist
Processing use of (reg 191 [ data ]) in insn 69:
Processing use of (reg 210 [ <variable>.addr_limit ]) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 208) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 209) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 13 sp) in insn 66:
Processing use of (reg 13 sp) in insn 77:
Processing use of (reg 191 [ data ]) in insn 77:
Processing use of (reg 13 sp) in insn 82:
Processing use of (reg 0 r0) in insn 82:
  Adding insn 78 to worklist
Processing use of (reg 1 r1) in insn 82:
  Adding insn 79 to worklist
Processing use of (reg 2 r2) in insn 82:
  Adding insn 80 to worklist
Processing use of (reg 3 r3) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 176 [ flag ]) in insn 80:
Processing use of (reg 188 [ child ]) in insn 78:
Processing use of (reg 24 cc) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 176 [ flag ]) in insn 70:
Processing use of (reg 13 sp) in insn 59:
Processing use of (reg 0 r0) in insn 59:
  Adding insn 56 to worklist
Processing use of (reg 1 r1) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 2 r2) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 191 [ data ]) in insn 58:
Processing use of (reg 190 [ addr ]) in insn 57:
Processing use of (reg 188 [ child ]) in insn 56:
Processing use of (reg 0 r0) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 2 r2) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 179 [ tmp ]) in insn 48:
  Adding insn 45 to worklist
  Adding insn 34 to worklist
Processing use of (reg 201) in insn 34:
  Adding insn 27 to worklist
Processing use of (reg 200) in insn 27:
  Adding insn 26 to worklist
Processing use of (subreg (reg 199) 0) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 195) in insn 25:
  Adding insn 19 to worklist
Processing use of (reg 198) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 190 [ addr ]) in insn 22:
Processing use of (reg 197) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 193) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 190 [ addr ]) in insn 17:
Processing use of (reg 203) in insn 45:
  Adding insn 40 to worklist
Processing use of (reg 206) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 202 [ <variable>.stack ]) in insn 43:
  Adding insn 39 to worklist
Processing use of (reg 205) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 204) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 190 [ addr ]) in insn 41:
Processing use of (reg 188 [ child ]) in insn 39:
Processing use of (reg 191 [ data ]) in insn 49:
Processing use of (reg 24 cc) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 190 [ addr ]) in insn 31:
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 201) in insn 28:
Processing use of (reg 192) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 192) in insn 11:
Processing use of (reg 189 [ request ]) in insn 10:


arch_ptrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={48d,46u} r1={33d,13u} r2={35d,15u} r3={28d,8u} r11={1d,65u} r12={24d} r13={1d,103u,6d} r14={25d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={57d,28u} r25={1d,77u,4d} r26={1d,64u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r133={1d,1u} r134={1d,1u} r135={2d,1u} r136={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r141={2d,3u} r142={1d,1u} r143={1d,2u} r144={1d,2u} r145={1d,2u} r146={2d,2u} r147={1d,6u} r148={2d,6u} r149={1d,1u} r151={1d,2u} r152={4d,1u} r153={1d,2u} r154={1d,4u} r155={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,3u} r162={1d} r164={1d,3u} r165={1d} r167={1d,3u} r168={1d} r170={1d,3u} r171={1d} r173={1d,3u} r174={1d} r176={1d,3u} r177={1d} r179={2d,1u} r181={21d,2u} r182={1d,1u} r183={1d,1u} r184={6d,7u} r185={2d,7u} r188={1d,18u} r189={1d,2u} r190={1d,16u,1d} r191={1d,19u} r192={1d,2u} r193={1d,1u} r195={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,2u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u,1d} r208={1d,1u} r209={1d,1u} r210={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r258={1d,1u} r259={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r285={1d,1u} r286={1d,2u} r293={1d,1u} r294={1d,1u} r297={1d,1u} r300={1d,1u} r306={1d,1u} r312={1d,1u} r317={1d,1u} r319={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={2d,2u} r334={1d,1u} r335={1d,1u} r338={1d,1u} 
;;    total ref usage 3281{2622d,647u,12e} in 340{320 regular + 20 call} insns.
;; Reaching defs:

  sparse invalidated 	0, 1, 2, 24
  dense invalidated 	116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453
0[0,48] 1[48,33] 2[81,35] 3[116,28] 11[144,1] 12[145,24] 13[169,1] 14[170,25] 15[195,20] 16[215,20] 17[235,20] 18[255,20] 19[275,20] 20[295,20] 21[315,20] 22[335,20] 23[355,20] 24[375,57] 25[432,1] 26[433,1] 27[434,20] 28[454,20] 29[474,20] 30[494,20] 31[514,20] 32[534,20] 33[554,20] 34[574,20] 35[594,20] 36[614,20] 37[634,20] 38[654,20] 39[674,20] 40[694,20] 41[714,20] 42[734,20] 43[754,20] 44[774,20] 45[794,20] 46[814,20] 47[834,20] 48[854,20] 49[874,20] 50[894,20] 51[914,20] 52[934,20] 53[954,20] 54[974,20] 55[994,20] 56[1014,20] 57[1034,20] 58[1054,20] 59[1074,20] 60[1094,20] 61[1114,20] 62[1134,20] 63[1154,20] 64[1174,20] 65[1194,20] 66[1214,20] 67[1234,20] 68[1254,20] 69[1274,20] 70[1294,20] 71[1314,20] 72[1334,20] 73[1354,20] 74[1374,20] 75[1394,20] 76[1414,20] 77[1434,20] 78[1454,20] 79[1474,20] 80[1494,20] 81[1514,20] 82[1534,20] 83[1554,20] 84[1574,20] 85[1594,20] 86[1614,20] 87[1634,20] 88[1654,20] 89[1674,20] 90[1694,20] 91[1714,20] 92[1734,20] 93[1754,20] 94[1774,20] 95[1794,20] 96[1814,20] 97[1834,20] 98[1854,20] 99[1874,20] 100[1894,20] 101[1914,20] 102[1934,20] 103[1954,20] 104[1974,20] 105[1994,20] 106[2014,20] 107[2034,20] 108[2054,20] 109[2074,20] 110[2094,20] 111[2114,20] 112[2134,20] 113[2154,20] 114[2174,20] 115[2194,20] 116[2214,20] 117[2234,20] 118[2254,20] 119[2274,20] 120[2294,20] 121[2314,20] 122[2334,20] 123[2354,20] 124[2374,20] 125[2394,20] 126[2414,20] 127[2434,20] 133[2454,1] 134[2455,1] 135[2456,2] 136[2458,2] 137[2460,1] 138[2461,1] 139[2462,1] 141[2463,2] 142[2465,1] 143[2466,1] 144[2467,1] 145[2468,1] 146[2469,2] 147[2471,1] 148[2472,2] 149[2474,1] 151[2475,1] 152[2476,4] 153[2480,1] 154[2481,1] 155[2482,1] 158[2483,1] 159[2484,1] 161[2485,1] 162[2486,1] 164[2487,1] 165[2488,1] 167[2489,1] 168[2490,1] 170[2491,1] 171[2492,1] 173[2493,1] 174[2494,1] 176[2495,1] 177[2496,1] 179[2497,2] 181[2499,21] 182[2520,1] 183[2521,1] 184[2522,6] 185[2528,2] 188[2530,1] 189[2531,1] 190[2532,1] 191[2533,1] 192[2534,1] 193[2535,1] 195[2536,1] 197[2537,1] 198[2538,1] 199[2539,1] 200[2540,1] 201[2541,1] 202[2542,1] 203[2543,1] 204[2544,1] 205[2545,1] 206[2546,1] 208[2547,1] 209[2548,1] 210[2549,1] 214[2550,1] 215[2551,1] 216[2552,1] 220[2553,1] 221[2554,1] 222[2555,1] 227[2556,1] 228[2557,1] 229[2558,1] 234[2559,1] 235[2560,1] 236[2561,1] 237[2562,1] 238[2563,1] 243[2564,1] 244[2565,1] 245[2566,1] 250[2567,1] 251[2568,1] 252[2569,1] 253[2570,1] 254[2571,1] 255[2572,1] 256[2573,1] 258[2574,1] 259[2575,1] 261[2576,1] 262[2577,1] 263[2578,1] 264[2579,1] 265[2580,1] 266[2581,1] 267[2582,1] 268[2583,1] 269[2584,1] 270[2585,1] 271[2586,1] 272[2587,1] 273[2588,1] 274[2589,1] 275[2590,1] 276[2591,1] 277[2592,1] 278[2593,1] 279[2594,1] 280[2595,1] 281[2596,1] 282[2597,1] 283[2598,1] 285[2599,1] 286[2600,1] 293[2601,1] 294[2602,1] 297[2603,1] 300[2604,1] 306[2605,1] 312[2606,1] 317[2607,1] 319[2608,1] 324[2609,1] 325[2610,1] 326[2611,1] 327[2612,1] 328[2613,1] 330[2614,1] 331[2615,1] 332[2616,1] 333[2617,2] 334[2619,1] 335[2620,1] 338[2621,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 188 189 190 191 192
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 188 189 190 191 192
;; live  kill	 24 [cc]
;; rd  in  	(10)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433
;; rd  gen 	(5)
2530, 2531, 2532, 2533, 2534
;; rd  kill	(5)
2530, 2531, 2532, 2533, 2534

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/kernel/ptrace.c:790 (set (reg/v/f:SI 188 [ child ])
        (reg:SI 0 r0 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ child ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 189 [ request ])
        (reg:SI 1 r1 [ request ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ request ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 190 [ addr ])
        (reg:SI 2 r2 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ addr ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 191 [ data ])
        (reg:SI 3 r3 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ data ])
        (nil)))

(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 6 11 2 arch/arm/kernel/ptrace.c:794 (set (reg:SI 192)
        (plus:SI (reg/v:SI 189 [ request ])
            (const_int -3 [0xfffffffffffffffd]))) 4 {*arm_addsi3} (nil))

(jump_insn 11 10 12 2 arch/arm/kernel/ptrace.c:794 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 192)
                        (const_int 27 [0x1b]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 192)
                                (const_int 4 [0x4]))
                            (label_ref 12)) [0 S4 A32])
                    (label_ref 530)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 12))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 530 (nil)))))
;; End of basic block 2 -> ( 62 3 8 9 11 13 15 17 18 19 21 23 41)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 189 190 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 189 190 191
;; rd  out 	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534


;; Succ edge  62 [7.7%] 
;; Succ edge  3 [7.7%] 
;; Succ edge  8 [7.7%] 
;; Succ edge  9 [7.7%] 
;; Succ edge  11 [7.7%] 
;; Succ edge  13 [7.7%] 
;; Succ edge  15 [7.7%] 
;; Succ edge  17 [7.7%] 
;; Succ edge  18 [7.7%] 
;; Succ edge  19 [7.7%] 
;; Succ edge  21 [7.7%] 
;; Succ edge  23 [7.7%] 
;; Succ edge  41 [7.7%] 

;; Insn is not within a basic block
(code_label 12 11 13 108 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 13 12 14 arch/arm/kernel/ptrace.c:794 (addr_vec:SI [
            (label_ref:SI 15)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 54)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 63)
            (label_ref:SI 86)
            (label_ref:SI 109)
            (label_ref:SI 133)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 157)
            (label_ref:SI 166)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 530)
            (label_ref:SI 173)
            (label_ref:SI 197)
            (label_ref:SI 221)
            (label_ref:SI 358)
        ]) -1 (nil))

(barrier 14 13 15)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc] 193 195 197 198 199 200 201
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 24 [cc] 193 195 197 198 199 200 201
;; live  kill	
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(8)
428, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  kill	(7)
2535, 2536, 2537, 2538, 2539, 2540, 2541

;; Pred edge  2 [7.7%] 
(code_label 15 14 16 3 96 "" [1 uses])

(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 193)
        (and:SI (reg/v:SI 190 [ addr ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 19 3 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 19 18 21 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 195)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 21 19 22 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 197)
        (const_int 295 [0x127])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (reg:SI 197))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 190 [ addr ])
                (const_int 295 [0x127]))
            (nil))))

(insn 23 22 25 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 198)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 25 23 26 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 199)
        (ior:SI (reg:SI 195)
            (reg:SI 198))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 195)
            (nil))))

(insn 26 25 27 3 arch/arm/kernel/ptrace.c:258 (set (reg:QI 200)
        (subreg:QI (reg:SI 199) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 27 26 28 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 201)
        (zero_extend:SI (reg:QI 200))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 200)
        (nil)))

(insn 28 27 29 3 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 3 arch/arm/kernel/ptrace.c:258 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 64 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191 201
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191 201
;; rd  out 	(23)
47, 80, 115, 143, 144, 168, 169, 194, 428, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541


;; Succ edge  64 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(23)
47, 80, 115, 143, 144, 168, 169, 194, 428, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  gen 	(1)
427
;; rd  kill	(0)


;; Pred edge  3 [50.0%]  (fallthru)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 arch/arm/kernel/ptrace.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 4 arch/arm/kernel/ptrace.c:268 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191 201
;; rd  out 	(23)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191 201
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 201
;; lr  def 	 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191 201
;; live  gen 	 179
;; live  kill	
;; rd  in  	(23)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  gen 	(1)
2497
;; rd  kill	(2)
2497, 2498

;; Pred edge  4 [50.0%]  (fallthru)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 571 5 arch/arm/kernel/ptrace.c:261 (set (reg/v:SI 179 [ tmp ])
        (reg:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 571 34 572 5 (set (pc)
        (label_ref 46)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; rd  out 	(24)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2497, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541


;; Succ edge  7 [100.0%] 

(barrier 572 571 37)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190
;; lr  def 	 179 202 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 179 202 203 204 205 206
;; live  kill	
;; rd  in  	(23)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541
;; rd  gen 	(6)
2498, 2542, 2543, 2544, 2545, 2546
;; rd  kill	(7)
2497, 2498, 2542, 2543, 2544, 2545, 2546

;; Pred edge  4 [50.0%] 
(code_label 37 572 38 6 110 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 arch/arm/kernel/ptrace.c:160 (set (reg/f:SI 202 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 40 39 41 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 203)
        (const_int 8112 [0x1fb0])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 204)
        (lshiftrt:SI (reg/v:SI 190 [ addr ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 190 [ addr ])
        (nil)))

(insn 42 41 43 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 205)
        (ashift:SI (reg:SI 204)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn 43 42 45 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 206)
        (plus:SI (reg/f:SI 202 [ <variable>.stack ])
            (reg:SI 205))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_DEAD (reg/f:SI 202 [ <variable>.stack ])
            (nil))))

(insn 45 43 46 6 arch/arm/kernel/ptrace.c:160 (set (reg/v:SI 179 [ tmp ])
        (mem/s/j:SI (plus:SI (reg:SI 206)
                (reg:SI 203)) [0 <variable>.uregs S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_DEAD (reg:SI 203)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (reg:SI 206)
                        (const_int 8112 [0x1fb0])) [0 <variable>.uregs S4 A32])
                (nil)))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; rd  out 	(29)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2498, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 191
;; live  gen 	 0 [r0] 2 [r2] 181
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(30)
47, 80, 115, 143, 144, 168, 169, 194, 427, 432, 433, 2497, 2498, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546
;; rd  gen 	(3)
45, 114, 2519
;; rd  kill	(70)
145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 46 45 47 7 111 "" [1 uses])

(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 179 [ tmp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 179 [ tmp ])
        (nil)))

(insn 49 48 50 7 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 50 49 51 7 arch/arm/kernel/ptrace.c:271 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592343))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 2 r2 [ __r2 ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (nil))))))

(insn 51 50 573 7 arch/arm/kernel/ptrace.c:271 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 0 r0 [ __e ])
        (nil)))

(jump_insn 573 51 574 7 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 7 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(28)
45, 80, 114, 143, 144, 169, 432, 433, 2497, 2498, 2519, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546


;; Succ edge  65 [100.0%] 

(barrier 574 573 54)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 181
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
43, 2518
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  2 [7.7%] 
(code_label 54 574 55 8 97 "" [1 uses])

(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 8 arch/arm/kernel/ptrace.c:800 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 57 56 58 8 arch/arm/kernel/ptrace.c:800 (set (reg:SI 1 r1)
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 190 [ addr ])
        (nil)))

(insn 58 57 59 8 arch/arm/kernel/ptrace.c:800 (set (reg:SI 2 r2)
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(call_insn 59 58 60 8 arch/arm/kernel/ptrace.c:800 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_write_user") [flags 0x3] <function_decl 0x1155b480 ptrace_write_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 60 59 575 8 arch/arm/kernel/ptrace.c:800 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 575 60 576 8 arch/arm/kernel/ptrace.c:801 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 8 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(15)
43, 80, 115, 143, 144, 168, 169, 432, 433, 2518, 2530, 2531, 2532, 2533, 2534


;; Succ edge  65 [100.0%] 

(barrier 576 575 63)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 176 177 208 209 210
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 176 177 208 209 210
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
424, 2495, 2496, 2547, 2548, 2549
;; rd  kill	(5)
2495, 2496, 2547, 2548, 2549

;; Pred edge  2 [7.7%] 
(code_label 63 576 64 9 98 "" [1 uses])

(note 64 63 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 66 64 67 9 include/linux/regset.h:338 (set (reg:SI 209)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 67 66 68 9 include/linux/regset.h:338 (set (reg:SI 208)
        (and:SI (reg:SI 209)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 68 67 69 9 include/linux/regset.h:338 (set (reg:SI 210 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 208)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 69 68 70 9 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 176 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v:SI 191 [ data ])
                        (const_int 72 [0x48])
                        (reg:SI 210 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 177 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v:SI 191 [ data ])
                        (const_int 72 [0x48])
                        (reg:SI 210 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 210 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 177 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 70 69 71 9 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 176 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 72 9 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 9 -> ( 64 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 176 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 176 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 424, 432, 433, 2495, 2496, 2530, 2531, 2532, 2533, 2534, 2547, 2548, 2549


;; Succ edge  64 [71.0%] 
;; Succ edge  10 [29.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 424, 432, 433, 2495, 2496, 2530, 2531, 2532, 2533, 2534, 2547, 2548, 2549
;; rd  gen 	(2)
41, 2517
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  9 [29.0%]  (fallthru)
(note 72 71 76 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 76 72 77 10 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 176 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 10 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 78 77 79 10 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 79 78 80 10 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 80 79 81 10 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (reg/v:SI 176 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 176 [ flag ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 81 80 82 10 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 82 81 83 10 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_get") [flags 0x3] <function_decl 0x1155be80 gpr_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 83 82 577 10 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 577 83 578 10 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 10 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
41, 80, 115, 143, 144, 168, 169, 424, 432, 433, 2495, 2496, 2517, 2530, 2531, 2532, 2533, 2534, 2547, 2548, 2549


;; Succ edge  65 [100.0%] 

(barrier 578 577 86)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 173 174 214 215 216
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 173 174 214 215 216
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
422, 2493, 2494, 2550, 2551, 2552
;; rd  kill	(5)
2493, 2494, 2550, 2551, 2552

;; Pred edge  2 [7.7%] 
(code_label 86 578 87 11 99 "" [1 uses])

(note 87 86 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 89 87 90 11 include/linux/regset.h:361 (set (reg:SI 215)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 90 89 91 11 include/linux/regset.h:361 (set (reg:SI 214)
        (and:SI (reg:SI 215)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 91 90 92 11 include/linux/regset.h:361 (set (reg:SI 216 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 214)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(insn 92 91 93 11 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 173 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v:SI 191 [ data ])
                        (const_int 72 [0x48])
                        (reg:SI 216 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 174 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v:SI 191 [ data ])
                        (const_int 72 [0x48])
                        (reg:SI 216 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 216 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 174 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 93 92 94 11 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 94 93 95 11 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 64 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 422, 432, 433, 2493, 2494, 2530, 2531, 2532, 2533, 2534, 2550, 2551, 2552


;; Succ edge  64 [71.0%] 
;; Succ edge  12 [29.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 422, 432, 433, 2493, 2494, 2530, 2531, 2532, 2533, 2534, 2550, 2551, 2552
;; rd  gen 	(2)
39, 2516
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  11 [29.0%]  (fallthru)
(note 95 94 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 99 95 100 12 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 173 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 12 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 101 100 102 12 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 102 101 103 12 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 103 102 104 12 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (reg/v:SI 173 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 173 [ flag ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 104 103 105 12 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 105 104 106 12 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_set") [flags 0x3] <function_decl 0x1155bf80 gpr_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 106 105 579 12 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 579 106 580 12 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 12 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
39, 80, 115, 143, 144, 168, 169, 422, 432, 433, 2493, 2494, 2516, 2530, 2531, 2532, 2533, 2534, 2550, 2551, 2552


;; Succ edge  65 [100.0%] 

(barrier 580 579 109)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 170 171 220 221 222
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 170 171 220 221 222
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
420, 2491, 2492, 2553, 2554, 2555
;; rd  kill	(5)
2491, 2492, 2553, 2554, 2555

;; Pred edge  2 [7.7%] 
(code_label 109 580 110 13 100 "" [1 uses])

(note 110 109 112 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 112 110 113 13 include/linux/regset.h:338 (set (reg:SI 221)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 113 112 114 13 include/linux/regset.h:338 (set (reg:SI 220)
        (and:SI (reg:SI 221)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 114 113 115 13 include/linux/regset.h:338 (set (reg:SI 222 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 220)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 115 114 116 13 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 170 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v:SI 191 [ data ])
                        (const_int 140 [0x8c])
                        (reg:SI 222 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 171 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v:SI 191 [ data ])
                        (const_int 140 [0x8c])
                        (reg:SI 222 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 222 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 171 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 116 115 117 13 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 117 116 118 13 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 13 -> ( 64 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 420, 432, 433, 2491, 2492, 2530, 2531, 2532, 2533, 2534, 2553, 2554, 2555


;; Succ edge  64 [71.0%] 
;; Succ edge  14 [29.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 420, 432, 433, 2491, 2492, 2530, 2531, 2532, 2533, 2534, 2553, 2554, 2555
;; rd  gen 	(2)
37, 2515
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  13 [29.0%]  (fallthru)
(note 118 117 123 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 123 118 124 14 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 170 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 124 123 125 14 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 125 124 126 14 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 126 125 127 14 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 208 [0xd0])))) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 14 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (reg/v:SI 170 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 170 [ flag ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 128 127 129 14 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) 167 {*arm_movsi_insn} (nil))

(call_insn 129 128 130 14 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_get") [flags 0x3] <function_decl 0x11582080 fpa_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 130 129 581 14 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 581 130 582 14 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 14 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
37, 80, 115, 143, 144, 168, 169, 420, 432, 433, 2491, 2492, 2515, 2530, 2531, 2532, 2533, 2534, 2553, 2554, 2555


;; Succ edge  65 [100.0%] 

(barrier 582 581 133)

;; Start of basic block ( 2) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 167 168 227 228 229
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 167 168 227 228 229
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
418, 2489, 2490, 2556, 2557, 2558
;; rd  kill	(5)
2489, 2490, 2556, 2557, 2558

;; Pred edge  2 [7.7%] 
(code_label 133 582 134 15 101 "" [1 uses])

(note 134 133 136 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 136 134 137 15 include/linux/regset.h:361 (set (reg:SI 228)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 137 136 138 15 include/linux/regset.h:361 (set (reg:SI 227)
        (and:SI (reg:SI 228)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 138 137 139 15 include/linux/regset.h:361 (set (reg:SI 229 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 227)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 227)
        (nil)))

(insn 139 138 140 15 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 167 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v:SI 191 [ data ])
                        (const_int 140 [0x8c])
                        (reg:SI 229 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 168 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v:SI 191 [ data ])
                        (const_int 140 [0x8c])
                        (reg:SI 229 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 229 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 168 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 140 139 141 15 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 141 140 142 15 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 64 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 418, 432, 433, 2489, 2490, 2530, 2531, 2532, 2533, 2534, 2556, 2557, 2558


;; Succ edge  64 [71.0%] 
;; Succ edge  16 [29.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 418, 432, 433, 2489, 2490, 2530, 2531, 2532, 2533, 2534, 2556, 2557, 2558
;; rd  gen 	(2)
35, 2514
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  15 [29.0%]  (fallthru)
(note 142 141 147 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 147 142 148 16 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 167 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 148 147 149 16 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 149 148 150 16 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 150 149 151 16 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 208 [0xd0])))) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 16 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (reg/v:SI 167 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 167 [ flag ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 152 151 153 16 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) 167 {*arm_movsi_insn} (nil))

(call_insn 153 152 154 16 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_set") [flags 0x3] <function_decl 0x11582180 fpa_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 154 153 583 16 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 583 154 584 16 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 16 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
35, 80, 115, 143, 144, 168, 169, 418, 432, 433, 2489, 2490, 2514, 2530, 2531, 2532, 2533, 2534, 2556, 2557, 2558


;; Succ edge  65 [100.0%] 

(barrier 584 583 157)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 181 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 0 [r0] 2 [r2] 181 234
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(4)
33, 107, 2513, 2559
;; rd  kill	(71)
145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2559

;; Pred edge  2 [7.7%] 
(code_label 157 584 158 17 102 "" [1 uses])

(note 158 157 159 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 17 arch/arm/kernel/ptrace.c:842 (set (reg/f:SI 234 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 160 159 161 17 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 2 r2 [ __r2 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 234 [ <variable>.stack ])
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 234 [ <variable>.stack ])
        (nil)))

(insn 161 160 162 17 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 162 161 163 17 arch/arm/kernel/ptrace.c:842 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592319))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 2 r2 [ __r2 ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (nil))))))

(insn 163 162 585 17 arch/arm/kernel/ptrace.c:842 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 0 r0 [ __e ])
        (nil)))

(jump_insn 585 163 586 17 arch/arm/kernel/ptrace.c:844 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 17 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(15)
33, 80, 107, 143, 144, 169, 432, 433, 2513, 2530, 2531, 2532, 2533, 2534, 2559


;; Succ edge  65 [100.0%] 

(barrier 586 585 166)

;; Start of basic block ( 2) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  def 	 181 235
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 181 235
;; live  kill	
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2512, 2560
;; rd  kill	(22)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2560

;; Pred edge  2 [7.7%] 
(code_label 166 586 167 18 103 "" [1 uses])

(note 167 166 168 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 169 18 arch/arm/kernel/ptrace.c:847 (set (reg/f:SI 235 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 169 168 170 18 arch/arm/kernel/ptrace.c:847 (set (mem/s/j:SI (plus:SI (reg/f:SI 235 [ <variable>.stack ])
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 235 [ <variable>.stack ])
        (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
            (nil))))

(insn 170 169 587 18 arch/arm/kernel/ptrace.c:848 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 587 170 588 18 arch/arm/kernel/ptrace.c:849 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 18 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; rd  out 	(17)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2512, 2530, 2531, 2532, 2533, 2534, 2560


;; Succ edge  65 [100.0%] 

(barrier 588 587 173)

;; Start of basic block ( 2) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u201(11){ }u202(13){ }u203(25){ }u204(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 164 165 236 237 238
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 164 165 236 237 238
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
415, 2487, 2488, 2561, 2562, 2563
;; rd  kill	(5)
2487, 2488, 2561, 2562, 2563

;; Pred edge  2 [7.7%] 
(code_label 173 588 174 19 104 "" [1 uses])

(note 174 173 176 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 176 174 177 19 include/linux/regset.h:338 (set (reg:SI 237)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 177 176 178 19 include/linux/regset.h:338 (set (reg:SI 236)
        (and:SI (reg:SI 237)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 178 177 179 19 include/linux/regset.h:338 (set (reg:SI 238 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 236)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(insn 179 178 180 19 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 164 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v:SI 191 [ data ])
                        (const_int 260 [0x104])
                        (reg:SI 238 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 165 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v:SI 191 [ data ])
                        (const_int 260 [0x104])
                        (reg:SI 238 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 238 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 165 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 180 179 181 19 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 164 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 181 180 182 19 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 64 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 415, 432, 433, 2487, 2488, 2530, 2531, 2532, 2533, 2534, 2561, 2562, 2563


;; Succ edge  64 [71.0%] 
;; Succ edge  20 [29.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 415, 432, 433, 2487, 2488, 2530, 2531, 2532, 2533, 2534, 2561, 2562, 2563
;; rd  gen 	(2)
31, 2511
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  19 [29.0%]  (fallthru)
(note 182 181 187 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 187 182 188 20 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 164 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 188 187 189 20 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 189 188 190 20 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 190 189 191 20 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 244 [0xf4])))) 167 {*arm_movsi_insn} (nil))

(insn 191 190 192 20 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (reg/v:SI 164 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 164 [ flag ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 192 191 193 20 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) 167 {*arm_movsi_insn} (nil))

(call_insn 193 192 194 20 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get") [flags 0x3] <function_decl 0x11582280 vfp_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 194 193 589 20 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 589 194 590 20 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 20 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
31, 80, 115, 143, 144, 168, 169, 415, 432, 433, 2487, 2488, 2511, 2530, 2531, 2532, 2533, 2534, 2561, 2562, 2563


;; Succ edge  65 [100.0%] 

(barrier 590 589 197)

;; Start of basic block ( 2) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 24 [cc] 161 162 243 244 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 24 [cc] 161 162 243 244 245
;; live  kill	 24 [cc]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(6)
413, 2485, 2486, 2564, 2565, 2566
;; rd  kill	(5)
2485, 2486, 2564, 2565, 2566

;; Pred edge  2 [7.7%] 
(code_label 197 590 198 21 105 "" [1 uses])

(note 198 197 200 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 200 198 201 21 include/linux/regset.h:361 (set (reg:SI 244)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 201 200 202 21 include/linux/regset.h:361 (set (reg:SI 243)
        (and:SI (reg:SI 244)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 244)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 202 201 203 21 include/linux/regset.h:361 (set (reg:SI 245 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 243)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 243)
        (nil)))

(insn 203 202 204 21 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 161 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v:SI 191 [ data ])
                        (const_int 260 [0x104])
                        (reg:SI 245 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 162 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v:SI 191 [ data ])
                        (const_int 260 [0x104])
                        (reg:SI 245 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 245 [ <variable>.addr_limit ])
        (expr_list:REG_UNUSED (reg/v:SI 162 [ roksum ])
            (expr_list:REG_UNUSED (reg:QI 24 cc)
                (nil)))))

(insn 204 203 205 21 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 161 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 205 204 206 21 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21 -> ( 64 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 188 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 188 191
;; rd  out 	(21)
47, 80, 115, 143, 144, 168, 169, 194, 413, 432, 433, 2485, 2486, 2530, 2531, 2532, 2533, 2534, 2564, 2565, 2566


;; Succ edge  64 [71.0%] 
;; Succ edge  22 [29.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 188 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 188 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(21)
47, 80, 115, 143, 144, 168, 169, 194, 413, 432, 433, 2485, 2486, 2530, 2531, 2532, 2533, 2534, 2564, 2565, 2566
;; rd  gen 	(2)
29, 2510
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  21 [29.0%]  (fallthru)
(note 206 205 211 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 211 206 212 22 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 161 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 212 211 213 22 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 213 212 214 22 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 214 213 215 22 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 244 [0xf4])))) 167 {*arm_movsi_insn} (nil))

(insn 215 214 216 22 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (reg/v:SI 161 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 161 [ flag ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 216 215 217 22 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) 167 {*arm_movsi_insn} (nil))

(call_insn 217 216 218 22 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_set") [flags 0x3] <function_decl 0x11582380 vfp_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 218 217 591 22 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 591 218 592 22 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 22 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(21)
29, 80, 115, 143, 144, 168, 169, 413, 432, 433, 2485, 2486, 2510, 2530, 2531, 2532, 2533, 2534, 2564, 2565, 2566


;; Succ edge  65 [100.0%] 

(barrier 592 591 221)

;; Start of basic block ( 2) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u257(11){ }u258(13){ }u259(25){ }u260(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 24 [cc] 183
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
27, 410, 2521
;; rd  kill	(26)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2521

;; Pred edge  2 [7.7%] 
(code_label 221 592 222 23 106 "" [1 uses])

(note 222 221 223 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 224 23 arch/arm/kernel/ptrace.c:879 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(call_insn 224 223 225 23 arch/arm/kernel/ptrace.c:879 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 225 224 226 23 arch/arm/kernel/ptrace.c:879 (set (reg:SI 183 [ D.27292 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 226 225 227 23 arch/arm/kernel/ptrace.c:879 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183 [ D.27292 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 183 [ D.27292 ])
        (nil)))

(jump_insn 227 226 228 23 arch/arm/kernel/ptrace.c:879 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1912 [0x778])
            (nil))))
;; End of basic block 23 -> ( 63 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
27, 80, 115, 143, 144, 168, 169, 410, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534


;; Succ edge  63 [19.1%] 
;; Succ edge  24 [80.9%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 410, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
383
;; rd  kill	(0)


;; Pred edge  23 [80.9%]  (fallthru)
(note 228 227 230 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 230 228 231 24 arch/arm/kernel/ptrace.c:472 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 231 230 232 24 arch/arm/kernel/ptrace.c:472 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534


;; Succ edge  25 [29.0%]  (fallthru)
;; Succ edge  26 [71.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u273(11){ }u274(13){ }u275(25){ }u276(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 152 155 158 159 250 251 252 253 254
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 137 138 139 152 155 158 159 250 251 252 253 254
;; live  kill	 14 [lr]
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(13)
22, 2460, 2461, 2462, 2479, 2482, 2483, 2484, 2567, 2568, 2569, 2570, 2571
;; rd  kill	(40)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2460, 2461, 2462, 2476, 2477, 2478, 2479, 2482, 2483, 2484, 2567, 2568, 2569, 2570, 2571

;; Pred edge  24 [29.0%]  (fallthru)
(note 232 231 233 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 25 arch/arm/kernel/ptrace.c:432 (set (reg:SI 0 r0)
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 190 [ addr ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 234 233 235 25 arch/arm/kernel/ptrace.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 235 234 236 25 arch/arm/kernel/ptrace.c:432 (set (reg:SI 159 [ D.28052 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 236 235 237 25 arch/arm/kernel/ptrace.c:433 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 237 236 238 25 arch/arm/kernel/ptrace.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 238 237 239 25 arch/arm/kernel/ptrace.c:433 (set (reg:SI 158 [ D.28053 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(call_insn 239 238 240 25 arch/arm/kernel/ptrace.c:434 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_debug_arch") [flags 0x41] <function_decl 0x10ad9400 arch_get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 240 239 242 25 arch/arm/kernel/ptrace.c:434 (set (reg:SI 250)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(call_insn 242 240 243 25 arch/arm/kernel/ptrace.c:435 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_max_wp_len") [flags 0x41] <function_decl 0x10ad9480 arch_get_max_wp_len>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 243 242 245 25 arch/arm/kernel/ptrace.c:435 (set (reg:SI 251)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 245 243 246 25 arch/arm/kernel/ptrace.c:438 (set (reg/v:SI 155 [ reg ])
        (ashift:SI (reg:SI 250)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 250)
        (nil)))

(insn 246 245 247 25 arch/arm/kernel/ptrace.c:439 (set (reg/v:SI 139 [ reg.860 ])
        (ior:SI (reg/v:SI 155 [ reg ])
            (reg:SI 251))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 251)
        (expr_list:REG_DEAD (reg/v:SI 155 [ reg ])
            (nil))))

(insn 247 246 248 25 arch/arm/kernel/ptrace.c:440 (set (reg/v:SI 138 [ reg.861 ])
        (ashift:SI (reg/v:SI 139 [ reg.860 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ reg.860 ])
        (nil)))

(insn 248 247 249 25 arch/arm/kernel/ptrace.c:441 (set (reg:SI 252 [ D.28053 ])
        (zero_extend:SI (subreg:QI (reg:SI 158 [ D.28053 ]) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 158 [ D.28053 ])
        (nil)))

(insn 249 248 250 25 arch/arm/kernel/ptrace.c:441 (set (reg/v:SI 137 [ reg.862 ])
        (ior:SI (reg/v:SI 138 [ reg.861 ])
            (reg:SI 252 [ D.28053 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 252 [ D.28053 ])
        (expr_list:REG_DEAD (reg/v:SI 138 [ reg.861 ])
            (nil))))

(insn 250 249 251 25 arch/arm/kernel/ptrace.c:443 (set (reg:SI 253)
        (ashift:SI (reg/v:SI 137 [ reg.862 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ reg.862 ])
        (nil)))

(insn 251 250 252 25 arch/arm/kernel/ptrace.c:443 (set (reg:SI 254 [ D.28052 ])
        (zero_extend:SI (subreg:QI (reg:SI 159 [ D.28052 ]) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 159 [ D.28052 ])
        (nil)))

(insn 252 251 593 25 arch/arm/kernel/ptrace.c:443 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 253)
            (reg:SI 254 [ D.28052 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 254 [ D.28052 ])
        (expr_list:REG_DEAD (reg:SI 253)
            (nil))))

(jump_insn 593 252 594 25 (set (pc)
        (label_ref 337)) -1 (nil))
;; End of basic block 25 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(28)
22, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2460, 2461, 2462, 2479, 2482, 2483, 2484, 2521, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571


;; Succ edge  39 [100.0%] 

(barrier 594 593 255)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u299(11){ }u300(13){ }u301(25){ }u302(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  24 [71.0%] 
(code_label 255 594 256 26 114 "" [1 uses])

(note 256 255 258 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(jump_insn 258 256 259 26 arch/arm/kernel/ptrace.c:358 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 263)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 26 -> ( 28 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534


;; Succ edge  28 [27.0%] 
;; Succ edge  27 [73.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u304(11){ }u305(13){ }u306(25){ }u307(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 136
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2459
;; rd  kill	(2)
2458, 2459

;; Pred edge  26 [73.0%]  (fallthru)
(note 259 258 260 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 595 27 arch/arm/kernel/ptrace.c:358 (set (reg/v:SI 136 [ num.864 ])
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 595 260 596 27 (set (pc)
        (label_ref 266)) -1 (nil))
;; End of basic block 27 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; rd  out 	(17)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2459, 2521, 2530, 2531, 2532, 2533, 2534


;; Succ edge  29 [100.0%] 

(barrier 596 595 263)

;; Start of basic block ( 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u309(11){ }u310(13){ }u311(25){ }u312(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 136
;; live  kill	
;; rd  in  	(16)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2458
;; rd  kill	(2)
2458, 2459

;; Pred edge  26 [27.0%] 
(code_label 263 596 264 28 116 "" [1 uses])

(note 264 263 265 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 265 264 266 28 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 136 [ num.864 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 190 [ addr ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 28 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; rd  out 	(17)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2458, 2521, 2530, 2531, 2532, 2533, 2534


;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 28 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 153 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 188 190 191
;; live  gen 	 24 [cc] 153 255
;; live  kill	
;; rd  in  	(18)
27, 80, 115, 143, 144, 168, 169, 383, 432, 433, 2458, 2459, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
405, 2480, 2572
;; rd  kill	(2)
2480, 2572

;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%] 
(code_label 266 265 267 29 117 "" [1 uses])

(note 267 266 268 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 269 29 arch/arm/kernel/ptrace.c:360 (set (reg:SI 255)
        (plus:SI (reg/v:SI 136 [ num.864 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 136 [ num.864 ])
        (nil)))

(insn 269 268 270 29 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 153 [ idx ])
        (ashiftrt:SI (reg:SI 255)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 255)
        (nil)))

(insn 270 269 271 29 arch/arm/kernel/ptrace.c:476 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ idx ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 271 270 272 29 arch/arm/kernel/ptrace.c:476 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; rd  out 	(20)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2521, 2530, 2531, 2532, 2533, 2534, 2572


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u322(11){ }u323(13){ }u324(25){ }u325(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(20)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2521, 2530, 2531, 2532, 2533, 2534, 2572
;; rd  gen 	(1)
2509
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  29 [50.0%]  (fallthru)
(note 272 271 273 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 273 272 597 30 arch/arm/kernel/ptrace.c:477 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 597 273 598 30 (set (pc)
        (label_ref 352)) -1 (nil))
;; End of basic block 30 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(21)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2509, 2521, 2530, 2531, 2532, 2533, 2534, 2572


;; Succ edge  40 [100.0%] 

(barrier 598 597 276)

;; Start of basic block ( 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u326(11){ }u327(13){ }u328(25){ }u329(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188
;; lr  def 	 24 [cc] 154 256 258 259
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188 190 191
;; live  gen 	 24 [cc] 154 256 258 259
;; live  kill	
;; rd  in  	(20)
27, 80, 115, 143, 144, 168, 169, 405, 432, 433, 2458, 2459, 2480, 2521, 2530, 2531, 2532, 2533, 2534, 2572
;; rd  gen 	(5)
404, 2481, 2573, 2574, 2575
;; rd  kill	(4)
2481, 2573, 2574, 2575

;; Pred edge  29 [50.0%] 
(code_label 276 598 277 31 118 "" [1 uses])

(note 277 276 278 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 280 31 arch/arm/kernel/ptrace.c:481 (set (reg:SI 256)
        (plus:SI (reg/v:SI 153 [ idx ])
            (const_int 198 [0xc6]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 153 [ idx ])
        (nil)))

(insn 280 278 281 31 arch/arm/kernel/ptrace.c:481 (set (reg:SI 258)
        (ashift:SI (reg:SI 256)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 256)
        (nil)))

(insn 281 280 283 31 arch/arm/kernel/ptrace.c:481 (set (reg:SI 259)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 258))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 258)
        (nil)))

(insn 283 281 284 31 arch/arm/kernel/ptrace.c:481 (set (reg/v/f:SI 154 [ bp ])
        (mem/s/f/j:SI (plus:SI (reg:SI 259)
                (const_int 4 [0x4])) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 259)
        (nil)))

(insn 284 283 285 31 arch/arm/kernel/ptrace.c:482 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 154 [ bp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 285 284 286 31 arch/arm/kernel/ptrace.c:482 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; rd  out 	(24)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575


;; Succ edge  32 [15.0%]  (fallthru)
;; Succ edge  33 [85.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; live  gen 	 152
;; live  kill	
;; rd  in  	(24)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575
;; rd  gen 	(1)
2476
;; rd  kill	(4)
2476, 2477, 2478, 2479

;; Pred edge  31 [15.0%]  (fallthru)
(note 286 285 287 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 287 286 599 32 arch/arm/kernel/ptrace.c:483 (set (reg/v:SI 152 [ reg ])
        (reg/v/f:SI 154 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 154 [ bp ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 599 287 600 32 (set (pc)
        (label_ref 337)) -1 (nil))
;; End of basic block 32 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(25)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2476, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575


;; Succ edge  39 [100.0%] 

(barrier 600 599 290)

;; Start of basic block ( 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u342(11){ }u343(13){ }u344(25){ }u345(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 141 185 261
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 190 191
;; live  gen 	 141 185 261
;; live  kill	
;; rd  in  	(24)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2480, 2481, 2521, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575
;; rd  gen 	(3)
2463, 2529, 2576
;; rd  kill	(5)
2463, 2464, 2528, 2529, 2576

;; Pred edge  31 [85.0%] 
(code_label 290 600 291 33 120 "" [1 uses])

(note 291 290 292 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 33 arch/arm/kernel/ptrace.c:487 (set (reg/v:SI 185 [ arch_ctrl ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 212 [0xd4])) [0 <variable>.hw.D.25978.D.25977.info.ctrl+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 293 292 294 33 arch/arm/kernel/ptrace.c:487 (set (subreg:SI (reg:QI 261) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) 124 {extzv_t2} (nil))

(insn 294 293 601 33 arch/arm/kernel/ptrace.c:487 (set (reg:SI 141 [ arch_ctrl$len ])
        (zero_extend:SI (reg:QI 261))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 261)
        (nil)))

(jump_insn 601 294 602 33 (set (pc)
        (label_ref 301)) -1 (nil))
;; End of basic block 33 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; rd  out 	(27)
27, 80, 115, 143, 144, 168, 169, 404, 432, 433, 2458, 2459, 2463, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576


;; Succ edge  35 [100.0%] 

(barrier 602 601 303)

;; Start of basic block ( 35) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u349(11){ }u350(13){ }u351(25){ }u352(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  gen 	 141 262
;; live  kill	
;; rd  in  	(30)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;; rd  gen 	(2)
2464, 2577
;; rd  kill	(3)
2463, 2464, 2577

;; Pred edge  35 [91.0%] 
(code_label 303 602 298 34 122 "" [1 uses])

(note 298 303 299 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 300 34 arch/arm/kernel/ptrace.c:494 (set (reg:SI 262)
        (lshiftrt:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 141 [ arch_ctrl$len ])
        (nil)))

(insn 300 299 301 34 arch/arm/kernel/ptrace.c:494 (set (reg:SI 141 [ arch_ctrl$len ])
        (zero_extend:SI (subreg:QI (reg:SI 262) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; rd  out 	(29)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578


;; Succ edge  35 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 34 33) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u355(11){ }u356(13){ }u357(25){ }u358(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  gen 	 24 [cc] 263
;; live  kill	
;; rd  in  	(31)
27, 80, 115, 143, 144, 168, 169, 403, 404, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;; rd  gen 	(2)
403, 2578
;; rd  kill	(1)
2578

;; Pred edge  34 [100.0%]  (fallthru,dfs_back)
;; Pred edge  33 [100.0%] 
(code_label 301 300 302 35 121 "" [1 uses])

(note 302 301 304 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 304 302 305 35 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:SI 263)
        (and:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 305 304 306 35 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 263)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 263)
        (nil)))

(jump_insn 306 305 307 35 arch/arm/kernel/ptrace.c:493 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 303)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 35 -> ( 34 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; rd  out 	(30)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578


;; Succ edge  34 [91.0%] 
;; Succ edge  36 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u362(11){ }u363(13){ }u364(25){ }u365(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc] 264
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 190 191
;; live  gen 	 24 [cc] 264
;; live  kill	
;; rd  in  	(30)
27, 80, 115, 143, 144, 168, 169, 403, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578
;; rd  gen 	(2)
402, 2579
;; rd  kill	(1)
2579

;; Pred edge  35 [9.0%]  (fallthru,loop_exit)
(note 307 306 308 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 309 36 arch/arm/kernel/ptrace.c:496 (set (reg:SI 264)
        (and:SI (reg/v:SI 190 [ addr ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 190 [ addr ])
        (nil)))

(insn 309 308 310 36 arch/arm/kernel/ptrace.c:496 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 264)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 264)
        (nil)))

(jump_insn 310 309 311 36 arch/arm/kernel/ptrace.c:496 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 315)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 185 188 191
;; rd  out 	(31)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579


;; Succ edge  37 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u369(11){ }u370(13){ }u371(25){ }u372(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 188 191
;; live  gen 	 152
;; live  kill	
;; rd  in  	(31)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579
;; rd  gen 	(1)
2478
;; rd  kill	(4)
2476, 2477, 2478, 2479

;; Pred edge  36 [50.0%]  (fallthru)
(note 311 310 312 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 312 311 603 37 arch/arm/kernel/ptrace.c:497 (set (reg/v:SI 152 [ reg ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.23452.bp_addr+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 154 [ bp ])
        (nil)))

(jump_insn 603 312 604 37 (set (pc)
        (label_ref 337)) -1 (nil))
;; End of basic block 37 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(32)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2478, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579


;; Succ edge  39 [100.0%] 

(barrier 604 603 315)

;; Start of basic block ( 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u374(11){ }u375(13){ }u376(25){ }u377(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 185 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 185
;; lr  def 	 152 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 185 188 191
;; live  gen 	 152 185 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281
;; live  kill	
;; rd  in  	(31)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2480, 2481, 2521, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579
;; rd  gen 	(19)
2477, 2528, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;; rd  kill	(21)
2476, 2477, 2478, 2479, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596

;; Pred edge  36 [50.0%] 
(code_label 315 604 316 38 123 "" [1 uses])

(note 316 315 317 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 317 316 319 38 arch/arm/kernel/ptrace.c:497 (set (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg:SI 141 [ arch_ctrl$len ])) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 141 [ arch_ctrl$len ])
        (nil)))

(insn 319 317 320 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 265) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))) 124 {extzv_t2} (nil))

(insn 320 319 321 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 266)
        (zero_extend:SI (reg:QI 265))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 265)
        (nil)))

(insn 321 320 322 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 267)
        (ashift:SI (reg:SI 266)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 266)
        (nil)))

(insn 322 321 323 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 268) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) 124 {extzv_t2} (nil))

(insn 323 322 324 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 269)
        (zero_extend:SI (reg:QI 268))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 268)
        (nil)))

(insn 324 323 325 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 270)
        (ashift:SI (reg:SI 269)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 269)
        (nil)))

(insn 325 324 326 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 271)
        (ior:SI (reg:SI 267)
            (reg:SI 270))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 270)
        (expr_list:REG_DEAD (reg:SI 267)
            (nil))))

(insn 326 325 327 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 272) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))) 124 {extzv_t2} (nil))

(insn 327 326 328 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 273)
        (zero_extend:SI (reg:QI 272))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 272)
        (nil)))

(insn 328 327 329 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 274)
        (ior:SI (reg:SI 271)
            (reg:SI 273))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 273)
        (expr_list:REG_DEAD (reg:SI 271)
            (nil))))

(insn 329 328 330 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 275) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) 124 {extzv_t2} (nil))

(insn 330 329 331 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 276)
        (zero_extend:SI (reg:QI 275))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 275)
        (nil)))

(insn 331 330 332 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 277)
        (ashift:SI (reg:SI 276)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 276)
        (nil)))

(insn 332 331 333 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 278)
        (ior:SI (reg:SI 274)
            (reg:SI 277))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 277)
        (expr_list:REG_DEAD (reg:SI 274)
            (nil))))

(insn 333 332 334 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 279) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 185 [ arch_ctrl ])
        (nil)))

(insn 334 333 335 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 280)
        (zero_extend:SI (reg:QI 279))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 279)
        (nil)))

(insn 335 334 336 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 281)
        (ashift:SI (reg:SI 280)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 280)
        (nil)))

(insn 336 335 337 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 278)
            (reg:SI 281))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 281)
        (expr_list:REG_DEAD (reg:SI 278)
            (nil))))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; rd  out 	(50)
27, 80, 115, 143, 144, 168, 169, 402, 432, 433, 2458, 2459, 2463, 2464, 2477, 2480, 2481, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 38 25 32 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u402(11){ }u403(13){ }u404(25){ }u405(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 191
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 151 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 188 191
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 151 181
;; live  kill	 12 [ip] 14 [lr] 24 [cc]
;; rd  in  	(67)
22, 27, 80, 115, 143, 144, 168, 169, 383, 402, 404, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;; rd  gen 	(5)
20, 99, 375, 2475, 2499
;; rd  kill	(71)
145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2475, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%] 
;; Pred edge  32 [100.0%] 
;; Pred edge  37 [100.0%] 
(code_label 337 336 338 39 115 ("put") [3 uses])

(note 338 337 339 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 339 338 340 39 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 152 [ reg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ reg ])
        (nil)))

(insn 340 339 341 39 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 341 340 342 39 arch/arm/kernel/ptrace.c:503 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592350))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 2 r2 [ __r2 ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (nil))))))

(insn 342 341 568 39 arch/arm/kernel/ptrace.c:503 discrim 6 (set (reg:SI 151 [ D.28058 ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 0 r0 [ __e ])
        (nil)))

(insn 568 342 569 39 arch/arm/kernel/ptrace.c:504 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.28058 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 569 568 352 39 arch/arm/kernel/ptrace.c:504 (set (reg/v:SI 181 [ ret ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 151 [ D.28058 ])
            (const_int -14 [0xfffffffffffffff2]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 151 [ D.28058 ])
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(65)
20, 80, 99, 143, 144, 169, 375, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2499, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 39 30) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u414(11){ }u415(13){ }u416(25){ }u417(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(70)
20, 27, 80, 99, 115, 143, 144, 168, 169, 375, 405, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2499, 2509, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596
;; rd  gen 	(0)

;; rd  kill	(25)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194

;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%] 
(code_label 352 569 353 40 119 ("out") [1 uses])

(note 353 352 354 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 354 353 355 40 arch/arm/kernel/ptrace.c:884 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(call_insn 355 354 605 40 arch/arm/kernel/ptrace.c:884 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 605 355 606 40 arch/arm/kernel/ptrace.c:885 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 40 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(70)
20, 27, 80, 99, 115, 143, 144, 168, 169, 375, 405, 432, 433, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2499, 2509, 2521, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596


;; Succ edge  65 [100.0%] 

(barrier 606 605 358)

;; Start of basic block ( 2) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u421(11){ }u422(13){ }u423(25){ }u424(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 24 [cc] 182
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
16, 398, 2520
;; rd  kill	(26)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2520

;; Pred edge  2 [7.7%] 
(code_label 358 606 359 41 107 "" [1 uses])

(note 359 358 360 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 360 359 361 41 arch/arm/kernel/ptrace.c:887 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(call_insn 361 360 362 41 arch/arm/kernel/ptrace.c:887 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 362 361 363 41 arch/arm/kernel/ptrace.c:887 (set (reg:SI 182 [ D.27299 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 363 362 364 41 arch/arm/kernel/ptrace.c:887 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182 [ D.27299 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182 [ D.27299 ])
        (nil)))

(jump_insn 364 363 365 41 arch/arm/kernel/ptrace.c:887 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1912 [0x778])
            (nil))))
;; End of basic block 41 -> ( 63 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
16, 80, 115, 143, 144, 168, 169, 398, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534


;; Succ edge  63 [19.1%] 
;; Succ edge  42 [80.9%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u431(11){ }u432(13){ }u433(25){ }u434(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 398, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
382
;; rd  kill	(0)


;; Pred edge  41 [80.9%]  (fallthru)
(note 365 364 367 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 367 365 368 42 arch/arm/kernel/ptrace.c:519 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 368 367 369 42 arch/arm/kernel/ptrace.c:519 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 373)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 42 -> ( 43 44)
;; lr  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534


;; Succ edge  43 [50.0%]  (fallthru)
;; Succ edge  44 [50.0%] 

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u437(11){ }u438(13){ }u439(25){ }u440(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190
;; live  gen 	 181
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2500
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  42 [50.0%]  (fallthru)
(note 369 368 370 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 370 369 607 43 arch/arm/kernel/ptrace.c:513 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 190 [ addr ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 607 370 608 43 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 43 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(17)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2500, 2520, 2530, 2531, 2532, 2533, 2534


;; Succ edge  61 [100.0%] 

(barrier 608 607 373)

;; Start of basic block ( 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u442(11){ }u443(13){ }u444(25){ }u445(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  42 [50.0%] 
(code_label 373 608 374 44 125 "" [1 uses])

(note 374 373 376 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(jump_insn 376 374 377 44 arch/arm/kernel/ptrace.c:521 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 382)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
            (nil))))
;; End of basic block 44 -> ( 46 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; rd  out 	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534


;; Succ edge  46 [27.0%] 
;; Succ edge  45 [73.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u447(11){ }u448(13){ }u449(25){ }u450(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 135 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 135 146
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2457, 2470
;; rd  kill	(4)
2456, 2457, 2469, 2470

;; Pred edge  44 [73.0%]  (fallthru)
(note 377 376 378 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 378 377 379 45 arch/arm/kernel/ptrace.c:521 (set (reg/v:SI 135 [ num.865 ])
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 379 378 609 45 arch/arm/kernel/ptrace.c:524 (set (reg/v:SI 146 [ implied_type ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(jump_insn 609 379 610 45 (set (pc)
        (label_ref 386)) -1 (nil))
;; End of basic block 45 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; rd  out 	(18)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2457, 2470, 2520, 2530, 2531, 2532, 2533, 2534


;; Succ edge  47 [100.0%] 

(barrier 610 609 382)

;; Start of basic block ( 44) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u452(11){ }u453(13){ }u454(25){ }u455(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 135 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 135 146
;; live  kill	
;; rd  in  	(16)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2456, 2469
;; rd  kill	(4)
2456, 2457, 2469, 2470

;; Pred edge  44 [27.0%] 
(code_label 382 610 383 46 127 "" [1 uses])

(note 383 382 384 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 384 383 385 46 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 135 [ num.865 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 190 [ addr ]))) 28 {*arm_subsi3_insn} (nil))

(insn 385 384 386 46 arch/arm/kernel/ptrace.c:522 (set (reg/v:SI 146 [ implied_type ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 46 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; rd  out 	(18)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2456, 2469, 2520, 2530, 2531, 2532, 2533, 2534


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 46 45) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u457(11){ }u458(13){ }u459(25){ }u460(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 145 282
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 188 190 191
;; live  gen 	 24 [cc] 145 282
;; live  kill	
;; rd  in  	(20)
16, 80, 115, 143, 144, 168, 169, 382, 432, 433, 2456, 2457, 2469, 2470, 2520, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(3)
397, 2468, 2597
;; rd  kill	(2)
2468, 2597

;; Pred edge  46 [100.0%]  (fallthru)
;; Pred edge  45 [100.0%] 
(code_label 386 385 387 47 128 "" [1 uses])

(note 387 386 388 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 388 387 389 47 arch/arm/kernel/ptrace.c:360 (set (reg:SI 282)
        (plus:SI (reg/v:SI 135 [ num.865 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ num.865 ])
        (nil)))

(insn 389 388 390 47 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 145 [ idx ])
        (ashiftrt:SI (reg:SI 282)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 282)
        (nil)))

(insn 390 389 391 47 arch/arm/kernel/ptrace.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ idx ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 391 390 392 47 arch/arm/kernel/ptrace.c:527 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 521)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 47 -> ( 60 48)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; rd  out 	(22)
16, 80, 115, 143, 144, 168, 169, 397, 432, 433, 2456, 2457, 2468, 2469, 2470, 2520, 2530, 2531, 2532, 2533, 2534, 2597


;; Succ edge  60 [50.0%] 
;; Succ edge  48 [50.0%]  (fallthru)

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u465(11){ }u466(13){ }u467(25){ }u468(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 191
;; lr  def 	 0 [r0] 2 [r2] 14 [lr] 24 [cc] 142 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 188 190 191
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 142 147
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(22)
16, 80, 115, 143, 144, 168, 169, 397, 432, 433, 2456, 2457, 2468, 2469, 2470, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;; rd  gen 	(5)
14, 96, 395, 2465, 2471
;; rd  kill	(27)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2465, 2471

;; Pred edge  47 [50.0%]  (fallthru)
(note 392 391 393 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 393 392 394 48 arch/arm/kernel/ptrace.c:532 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(insn 394 393 395 48 arch/arm/kernel/ptrace.c:532 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (expr_list:REG_UNUSED (reg:QI 14 lr)
            (nil))))

(insn 395 394 396 48 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg/v:SI 147 [ user_val ])
        (reg/v:SI 2 r2 [ __r2 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 2 r2 [ __r2 ])
        (nil)))

(insn 396 395 397 48 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:SI 142 [ D.28105 ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 0 r0 [ __e ])
        (nil)))

(insn 397 396 398 48 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.28105 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.28105 ])
        (nil)))

(jump_insn 398 397 399 48 arch/arm/kernel/ptrace.c:532 discrim 5 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 403)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 48 -> ( 49 50)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; rd  out 	(24)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2520, 2530, 2531, 2532, 2533, 2534, 2597


;; Succ edge  49 [50.0%]  (fallthru)
;; Succ edge  50 [50.0%] 

;; Start of basic block ( 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u475(11){ }u476(13){ }u477(25){ }u478(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(24)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;; rd  gen 	(1)
2508
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  48 [50.0%]  (fallthru)
(note 399 398 400 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 400 399 611 49 arch/arm/kernel/ptrace.c:533 (set (reg/v:SI 181 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 611 400 612 49 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 49 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(25)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2508, 2520, 2530, 2531, 2532, 2533, 2534, 2597


;; Succ edge  61 [100.0%] 

(barrier 612 611 403)

;; Start of basic block ( 48) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u479(11){ }u480(13){ }u481(25){ }u482(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 188
;; lr  def 	 24 [cc] 148 283 285 286
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 188 190
;; live  gen 	 24 [cc] 148 283 285 286
;; live  kill	
;; rd  in  	(24)
14, 80, 96, 143, 144, 168, 169, 395, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2520, 2530, 2531, 2532, 2533, 2534, 2597
;; rd  gen 	(5)
394, 2473, 2598, 2599, 2600
;; rd  kill	(5)
2472, 2473, 2598, 2599, 2600

;; Pred edge  48 [50.0%] 
(code_label 403 612 404 50 130 "" [1 uses])

(note 404 403 405 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 405 404 407 50 arch/arm/kernel/ptrace.c:537 (set (reg:SI 283)
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int 198 [0xc6]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 145 [ idx ])
        (nil)))

(insn 407 405 408 50 arch/arm/kernel/ptrace.c:537 (set (reg:SI 285)
        (ashift:SI (reg:SI 283)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 283)
        (nil)))

(insn 408 407 410 50 arch/arm/kernel/ptrace.c:537 (set (reg:SI 286)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 285))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 285)
        (nil)))

(insn 410 408 411 50 arch/arm/kernel/ptrace.c:537 (set (reg/v/f:SI 148 [ bp ])
        (mem/s/f/j:SI (plus:SI (reg:SI 286)
                (const_int 4 [0x4])) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 411 410 412 50 arch/arm/kernel/ptrace.c:538 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 412 411 413 50 arch/arm/kernel/ptrace.c:538 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 432)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 50 -> ( 51 54)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; rd  out 	(28)
14, 80, 96, 143, 144, 168, 169, 394, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600


;; Succ edge  51 [6.7%]  (fallthru)
;; Succ edge  54 [93.3%] 

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u490(11){ }u491(13){ }u492(25){ }u493(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 188 190 286
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 188 190 286
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 148
;; live  kill	 14 [lr]
;; rd  in  	(28)
14, 80, 96, 143, 144, 168, 169, 394, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(3)
12, 392, 2472
;; rd  kill	(27)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2472, 2473

;; Pred edge  50 [6.7%]  (fallthru)
(note 413 412 414 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 414 413 415 51 arch/arm/kernel/ptrace.c:539 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 415 414 416 51 arch/arm/kernel/ptrace.c:539 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ implied_type ])) 167 {*arm_movsi_insn} (nil))

(call_insn 416 415 417 51 arch/arm/kernel/ptrace.c:539 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_hbp_create") [flags 0x3] <function_decl 0x1155bb80 ptrace_hbp_create>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 417 416 418 51 arch/arm/kernel/ptrace.c:539 (set (reg/v/f:SI 148 [ bp ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 418 417 419 51 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 419 418 420 51 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 424)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 51 -> ( 52 53)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; rd  out 	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600


;; Succ edge  52 [0.0%]  (fallthru)
;; Succ edge  53 [100.0%] 

;; Start of basic block ( 51) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u502(11){ }u503(13){ }u504(25){ }u505(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(1)
2507
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  51 [0.0%]  (fallthru)
(note 420 419 421 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 421 420 613 52 include/linux/err.h:29 (set (reg/v:SI 181 [ ret ])
        (reg/v/f:SI 148 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ bp ])
        (nil)))

(jump_insn 613 421 614 52 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 52 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(29)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2507, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600


;; Succ edge  61 [100.0%] 

(barrier 614 613 424)

;; Start of basic block ( 51) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u507(11){ }u508(13){ }u509(25){ }u510(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 286
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190 286
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  51 [100.0%] 
(code_label 424 614 425 53 132 "" [1 uses])

(note 425 424 431 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 431 425 432 53 arch/arm/kernel/ptrace.c:544 (set (mem/s/f/j:SI (plus:SI (reg:SI 286)
                (const_int 4 [0x4])) [0 <variable>.thread.debug.hbp S4 A32])
        (reg/v/f:SI 148 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 286)
        (nil)))
;; End of basic block 53 -> ( 54)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; rd  out 	(28)
12, 80, 96, 143, 144, 168, 169, 392, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600


;; Succ edge  54 [100.0%]  (fallthru)

;; Start of basic block ( 50 53) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u513(11){ }u514(13){ }u515(25){ }u516(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 190
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 293 294 297
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188 190
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 293 294 297
;; live  kill	 14 [lr]
;; rd  in  	(31)
12, 14, 80, 96, 143, 144, 168, 169, 392, 394, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600
;; rd  gen 	(5)
10, 390, 2601, 2602, 2603
;; rd  kill	(28)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2601, 2602, 2603

;; Pred edge  50 [93.3%] 
;; Pred edge  53 [100.0%]  (fallthru)
(code_label 432 431 433 54 131 "" [1 uses])

(note 433 432 434 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 434 433 435 54 arch/arm/kernel/ptrace.c:547 (set (reg/f:SI 293)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))) 4 {*arm_addsi3} (nil))

(insn 435 434 437 54 arch/arm/kernel/ptrace.c:547 (set (reg/f:SI 294)
        (plus:SI (reg/v/f:SI 148 [ bp ])
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (nil))

(insn 437 435 438 54 arch/arm/kernel/ptrace.c:547 (set (reg:SI 0 r0)
        (reg/f:SI 293)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 293)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))

(insn 438 437 439 54 arch/arm/kernel/ptrace.c:547 (set (reg:SI 1 r1)
        (reg/f:SI 294)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 294)
        (nil)))

(insn 439 438 440 54 arch/arm/kernel/ptrace.c:547 (set (reg:SI 2 r2)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(call_insn 440 439 442 54 arch/arm/kernel/ptrace.c:547 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 442 440 443 54 arch/arm/kernel/ptrace.c:549 (set (reg:SI 297)
        (and:SI (reg/v:SI 190 [ addr ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 190 [ addr ])
        (nil)))

(insn 443 442 444 54 arch/arm/kernel/ptrace.c:549 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 297)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 297)
        (nil)))

(jump_insn 444 443 445 54 arch/arm/kernel/ptrace.c:549 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 450)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 54 -> ( 55 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; rd  out 	(32)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603


;; Succ edge  55 [71.0%]  (fallthru)
;; Succ edge  56 [29.0%] 

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u529(11){ }u530(13){ }u531(25){ }u532(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 188
;; live  gen 	 338
;; live  kill	
;; rd  in  	(32)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603
;; rd  gen 	(1)
2621
;; rd  kill	(1)
2621

;; Pred edge  54 [71.0%]  (fallthru)
(note 445 444 565 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 565 445 566 55 arch/arm/kernel/ptrace.c:551 (set (reg:SI 338 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 566 565 567 55 arch/arm/kernel/ptrace.c:551 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 attr.D.23452.bp_addr+0 S4 A64])
        (reg/v:SI 147 [ user_val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ user_val ])
        (nil)))

(insn 567 566 615 55 arch/arm/kernel/ptrace.c:551 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 attr.D.23452.bp_addr+4 S4 A32])
        (reg:SI 338 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 338 [+4 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 615 567 616 55 (set (pc)
        (label_ref 512)) -1 (nil))
;; End of basic block 55 -> ( 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; rd  out 	(33)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2621


;; Succ edge  59 [100.0%] 

(barrier 616 615 450)

;; Start of basic block ( 54) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u537(11){ }u538(13){ }u539(25){ }u540(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 149 181 184 300 306 312 317 319 324 325
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 149 181 184 300 306 312 317 319 324 325
;; live  kill	 14 [lr]
;; rd  in  	(32)
10, 80, 96, 143, 144, 168, 169, 390, 432, 433, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2520, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603
;; rd  gen 	(14)
8, 388, 2454, 2455, 2474, 2506, 2523, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  kill	(56)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2454, 2455, 2474, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2604, 2605, 2606, 2607, 2608, 2609, 2610

;; Pred edge  54 [29.0%] 
(code_label 450 616 451 56 133 "" [1 uses])

(note 451 450 453 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 453 451 570 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 300)
        (and:SI (reg/v:SI 147 [ user_val ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 570 453 458 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg/v:SI 184 [ ctrl ])
        (const_int 0 [0x0])) -1 (nil))

(insn 458 570 459 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))
        (reg:SI 300)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 300)
        (nil)))

(insn 459 458 461 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:37 (set (reg/v:SI 149 [ reg ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 461 459 466 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 306)
        (and:SI (reg/v:SI 149 [ reg ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ reg ])
        (nil)))

(insn 466 461 467 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))
        (reg:SI 306)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 306)
        (nil)))

(insn 467 466 469 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:39 (set (reg/v:SI 134 [ reg.867 ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 469 467 474 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 312)
        (and:SI (reg/v:SI 134 [ reg.867 ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ reg.867 ])
        (nil)))

(insn 474 469 475 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))
        (reg:SI 312)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 312)
        (nil)))

(insn 475 474 476 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg/v:SI 133 [ reg.871 ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 476 475 477 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:42 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg/v:SI 133 [ reg.871 ])) 77 {insv_t2} (expr_list:REG_DEAD (reg/v:SI 133 [ reg.871 ])
        (nil)))

(insn 477 476 479 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 317)
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 147 [ user_val ])
        (nil)))

(insn 479 477 484 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 319)
        (and:SI (reg:SI 317)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 317)
        (nil)))

(insn 484 479 485 56 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))
        (reg:SI 319)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 319)
        (nil)))

(insn 485 484 486 56 arch/arm/kernel/ptrace.c:555 (set (reg/f:SI 324)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 486 485 487 56 arch/arm/kernel/ptrace.c:555 (set (reg/f:SI 325)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 487 486 488 56 arch/arm/kernel/ptrace.c:555 (set (reg:SI 0 r0)
        (reg/v:SI 184 [ ctrl ])) 167 {*arm_movsi_insn} (nil))

(insn 488 487 489 56 arch/arm/kernel/ptrace.c:555 (set (reg:SI 1 r1)
        (reg/f:SI 324)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 324)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn 489 488 490 56 arch/arm/kernel/ptrace.c:555 (set (reg:SI 2 r2)
        (reg/f:SI 325)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 325)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(call_insn 490 489 491 56 arch/arm/kernel/ptrace.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_bp_generic_fields") [flags 0x41] <function_decl 0x10ad9200 arch_bp_generic_fields>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 491 490 492 56 arch/arm/kernel/ptrace.c:555 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 492 491 493 56 arch/arm/kernel/ptrace.c:556 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 181 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 493 492 494 56 arch/arm/kernel/ptrace.c:556 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 524)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 56 -> ( 61 57)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 181 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 181 184 188
;; rd  out 	(44)
8, 80, 96, 143, 144, 168, 169, 388, 432, 433, 2454, 2455, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610


;; Succ edge  61 [50.0%] 
;; Succ edge  57 [50.0%]  (fallthru)

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u573(11){ }u574(13){ }u575(25){ }u576(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 184 188
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(44)
8, 80, 96, 143, 144, 168, 169, 388, 432, 433, 2454, 2455, 2456, 2457, 2465, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  gen 	(3)
387, 2466, 2467
;; rd  kill	(2)
2466, 2467

;; Pred edge  56 [50.0%]  (fallthru)
(note 494 493 495 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 495 494 496 57 arch/arm/kernel/ptrace.c:559 (set (reg:SI 143 [ gen_type.377 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 gen_type+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 496 495 497 57 arch/arm/kernel/ptrace.c:559 (set (reg:SI 144 [ D.28101 ])
        (and:SI (reg/v:SI 146 [ implied_type ])
            (reg:SI 143 [ gen_type.377 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ implied_type ])
        (nil)))

(insn 497 496 498 57 arch/arm/kernel/ptrace.c:559 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ D.28101 ])
            (reg:SI 143 [ gen_type.377 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143 [ gen_type.377 ])
        (nil)))

(jump_insn 498 497 499 57 arch/arm/kernel/ptrace.c:559 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 521)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 57 -> ( 60 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; rd  out 	(46)
8, 80, 96, 143, 144, 168, 169, 387, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610


;; Succ edge  60 [72.0%] 
;; Succ edge  58 [28.0%]  (fallthru)

;; Start of basic block ( 57) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u583(11){ }u584(13){ }u585(25){ }u586(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 184
;; lr  def 	 326 327 328 330 331 332 333 334
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; live  gen 	 326 327 328 330 331 332 333 334
;; live  kill	
;; rd  in  	(46)
8, 80, 96, 143, 144, 168, 169, 387, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  gen 	(8)
2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619
;; rd  kill	(7)
2611, 2612, 2613, 2614, 2615, 2616, 2619

;; Pred edge  57 [28.0%]  (fallthru)
(note 499 498 500 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 500 499 501 58 arch/arm/kernel/ptrace.c:564 (set (reg:SI 326 [ gen_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 gen_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 501 500 502 58 arch/arm/kernel/ptrace.c:564 (set (reg:DI 327 [ gen_len ])
        (sign_extend:DI (reg:SI 326 [ gen_len ]))) 140 {*arm_extendsidi2} (expr_list:REG_DEAD (reg:SI 326 [ gen_len ])
        (nil)))

(insn 502 501 503 58 arch/arm/kernel/ptrace.c:564 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 327 [ gen_len ])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg:DI 327 [ gen_len ])
        (nil)))

(insn 503 502 504 58 arch/arm/kernel/ptrace.c:565 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 attr.bp_type+0 S4 A32])
        (reg:SI 144 [ D.28101 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144 [ D.28101 ])
        (nil)))

(insn 504 503 505 58 arch/arm/kernel/ptrace.c:566 (set (subreg:SI (reg:QI 328) 0)
        (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 24 [0x18]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 184 [ ctrl ])
        (nil)))

(insn 505 504 506 58 arch/arm/kernel/ptrace.c:566 (set (reg:SI 330)
        (not:SI (subreg:SI (reg:QI 328) 0))) 134 {*arm_one_cmplsi2} (expr_list:REG_DEAD (reg:QI 328)
        (nil)))

(insn 506 505 507 58 arch/arm/kernel/ptrace.c:566 (set (reg:SI 331)
        (zero_extend:SI (subreg:QI (reg:SI 330) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 330)
        (nil)))

(insn 507 506 508 58 arch/arm/kernel/ptrace.c:566 (set (reg:SI 332)
        (lshiftrt:SI (reg:SI 331)
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 331)
        (nil)))

(insn 508 507 509 58 arch/arm/kernel/ptrace.c:566 (set (reg:SI 334 [+40 ])
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 509 508 510 58 arch/arm/kernel/ptrace.c:566 (set (reg:QI 333 [+40 ])
        (subreg:QI (reg:SI 334 [+40 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 334 [+40 ])
        (nil)))

(insn 510 509 511 58 arch/arm/kernel/ptrace.c:566 (set (zero_extract:SI (subreg:SI (reg:QI 333 [+40 ]) 0)
            (const_int 1 [0x1])
            (const_int 0 [0x0]))
        (reg:SI 332)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 332)
        (nil)))

(insn 511 510 512 58 arch/arm/kernel/ptrace.c:566 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64])
        (reg:QI 333 [+40 ])) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 333 [+40 ])
        (nil)))
;; End of basic block 58 -> ( 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; rd  out 	(54)
8, 80, 96, 143, 144, 168, 169, 387, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619


;; Succ edge  59 [100.0%]  (fallthru)

;; Start of basic block ( 58 55) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u603(11){ }u604(13){ }u605(25){ }u606(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 335
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  gen 	 0 [r0] 1 [r1] 181 335
;; live  kill	 14 [lr]
;; rd  in  	(57)
8, 10, 80, 96, 143, 144, 168, 169, 387, 390, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2621
;; rd  gen 	(3)
6, 2505, 2620
;; rd  kill	(47)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2620

;; Pred edge  58 [100.0%]  (fallthru)
;; Pred edge  55 [100.0%] 
(code_label 512 511 513 59 134 "" [1 uses])

(note 513 512 514 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 514 513 515 59 arch/arm/kernel/ptrace.c:569 (set (reg/f:SI 335)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))) 4 {*arm_addsi3} (nil))

(insn 515 514 516 59 arch/arm/kernel/ptrace.c:569 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ bp ])
        (nil)))

(insn 516 515 517 59 arch/arm/kernel/ptrace.c:569 (set (reg:SI 1 r1)
        (reg/f:SI 335)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 335)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -80 [0xffffffffffffffb0]))
            (nil))))

(call_insn 517 516 518 59 arch/arm/kernel/ptrace.c:569 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("modify_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524780 modify_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 518 517 617 59 arch/arm/kernel/ptrace.c:569 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 617 518 618 59 (set (pc)
        (label_ref 524)) -1 (nil))
;; End of basic block 59 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(57)
6, 80, 96, 143, 144, 168, 169, 387, 390, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2505, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621


;; Succ edge  61 [100.0%] 

(barrier 618 617 521)

;; Start of basic block ( 57 47) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u615(11){ }u616(13){ }u617(25){ }u618(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	
;; rd  in  	(49)
8, 16, 80, 96, 115, 143, 144, 168, 169, 387, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2506, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610
;; rd  gen 	(1)
2504
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  57 [72.0%] 
;; Pred edge  47 [50.0%] 
(code_label 521 618 522 60 129 ("out") [2 uses])

(note 522 521 523 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 523 522 524 60 arch/arm/kernel/ptrace.c:528 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 60 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; rd  out 	(49)
8, 16, 80, 96, 115, 143, 144, 168, 169, 387, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2504, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610


;; Succ edge  61 [100.0%]  (fallthru)

;; Start of basic block ( 60 49 52 43 56 59) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u619(11){ }u620(13){ }u621(25){ }u622(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(72)
6, 8, 12, 14, 16, 80, 96, 115, 143, 144, 168, 169, 382, 387, 388, 390, 392, 395, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2500, 2504, 2505, 2506, 2507, 2508, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;; rd  gen 	(0)

;; rd  kill	(25)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194

;; Pred edge  60 [100.0%]  (fallthru)
;; Pred edge  49 [100.0%] 
;; Pred edge  52 [100.0%] 
;; Pred edge  43 [100.0%] 
;; Pred edge  56 [50.0%] 
;; Pred edge  59 [100.0%] 
(code_label 524 523 525 61 126 "" [5 uses])

(note 525 524 526 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 526 525 527 61 arch/arm/kernel/ptrace.c:892 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(call_insn 527 526 619 61 arch/arm/kernel/ptrace.c:892 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 619 527 620 61 arch/arm/kernel/ptrace.c:893 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 61 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(72)
6, 8, 12, 14, 16, 80, 96, 115, 143, 144, 168, 169, 382, 387, 388, 390, 392, 395, 397, 432, 433, 2454, 2455, 2456, 2457, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2500, 2504, 2505, 2506, 2507, 2508, 2520, 2523, 2530, 2531, 2532, 2533, 2534, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621


;; Succ edge  65 [100.0%] 

(barrier 620 619 530)

;; Start of basic block ( 2) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u626(11){ }u627(13){ }u628(25){ }u629(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]
;; rd  in  	(15)
47, 80, 115, 143, 144, 168, 169, 194, 432, 433, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(2)
2, 2503
;; rd  kill	(46)
170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  2 [7.7%] 
(code_label 530 620 531 62 95 "" [17 uses])

(note 531 530 532 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 532 531 533 62 arch/arm/kernel/ptrace.c:897 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 188 [ child ])
        (nil)))

(insn 533 532 534 62 arch/arm/kernel/ptrace.c:897 (set (reg:SI 1 r1)
        (reg/v:SI 189 [ request ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 189 [ request ])
        (nil)))

(insn 534 533 535 62 arch/arm/kernel/ptrace.c:897 (set (reg:SI 2 r2)
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 190 [ addr ])
        (nil)))

(insn 535 534 536 62 arch/arm/kernel/ptrace.c:897 (set (reg:SI 3 r3)
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 191 [ data ])
        (nil)))

(call_insn 536 535 537 62 arch/arm/kernel/ptrace.c:897 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_request") [flags 0x41] <function_decl 0x1109c680 ptrace_request>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 537 536 621 62 arch/arm/kernel/ptrace.c:897 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 621 537 622 62 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 62 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(15)
2, 80, 115, 143, 144, 168, 169, 432, 433, 2503, 2530, 2531, 2532, 2533, 2534


;; Succ edge  65 [100.0%] 

(barrier 622 621 540)

;; Start of basic block ( 23 41) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u640(11){ }u641(13){ }u642(25){ }u643(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 181
;; live  kill	
;; rd  in  	(19)
16, 27, 80, 115, 143, 144, 168, 169, 398, 410, 432, 433, 2520, 2521, 2530, 2531, 2532, 2533, 2534
;; rd  gen 	(1)
2502
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  23 [19.1%] 
;; Pred edge  41 [19.1%] 
(code_label 540 622 541 63 113 "" [2 uses])

(note 541 540 542 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 542 541 623 63 arch/arm/kernel/ptrace.c:880 (set (reg/v:SI 181 [ ret ])
        (const_int -3 [0xfffffffffffffffd])) 167 {*arm_movsi_insn} (nil))

(jump_insn 623 542 624 63 (set (pc)
        (label_ref 548)) -1 (nil))
;; End of basic block 63 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; rd  out 	(20)
16, 27, 80, 115, 143, 144, 168, 169, 398, 410, 432, 433, 2502, 2520, 2521, 2530, 2531, 2532, 2533, 2534


;; Succ edge  65 [100.0%] 

(barrier 624 623 545)

;; Start of basic block ( 21 19 3 9 11 13 15) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u644(11){ }u645(13){ }u646(25){ }u647(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 181
;; live  kill	
;; rd  in  	(59)
47, 80, 115, 143, 144, 168, 169, 194, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2561, 2562, 2563, 2564, 2565, 2566
;; rd  gen 	(1)
2501
;; rd  kill	(21)
2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519

;; Pred edge  21 [71.0%] 
;; Pred edge  19 [71.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  9 [71.0%] 
;; Pred edge  11 [71.0%] 
;; Pred edge  13 [71.0%] 
;; Pred edge  15 [71.0%] 
(code_label 545 624 546 64 109 "" [7 uses])

(note 546 545 547 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 547 546 548 64 include/linux/regset.h:362 (set (reg/v:SI 181 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 64 -> ( 65)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; rd  out 	(60)
47, 80, 115, 143, 144, 168, 169, 194, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2501, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2561, 2562, 2563, 2564, 2565, 2566


;; Succ edge  65 [100.0%]  (fallthru)

;; Start of basic block ( 64 62 7 61 40 22 20 18 17 16 14 12 10 8 63) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u648(11){ }u649(13){ }u650(25){ }u651(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(211)
2, 6, 8, 12, 14, 16, 20, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 80, 96, 99, 107, 114, 115, 143, 144, 168, 169, 194, 375, 382, 387, 388, 390, 392, 395, 397, 398, 405, 410, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2523, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621
;; rd  gen 	(1)
0
;; rd  kill	(0)


;; Pred edge  64 [100.0%]  (fallthru)
;; Pred edge  62 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  61 [100.0%] 
;; Pred edge  40 [100.0%] 
;; Pred edge  22 [100.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  16 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  63 [100.0%] 
(code_label 548 547 549 65 112 "" [14 uses])

(note 549 548 554 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 554 549 560 65 arch/arm/kernel/ptrace.c:902 (set (reg/i:SI 0 r0)
        (reg/v:SI 181 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 181 [ ret ])
        (nil)))

(insn 560 554 0 65 arch/arm/kernel/ptrace.c:902 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 65 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(194)
0, 80, 96, 99, 107, 114, 115, 143, 144, 168, 169, 194, 375, 382, 387, 388, 390, 392, 395, 397, 398, 405, 410, 413, 415, 418, 420, 422, 424, 428, 432, 433, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2523, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2619, 2620, 2621


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ptrace_hbptriggered (ptrace_hbptriggered)[0:1550]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 14 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 20 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 21 (  2.1)


ptrace_hbptriggered

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,9u} r12={2d} r13={1d,12u,2d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,14u,1d} r26={1d,8u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={2d,2u} r140={2d,3u} r141={3d,3u} r142={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 226{151d,72u,3e} in 34{33 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,4] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 137[133,2] 140[135,2] 141[137,3] 142[140,1] 145[141,1] 146[142,1] 147[143,1] 148[144,1] 149[145,1] 150[146,1] 151[147,1] 152[148,1] 153[149,1] 154[150,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 30, 31
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d30(bb 0 insn -1) }u3(26){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 140 142 145 146
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 140 142 145 146
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31
;; rd  gen 	(5)
134, 136, 140, 141, 142
;; rd  kill	(7)
133, 134, 135, 136, 140, 141, 142
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; rd  out 	(15)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 134, 136, 140, 141, 142
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 6
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 13 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 14
;;      reg 146 { d142(bb 2 insn 13) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 15
;;      reg 145 { d141(bb 2 insn 14) }

( 6 2 )->[3]->( 4 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d11(bb 0 insn -1) }u10(13){ d14(bb 0 insn -1) }u11(25){ d30(bb 0 insn -1) }u12(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  gen 	 24 [cc] 147
;; live  kill	
;; rd  in  	(19)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143
;; rd  gen 	(2)
29, 143
;; rd  kill	(5)
26, 27, 28, 29, 143
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; rd  out 	(19)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 18
;;      reg 137 { d134(bb 2 insn 15) d133(bb 6 insn 32) }
;;   UD chains for insn luid 1 uid 19
;;      reg 142 { d140(bb 2 insn 6) }
;;      reg 147 { d143(bb 3 insn 18) }
;;   UD chains for insn luid 2 uid 20
;;      reg 24 { d29(bb 3 insn 19) }

( 3 )->[4]->( 8 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d11(bb 0 insn -1) }u18(13){ d14(bb 0 insn -1) }u19(25){ d30(bb 0 insn -1) }u20(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 141 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  gen 	 24 [cc] 141 148
;; live  kill	
;; rd  in  	(19)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143
;; rd  gen 	(3)
28, 139, 144
;; rd  kill	(8)
26, 27, 28, 29, 137, 138, 139, 144
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 140 { d136(bb 2 insn 16) d135(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 23
;;      reg 148 { d144(bb 4 insn 22) }
;;   UD chains for insn luid 2 uid 24
;;      reg 141 { d139(bb 4 insn 23) }
;;   UD chains for insn luid 3 uid 25
;;      reg 24 { d28(bb 4 insn 24) }

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ d11(bb 0 insn -1) }u-1(13){ d14(bb 0 insn -1) }u-1(25){ d30(bb 0 insn -1) }u-1(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 3 )->[6]->( 3 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ d11(bb 0 insn -1) }u26(13){ d14(bb 0 insn -1) }u27(25){ d30(bb 0 insn -1) }u28(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 24 [cc] 137 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  gen 	 24 [cc] 137 140
;; live  kill	
;; rd  in  	(19)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143
;; rd  gen 	(3)
27, 133, 135
;; rd  kill	(8)
26, 27, 28, 29, 133, 134, 135, 136
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; rd  out 	(17)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 135, 140, 141, 142, 143
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 31
;;      reg 140 { d136(bb 2 insn 16) d135(bb 6 insn 31) }
;;   UD chains for insn luid 1 uid 32
;;      reg 137 { d134(bb 2 insn 15) d133(bb 6 insn 32) }
;;   UD chains for insn luid 2 uid 34
;;      reg 140 { d135(bb 6 insn 31) }
;;   UD chains for insn luid 3 uid 35
;;      reg 24 { d27(bb 6 insn 34) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u33(11){ d11(bb 0 insn -1) }u34(13){ d14(bb 0 insn -1) }u35(25){ d30(bb 0 insn -1) }u36(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 141
;; live  kill	
;; rd  in  	(17)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 135, 140, 141, 142, 143
;; rd  gen 	(1)
138
;; rd  kill	(3)
137, 138, 139
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(18)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 135, 138, 140, 141, 142, 143
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }

( 4 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u37(11){ d11(bb 0 insn -1) }u38(13){ d14(bb 0 insn -1) }u39(25){ d30(bb 0 insn -1) }u40(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 141
;; live  kill	
;; rd  in  	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144
;; rd  gen 	(1)
137
;; rd  kill	(3)
137, 138, 139
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 42
;;      reg 141 { d139(bb 4 insn 23) }

( 8 5 7 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u42(11){ d11(bb 0 insn -1) }u43(13){ d14(bb 0 insn -1) }u44(25){ d30(bb 0 insn -1) }u45(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150 151 152 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 149 150 151 152 153 154
;; live  kill	 14 [lr]
;; rd  in  	(24)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144
;; rd  gen 	(7)
1, 145, 146, 147, 148, 149, 150
;; rd  kill	(11)
0, 1, 2, 15, 16, 145, 146, 147, 148, 149, 150
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
1, 5, 8, 10, 11, 13, 14, 27, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 46
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 149 { d145(bb 9 insn 45) }
;;   UD chains for insn luid 2 uid 47
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 141 { d139(bb 4 insn 23) d138(bb 7 insn 37) d137(bb 8 insn 42) }
;;   UD chains for insn luid 4 uid 49
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 150 { d146(bb 9 insn 48) }
;;   UD chains for insn luid 5 uid 50
;;      reg 142 { d140(bb 2 insn 6) }
;;   UD chains for insn luid 6 uid 51
;;      reg 25 { d30(bb 0 insn -1) }
;;      reg 151 { d147(bb 9 insn 50) }
;;   UD chains for insn luid 7 uid 53
;;      reg 25 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 8 uid 54
;;      reg 13 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 9 uid 55
;;      reg 154 { d150(bb 9 insn 54) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 10 uid 56
;;      reg 149 { d145(bb 9 insn 45) }
;;   UD chains for insn luid 11 uid 57
;;      reg 152 { d148(bb 9 insn 53) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 12 uid 58
;;      reg 153 { d149(bb 9 insn 55) }
;;   UD chains for insn luid 13 uid 59
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d0(bb 9 insn 56) }
;;      reg 1 { d4(bb 9 insn 57) }
;;      reg 2 { d7(bb 9 insn 58) }

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u67(11){ d11(bb 0 insn -1) }u68(13){ d14(bb 0 insn -1) }u69(14){ }u70(25){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(29)
1, 5, 8, 10, 11, 13, 14, 27, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(29)
1, 5, 8, 10, 11, 13, 14, 27, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d30(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 25 to worklist
  Adding insn 70 to worklist
  Adding insn 35 to worklist
  Adding insn 72 to worklist
  Adding insn 59 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 46:
Processing use of (reg 149) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 25 sfp) in insn 47:
Processing use of (reg 141 [ num ]) in insn 47:
  Adding insn 23 to worklist
  Adding insn 37 to worklist
  Adding insn 42 to worklist
Processing use of (reg 141 [ num ]) in insn 42:
Processing use of (reg 148) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 140 [ i ]) in insn 22:
  Adding insn 16 to worklist
  Adding insn 31 to worklist
Processing use of (reg 140 [ i ]) in insn 31:
Processing use of (reg 25 sfp) in insn 49:
Processing use of (reg 150) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 25 sfp) in insn 51:
Processing use of (reg 151 [ <variable>.hw.D.25978.D.25977.info.trigger ]) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 142 [ bp ]) in insn 50:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 6:
Processing use of (reg 13 sp) in insn 59:
Processing use of (reg 0 r0) in insn 59:
  Adding insn 56 to worklist
Processing use of (reg 1 r1) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 2 r2) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 153) in insn 58:
  Adding insn 55 to worklist
Processing use of (reg 154) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 13 sp) in insn 54:
Processing use of (reg 152) in insn 57:
  Adding insn 53 to worklist
Processing use of (reg 25 sfp) in insn 53:
Processing use of (reg 149) in insn 56:
Processing use of (reg 24 cc) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 140 [ i ]) in insn 34:
Processing use of (reg 24 cc) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 141 [ num ]) in insn 24:
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 142 [ bp ]) in insn 19:
Processing use of (reg 147) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 137 [ ivtmp.909 ]) in insn 18:
  Adding insn 15 to worklist
  Adding insn 32 to worklist
Processing use of (reg 137 [ ivtmp.909 ]) in insn 32:
Processing use of (reg 145) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 146) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 13:


ptrace_hbptriggered

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,9u} r12={2d} r13={1d,12u,2d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,14u,1d} r26={1d,8u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={2d,2u} r140={2d,3u} r141={3d,3u} r142={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 226{151d,72u,3e} in 34{33 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,4] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 137[133,2] 140[135,2] 141[137,3] 142[140,1] 145[141,1] 146[142,1] 147[143,1] 148[144,1] 149[145,1] 150[146,1] 151[147,1] 152[148,1] 153[149,1] 154[150,1] 
(note 5 0 10 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 140 142 145 146
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 140 142 145 146
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31
;; rd  gen 	(5)
134, 136, 140, 141, 142
;; rd  kill	(7)
133, 134, 135, 136, 140, 141, 142

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 10 5 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 6 10 9 2 arch/arm/kernel/ptrace.c:380 (set (reg/v/f:SI 142 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))

(note 9 6 13 2 NOTE_INSN_FUNCTION_BEG)

(insn 13 9 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 146)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 145)
        (and:SI (reg:SI 146)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137 [ ivtmp.909 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 145)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 16 15 33 2 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; rd  out 	(15)
2, 5, 8, 10, 11, 13, 14, 16, 30, 31, 134, 136, 140, 141, 142


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  gen 	 24 [cc] 147
;; live  kill	
;; rd  in  	(19)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143
;; rd  gen 	(2)
29, 143
;; rd  kill	(5)
26, 27, 28, 29, 143

;; Pred edge  6 [96.7%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 33 16 17 3 143 "" [1 uses])

(note 17 33 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/kernel/ptrace.c:387 (set (reg/f:SI 147)
        (mem/s/f/j:SI (plus:SI (reg:SI 137 [ ivtmp.909 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/kernel/ptrace.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 147)
            (reg/v/f:SI 142 [ bp ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (nil)))

(jump_insn 20 19 21 3 arch/arm/kernel/ptrace.c:387 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; rd  out 	(19)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143


;; Succ edge  4 [4.5%]  (fallthru,loop_exit)
;; Succ edge  6 [95.5%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 141 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  gen 	 24 [cc] 141 148
;; live  kill	
;; rd  in  	(19)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143
;; rd  gen 	(3)
28, 139, 144
;; rd  kill	(8)
26, 27, 28, 29, 137, 138, 139, 144

;; Pred edge  3 [4.5%]  (fallthru,loop_exit)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/ptrace.c:370 (set (reg:SI 148)
        (ashift:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ i ])
        (nil)))

(insn 23 22 24 4 arch/arm/kernel/ptrace.c:370 (set (reg/v:SI 141 [ num ])
        (plus:SI (reg:SI 148)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/ptrace.c:371 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ num ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 69 4 arch/arm/kernel/ptrace.c:371 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 8 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144


;; Succ edge  8 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [50.0%]  (fallthru)
(note 69 25 70 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 70 69 71 5 (set (pc)
        (label_ref 43)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144


;; Succ edge  9 [100.0%] 

(barrier 71 70 29)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 24 [cc] 137 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  gen 	 24 [cc] 137 140
;; live  kill	
;; rd  in  	(19)
2, 5, 8, 10, 11, 13, 14, 16, 29, 30, 31, 133, 134, 135, 136, 140, 141, 142, 143
;; rd  gen 	(3)
27, 133, 135
;; rd  kill	(8)
26, 27, 28, 29, 133, 134, 135, 136

;; Pred edge  3 [95.5%] 
(code_label 29 71 30 6 140 "" [1 uses])

(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (plus:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 32 31 34 6 arch/arm/kernel/ptrace.c:386 (set (reg:SI 137 [ ivtmp.909 ])
        (plus:SI (reg:SI 137 [ ivtmp.909 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 34 32 35 6 arch/arm/kernel/ptrace.c:386 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ i ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 6 arch/arm/kernel/ptrace.c:386 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9673 [0x25c9])
            (nil))))
;; End of basic block 6 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; rd  out 	(17)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 135, 140, 141, 142, 143


;; Succ edge  3 [96.7%]  (dfs_back)
;; Succ edge  7 [3.3%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 141
;; live  kill	
;; rd  in  	(17)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 135, 140, 141, 142, 143
;; rd  gen 	(1)
138
;; rd  kill	(3)
137, 138, 139

;; Pred edge  6 [3.3%]  (fallthru,loop_exit)
(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 72 7 arch/arm/kernel/ptrace.c:390 discrim 2 (set (reg/v:SI 141 [ num ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 72 37 73 7 (set (pc)
        (label_ref 43)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(18)
2, 5, 8, 10, 11, 13, 14, 16, 27, 30, 31, 133, 135, 138, 140, 141, 142, 143


;; Succ edge  9 [100.0%] 

(barrier 73 72 40)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 141
;; live  kill	
;; rd  in  	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144
;; rd  gen 	(1)
137
;; rd  kill	(3)
137, 138, 139

;; Pred edge  4 [50.0%] 
(code_label 40 73 41 8 141 "" [1 uses])

(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 8 arch/arm/kernel/ptrace.c:371 discrim 1 (set (reg/v:SI 141 [ num ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 141 [ num ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; rd  out 	(21)
2, 5, 8, 10, 11, 13, 14, 16, 28, 30, 31, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 150 151 152 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 149 150 151 152 153 154
;; live  kill	 14 [lr]
;; rd  in  	(24)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144
;; rd  gen 	(7)
1, 145, 146, 147, 148, 149, 150
;; rd  kill	(11)
0, 1, 2, 15, 16, 145, 146, 147, 148, 149, 150

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 43 42 44 9 142 "" [2 uses])

(note 44 43 45 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 9 arch/arm/kernel/ptrace.c:392 (set (reg:SI 149)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 9 arch/arm/kernel/ptrace.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))

(insn 47 46 48 9 arch/arm/kernel/ptrace.c:393 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg/v:SI 141 [ num ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 141 [ num ])
        (nil)))

(insn 48 47 49 9 arch/arm/kernel/ptrace.c:394 (set (reg:SI 150)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 9 arch/arm/kernel/ptrace.c:394 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const_int 196612 [0x30004])
            (nil))))

(insn 50 49 51 9 arch/arm/kernel/ptrace.c:395 (set (reg:SI 151 [ <variable>.hw.D.25978.D.25977.info.trigger ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.25978.D.25977.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 142 [ bp ])
        (nil)))

(insn 51 50 53 9 arch/arm/kernel/ptrace.c:395 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 151 [ <variable>.hw.D.25978.D.25977.info.trigger ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.hw.D.25978.D.25977.info.trigger ])
        (nil)))

(insn 53 51 54 9 arch/arm/kernel/ptrace.c:397 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 54 53 55 9 arch/arm/kernel/ptrace.c:397 (set (reg:SI 154)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 56 9 arch/arm/kernel/ptrace.c:397 (set (reg:SI 153)
        (and:SI (reg:SI 154)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 56 55 57 9 arch/arm/kernel/ptrace.c:397 (set (reg:SI 0 r0)
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (const_int 5 [0x5])
            (nil))))

(insn 57 56 58 9 arch/arm/kernel/ptrace.c:397 (set (reg:SI 1 r1)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 58 57 59 9 arch/arm/kernel/ptrace.c:397 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 153)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(call_insn 59 58 0 9 arch/arm/kernel/ptrace.c:397 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 9 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
1, 5, 8, 10, 11, 13, 14, 27, 28, 30, 31, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ptrace_break (ptrace_break)[0:1543]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ptrace_break

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 165{137d,27u,1e} in 15{14 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(8)
1, 130, 131, 132, 133, 134, 135, 136
;; rd  kill	(12)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134, 135, 136
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 135 { d132(bb 2 insn 7) }
;;   UD chains for insn luid 5 uid 10
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 136 { d133(bb 2 insn 9) }
;;   UD chains for insn luid 7 uid 12
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 137 { d134(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 134 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 9 uid 14
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 138 { d135(bb 2 insn 13) }
;;   UD chains for insn luid 10 uid 15
;;      reg 25 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 11 uid 16
;;      reg 135 { d132(bb 2 insn 7) }
;;   UD chains for insn luid 12 uid 17
;;      reg 139 { d136(bb 2 insn 15) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 13 uid 18
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 14 uid 19
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 16) }
;;      reg 1 { d4(bb 2 insn 17) }
;;      reg 2 { d7(bb 2 insn 18) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u24(11){ d11(bb 0 insn -1) }u25(13){ d14(bb 0 insn -1) }u26(14){ }u27(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(16)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 25 sfp) in insn 8:
Processing use of (reg 135) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 25 sfp) in insn 10:
Processing use of (reg 136) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 25 sfp) in insn 12:
Processing use of (reg 137) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 25 sfp) in insn 14:
Processing use of (reg 138 [ <variable>.uregs+60 ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 134 [ regs ]) in insn 13:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 19:
Processing use of (reg 0 r0) in insn 19:
  Adding insn 16 to worklist
Processing use of (reg 1 r1) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 2 r2) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 133 [ tsk ]) in insn 18:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 139) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 25 sfp) in insn 15:
Processing use of (reg 135) in insn 16:


ptrace_break

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 165{137d,27u,1e} in 15{14 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(8)
1, 130, 131, 132, 133, 134, 135, 136
;; rd  kill	(12)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134, 135, 136

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:198 (set (reg/v/f:SI 133 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:198 (set (reg/v/f:SI 134 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/ptrace.c:201 (set (reg:SI 135)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:201 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:202 (set (reg:SI 136)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:203 (set (reg:SI 137)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:203 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (const_int 196609 [0x30001])
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:204 (set (reg:SI 138 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ regs ])
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:204 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 138 [ <variable>.uregs+60 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ <variable>.uregs+60 ])
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/ptrace.c:206 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 16 15 17 2 arch/arm/kernel/ptrace.c:206 (set (reg:SI 0 r0)
        (reg:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_EQUAL (const_int 5 [0x5])
            (nil))))

(insn 17 16 18 2 arch/arm/kernel/ptrace.c:206 (set (reg:SI 1 r1)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 18 17 19 2 arch/arm/kernel/ptrace.c:206 (set (reg:SI 2 r2)
        (reg/v/f:SI 133 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ tsk ])
        (nil)))

(call_insn 19 18 0 2 arch/arm/kernel/ptrace.c:206 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function break_trap (break_trap)[0:1544]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


break_trap

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,4u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 154{134d,19u,1e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 135[131,1] 137[132,1] 138[133,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134 135 137 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(5)
0, 130, 131, 132, 133
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 130, 131, 132, 133
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 13 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 138 { d133(bb 2 insn 8) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 10
;;      reg 137 { d132(bb 2 insn 9) }
;;   UD chains for insn luid 4 uid 11
;;      reg 135 { d131(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 12
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 2 insn 10) }
;;      reg 1 { d5(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 17
;;      reg 134 { d130(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 23
;;      reg 0 { d0(bb 2 insn 17) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(0){ d0(bb 2 insn 17) }u16(11){ d11(bb 0 insn -1) }u17(13){ d14(bb 0 insn -1) }u18(14){ }u19(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 17) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
  Adding insn 17 to worklist
Processing use of (reg 134 [ <result> ]) in insn 17:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 0 r0) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 1 r1) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 135 [ regs ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 137) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 138) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 13 sp) in insn 8:
Processing use of (reg 0 r0) in insn 23:


break_trap

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,4u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 154{134d,19u,1e} in 9{8 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 135[131,1] 137[132,1] 138[133,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 134 135 137 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(5)
0, 130, 131, 132, 133
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 130, 131, 132, 133

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/kernel/ptrace.c:210 (set (reg/v/f:SI 135 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
        (nil)))

(note 4 2 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 138)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 137)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 138)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 137)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ regs ])
        (nil)))

(call_insn 12 11 13 2 arch/arm/kernel/ptrace.c:211 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_break") [flags 0x3] <function_decl 0x11539900 ptrace_break>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 17 2 arch/arm/kernel/ptrace.c:213 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 17 13 23 2 arch/arm/kernel/ptrace.c:213 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 23 17 0 2 arch/arm/kernel/ptrace.c:213 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function flush_ptrace_hw_breakpoint (flush_ptrace_hw_breakpoint)[0:1552]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


flush_ptrace_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,3u} r135={1d,2u} r138={1d,1u} 
;;    total ref usage 174{136d,38u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,2] 134[132,2] 135[134,1] 138[135,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 138
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(3)
130, 133, 135
;; rd  kill	(5)
130, 131, 132, 133, 135
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; rd  out 	(13)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28, 130, 133, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 15
;;      reg 134 { d133(bb 2 insn 7) }

( 5 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ d9(bb 0 insn -1) }u7(13){ d12(bb 0 insn -1) }u8(25){ d27(bb 0 insn -1) }u9(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(17)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(2)
26, 134
;; rd  kill	(4)
24, 25, 26, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 138
;; rd  out 	(17)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 9
;;      reg 133 { d131(bb 5 insn 20) d130(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 10
;;      reg 135 { d134(bb 3 insn 9) }
;;   UD chains for insn luid 2 uid 11
;;      reg 24 { d26(bb 3 insn 10) }

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ d9(bb 0 insn -1) }u14(13){ d12(bb 0 insn -1) }u15(25){ d27(bb 0 insn -1) }u16(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(17)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(0)

;; rd  kill	(2)
13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 26, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 13
;;      reg 135 { d134(bb 3 insn 9) }
;;   UD chains for insn luid 1 uid 14
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 13) }
;;   UD chains for insn luid 2 uid 16
;;      reg 133 { d131(bb 5 insn 20) d130(bb 2 insn 2) }
;;      reg 138 { d135(bb 2 insn 15) }

( 3 4 )->[5]->( 3 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d9(bb 0 insn -1) }u23(13){ d12(bb 0 insn -1) }u24(25){ d27(bb 0 insn -1) }u25(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc] 133 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  gen 	 24 [cc] 133 134
;; live  kill	
;; rd  in  	(17)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(3)
24, 131, 132
;; rd  kill	(7)
24, 25, 26, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; rd  out 	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 134 { d133(bb 2 insn 7) d132(bb 5 insn 19) }
;;   UD chains for insn luid 1 uid 20
;;      reg 133 { d131(bb 5 insn 20) d130(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 22
;;      reg 134 { d132(bb 5 insn 19) }
;;   UD chains for insn luid 3 uid 23
;;      reg 24 { d24(bb 5 insn 22) }

( 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ d9(bb 0 insn -1) }u31(13){ d12(bb 0 insn -1) }u32(25){ d27(bb 0 insn -1) }u33(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u34(11){ d9(bb 0 insn -1) }u35(13){ d12(bb 0 insn -1) }u36(14){ d14(bb 0 insn -1) }u37(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 134 [ i ]) in insn 22:
  Adding insn 19 to worklist
Processing use of (reg 134 [ i ]) in insn 19:
  Adding insn 7 to worklist
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 0 r0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 135 [ D.26985 ]) in insn 13:
  Adding insn 9 to worklist
Processing use of (reg 133 [ ivtmp.989 ]) in insn 9:
  Adding insn 20 to worklist
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 133 [ ivtmp.989 ]) in insn 20:
Processing use of (reg 133 [ ivtmp.989 ]) in insn 16:
Processing use of (reg 138) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 134 [ i ]) in insn 15:
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 135 [ D.26985 ]) in insn 10:


flush_ptrace_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,3u} r135={1d,2u} r138={1d,1u} 
;;    total ref usage 174{136d,38u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,2] 134[132,2] 135[134,1] 138[135,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 138
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(3)
130, 133, 135
;; rd  kill	(5)
130, 131, 132, 133, 135

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:415 (set (reg:SI 133 [ ivtmp.989 ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 15 2 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 15 7 21 2 arch/arm/kernel/ptrace.c:422 (set (reg:SI 138)
        (reg/v:SI 134 [ i ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; rd  out 	(13)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28, 130, 133, 135


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 5 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ }u7(13){ }u8(25){ }u9(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(17)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(2)
26, 134
;; rd  kill	(4)
24, 25, 26, 134

;; Pred edge  5 [96.9%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 21 15 8 3 156 "" [1 uses])

(note 8 21 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:420 (set (reg/f:SI 135 [ D.26985 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.26985 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 3 arch/arm/kernel/ptrace.c:420 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 138
;; rd  out 	(17)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134, 135


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(17)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(0)

;; rd  kill	(2)
13, 14

;; Pred edge  3 [69.8%]  (fallthru)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 4 arch/arm/kernel/ptrace.c:421 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ D.26985 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.26985 ])
        (nil)))

(call_insn 14 13 16 4 arch/arm/kernel/ptrace.c:421 (parallel [
            (call (mem:SI (symbol_ref:SI ("unregister_hw_breakpoint") [flags 0x41] <function_decl 0x11524a00 unregister_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 16 14 17 4 arch/arm/kernel/ptrace.c:422 (set (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 26, 27, 28, 130, 131, 132, 133, 134, 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc] 133 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  gen 	 24 [cc] 133 134
;; live  kill	
;; rd  in  	(17)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(3)
24, 131, 132
;; rd  kill	(7)
24, 25, 26, 130, 131, 132, 133

;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 17 16 18 5 155 "" [1 uses])

(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 5 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 20 19 22 5 arch/arm/kernel/ptrace.c:419 (set (reg:SI 133 [ ivtmp.989 ])
        (plus:SI (reg:SI 133 [ ivtmp.989 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 22 20 23 5 arch/arm/kernel/ptrace.c:419 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 31 5 arch/arm/kernel/ptrace.c:419 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9688 [0x25d8])
            (nil))))
;; End of basic block 5 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138
;; rd  out 	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135


;; Succ edge  3 [96.9%]  (dfs_back)
;; Succ edge  6 [3.1%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  5 [3.1%]  (fallthru,loop_exit)
(note 31 23 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function regs_query_register_offset (regs_query_register_offset)[0:1536]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 17 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 20 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 20 (  2.2)


regs_query_register_offset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,1u} r136={1d,2u} r138={1d,1u} r140={1d,1u} 
;;    total ref usage 188{139d,49u,0e} in 18{17 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,3] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 133[132,2] 134[134,2] 136[136,1] 138[137,1] 140[138,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d29(25){ }d30(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 30
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30

( 0 )->[2]->( 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d29(bb 0 insn -1) }u3(26){ d30(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 138
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30
;; rd  gen 	(2)
132, 137
;; rd  kill	(3)
132, 133, 137
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(12)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30, 132, 137
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }

( 6 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ d11(bb 0 insn -1) }u6(13){ d14(bb 0 insn -1) }u7(25){ d29(bb 0 insn -1) }u8(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(3)
1, 26, 138
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 26, 27, 28, 138
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(15)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 136 { d136(bb 6 insn 27) }
;;   UD chains for insn luid 1 uid 12
;;      reg 138 { d137(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 13
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 11) }
;;      reg 1 { d5(bb 3 insn 12) }
;;   UD chains for insn luid 3 uid 14
;;      reg 0 { d1(bb 3 insn 13) }
;;   UD chains for insn luid 4 uid 16
;;      reg 140 { d138(bb 3 insn 14) }
;;   UD chains for insn luid 5 uid 17
;;      reg 24 { d26(bb 3 insn 16) }

( 3 )->[4]->( 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d11(bb 0 insn -1) }u18(13){ d14(bb 0 insn -1) }u19(25){ d29(bb 0 insn -1) }u20(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 134
;; live  kill	
;; rd  in  	(15)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(1)
135
;; rd  kill	(2)
134, 135
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 135, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 133 { d133(bb 5 insn 24) d132(bb 2 insn 6) }

( 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d11(bb 0 insn -1) }u23(13){ d14(bb 0 insn -1) }u24(25){ d29(bb 0 insn -1) }u25(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 133
;; live  kill	
;; rd  in  	(15)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(1)
133
;; rd  kill	(2)
132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(14)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 133, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 24
;;      reg 133 { d133(bb 5 insn 24) d132(bb 2 insn 6) }

( 5 2 )->[6]->( 3 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u27(11){ d11(bb 0 insn -1) }u28(13){ d14(bb 0 insn -1) }u29(25){ d29(bb 0 insn -1) }u30(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 24 [cc] 136
;; live  kill	
;; rd  in  	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(2)
27, 136
;; rd  kill	(4)
26, 27, 28, 136
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138
;; rd  out 	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 27
;;      reg 133 { d133(bb 5 insn 24) d132(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 29
;;      reg 136 { d136(bb 6 insn 27) }
;;   UD chains for insn luid 2 uid 30
;;      reg 24 { d27(bb 6 insn 29) }

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(11){ d11(bb 0 insn -1) }u35(13){ d14(bb 0 insn -1) }u36(25){ d29(bb 0 insn -1) }u37(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(1)
134
;; rd  kill	(2)
134, 135
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(18)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 134, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }

( 7 4 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u38(11){ d11(bb 0 insn -1) }u39(13){ d14(bb 0 insn -1) }u40(25){ d29(bb 0 insn -1) }u41(26){ d30(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(20)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 27, 29, 30, 132, 133, 134, 135, 136, 137, 138
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 6, 8, 10, 11, 13, 14, 16, 26, 27, 29, 30, 132, 133, 134, 135, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }
;;   reg 26 { d30(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 134 { d135(bb 4 insn 19) d134(bb 7 insn 32) }
;;   UD chains for insn luid 1 uid 45
;;      reg 0 { d0(bb 8 insn 39) }

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u44(0){ d0(bb 8 insn 39) }u45(11){ d11(bb 0 insn -1) }u46(13){ d14(bb 0 insn -1) }u47(14){ d16(bb 0 insn -1) }u48(25){ d29(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 6, 8, 10, 11, 13, 14, 16, 26, 27, 29, 30, 132, 133, 134, 135, 136, 137, 138
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 6, 8, 10, 11, 13, 14, 16, 26, 27, 29, 30, 132, 133, 134, 135, 136, 137, 138
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 8 insn 39) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { d16(bb 0 insn -1) }
;;   reg 25 { d29(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 49 to worklist
  Adding insn 17 to worklist
  Adding insn 51 to worklist
  Adding insn 30 to worklist
  Adding insn 45 to worklist
Finished finding needed instructions:
  Adding insn 39 to worklist
Processing use of (reg 134 [ D.26782 ]) in insn 39:
  Adding insn 19 to worklist
  Adding insn 32 to worklist
Processing use of (reg 133 [ roff ]) in insn 19:
  Adding insn 24 to worklist
  Adding insn 6 to worklist
Processing use of (reg 133 [ roff ]) in insn 24:
Processing use of (reg 0 r0) in insn 45:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 136 [ D.26778 ]) in insn 29:
  Adding insn 27 to worklist
Processing use of (reg 133 [ roff ]) in insn 27:
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 140) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 0 r0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 1 r1) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 138 [ name ]) in insn 12:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136 [ D.26778 ]) in insn 11:


regs_query_register_offset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,1u} r136={1d,2u} r138={1d,1u} r140={1d,1u} 
;;    total ref usage 188{139d,49u,0e} in 18{17 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,3] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 133[132,2] 134[134,2] 136[136,1] 138[137,1] 140[138,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 138
;; live  kill	
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30
;; rd  gen 	(2)
132, 137
;; rd  kill	(3)
132, 133, 137

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:95 (set (reg/v/f:SI 138 [ name ])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ name ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 49 2 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 49 6 50 2 arch/arm/kernel/ptrace.c:97 (set (pc)
        (label_ref 25)) -1 (nil))
;; End of basic block 2 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(12)
3, 6, 8, 10, 11, 13, 14, 16, 29, 30, 132, 137


;; Succ edge  6 [100.0%] 

(barrier 50 49 28)

;; Start of basic block ( 6) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ }u6(13){ }u7(25){ }u8(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140
;; live  kill	 14 [lr]
;; rd  in  	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(3)
1, 26, 138
;; rd  kill	(10)
0, 1, 2, 3, 15, 16, 26, 27, 28, 138

;; Pred edge  6 [95.5%] 
(code_label 28 50 10 3 163 "" [1 uses])

(note 10 28 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:98 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ D.26778 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 136 [ D.26778 ])
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:98 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ name ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 13 12 14 3 arch/arm/kernel/ptrace.c:98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 16 3 arch/arm/kernel/ptrace.c:98 (set (reg:SI 140)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 16 14 17 3 arch/arm/kernel/ptrace.c:98 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 17 16 18 3 arch/arm/kernel/ptrace.c:98 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(15)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 136, 137, 138


;; Succ edge  4 [4.5%]  (fallthru,loop_exit)
;; Succ edge  5 [95.5%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 134
;; live  kill	
;; rd  in  	(15)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(1)
135
;; rd  kill	(2)
134, 135

;; Pred edge  3 [4.5%]  (fallthru,loop_exit)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 51 4 arch/arm/kernel/ptrace.c:99 (set (reg:SI 134 [ D.26782 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ roff ])
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ roff ])
        (nil)))

(jump_insn 51 19 52 4 arch/arm/kernel/ptrace.c:99 (set (pc)
        (label_ref 33)) -1 (nil))
;; End of basic block 4 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 135, 136, 137, 138


;; Succ edge  8 [100.0%] 

(barrier 52 51 22)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 133
;; live  kill	
;; rd  in  	(15)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(1)
133
;; rd  kill	(2)
132, 133

;; Pred edge  3 [95.5%] 
(code_label 22 52 23 5 161 "" [1 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (plus:SI (reg/v/f:SI 133 [ roff ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; rd  out 	(14)
1, 6, 8, 10, 11, 13, 14, 26, 29, 30, 133, 136, 137, 138


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 24 [cc] 136
;; live  kill	
;; rd  in  	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(2)
27, 136
;; rd  kill	(4)
26, 27, 28, 136

;; Pred edge  5 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 25 24 26 6 160 "" [1 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 29 6 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg/f:SI 136 [ D.26778 ])
        (mem/s/f/j:SI (reg/v/f:SI 133 [ roff ]) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 27 30 6 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ D.26778 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 6 arch/arm/kernel/ptrace.c:97 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 6 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138
;; rd  out 	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 136, 137, 138


;; Succ edge  3 [95.5%] 
;; Succ edge  7 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(17)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 136, 137, 138
;; rd  gen 	(1)
134
;; rd  kill	(2)
134, 135

;; Pred edge  6 [4.5%]  (fallthru,loop_exit)
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 arch/arm/kernel/ptrace.c:100 (set (reg:SI 134 [ D.26782 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(18)
1, 3, 6, 8, 10, 11, 13, 14, 16, 27, 29, 30, 132, 133, 134, 136, 137, 138


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(20)
1, 3, 6, 8, 10, 11, 13, 14, 16, 26, 27, 29, 30, 132, 133, 134, 135, 136, 137, 138
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 33 32 34 8 162 "" [1 uses])

(note 34 33 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 34 45 8 arch/arm/kernel/ptrace.c:101 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.26782 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.26782 ])
        (nil)))

(insn 45 39 0 8 arch/arm/kernel/ptrace.c:101 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 6, 8, 10, 11, 13, 14, 16, 26, 27, 29, 30, 132, 133, 134, 135, 136, 137, 138


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
