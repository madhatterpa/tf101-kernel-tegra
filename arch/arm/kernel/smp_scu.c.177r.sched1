
;; Function scu_get_core_count (scu_get_core_count)[0:721] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 20 -- before reload
;;   ======================================================

;;	  0-->     2 r136=r0                           :cortex_a8_default
;;	  2-->     7 r133=[r136+0x4]                   :cortex_a8_load_store_1
;;	  4-->     8 r138=r133&0x3                     :cortex_a8_default
;;	  5-->    14 r0=r138+0x1                       :cortex_a8_default
;;	  5-->    20 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2
;;   new tail = 20


;; Procedure interblock/speculative motions == 0/0 




scu_get_core_count

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 28{14d,14u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 136 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 136 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 2 2 NOTE_INSN_DELETED)

(insn 2 9 7 2 arch/arm/kernel/smp_scu.c:29 (set (reg/v/f:SI 136 [ scu_base ])
        (reg:SI 0 r0 [ scu_base ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ scu_base ])
        (nil)))

(insn 7 2 8 2 arch/arm/kernel/smp_scu.c:30 (set (reg/v:SI 133 [ ncores ])
        (mem/v:SI (plus:SI (reg/v/f:SI 136 [ scu_base ])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ scu_base ])
        (nil)))

(insn 8 7 14 2 arch/arm/kernel/smp_scu.c:32 (set (reg:SI 138)
        (and:SI (reg/v:SI 133 [ ncores ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ncores ])
        (nil)))

(insn 14 8 20 2 arch/arm/kernel/smp_scu.c:32 (set (reg/i:SI 0 r0)
        (plus:SI (reg:SI 138)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 20 14 24 2 arch/arm/kernel/smp_scu.c:32 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 24 20 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function scu_enable (scu_enable)[0:722] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 11 -- before reload
;;   ======================================================

;;	  0-->     6 {r136=asm_operands;clobber cc;}   :nothing
;;	  1-->     7 r142=r136&0xffffffffff0fffff      :cortex_a8_default
;;	  1-->     9 r143=0x410fc090                   :cortex_a8_load_store_1
;;	  2-->     8 r141=r142&0xfffffffffffffff0      :cortex_a8_default
;;	  2-->     2 r140=r0                           :cortex_a8_default
;;	  3-->    10 cc=cmp(r141,r143)                 :cortex_a8_default
;;	  5-->    11 pc={(cc!=0x0)?L21:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2
;;   new tail = 11

;;   ======================================================
;;   -- basic block 3 from 14 to 17 -- before reload
;;   ======================================================

;;	  0-->    14 r137=[r140+0x30]                  :cortex_a8_load_store_1
;;	  2-->    16 cc=cmp(zxt(r137,0x1,0x0),0x0)     :cortex_a8_default
;;	  4-->    17 pc={(cc!=0x0)?L21:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 14
;;   new tail = 17

;;   ======================================================
;;   -- basic block 4 from 19 to 20 -- before reload
;;   ======================================================

;;	  0-->    19 r138=r137|0x1                     :cortex_a8_default
;;	  0-->    20 [r140+0x30]=r138                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 19
;;   new tail = 20

;;   ======================================================
;;   -- basic block 5 from 24 to 27 -- before reload
;;   ======================================================

;;	  0-->    24 r134=[r140]                       :cortex_a8_load_store_1
;;	  2-->    26 cc=cmp(zxt(r134,0x1,0x0),0x0)     :cortex_a8_default
;;	  4-->    27 pc={(cc!=0x0)?L39:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 24
;;   new tail = 27

;;   ======================================================
;;   -- basic block 6 from 29 to 33 -- before reload
;;   ======================================================

;;	  0-->    29 r133=r134|0x1                     :cortex_a8_default
;;	  0-->    30 [r140]=r133                       :cortex_a8_load_store_1
;;	  1-->    31 r146=`cpu_cache'                  :cortex_a8_load_store_1
;;	  2-->    33 call [[r146+0x4]]                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 29
;;   new tail = 33


;; Procedure interblock/speculative motions == 0/0 




scu_enable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,3u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r136={1d,1u,1d} r137={1d,2u} r138={1d,1u} r140={1d,4u} r141={1d,1u,1d} r142={1d,1u} r143={1d,1u} r146={1d,1u} 
;;    total ref usage 191{141d,48u,2e} in 19{18 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 140 141 142 143
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 140 141 142 143
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/smp_scu.c:43 (parallel [
            (set (reg/v:SI 136 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 4545179))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 7 6 9 2 arch/arm/kernel/smp_scu.c:43 (set (reg:SI 142)
        (and:SI (reg/v:SI 136 [ __val ])
            (const_int -15728641 [0xffffffffff0fffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ __val ])
        (nil)))

(insn 9 7 8 2 arch/arm/kernel/smp_scu.c:43 (set (reg:SI 143)
        (const_int 1091551376 [0x410fc090])) 167 {*arm_movsi_insn} (nil))

(insn 8 9 2 2 arch/arm/kernel/smp_scu.c:43 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 136 [ __val ])
                (const_int -15728656 [0xffffffffff0ffff0]))
            (nil))))

(insn 2 8 10 2 arch/arm/kernel/smp_scu.c:38 (set (reg/v/f:SI 140 [ scu_base ])
        (reg:SI 0 r0 [ scu_base ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ scu_base ])
        (nil)))

(insn 10 2 11 2 arch/arm/kernel/smp_scu.c:43 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 143))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg:SI 141)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 141)
                    (const_int 1091551376 [0x410fc090]))
                (nil)))))

(jump_insn 11 10 12 2 arch/arm/kernel/smp_scu.c:43 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 12 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 15 12 14 3 NOTE_INSN_DELETED)

(insn 14 15 16 3 arch/arm/kernel/smp_scu.c:44 (set (reg/v:SI 137 [ scu_ctrl ])
        (mem/v:SI (plus:SI (reg/v/f:SI 140 [ scu_base ])
                (const_int 48 [0x30])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 14 17 3 arch/arm/kernel/smp_scu.c:45 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 137 [ scu_ctrl ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 17 16 18 3 arch/arm/kernel/smp_scu.c:45 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 140
;; live  gen 	 138
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/smp_scu.c:46 (set (reg:SI 138 [ D.11045 ])
        (ior:SI (reg/v:SI 137 [ scu_ctrl ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ scu_ctrl ])
        (nil)))

(insn 20 19 21 4 arch/arm/kernel/smp_scu.c:46 (set (mem/v:SI (plus:SI (reg/v/f:SI 140 [ scu_base ])
                (const_int 48 [0x30])) [0 S4 A32])
        (reg:SI 138 [ D.11045 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.11045 ])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  gen 	 24 [cc] 134
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 21 20 22 5 4 "" [2 uses])

(note 22 21 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 25 22 24 5 NOTE_INSN_DELETED)

(insn 24 25 26 5 arch/arm/kernel/smp_scu.c:50 (set (reg/v:SI 134 [ scu_ctrl.256 ])
        (mem/v:SI (reg/v/f:SI 140 [ scu_base ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 24 27 5 arch/arm/kernel/smp_scu.c:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 134 [ scu_ctrl.256 ])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 27 26 28 5 arch/arm/kernel/smp_scu.c:52 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 140


;; Succ edge  7 [61.0%] 
;; Succ edge  6 [39.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 140
;; live  gen 	 133 146
;; live  kill	 14 [lr]

;; Pred edge  5 [39.0%]  (fallthru)
(note 28 27 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 32 28 29 6 NOTE_INSN_DELETED)

(insn 29 32 30 6 arch/arm/kernel/smp_scu.c:55 (set (reg/v:SI 133 [ scu_ctrl.259 ])
        (ior:SI (reg/v:SI 134 [ scu_ctrl.256 ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ scu_ctrl.256 ])
        (nil)))

(insn 30 29 31 6 arch/arm/kernel/smp_scu.c:56 (set (mem/v:SI (reg/v/f:SI 140 [ scu_base ]) [0 S4 A32])
        (reg/v:SI 133 [ scu_ctrl.259 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ scu_base ])
        (expr_list:REG_DEAD (reg/v:SI 133 [ scu_ctrl.259 ])
            (nil))))

(insn 31 30 33 6 arch/arm/kernel/smp_scu.c:62 (set (reg/f:SI 146)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10e32ea0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(call_insn 33 31 39 6 arch/arm/kernel/smp_scu.c:62 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 146)
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 146)
        (nil))
    (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [61.0%] 
(code_label 39 33 42 7 6 "" [1 uses])

(note 42 39 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 63 42 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function scu_power_mode (scu_power_mode)[0:723]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


scu_power_mode

Dataflow summary:
def_info->table_size = 34, use_info->table_size = 58
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,7u} r14={1d,1u} r24={4d,2u} r25={1d,6u} r26={1d,5u} r134={1d,1u} r135={1d,1u} r138={2d,1u} r139={1d,2u} r141={1d,2u} r142={1d,3u} r143={2d,2u} r148={1d,1u} r151={1d,2u} r152={1d,2u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 79{29d,50u,0e} in 22{22 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d13(25){ }d14(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 141 142 143 148 151
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 141 142 143 148 151
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 151
;; lr  def 	 134 135 138 152 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  gen 	 134 135 138 152 154 155
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138

( 3 2 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138

( 5 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(0){ }u54(11){ }u55(13){ }u56(14){ }u57(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 24 to worklist
  Adding insn 58 to worklist
  Adding insn 35 to worklist
  Adding insn 28 to worklist
  Adding insn 54 to worklist
Finished finding needed instructions:
processing block 6 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 48 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
  Adding insn 41 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 26 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
  Adding insn 23 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 10 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;;   ======================================================
;;   -- basic block 2 from 2 to 21 -- before reload
;;   ======================================================

;;	  0-->     3 r142=r1                           :cortex_a8_default
;;	  0-->    60 r143=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->    15 {r148=gtu(r142,0x3);clobber cc;}  :cortex_a8_default
;;	  1-->    61 r143=r143&0xffffffffffffffc0      :cortex_a8_default
;;	  2-->    19 {r151=r142==0x1|r148;clobber cc;} :cortex_a8_default
;;	  2-->     2 r141=r0                           :cortex_a8_default
;;	  3-->    20 cc=cmp(r151,0x0)                  :cortex_a8_default
;;	  3-->    10 r139=[r143+0x14]                  :cortex_a8_load_store_1
;;	  5-->    21 pc={(cc!=0x0)?L39:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 2
;;   new tail = 21

;;   ======================================================
;;   -- basic block 3 from 23 to 24 -- before reload
;;   ======================================================

;;	  0-->    23 cc=cmp(r139,0x3)                  :cortex_a8_default
;;	  2-->    24 pc={(cc>0x0)?L39:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 23
;;   new tail = 24

;;   ======================================================
;;   -- basic block 4 from 26 to 58 -- before reload
;;   ======================================================

;;	  0-->    26 r152=r139+0x8                     :cortex_a8_default
;;	  0-->    36 r138=r151                         :cortex_a8_default
;;	  2-->    28 r154=zxn([r141+r152])             :cortex_a8_load_store_1
;;	  4-->    31 r134=r154&0xfc                    :cortex_a8_default
;;	  5-->    32 r155=r134|r142                    :cortex_a8_default
;;	  7-->    33 r135=zxn(r155#0)                  :cortex_a8_default
;;	  7-->    35 [r141+r152]=r135#0                :cortex_a8_load_store_1
;;	  8-->    58 pc=L42                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 8
;;   new head = 26
;;   new tail = 58

;;   ======================================================
;;   -- basic block 5 from 41 to 41 -- before reload
;;   ======================================================

;;	  0-->    41 r138=0xffffffffffffffea           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 41
;;   new tail = 41

;;   ======================================================
;;   -- basic block 6 from 48 to 54 -- before reload
;;   ======================================================

;;	  0-->    48 r0=r138                           :cortex_a8_default
;;	  0-->    54 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 48
;;   new tail = 54


;; Procedure interblock/speculative motions == 0/0 




scu_power_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,6u} r12={1d} r13={1d,7u} r14={1d,1u} r24={4d,2u} r25={1d,6u} r26={1d,5u} r134={1d,1u} r135={1d,1u} r138={2d,1u} r139={1d,2u} r141={1d,2u} r142={1d,3u} r143={2d,2u} r148={1d,1u} r151={1d,2u} r152={1d,2u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 79{29d,50u,0e} in 22{22 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 141 142 143 148 151
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 141 142 143 148 151
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 11 2 NOTE_INSN_DELETED)

(note 11 8 12 2 NOTE_INSN_DELETED)

(note 12 11 14 2 NOTE_INSN_DELETED)

(note 14 12 17 2 NOTE_INSN_DELETED)

(note 17 14 18 2 NOTE_INSN_DELETED)

(note 18 17 3 2 NOTE_INSN_DELETED)

(insn 3 18 60 2 arch/arm/kernel/smp_scu.c:75 (set (reg/v:SI 142 [ mode ])
        (reg:SI 1 r1 [ mode ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mode ])
        (nil)))

(insn 60 3 15 2 arch/arm/kernel/smp_scu.c:77 (set (reg:SI 143)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 15 60 61 2 arch/arm/kernel/smp_scu.c:79 (parallel [
            (set (reg:SI 148)
                (gtu:SI (reg/v:SI 142 [ mode ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 61 15 19 2 arch/arm/kernel/smp_scu.c:77 (set (reg:SI 143)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 61 2 2 arch/arm/kernel/smp_scu.c:79 (parallel [
            (set (reg:SI 151)
                (ior:SI (eq:SI (reg/v:SI 142 [ mode ])
                        (const_int 1 [0x1]))
                    (reg:SI 148)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 2 19 20 2 arch/arm/kernel/smp_scu.c:75 (set (reg/v/f:SI 141 [ scu_base ])
        (reg:SI 0 r0 [ scu_base ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ scu_base ])
        (nil)))

(insn 20 2 10 2 arch/arm/kernel/smp_scu.c:79 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 10 20 21 2 arch/arm/kernel/smp_scu.c:77 (set (reg:SI 139 [ D.11057 ])
        (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 21 10 22 2 arch/arm/kernel/smp_scu.c:79 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151


;; Succ edge  5 [96.0%] 
;; Succ edge  3 [4.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [4.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 arch/arm/kernel/smp_scu.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.11057 ])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 3 arch/arm/kernel/smp_scu.c:77 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151


;; Succ edge  5 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 142 151
;; lr  def 	 134 135 138 152 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 142 151
;; live  gen 	 134 135 138 152 154 155
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 25 24 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 29 25 30 4 NOTE_INSN_DELETED)

(note 30 29 26 4 NOTE_INSN_DELETED)

(insn 26 30 36 4 arch/arm/kernel/smp_scu.c:82 (set (reg:SI 152)
        (plus:SI (reg:SI 139 [ D.11057 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.11057 ])
        (nil)))

(insn 36 26 28 4 arch/arm/kernel/smp_scu.c:86 (set (reg:SI 138 [ D.11064 ])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 28 36 31 4 arch/arm/kernel/smp_scu.c:82 (set (reg:SI 154)
        (zero_extend:SI (mem/v:QI (plus:SI (reg/v/f:SI 141 [ scu_base ])
                    (reg:SI 152)) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 31 28 32 4 arch/arm/kernel/smp_scu.c:82 (set (reg/v:SI 134 [ val ])
        (and:SI (reg:SI 154)
            (const_int 252 [0xfc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(insn 32 31 33 4 arch/arm/kernel/smp_scu.c:84 (set (reg:SI 155)
        (ior:SI (reg/v:SI 134 [ val ])
            (reg/v:SI 142 [ mode ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ mode ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
            (nil))))

(insn 33 32 35 4 arch/arm/kernel/smp_scu.c:84 (set (reg:SI 135 [ D.11071 ])
        (zero_extend:SI (subreg:QI (reg:SI 155) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 35 33 58 4 arch/arm/kernel/smp_scu.c:84 (set (mem/v:QI (plus:SI (reg/v/f:SI 141 [ scu_base ])
                (reg:SI 152)) [0 S1 A8])
        (subreg/s/u:QI (reg:SI 135 [ D.11071 ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/v/f:SI 141 [ scu_base ])
            (expr_list:REG_DEAD (reg:SI 135 [ D.11071 ])
                (nil)))))

(jump_insn 58 35 59 4 arch/arm/kernel/smp_scu.c:86 (set (pc)
        (label_ref 42)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  6 [100.0%] 

(barrier 59 58 39)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 138
;; live  kill	

;; Pred edge  3 [39.0%] 
;; Pred edge  2 [96.0%] 
(code_label 39 59 40 5 11 "" [2 uses])

(note 40 39 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 5 arch/arm/kernel/smp_scu.c:80 (set (reg:SI 138 [ D.11064 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 42 41 43 6 12 "" [1 uses])

(note 43 42 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 48 43 54 6 arch/arm/kernel/smp_scu.c:87 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ D.11064 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.11064 ])
        (nil)))

(insn 54 48 62 6 arch/arm/kernel/smp_scu.c:87 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 54 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
