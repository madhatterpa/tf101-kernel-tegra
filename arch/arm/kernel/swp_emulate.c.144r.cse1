
;; Function swp_emulation_init (swp_emulation_init)[0:1327] (unlikely executed)


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [100.0%]  (fallthru) 4 [0.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  3 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)


swp_emulation_init

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,6u} r1={5d,1u} r2={5d,1u} r3={4d} r11={1d,5u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,5u} r26={1d,4u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={2d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 416{376d,40u,0e} in 21{18 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 26 to worklist
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 40 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 34 to worklist
  Adding insn 30 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 14 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;; Following path with 23 sets: 2 4 
;; Following path with 11 sets: 2 3 
;; Following path with 3 sets: 5 
deferring rescan insn with uid = 34.


try_optimize_cfg iteration 1



swp_emulation_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,6u} r1={5d,1u} r2={5d,1u} r3={4d} r11={1d,5u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,5u} r26={1d,4u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={2d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 416{376d,40u,0e} in 21{18 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/swp_emulate.c:253 (set (reg/f:SI 136)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114cfe40>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/swp_emulate.c:253 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114cfe40>)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/swp_emulate.c:253 (set (reg:SI 1 r1)
        (const_int 292 [0x124])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/swp_emulate.c:253 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 9 8 10 2 arch/arm/kernel/swp_emulate.c:253 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("create_proc_entry") [flags 0x41] <function_decl 0x10f11180 create_proc_entry>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 10 9 11 2 arch/arm/kernel/swp_emulate.c:253 (set (reg/v/f:SI 133 [ res ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/swp_emulate.c:255 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 133 [ res ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/kernel/swp_emulate.c:255 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  3 [100.0%]  (fallthru)
;; Succ edge  4 [0.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 17 3 arch/arm/kernel/swp_emulate.c:256 (set (reg:SI 134 [ D.26102 ])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 137 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 134 137 138 139
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%] 
(code_label 17 14 18 4 2 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/kernel/swp_emulate.c:258 (set (reg/f:SI 137)
        (symbol_ref:SI ("proc_read_status") [flags 0x3] <function_decl 0x1149ce80 proc_read_status>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/kernel/swp_emulate.c:258 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ res ])
                (const_int 48 [0x30])) [0 <variable>.read_proc+0 S4 A64])
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/kernel/swp_emulate.c:261 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114e8230>)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/kernel/swp_emulate.c:261 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114e8230>)
        (nil)))

(call_insn 23 22 24 4 arch/arm/kernel/swp_emulate.c:261 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/swp_emulate.c:262 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/kernel/swp_emulate.c:262 (set (reg:SI 0 r0)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 26 25 27 4 arch/arm/kernel/swp_emulate.c:262 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11491b80 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 27 26 28 4 arch/arm/kernel/swp_emulate.c:264 (set (reg:SI 134 [ D.26102 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 135
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 28 27 29 5 3 "" [0 uses])

(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 34 5 arch/arm/kernel/swp_emulate.c:265 (set (reg:SI 135 [ <result> ])
        (reg:SI 134 [ D.26102 ])) 167 {*arm_movsi_insn} (nil))

(insn 34 30 40 5 arch/arm/kernel/swp_emulate.c:265 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.26102 ])) 167 {*arm_movsi_insn} (nil))

(insn 40 34 0 5 arch/arm/kernel/swp_emulate.c:265 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 34.
deleting insn with uid = 34.
ending the processing of deferred insns

;; Function set_segfault (set_segfault)[0:1324]


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [10.1%]  (fallthru) 4 [89.9%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 1014, maybe hot.
Predecessors:  2 [10.1%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 8986, maybe hot.
Predecessors:  2 [89.9%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 7 (  1.2)


set_segfault

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={5d,3u} r2={4d,1u} r3={4d,1u} r11={1d,5u} r12={3d} r13={1d,9u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,11u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 331{270d,60u,1e} in 36{34 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 19 to worklist
  Adding insn 25 to worklist
  Adding insn 47 to worklist
  Adding insn 42 to worklist
  Adding insn 37 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
Finished finding needed instructions:
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
  Adding insn 18 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
  Adding insn 24 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;; Following path with 16 sets: 2 4 
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 12.
;; Following path with 16 sets: 2 3 
;; Following path with 22 sets: 5 
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 37.
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 44.
deferring rescan insn with uid = 45.


try_optimize_cfg iteration 1



set_segfault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={5d,3u} r2={4d,1u} r3={4d,1u} r11={1d,5u} r12={3d} r13={1d,9u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,11u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 331{270d,60u,1e} in 36{34 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/swp_emulate.c:108 (set (reg/v/f:SI 135 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/swp_emulate.c:108 (set (reg/v:SI 136 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.81 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/swp_emulate.c:111 (set (reg:SI 138)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/swp_emulate.c:111 (set (reg:SI 137)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/swp_emulate.c:111 (set (reg/f:SI 139 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 137)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/swp_emulate.c:111 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 139 [ <variable>.task ])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/swp_emulate.c:111 (set (reg:SI 1 r1)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 2 arch/arm/kernel/swp_emulate.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_vma") [flags 0x41] <function_decl 0x11285480 find_vma>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 2 arch/arm/kernel/swp_emulate.c:111 (set (reg/f:SI 134 [ D.26007 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/swp_emulate.c:111 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.26007 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/kernel/swp_emulate.c:111 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  3 [10.1%]  (fallthru)
;; Succ edge  4 [89.9%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 140
;; live  kill	

;; Pred edge  2 [10.1%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/kernel/swp_emulate.c:112 (set (reg:SI 140)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 22 3 arch/arm/kernel/swp_emulate.c:112 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 141
;; live  kill	

;; Pred edge  2 [89.9%] 
(code_label 22 19 23 4 9 "" [1 uses])

(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 arch/arm/kernel/swp_emulate.c:114 (set (reg:SI 141)
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/kernel/swp_emulate.c:114 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 141)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143 144 145 146 147 148 149 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 142 143 144 145 146 147 148 149 150 151
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 26 25 27 5 10 "" [0 uses])

(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 arch/arm/kernel/swp_emulate.c:116 (set (reg:SI 142)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/kernel/swp_emulate.c:116 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/kernel/swp_emulate.c:117 (set (reg:SI 143)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/kernel/swp_emulate.c:117 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 arch/arm/kernel/swp_emulate.c:118 (set (reg:SI 144 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/kernel/swp_emulate.c:118 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 144 [ <variable>.uregs+60 ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/kernel/swp_emulate.c:121 (set (reg/f:SI 145)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114fa5d0>)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/kernel/swp_emulate.c:121 (set (reg/f:SI 146)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 36 35 37 5 arch/arm/kernel/swp_emulate.c:121 (set (reg:SI 147)
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 37 36 38 5 arch/arm/kernel/swp_emulate.c:121 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 5 arch/arm/kernel/swp_emulate.c:121 (set (reg:SI 0 r0)
        (reg/f:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114fa5d0>)
        (nil)))

(insn 39 38 40 5 arch/arm/kernel/swp_emulate.c:121 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/kernel/swp_emulate.c:121 (set (reg:SI 2 r2)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))

(insn 41 40 42 5 arch/arm/kernel/swp_emulate.c:121 (set (reg:SI 3 r3)
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 42 41 43 5 arch/arm/kernel/swp_emulate.c:121 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512a9d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 43 42 44 5 arch/arm/kernel/swp_emulate.c:123 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 5 arch/arm/kernel/swp_emulate.c:123 (set (reg/f:SI 149)
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 45 44 46 5 arch/arm/kernel/swp_emulate.c:123 (set (reg:SI 150 [ abtcounter ])
        (mem/c/i:SI (reg/f:SI 148) [0 abtcounter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 5 arch/arm/kernel/swp_emulate.c:123 (set (reg:SI 151)
        (plus:SI (reg:SI 150 [ abtcounter ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 47 46 0 5 arch/arm/kernel/swp_emulate.c:123 (set (mem/c/i:SI (reg/f:SI 148) [0 abtcounter+0 S4 A32])
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 41.
deleting insn with uid = 41.
rescanning insn with uid = 44.
deleting insn with uid = 44.
rescanning insn with uid = 45.
deleting insn with uid = 45.
ending the processing of deferred insns

;; Function swp_handler (swp_handler)[0:1326]


31 basic blocks, 43 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [0.0%]  (fallthru) 7 [100.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 4.
Predecessors:  2 [0.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [6.7%]  4 [93.3%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 4.
Predecessors:  3 [93.3%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 336, maybe hot.
Predecessors:  3 [6.7%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 0, should be 336

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 340, should be 5000

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [72.0%]  (fallthru) 9 [28.0%] 

Invalid sum of incoming frequencies 14996, should be 10000

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  7 [72.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [28.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  29 [50.0%]  10 [50.0%]  (fallthru)


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [72.0%]  11 [28.0%]  (fallthru)


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3200, maybe hot.
Predecessors:  12 [50.0%]  10 [28.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [100.0%]  (fallthru)


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [72.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  13 [50.0%]  (fallthru) 11 [50.0%] 


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  26 [100.0%]  (fallthru)


Basic block 14 , prev 13, next 15, loop_depth 1, count 0, freq 3201, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 19 [100.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  15 [28.0%]  (fallthru) 16 [72.0%] 


Basic block 15 , prev 14, next 16, loop_depth 1, count 0, freq 896, maybe hot.
Predecessors:  14 [28.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [100.0%]  (fallthru)


Basic block 16 , prev 15, next 17, loop_depth 1, count 0, freq 2305, maybe hot.
Predecessors:  14 [72.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  17 [100.0%]  (fallthru)


Basic block 17 , prev 16, next 18, loop_depth 1, count 0, freq 3201, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 16 [100.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  20 [100.0%]  18 [0.0%]  (fallthru)


Basic block 18 , prev 17, next 19, loop_depth 1, count 0, freq 1.
Predecessors:  17 [0.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  24 [0.0%]  19 [100.0%]  (fallthru)


Basic block 19 , prev 18, next 20, loop_depth 1, count 0, freq 1.
Predecessors:  18 [100.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [100.0%]  (fallthru)


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 3200, maybe hot.
Predecessors:  17 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  21 [50.0%]  (fallthru) 24 [50.0%] 


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 1600, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  22 [28.0%]  (fallthru) 23 [72.0%] 


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 448, maybe hot.
Predecessors:  21 [28.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [100.0%]  (fallthru)


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 1152, maybe hot.
Predecessors:  21 [72.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [100.0%]  (fallthru)


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 1600, maybe hot.
Predecessors:  18 [0.0%]  20 [50.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [100.0%]  (fallthru)


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 3200, maybe hot.
Predecessors:  24 [100.0%]  (fallthru) 22 [100.0%]  (fallthru) 23 [100.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  26 [100.0%]  (fallthru)


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 25 [100.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  27 [78.0%]  (fallthru) 28 [22.0%] 


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  26 [78.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  30 [100.0%]  (fallthru)


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 1100, maybe hot.
Predecessors:  26 [22.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  29 (fallthru) 30 [100.0%] 


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 1214, maybe hot.
Predecessors:  28 (fallthru) 9 [50.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  30 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 5000, should be 1214

Basic block 30 , prev 29, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  27 [100.0%]  (fallthru) 28 [100.0%]  29 [100.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)

Invalid sum of incoming frequencies 6214, should be 10000

Basic block 1 , prev 30, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  30 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 43 count 61 (    2)


swp_handler

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,6u} r1={7d,3u} r2={6d,1u} r3={6d,1u} r11={1d,30u} r12={5d} r13={1d,41u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={20d,13u} r25={1d,32u} r26={1d,29u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,2u} r134={1d} r135={2d,1u} r136={2d,3u} r137={1d} r138={1d,1u,1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={2d,1u} r143={1d,1u,1d} r144={1d,1u,1d} r145={1d,1u,1d} r146={1d,1u} r147={1d,1u} r148={1d} r149={1d,1u} r150={1d,2u} r151={1d,3u} r152={3d,3u} r153={1d,5u} r154={1d,1u} r155={1d,1u} r156={1d,9u} r157={1d,4u} r158={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} 
;;    total ref usage 813{570d,239u,4e} in 111{107 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 6 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 8 )->[9]->( 29 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 10 )->[11]->( 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 )->[12]->( 13 11 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 )->[13]->( 26 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 19 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 14 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 14 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 15 16 )->[17]->( 20 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 17 )->[18]->( 24 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 18 )->[19]->( 14 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 17 )->[20]->( 21 24 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 20 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 21 )->[22]->( 25 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 21 )->[23]->( 25 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 18 20 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 24 22 23 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 25 )->[26]->( 27 28 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 26 )->[27]->( 30 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 26 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 28 9 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 27 28 29 )->[30]->( 1 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 30 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 14 to worklist
  Adding insn 24 to worklist
  Adding insn 33 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
  Adding insn 28 to worklist
  Adding insn 44 to worklist
  Adding insn 52 to worklist
  Adding insn 67 to worklist
  Adding insn 71 to worklist
  Adding insn 83 to worklist
  Adding insn 92 to worklist
  Adding insn 90 to worklist
  Adding insn 94 to worklist
  Adding insn 99 to worklist
  Adding insn 103 to worklist
  Adding insn 110 to worklist
  Adding insn 107 to worklist
  Adding insn 112 to worklist
  Adding insn 119 to worklist
  Adding insn 123 to worklist
  Adding insn 121 to worklist
  Adding insn 129 to worklist
  Adding insn 138 to worklist
  Adding insn 151 to worklist
  Adding insn 158 to worklist
  Adding insn 155 to worklist
  Adding insn 164 to worklist
  Adding insn 169 to worklist
  Adding insn 182 to worklist
Finished finding needed instructions:
processing block 30 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 176 to worklist
  Adding insn 172 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 168 to worklist
  Adding insn 167 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153 156
  Adding insn 163 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 152 153 156 157
  Adding insn 150 to worklist
  Adding insn 149 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157
  Adding insn 85 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157
  Adding insn 146 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 134 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
  Adding insn 122 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
  Adding insn 143 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 151 152 153 156 157
  Adding insn 118 to worklist
  Adding insn 117 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
  Adding insn 102 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
  Adding insn 91 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
  Adding insn 82 to worklist
  Adding insn 81 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
  Adding insn 70 to worklist
  Adding insn 69 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 156 157
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157
  Adding insn 16 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
  Adding insn 13 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 157
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 31 n_edges 43 count 61 (    2)
;; Following path with 16 sets: 2 3 5 
deferring rescan insn with uid = 25.
;; Following path with 10 sets: 2 3 4 
;; Following path with 10 sets: 6 
deferring rescan insn with uid = 189.
;; Following path with 16 sets: 7 8 
deferring rescan insn with uid = 37.
deferring rescan insn with uid = 47.
deferring rescan insn with uid = 48.
deferring rescan insn with uid = 48.
deferring rescan insn with uid = 49.
deferring rescan insn with uid = 49.
deferring rescan insn with uid = 50.
deferring rescan insn with uid = 50.
deferring rescan insn with uid = 51.
deferring rescan insn with uid = 51.
deferring rescan insn with uid = 52.
;; Following path with 22 sets: 9 10 12 13 
deferring rescan insn with uid = 62.
;; Following path with 3 sets: 11 
deferring rescan insn with uid = 74.
;; Following path with 9 sets: 14 16 
;; Following path with 9 sets: 14 15 
;; Following path with 14 sets: 17 20 21 23 
deferring rescan insn with uid = 135.
deferring rescan insn with uid = 136.
;; Following path with 14 sets: 17 20 21 22 
deferring rescan insn with uid = 126.
deferring rescan insn with uid = 127.
;; Following path with 11 sets: 17 18 19 
;; Following path with 1 sets: 24 
;; Following path with 1 sets: 25 
;; Following path with 5 sets: 26 28 
deferring rescan insn with uid = 150.
deferring rescan insn with uid = 163.
;; Following path with 9 sets: 26 27 
;; Following path with 5 sets: 29 
;; Following path with 3 sets: 30 


try_optimize_cfg iteration 1



swp_handler

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,6u} r1={7d,3u} r2={6d,1u} r3={6d,1u} r11={1d,30u} r12={5d} r13={1d,41u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={20d,13u} r25={1d,32u} r26={1d,29u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,2u} r134={1d} r135={2d,1u} r136={2d,3u} r137={1d} r138={1d,1u,1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={2d,1u} r143={1d,1u,1d} r144={1d,1u,1d} r145={1d,1u,1d} r146={1d,1u} r147={1d,1u} r148={1d} r149={1d,1u} r150={1d,2u} r151={1d,3u} r152={3d,3u} r153={1d,5u} r154={1d,1u} r155={1d,1u} r156={1d,9u} r157={1d,4u} r158={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} 
;;    total ref usage 813{570d,239u,4e} in 111{107 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 146 147 154 156 157
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 146 147 154 156 157
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/swp_emulate.c:182 (set (reg/v/f:SI 156 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/swp_emulate.c:182 (set (reg/v:SI 157 [ instr ])
        (reg:SI 1 r1 [ instr ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/swp_emulate.c:186 (set (reg:SI 154 [ D.26063 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 include/linux/jump_label.h:67 (set (reg/f:SI 147 [ D.26228 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1141fd20 perf_swevent_enabled>)
                (const_int 32 [0x20])))) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 include/linux/jump_label.h:67 (set (reg:SI 146 [ D.26229 ])
        (mem/v:SI (reg/f:SI 147 [ D.26228 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146 [ D.26229 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 154 156 157


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 156 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 3 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157


;; Succ edge  5 [6.7%] 
;; Succ edge  4 [93.3%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
;; live  gen 	 135
;; live  kill	

;; Pred edge  3 [93.3%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 19 4 include/linux/perf_event.h:1054 (set (reg/v/f:SI 135 [ regs.419 ])
        (reg/v/f:SI 156 [ regs ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156 157
;; live  gen 	 0 [r0] 1 [r1] 135 158
;; live  kill	 14 [lr]

;; Pred edge  3 [6.7%] 
(code_label 19 16 20 5 17 "" [1 uses])

(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 include/linux/perf_event.h:1043 discrim 1 (set (reg/f:SI 158)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 5 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 23 22 24 5 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 25 5 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10b7a080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 25 24 26 5 include/linux/perf_event.h:1056 (set (reg/v/f:SI 135 [ regs.419 ])
        (reg/f:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 154 156 157
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 196 197
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 26 25 27 6 18 "" [0 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 187 6 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 135 [ regs.419 ])) 167 {*arm_movsi_insn} (nil))

(insn 187 28 188 6 include/linux/perf_event.h:1058 (set (reg:SI 196 [ D.26063 ])
        (reg:SI 154 [ D.26063 ])) 167 {*arm_movsi_insn} (nil))

(insn 188 187 189 6 include/linux/perf_event.h:1058 (set (reg:SI 197 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 6 include/linux/perf_event.h:1058 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A64])
        (reg:SI 154 [ D.26063 ])) 167 {*arm_movsi_insn} (nil))

(insn 190 189 31 6 include/linux/perf_event.h:1058 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 197 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 31 190 32 6 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 33 32 34 6 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11426880 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 145 161 162 163 164 165 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; live  gen 	 24 [cc] 145 161 162 163 164 165 166
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 34 33 35 7 16 "" [1 uses])

(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 145 [ sp.81 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 162)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 161)
        (and:SI (reg:SI 162)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 39 38 40 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 163 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 161)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 164)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165 [ <variable>.pid ])
        (mem/s/j:SI (plus:SI (reg/f:SI 163 [ <variable>.task ])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166 [ previous_pid ])
        (mem/c/i:SI (plus:SI (reg/f:SI 164)
                (const_int 4 [0x4])) [0 previous_pid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165 [ <variable>.pid ])
            (reg:SI 166 [ previous_pid ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157


;; Succ edge  8 [72.0%]  (fallthru)
;; Succ edge  9 [28.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 144 167 168 169 170 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; live  gen 	 144 167 168 169 170 171
;; live  kill	

;; Pred edge  7 [72.0%]  (fallthru)
(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 144 [ sp.81 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 8 arch/arm/kernel/swp_emulate.c:191 (set (reg/f:SI 167)
        (reg/f:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 48 47 49 8 arch/arm/kernel/swp_emulate.c:191 (set (reg:SI 169)
        (reg:SI 162)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 8 arch/arm/kernel/swp_emulate.c:191 (set (reg:SI 168)
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 50 49 51 8 arch/arm/kernel/swp_emulate.c:191 (set (reg/f:SI 170 [ <variable>.task ])
        (reg/f:SI 163 [ <variable>.task ])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 8 arch/arm/kernel/swp_emulate.c:191 (set (reg:SI 171 [ <variable>.pid ])
        (reg:SI 165 [ <variable>.pid ])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 8 arch/arm/kernel/swp_emulate.c:191 (set (mem/c/i:SI (plus:SI (reg/f:SI 164)
                (const_int 4 [0x4])) [0 previous_pid+0 S4 A32])
        (reg:SI 165 [ <variable>.pid ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157
;; lr  def 	 24 [cc] 143 148 149 152 153 172 173 174 175 176 177 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157
;; live  gen 	 24 [cc] 143 148 149 152 153 172 173 174 175 176 177 178
;; live  kill	 24 [cc]

;; Pred edge  7 [28.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 53 52 54 9 19 "" [1 uses])

(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 9 arch/arm/kernel/swp_emulate.c:194 (set (reg:SI 172)
        (and:SI (reg/v:SI 157 [ instr ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 56 55 57 9 arch/arm/kernel/swp_emulate.c:194 (set (reg:SI 173)
        (lshiftrt:SI (reg:SI 172)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 57 56 58 9 arch/arm/kernel/swp_emulate.c:194 (set (reg/v:SI 153 [ address ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 173)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 156 [ regs ])) [0 <variable>.uregs S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 9 arch/arm/kernel/swp_emulate.c:195 (set (reg:SI 174)
        (and:SI (reg/v:SI 157 [ instr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 59 58 60 9 arch/arm/kernel/swp_emulate.c:195 (set (reg/v:SI 152 [ data ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 174)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 156 [ regs ])) [0 <variable>.uregs S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 143 [ sp.81 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 9 arch/arm/kernel/swp_emulate.c:205 (set (reg:SI 175)
        (and:SI (reg/v:SI 153 [ address ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 62 61 63 9 arch/arm/kernel/swp_emulate.c:205 (set (reg:SI 177)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 63 62 64 9 arch/arm/kernel/swp_emulate.c:205 (set (reg:SI 176)
        (and:SI (reg:SI 177)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 64 63 65 9 arch/arm/kernel/swp_emulate.c:205 (set (reg:SI 178 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 176)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 9 arch/arm/kernel/swp_emulate.c:205 (parallel [
            (set (reg/v:SI 149 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg:SI 175)
                        (const_int 4 [0x4])
                        (reg:SI 178 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8651859))
            (set (reg/v:SI 148 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg:SI 175)
                        (const_int 4 [0x4])
                        (reg:SI 178 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 8651859))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 66 65 67 9 arch/arm/kernel/swp_emulate.c:205 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 149 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 67 66 68 9 arch/arm/kernel/swp_emulate.c:205 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 165)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 29 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 156 157


;; Succ edge  29 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 156 157
;; live  gen 	 24 [cc] 151
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 10 arch/arm/kernel/swp_emulate.c:198 (set (reg/v:SI 151 [ type ])
        (and:SI (reg/v:SI 157 [ instr ])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (nil))

(insn 70 69 71 10 arch/arm/kernel/swp_emulate.c:131 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 151 [ type ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 80 10 arch/arm/kernel/swp_emulate.c:131 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157


;; Succ edge  12 [72.0%] 
;; Succ edge  11 [28.0%]  (fallthru)

;; Start of basic block ( 12 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 179
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
;; live  gen 	 138 139 179
;; live  kill	

;; Pred edge  12 [50.0%] 
;; Pred edge  10 [28.0%]  (fallthru)
(code_label 80 71 72 11 23 "" [1 uses])

(note 72 80 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138 [ sp.81 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 179)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 75 74 78 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 139 [ D.26290 ])
        (and:SI (reg:SI 179)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))
;; End of basic block 11 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 24 [cc] 180
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
;; live  gen 	 24 [cc] 180
;; live  kill	

;; Pred edge  10 [72.0%] 
(code_label 78 75 79 12 21 "" [1 uses])

(note 79 78 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 81 79 82 12 arch/arm/kernel/swp_emulate.c:131 discrim 1 (set (reg:SI 180)
        (and:SI (reg/v:SI 153 [ address ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 82 81 83 12 arch/arm/kernel/swp_emulate.c:131 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 12 arch/arm/kernel/swp_emulate.c:131 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 12 -> ( 13 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 151 152 153 156 157


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 156 157
;; live  gen 	 142
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 84 83 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 88 13 arch/arm/kernel/swp_emulate.c:134 (set (reg:SI 142 [ D.26280 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 11 19) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 88 85 89 14 22 "" [0 uses])

(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 14 arch/arm/kernel/swp_emulate.c:146 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8644303)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 91 90 92 14 arch/arm/kernel/swp_emulate.c:148 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 151 [ type ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 14 arch/arm/kernel/swp_emulate.c:148 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 97)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157


;; Succ edge  15 [28.0%]  (fallthru)
;; Succ edge  16 [72.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 24 [cc] 136 137 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; live  gen 	 136 137 152
;; live  kill	 24 [cc]

;; Pred edge  14 [28.0%]  (fallthru)
(note 93 92 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 97 15 arch/arm/kernel/swp_emulate.c:149 (parallel [
            (set (reg/v:SI 136 [ res ])
                (asm_operands/v:SI ("	mov		%2, %1
0:	ldrexb	%1, [%3]
1:	strexb	%0, %2, [%3]
	cmp		%0, #0
	movne		%0, %4
2:
	.section	 .fixup,"ax"
	.align		2
3:	mov		%0, %5
	b		2b
	.previous
	.section	 __ex_table,"a"
	.align		3
	.long		0b, 3b
	.long		1b, 3b
	.previous") ("=&r") 0 [
                        (reg/v:SI 153 [ address ])
                        (const_int -11 [0xfffffffffffffff5])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 152 [ data ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("1") 0)
                    ] 8644688))
            (set (reg/v:SI 152 [ data ])
                (asm_operands/v:SI ("	mov		%2, %1
0:	ldrexb	%1, [%3]
1:	strexb	%0, %2, [%3]
	cmp		%0, #0
	movne		%0, %4
2:
	.section	 .fixup,"ax"
	.align		2
3:	mov		%0, %5
	b		2b
	.previous
	.section	 __ex_table,"a"
	.align		3
	.long		0b, 3b
	.long		1b, 3b
	.previous") ("=r") 1 [
                        (reg/v:SI 153 [ address ])
                        (const_int -11 [0xfffffffffffffff5])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 152 [ data ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("1") 0)
                    ] 8644688))
            (set (reg/v:SI 137 [ temp ])
                (asm_operands/v:SI ("	mov		%2, %1
0:	ldrexb	%1, [%3]
1:	strexb	%0, %2, [%3]
	cmp		%0, #0
	movne		%0, %4
2:
	.section	 .fixup,"ax"
	.align		2
3:	mov		%0, %5
	b		2b
	.previous
	.section	 __ex_table,"a"
	.align		3
	.long		0b, 3b
	.long		1b, 3b
	.previous") ("=&r") 2 [
                        (reg/v:SI 153 [ address ])
                        (const_int -11 [0xfffffffffffffff5])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 152 [ data ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("1") 0)
                    ] 8644688))
            (clobber (mem:BLK (scratch) [0 A8]))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 24 [cc] 134 136 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; live  gen 	 134 136 152
;; live  kill	 24 [cc]

;; Pred edge  14 [72.0%] 
(code_label 97 94 98 16 25 "" [1 uses])

(note 98 97 99 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 100 16 arch/arm/kernel/swp_emulate.c:151 (parallel [
            (set (reg/v:SI 136 [ res ])
                (asm_operands/v:SI ("	mov		%2, %1
0:	ldrex	%1, [%3]
1:	strex	%0, %2, [%3]
	cmp		%0, #0
	movne		%0, %4
2:
	.section	 .fixup,"ax"
	.align		2
3:	mov		%0, %5
	b		2b
	.previous
	.section	 __ex_table,"a"
	.align		3
	.long		0b, 3b
	.long		1b, 3b
	.previous") ("=&r") 0 [
                        (reg/v:SI 153 [ address ])
                        (const_int -11 [0xfffffffffffffff5])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 152 [ data ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("1") 0)
                    ] 8644944))
            (set (reg/v:SI 152 [ data ])
                (asm_operands/v:SI ("	mov		%2, %1
0:	ldrex	%1, [%3]
1:	strex	%0, %2, [%3]
	cmp		%0, #0
	movne		%0, %4
2:
	.section	 .fixup,"ax"
	.align		2
3:	mov		%0, %5
	b		2b
	.previous
	.section	 __ex_table,"a"
	.align		3
	.long		0b, 3b
	.long		1b, 3b
	.previous") ("=r") 1 [
                        (reg/v:SI 153 [ address ])
                        (const_int -11 [0xfffffffffffffff5])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 152 [ data ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("1") 0)
                    ] 8644944))
            (set (reg/v:SI 134 [ temp.420 ])
                (asm_operands/v:SI ("	mov		%2, %1
0:	ldrex	%1, [%3]
1:	strex	%0, %2, [%3]
	cmp		%0, #0
	movne		%0, %4
2:
	.section	 .fixup,"ax"
	.align		2
3:	mov		%0, %5
	b		2b
	.previous
	.section	 __ex_table,"a"
	.align		3
	.long		0b, 3b
	.long		1b, 3b
	.previous") ("=&r") 2 [
                        (reg/v:SI 153 [ address ])
                        (const_int -11 [0xfffffffffffffff5])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 152 [ data ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("1") 0)
                    ] 8644944))
            (clobber (mem:BLK (scratch) [0 A8]))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 100 99 101 17 26 "" [0 uses])

(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 17 arch/arm/kernel/swp_emulate.c:153 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ res ])
            (const_int -11 [0xfffffffffffffff5]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 103 102 104 17 arch/arm/kernel/swp_emulate.c:153 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 17 -> ( 20 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157


;; Succ edge  20 [100.0%] 
;; Succ edge  18 [0.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 140 141 181 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; live  gen 	 24 [cc] 140 141 181 182
;; live  kill	

;; Pred edge  17 [0.0%]  (fallthru)
(note 104 103 105 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 18 include/linux/thread_info.h:84 (set (reg/f:SI 181 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 139 [ D.26290 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 18 include/linux/thread_info.h:84 (set (reg/f:SI 141 [ D.26284 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 181 [ <variable>.task ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 107 106 108 18 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 140 [ D.26286 ])
        (mem/v:SI (reg/f:SI 141 [ D.26284 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 18 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 182)
        (and:SI (reg:SI 140 [ D.26286 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 109 108 110 18 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 110 109 111 18 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 18 -> ( 24 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 139 151 152 153 156 157


;; Succ edge  24 [0.0%] 
;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  18 [100.0%]  (fallthru)
(note 111 110 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(call_insn 112 111 115 19 arch/arm/kernel/swp_emulate.c:156 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_cond_resched") [flags 0x41] <function_decl 0x1111f080 _cond_resched>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))
;; End of basic block 19 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 151 152 153 156 157


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 17) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 151 152 153 156 157
;; live  gen 	 24 [cc] 133
;; live  kill	

;; Pred edge  17 [100.0%] 
(code_label 115 112 116 20 27 "" [1 uses])

(note 116 115 117 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 118 20 arch/arm/kernel/swp_emulate.c:156 (set (reg/v:SI 133 [ res.421 ])
        (reg/v:SI 136 [ res ])) 167 {*arm_movsi_insn} (nil))

(insn 118 117 119 20 arch/arm/kernel/swp_emulate.c:159 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ res.421 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 119 118 120 20 arch/arm/kernel/swp_emulate.c:159 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 21 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 151 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 151 152 153 156 157


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 151 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 151 152 153 156 157
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 120 119 121 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 121 120 122 21 arch/arm/kernel/swp_emulate.c:165 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8646735)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 122 121 123 21 arch/arm/kernel/swp_emulate.c:167 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 151 [ type ])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 123 122 124 21 arch/arm/kernel/swp_emulate.c:167 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 132)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157


;; Succ edge  22 [28.0%]  (fallthru)
;; Succ edge  23 [72.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 183 184 185 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; live  gen 	 183 184 185 186
;; live  kill	

;; Pred edge  21 [28.0%]  (fallthru)
(note 124 123 125 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 125 124 126 22 arch/arm/kernel/swp_emulate.c:168 (set (reg/f:SI 183)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 126 125 127 22 arch/arm/kernel/swp_emulate.c:168 (set (reg/f:SI 184)
        (reg/f:SI 183)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 127 126 128 22 arch/arm/kernel/swp_emulate.c:168 (set (reg:SI 185 [ swpbcounter ])
        (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 8 [0x8])) [0 swpbcounter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 128 127 129 22 arch/arm/kernel/swp_emulate.c:168 (set (reg:SI 186)
        (plus:SI (reg:SI 185 [ swpbcounter ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 129 128 132 22 arch/arm/kernel/swp_emulate.c:168 (set (mem/c/i:SI (plus:SI (reg/f:SI 183)
                (const_int 8 [0x8])) [0 swpbcounter+0 S4 A32])
        (reg:SI 186)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 187 188 189 190
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; live  gen 	 187 188 189 190
;; live  kill	

;; Pred edge  21 [72.0%] 
(code_label 132 129 133 23 29 "" [1 uses])

(note 133 132 134 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 135 23 arch/arm/kernel/swp_emulate.c:170 (set (reg/f:SI 187)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 135 134 136 23 arch/arm/kernel/swp_emulate.c:170 (set (reg/f:SI 188)
        (reg/f:SI 187)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 136 135 137 23 arch/arm/kernel/swp_emulate.c:170 (set (reg:SI 189 [ swpcounter ])
        (mem/c/i:SI (plus:SI (reg/f:SI 187)
                (const_int 12 [0xc])) [0 swpcounter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 23 arch/arm/kernel/swp_emulate.c:170 (set (reg:SI 190)
        (plus:SI (reg:SI 189 [ swpcounter ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 138 137 141 23 arch/arm/kernel/swp_emulate.c:170 (set (mem/c/i:SI (plus:SI (reg/f:SI 187)
                (const_int 12 [0xc])) [0 swpcounter+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 18 20) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 152 153 156 157
;; live  gen 	 133
;; live  kill	

;; Pred edge  18 [0.0%] 
;; Pred edge  20 [50.0%] 
(code_label 141 138 142 24 28 "" [2 uses])

(note 142 141 143 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 24 arch/arm/kernel/swp_emulate.c:170 (set (reg/v:SI 133 [ res.421 ])
        (reg/v:SI 136 [ res ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 24 22 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 152 153 156 157
;; live  gen 	 142
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru)
(code_label 144 143 145 25 30 "" [0 uses])

(note 145 144 146 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 25 arch/arm/kernel/swp_emulate.c:173 (set (reg:SI 142 [ D.26280 ])
        (reg/v:SI 133 [ res.421 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 13 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 152 153 156 157
;; live  gen 	 24 [cc] 150
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 147 146 148 26 24 "" [0 uses])

(note 148 147 149 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 150 26 arch/arm/kernel/swp_emulate.c:210 (set (reg/v:SI 150 [ res ])
        (reg:SI 142 [ D.26280 ])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 151 26 arch/arm/kernel/swp_emulate.c:213 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.26280 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 151 150 152 26 arch/arm/kernel/swp_emulate.c:213 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2200 [0x898])
        (nil)))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 152 153 156 157
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 152 153 156 157


;; Succ edge  27 [78.0%]  (fallthru)
;; Succ edge  28 [22.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 156 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 156 157
;; lr  def 	 191 192 193 194
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 156 157
;; live  gen 	 191 192 193 194
;; live  kill	

;; Pred edge  26 [78.0%]  (fallthru)
(note 152 151 153 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 27 arch/arm/kernel/swp_emulate.c:219 (set (reg:SI 191 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 154 153 155 27 arch/arm/kernel/swp_emulate.c:219 (set (reg:SI 192)
        (plus:SI (reg:SI 191 [ <variable>.uregs+60 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 155 154 156 27 arch/arm/kernel/swp_emulate.c:219 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 156 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 192)) 167 {*arm_movsi_insn} (nil))

(insn 156 155 157 27 arch/arm/kernel/swp_emulate.c:220 (set (reg:SI 193)
        (and:SI (reg/v:SI 157 [ instr ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 157 156 158 27 arch/arm/kernel/swp_emulate.c:220 (set (reg:SI 194)
        (lshiftrt:SI (reg:SI 193)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 158 157 161 27 arch/arm/kernel/swp_emulate.c:220 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 194)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 156 [ regs ])) [0 <variable>.uregs S4 A32])
        (reg/v:SI 152 [ data ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 27 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 153 156
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [22.0%] 
(code_label 161 158 162 28 31 "" [1 uses])

(note 162 161 163 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 28 arch/arm/kernel/swp_emulate.c:221 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.26280 ])
            (const_int -14 [0xfffffffffffffff2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 164 163 165 28 arch/arm/kernel/swp_emulate.c:221 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil)))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153 156
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 153 156


;; Succ edge  29 (fallthru)
;; Succ edge  30 [100.0%] 

;; Start of basic block ( 28 9) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 156
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  28 (fallthru)
;; Pred edge  9 [50.0%] 
(code_label 165 164 166 29 20 "" [1 uses])

(note 166 165 167 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 167 166 168 29 arch/arm/kernel/swp_emulate.c:226 (set (reg:SI 0 r0)
        (reg/v/f:SI 156 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 29 arch/arm/kernel/swp_emulate.c:226 (set (reg:SI 1 r1)
        (reg/v:SI 153 [ address ])) 167 {*arm_movsi_insn} (nil))

(call_insn 169 168 170 29 arch/arm/kernel/swp_emulate.c:226 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_segfault") [flags 0x3] <function_decl 0x1149cf80 set_segfault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 27 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 155
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  28 [100.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 170 169 171 30 32 "" [1 uses])

(note 171 170 172 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 172 171 176 30 arch/arm/kernel/swp_emulate.c:230 (set (reg:SI 155 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 176 172 182 30 arch/arm/kernel/swp_emulate.c:230 (set (reg/i:SI 0 r0)
        (reg:SI 155 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 182 176 0 30 arch/arm/kernel/swp_emulate.c:230 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 30 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 25.
deleting insn with uid = 25.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 47.
deleting insn with uid = 47.
rescanning insn with uid = 48.
deleting insn with uid = 48.
rescanning insn with uid = 49.
deleting insn with uid = 49.
rescanning insn with uid = 50.
deleting insn with uid = 50.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 52.
deleting insn with uid = 52.
rescanning insn with uid = 62.
deleting insn with uid = 62.
rescanning insn with uid = 74.
deleting insn with uid = 74.
rescanning insn with uid = 126.
deleting insn with uid = 126.
rescanning insn with uid = 127.
deleting insn with uid = 127.
rescanning insn with uid = 135.
deleting insn with uid = 135.
rescanning insn with uid = 136.
deleting insn with uid = 136.
rescanning insn with uid = 150.
deleting insn with uid = 150.
rescanning insn with uid = 163.
deleting insn with uid = 163.
rescanning insn with uid = 189.
deleting insn with uid = 189.
ending the processing of deferred insns

;; Function proc_read_status (proc_read_status)[0:1323]


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [29.0%]  (fallthru) 4 [71.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  2 [29.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [71.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)


proc_read_status

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,11u} r1={9d,5u} r2={9d,5u} r3={5d,1u} r11={1d,4u} r12={5d} r13={1d,8u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,2u} r25={1d,4u} r26={1d,4u,1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={2d,3u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,4u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 612{525d,86u,1e} in 55{51 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 41 to worklist
  Adding insn 34 to worklist
  Adding insn 25 to worklist
  Adding insn 16 to worklist
  Adding insn 47 to worklist
  Adding insn 71 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
Finished finding needed instructions:
processing block 4 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 65 to worklist
  Adding insn 61 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 146 147 148
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147 148
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;; Following path with 52 sets: 2 3 
deferring rescan insn with uid = 13.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 21.
deferring rescan insn with uid = 24.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 33.
deferring rescan insn with uid = 37.
deferring rescan insn with uid = 38.
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 50.
;; Following path with 11 sets: 4 
deferring rescan insn with uid = 65.


try_optimize_cfg iteration 1



proc_read_status

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,11u} r1={9d,5u} r2={9d,5u} r3={5d,1u} r11={1d,4u} r12={5d} r13={1d,8u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,2u} r25={1d,4u} r26={1d,4u,1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={2d,3u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,4u} r145={1d,1u} r146={1d,2u} r147={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 612{525d,86u,1e} in 55{51 regular + 4 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137 139 140 141 142 144 145 146 147 148 150 151 152 153 154 155 156 157 158 159
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 134 135 137 139 140 141 142 144 145 146 147 148 150 151 152 153 154 155 156 157 158 159
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/kernel/swp_emulate.c:83 (set (reg/v/f:SI 144 [ page ])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/swp_emulate.c:83 (set (reg/v/f:SI 145 [ start ])
        (reg:SI 1 r1 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/swp_emulate.c:83 (set (reg/v:SI 146 [ off ])
        (reg:SI 2 r2 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/swp_emulate.c:83 (set (reg/v:SI 147 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 arch/arm/kernel/swp_emulate.c:83 (set (reg/v/f:SI 148 [ eof ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 eof+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 eof+0 S4 A32])
        (nil)))

(note 8 6 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/swp_emulate.c:87 (set (reg/f:SI 150)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114cf0f0>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/swp_emulate.c:87 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/swp_emulate.c:87 (set (reg:SI 0 r0)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/swp_emulate.c:87 (set (reg:SI 1 r1)
        (reg/f:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114cf0f0>)
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/swp_emulate.c:87 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 12 [0xc])) [0 swpcounter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 2 arch/arm/kernel/swp_emulate.c:87 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 17 16 18 2 arch/arm/kernel/swp_emulate.c:87 (set (reg:SI 152)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/kernel/swp_emulate.c:87 (set (reg:SI 142 [ D.25978 ])
        (reg:SI 152)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/swp_emulate.c:87 (set (reg/v/f:SI 135 [ p.446 ])
        (plus:SI (reg/v/f:SI 144 [ page ])
            (reg:SI 152))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 2 arch/arm/kernel/swp_emulate.c:88 (set (reg/f:SI 153)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114cf2a0>)) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/kernel/swp_emulate.c:88 (set (reg/f:SI 154)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 22 21 23 2 arch/arm/kernel/swp_emulate.c:88 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ p.446 ])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/kernel/swp_emulate.c:88 (set (reg:SI 1 r1)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114cf2a0>)
        (nil)))

(insn 24 23 25 2 arch/arm/kernel/swp_emulate.c:88 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 8 [0x8])) [0 swpbcounter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 26 2 arch/arm/kernel/swp_emulate.c:88 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 26 25 27 2 arch/arm/kernel/swp_emulate.c:88 (set (reg:SI 155)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 arch/arm/kernel/swp_emulate.c:88 (set (reg:SI 141 [ D.25981 ])
        (reg:SI 155)) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 2 arch/arm/kernel/swp_emulate.c:88 (set (reg/v/f:SI 134 [ p.447 ])
        (plus:SI (reg/v/f:SI 135 [ p.446 ])
            (reg:SI 155))) 4 {*arm_addsi3} (nil))

(insn 29 28 30 2 arch/arm/kernel/swp_emulate.c:89 (set (reg/f:SI 156)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11523330>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 2 arch/arm/kernel/swp_emulate.c:89 (set (reg/f:SI 157)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 31 30 32 2 arch/arm/kernel/swp_emulate.c:89 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ p.447 ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 arch/arm/kernel/swp_emulate.c:89 (set (reg:SI 1 r1)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11523330>)
        (nil)))

(insn 33 32 34 2 arch/arm/kernel/swp_emulate.c:89 (set (reg:SI 2 r2)
        (mem/c/i:SI (reg/f:SI 151) [0 abtcounter+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 35 2 arch/arm/kernel/swp_emulate.c:89 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 35 34 36 2 arch/arm/kernel/swp_emulate.c:89 (set (reg:SI 158)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 arch/arm/kernel/swp_emulate.c:89 (set (reg:SI 140 [ D.25984 ])
        (reg:SI 158)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 2 arch/arm/kernel/swp_emulate.c:89 (set (reg/v/f:SI 137 [ p ])
        (plus:SI (reg/v/f:SI 134 [ p.447 ])
            (reg:SI 158))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 2 arch/arm/kernel/swp_emulate.c:90 (set (reg/f:SI 159)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 39 38 40 2 arch/arm/kernel/swp_emulate.c:90 (set (reg:SI 139 [ previous_pid.323 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 4 [0x4])) [0 previous_pid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 2 arch/arm/kernel/swp_emulate.c:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ previous_pid.323 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 41 40 42 2 arch/arm/kernel/swp_emulate.c:90 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147 148


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 137 138 160 161
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 42 41 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 3 arch/arm/kernel/swp_emulate.c:91 (set (reg/f:SI 160)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11523630>)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 3 arch/arm/kernel/swp_emulate.c:91 (set (reg:SI 0 r0)
        (reg/v/f:SI 137 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/kernel/swp_emulate.c:91 (set (reg:SI 1 r1)
        (reg/f:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11523630>)
        (nil)))

(insn 46 45 47 3 arch/arm/kernel/swp_emulate.c:91 (set (reg:SI 2 r2)
        (reg:SI 139 [ previous_pid.323 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 3 arch/arm/kernel/swp_emulate.c:91 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 49 3 arch/arm/kernel/swp_emulate.c:91 (set (reg:SI 161)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 3 arch/arm/kernel/swp_emulate.c:91 (set (reg:SI 138 [ D.25989 ])
        (reg:SI 161)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 3 arch/arm/kernel/swp_emulate.c:91 (set (reg/v/f:SI 137 [ p ])
        (plus:SI (reg/v/f:SI 137 [ p ])
            (reg:SI 161))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 146 147 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 145 146 147 148


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 144 145 146 147 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 145 146 147 148
;; lr  def 	 0 [r0] 24 [cc] 133 136 143 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 145 146 147 148
;; live  gen 	 0 [r0] 24 [cc] 133 136 143 162 163 164
;; live  kill	

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 51 50 52 4 37 "" [1 uses])

(note 52 51 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 arch/arm/kernel/swp_emulate.c:93 (set (reg:SI 162)
        (minus:SI (reg/v/f:SI 137 [ p ])
            (reg/v/f:SI 144 [ page ]))) 28 {*arm_subsi3_insn} (nil))

(insn 54 53 55 4 arch/arm/kernel/swp_emulate.c:93 (set (reg/v:SI 136 [ len ])
        (minus:SI (reg:SI 162)
            (reg/v:SI 146 [ off ]))) 28 {*arm_subsi3_insn} (nil))

(insn 55 54 56 4 arch/arm/kernel/swp_emulate.c:93 (set (reg/v:SI 133 [ len.448 ])
        (smax:SI (reg/v:SI 136 [ len ])
            (const_int 0 [0x0]))) 101 {*smax_0} (nil))

(insn 56 55 57 4 arch/arm/kernel/swp_emulate.c:97 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ len.448 ])
            (reg/v:SI 147 [ count ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 57 56 58 4 arch/arm/kernel/swp_emulate.c:97 (set (reg:SI 163)
        (le:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 58 57 59 4 arch/arm/kernel/swp_emulate.c:97 (set (mem:SI (reg/v/f:SI 148 [ eof ]) [0 S4 A32])
        (reg:SI 163)) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 4 arch/arm/kernel/swp_emulate.c:98 (set (reg:SI 164)
        (plus:SI (reg/v/f:SI 144 [ page ])
            (reg/v:SI 146 [ off ]))) 4 {*arm_addsi3} (nil))

(insn 60 59 61 4 arch/arm/kernel/swp_emulate.c:98 (set (mem/f:SI (reg/v/f:SI 145 [ start ]) [0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (nil))

(insn 61 60 65 4 arch/arm/kernel/swp_emulate.c:101 (set (reg:SI 143 [ <result> ])
        (reg/v:SI 133 [ len.448 ])) 167 {*arm_movsi_insn} (nil))

(insn 65 61 71 4 arch/arm/kernel/swp_emulate.c:101 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ len.448 ])) 167 {*arm_movsi_insn} (nil))

(insn 71 65 0 4 arch/arm/kernel/swp_emulate.c:101 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 13.
deleting insn with uid = 13.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 21.
deleting insn with uid = 21.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 33.
deleting insn with uid = 33.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 38.
deleting insn with uid = 38.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 50.
deleting insn with uid = 50.
rescanning insn with uid = 65.
deleting insn with uid = 65.
ending the processing of deferred insns
