
;; Function sched_clock_poll (sched_clock_poll)[0:751]

deferring rescan insn with uid = 10.
deferring rescan insn with uid = 15.
deferring rescan insn with uid = 18.
starting the processing of deferred insns
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 18.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("round_jiffies") [flags 0x41] <function_decl 0x10bb5880 round_jiffies>)

   after canon_rtx address: (symbol_ref:SI ("round_jiffies") [flags 0x41] <function_decl 0x10bb5880 round_jiffies>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=15
  mem: (symbol_ref:SI ("mod_timer") [flags 0x41] <function_decl 0x10bace80 mod_timer>)

   after canon_rtx address: (symbol_ref:SI ("mod_timer") [flags 0x41] <function_decl 0x10bace80 mod_timer>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (mem/f/c/i:SI (reg/f:SI 3 r3 [139]) [0 sched_clock_update_fn+0 S4 A32])

   after canon_rtx address: (mem/f/c/i:SI (reg/f:SI 3 r3 [139]) [0 sched_clock_update_fn+0 S4 A32])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])

   after cselib_expand address: (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 sched_clock_update_fn+0 S4 A32])

   after canon_rtx address: (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 sched_clock_update_fn+0 S4 A32])
 no cselib val - should be a wild read.
 adding wild read, canon_address failure.
  mem: (reg/f:SI 3 r3 [139])

   after canon_rtx address: (reg/f:SI 3 r3 [139])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=31
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


sched_clock_poll

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={6d,4u} r1={5d,1u} r2={4d} r3={7d,3u} r4={1d,2u} r12={3d} r13={2d,6u} r14={4d,2u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 383{365d,18u,0e} in 11{8 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 28 4 29 2 arch/arm/kernel/sched_clock.c:22 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 29 28 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 29 3 2 NOTE_INSN_DELETED)

(note 3 2 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 12 2 NOTE_INSN_DELETED)

(note 12 8 17 2 NOTE_INSN_DELETED)

(note 17 12 6 2 NOTE_INSN_DELETED)

(insn 6 17 7 2 arch/arm/kernel/sched_clock.c:23 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10b8ce40 jiffies>)
        (nil)))

(insn 7 6 9 2 arch/arm/kernel/sched_clock.c:23 (set (reg:SI 3 r3 [orig:134 jiffies.207 ] [134])
        (mem/v/c/i:SI (reg/f:SI 3 r3 [136]) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 7 10 2 arch/arm/kernel/sched_clock.c:23 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 0 r0 [ wrap_ticks ])
            (reg:SI 3 r3 [orig:134 jiffies.207 ] [134]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:134 jiffies.207 ] [134])
        (nil)))

(call_insn 10 9 11 2 arch/arm/kernel/sched_clock.c:23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("round_jiffies") [flags 0x41] <function_decl 0x10bb5880 round_jiffies>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 13 2 arch/arm/kernel/sched_clock.c:23 (set (reg:SI 1 r1 [orig:133 D.13764 ] [133])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 13 11 15 2 arch/arm/kernel/sched_clock.c:23 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 15 13 16 2 arch/arm/kernel/sched_clock.c:23 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("mod_timer") [flags 0x41] <function_decl 0x10bace80 mod_timer>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 18 2 arch/arm/kernel/sched_clock.c:24 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 18 16 30 2 arch/arm/kernel/sched_clock.c:24 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 3 r3 [139]) [0 sched_clock_update_fn+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 3 r3 [139])
        (nil))
    (nil))

(note 30 18 31 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 31 30 32 2 arch/arm/kernel/sched_clock.c:25 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 32 31 26)

(note 26 32 27 NOTE_INSN_DELETED)

(note 27 26 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function sched_clock_postinit (sched_clock_postinit)[0:753] (unlikely executed)

deferring rescan insn with uid = 7.
starting the processing of deferred insns
verify found no changes in insn with uid = 7.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:SI (reg/f:SI 3 r3 [133])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [133])
    (const_int 20 [0x14]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 20 [0x14])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 20 [0x14])))
  gid=0 offset=20 
 processing const load gid=0[20..24)
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (symbol_ref:SI ("sched_clock_poll") [flags 0x3] <function_decl 0x10f73b00 sched_clock_poll>)

   after canon_rtx address: (symbol_ref:SI ("sched_clock_poll") [flags 0x3] <function_decl 0x10f73b00 sched_clock_poll>)
  gid=1 offset=0 
 processing const load gid=1[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


sched_clock_postinit

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={2d} r2={2d} r3={3d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 131{124d,7u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 17 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 17 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/sched_clock.c:73 (set (reg/f:SI 3 r3 [133])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 6 5 18 2 arch/arm/kernel/sched_clock.c:73 (set (reg:SI 0 r0)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [133])
                (const_int 20 [0x14])) [0 sched_clock_timer.data+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [133])
        (nil)))

(note 18 6 19 2 NOTE_INSN_EPILOGUE_BEG)

(insn 19 18 7 2 arch/arm/kernel/sched_clock.c:74 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 7 19 8 2 arch/arm/kernel/sched_clock.c:73 (parallel [
            (call (mem:SI (symbol_ref:SI ("sched_clock_poll") [flags 0x3] <function_decl 0x10f73b00 sched_clock_poll>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 8 7 16)

(note 16 8 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function init_sched_clock (init_sched_clock)[0:752] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 7 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

**scanning insn=177
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=3762 offset = 16
 processing cselib store [16..20)
mems_found = 1, cannot_delete = false

**scanning insn=4
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))
  varying cselib base=3762 offset = 28
 processing cselib store [28..32)
    trying store in insn=3 gid=-1[16..20)
mems_found = 1, cannot_delete = false

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=152
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=3762 offset = 16
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-32 S4 A32])
 processing cselib load against insn 4
 processing cselib load against insn 3
removing from active insn=3 has store
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/f:SI 12 ip [146])

   after canon_rtx address: (reg/f:SI 12 ip [146])
expanding: r12 into: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
  gid=0 offset=0 
 processing const base store gid=0[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=15
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3762 offset = 0
 processing cselib store [0..4)
    trying store in insn=4 gid=-1[28..32)
mems_found = 1, cannot_delete = false

**scanning insn=20
  mem: (symbol_ref:SI ("clocks_calc_mult_shift") [flags 0x41] <function_decl 0x10c03100 clocks_calc_mult_shift>)

   after canon_rtx address: (symbol_ref:SI ("clocks_calc_mult_shift") [flags 0x41] <function_decl 0x10c03100 clocks_calc_mult_shift>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 27

**scanning insn=28
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=2 offset = 20
 processing cselib store [20..24)
mems_found = 1, cannot_delete = false

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 37

**scanning insn=38
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=2 offset = 20
 processing cselib store [20..24)
mems_found = 1, cannot_delete = false

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=50
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))
  varying cselib base=1 offset = 28
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 28 [0x1c])) [0 %sfp+-20 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=162
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=150
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=1 offset = 24
 processing cselib store [24..28)
mems_found = 1, cannot_delete = false

**scanning insn=51
  mem: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsl") [flags 0x41])
  gid=3 offset=0 
 processing const load gid=3[0..4)
const call 51
removing from active insn=150 has store

**scanning insn=43
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 16 [0x10]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 16 [0x10]))
  varying cselib base=2 offset = 16
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
        (const_int 16 [0x10])) [0 <variable>.mult+0 S4 A64])
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=45
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 20 [0x14]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
    (const_int 20 [0x14]))
  varying cselib base=2 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
        (const_int 20 [0x14])) [0 <variable>.shift+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=154
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=6 offset = 40
 processing cselib store [40..48)
mems_found = 1, cannot_delete = false

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=64
  mem: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])
  gid=4 offset=0 
 processing const load gid=4[0..4)
const call 64
removing from active insn=154 has store

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=155
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=9 offset = 40
 processing cselib store [40..44)
mems_found = 1, cannot_delete = false

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=156
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))
  varying cselib base=9 offset = 44
 processing cselib store [44..48)
    trying store in insn=155 gid=-1[40..44)
mems_found = 1, cannot_delete = false

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=168
mems_found = 0, cannot_delete = true

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=159
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=9 offset = 40
 processing cselib load mem:(mem/c:DI (plus:SI (reg/f:SI 13 sp)
        (const_int 40 [0x28])) [0 %sfp+-8 S8 A64])
 processing cselib load against insn 156
removing from active insn=156 has store
 processing cselib load against insn 155
removing from active insn=155 has store
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=157
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=9 offset = 32
 processing cselib store [32..40)
mems_found = 1, cannot_delete = false

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=160
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=9 offset = 32
 processing cselib store [32..40)
    trying store in insn=157 gid=-1[32..40)
Locally deleting insn 157 
deferring deletion of insn with uid = 157.
mems_found = 1, cannot_delete = false

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=80
  mem: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_llsr") [flags 0x41])
  gid=4 offset=0 
 processing const load gid=4[0..4)
const call 80
removing from active insn=160 has store

**scanning insn=86
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=14 offset = 20
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 20 [0x14])) [0 %sfp+-28 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=151
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=14 offset = 24
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 24 [0x18])) [0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=83
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=14 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = false

**scanning insn=82
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=14 offset = 0
 processing cselib store [0..8)
    trying store in insn=83 gid=-1[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=85
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))
  varying cselib base=14 offset = 28
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 28 [0x1c])) [0 %sfp+-20 S4 A32])
 processing cselib load against insn 82
 processing cselib load against insn 83
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=88
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=5 offset=0 
 processing const load gid=5[0..4)

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=91
  mem: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])
  gid=2 offset=0 
 processing const load gid=2[0..4)
const call 91

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
  mem: (symbol_ref:SI ("msecs_to_jiffies") [flags 0x41] <function_decl 0x10b84c00 msecs_to_jiffies>)

   after canon_rtx address: (symbol_ref:SI ("msecs_to_jiffies") [flags 0x41] <function_decl 0x10b84c00 msecs_to_jiffies>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (plus:SI (reg/f:SI 3 r3 [188])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [188])
    (const_int 20 [0x14]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 20 [0x14])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 20 [0x14])))
  gid=7 offset=20 
 processing const base store gid=7[20..24)
mems_found = 1, cannot_delete = false

**scanning insn=161
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=17 offset = 16
 processing cselib load mem:(mem/c:SI (plus:SI (reg/f:SI 13 sp)
        (const_int 16 [0x10])) [0 %sfp+-32 S4 A32])
 processing cselib load against insn 98
mems_found = 0, cannot_delete = true

**scanning insn=99
  mem: (reg:SI 9 r9)

   after canon_rtx address: (reg:SI 9 r9)
expanding: r9 into: NULL

   after cselib_expand address: (reg:SI 9 r9)

   after canon_rtx address: (reg:SI 9 r9)
  varying cselib base=18 offset = 0
 processing cselib load mem:(mem:SI (reg:SI 9 r9) [0 S4 A32])
 processing cselib load against insn 98
removing from active insn=98 has store

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=101
  mem: (reg/v/f:SI 4 r4 [orig:142 cd ] [142])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
expanding: r4 into: NULL

   after cselib_expand address: (reg/v/f:SI 4 r4 [orig:142 cd ] [142])

   after canon_rtx address: (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
  varying cselib base=2 offset = 0
 processing cselib store [0..8)
mems_found = 1, cannot_delete = false

**scanning insn=181
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
dse: local deletions = 1, global deletions = 0, spill deletions = 0


init_sched_clock

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,18u} r1={20d,13u} r2={17d,7u} r3={18d,7u} r4={2d,7u,2d} r5={5d,13u,3d} r6={4d,7u} r7={3d,6u} r8={4d,9u} r9={5d,8u} r10={3d,6u} r11={3d,6u} r12={15d,4u} r13={3d,38u} r14={11d,2u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={14d,2u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} 
;;    total ref usage 1405{1247d,153u,5e} in 83{73 regular + 10 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 177 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 177 7 178 2 arch/arm/kernel/sched_clock.c:29 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f 178 177 179 2 arch/arm/kernel/sched_clock.c:29 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -52 [0xffffffffffffffcc]))) -1 (nil))

(note 179 178 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 179 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 12 2 NOTE_INSN_DELETED)

(note 12 11 5 2 NOTE_INSN_DELETED)

(insn 5 12 2 2 arch/arm/kernel/sched_clock.c:29 (set (reg/v:SI 5 r5 [orig:145 rate ] [145])
        (reg:SI 3 r3 [ rate ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ rate ])
        (nil)))

(insn 2 5 3 2 arch/arm/kernel/sched_clock.c:29 (set (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
        (reg:SI 0 r0 [ cd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cd ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/sched_clock.c:29 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-32 S4 A32])
        (reg:SI 1 r1 [ update ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ update ])
        (nil)))

(insn 4 3 16 2 arch/arm/kernel/sched_clock.c:29 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-20 S4 A32])
        (reg:SI 2 r2 [ clock_bits ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ clock_bits ])
        (nil)))

(insn 16 4 17 2 arch/arm/kernel/sched_clock.c:37 (set (reg:SI 0 r0)
        (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 2 arch/arm/kernel/sched_clock.c:37 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (nil))

(insn 18 17 19 2 arch/arm/kernel/sched_clock.c:37 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:145 rate ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 146 2 arch/arm/kernel/sched_clock.c:37 (set (reg:SI 3 r3)
        (const_int 1000000000 [0x3b9aca00])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1000000000 [0x3b9aca00])
        (nil)))

(insn 146 19 152 2 arch/arm/kernel/sched_clock.c:34 (set (reg/f:SI 12 ip [146])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 152 146 10 2 arch/arm/kernel/sched_clock.c:34 (set (reg:SI 6 r6)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 152 145 2 arch/arm/kernel/sched_clock.c:34 (set (mem/f/c/i:SI (reg/f:SI 12 ip [146]) [0 sched_clock_update_fn+0 S4 A32])
        (reg:SI 6 r6)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [146])
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (nil))))

(insn 145 10 15 2 arch/arm/kernel/sched_clock.c:37 (set (reg:SI 12 ip [150])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 15 145 20 2 arch/arm/kernel/sched_clock.c:37 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [150])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [150])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 20 15 21 2 arch/arm/kernel/sched_clock.c:37 (parallel [
            (call (mem:SI (symbol_ref:SI ("clocks_calc_mult_shift") [flags 0x41] <function_decl 0x10c03100 clocks_calc_mult_shift>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 21 20 22 2 arch/arm/kernel/sched_clock.c:40 (set (reg:SI 3 r3 [151])
        (const_int 3999999 [0x3d08ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 3999999 [0x3d08ff])
        (nil)))

(insn 22 21 23 2 arch/arm/kernel/sched_clock.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:145 rate ] [145])
            (reg:SI 3 r3 [151]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [151])
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 5 r5 [orig:145 rate ] [145])
                (const_int 3999999 [0x3d08ff]))
            (nil))))

(jump_insn 23 22 24 2 arch/arm/kernel/sched_clock.c:40 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 3 arch/arm/kernel/sched_clock.c:41 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:145 rate ] [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:145 rate ] [145])
        (nil)))

(insn 26 25 27 3 arch/arm/kernel/sched_clock.c:41 (set (reg:SI 1 r1)
        (const_int 1000000 [0xf4240])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 27 26 28 3 arch/arm/kernel/sched_clock.c:41 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 28 27 30 3 arch/arm/kernel/sched_clock.c:41 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-28 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 5 r5 [orig:145 rate ] [145])
                (const_int 1000000 [0xf4240]))
            (nil))))

(insn 30 28 138 3 arch/arm/kernel/sched_clock.c:42 (set (reg/v:SI 12 ip [orig:137 r_unit ] [137])
        (const_int 77 [0x4d])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 77 [0x4d])
        (nil)))

(jump_insn 138 30 139 3 (set (pc)
        (label_ref 41)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 12 [ip] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 139 138 33)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  2 [61.0%] 
(code_label 33 139 34 4 10 "" [1 uses])

(note 34 33 35 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 4 arch/arm/kernel/sched_clock.c:44 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:145 rate ] [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:145 rate ] [145])
        (nil)))

(insn 36 35 37 4 arch/arm/kernel/sched_clock.c:44 (set (reg:SI 1 r1)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 37 36 38 4 arch/arm/kernel/sched_clock.c:44 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 38 37 40 4 arch/arm/kernel/sched_clock.c:44 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-28 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 5 r5 [orig:145 rate ] [145])
                (const_int 1000 [0x3e8]))
            (nil))))

(insn 40 38 41 4 arch/arm/kernel/sched_clock.c:45 (set (reg/v:SI 12 ip [orig:137 r_unit ] [137])
        (const_int 107 [0x6b])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 107 [0x6b])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 12 [ip] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 41 40 42 5 11 "" [1 uses])

(note 42 41 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 52 42 55 5 NOTE_INSN_DELETED)

(note 55 52 59 5 NOTE_INSN_DELETED)

(note 59 55 111 5 NOTE_INSN_DELETED)

(note 111 59 112 5 NOTE_INSN_DELETED)

(note 112 111 72 5 NOTE_INSN_DELETED)

(note 72 112 81 5 NOTE_INSN_DELETED)

(note 81 72 92 5 NOTE_INSN_DELETED)

(note 92 81 93 5 NOTE_INSN_DELETED)

(note 93 92 96 5 NOTE_INSN_DELETED)

(note 96 93 50 5 NOTE_INSN_DELETED)

(insn 50 96 162 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 162 50 163 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 163 162 150 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 150 163 51 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(call_insn/u 51 150 43 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 43 51 164 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 5 r5 [orig:158 <variable>.mult ] [158])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
                (const_int 16 [0x10])) [0 <variable>.mult+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
                (const_int 16 [0x10])) [0 <variable>.mult+0 S4 A64])
        (nil)))

(insn 164 43 165 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 8 r8)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 165 164 45 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 9 r9 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 45 165 110 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 6 r6 [orig:134 shift.205 ] [134])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
                (const_int 20 [0x14])) [0 <variable>.shift+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:142 cd ] [142])
                (const_int 20 [0x14])) [0 <variable>.shift+0 S4 A32])
        (nil)))

(insn 110 45 63 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 7 r7 [orig:191 D.13954+4 ] [191])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 63 110 166 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 2 r2)
        (reg:SI 6 r6 [orig:134 shift.205 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 166 63 167 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8)
                        (reg:SI 0 r0))
                    (reg:SI 8 r8)))
            (set (reg:SI 8 r8)
                (plus:SI (reg:SI 8 r8)
                    (reg:SI 0 r0)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 167 166 154 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 9 r9 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [+4 ])
                (reg:SI 1 r1 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 154 167 58 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-8 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn 58 154 60 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:DI 0 r0 [170])
        (mult:DI (zero_extend:DI (reg:SI 8 r8))
            (zero_extend:DI (reg:SI 5 r5 [orig:158 <variable>.mult ] [158])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 8 r8)
        (nil)))

(insn 60 58 64 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (mult:SI (reg:SI 5 r5 [orig:158 <variable>.mult ] [158])
                (reg:SI 9 r9))
            (reg:SI 1 r1 [+4 ]))) 40 {*mulsi3addsi_v6} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(call_insn/u 64 60 79 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 79 64 67 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 2 r2)
        (reg:SI 6 r6 [orig:134 shift.205 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:134 shift.205 ] [134])
        (nil)))

(note 67 79 143 5 NOTE_INSN_DELETED)

(insn 143 67 155 5 arch/arm/kernel/sched_clock.c:50 discrim 52 (set (reg/v:SI 3 r3 [orig:135 __z ] [135])
        (reg:SI 7 r7 [orig:191 D.13954+4 ] [191])) 167 {*arm_movsi_insn} (nil))

(insn 155 143 117 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-8 S4 A64])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 117 155 156 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 0 r0)
        (reg:SI 5 r5 [orig:158 <variable>.mult ] [158])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:158 <variable>.mult ] [158])
        (nil)))

(insn 156 117 118 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/sched_clock.h:26 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 118 156 168 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 7 r7 [orig:191 D.13954+4 ] [191])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [orig:191 D.13954+4 ] [191])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 168 118 169 5 arch/arm/kernel/sched_clock.c:50 discrim 46 (set (reg:SI 6 r6)
        (const_int -675924773 [0xffffffffd7b634db])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 159 5 arch/arm/kernel/sched_clock.c:50 discrim 46 (set (reg:SI 7 r7 [+4 ])
        (const_int 1125899906 [0x431bde82])) 167 {*arm_movsi_insn} (nil))

(insn 159 169 68 5 arch/arm/kernel/sched_clock.c:50 discrim 46 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-8 S8 A64])) 163 {*arm_movdi} (nil))

(insn 68 159 71 5 arch/arm/kernel/sched_clock.c:50 discrim 46 (parallel [
            (set (reg:DI 10 sl)
                (asm_operands:DI ("umull	%Q0, %R0, %1, %Q2
	mov	%Q0, #0") ("=&r") 0 [
                        (reg:DI 6 r6)
                        (reg:DI 8 r8)
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 5215076))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 71 68 160 5 arch/arm/kernel/sched_clock.c:50 discrim 52 (parallel [
            (set (reg:DI 10 sl)
                (asm_operands:DI ("umlal	%R0, %Q0, %R2, %Q3
	umlal	%R0, %1, %Q2, %R3
	mov	%R0, #0
	adds	%Q0, %1, %Q0
	adc	%R0, %R0, #0
	umlal	%Q0, %R0, %R2, %R3") ("=&r") 0 [
                        (reg:DI 6 r6)
                        (reg:DI 8 r8)
                        (reg:DI 10 sl)
                        (reg/v:SI 3 r3 [orig:135 __z ] [135])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("0") 0)
                        (asm_input:SI ("1") 0)
                    ] 5215082))
            (set (reg/v:SI 3 r3 [orig:135 __z ] [135])
                (asm_operands:SI ("umlal	%R0, %Q0, %R2, %Q3
	umlal	%R0, %1, %Q2, %R3
	mov	%R0, #0
	adds	%Q0, %1, %Q0
	adc	%R0, %R0, #0
	umlal	%Q0, %R0, %R2, %R3") ("=&r") 1 [
                        (reg:DI 6 r6)
                        (reg:DI 8 r8)
                        (reg:DI 10 sl)
                        (reg/v:SI 3 r3 [orig:135 __z ] [135])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("0") 0)
                        (asm_input:SI ("1") 0)
                    ] 5215082))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (expr_list:REG_UNUSED (reg/v:SI 3 r3 [orig:135 __z ] [135])
            (nil))))

(insn 160 71 73 5 arch/arm/kernel/sched_clock.c:50 discrim 52 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-16 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 73 160 74 5 arch/arm/kernel/sched_clock.c:51 (set (reg:SI 5 r5 [194])
        (lshiftrt:SI (reg:SI 10 sl)
            (const_int 18 [0x12]))) 117 {*arm_shiftsi3} (nil))

(insn 74 73 80 5 arch/arm/kernel/sched_clock.c:51 (set (reg:SI 5 r5 [194])
        (ior:SI (ashift:SI (reg:SI 11 fp)
                (const_int 14 [0xe]))
            (reg:SI 5 r5 [194]))) 270 {*arith_shiftsi} (nil))

(call_insn/u 80 74 86 5 arch/arm/kernel/sched_clock.c:55 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 86 80 151 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-28 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 151 86 87 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 87 151 83 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 3 r3)
        (reg/v:SI 12 ip [orig:137 r_unit ] [137])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:137 r_unit ] [137])
        (nil)))

(insn 83 87 82 5 arch/arm/kernel/sched_clock.c:55 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 5 r5 [194])) 167 {*arm_movsi_insn} (nil))

(insn 82 83 85 5 arch/arm/kernel/sched_clock.c:55 (set (mem:DI (reg/f:SI 13 sp) [0 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 85 82 84 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 84 85 88 5 arch/arm/kernel/sched_clock.c:55 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fa5e00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fa5e00>)
        (nil)))

(call_insn 88 84 89 5 arch/arm/kernel/sched_clock.c:55 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 89 88 90 5 arch/arm/kernel/sched_clock.c:62 (set (reg:SI 0 r0)
        (reg:SI 5 r5 [194])) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 5 arch/arm/kernel/sched_clock.c:62 (set (reg:SI 1 r1)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 91 90 94 5 arch/arm/kernel/sched_clock.c:62 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 94 91 95 5 arch/arm/kernel/sched_clock.c:62 (set (reg:SI 0 r0)
        (minus:SI (reg:SI 5 r5 [194])
            (reg:SI 0 r0))) 28 {*arm_subsi3_insn} (nil))

(call_insn 95 94 97 5 arch/arm/kernel/sched_clock.c:62 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("msecs_to_jiffies") [flags 0x41] <function_decl 0x10b84c00 msecs_to_jiffies>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 97 95 98 5 arch/arm/kernel/sched_clock.c:62 (set (reg/f:SI 3 r3 [188])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 98 97 161 5 arch/arm/kernel/sched_clock.c:62 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [188])
                (const_int 20 [0x14])) [0 sched_clock_timer.data+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [188])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 161 98 99 5 arch/arm/kernel/sched_clock.c:63 (set (reg:SI 9 r9)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-32 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 99 161 172 5 arch/arm/kernel/sched_clock.c:63 (parallel [
            (call (mem:SI (reg:SI 9 r9) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (nil))

(insn 172 99 173 5 arch/arm/kernel/sched_clock.c:68 (set (reg:SI 2 r2 [189])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 101 5 arch/arm/kernel/sched_clock.c:68 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 101 173 180 5 arch/arm/kernel/sched_clock.c:68 (set (mem/s/j:DI (reg/v/f:SI 4 r4 [orig:142 cd ] [142]) [0 <variable>.epoch_ns+0 S8 A64])
        (reg:DI 2 r2 [189])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 180 101 181 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 181 180 182 5 arch/arm/kernel/sched_clock.c:69 (unspec_volatile [
            (return)
        ] 1) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 182 181 144)

(note 144 182 147 NOTE_INSN_DELETED)

(note 147 144 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
deleting insn with uid = 157.
ending the processing of deferred insns
