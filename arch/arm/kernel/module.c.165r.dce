
;; Function module_arch_cleanup (module_arch_cleanup)[0:994]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


module_arch_cleanup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r164={2d,2u} r165={2d,2u} r166={1d,2u} 
;;    total ref usage 170{135d,35u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 164[130,2] 165[132,2] 166[134,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164 165
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 164 165
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(2)
130, 133
;; rd  kill	(4)
130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; rd  out 	(12)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28, 130, 133
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 0 { d2(bb 0 insn -1) }

( 5 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ d9(bb 0 insn -1) }u6(13){ d12(bb 0 insn -1) }u7(25){ d27(bb 0 insn -1) }u8(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  gen 	 24 [cc] 166
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(2)
26, 134
;; rd  kill	(4)
24, 25, 26, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 164 { d131(bb 5 insn 49) d130(bb 2 insn 33) }
;;   UD chains for insn luid 1 uid 41
;;      reg 166 { d134(bb 3 insn 40) }
;;   UD chains for insn luid 2 uid 42
;;      reg 24 { d26(bb 3 insn 41) }

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ d9(bb 0 insn -1) }u13(13){ d12(bb 0 insn -1) }u14(25){ d27(bb 0 insn -1) }u15(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(2)
13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165
;; rd  out 	(15)
2, 4, 6, 8, 9, 11, 12, 26, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 166 { d134(bb 3 insn 40) }
;;   UD chains for insn luid 1 uid 45
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 44) }

( 3 4 )->[5]->( 3 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ d9(bb 0 insn -1) }u20(13){ d12(bb 0 insn -1) }u21(25){ d27(bb 0 insn -1) }u22(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165
;; lr  def 	 24 [cc] 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  gen 	 24 [cc] 164 165
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(3)
24, 131, 132
;; rd  kill	(7)
24, 25, 26, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; rd  out 	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 165 { d133(bb 2 insn 38) d132(bb 5 insn 48) }
;;   UD chains for insn luid 1 uid 49
;;      reg 164 { d131(bb 5 insn 49) d130(bb 2 insn 33) }
;;   UD chains for insn luid 2 uid 51
;;      reg 165 { d132(bb 5 insn 48) }
;;   UD chains for insn luid 3 uid 52
;;      reg 24 { d24(bb 5 insn 51) }

( 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u27(11){ d9(bb 0 insn -1) }u28(13){ d12(bb 0 insn -1) }u29(25){ d27(bb 0 insn -1) }u30(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u31(11){ d9(bb 0 insn -1) }u32(13){ d12(bb 0 insn -1) }u33(14){ d14(bb 0 insn -1) }u34(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 42 to worklist
  Adding insn 45 to worklist
  Adding insn 52 to worklist
Finished finding needed instructions:
Processing use of (reg 24 cc) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 165 [ i ]) in insn 51:
  Adding insn 48 to worklist
Processing use of (reg 165 [ i ]) in insn 48:
  Adding insn 38 to worklist
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 0 r0) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 166 [ D.18763 ]) in insn 44:
  Adding insn 40 to worklist
Processing use of (reg 164 [ ivtmp.305 ]) in insn 40:
  Adding insn 49 to worklist
  Adding insn 33 to worklist
Processing use of (reg 0 r0) in insn 33:
Processing use of (reg 164 [ ivtmp.305 ]) in insn 49:
Processing use of (reg 24 cc) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 166 [ D.18763 ]) in insn 41:


module_arch_cleanup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r164={2d,2u} r165={2d,2u} r166={1d,2u} 
;;    total ref usage 170{135d,35u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 164[130,2] 165[132,2] 166[134,1] 
(note 32 0 35 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164 165
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 164 165
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(2)
130, 133
;; rd  kill	(4)
130, 131, 132, 133

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 32 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 33 35 34 2 arch/arm/kernel/module.c:337 (set (reg:SI 164 [ ivtmp.305 ])
        (reg:SI 0 r0 [ mod ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mod ])
        (nil)))

(note 34 33 38 2 NOTE_INSN_FUNCTION_BEG)

(insn 38 34 50 2 arch/arm/kernel/module.c:341 (set (reg/v:SI 165 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; rd  out 	(12)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28, 130, 133


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 5 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u5(11){ }u6(13){ }u7(25){ }u8(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  gen 	 24 [cc] 166
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(2)
26, 134
;; rd  kill	(4)
24, 25, 26, 134

;; Pred edge  5 [80.0%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 50 38 39 3 3 "" [1 uses])

(note 39 50 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 3 arch/arm/kernel/module.c:342 (set (reg/f:SI 166 [ D.18763 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 164 [ ivtmp.305 ])
                (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 3 arch/arm/kernel/module.c:342 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 166 [ D.18763 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 3 arch/arm/kernel/module.c:342 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165 166
;; rd  out 	(16)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165 166
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(2)
13, 14

;; Pred edge  3 [69.8%]  (fallthru)
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 4 arch/arm/kernel/module.c:343 (set (reg:SI 0 r0)
        (reg/f:SI 166 [ D.18763 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166 [ D.18763 ])
        (nil)))

(call_insn 45 44 46 4 arch/arm/kernel/module.c:343 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_table_del") [flags 0x41] <function_decl 0x11169e80 unwind_table_del>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165
;; rd  out 	(15)
2, 4, 6, 8, 9, 11, 12, 26, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 165
;; lr  def 	 24 [cc] 164 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  gen 	 24 [cc] 164 165
;; live  kill	
;; rd  in  	(16)
2, 4, 6, 8, 9, 11, 12, 14, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(3)
24, 131, 132
;; rd  kill	(7)
24, 25, 26, 130, 131, 132, 133

;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 46 45 47 5 2 "" [1 uses])

(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 5 arch/arm/kernel/module.c:341 (set (reg/v:SI 165 [ i ])
        (plus:SI (reg/v:SI 165 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 49 48 51 5 arch/arm/kernel/module.c:341 (set (reg:SI 164 [ ivtmp.305 ])
        (plus:SI (reg:SI 164 [ ivtmp.305 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 51 49 52 5 arch/arm/kernel/module.c:341 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 165 [ i ])
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 60 5 arch/arm/kernel/module.c:341 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7999 [0x1f3f])
            (nil))))
;; End of basic block 5 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 165
;; rd  out 	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134


;; Succ edge  3 [80.0%]  (dfs_back)
;; Succ edge  6 [20.0%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  5 [20.0%]  (fallthru,loop_exit)
(note 60 52 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
2, 4, 6, 8, 9, 11, 12, 14, 24, 27, 28, 131, 132, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function module_finalize (module_finalize)[0:993]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 58 count 100 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 58 count 110 (  2.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 58 count 113 (  2.8)


module_finalize

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,29u} r1={29d,15u} r2={16d,2u} r3={16d,1u} r11={1d,39u} r12={15d} r13={1d,53u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={33d,19u} r25={1d,51u,1d} r26={1d,38u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r140={2d,2u} r141={2d,6u} r143={1d,1u} r144={1d,1u} r145={1d,10u} r146={1d,1u} r147={1d,1u} r148={2d,14u} r149={1d,1u} r150={1d,3u} r151={1d,3u} r162={1d,1u} r165={1d,6u} r166={2d,11u} r167={1d,1u} r168={1d,1u,1d} r169={1d,1u} r170={1d,3u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1d} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r180={1d,1u} r182={1d,1u} r184={1d,1u} r186={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r219={1d,2u} 
;;    total ref usage 2099{1750d,346u,3e} in 159{145 regular + 14 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697
0[0,30] 1[30,29] 2[59,16] 3[75,16] 11[91,1] 12[92,15] 13[107,1] 14[108,15] 15[123,14] 16[137,14] 17[151,14] 18[165,14] 19[179,14] 20[193,14] 21[207,14] 22[221,14] 23[235,14] 24[249,33] 25[282,1] 26[283,1] 27[284,14] 28[298,14] 29[312,14] 30[326,14] 31[340,14] 32[354,14] 33[368,14] 34[382,14] 35[396,14] 36[410,14] 37[424,14] 38[438,14] 39[452,14] 40[466,14] 41[480,14] 42[494,14] 43[508,14] 44[522,14] 45[536,14] 46[550,14] 47[564,14] 48[578,14] 49[592,14] 50[606,14] 51[620,14] 52[634,14] 53[648,14] 54[662,14] 55[676,14] 56[690,14] 57[704,14] 58[718,14] 59[732,14] 60[746,14] 61[760,14] 62[774,14] 63[788,14] 64[802,14] 65[816,14] 66[830,14] 67[844,14] 68[858,14] 69[872,14] 70[886,14] 71[900,14] 72[914,14] 73[928,14] 74[942,14] 75[956,14] 76[970,14] 77[984,14] 78[998,14] 79[1012,14] 80[1026,14] 81[1040,14] 82[1054,14] 83[1068,14] 84[1082,14] 85[1096,14] 86[1110,14] 87[1124,14] 88[1138,14] 89[1152,14] 90[1166,14] 91[1180,14] 92[1194,14] 93[1208,14] 94[1222,14] 95[1236,14] 96[1250,14] 97[1264,14] 98[1278,14] 99[1292,14] 100[1306,14] 101[1320,14] 102[1334,14] 103[1348,14] 104[1362,14] 105[1376,14] 106[1390,14] 107[1404,14] 108[1418,14] 109[1432,14] 110[1446,14] 111[1460,14] 112[1474,14] 113[1488,14] 114[1502,14] 115[1516,14] 116[1530,14] 117[1544,14] 118[1558,14] 119[1572,14] 120[1586,14] 121[1600,14] 122[1614,14] 123[1628,14] 124[1642,14] 125[1656,14] 126[1670,14] 127[1684,14] 140[1698,2] 141[1700,2] 143[1702,1] 144[1703,1] 145[1704,1] 146[1705,1] 147[1706,1] 148[1707,2] 149[1709,1] 150[1710,1] 151[1711,1] 162[1712,1] 165[1713,1] 166[1714,2] 167[1716,1] 168[1717,1] 169[1718,1] 170[1719,1] 171[1720,1] 172[1721,1] 173[1722,1] 174[1723,1] 176[1724,1] 177[1725,1] 178[1726,1] 180[1727,1] 182[1728,1] 184[1729,1] 186[1730,1] 188[1731,1] 190[1732,1] 192[1733,1] 194[1734,1] 196[1735,1] 198[1736,1] 201[1737,1] 202[1738,1] 203[1739,1] 205[1740,1] 206[1741,1] 207[1742,1] 208[1743,1] 211[1744,1] 212[1745,1] 213[1746,1] 214[1747,1] 215[1748,1] 219[1749,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d29(0){ }d58(1){ }d74(2){ }d90(3){ }d91(11){ }d106(12){ }d107(13){ }d122(14){ }d282(25){ }d283(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
29, 58, 74, 90, 91, 106, 107, 122, 282, 283
;; rd  kill	(125)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 282, 283
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
29, 58, 74, 90, 91, 106, 107, 122, 282, 283

( 0 )->[2]->( 25 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d91(bb 0 insn -1) }u1(13){ d107(bb 0 insn -1) }u2(25){ d282(bb 0 insn -1) }u3(26){ d283(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 165 166 167 168 169 170 171 172 173 174 176
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 146 147 148 165 166 167 168 169 170 171 172 173 174 176
;; live  kill	 14 [lr]
;; rd  in  	(10)
29, 58, 74, 90, 91, 106, 107, 122, 282, 283
;; rd  gen 	(14)
1705, 1706, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724
;; rd  kill	(31)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1705, 1706, 1707, 1708, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(23)
29, 58, 74, 90, 91, 106, 107, 282, 283, 1705, 1706, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 8
;;      reg 0 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 9
;;      reg 1 { d58(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 10
;;      reg 2 { d74(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 15
;;      reg 165 { d1713(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 17
;;      reg 168 { d1717(bb 2 insn 15) }
;;      reg 170 { d1719(bb 2 insn 16) }
;;   eq_note reg 168 { }
;;   UD chains for insn luid 6 uid 18
;;      reg 166 { d1715(bb 2 insn 9) }
;;      reg 169 { d1718(bb 2 insn 17) }
;;   UD chains for insn luid 7 uid 19
;;      reg 171 { d1720(bb 2 insn 18) }
;;   UD chains for insn luid 8 uid 20
;;      reg 165 { d1713(bb 2 insn 8) }
;;      reg 172 { d1721(bb 2 insn 19) }
;;   UD chains for insn luid 9 uid 21
;;      reg 165 { d1713(bb 2 insn 8) }
;;   UD chains for insn luid 10 uid 23
;;      reg 170 { d1719(bb 2 insn 16) }
;;      reg 173 { d1722(bb 2 insn 21) }
;;   eq_note reg 173 { }
;;   UD chains for insn luid 11 uid 24
;;      reg 166 { d1715(bb 2 insn 9) }
;;      reg 174 { d1723(bb 2 insn 23) }
;;   UD chains for insn luid 12 uid 25
;;      reg 25 { d282(bb 0 insn -1) }
;;   UD chains for insn luid 13 uid 26
;;      reg 176 { d1724(bb 2 insn 25) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 14 uid 27
;;      reg 170 { d1719(bb 2 insn 16) }
;;   UD chains for insn luid 15 uid 28
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d28(bb 2 insn 26) }
;;      reg 1 { d30(bb 2 insn 27) }
;;   UD chains for insn luid 16 uid 29
;;      reg 166 { d1715(bb 2 insn 9) }

( 25 )->[3]->( 24 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ d91(bb 0 insn -1) }u31(13){ d107(bb 0 insn -1) }u32(25){ d282(bb 0 insn -1) }u33(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 162 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	 24 [cc] 162 177 178
;; live  kill	
;; rd  in  	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(4)
280, 1712, 1725, 1726
;; rd  kill	(3)
1712, 1725, 1726
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; rd  out 	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 33
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }
;;   UD chains for insn luid 1 uid 34
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }
;;   UD chains for insn luid 2 uid 35
;;      reg 178 { d1726(bb 3 insn 34) }
;;   UD chains for insn luid 3 uid 36
;;      reg 177 { d1725(bb 3 insn 35) }
;;   UD chains for insn luid 4 uid 37
;;      reg 24 { d280(bb 3 insn 36) }

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ d91(bb 0 insn -1) }u40(13){ d107(bb 0 insn -1) }u41(25){ d282(bb 0 insn -1) }u42(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 145 180
;; live  kill	 14 [lr]
;; rd  in  	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(4)
26, 260, 1704, 1727
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1704, 1727
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 147 { d1706(bb 2 insn 20) }
;;      reg 162 { d1712(bb 3 insn 33) }
;;   UD chains for insn luid 2 uid 42
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 3 uid 43
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d9(bb 4 insn 281) }
;;      reg 1 { d56(bb 4 insn 42) }
;;   UD chains for insn luid 4 uid 44
;;      reg 0 { d26(bb 4 insn 43) }
;;   UD chains for insn luid 5 uid 46
;;      reg 180 { d1727(bb 4 insn 44) }
;;   UD chains for insn luid 6 uid 47
;;      reg 24 { d260(bb 4 insn 46) }

( 4 )->[5]->( 24 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ d91(bb 0 insn -1) }u53(13){ d107(bb 0 insn -1) }u54(25){ d282(bb 0 insn -1) }u55(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u58(11){ d91(bb 0 insn -1) }u59(13){ d107(bb 0 insn -1) }u60(25){ d282(bb 0 insn -1) }u61(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 182
;; live  kill	 14 [lr]
;; rd  in  	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
25, 259, 1728
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1728
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 56
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 57
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d8(bb 6 insn 282) }
;;      reg 1 { d54(bb 6 insn 56) }
;;   UD chains for insn luid 3 uid 58
;;      reg 0 { d25(bb 6 insn 57) }
;;   UD chains for insn luid 4 uid 60
;;      reg 182 { d1728(bb 6 insn 58) }
;;   UD chains for insn luid 5 uid 61
;;      reg 24 { d259(bb 6 insn 60) }

( 6 )->[7]->( 24 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u69(11){ d91(bb 0 insn -1) }u70(13){ d107(bb 0 insn -1) }u71(25){ d282(bb 0 insn -1) }u72(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 63
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 6 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u75(11){ d91(bb 0 insn -1) }u76(13){ d107(bb 0 insn -1) }u77(25){ d282(bb 0 insn -1) }u78(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 184
;; live  kill	 14 [lr]
;; rd  in  	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
24, 258, 1729
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1729
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 70
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 71
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d7(bb 8 insn 283) }
;;      reg 1 { d52(bb 8 insn 70) }
;;   UD chains for insn luid 3 uid 72
;;      reg 0 { d24(bb 8 insn 71) }
;;   UD chains for insn luid 4 uid 74
;;      reg 184 { d1729(bb 8 insn 72) }
;;   UD chains for insn luid 5 uid 75
;;      reg 24 { d258(bb 8 insn 74) }

( 8 )->[9]->( 24 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u86(11){ d91(bb 0 insn -1) }u87(13){ d107(bb 0 insn -1) }u88(25){ d282(bb 0 insn -1) }u89(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 77
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 8 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ d91(bb 0 insn -1) }u93(13){ d107(bb 0 insn -1) }u94(25){ d282(bb 0 insn -1) }u95(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 186
;; live  kill	 14 [lr]
;; rd  in  	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
23, 257, 1730
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1730
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 84
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 85
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d6(bb 10 insn 284) }
;;      reg 1 { d50(bb 10 insn 84) }
;;   UD chains for insn luid 3 uid 86
;;      reg 0 { d23(bb 10 insn 85) }
;;   UD chains for insn luid 4 uid 88
;;      reg 186 { d1730(bb 10 insn 86) }
;;   UD chains for insn luid 5 uid 89
;;      reg 24 { d257(bb 10 insn 88) }

( 10 )->[11]->( 24 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u103(11){ d91(bb 0 insn -1) }u104(13){ d107(bb 0 insn -1) }u105(25){ d282(bb 0 insn -1) }u106(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 91
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 10 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(11){ d91(bb 0 insn -1) }u110(13){ d107(bb 0 insn -1) }u111(25){ d282(bb 0 insn -1) }u112(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 188
;; live  kill	 14 [lr]
;; rd  in  	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
22, 256, 1731
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1731
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 98
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 99
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d5(bb 12 insn 285) }
;;      reg 1 { d48(bb 12 insn 98) }
;;   UD chains for insn luid 3 uid 100
;;      reg 0 { d22(bb 12 insn 99) }
;;   UD chains for insn luid 4 uid 102
;;      reg 188 { d1731(bb 12 insn 100) }
;;   UD chains for insn luid 5 uid 103
;;      reg 24 { d256(bb 12 insn 102) }

( 12 )->[13]->( 24 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u120(11){ d91(bb 0 insn -1) }u121(13){ d107(bb 0 insn -1) }u122(25){ d282(bb 0 insn -1) }u123(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 105
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 12 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(11){ d91(bb 0 insn -1) }u127(13){ d107(bb 0 insn -1) }u128(25){ d282(bb 0 insn -1) }u129(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 190
;; live  kill	 14 [lr]
;; rd  in  	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
21, 255, 1732
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1732
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 112
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 113
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d4(bb 14 insn 286) }
;;      reg 1 { d46(bb 14 insn 112) }
;;   UD chains for insn luid 3 uid 114
;;      reg 0 { d21(bb 14 insn 113) }
;;   UD chains for insn luid 4 uid 116
;;      reg 190 { d1732(bb 14 insn 114) }
;;   UD chains for insn luid 5 uid 117
;;      reg 24 { d255(bb 14 insn 116) }

( 14 )->[15]->( 24 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u137(11){ d91(bb 0 insn -1) }u138(13){ d107(bb 0 insn -1) }u139(25){ d282(bb 0 insn -1) }u140(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 119
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 14 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u143(11){ d91(bb 0 insn -1) }u144(13){ d107(bb 0 insn -1) }u145(25){ d282(bb 0 insn -1) }u146(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 192
;; live  kill	 14 [lr]
;; rd  in  	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
20, 254, 1733
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1733
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 126
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 127
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d3(bb 16 insn 287) }
;;      reg 1 { d44(bb 16 insn 126) }
;;   UD chains for insn luid 3 uid 128
;;      reg 0 { d20(bb 16 insn 127) }
;;   UD chains for insn luid 4 uid 130
;;      reg 192 { d1733(bb 16 insn 128) }
;;   UD chains for insn luid 5 uid 131
;;      reg 24 { d254(bb 16 insn 130) }

( 16 )->[17]->( 24 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(11){ d91(bb 0 insn -1) }u155(13){ d107(bb 0 insn -1) }u156(25){ d282(bb 0 insn -1) }u157(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 133
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 16 )->[18]->( 19 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u160(11){ d91(bb 0 insn -1) }u161(13){ d107(bb 0 insn -1) }u162(25){ d282(bb 0 insn -1) }u163(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 194
;; live  kill	 14 [lr]
;; rd  in  	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
19, 253, 1734
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1734
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 140
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 141
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d2(bb 18 insn 288) }
;;      reg 1 { d42(bb 18 insn 140) }
;;   UD chains for insn luid 3 uid 142
;;      reg 0 { d19(bb 18 insn 141) }
;;   UD chains for insn luid 4 uid 144
;;      reg 194 { d1734(bb 18 insn 142) }
;;   UD chains for insn luid 5 uid 145
;;      reg 24 { d253(bb 18 insn 144) }

( 18 )->[19]->( 24 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u171(11){ d91(bb 0 insn -1) }u172(13){ d107(bb 0 insn -1) }u173(25){ d282(bb 0 insn -1) }u174(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 147
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 18 )->[20]->( 21 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u177(11){ d91(bb 0 insn -1) }u178(13){ d107(bb 0 insn -1) }u179(25){ d282(bb 0 insn -1) }u180(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 196
;; live  kill	 14 [lr]
;; rd  in  	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
18, 252, 1735
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1735
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 154
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 155
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d1(bb 20 insn 289) }
;;      reg 1 { d40(bb 20 insn 154) }
;;   UD chains for insn luid 3 uid 156
;;      reg 0 { d18(bb 20 insn 155) }
;;   UD chains for insn luid 4 uid 158
;;      reg 196 { d1735(bb 20 insn 156) }
;;   UD chains for insn luid 5 uid 159
;;      reg 24 { d252(bb 20 insn 158) }

( 20 )->[21]->( 24 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u188(11){ d91(bb 0 insn -1) }u189(13){ d107(bb 0 insn -1) }u190(25){ d282(bb 0 insn -1) }u191(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 161
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 20 )->[22]->( 23 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u194(11){ d91(bb 0 insn -1) }u195(13){ d107(bb 0 insn -1) }u196(25){ d282(bb 0 insn -1) }u197(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 198
;; live  kill	 14 [lr]
;; rd  in  	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
17, 251, 1736
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1736
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
17, 58, 74, 90, 91, 106, 107, 251, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 168
;;      reg 145 { d1704(bb 4 insn 39) }
;;   UD chains for insn luid 2 uid 169
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d11(bb 22 insn 167) }
;;      reg 1 { d38(bb 22 insn 168) }
;;   UD chains for insn luid 3 uid 170
;;      reg 0 { d17(bb 22 insn 169) }
;;   UD chains for insn luid 4 uid 172
;;      reg 198 { d1736(bb 22 insn 170) }
;;   UD chains for insn luid 5 uid 173
;;      reg 24 { d251(bb 22 insn 172) }

( 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u205(11){ d91(bb 0 insn -1) }u206(13){ d107(bb 0 insn -1) }u207(25){ d282(bb 0 insn -1) }u208(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
17, 58, 74, 90, 91, 106, 107, 251, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
17, 58, 74, 90, 91, 106, 107, 251, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 175
;;      reg 25 { d282(bb 0 insn -1) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 3 23 5 7 9 11 13 15 17 19 22 21 )->[24]->( 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u211(11){ d91(bb 0 insn -1) }u212(13){ d107(bb 0 insn -1) }u213(25){ d282(bb 0 insn -1) }u214(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	 148
;; live  kill	
;; rd  in  	(59)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(1)
1707
;; rd  kill	(2)
1707, 1708
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(58)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 280, 282, 283, 1704, 1705, 1706, 1707, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 178
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }

( 24 2 )->[25]->( 3 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u216(11){ d91(bb 0 insn -1) }u217(13){ d107(bb 0 insn -1) }u218(25){ d282(bb 0 insn -1) }u219(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(59)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(1)
269
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 182
;;      reg 146 { d1705(bb 2 insn 24) }
;;      reg 148 { d1708(bb 2 insn 29) d1707(bb 24 insn 178) }
;;   UD chains for insn luid 1 uid 183
;;      reg 24 { d269(bb 25 insn 182) }

( 25 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u223(11){ d91(bb 0 insn -1) }u224(13){ d107(bb 0 insn -1) }u225(25){ d282(bb 0 insn -1) }u226(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 140 141 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167
;; live  gen 	 140 141 219
;; live  kill	
;; rd  in  	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
1699, 1701, 1749
;; rd  kill	(5)
1698, 1699, 1700, 1701, 1749
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; rd  out 	(52)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1699, 1701, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 185
;;      reg 167 { d1716(bb 2 insn 10) }
;;   UD chains for insn luid 2 uid 188
;;      reg 25 { d282(bb 0 insn -1) }

( 30 26 )->[27]->( 28 30 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u229(11){ d91(bb 0 insn -1) }u230(13){ d107(bb 0 insn -1) }u231(25){ d282(bb 0 insn -1) }u232(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 219
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  gen 	 24 [cc] 151
;; live  kill	
;; rd  in  	(60)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 269, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(2)
268, 1711
;; rd  kill	(1)
1711
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; rd  out 	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 268, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 189
;;      reg 141 { d1701(bb 26 insn 186) d1700(bb 30 insn 208) }
;;      reg 219 { d1749(bb 26 insn 188) }
;;   UD chains for insn luid 1 uid 190
;;      reg 151 { d1711(bb 27 insn 189) }
;;   UD chains for insn luid 2 uid 191
;;      reg 24 { d268(bb 27 insn 190) }

( 27 )->[28]->( 29 30 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u237(11){ d91(bb 0 insn -1) }u238(13){ d107(bb 0 insn -1) }u239(25){ d282(bb 0 insn -1) }u240(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 219
;; lr  def 	 24 [cc] 150 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; live  gen 	 24 [cc] 150 201
;; live  kill	
;; rd  in  	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 268, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(3)
267, 1710, 1737
;; rd  kill	(2)
1710, 1737
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; rd  out 	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 267, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 194
;;      reg 141 { d1701(bb 26 insn 186) d1700(bb 30 insn 208) }
;;      reg 219 { d1749(bb 26 insn 188) }
;;   UD chains for insn luid 1 uid 195
;;      reg 201 { d1737(bb 28 insn 194) }
;;   UD chains for insn luid 2 uid 196
;;      reg 150 { d1710(bb 28 insn 195) }
;;   UD chains for insn luid 3 uid 197
;;      reg 24 { d267(bb 28 insn 196) }

( 28 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u246(11){ d91(bb 0 insn -1) }u247(13){ d107(bb 0 insn -1) }u248(25){ d282(bb 0 insn -1) }u249(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 149
;; live  kill	 14 [lr]
;; rd  in  	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 267, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(2)
15, 1709
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1709
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; rd  out 	(48)
15, 58, 74, 90, 91, 106, 107, 267, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 199
;;      reg 151 { d1711(bb 27 insn 189) }
;;   UD chains for insn luid 1 uid 200
;;      reg 151 { d1711(bb 27 insn 189) }
;;   UD chains for insn luid 2 uid 201
;;      reg 150 { d1710(bb 28 insn 195) }
;;   UD chains for insn luid 3 uid 202
;;      reg 150 { d1710(bb 28 insn 195) }
;;   UD chains for insn luid 4 uid 203
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d16(bb 29 insn 199) }
;;      reg 1 { d36(bb 29 insn 200) }
;;      reg 2 { d62(bb 29 insn 201) }
;;      reg 3 { d78(bb 29 insn 202) }
;;   UD chains for insn luid 5 uid 204
;;      reg 0 { d15(bb 29 insn 203) }
;;   UD chains for insn luid 6 uid 205
;;      reg 140 { d1699(bb 26 insn 185) d1698(bb 30 insn 209) }
;;      reg 149 { d1709(bb 29 insn 204) }

( 27 28 29 )->[30]->( 27 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u262(11){ d91(bb 0 insn -1) }u263(13){ d107(bb 0 insn -1) }u264(25){ d282(bb 0 insn -1) }u265(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  gen 	 24 [cc] 140 141
;; live  kill	
;; rd  in  	(60)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 267, 268, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(3)
265, 1698, 1700
;; rd  kill	(4)
1698, 1699, 1700, 1701
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; rd  out 	(57)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 282, 283, 1698, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 208
;;      reg 141 { d1701(bb 26 insn 186) d1700(bb 30 insn 208) }
;;   UD chains for insn luid 1 uid 209
;;      reg 140 { d1699(bb 26 insn 185) d1698(bb 30 insn 209) }
;;   UD chains for insn luid 2 uid 211
;;      reg 141 { d1700(bb 30 insn 208) }
;;   UD chains for insn luid 3 uid 212
;;      reg 24 { d265(bb 30 insn 211) }

( 30 )->[31]->( 34 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u270(11){ d91(bb 0 insn -1) }u271(13){ d107(bb 0 insn -1) }u272(25){ d282(bb 0 insn -1) }u273(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 165 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 165 166
;; lr  def 	 143 144 202 203 205 206 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 165 166
;; live  gen 	 143 144 202 203 205 206 207 208
;; live  kill	
;; rd  in  	(57)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 282, 283, 1698, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(8)
1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743
;; rd  kill	(8)
1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(65)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 214
;;      reg 165 { d1713(bb 2 insn 8) }
;;   UD chains for insn luid 1 uid 216
;;      reg 141 { d1700(bb 30 insn 208) }
;;      reg 202 { d1738(bb 31 insn 214) }
;;   UD chains for insn luid 2 uid 217
;;      reg 166 { d1715(bb 2 insn 9) }
;;      reg 203 { d1739(bb 31 insn 216) }
;;   UD chains for insn luid 3 uid 218
;;      reg 205 { d1740(bb 31 insn 217) }
;;   UD chains for insn luid 4 uid 219
;;      reg 165 { d1713(bb 2 insn 8) }
;;      reg 206 { d1741(bb 31 insn 218) }
;;   UD chains for insn luid 5 uid 220
;;      reg 165 { d1713(bb 2 insn 8) }
;;   UD chains for insn luid 6 uid 222
;;      reg 141 { d1700(bb 30 insn 208) }
;;      reg 207 { d1742(bb 31 insn 220) }
;;   UD chains for insn luid 7 uid 223
;;      reg 166 { d1715(bb 2 insn 9) }
;;      reg 208 { d1743(bb 31 insn 222) }

( 34 )->[32]->( 36 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u287(11){ d91(bb 0 insn -1) }u288(13){ d107(bb 0 insn -1) }u289(25){ d282(bb 0 insn -1) }u290(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 211 212 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 211 212 213
;; live  kill	 14 [lr]
;; rd  in  	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(5)
14, 250, 1744, 1745, 1746
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1744, 1745, 1746
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(58)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 228
;;      reg 166 { d1715(bb 2 insn 9) d1714(bb 33 insn 238) }
;;   UD chains for insn luid 1 uid 229
;;      reg 144 { d1703(bb 31 insn 219) }
;;      reg 212 { d1745(bb 32 insn 228) }
;;   UD chains for insn luid 3 uid 231
;;      reg 211 { d1744(bb 32 insn 229) }
;;   UD chains for insn luid 4 uid 232
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d0(bb 32 insn 279) }
;;      reg 1 { d34(bb 32 insn 231) }
;;   UD chains for insn luid 5 uid 233
;;      reg 0 { d14(bb 32 insn 232) }
;;   UD chains for insn luid 6 uid 235
;;      reg 213 { d1746(bb 32 insn 233) }
;;   UD chains for insn luid 7 uid 236
;;      reg 24 { d250(bb 32 insn 235) }

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u301(11){ d91(bb 0 insn -1) }u302(13){ d107(bb 0 insn -1) }u303(25){ d282(bb 0 insn -1) }u304(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; live  gen 	 166
;; live  kill	
;; rd  in  	(58)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(1)
1714
;; rd  kill	(2)
1714, 1715
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(57)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 238
;;      reg 166 { d1715(bb 2 insn 9) d1714(bb 33 insn 238) }

( 33 31 )->[34]->( 32 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u306(11){ d91(bb 0 insn -1) }u307(13){ d107(bb 0 insn -1) }u308(25){ d282(bb 0 insn -1) }u309(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 166
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(71)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 250, 265, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(1)
263
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 242
;;      reg 143 { d1702(bb 31 insn 223) }
;;      reg 166 { d1715(bb 2 insn 9) d1714(bb 33 insn 238) }
;;   UD chains for insn luid 1 uid 243
;;      reg 24 { d263(bb 34 insn 242) }

( 34 )->[35]->( 39 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ d91(bb 0 insn -1) }u-1(13){ d107(bb 0 insn -1) }u-1(25){ d282(bb 0 insn -1) }u-1(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }

( 32 )->[36]->( 37 39 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u313(11){ d91(bb 0 insn -1) }u314(13){ d107(bb 0 insn -1) }u315(25){ d282(bb 0 insn -1) }u316(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(58)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(1)
249
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(58)
14, 58, 74, 90, 91, 106, 107, 249, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 250
;;      reg 166 { d1715(bb 2 insn 9) d1714(bb 33 insn 238) }
;;   UD chains for insn luid 1 uid 251
;;      reg 24 { d249(bb 36 insn 250) }

( 36 )->[37]->( 38 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u319(11){ d91(bb 0 insn -1) }u320(13){ d107(bb 0 insn -1) }u321(25){ d282(bb 0 insn -1) }u322(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 214 215
;; live  kill	
;; rd  in  	(58)
14, 58, 74, 90, 91, 106, 107, 249, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(3)
262, 1747, 1748
;; rd  kill	(2)
1747, 1748
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(60)
14, 58, 74, 90, 91, 106, 107, 262, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 254
;;      reg 214 { d1747(bb 37 insn 253) }
;;   UD chains for insn luid 2 uid 255
;;      reg 215 { d1748(bb 37 insn 254) }
;;   UD chains for insn luid 3 uid 256
;;      reg 24 { d262(bb 37 insn 255) }

( 37 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u326(11){ d91(bb 0 insn -1) }u327(13){ d107(bb 0 insn -1) }u328(25){ d282(bb 0 insn -1) }u329(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(60)
14, 58, 74, 90, 91, 106, 107, 262, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;; rd  gen 	(0)

;; rd  kill	(15)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(60)
14, 58, 74, 90, 91, 106, 107, 262, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 258
;;      reg 166 { d1715(bb 2 insn 9) d1714(bb 33 insn 238) }
;;   UD chains for insn luid 1 uid 259
;;      reg 166 { d1715(bb 2 insn 9) d1714(bb 33 insn 238) }
;;   UD chains for insn luid 2 uid 260
;;      reg 13 { d107(bb 0 insn -1) }
;;      reg 0 { d12(bb 38 insn 258) }
;;      reg 1 { d31(bb 38 insn 259) }

( 36 37 38 35 )->[39]->( 1 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u335(11){ d91(bb 0 insn -1) }u336(13){ d107(bb 0 insn -1) }u337(25){ d282(bb 0 insn -1) }u338(26){ d283(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(74)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 249, 262, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;; rd  gen 	(1)
10
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(62)
10, 58, 74, 90, 91, 106, 107, 249, 262, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;;  UD chains for artificial uses
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 25 { d282(bb 0 insn -1) }
;;   reg 26 { d283(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 273
;;      reg 0 { d10(bb 39 insn 267) }

( 39 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u340(0){ d10(bb 39 insn 267) }u341(11){ d91(bb 0 insn -1) }u342(13){ d107(bb 0 insn -1) }u343(14){ }u344(25){ d282(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(62)
10, 58, 74, 90, 91, 106, 107, 249, 262, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(62)
10, 58, 74, 90, 91, 106, 107, 249, 262, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;;  UD chains for artificial uses
;;   reg 0 { d10(bb 39 insn 267) }
;;   reg 11 { d91(bb 0 insn -1) }
;;   reg 13 { d107(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d282(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 290 to worklist
  Adding insn 28 to worklist
  Adding insn 37 to worklist
  Adding insn 47 to worklist
  Adding insn 292 to worklist
  Adding insn 49 to worklist
  Adding insn 61 to worklist
  Adding insn 294 to worklist
  Adding insn 63 to worklist
  Adding insn 75 to worklist
  Adding insn 296 to worklist
  Adding insn 77 to worklist
  Adding insn 89 to worklist
  Adding insn 298 to worklist
  Adding insn 91 to worklist
  Adding insn 103 to worklist
  Adding insn 300 to worklist
  Adding insn 105 to worklist
  Adding insn 117 to worklist
  Adding insn 302 to worklist
  Adding insn 119 to worklist
  Adding insn 131 to worklist
  Adding insn 304 to worklist
  Adding insn 133 to worklist
  Adding insn 145 to worklist
  Adding insn 306 to worklist
  Adding insn 147 to worklist
  Adding insn 159 to worklist
  Adding insn 308 to worklist
  Adding insn 161 to worklist
  Adding insn 173 to worklist
  Adding insn 175 to worklist
  Adding insn 183 to worklist
  Adding insn 191 to worklist
  Adding insn 197 to worklist
  Adding insn 205 to worklist
  Adding insn 203 to worklist
  Adding insn 212 to worklist
  Adding insn 310 to worklist
  Adding insn 236 to worklist
  Adding insn 243 to worklist
  Adding insn 313 to worklist
  Adding insn 251 to worklist
  Adding insn 256 to worklist
  Adding insn 260 to worklist
  Adding insn 273 to worklist
Finished finding needed instructions:
  Adding insn 267 to worklist
Processing use of (reg 0 r0) in insn 273:
Processing use of (reg 13 sp) in insn 260:
Processing use of (reg 0 r0) in insn 260:
  Adding insn 258 to worklist
Processing use of (reg 1 r1) in insn 260:
  Adding insn 259 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 259:
  Adding insn 9 to worklist
  Adding insn 238 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 238:
Processing use of (reg 1 r1) in insn 9:
Processing use of (reg 166 [ sechdrs ]) in insn 258:
Processing use of (reg 24 cc) in insn 256:
  Adding insn 255 to worklist
Processing use of (reg 215 [ smp_on_up ]) in insn 255:
  Adding insn 254 to worklist
Processing use of (reg 214) in insn 254:
  Adding insn 253 to worklist
Processing use of (reg 24 cc) in insn 251:
  Adding insn 250 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 250:
Processing use of (reg 24 cc) in insn 243:
  Adding insn 242 to worklist
Processing use of (reg 143 [ se ]) in insn 242:
  Adding insn 223 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 242:
Processing use of (reg 166 [ sechdrs ]) in insn 223:
Processing use of (reg 208) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 141 [ ivtmp.359 ]) in insn 222:
  Adding insn 208 to worklist
Processing use of (reg 207 [ <variable>.e_shnum ]) in insn 222:
  Adding insn 220 to worklist
Processing use of (reg 165 [ hdr ]) in insn 220:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 8:
Processing use of (reg 141 [ ivtmp.359 ]) in insn 208:
  Adding insn 186 to worklist
Processing use of (reg 24 cc) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 213) in insn 235:
  Adding insn 233 to worklist
Processing use of (reg 0 r0) in insn 233:
  Adding insn 232 to worklist
Processing use of (reg 13 sp) in insn 232:
Processing use of (reg 0 r0) in insn 232:
  Adding insn 279 to worklist
Processing use of (reg 1 r1) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 211) in insn 231:
  Adding insn 229 to worklist
Processing use of (reg 144 [ secstrs ]) in insn 229:
  Adding insn 219 to worklist
Processing use of (reg 212 [ <variable>.sh_name ]) in insn 229:
  Adding insn 228 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 228:
Processing use of (reg 165 [ hdr ]) in insn 219:
Processing use of (reg 206 [ <variable>.sh_offset ]) in insn 219:
  Adding insn 218 to worklist
Processing use of (reg 205) in insn 218:
  Adding insn 217 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 217:
Processing use of (reg 203) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 141 [ ivtmp.359 ]) in insn 216:
Processing use of (reg 202 [ <variable>.e_shstrndx ]) in insn 216:
  Adding insn 214 to worklist
Processing use of (reg 165 [ hdr ]) in insn 214:
Processing use of (reg 24 cc) in insn 212:
  Adding insn 211 to worklist
Processing use of (reg 141 [ ivtmp.359 ]) in insn 211:
Processing use of (reg 13 sp) in insn 203:
Processing use of (reg 0 r0) in insn 203:
  Adding insn 199 to worklist
Processing use of (reg 1 r1) in insn 203:
  Adding insn 200 to worklist
Processing use of (reg 2 r2) in insn 203:
  Adding insn 201 to worklist
Processing use of (reg 3 r3) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 150 [ D.18736 ]) in insn 202:
  Adding insn 195 to worklist
Processing use of (reg 201) in insn 195:
  Adding insn 194 to worklist
Processing use of (reg 141 [ ivtmp.359 ]) in insn 194:
Processing use of (reg 219) in insn 194:
  Adding insn 188 to worklist
Processing use of (reg 25 sfp) in insn 188:
Processing use of (reg 150 [ D.18736 ]) in insn 201:
Processing use of (reg 151 [ D.18733 ]) in insn 200:
  Adding insn 189 to worklist
Processing use of (reg 141 [ ivtmp.359 ]) in insn 189:
Processing use of (reg 219) in insn 189:
Processing use of (reg 151 [ D.18733 ]) in insn 199:
Processing use of (reg 140 [ ivtmp.364 ]) in insn 205:
  Adding insn 185 to worklist
  Adding insn 209 to worklist
Processing use of (reg 149 [ D.18743 ]) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 0 r0) in insn 204:
Processing use of (reg 140 [ ivtmp.364 ]) in insn 209:
Processing use of (reg 167 [ mod ]) in insn 185:
  Adding insn 10 to worklist
Processing use of (reg 2 r2) in insn 10:
Processing use of (reg 24 cc) in insn 197:
  Adding insn 196 to worklist
Processing use of (reg 150 [ D.18736 ]) in insn 196:
Processing use of (reg 24 cc) in insn 191:
  Adding insn 190 to worklist
Processing use of (reg 151 [ D.18733 ]) in insn 190:
Processing use of (reg 24 cc) in insn 183:
  Adding insn 182 to worklist
Processing use of (reg 146 [ sechdrs_end ]) in insn 182:
  Adding insn 24 to worklist
Processing use of (reg 148 [ s ]) in insn 182:
  Adding insn 29 to worklist
  Adding insn 178 to worklist
Processing use of (reg 148 [ s ]) in insn 178:
Processing use of (reg 166 [ sechdrs ]) in insn 29:
Processing use of (reg 166 [ sechdrs ]) in insn 24:
Processing use of (reg 174) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 170) in insn 23:
  Adding insn 16 to worklist
Processing use of (reg 173 [ <variable>.e_shnum ]) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 165 [ hdr ]) in insn 21:
Processing use of (reg 25 sfp) in insn 175:
Processing use of (reg 148 [ s ]) in insn 175:
Processing use of (reg 24 cc) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 198) in insn 172:
  Adding insn 170 to worklist
Processing use of (reg 0 r0) in insn 170:
  Adding insn 169 to worklist
Processing use of (reg 13 sp) in insn 169:
Processing use of (reg 0 r0) in insn 169:
  Adding insn 167 to worklist
Processing use of (reg 1 r1) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 145 [ secname ]) in insn 168:
  Adding insn 39 to worklist
Processing use of (reg 147 [ secstrs ]) in insn 39:
  Adding insn 20 to worklist
Processing use of (reg 162 [ D.18688 ]) in insn 39:
  Adding insn 33 to worklist
Processing use of (reg 148 [ s ]) in insn 33:
Processing use of (reg 165 [ hdr ]) in insn 20:
Processing use of (reg 172 [ <variable>.sh_offset ]) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 171) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 18:
Processing use of (reg 169) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 168 [ <variable>.e_shstrndx ]) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 170) in insn 17:
Processing use of (reg 165 [ hdr ]) in insn 15:
Processing use of (reg 25 sfp) in insn 161:
Processing use of (reg 148 [ s ]) in insn 161:
Processing use of (reg 24 cc) in insn 159:
  Adding insn 158 to worklist
Processing use of (reg 196) in insn 158:
  Adding insn 156 to worklist
Processing use of (reg 0 r0) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 13 sp) in insn 155:
Processing use of (reg 0 r0) in insn 155:
  Adding insn 289 to worklist
Processing use of (reg 1 r1) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 145 [ secname ]) in insn 154:
Processing use of (reg 25 sfp) in insn 147:
Processing use of (reg 148 [ s ]) in insn 147:
Processing use of (reg 24 cc) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 194) in insn 144:
  Adding insn 142 to worklist
Processing use of (reg 0 r0) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 13 sp) in insn 141:
Processing use of (reg 0 r0) in insn 141:
  Adding insn 288 to worklist
Processing use of (reg 1 r1) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 145 [ secname ]) in insn 140:
Processing use of (reg 25 sfp) in insn 133:
Processing use of (reg 148 [ s ]) in insn 133:
Processing use of (reg 24 cc) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 192) in insn 130:
  Adding insn 128 to worklist
Processing use of (reg 0 r0) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 13 sp) in insn 127:
Processing use of (reg 0 r0) in insn 127:
  Adding insn 287 to worklist
Processing use of (reg 1 r1) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 145 [ secname ]) in insn 126:
Processing use of (reg 25 sfp) in insn 119:
Processing use of (reg 148 [ s ]) in insn 119:
Processing use of (reg 24 cc) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 190) in insn 116:
  Adding insn 114 to worklist
Processing use of (reg 0 r0) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 13 sp) in insn 113:
Processing use of (reg 0 r0) in insn 113:
  Adding insn 286 to worklist
Processing use of (reg 1 r1) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 145 [ secname ]) in insn 112:
Processing use of (reg 25 sfp) in insn 105:
Processing use of (reg 148 [ s ]) in insn 105:
Processing use of (reg 24 cc) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 188) in insn 102:
  Adding insn 100 to worklist
Processing use of (reg 0 r0) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 13 sp) in insn 99:
Processing use of (reg 0 r0) in insn 99:
  Adding insn 285 to worklist
Processing use of (reg 1 r1) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 145 [ secname ]) in insn 98:
Processing use of (reg 25 sfp) in insn 91:
Processing use of (reg 148 [ s ]) in insn 91:
Processing use of (reg 24 cc) in insn 89:
  Adding insn 88 to worklist
Processing use of (reg 186) in insn 88:
  Adding insn 86 to worklist
Processing use of (reg 0 r0) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 13 sp) in insn 85:
Processing use of (reg 0 r0) in insn 85:
  Adding insn 284 to worklist
Processing use of (reg 1 r1) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 145 [ secname ]) in insn 84:
Processing use of (reg 25 sfp) in insn 77:
Processing use of (reg 148 [ s ]) in insn 77:
Processing use of (reg 24 cc) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 184) in insn 74:
  Adding insn 72 to worklist
Processing use of (reg 0 r0) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 13 sp) in insn 71:
Processing use of (reg 0 r0) in insn 71:
  Adding insn 283 to worklist
Processing use of (reg 1 r1) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 145 [ secname ]) in insn 70:
Processing use of (reg 25 sfp) in insn 63:
Processing use of (reg 148 [ s ]) in insn 63:
Processing use of (reg 24 cc) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 182) in insn 60:
  Adding insn 58 to worklist
Processing use of (reg 0 r0) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 13 sp) in insn 57:
Processing use of (reg 0 r0) in insn 57:
  Adding insn 282 to worklist
Processing use of (reg 1 r1) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 145 [ secname ]) in insn 56:
Processing use of (reg 25 sfp) in insn 49:
Processing use of (reg 148 [ s ]) in insn 49:
Processing use of (reg 24 cc) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 180) in insn 46:
  Adding insn 44 to worklist
Processing use of (reg 0 r0) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 13 sp) in insn 43:
Processing use of (reg 0 r0) in insn 43:
  Adding insn 281 to worklist
Processing use of (reg 1 r1) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 145 [ secname ]) in insn 42:
Processing use of (reg 24 cc) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 177) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 178 [ <variable>.sh_flags ]) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 148 [ s ]) in insn 34:
Processing use of (reg 13 sp) in insn 28:
Processing use of (reg 0 r0) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 1 r1) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 170) in insn 27:
Processing use of (reg 176) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 25 sfp) in insn 25:


module_finalize

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,29u} r1={29d,15u} r2={16d,2u} r3={16d,1u} r11={1d,39u} r12={15d} r13={1d,53u} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={33d,19u} r25={1d,51u,1d} r26={1d,38u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} r140={2d,2u} r141={2d,6u} r143={1d,1u} r144={1d,1u} r145={1d,10u} r146={1d,1u} r147={1d,1u} r148={2d,14u} r149={1d,1u} r150={1d,3u} r151={1d,3u} r162={1d,1u} r165={1d,6u} r166={2d,11u} r167={1d,1u} r168={1d,1u,1d} r169={1d,1u} r170={1d,3u} r171={1d,1u} r172={1d,1u} r173={1d,1u,1d} r174={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r180={1d,1u} r182={1d,1u} r184={1d,1u} r186={1d,1u} r188={1d,1u} r190={1d,1u} r192={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r219={1d,2u} 
;;    total ref usage 2099{1750d,346u,3e} in 159{145 regular + 14 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,30] 1[30,29] 2[59,16] 3[75,16] 11[91,1] 12[92,15] 13[107,1] 14[108,15] 15[123,14] 16[137,14] 17[151,14] 18[165,14] 19[179,14] 20[193,14] 21[207,14] 22[221,14] 23[235,14] 24[249,33] 25[282,1] 26[283,1] 27[284,14] 28[298,14] 29[312,14] 30[326,14] 31[340,14] 32[354,14] 33[368,14] 34[382,14] 35[396,14] 36[410,14] 37[424,14] 38[438,14] 39[452,14] 40[466,14] 41[480,14] 42[494,14] 43[508,14] 44[522,14] 45[536,14] 46[550,14] 47[564,14] 48[578,14] 49[592,14] 50[606,14] 51[620,14] 52[634,14] 53[648,14] 54[662,14] 55[676,14] 56[690,14] 57[704,14] 58[718,14] 59[732,14] 60[746,14] 61[760,14] 62[774,14] 63[788,14] 64[802,14] 65[816,14] 66[830,14] 67[844,14] 68[858,14] 69[872,14] 70[886,14] 71[900,14] 72[914,14] 73[928,14] 74[942,14] 75[956,14] 76[970,14] 77[984,14] 78[998,14] 79[1012,14] 80[1026,14] 81[1040,14] 82[1054,14] 83[1068,14] 84[1082,14] 85[1096,14] 86[1110,14] 87[1124,14] 88[1138,14] 89[1152,14] 90[1166,14] 91[1180,14] 92[1194,14] 93[1208,14] 94[1222,14] 95[1236,14] 96[1250,14] 97[1264,14] 98[1278,14] 99[1292,14] 100[1306,14] 101[1320,14] 102[1334,14] 103[1348,14] 104[1362,14] 105[1376,14] 106[1390,14] 107[1404,14] 108[1418,14] 109[1432,14] 110[1446,14] 111[1460,14] 112[1474,14] 113[1488,14] 114[1502,14] 115[1516,14] 116[1530,14] 117[1544,14] 118[1558,14] 119[1572,14] 120[1586,14] 121[1600,14] 122[1614,14] 123[1628,14] 124[1642,14] 125[1656,14] 126[1670,14] 127[1684,14] 140[1698,2] 141[1700,2] 143[1702,1] 144[1703,1] 145[1704,1] 146[1705,1] 147[1706,1] 148[1707,2] 149[1709,1] 150[1710,1] 151[1711,1] 162[1712,1] 165[1713,1] 166[1714,2] 167[1716,1] 168[1717,1] 169[1718,1] 170[1719,1] 171[1720,1] 172[1721,1] 173[1722,1] 174[1723,1] 176[1724,1] 177[1725,1] 178[1726,1] 180[1727,1] 182[1728,1] 184[1729,1] 186[1730,1] 188[1731,1] 190[1732,1] 192[1733,1] 194[1734,1] 196[1735,1] 198[1736,1] 201[1737,1] 202[1738,1] 203[1739,1] 205[1740,1] 206[1741,1] 207[1742,1] 208[1743,1] 211[1744,1] 212[1745,1] 213[1746,1] 214[1747,1] 215[1748,1] 219[1749,1] 
(note 7 0 12 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 165 166 167 168 169 170 171 172 173 174 176
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 146 147 148 165 166 167 168 169 170 171 172 173 174 176
;; live  kill	 14 [lr]
;; rd  in  	(10)
29, 58, 74, 90, 91, 106, 107, 122, 282, 283
;; rd  gen 	(14)
1705, 1706, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724
;; rd  kill	(31)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1705, 1706, 1707, 1708, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 12 7 8 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 8 12 9 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 165 [ hdr ])
        (reg:SI 0 r0 [ hdr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ hdr ])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 166 [ sechdrs ])
        (reg:SI 1 r1 [ sechdrs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ sechdrs ])
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 167 [ mod ])
        (reg:SI 2 r2 [ mod ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ mod ])
        (nil)))

(note 11 10 15 2 NOTE_INSN_FUNCTION_BEG)

(insn 15 11 16 2 arch/arm/kernel/module.c:277 (set (reg:SI 168 [ <variable>.e_shstrndx ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 165 [ hdr ])
                    (const_int 50 [0x32])) [0 <variable>.e_shstrndx+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 16 15 17 2 arch/arm/kernel/module.c:277 (set (reg:SI 170)
        (const_int 40 [0x28])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/module.c:277 (set (reg:SI 169)
        (mult:SI (reg:SI 170)
            (reg:SI 168 [ <variable>.e_shstrndx ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 168 [ <variable>.e_shstrndx ])
        (expr_list:REG_EQUAL (mult:SI (reg:SI 168 [ <variable>.e_shstrndx ])
                (const_int 40 [0x28]))
            (nil))))

(insn 18 17 19 2 arch/arm/kernel/module.c:277 (set (reg/f:SI 171)
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (reg:SI 169))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 19 18 20 2 arch/arm/kernel/module.c:277 (set (reg:SI 172 [ <variable>.sh_offset ])
        (mem/s/j:SI (plus:SI (reg/f:SI 171)
                (const_int 16 [0x10])) [0 <variable>.sh_offset+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 171)
        (nil)))

(insn 20 19 21 2 arch/arm/kernel/module.c:277 (set (reg/v/f:SI 147 [ secstrs ])
        (plus:SI (reg/v/f:SI 165 [ hdr ])
            (reg:SI 172 [ <variable>.sh_offset ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172 [ <variable>.sh_offset ])
        (nil)))

(insn 21 20 23 2 arch/arm/kernel/module.c:278 (set (reg:SI 173 [ <variable>.e_shnum ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 165 [ hdr ])
                    (const_int 48 [0x30])) [0 <variable>.e_shnum+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 21 24 2 arch/arm/kernel/module.c:278 (set (reg:SI 174)
        (mult:SI (reg:SI 170)
            (reg:SI 173 [ <variable>.e_shnum ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 173 [ <variable>.e_shnum ])
        (expr_list:REG_EQUAL (mult:SI (reg:SI 173 [ <variable>.e_shnum ])
                (const_int 40 [0x28]))
            (nil))))

(insn 24 23 25 2 arch/arm/kernel/module.c:278 (set (reg/v/f:SI 146 [ sechdrs_end ])
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (reg:SI 174))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 25 24 26 2 arch/arm/kernel/module.c:282 discrim 1 (set (reg/f:SI 176)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -40 [0xffffffffffffffd8]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 2 arch/arm/kernel/module.c:282 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 176)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8]))
            (nil))))

(insn 27 26 28 2 arch/arm/kernel/module.c:282 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_EQUAL (const_int 40 [0x28])
            (nil))))

(call_insn 28 27 29 2 arch/arm/kernel/module.c:282 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 290 2 arch/arm/kernel/module.c:284 (set (reg/v/f:SI 148 [ s ])
        (reg/v/f:SI 166 [ sechdrs ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 290 29 291 2 arch/arm/kernel/module.c:284 (set (pc)
        (label_ref 179)) -1 (nil))
;; End of basic block 2 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(23)
29, 58, 74, 90, 91, 106, 107, 282, 283, 1705, 1706, 1708, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724


;; Succ edge  25 [100.0%] 

(barrier 291 290 181)

;; Start of basic block ( 25) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 162 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	 24 [cc] 162 177 178
;; live  kill	
;; rd  in  	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(4)
280, 1712, 1725, 1726
;; rd  kill	(3)
1712, 1725, 1726

;; Pred edge  25 [91.0%] 
(code_label 181 291 32 3 19 "" [1 uses])

(note 32 181 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 3 arch/arm/kernel/module.c:285 (set (reg:SI 162 [ D.18688 ])
        (mem/s/j:SI (reg/v/f:SI 148 [ s ]) [0 <variable>.sh_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 arch/arm/kernel/module.c:287 (set (reg:SI 178 [ <variable>.sh_flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ s ])
                (const_int 8 [0x8])) [0 <variable>.sh_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/kernel/module.c:287 (set (reg:SI 177)
        (and:SI (reg:SI 178 [ <variable>.sh_flags ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 178 [ <variable>.sh_flags ])
        (nil)))

(insn 36 35 37 3 arch/arm/kernel/module.c:287 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(jump_insn 37 36 38 3 arch/arm/kernel/module.c:287 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 24 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; rd  out 	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 162
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 162 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 145 180
;; live  kill	 14 [lr]
;; rd  in  	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(4)
26, 260, 1704, 1727
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1704, 1727

;; Pred edge  3 [50.0%]  (fallthru)
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 281 4 arch/arm/kernel/module.c:285 (set (reg/v/f:SI 145 [ secname ])
        (plus:SI (reg/v/f:SI 147 [ secstrs ])
            (reg:SI 162 [ D.18688 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 162 [ D.18688 ])
        (nil)))

(insn 281 39 42 4 arch/arm/kernel/module.c:290 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111ac7b0>)) 167 {*arm_movsi_insn} (nil))

(insn 42 281 43 4 arch/arm/kernel/module.c:290 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 43 42 44 4 arch/arm/kernel/module.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 44 43 46 4 arch/arm/kernel/module.c:290 (set (reg:SI 180)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 46 44 47 4 arch/arm/kernel/module.c:290 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (nil)))

(jump_insn 47 46 48 4 arch/arm/kernel/module.c:290 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [50.0%]  (fallthru)
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 292 5 arch/arm/kernel/module.c:291 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 292 49 293 5 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 5 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 293 292 52)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 182
;; live  kill	 14 [lr]
;; rd  in  	(39)
26, 58, 74, 90, 91, 106, 107, 260, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
25, 259, 1728
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1728

;; Pred edge  4 [50.0%] 
(code_label 52 293 53 6 10 "" [1 uses])

(note 53 52 282 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 282 53 56 6 arch/arm/kernel/module.c:292 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x111b7d40>)) 167 {*arm_movsi_insn} (nil))

(insn 56 282 57 6 arch/arm/kernel/module.c:292 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 57 56 58 6 arch/arm/kernel/module.c:292 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 58 57 60 6 arch/arm/kernel/module.c:292 (set (reg:SI 182)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 60 58 61 6 arch/arm/kernel/module.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 61 60 62 6 arch/arm/kernel/module.c:292 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [50.0%]  (fallthru)
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 294 7 arch/arm/kernel/module.c:293 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 294 63 295 7 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 7 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 295 294 66)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 184
;; live  kill	 14 [lr]
;; rd  in  	(39)
25, 58, 74, 90, 91, 106, 107, 259, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
24, 258, 1729
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1729

;; Pred edge  6 [50.0%] 
(code_label 66 295 67 8 11 "" [1 uses])

(note 67 66 283 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 283 67 70 8 arch/arm/kernel/module.c:294 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x111ced50>)) 167 {*arm_movsi_insn} (nil))

(insn 70 283 71 8 arch/arm/kernel/module.c:294 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 71 70 72 8 arch/arm/kernel/module.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 72 71 74 8 arch/arm/kernel/module.c:294 (set (reg:SI 184)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 74 72 75 8 arch/arm/kernel/module.c:294 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 184)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(jump_insn 75 74 76 8 arch/arm/kernel/module.c:294 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  8 [50.0%]  (fallthru)
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 296 9 arch/arm/kernel/module.c:295 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 296 77 297 9 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 9 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 297 296 80)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 186
;; live  kill	 14 [lr]
;; rd  in  	(39)
24, 58, 74, 90, 91, 106, 107, 258, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
23, 257, 1730
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1730

;; Pred edge  8 [50.0%] 
(code_label 80 297 81 10 12 "" [1 uses])

(note 81 80 284 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 284 81 84 10 arch/arm/kernel/module.c:296 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x111ceea0>)) 167 {*arm_movsi_insn} (nil))

(insn 84 284 85 10 arch/arm/kernel/module.c:296 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 84 86 10 arch/arm/kernel/module.c:296 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 86 85 88 10 arch/arm/kernel/module.c:296 (set (reg:SI 186)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 88 86 89 10 arch/arm/kernel/module.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(jump_insn 89 88 90 10 arch/arm/kernel/module.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  10 [50.0%]  (fallthru)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 298 11 arch/arm/kernel/module.c:297 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 298 91 299 11 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 11 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 299 298 94)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 188
;; live  kill	 14 [lr]
;; rd  in  	(39)
23, 58, 74, 90, 91, 106, 107, 257, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
22, 256, 1731
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1731

;; Pred edge  10 [50.0%] 
(code_label 94 299 95 12 13 "" [1 uses])

(note 95 94 285 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 285 95 98 12 arch/arm/kernel/module.c:298 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x111ab440>)) 167 {*arm_movsi_insn} (nil))

(insn 98 285 99 12 arch/arm/kernel/module.c:298 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 99 98 100 12 arch/arm/kernel/module.c:298 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 100 99 102 12 arch/arm/kernel/module.c:298 (set (reg:SI 188)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 102 100 103 12 arch/arm/kernel/module.c:298 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 188)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(jump_insn 103 102 104 12 arch/arm/kernel/module.c:298 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  12 [50.0%]  (fallthru)
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 300 13 arch/arm/kernel/module.c:299 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 300 105 301 13 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 13 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 301 300 108)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 190
;; live  kill	 14 [lr]
;; rd  in  	(39)
22, 58, 74, 90, 91, 106, 107, 256, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
21, 255, 1732
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1732

;; Pred edge  12 [50.0%] 
(code_label 108 301 109 14 14 "" [1 uses])

(note 109 108 286 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 286 109 112 14 arch/arm/kernel/module.c:300 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x111d9510>)) 167 {*arm_movsi_insn} (nil))

(insn 112 286 113 14 arch/arm/kernel/module.c:300 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 113 112 114 14 arch/arm/kernel/module.c:300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 114 113 116 14 arch/arm/kernel/module.c:300 (set (reg:SI 190)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 116 114 117 14 arch/arm/kernel/module.c:300 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 190)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(jump_insn 117 116 118 14 arch/arm/kernel/module.c:300 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  14 [50.0%]  (fallthru)
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 302 15 arch/arm/kernel/module.c:301 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -36 [0xffffffffffffffdc])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 302 119 303 15 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 15 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 303 302 122)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 192
;; live  kill	 14 [lr]
;; rd  in  	(39)
21, 58, 74, 90, 91, 106, 107, 255, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
20, 254, 1733
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1733

;; Pred edge  14 [50.0%] 
(code_label 122 303 123 16 15 "" [1 uses])

(note 123 122 287 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 287 123 126 16 arch/arm/kernel/module.c:302 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x111d9870>)) 167 {*arm_movsi_insn} (nil))

(insn 126 287 127 16 arch/arm/kernel/module.c:302 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 127 126 128 16 arch/arm/kernel/module.c:302 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 128 127 130 16 arch/arm/kernel/module.c:302 (set (reg:SI 192)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 130 128 131 16 arch/arm/kernel/module.c:302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 192)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(jump_insn 131 130 132 16 arch/arm/kernel/module.c:302 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  16 [50.0%]  (fallthru)
(note 132 131 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 304 17 arch/arm/kernel/module.c:303 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 304 133 305 17 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 17 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 305 304 136)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 194
;; live  kill	 14 [lr]
;; rd  in  	(39)
20, 58, 74, 90, 91, 106, 107, 254, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
19, 253, 1734
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1734

;; Pred edge  16 [50.0%] 
(code_label 136 305 137 18 16 "" [1 uses])

(note 137 136 288 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 288 137 140 18 arch/arm/kernel/module.c:304 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x111cfcc0>)) 167 {*arm_movsi_insn} (nil))

(insn 140 288 141 18 arch/arm/kernel/module.c:304 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 141 140 142 18 arch/arm/kernel/module.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 142 141 144 18 arch/arm/kernel/module.c:304 (set (reg:SI 194)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 144 142 145 18 arch/arm/kernel/module.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 194)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(jump_insn 145 144 146 18 arch/arm/kernel/module.c:304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 150)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  18 [50.0%]  (fallthru)
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 306 19 arch/arm/kernel/module.c:305 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 306 147 307 19 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 19 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 307 306 150)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 196
;; live  kill	 14 [lr]
;; rd  in  	(39)
19, 58, 74, 90, 91, 106, 107, 253, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
18, 252, 1735
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1735

;; Pred edge  18 [50.0%] 
(code_label 150 307 151 20 17 "" [1 uses])

(note 151 150 289 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 289 151 154 20 arch/arm/kernel/module.c:306 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x111d9f00>)) 167 {*arm_movsi_insn} (nil))

(insn 154 289 155 20 arch/arm/kernel/module.c:306 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 155 154 156 20 arch/arm/kernel/module.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 156 155 158 20 arch/arm/kernel/module.c:306 (set (reg:SI 196)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 158 156 159 20 arch/arm/kernel/module.c:306 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 159 158 160 20 arch/arm/kernel/module.c:306 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; rd  out 	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  20 [50.0%]  (fallthru)
(note 160 159 161 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 308 21 arch/arm/kernel/module.c:307 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 308 161 309 21 (set (pc)
        (label_ref 176)) -1 (nil))
;; End of basic block 21 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%] 

(barrier 309 308 164)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 165 166 167
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 198
;; live  kill	 14 [lr]
;; rd  in  	(39)
18, 58, 74, 90, 91, 106, 107, 252, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
17, 251, 1736
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1736

;; Pred edge  20 [50.0%] 
(code_label 164 309 165 22 18 "" [1 uses])

(note 165 164 167 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 167 165 168 22 arch/arm/kernel/module.c:308 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x111d99c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x111d99c0>)
        (nil)))

(insn 168 167 169 22 arch/arm/kernel/module.c:308 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ secname ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ secname ])
        (nil)))

(call_insn/i 169 168 170 22 arch/arm/kernel/module.c:308 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 170 169 172 22 arch/arm/kernel/module.c:308 (set (reg:SI 198)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 172 170 173 22 arch/arm/kernel/module.c:308 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 198)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(jump_insn 173 172 174 22 arch/arm/kernel/module.c:308 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
17, 58, 74, 90, 91, 106, 107, 251, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	
;; live  kill	
;; rd  in  	(39)
17, 58, 74, 90, 91, 106, 107, 251, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  22 [50.0%]  (fallthru)
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 23 arch/arm/kernel/module.c:309 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 148 [ s ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(39)
17, 58, 74, 90, 91, 106, 107, 251, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 3 23 5 7 9 11 13 15 17 19 22 21) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u211(11){ }u212(13){ }u213(25){ }u214(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	 148
;; live  kill	
;; rd  in  	(59)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(1)
1707
;; rd  kill	(2)
1707, 1708

;; Pred edge  3 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  22 [50.0%] 
;; Pred edge  21 [100.0%] 
(code_label 176 175 177 24 9 "" [11 uses])

(note 177 176 178 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 179 24 arch/arm/kernel/module.c:284 (set (reg/v/f:SI 148 [ s ])
        (plus:SI (reg/v/f:SI 148 [ s ])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(58)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 280, 282, 283, 1704, 1705, 1706, 1707, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  25 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 24 2) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(59)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 280, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(1)
269
;; rd  kill	(0)


;; Pred edge  24 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 179 178 180 25 8 "" [1 uses])

(note 180 179 182 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 182 180 183 25 arch/arm/kernel/module.c:284 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ s ])
            (reg/v/f:SI 146 [ sechdrs_end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 183 182 184 25 arch/arm/kernel/module.c:284 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 25 -> ( 3 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 165 166 167
;; rd  out 	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736


;; Succ edge  3 [91.0%] 
;; Succ edge  26 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 140 141 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167
;; live  gen 	 140 141 219
;; live  kill	
;; rd  in  	(49)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736
;; rd  gen 	(3)
1699, 1701, 1749
;; rd  kill	(5)
1698, 1699, 1700, 1701, 1749

;; Pred edge  25 [9.0%]  (fallthru,loop_exit)
(note 184 183 185 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 185 184 186 26 arch/arm/kernel/module.c:284 discrim 1 (set (reg:SI 140 [ ivtmp.364 ])
        (reg/v/f:SI 167 [ mod ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 167 [ mod ])
        (nil)))

(insn 186 185 188 26 arch/arm/kernel/module.c:284 discrim 1 (set (reg:SI 141 [ ivtmp.359 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 188 186 210 26 arch/arm/kernel/module.c:313 (set (reg/f:SI 219)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -40 [0xffffffffffffffd8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; rd  out 	(52)
17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 269, 282, 283, 1699, 1701, 1704, 1705, 1706, 1707, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1749


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 30 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 219
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  gen 	 24 [cc] 151
;; live  kill	
;; rd  in  	(60)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 269, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(2)
268, 1711
;; rd  kill	(1)
1711

;; Pred edge  30 [80.0%]  (dfs_back)
;; Pred edge  26 [100.0%]  (fallthru)
(code_label 210 188 187 27 21 "" [1 uses])

(note 187 210 189 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 189 187 190 27 arch/arm/kernel/module.c:313 (set (reg/f:SI 151 [ D.18733 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 219)
                (reg:SI 141 [ ivtmp.359 ])) [0 <variable>.unw_sec+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 190 189 191 27 arch/arm/kernel/module.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 151 [ D.18733 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 192 27 arch/arm/kernel/module.c:313 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 27 -> ( 28 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; rd  out 	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 268, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749


;; Succ edge  28 [85.0%]  (fallthru)
;; Succ edge  30 [15.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u237(11){ }u238(13){ }u239(25){ }u240(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 219
;; lr  def 	 24 [cc] 150 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 151 165 166 219
;; live  gen 	 24 [cc] 150 201
;; live  kill	
;; rd  in  	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 268, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(3)
267, 1710, 1737
;; rd  kill	(2)
1710, 1737

;; Pred edge  27 [85.0%]  (fallthru)
(note 192 191 194 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 194 192 195 28 arch/arm/kernel/module.c:313 discrim 1 (set (reg:SI 201)
        (plus:SI (reg/f:SI 219)
            (reg:SI 141 [ ivtmp.359 ]))) 4 {*arm_addsi3} (nil))

(insn 195 194 196 28 arch/arm/kernel/module.c:313 discrim 1 (set (reg/f:SI 150 [ D.18736 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 201)
                (const_int 4 [0x4])) [0 <variable>.txt_sec+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 196 195 197 28 arch/arm/kernel/module.c:313 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 150 [ D.18736 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 197 196 198 28 arch/arm/kernel/module.c:313 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; rd  out 	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 267, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749


;; Succ edge  29 [69.8%]  (fallthru)
;; Succ edge  30 [30.2%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 150 151 165 166 219
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 149
;; live  kill	 14 [lr]
;; rd  in  	(59)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 267, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(2)
15, 1709
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1709

;; Pred edge  28 [69.8%]  (fallthru)
(note 198 197 199 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 29 arch/arm/kernel/module.c:315 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.18733 ])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 200 199 201 29 arch/arm/kernel/module.c:315 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.18733 ])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151 [ D.18733 ])
        (nil)))

(insn 201 200 202 29 arch/arm/kernel/module.c:315 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/f:SI 150 [ D.18736 ])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 202 201 203 29 arch/arm/kernel/module.c:315 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/f:SI 150 [ D.18736 ])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150 [ D.18736 ])
        (nil)))

(call_insn 203 202 204 29 arch/arm/kernel/module.c:315 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_table_add") [flags 0x41] <function_decl 0x11169e00 unwind_table_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 204 203 205 29 arch/arm/kernel/module.c:315 (set (reg/f:SI 149 [ D.18743 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 205 204 206 29 arch/arm/kernel/module.c:314 (set (mem/s/f/j:SI (plus:SI (reg:SI 140 [ ivtmp.364 ])
                (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])
        (reg/f:SI 149 [ D.18743 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ D.18743 ])
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; rd  out 	(48)
15, 58, 74, 90, 91, 106, 107, 267, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 27 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u262(11){ }u263(13){ }u264(25){ }u265(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  gen 	 24 [cc] 140 141
;; live  kill	
;; rd  in  	(60)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 267, 268, 282, 283, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(3)
265, 1698, 1700
;; rd  kill	(4)
1698, 1699, 1700, 1701

;; Pred edge  27 [15.0%] 
;; Pred edge  28 [30.2%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 206 205 207 30 20 "" [2 uses])

(note 207 206 208 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 209 30 arch/arm/kernel/module.c:314 (set (reg:SI 141 [ ivtmp.359 ])
        (plus:SI (reg:SI 141 [ ivtmp.359 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 209 208 211 30 arch/arm/kernel/module.c:314 (set (reg:SI 140 [ ivtmp.364 ])
        (plus:SI (reg:SI 140 [ ivtmp.364 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 211 209 212 30 arch/arm/kernel/module.c:312 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ ivtmp.359 ])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 212 211 213 30 arch/arm/kernel/module.c:312 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8000 [0x1f40])
            (nil))))
;; End of basic block 30 -> ( 27 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 141 165 166 219
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141 165 166 219
;; rd  out 	(57)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 282, 283, 1698, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749


;; Succ edge  27 [80.0%]  (dfs_back)
;; Succ edge  31 [20.0%]  (fallthru,loop_exit)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 165 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 165 166
;; lr  def 	 143 144 202 203 205 206 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 165 166
;; live  gen 	 143 144 202 203 205 206 207 208
;; live  kill	
;; rd  in  	(57)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 282, 283, 1698, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1749
;; rd  gen 	(8)
1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743
;; rd  kill	(8)
1702, 1703, 1738, 1739, 1740, 1741, 1742, 1743

;; Pred edge  30 [20.0%]  (fallthru,loop_exit)
(note 213 212 214 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 214 213 216 31 arch/arm/kernel/module.c:260 (set (reg:SI 202 [ <variable>.e_shstrndx ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 165 [ hdr ])
                    (const_int 50 [0x32])) [0 <variable>.e_shstrndx+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 216 214 217 31 arch/arm/kernel/module.c:260 (set (reg:SI 203)
        (mult:SI (reg:SI 141 [ ivtmp.359 ])
            (reg:SI 202 [ <variable>.e_shstrndx ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 202 [ <variable>.e_shstrndx ])
        (nil)))

(insn 217 216 218 31 arch/arm/kernel/module.c:260 (set (reg/f:SI 205)
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (reg:SI 203))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 218 217 219 31 arch/arm/kernel/module.c:260 (set (reg:SI 206 [ <variable>.sh_offset ])
        (mem/s/j:SI (plus:SI (reg/f:SI 205)
                (const_int 16 [0x10])) [0 <variable>.sh_offset+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 205)
        (nil)))

(insn 219 218 220 31 arch/arm/kernel/module.c:260 (set (reg/v/f:SI 144 [ secstrs ])
        (plus:SI (reg/v/f:SI 165 [ hdr ])
            (reg:SI 206 [ <variable>.sh_offset ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 206 [ <variable>.sh_offset ])
        (nil)))

(insn 220 219 222 31 arch/arm/kernel/module.c:262 (set (reg:SI 207 [ <variable>.e_shnum ])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 165 [ hdr ])
                    (const_int 48 [0x30])) [0 <variable>.e_shnum+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 165 [ hdr ])
        (nil)))

(insn 222 220 223 31 arch/arm/kernel/module.c:262 (set (reg:SI 208)
        (mult:SI (reg:SI 141 [ ivtmp.359 ])
            (reg:SI 207 [ <variable>.e_shnum ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 207 [ <variable>.e_shnum ])
        (expr_list:REG_DEAD (reg:SI 141 [ ivtmp.359 ])
            (nil))))

(insn 223 222 310 31 arch/arm/kernel/module.c:262 (set (reg/v/f:SI 143 [ se ])
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (reg:SI 208))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(jump_insn 310 223 311 31 (set (pc)
        (label_ref 239)) -1 (nil))
;; End of basic block 31 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(65)
15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 265, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1749


;; Succ edge  34 [100.0%] 

(barrier 311 310 241)

;; Start of basic block ( 34) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 211 212 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 211 212 213
;; live  kill	 14 [lr]
;; rd  in  	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(5)
14, 250, 1744, 1745, 1746
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 1744, 1745, 1746

;; Pred edge  34 [95.5%] 
(code_label 241 311 226 32 24 "" [1 uses])

(note 226 241 228 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 228 226 229 32 arch/arm/kernel/module.c:263 (set (reg:SI 212 [ <variable>.sh_name ])
        (mem/s/j:SI (reg/v/f:SI 166 [ sechdrs ]) [0 <variable>.sh_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 229 228 279 32 arch/arm/kernel/module.c:263 (set (reg:SI 211)
        (plus:SI (reg/v/f:SI 144 [ secstrs ])
            (reg:SI 212 [ <variable>.sh_name ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 212 [ <variable>.sh_name ])
        (nil)))

(insn 279 229 231 32 arch/arm/kernel/module.c:263 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x111db270>)) 167 {*arm_movsi_insn} (nil))

(insn 231 279 232 32 arch/arm/kernel/module.c:263 (set (reg:SI 1 r1)
        (reg:SI 211)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 211)
        (nil)))

(call_insn/i 232 231 233 32 arch/arm/kernel/module.c:263 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 233 232 235 32 arch/arm/kernel/module.c:263 (set (reg:SI 213)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 235 233 236 32 arch/arm/kernel/module.c:263 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 213)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 213)
        (nil)))

(jump_insn 236 235 237 32 arch/arm/kernel/module.c:263 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 247)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 32 -> ( 36 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(58)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749


;; Succ edge  36 [4.5%]  (loop_exit)
;; Succ edge  33 [95.5%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u301(11){ }u302(13){ }u303(25){ }u304(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; live  gen 	 166
;; live  kill	
;; rd  in  	(58)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(1)
1714
;; rd  kill	(2)
1714, 1715

;; Pred edge  32 [95.5%]  (fallthru)
(note 237 236 238 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 33 arch/arm/kernel/module.c:262 (set (reg/v/f:SI 166 [ sechdrs ])
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(57)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 31) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u306(11){ }u307(13){ }u308(25){ }u309(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 166
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(71)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 250, 265, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(1)
263
;; rd  kill	(0)


;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
;; Pred edge  31 [100.0%] 
(code_label 239 238 240 34 22 "" [1 uses])

(note 240 239 242 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 242 240 243 34 arch/arm/kernel/module.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 166 [ sechdrs ])
            (reg/v/f:SI 143 [ se ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 243 242 312 34 arch/arm/kernel/module.c:262 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 34 -> ( 32 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 144 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 166
;; rd  out 	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749


;; Succ edge  32 [95.5%] 
;; Succ edge  35 [4.5%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  34 [4.5%]  (fallthru)
(note 312 243 313 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn 313 312 314 35 (set (pc)
        (label_ref 261)) -1 (nil))
;; End of basic block 35 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(70)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749


;; Succ edge  39 [100.0%]  (loop_exit)

(barrier 314 313 247)

;; Start of basic block ( 32) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u313(11){ }u314(13){ }u315(25){ }u316(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(58)
14, 58, 74, 90, 91, 106, 107, 250, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(1)
249
;; rd  kill	(0)


;; Pred edge  32 [4.5%]  (loop_exit)
(code_label 247 314 248 36 23 "" [1 uses])

(note 248 247 250 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 250 248 251 36 arch/arm/kernel/module.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 166 [ sechdrs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 251 250 252 36 arch/arm/kernel/module.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 261)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 0 [0x0])
            (nil))))
;; End of basic block 36 -> ( 37 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(58)
14, 58, 74, 90, 91, 106, 107, 249, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749


;; Succ edge  37 [100.0%]  (fallthru)
;; Succ edge  39

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u319(11){ }u320(13){ }u321(25){ }u322(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 24 [cc] 214 215
;; live  kill	
;; rd  in  	(58)
14, 58, 74, 90, 91, 106, 107, 249, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1749
;; rd  gen 	(3)
262, 1747, 1748
;; rd  kill	(2)
1747, 1748

;; Pred edge  36 [100.0%]  (fallthru)
(note 252 251 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg/f:SI 214)
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>)) 167 {*arm_movsi_insn} (nil))

(insn 254 253 255 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg:SI 215 [ smp_on_up ])
        (mem/c/i:SI (reg/f:SI 214) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 214)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>) [0 smp_on_up+0 S4 A32])
            (nil))))

(insn 255 254 256 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 215 [ smp_on_up ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 215 [ smp_on_up ])
        (nil)))

(jump_insn 256 255 257 37 arch/arm/kernel/module.c:326 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 261)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; rd  out 	(60)
14, 58, 74, 90, 91, 106, 107, 262, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749


;; Succ edge  38 [39.0%]  (fallthru)
;; Succ edge  39 [61.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u326(11){ }u327(13){ }u328(25){ }u329(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(60)
14, 58, 74, 90, 91, 106, 107, 262, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;; rd  gen 	(0)

;; rd  kill	(15)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122

;; Pred edge  37 [39.0%]  (fallthru)
(note 257 256 258 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 258 257 259 38 arch/arm/kernel/module.c:328 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 166 [ sechdrs ])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 259 258 260 38 arch/arm/kernel/module.c:328 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 166 [ sechdrs ])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 166 [ sechdrs ])
        (nil)))

(call_insn 260 259 261 38 arch/arm/kernel/module.c:328 (parallel [
            (call (mem:SI (symbol_ref:SI ("fixup_smp") [flags 0x41] <function_decl 0x11179380 fixup_smp>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(60)
14, 58, 74, 90, 91, 106, 107, 262, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 36 37 38 35) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u335(11){ }u336(13){ }u337(25){ }u338(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(74)
14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 58, 74, 90, 91, 106, 107, 249, 262, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749
;; rd  gen 	(1)
10
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  36
;; Pred edge  37 [61.0%] 
;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%]  (loop_exit)
(code_label 261 260 262 39 25 "" [3 uses])

(note 262 261 267 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 267 262 273 39 arch/arm/kernel/module.c:333 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 273 267 0 39 arch/arm/kernel/module.c:333 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 39 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(62)
10, 58, 74, 90, 91, 106, 107, 249, 262, 263, 282, 283, 1698, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function apply_relocate (apply_relocate)[0:991]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 53 count 99 (  2.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 53 count 114 (  3.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 53 count 104 (  2.8)


apply_relocate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={9d,5u} r2={9d,5u} r3={8d,4u} r11={1d,36u} r12={5d} r13={1d,47u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={20d,19u} r25={1d,36u} r26={1d,36u,1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,3u,2d} r139={1d,2u} r140={1d,2u} r142={2d,3u,1d} r143={2d,4u} r144={2d,3u} r145={1d,2u} r146={1d,4u} r147={1d,3u} r148={2d,5u} r149={1d,2u} r150={1d,3u} r151={1d,2u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,4u,2d} r158={1d,10u} r159={1d,2u} r160={1d,13u} r161={5d,1u} r162={1d,3u} r163={1d,2u} r164={1d,2u} r166={1d,3u} r167={1d,1u} r168={1d,1u,1d} r169={1d,4u,1d} r170={1d,4u} r171={1d,1u} r172={1d,3u} r173={1d,1u} r175={1d,1u} r176={1d,1u,1d} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,2u} r185={1d,1u} r186={1d,1u} r188={1d,1u} r189={1d,11u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r198={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1d} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r233={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r239={1d,1u} r240={1d,1u} 
;;    total ref usage 973{605d,358u,10e} in 174{170 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509
0[0,10] 1[10,9] 2[19,9] 3[28,8] 11[36,1] 12[37,5] 13[42,1] 14[43,5] 15[48,4] 16[52,4] 17[56,4] 18[60,4] 19[64,4] 20[68,4] 21[72,4] 22[76,4] 23[80,4] 24[84,20] 25[104,1] 26[105,1] 27[106,4] 28[110,4] 29[114,4] 30[118,4] 31[122,4] 32[126,4] 33[130,4] 34[134,4] 35[138,4] 36[142,4] 37[146,4] 38[150,4] 39[154,4] 40[158,4] 41[162,4] 42[166,4] 43[170,4] 44[174,4] 45[178,4] 46[182,4] 47[186,4] 48[190,4] 49[194,4] 50[198,4] 51[202,4] 52[206,4] 53[210,4] 54[214,4] 55[218,4] 56[222,4] 57[226,4] 58[230,4] 59[234,4] 60[238,4] 61[242,4] 62[246,4] 63[250,4] 64[254,4] 65[258,4] 66[262,4] 67[266,4] 68[270,4] 69[274,4] 70[278,4] 71[282,4] 72[286,4] 73[290,4] 74[294,4] 75[298,4] 76[302,4] 77[306,4] 78[310,4] 79[314,4] 80[318,4] 81[322,4] 82[326,4] 83[330,4] 84[334,4] 85[338,4] 86[342,4] 87[346,4] 88[350,4] 89[354,4] 90[358,4] 91[362,4] 92[366,4] 93[370,4] 94[374,4] 95[378,4] 96[382,4] 97[386,4] 98[390,4] 99[394,4] 100[398,4] 101[402,4] 102[406,4] 103[410,4] 104[414,4] 105[418,4] 106[422,4] 107[426,4] 108[430,4] 109[434,4] 110[438,4] 111[442,4] 112[446,4] 113[450,4] 114[454,4] 115[458,4] 116[462,4] 117[466,4] 118[470,4] 119[474,4] 120[478,4] 121[482,4] 122[486,4] 123[490,4] 124[494,4] 125[498,4] 126[502,4] 127[506,4] 134[510,1] 139[511,1] 140[512,1] 142[513,2] 143[515,2] 144[517,2] 145[519,1] 146[520,1] 147[521,1] 148[522,2] 149[524,1] 150[525,1] 151[526,1] 153[527,1] 154[528,1] 155[529,1] 156[530,1] 158[531,1] 159[532,1] 160[533,1] 161[534,5] 162[539,1] 163[540,1] 164[541,1] 166[542,1] 167[543,1] 168[544,1] 169[545,1] 170[546,1] 171[547,1] 172[548,1] 173[549,1] 175[550,1] 176[551,1] 178[552,1] 179[553,1] 180[554,1] 182[555,1] 183[556,1] 184[557,1] 185[558,1] 186[559,1] 188[560,1] 189[561,1] 190[562,1] 191[563,1] 192[564,1] 193[565,1] 194[566,1] 195[567,1] 196[568,1] 198[569,1] 201[570,1] 202[571,1] 203[572,1] 204[573,1] 207[574,1] 208[575,1] 209[576,1] 210[577,1] 211[578,1] 212[579,1] 213[580,1] 214[581,1] 215[582,1] 216[583,1] 217[584,1] 218[585,1] 219[586,1] 220[587,1] 221[588,1] 222[589,1] 223[590,1] 224[591,1] 225[592,1] 226[593,1] 227[594,1] 228[595,1] 229[596,1] 230[597,1] 231[598,1] 233[599,1] 235[600,1] 236[601,1] 237[602,1] 239[603,1] 240[604,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d27(2){ }d35(3){ }d36(11){ }d41(12){ }d42(13){ }d47(14){ }d104(25){ }d105(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 18, 27, 35, 36, 41, 42, 47, 104, 105
;; rd  kill	(50)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 104, 105
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 18, 27, 35, 36, 41, 42, 47, 104, 105

( 0 )->[2]->( 34 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d36(bb 0 insn -1) }u1(13){ d42(bb 0 insn -1) }u2(25){ d104(bb 0 insn -1) }u3(26){ d105(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143 148 149 150 151 164 166 167 168 169 170 171 172 173 175 176 239 240
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 143 148 149 150 151 164 166 167 168 169 170 171 172 173 175 176 239 240
;; live  kill	
;; rd  in  	(10)
9, 18, 27, 35, 36, 41, 42, 47, 104, 105
;; rd  gen 	(18)
516, 522, 524, 525, 526, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 603, 604
;; rd  kill	(20)
515, 516, 522, 523, 524, 525, 526, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 603, 604
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(28)
9, 18, 27, 35, 36, 41, 42, 47, 104, 105, 516, 522, 524, 525, 526, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 6
;;      reg 26 { d105(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 6 uid 11
;;      reg 168 { d544(bb 2 insn 4) }
;;      reg 172 { d548(bb 2 insn 10) }
;;   eq_note reg 168 { }
;;   UD chains for insn luid 7 uid 12
;;      reg 166 { d542(bb 2 insn 2) }
;;      reg 171 { d547(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 14
;;      reg 169 { d545(bb 2 insn 5) }
;;      reg 172 { d548(bb 2 insn 10) }
;;   eq_note reg 169 { }
;;   UD chains for insn luid 9 uid 15
;;      reg 166 { d542(bb 2 insn 2) }
;;      reg 173 { d549(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 150 { d525(bb 2 insn 15) }
;;   UD chains for insn luid 11 uid 18
;;      reg 172 { d548(bb 2 insn 10) }
;;      reg 176 { d551(bb 2 insn 16) }
;;   eq_note reg 176 { }
;;   UD chains for insn luid 12 uid 19
;;      reg 166 { d542(bb 2 insn 2) }
;;      reg 175 { d550(bb 2 insn 18) }
;;   UD chains for insn luid 13 uid 20
;;      reg 150 { d525(bb 2 insn 15) }
;;   UD chains for insn luid 15 uid 22
;;      reg 143 { d516(bb 2 insn 21) }

( 34 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u28(11){ d36(bb 0 insn -1) }u29(13){ d42(bb 0 insn -1) }u30(25){ d104(bb 0 insn -1) }u31(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 151 164
;; lr  def 	 24 [cc] 162 163 178 179 180
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  gen 	 24 [cc] 162 163 178 179 180
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(6)
103, 539, 540, 552, 553, 554
;; rd  kill	(25)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 539, 540, 552, 553, 554
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 26
;;      reg 143 { d516(bb 2 insn 21) d515(bb 33 insn 244) }
;;      reg 164 { d541(bb 2 insn 20) }
;;   UD chains for insn luid 1 uid 27
;;      reg 178 { d552(bb 3 insn 26) }
;;   UD chains for insn luid 2 uid 28
;;      reg 163 { d540(bb 3 insn 27) }
;;   UD chains for insn luid 3 uid 32
;;      reg 151 { d526(bb 2 insn 12) }
;;   UD chains for insn luid 4 uid 33
;;      reg 180 { d554(bb 3 insn 32) }
;;   UD chains for insn luid 5 uid 34
;;      reg 162 { d539(bb 3 insn 28) }
;;      reg 179 { d553(bb 3 insn 33) }
;;   UD chains for insn luid 6 uid 35
;;      reg 24 { d103(bb 3 insn 34) }

( 3 )->[4]->( 36 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u41(11){ d36(bb 0 insn -1) }u42(13){ d42(bb 0 insn -1) }u43(25){ d104(bb 0 insn -1) }u44(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 169 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 169 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 161 182
;; live  kill	 14 [lr]
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
8, 538, 555
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 555
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(98)
8, 18, 27, 35, 36, 41, 42, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 170 { d546(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 41
;;      reg 182 { d555(bb 4 insn 39) }
;;   UD chains for insn luid 3 uid 42
;;      reg 169 { d545(bb 2 insn 5) }
;;   UD chains for insn luid 4 uid 43
;;      reg 148 { d523(bb 33 insn 243) d522(bb 2 insn 22) }
;;   UD chains for insn luid 5 uid 44
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d3(bb 4 insn 40) }
;;      reg 1 { d17(bb 4 insn 41) }
;;      reg 2 { d26(bb 4 insn 42) }
;;      reg 3 { d34(bb 4 insn 43) }

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u54(11){ d36(bb 0 insn -1) }u55(13){ d42(bb 0 insn -1) }u56(25){ d104(bb 0 insn -1) }u57(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 162 164 167
;; lr  def 	 24 [cc] 145 146 159 160 183 184 185 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; live  gen 	 24 [cc] 145 146 159 160 183 184 185 186
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(9)
101, 519, 520, 532, 533, 556, 557, 558, 559
;; rd  kill	(28)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 519, 520, 532, 533, 556, 557, 558, 559
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 159 160 163 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 159 160 163 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 162 { d539(bb 3 insn 28) }
;;   UD chains for insn luid 1 uid 51
;;      reg 151 { d526(bb 2 insn 12) }
;;   UD chains for insn luid 2 uid 52
;;      reg 183 { d556(bb 5 insn 50) }
;;      reg 184 { d557(bb 5 insn 51) }
;;   UD chains for insn luid 3 uid 53
;;      reg 162 { d539(bb 3 insn 28) }
;;      reg 184 { d557(bb 5 insn 51) }
;;   UD chains for insn luid 4 uid 54
;;      reg 167 { d543(bb 2 insn 3) }
;;      reg 185 { d558(bb 5 insn 53) }
;;   UD chains for insn luid 5 uid 55
;;      reg 143 { d516(bb 2 insn 21) d515(bb 33 insn 244) }
;;      reg 164 { d541(bb 2 insn 20) }
;;   UD chains for insn luid 6 uid 56
;;      reg 149 { d524(bb 2 insn 19) }
;;   UD chains for insn luid 7 uid 57
;;      reg 159 { d532(bb 5 insn 56) }
;;   UD chains for insn luid 8 uid 58
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 186 { d559(bb 5 insn 57) }
;;   UD chains for insn luid 9 uid 59
;;      reg 24 { d101(bb 5 insn 58) }

( 5 )->[6]->( 36 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u72(11){ d36(bb 0 insn -1) }u73(13){ d42(bb 0 insn -1) }u74(25){ d104(bb 0 insn -1) }u75(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 159 160 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 159 160 169 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 159 160 169 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 161 188
;; live  kill	 14 [lr]
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
7, 537, 560
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 560
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(98)
7, 18, 27, 35, 36, 41, 42, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 62
;;      reg 170 { d546(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 63
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 145 { d519(bb 5 insn 54) }
;;   UD chains for insn luid 2 uid 64
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 160 { d533(bb 5 insn 55) }
;;   UD chains for insn luid 3 uid 65
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 159 { d532(bb 5 insn 56) }
;;   UD chains for insn luid 5 uid 67
;;      reg 188 { d560(bb 6 insn 62) }
;;   UD chains for insn luid 6 uid 68
;;      reg 169 { d545(bb 2 insn 5) }
;;   UD chains for insn luid 7 uid 69
;;      reg 148 { d523(bb 33 insn 243) d522(bb 2 insn 22) }
;;   UD chains for insn luid 8 uid 70
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d2(bb 6 insn 66) }
;;      reg 1 { d15(bb 6 insn 67) }
;;      reg 2 { d24(bb 6 insn 68) }
;;      reg 3 { d32(bb 6 insn 69) }

( 5 )->[7]->( 13 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u91(11){ d36(bb 0 insn -1) }u92(13){ d42(bb 0 insn -1) }u93(25){ d104(bb 0 insn -1) }u94(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 160 163 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 160 163
;; lr  def 	 24 [cc] 147 158 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 160 163 164 167 169 170 239 240
;; live  gen 	 24 [cc] 147 158 189
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(4)
99, 521, 531, 561
;; rd  kill	(23)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 521, 531, 561
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 99, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 76
;;      reg 149 { d524(bb 2 insn 19) }
;;   UD chains for insn luid 1 uid 77
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;   UD chains for insn luid 2 uid 78
;;      reg 163 { d540(bb 3 insn 27) }
;;   UD chains for insn luid 3 uid 79
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 4 uid 80
;;      reg 24 { d99(bb 7 insn 79) }

( 7 )->[8]->( 21 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u101(11){ d36(bb 0 insn -1) }u102(13){ d42(bb 0 insn -1) }u103(25){ d104(bb 0 insn -1) }u104(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 99, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
98
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 98, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 81
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 1 uid 82
;;      reg 24 { d98(bb 8 insn 81) }

( 8 )->[9]->( 21 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u107(11){ d36(bb 0 insn -1) }u108(13){ d42(bb 0 insn -1) }u109(25){ d104(bb 0 insn -1) }u110(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 98, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
97
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 83
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 1 uid 84
;;      reg 24 { d97(bb 9 insn 83) }

( 9 )->[10]->( 33 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u113(11){ d36(bb 0 insn -1) }u114(13){ d42(bb 0 insn -1) }u115(25){ d104(bb 0 insn -1) }u116(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 86
;;      reg 24 { d97(bb 9 insn 83) }

( 10 )->[11]->( 12 32 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u118(11){ d36(bb 0 insn -1) }u119(13){ d42(bb 0 insn -1) }u120(25){ d104(bb 0 insn -1) }u121(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
96
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 87
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 1 uid 88
;;      reg 24 { d96(bb 11 insn 87) }

( 11 )->[12]->( 20 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ d36(bb 0 insn -1) }u-1(13){ d42(bb 0 insn -1) }u-1(25){ d104(bb 0 insn -1) }u-1(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }

( 7 )->[13]->( 28 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u124(11){ d36(bb 0 insn -1) }u125(13){ d42(bb 0 insn -1) }u126(25){ d104(bb 0 insn -1) }u127(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 99, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
95
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 92
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 1 uid 93
;;      reg 24 { d95(bb 13 insn 92) }

( 13 )->[14]->( 18 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u130(11){ d36(bb 0 insn -1) }u131(13){ d42(bb 0 insn -1) }u132(25){ d104(bb 0 insn -1) }u133(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 95
;;      reg 24 { d95(bb 13 insn 92) }

( 14 )->[15]->( 20 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u135(11){ d36(bb 0 insn -1) }u136(13){ d42(bb 0 insn -1) }u137(25){ d104(bb 0 insn -1) }u138(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
94
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 94, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 96
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 1 uid 97
;;      reg 24 { d94(bb 15 insn 96) }

( 15 )->[16]->( 17 32 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u141(11){ d36(bb 0 insn -1) }u142(13){ d42(bb 0 insn -1) }u143(25){ d104(bb 0 insn -1) }u144(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 94, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
93
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 98
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 1 uid 99
;;      reg 24 { d93(bb 16 insn 98) }

( 16 )->[17]->( 27 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ d36(bb 0 insn -1) }u-1(13){ d42(bb 0 insn -1) }u-1(25){ d104(bb 0 insn -1) }u-1(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }

( 14 )->[18]->( 32 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u147(11){ d36(bb 0 insn -1) }u148(13){ d42(bb 0 insn -1) }u149(25){ d104(bb 0 insn -1) }u150(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
92
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 103
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 1 uid 104
;;      reg 24 { d92(bb 18 insn 103) }

( 18 )->[19]->( 29 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ d36(bb 0 insn -1) }u-1(13){ d42(bb 0 insn -1) }u-1(25){ d104(bb 0 insn -1) }u-1(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }

( 15 12 )->[20]->( 33 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u153(11){ d36(bb 0 insn -1) }u154(13){ d42(bb 0 insn -1) }u155(25){ d104(bb 0 insn -1) }u156(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 160 189
;; lr  def 	 190 191 192
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 190 191 192
;; live  kill	
;; rd  in  	(98)
9, 18, 27, 35, 36, 41, 42, 47, 94, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
562, 563, 564
;; rd  kill	(3)
562, 563, 564
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(98)
9, 18, 27, 35, 36, 41, 42, 47, 94, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 112
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;   UD chains for insn luid 1 uid 113
;;      reg 146 { d520(bb 5 insn 52) }
;;   UD chains for insn luid 2 uid 114
;;      reg 190 { d562(bb 20 insn 112) }
;;      reg 191 { d563(bb 20 insn 113) }
;;   UD chains for insn luid 3 uid 115
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;      reg 192 { d564(bb 20 insn 114) }

( 8 9 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ d36(bb 0 insn -1) }u164(13){ d42(bb 0 insn -1) }u165(25){ d104(bb 0 insn -1) }u166(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 189
;; lr  def 	 24 [cc] 140 144 193 194
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc] 140 144 193 194
;; live  kill	
;; rd  in  	(98)
9, 18, 27, 35, 36, 41, 42, 47, 97, 98, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(5)
91, 512, 518, 565, 566
;; rd  kill	(25)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 512, 517, 518, 565, 566
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 121
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;   UD chains for insn luid 1 uid 122
;;      reg 140 { d512(bb 21 insn 121) }
;;   UD chains for insn luid 2 uid 123
;;      reg 193 { d565(bb 21 insn 122) }
;;   UD chains for insn luid 3 uid 124
;;      reg 144 { d518(bb 21 insn 123) }
;;   UD chains for insn luid 4 uid 125
;;      reg 194 { d566(bb 21 insn 124) }
;;   UD chains for insn luid 5 uid 126
;;      reg 24 { d91(bb 21 insn 125) }

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u173(11){ d36(bb 0 insn -1) }u174(13){ d42(bb 0 insn -1) }u175(25){ d104(bb 0 insn -1) }u176(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 144
;; live  kill	
;; rd  in  	(96)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
517
;; rd  kill	(2)
517, 518
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 128
;;      reg 144 { d518(bb 21 insn 123) }

( 21 22 )->[23]->( 25 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u178(11){ d36(bb 0 insn -1) }u179(13){ d42(bb 0 insn -1) }u180(25){ d104(bb 0 insn -1) }u181(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 146 147 239
;; lr  def 	 24 [cc] 139 156 195 196 198 201 202 203 204
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc] 139 156 195 196 198 201 202 203 204
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(10)
89, 511, 530, 567, 568, 569, 570, 571, 572, 573
;; rd  kill	(29)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 511, 530, 567, 568, 569, 570, 571, 572, 573
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 131
;;      reg 146 { d520(bb 5 insn 52) }
;;   UD chains for insn luid 1 uid 132
;;      reg 139 { d511(bb 23 insn 131) }
;;      reg 147 { d521(bb 7 insn 77) }
;;   UD chains for insn luid 2 uid 133
;;      reg 144 { d518(bb 21 insn 123) d517(bb 22 insn 128) }
;;      reg 195 { d567(bb 23 insn 132) }
;;   UD chains for insn luid 3 uid 135
;;      reg 156 { d530(bb 23 insn 133) }
;;   UD chains for insn luid 4 uid 136
;;      reg 196 { d568(bb 23 insn 135) }
;;   UD chains for insn luid 5 uid 137
;;      reg 24 { d90(bb 23 insn 136) }
;;   UD chains for insn luid 6 uid 140
;;      reg 156 { d530(bb 23 insn 133) }
;;      reg 239 { d603(bb 2 insn 139) }
;;   eq_note reg 156 { }
;;   UD chains for insn luid 7 uid 141
;;      reg 24 { d85(bb 23 insn 140) }
;;   UD chains for insn luid 8 uid 143
;;      reg 198 { d569(bb 23 insn 137) }
;;      reg 201 { d570(bb 23 insn 141) }
;;   UD chains for insn luid 9 uid 144
;;      reg 202 { d571(bb 23 insn 143) }
;;   UD chains for insn luid 10 uid 145
;;      reg 203 { d572(bb 23 insn 144) }
;;   UD chains for insn luid 11 uid 146
;;      reg 204 { d573(bb 23 insn 145) }
;;   UD chains for insn luid 12 uid 147
;;      reg 24 { d89(bb 23 insn 146) }

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u200(11){ d36(bb 0 insn -1) }u201(13){ d42(bb 0 insn -1) }u202(25){ d104(bb 0 insn -1) }u203(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 240
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
84
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 84, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 150
;;      reg 156 { d530(bb 23 insn 133) }
;;      reg 240 { d604(bb 2 insn 149) }
;;   eq_note reg 156 { }
;;   UD chains for insn luid 1 uid 151
;;      reg 24 { d84(bb 24 insn 150) }

( 23 24 )->[25]->( 36 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u208(11){ d36(bb 0 insn -1) }u209(13){ d42(bb 0 insn -1) }u210(25){ d104(bb 0 insn -1) }u211(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 145 147 148 158 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 145 147 148 158 169 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 145 147 148 158 169 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 161 207
;; live  kill	 14 [lr]
;; rd  in  	(98)
9, 18, 27, 35, 36, 41, 42, 47, 84, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
6, 536, 574
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 574
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(99)
6, 18, 27, 35, 36, 41, 42, 84, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 155
;;      reg 170 { d546(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 156
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 145 { d519(bb 5 insn 54) }
;;   UD chains for insn luid 2 uid 157
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 3 uid 158
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 147 { d521(bb 7 insn 77) }
;;   UD chains for insn luid 4 uid 159
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 139 { d511(bb 23 insn 131) }
;;   UD chains for insn luid 6 uid 161
;;      reg 207 { d574(bb 25 insn 155) }
;;   UD chains for insn luid 7 uid 162
;;      reg 169 { d545(bb 2 insn 5) }
;;   UD chains for insn luid 8 uid 163
;;      reg 148 { d523(bb 33 insn 243) d522(bb 2 insn 22) }
;;   UD chains for insn luid 9 uid 164
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d1(bb 25 insn 160) }
;;      reg 1 { d13(bb 25 insn 161) }
;;      reg 2 { d22(bb 25 insn 162) }
;;      reg 3 { d30(bb 25 insn 163) }

( 24 )->[26]->( 33 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u229(11){ d36(bb 0 insn -1) }u230(13){ d42(bb 0 insn -1) }u231(25){ d104(bb 0 insn -1) }u232(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 148 149 150 151 156 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 156 160 189
;; lr  def 	 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 148 149 150 151 156 160 164 167 169 170 189 239 240
;; live  gen 	 208 209 210 211
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 84, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(4)
575, 576, 577, 578
;; rd  kill	(4)
575, 576, 577, 578
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 84, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 170
;;      reg 156 { d530(bb 23 insn 133) }
;;   UD chains for insn luid 1 uid 171
;;      reg 208 { d575(bb 26 insn 170) }
;;   UD chains for insn luid 2 uid 172
;;      reg 140 { d512(bb 21 insn 121) }
;;   UD chains for insn luid 3 uid 173
;;      reg 209 { d576(bb 26 insn 171) }
;;      reg 210 { d577(bb 26 insn 172) }
;;   UD chains for insn luid 4 uid 174
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;      reg 211 { d578(bb 26 insn 173) }

( 17 )->[27]->( 33 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u240(11){ d36(bb 0 insn -1) }u241(13){ d42(bb 0 insn -1) }u242(25){ d104(bb 0 insn -1) }u243(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 189
;; lr  def 	 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 212 213 214 215
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(4)
579, 580, 581, 582
;; rd  kill	(4)
579, 580, 581, 582
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 180
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;   UD chains for insn luid 1 uid 181
;;      reg 213 { d580(bb 27 insn 180) }
;;   UD chains for insn luid 2 uid 182
;;      reg 212 { d579(bb 27 insn 181) }
;;   UD chains for insn luid 3 uid 183
;;      reg 215 { d582(bb 27 insn 182) }
;;   eq_note reg 212 { }
;;   UD chains for insn luid 4 uid 184
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;      reg 214 { d581(bb 27 insn 183) }

( 13 )->[28]->( 33 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u251(11){ d36(bb 0 insn -1) }u252(13){ d42(bb 0 insn -1) }u253(25){ d104(bb 0 insn -1) }u254(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 160 189
;; lr  def 	 216 217 218 219 220
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 216 217 218 219 220
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(5)
583, 584, 585, 586, 587
;; rd  kill	(5)
583, 584, 585, 586, 587
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 190
;;      reg 146 { d520(bb 5 insn 52) }
;;   UD chains for insn luid 1 uid 191
;;      reg 147 { d521(bb 7 insn 77) }
;;      reg 217 { d584(bb 28 insn 190) }
;;   UD chains for insn luid 2 uid 192
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;   UD chains for insn luid 3 uid 193
;;      reg 216 { d583(bb 28 insn 191) }
;;      reg 219 { d586(bb 28 insn 192) }
;;   UD chains for insn luid 4 uid 194
;;      reg 218 { d585(bb 28 insn 193) }
;;   UD chains for insn luid 5 uid 195
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;      reg 220 { d587(bb 28 insn 194) }

( 19 )->[29]->( 30 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u264(11){ d36(bb 0 insn -1) }u265(13){ d42(bb 0 insn -1) }u266(25){ d104(bb 0 insn -1) }u267(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 146 160 189
;; lr  def 	 134 142 153 154 155 221 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 134 142 153 154 155 221 222 223 224 225
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(10)
510, 513, 527, 528, 529, 588, 589, 590, 591, 592
;; rd  kill	(11)
510, 513, 514, 527, 528, 529, 588, 589, 590, 591, 592
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 201
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;   UD chains for insn luid 1 uid 203
;;      reg 134 { d510(bb 29 insn 201) }
;;   UD chains for insn luid 2 uid 204
;;      reg 221 { d588(bb 29 insn 203) }
;;   UD chains for insn luid 3 uid 205
;;      reg 134 { d510(bb 29 insn 201) }
;;   UD chains for insn luid 4 uid 206
;;      reg 222 { d589(bb 29 insn 205) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 5 uid 207
;;      reg 154 { d528(bb 29 insn 206) }
;;      reg 155 { d529(bb 29 insn 204) }
;;   UD chains for insn luid 6 uid 208
;;      reg 223 { d590(bb 29 insn 207) }
;;   UD chains for insn luid 7 uid 209
;;      reg 153 { d527(bb 29 insn 208) }
;;   UD chains for insn luid 8 uid 210
;;      reg 146 { d520(bb 5 insn 52) }
;;   UD chains for insn luid 9 uid 211
;;      reg 224 { d591(bb 29 insn 209) }
;;      reg 225 { d592(bb 29 insn 210) }
;;   UD chains for insn luid 10 uid 214
;;      reg 24 { d92(bb 18 insn 103) }

( 29 )->[30]->( 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u282(11){ d36(bb 0 insn -1) }u283(13){ d42(bb 0 insn -1) }u284(25){ d104(bb 0 insn -1) }u285(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 142
;; live  kill	
;; rd  in  	(96)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
514
;; rd  kill	(2)
513, 514
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 216
;;      reg 142 { d513(bb 29 insn 211) }

( 29 30 )->[31]->( 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u287(11){ d36(bb 0 insn -1) }u288(13){ d42(bb 0 insn -1) }u289(25){ d104(bb 0 insn -1) }u290(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 160 189
;; lr  def 	 226 227 228 229 230 231 233
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 226 227 228 229 230 231 233
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(7)
593, 594, 595, 596, 597, 598, 599
;; rd  kill	(7)
593, 594, 595, 596, 597, 598, 599
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 219
;;      reg 142 { d514(bb 30 insn 216) d513(bb 29 insn 211) }
;;   UD chains for insn luid 1 uid 220
;;      reg 226 { d593(bb 31 insn 219) }
;;   UD chains for insn luid 2 uid 221
;;      reg 142 { d514(bb 30 insn 216) d513(bb 29 insn 211) }
;;   UD chains for insn luid 3 uid 222
;;      reg 229 { d596(bb 31 insn 221) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 4 uid 223
;;      reg 227 { d594(bb 31 insn 220) }
;;      reg 228 { d595(bb 31 insn 222) }
;;   UD chains for insn luid 5 uid 225
;;      reg 134 { d510(bb 29 insn 201) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 6 uid 226
;;      reg 230 { d597(bb 31 insn 223) }
;;      reg 231 { d598(bb 31 insn 225) }
;;   UD chains for insn luid 7 uid 227
;;      reg 160 { d533(bb 5 insn 55) }
;;      reg 189 { d561(bb 7 insn 76) }
;;      reg 233 { d599(bb 31 insn 226) }

( 18 11 16 )->[32]->( 36 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u304(11){ d36(bb 0 insn -1) }u305(13){ d42(bb 0 insn -1) }u306(25){ d104(bb 0 insn -1) }u307(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 161 235
;; live  kill	 14 [lr]
;; rd  in  	(99)
9, 18, 27, 35, 36, 41, 42, 47, 92, 93, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
5, 535, 600
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 600
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(100)
5, 18, 27, 35, 36, 41, 42, 92, 93, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 233
;;      reg 170 { d546(bb 2 insn 6) }
;;   UD chains for insn luid 2 uid 235
;;      reg 235 { d600(bb 32 insn 233) }
;;   UD chains for insn luid 3 uid 236
;;      reg 158 { d531(bb 7 insn 78) }
;;   UD chains for insn luid 4 uid 237
;;      reg 13 { d42(bb 0 insn -1) }
;;      reg 0 { d0(bb 32 insn 234) }
;;      reg 1 { d11(bb 32 insn 235) }
;;      reg 2 { d20(bb 32 insn 236) }

( 28 10 20 26 27 31 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u315(11){ d36(bb 0 insn -1) }u316(13){ d42(bb 0 insn -1) }u317(25){ d104(bb 0 insn -1) }u318(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148
;; lr  def 	 143 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  gen 	 143 148
;; live  kill	
;; rd  in  	(103)
9, 18, 27, 35, 36, 41, 42, 47, 84, 92, 93, 94, 95, 96, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(2)
515, 523
;; rd  kill	(4)
515, 516, 522, 523
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(101)
9, 18, 27, 35, 36, 41, 42, 47, 84, 92, 93, 94, 95, 96, 97, 104, 105, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 243
;;      reg 148 { d523(bb 33 insn 243) d522(bb 2 insn 22) }
;;   UD chains for insn luid 1 uid 244
;;      reg 143 { d516(bb 2 insn 21) d515(bb 33 insn 244) }

( 33 2 )->[34]->( 3 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u321(11){ d36(bb 0 insn -1) }u322(13){ d42(bb 0 insn -1) }u323(25){ d104(bb 0 insn -1) }u324(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150
;; lr  def 	 24 [cc] 236 237
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  gen 	 24 [cc] 236 237
;; live  kill	
;; rd  in  	(103)
9, 18, 27, 35, 36, 41, 42, 47, 84, 92, 93, 94, 95, 96, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
86, 601, 602
;; rd  kill	(22)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 601, 602
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 248
;;      reg 150 { d525(bb 2 insn 15) }
;;   UD chains for insn luid 1 uid 249
;;      reg 237 { d602(bb 34 insn 248) }
;;   UD chains for insn luid 2 uid 250
;;      reg 148 { d523(bb 33 insn 243) d522(bb 2 insn 22) }
;;      reg 236 { d601(bb 34 insn 249) }
;;   UD chains for insn luid 3 uid 251
;;      reg 24 { d86(bb 34 insn 250) }

( 34 )->[35]->( 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u330(11){ d36(bb 0 insn -1) }u331(13){ d42(bb 0 insn -1) }u332(25){ d104(bb 0 insn -1) }u333(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 161
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
534
;; rd  kill	(5)
534, 535, 536, 537, 538
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; rd  out 	(98)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }

( 35 4 6 25 32 )->[36]->( 1 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u334(11){ d36(bb 0 insn -1) }u335(13){ d42(bb 0 insn -1) }u336(25){ d104(bb 0 insn -1) }u337(26){ d105(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(117)
5, 6, 7, 8, 9, 18, 27, 35, 36, 41, 42, 47, 84, 86, 89, 92, 93, 96, 101, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604
;; rd  gen 	(1)
4
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(113)
4, 18, 27, 35, 36, 41, 42, 47, 84, 86, 89, 92, 93, 96, 101, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }
;;   reg 26 { d105(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 260
;;      reg 161 { d538(bb 4 insn 45) d537(bb 6 insn 71) d536(bb 25 insn 165) d535(bb 32 insn 238) d534(bb 35 insn 253) }
;;   UD chains for insn luid 1 uid 266
;;      reg 0 { d4(bb 36 insn 260) }

( 36 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u340(0){ d4(bb 36 insn 260) }u341(11){ d36(bb 0 insn -1) }u342(13){ d42(bb 0 insn -1) }u343(14){ d47(bb 0 insn -1) }u344(25){ d104(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(113)
4, 18, 27, 35, 36, 41, 42, 47, 84, 86, 89, 92, 93, 96, 101, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(113)
4, 18, 27, 35, 36, 41, 42, 47, 84, 86, 89, 92, 93, 96, 101, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604
;;  UD chains for artificial uses
;;   reg 0 { d4(bb 36 insn 260) }
;;   reg 11 { d36(bb 0 insn -1) }
;;   reg 13 { d42(bb 0 insn -1) }
;;   reg 14 { d47(bb 0 insn -1) }
;;   reg 25 { d104(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 285 to worklist
  Adding insn 35 to worklist
  Adding insn 287 to worklist
  Adding insn 44 to worklist
  Adding insn 59 to worklist
  Adding insn 289 to worklist
  Adding insn 70 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 80 to worklist
  Adding insn 82 to worklist
  Adding insn 84 to worklist
  Adding insn 86 to worklist
  Adding insn 88 to worklist
  Adding insn 292 to worklist
  Adding insn 93 to worklist
  Adding insn 95 to worklist
  Adding insn 97 to worklist
  Adding insn 99 to worklist
  Adding insn 295 to worklist
  Adding insn 104 to worklist
  Adding insn 299 to worklist
  Adding insn 301 to worklist
  Adding insn 115 to worklist
  Adding insn 126 to worklist
  Adding insn 147 to worklist
  Adding insn 151 to worklist
  Adding insn 303 to worklist
  Adding insn 164 to worklist
  Adding insn 159 to worklist
  Adding insn 158 to worklist
  Adding insn 157 to worklist
  Adding insn 156 to worklist
  Adding insn 305 to worklist
  Adding insn 174 to worklist
  Adding insn 307 to worklist
  Adding insn 184 to worklist
  Adding insn 309 to worklist
  Adding insn 195 to worklist
  Adding insn 214 to worklist
  Adding insn 311 to worklist
  Adding insn 227 to worklist
  Adding insn 313 to worklist
  Adding insn 237 to worklist
  Adding insn 251 to worklist
  Adding insn 266 to worklist
Finished finding needed instructions:
  Adding insn 260 to worklist
Processing use of (reg 161 [ D.18562 ]) in insn 260:
  Adding insn 45 to worklist
  Adding insn 71 to worklist
  Adding insn 165 to worklist
  Adding insn 238 to worklist
  Adding insn 253 to worklist
Processing use of (reg 0 r0) in insn 266:
Processing use of (reg 24 cc) in insn 251:
  Adding insn 250 to worklist
Processing use of (reg 148 [ i ]) in insn 250:
  Adding insn 243 to worklist
  Adding insn 22 to worklist
Processing use of (reg 236) in insn 250:
  Adding insn 249 to worklist
Processing use of (reg 237 [ <variable>.sh_size ]) in insn 249:
  Adding insn 248 to worklist
Processing use of (reg 150 [ relsec ]) in insn 248:
  Adding insn 15 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 15:
  Adding insn 2 to worklist
Processing use of (reg 173) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 169 [ relindex ]) in insn 14:
  Adding insn 5 to worklist
Processing use of (reg 172) in insn 14:
  Adding insn 10 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 143 [ ivtmp.410 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 148 [ i ]) in insn 243:
Processing use of (reg 13 sp) in insn 237:
Processing use of (reg 0 r0) in insn 237:
  Adding insn 234 to worklist
Processing use of (reg 1 r1) in insn 237:
  Adding insn 235 to worklist
Processing use of (reg 2 r2) in insn 237:
  Adding insn 236 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 236:
  Adding insn 78 to worklist
Processing use of (reg 163 [ D.18553 ]) in insn 78:
  Adding insn 27 to worklist
Processing use of (reg 178) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 143 [ ivtmp.410 ]) in insn 26:
  Adding insn 244 to worklist
Processing use of (reg 164 [ D.18552 ]) in insn 26:
  Adding insn 20 to worklist
Processing use of (reg 150 [ relsec ]) in insn 20:
Processing use of (reg 143 [ ivtmp.410 ]) in insn 244:
Processing use of (reg 235) in insn 235:
  Adding insn 233 to worklist
Processing use of (reg 170 [ module ]) in insn 233:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 160 [ D.18568 ]) in insn 227:
  Adding insn 55 to worklist
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 227:
  Adding insn 76 to worklist
Processing use of (reg 233) in insn 227:
  Adding insn 226 to worklist
Processing use of (reg 230) in insn 226:
  Adding insn 223 to worklist
Processing use of (reg 231) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 134 [ temp.430 ]) in insn 225:
  Adding insn 201 to worklist
Processing use of (reg 160 [ D.18568 ]) in insn 201:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 201:
Processing use of (reg 227) in insn 223:
  Adding insn 220 to worklist
Processing use of (reg 228) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 229) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 142 [ offset.415 ]) in insn 221:
  Adding insn 216 to worklist
  Adding insn 211 to worklist
Processing use of (reg 224) in insn 211:
  Adding insn 209 to worklist
Processing use of (reg 225 [ <variable>.st_value ]) in insn 211:
  Adding insn 210 to worklist
Processing use of (reg 146 [ sym ]) in insn 210:
  Adding insn 52 to worklist
Processing use of (reg 183) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 184 [ <variable>.sh_addr ]) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 151 [ symsec ]) in insn 51:
  Adding insn 12 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 12:
Processing use of (reg 171) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 168 [ symindex ]) in insn 11:
  Adding insn 4 to worklist
Processing use of (reg 172) in insn 11:
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 162 [ D.18554 ]) in insn 50:
  Adding insn 28 to worklist
Processing use of (reg 163 [ D.18553 ]) in insn 28:
Processing use of (reg 153 [ D.18605 ]) in insn 209:
  Adding insn 208 to worklist
Processing use of (reg 223) in insn 208:
  Adding insn 207 to worklist
Processing use of (reg 154 [ D.18604 ]) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 155 [ D.18603 ]) in insn 207:
  Adding insn 204 to worklist
Processing use of (reg 221) in insn 204:
  Adding insn 203 to worklist
Processing use of (reg 134 [ temp.430 ]) in insn 203:
Processing use of (reg 222) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 134 [ temp.430 ]) in insn 205:
Processing use of (reg 142 [ offset.415 ]) in insn 216:
Processing use of (reg 226) in insn 220:
  Adding insn 219 to worklist
Processing use of (reg 142 [ offset.415 ]) in insn 219:
Processing use of (reg 149 [ dstsec ]) in insn 76:
  Adding insn 19 to worklist
Processing use of (reg 166 [ sechdrs ]) in insn 19:
Processing use of (reg 175) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 172) in insn 18:
Processing use of (reg 176 [ <variable>.sh_info ]) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 150 [ relsec ]) in insn 16:
Processing use of (reg 143 [ ivtmp.410 ]) in insn 55:
Processing use of (reg 164 [ D.18552 ]) in insn 55:
Processing use of (reg 24 cc) in insn 214:
  Adding insn 103 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 103:
Processing use of (reg 160 [ D.18568 ]) in insn 195:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 195:
Processing use of (reg 220) in insn 195:
  Adding insn 194 to worklist
Processing use of (reg 218) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 216) in insn 193:
  Adding insn 191 to worklist
Processing use of (reg 219) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 160 [ D.18568 ]) in insn 192:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 192:
Processing use of (reg 147 [ loc ]) in insn 191:
  Adding insn 77 to worklist
Processing use of (reg 217 [ <variable>.st_value ]) in insn 191:
  Adding insn 190 to worklist
Processing use of (reg 146 [ sym ]) in insn 190:
Processing use of (reg 160 [ D.18568 ]) in insn 77:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 77:
Processing use of (reg 160 [ D.18568 ]) in insn 184:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 184:
Processing use of (reg 214) in insn 184:
  Adding insn 183 to worklist
Processing use of (reg 215) in insn 183:
  Adding insn 182 to worklist
Processing use of (reg 212) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 213) in insn 181:
  Adding insn 180 to worklist
Processing use of (reg 160 [ D.18568 ]) in insn 180:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 180:
Processing use of (reg 160 [ D.18568 ]) in insn 174:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 174:
Processing use of (reg 211) in insn 174:
  Adding insn 173 to worklist
Processing use of (reg 209) in insn 173:
  Adding insn 171 to worklist
Processing use of (reg 210) in insn 173:
  Adding insn 172 to worklist
Processing use of (reg 140 [ temp.418 ]) in insn 172:
  Adding insn 121 to worklist
Processing use of (reg 160 [ D.18568 ]) in insn 121:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 121:
Processing use of (reg 208) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 156 [ D.18586 ]) in insn 170:
  Adding insn 133 to worklist
Processing use of (reg 144 [ offset ]) in insn 133:
  Adding insn 123 to worklist
  Adding insn 128 to worklist
Processing use of (reg 195) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 139 [ temp.419 ]) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 147 [ loc ]) in insn 132:
Processing use of (reg 146 [ sym ]) in insn 131:
Processing use of (reg 144 [ offset ]) in insn 128:
Processing use of (reg 193) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 140 [ temp.418 ]) in insn 122:
Processing use of (reg 13 sp) in insn 156:
Processing use of (reg 145 [ symname ]) in insn 156:
  Adding insn 54 to worklist
Processing use of (reg 167 [ strtab ]) in insn 54:
  Adding insn 3 to worklist
Processing use of (reg 185 [ <variable>.st_name ]) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 162 [ D.18554 ]) in insn 53:
Processing use of (reg 184 [ <variable>.sh_addr ]) in insn 53:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 157:
Processing use of (reg 158 [ D.18574 ]) in insn 157:
Processing use of (reg 13 sp) in insn 158:
Processing use of (reg 147 [ loc ]) in insn 158:
Processing use of (reg 13 sp) in insn 159:
Processing use of (reg 139 [ temp.419 ]) in insn 159:
Processing use of (reg 13 sp) in insn 164:
Processing use of (reg 0 r0) in insn 164:
  Adding insn 160 to worklist
Processing use of (reg 1 r1) in insn 164:
  Adding insn 161 to worklist
Processing use of (reg 2 r2) in insn 164:
  Adding insn 162 to worklist
Processing use of (reg 3 r3) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 148 [ i ]) in insn 163:
Processing use of (reg 169 [ relindex ]) in insn 162:
Processing use of (reg 207) in insn 161:
  Adding insn 155 to worklist
Processing use of (reg 170 [ module ]) in insn 155:
Processing use of (reg 24 cc) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 156 [ D.18586 ]) in insn 150:
Processing use of (reg 240) in insn 150:
  Adding insn 149 to worklist
Processing use of (reg 24 cc) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 204) in insn 146:
  Adding insn 145 to worklist
Processing use of (reg 203) in insn 145:
  Adding insn 144 to worklist
Processing use of (subreg (reg 202) 0) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 198) in insn 143:
  Adding insn 137 to worklist
Processing use of (reg 201) in insn 143:
  Adding insn 141 to worklist
Processing use of (reg 24 cc) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 156 [ D.18586 ]) in insn 140:
Processing use of (reg 239) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 24 cc) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 196) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 156 [ D.18586 ]) in insn 135:
Processing use of (reg 24 cc) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 194) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 144 [ offset ]) in insn 124:
Processing use of (reg 160 [ D.18568 ]) in insn 115:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 115:
Processing use of (reg 192) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 190) in insn 114:
  Adding insn 112 to worklist
Processing use of (reg 191 [ <variable>.st_value ]) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 146 [ sym ]) in insn 113:
Processing use of (reg 160 [ D.18568 ]) in insn 112:
Processing use of (reg 189 [ <variable>.sh_addr ]) in insn 112:
Processing use of (reg 24 cc) in insn 104:
Processing use of (reg 24 cc) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 98:
Processing use of (reg 24 cc) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 96:
Processing use of (reg 24 cc) in insn 95:
  Adding insn 92 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 92:
Processing use of (reg 24 cc) in insn 93:
Processing use of (reg 24 cc) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 87:
Processing use of (reg 24 cc) in insn 86:
  Adding insn 83 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 83:
Processing use of (reg 24 cc) in insn 84:
Processing use of (reg 24 cc) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 81:
Processing use of (reg 24 cc) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 158 [ D.18574 ]) in insn 79:
Processing use of (reg 13 sp) in insn 63:
Processing use of (reg 145 [ symname ]) in insn 63:
Processing use of (reg 13 sp) in insn 64:
Processing use of (reg 160 [ D.18568 ]) in insn 64:
Processing use of (reg 13 sp) in insn 65:
Processing use of (reg 159 [ D.18569 ]) in insn 65:
  Adding insn 56 to worklist
Processing use of (reg 149 [ dstsec ]) in insn 56:
Processing use of (reg 13 sp) in insn 70:
Processing use of (reg 0 r0) in insn 70:
  Adding insn 66 to worklist
Processing use of (reg 1 r1) in insn 70:
  Adding insn 67 to worklist
Processing use of (reg 2 r2) in insn 70:
  Adding insn 68 to worklist
Processing use of (reg 3 r3) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 148 [ i ]) in insn 69:
Processing use of (reg 169 [ relindex ]) in insn 68:
Processing use of (reg 188) in insn 67:
  Adding insn 62 to worklist
Processing use of (reg 170 [ module ]) in insn 62:
Processing use of (reg 24 cc) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 160 [ D.18568 ]) in insn 58:
Processing use of (reg 186) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 159 [ D.18569 ]) in insn 57:
Processing use of (reg 13 sp) in insn 44:
Processing use of (reg 0 r0) in insn 44:
  Adding insn 40 to worklist
Processing use of (reg 1 r1) in insn 44:
  Adding insn 41 to worklist
Processing use of (reg 2 r2) in insn 44:
  Adding insn 42 to worklist
Processing use of (reg 3 r3) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 148 [ i ]) in insn 43:
Processing use of (reg 169 [ relindex ]) in insn 42:
Processing use of (reg 182) in insn 41:
  Adding insn 39 to worklist
Processing use of (reg 170 [ module ]) in insn 39:
Processing use of (reg 24 cc) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 162 [ D.18554 ]) in insn 34:
Processing use of (reg 179) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 180 [ <variable>.sh_size ]) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 151 [ symsec ]) in insn 32:


apply_relocate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={9d,5u} r2={9d,5u} r3={8d,4u} r11={1d,36u} r12={5d} r13={1d,47u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={20d,19u} r25={1d,36u} r26={1d,36u,1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,3u,2d} r139={1d,2u} r140={1d,2u} r142={2d,3u,1d} r143={2d,4u} r144={2d,3u} r145={1d,2u} r146={1d,4u} r147={1d,3u} r148={2d,5u} r149={1d,2u} r150={1d,3u} r151={1d,2u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,4u,2d} r158={1d,10u} r159={1d,2u} r160={1d,13u} r161={5d,1u} r162={1d,3u} r163={1d,2u} r164={1d,2u} r166={1d,3u} r167={1d,1u} r168={1d,1u,1d} r169={1d,4u,1d} r170={1d,4u} r171={1d,1u} r172={1d,3u} r173={1d,1u} r175={1d,1u} r176={1d,1u,1d} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,2u} r185={1d,1u} r186={1d,1u} r188={1d,1u} r189={1d,11u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r198={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1d} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r233={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r239={1d,1u} r240={1d,1u} 
;;    total ref usage 973{605d,358u,10e} in 174{170 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509
0[0,10] 1[10,9] 2[19,9] 3[28,8] 11[36,1] 12[37,5] 13[42,1] 14[43,5] 15[48,4] 16[52,4] 17[56,4] 18[60,4] 19[64,4] 20[68,4] 21[72,4] 22[76,4] 23[80,4] 24[84,20] 25[104,1] 26[105,1] 27[106,4] 28[110,4] 29[114,4] 30[118,4] 31[122,4] 32[126,4] 33[130,4] 34[134,4] 35[138,4] 36[142,4] 37[146,4] 38[150,4] 39[154,4] 40[158,4] 41[162,4] 42[166,4] 43[170,4] 44[174,4] 45[178,4] 46[182,4] 47[186,4] 48[190,4] 49[194,4] 50[198,4] 51[202,4] 52[206,4] 53[210,4] 54[214,4] 55[218,4] 56[222,4] 57[226,4] 58[230,4] 59[234,4] 60[238,4] 61[242,4] 62[246,4] 63[250,4] 64[254,4] 65[258,4] 66[262,4] 67[266,4] 68[270,4] 69[274,4] 70[278,4] 71[282,4] 72[286,4] 73[290,4] 74[294,4] 75[298,4] 76[302,4] 77[306,4] 78[310,4] 79[314,4] 80[318,4] 81[322,4] 82[326,4] 83[330,4] 84[334,4] 85[338,4] 86[342,4] 87[346,4] 88[350,4] 89[354,4] 90[358,4] 91[362,4] 92[366,4] 93[370,4] 94[374,4] 95[378,4] 96[382,4] 97[386,4] 98[390,4] 99[394,4] 100[398,4] 101[402,4] 102[406,4] 103[410,4] 104[414,4] 105[418,4] 106[422,4] 107[426,4] 108[430,4] 109[434,4] 110[438,4] 111[442,4] 112[446,4] 113[450,4] 114[454,4] 115[458,4] 116[462,4] 117[466,4] 118[470,4] 119[474,4] 120[478,4] 121[482,4] 122[486,4] 123[490,4] 124[494,4] 125[498,4] 126[502,4] 127[506,4] 134[510,1] 139[511,1] 140[512,1] 142[513,2] 143[515,2] 144[517,2] 145[519,1] 146[520,1] 147[521,1] 148[522,2] 149[524,1] 150[525,1] 151[526,1] 153[527,1] 154[528,1] 155[529,1] 156[530,1] 158[531,1] 159[532,1] 160[533,1] 161[534,5] 162[539,1] 163[540,1] 164[541,1] 166[542,1] 167[543,1] 168[544,1] 169[545,1] 170[546,1] 171[547,1] 172[548,1] 173[549,1] 175[550,1] 176[551,1] 178[552,1] 179[553,1] 180[554,1] 182[555,1] 183[556,1] 184[557,1] 185[558,1] 186[559,1] 188[560,1] 189[561,1] 190[562,1] 191[563,1] 192[564,1] 193[565,1] 194[566,1] 195[567,1] 196[568,1] 198[569,1] 201[570,1] 202[571,1] 203[572,1] 204[573,1] 207[574,1] 208[575,1] 209[576,1] 210[577,1] 211[578,1] 212[579,1] 213[580,1] 214[581,1] 215[582,1] 216[583,1] 217[584,1] 218[585,1] 219[586,1] 220[587,1] 221[588,1] 222[589,1] 223[590,1] 224[591,1] 225[592,1] 226[593,1] 227[594,1] 228[595,1] 229[596,1] 230[597,1] 231[598,1] 233[599,1] 235[600,1] 236[601,1] 237[602,1] 239[603,1] 240[604,1] 
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143 148 149 150 151 164 166 167 168 169 170 171 172 173 175 176 239 240
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 143 148 149 150 151 164 166 167 168 169 170 171 172 173 175 176 239 240
;; live  kill	
;; rd  in  	(10)
9, 18, 27, 35, 36, 41, 42, 47, 104, 105
;; rd  gen 	(18)
516, 522, 524, 525, 526, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 603, 604
;; rd  kill	(20)
515, 516, 522, 523, 524, 525, 526, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 603, 604

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/kernel/module.c:51 (set (reg/v/f:SI 166 [ sechdrs ])
        (reg:SI 0 r0 [ sechdrs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sechdrs ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/module.c:51 (set (reg/v/f:SI 167 [ strtab ])
        (reg:SI 1 r1 [ strtab ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ strtab ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/module.c:51 (set (reg/v:SI 168 [ symindex ])
        (reg:SI 2 r2 [ symindex ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ symindex ])
        (nil)))

(insn 5 4 6 2 arch/arm/kernel/module.c:51 (set (reg/v:SI 169 [ relindex ])
        (reg:SI 3 r3 [ relindex ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ relindex ])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/module.c:51 (set (reg/v/f:SI 170 [ module ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 module+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 module+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/kernel/module.c:52 (set (reg:SI 172)
        (const_int 40 [0x28])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/module.c:52 (set (reg:SI 171)
        (mult:SI (reg:SI 172)
            (reg/v:SI 168 [ symindex ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg/v:SI 168 [ symindex ])
        (expr_list:REG_EQUAL (mult:SI (reg/v:SI 168 [ symindex ])
                (const_int 40 [0x28]))
            (nil))))

(insn 12 11 14 2 arch/arm/kernel/module.c:52 (set (reg/v/f:SI 151 [ symsec ])
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (reg:SI 171))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 14 12 15 2 arch/arm/kernel/module.c:53 (set (reg:SI 173)
        (mult:SI (reg:SI 172)
            (reg/v:SI 169 [ relindex ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg/v:SI 169 [ relindex ])
            (const_int 40 [0x28]))
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/module.c:53 (set (reg/v/f:SI 150 [ relsec ])
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (reg:SI 173))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 16 15 18 2 arch/arm/kernel/module.c:54 (set (reg:SI 176 [ <variable>.sh_info ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ relsec ])
                (const_int 28 [0x1c])) [0 <variable>.sh_info+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 16 19 2 arch/arm/kernel/module.c:54 (set (reg:SI 175)
        (mult:SI (reg:SI 172)
            (reg:SI 176 [ <variable>.sh_info ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 176 [ <variable>.sh_info ])
        (expr_list:REG_DEAD (reg:SI 172)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 176 [ <variable>.sh_info ])
                    (const_int 40 [0x28]))
                (nil)))))

(insn 19 18 20 2 arch/arm/kernel/module.c:54 (set (reg/v/f:SI 149 [ dstsec ])
        (plus:SI (reg/v/f:SI 166 [ sechdrs ])
            (reg:SI 175))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_DEAD (reg/v/f:SI 166 [ sechdrs ])
            (nil))))

(insn 20 19 21 2 arch/arm/kernel/module.c:55 (set (reg:SI 164 [ D.18552 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ relsec ])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/kernel/module.c:55 (set (reg:SI 143 [ ivtmp.410 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 139 2 arch/arm/kernel/module.c:58 (set (reg/v:SI 148 [ i ])
        (reg:SI 143 [ ivtmp.410 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 139 22 149 2 arch/arm/kernel/module.c:105 (set (reg:SI 239)
        (const_int -33554431 [0xfffffffffe000001])) 167 {*arm_movsi_insn} (nil))

(insn 149 139 285 2 arch/arm/kernel/module.c:104 discrim 1 (set (reg:SI 240)
        (const_int 33554431 [0x1ffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 285 149 286 2 arch/arm/kernel/module.c:58 (set (pc)
        (label_ref 245)) -1 (nil))
;; End of basic block 2 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(28)
9, 18, 27, 35, 36, 41, 42, 47, 104, 105, 516, 522, 524, 525, 526, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 603, 604


;; Succ edge  34 [100.0%] 

(barrier 286 285 247)

;; Start of basic block ( 34) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 151 164
;; lr  def 	 24 [cc] 162 163 178 179 180
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  gen 	 24 [cc] 162 163 178 179 180
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(6)
103, 539, 540, 552, 553, 554
;; rd  kill	(25)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 539, 540, 552, 553, 554

;; Pred edge  34 [98.0%] 
(code_label 247 286 25 3 49 "" [1 uses])

(note 25 247 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 arch/arm/kernel/module.c:67 (set (reg:SI 178)
        (plus:SI (reg:SI 143 [ ivtmp.410 ])
            (reg:SI 164 [ D.18552 ]))) 4 {*arm_addsi3} (nil))

(insn 27 26 28 3 arch/arm/kernel/module.c:67 (set (reg:SI 163 [ D.18553 ])
        (mem/s/j:SI (plus:SI (reg:SI 178)
                (const_int 4 [0x4])) [0 <variable>.r_info+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(insn 28 27 32 3 arch/arm/kernel/module.c:67 (set (reg:SI 162 [ D.18554 ])
        (lshiftrt:SI (reg:SI 163 [ D.18553 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 32 28 33 3 arch/arm/kernel/module.c:68 (set (reg:SI 180 [ <variable>.sh_size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ symsec ])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 3 arch/arm/kernel/module.c:68 (set (reg:SI 179)
        (lshiftrt:SI (reg:SI 180 [ <variable>.sh_size ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.sh_size ])
        (nil)))

(insn 34 33 35 3 arch/arm/kernel/module.c:68 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162 [ D.18554 ])
            (reg:SI 179))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 35 34 37 3 arch/arm/kernel/module.c:68 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  4 [0.0%]  (fallthru,loop_exit)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 169 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 169 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 161 182
;; live  kill	 14 [lr]
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
8, 538, 555
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 555

;; Pred edge  3 [0.0%]  (fallthru,loop_exit)
(note 37 35 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 39 37 40 4 arch/arm/kernel/module.c:69 (set (reg/f:SI 182)
        (plus:SI (reg/v/f:SI 170 [ module ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 170 [ module ])
        (nil)))

(insn 40 39 41 4 arch/arm/kernel/module.c:69 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x111ae190>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x111ae190>)
        (nil)))

(insn 41 40 42 4 arch/arm/kernel/module.c:69 (set (reg:SI 1 r1)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (nil)))

(insn 42 41 43 4 arch/arm/kernel/module.c:69 (set (reg:SI 2 r2)
        (reg/v:SI 169 [ relindex ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 169 [ relindex ])
        (nil)))

(insn 43 42 44 4 arch/arm/kernel/module.c:69 (set (reg:SI 3 r3)
        (reg/v:SI 148 [ i ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ i ])
        (nil)))

(call_insn 44 43 45 4 arch/arm/kernel/module.c:69 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 45 44 287 4 arch/arm/kernel/module.c:71 (set (reg:SI 161 [ D.18562 ])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 287 45 288 4 arch/arm/kernel/module.c:71 (set (pc)
        (label_ref 254)) -1 (nil))
;; End of basic block 4 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(98)
8, 18, 27, 35, 36, 41, 42, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  36 [100.0%] 

(barrier 288 287 48)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 149 151 162 164 167
;; lr  def 	 24 [cc] 145 146 159 160 183 184 185 186
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 162 163 164 167 169 170 239 240
;; live  gen 	 24 [cc] 145 146 159 160 183 184 185 186
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(9)
101, 519, 520, 532, 533, 556, 557, 558, 559
;; rd  kill	(28)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 519, 520, 532, 533, 556, 557, 558, 559

;; Pred edge  3 [100.0%] 
(code_label 48 288 49 5 33 "" [1 uses])

(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 5 arch/arm/kernel/module.c:74 (set (reg:SI 183)
        (ashift:SI (reg:SI 162 [ D.18554 ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 51 50 52 5 arch/arm/kernel/module.c:74 (set (reg:SI 184 [ <variable>.sh_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ symsec ])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 5 arch/arm/kernel/module.c:74 (set (reg/v/f:SI 146 [ sym ])
        (plus:SI (reg:SI 183)
            (reg:SI 184 [ <variable>.sh_addr ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 53 52 54 5 arch/arm/kernel/module.c:75 (set (reg:SI 185 [ <variable>.st_name ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 162 [ D.18554 ])
                    (const_int 16 [0x10]))
                (reg:SI 184 [ <variable>.sh_addr ])) [0 <variable>.st_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184 [ <variable>.sh_addr ])
        (expr_list:REG_DEAD (reg:SI 162 [ D.18554 ])
            (nil))))

(insn 54 53 55 5 arch/arm/kernel/module.c:75 (set (reg/v/f:SI 145 [ symname ])
        (plus:SI (reg/v/f:SI 167 [ strtab ])
            (reg:SI 185 [ <variable>.st_name ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185 [ <variable>.st_name ])
        (nil)))

(insn 55 54 56 5 arch/arm/kernel/module.c:77 (set (reg:SI 160 [ D.18568 ])
        (mem/s/j:SI (plus:SI (reg:SI 143 [ ivtmp.410 ])
                (reg:SI 164 [ D.18552 ])) [0 <variable>.r_offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 5 arch/arm/kernel/module.c:77 (set (reg:SI 159 [ D.18569 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ dstsec ])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 5 arch/arm/kernel/module.c:77 (set (reg:SI 186)
        (plus:SI (reg:SI 159 [ D.18569 ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 58 57 59 5 arch/arm/kernel/module.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 160 [ D.18568 ])
            (reg:SI 186))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(jump_insn 59 58 60 5 arch/arm/kernel/module.c:77 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 159 160 163 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 159 160 163 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  6 [0.0%]  (fallthru,loop_exit)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 159 160 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 159 160 169 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 159 160 169 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 161 188
;; live  kill	 14 [lr]
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
7, 537, 560
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 560

;; Pred edge  5 [0.0%]  (fallthru,loop_exit)
(note 60 59 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 62 60 63 6 arch/arm/kernel/module.c:78 (set (reg/f:SI 188)
        (plus:SI (reg/v/f:SI 170 [ module ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 170 [ module ])
        (nil)))

(insn 63 62 64 6 arch/arm/kernel/module.c:78 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 145 [ symname ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ symname ])
        (nil)))

(insn 64 63 65 6 arch/arm/kernel/module.c:78 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 160 [ D.18568 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 160 [ D.18568 ])
        (nil)))

(insn 65 64 66 6 arch/arm/kernel/module.c:78 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 159 [ D.18569 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159 [ D.18569 ])
        (nil)))

(insn 66 65 67 6 arch/arm/kernel/module.c:78 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x111c3380>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x111c3380>)
        (nil)))

(insn 67 66 68 6 arch/arm/kernel/module.c:78 (set (reg:SI 1 r1)
        (reg/f:SI 188)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 188)
        (nil)))

(insn 68 67 69 6 arch/arm/kernel/module.c:78 (set (reg:SI 2 r2)
        (reg/v:SI 169 [ relindex ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 169 [ relindex ])
        (nil)))

(insn 69 68 70 6 arch/arm/kernel/module.c:78 (set (reg:SI 3 r3)
        (reg/v:SI 148 [ i ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ i ])
        (nil)))

(call_insn 70 69 71 6 arch/arm/kernel/module.c:78 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 71 70 289 6 arch/arm/kernel/module.c:81 (set (reg:SI 161 [ D.18562 ])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 289 71 290 6 arch/arm/kernel/module.c:81 (set (pc)
        (label_ref 254)) -1 (nil))
;; End of basic block 6 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(98)
7, 18, 27, 35, 36, 41, 42, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  36 [100.0%] 

(barrier 290 289 74)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 160 163 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 160 163
;; lr  def 	 24 [cc] 147 158 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 148 149 150 151 160 163 164 167 169 170 239 240
;; live  gen 	 24 [cc] 147 158 189
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 101, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(4)
99, 521, 531, 561
;; rd  kill	(23)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 521, 531, 561

;; Pred edge  5 [100.0%] 
(code_label 74 290 75 7 35 "" [1 uses])

(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 7 arch/arm/kernel/module.c:84 (set (reg:SI 189 [ <variable>.sh_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ dstsec ])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 7 arch/arm/kernel/module.c:84 (set (reg/v:SI 147 [ loc ])
        (plus:SI (reg:SI 160 [ D.18568 ])
            (reg:SI 189 [ <variable>.sh_addr ]))) 4 {*arm_addsi3} (nil))

(insn 78 77 79 7 arch/arm/kernel/module.c:86 (set (reg:SI 158 [ D.18574 ])
        (and:SI (reg:SI 163 [ D.18553 ])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 163 [ D.18553 ])
        (nil)))

(insn 79 78 80 7 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 29 [0x1d]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 268 7 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 13 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 99, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  13 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 99, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
98
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  7 [50.0%]  (fallthru)
(note 268 80 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 81 268 82 8 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 28 [0x1c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 269 8 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 21 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 98, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  21 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 98, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
97
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  8 [50.0%]  (fallthru)
(note 269 82 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 83 269 84 9 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 270 9 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 9 -> ( 21 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  21 [29.0%] 
;; Succ edge  10 [71.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [71.0%]  (fallthru)
(note 270 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 86 270 271 10 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 33 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  33 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
96
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  10 [50.0%]  (fallthru)
(note 271 86 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 87 271 88 11 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 291 11 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%]  (loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  11 [29.0%]  (fallthru)
(note 291 88 292 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 292 291 293 12 (set (pc)
        (label_ref 109)) -1 (nil))
;; End of basic block 12 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  20 [100.0%] 

(barrier 293 292 91)

;; Start of basic block ( 7) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 99, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
95
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  7 [50.0%] 
(code_label 91 293 273 13 43 "" [1 uses])

(note 273 91 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 92 273 93 13 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 42 [0x2a]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 274 13 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 13 -> ( 28 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  28 [29.0%] 
;; Succ edge  14 [71.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  13 [71.0%]  (fallthru)
(note 274 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 95 274 275 14 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 18 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  18 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u135(11){ }u136(13){ }u137(25){ }u138(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
94
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  14 [50.0%]  (fallthru)
(note 275 95 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 275 97 15 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 38 [0x26]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 276 15 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 15 -> ( 20 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 94, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  20 [29.0%] 
;; Succ edge  16 [71.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u141(11){ }u142(13){ }u143(25){ }u144(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 94, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
93
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  15 [71.0%]  (fallthru)
(note 276 97 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 276 99 16 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 294 16 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 16 -> ( 17 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  17 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%]  (loop_exit)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  16 [29.0%]  (fallthru)
(note 294 99 295 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 295 294 296 17 (set (pc)
        (label_ref 177)) -1 (nil))
;; End of basic block 17 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  27 [100.0%] 

(barrier 296 295 102)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u147(11){ }u148(13){ }u149(25){ }u150(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
92
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  14 [50.0%] 
(code_label 102 296 278 18 44 "" [1 uses])

(note 278 102 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 103 278 104 18 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158 [ D.18574 ])
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 297 18 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 32 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  32 [50.0%]  (loop_exit)
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  18 [50.0%]  (fallthru)
(note 297 104 299 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 299 297 300 19 (set (pc)
        (label_ref 298)) -1 (nil))
;; End of basic block 19 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  29 [100.0%] 

(barrier 300 299 109)

;; Start of basic block ( 15 12) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 160 189
;; lr  def 	 190 191 192
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 190 191 192
;; live  kill	
;; rd  in  	(98)
9, 18, 27, 35, 36, 41, 42, 47, 94, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
562, 563, 564
;; rd  kill	(3)
562, 563, 564

;; Pred edge  15 [29.0%] 
;; Pred edge  12 [100.0%] 
(code_label 109 300 110 20 39 "" [2 uses])

(note 110 109 112 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 112 110 113 20 arch/arm/kernel/module.c:93 (set (reg:SI 190)
        (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 113 112 114 20 arch/arm/kernel/module.c:93 (set (reg:SI 191 [ <variable>.st_value ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ sym ])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ sym ])
        (nil)))

(insn 114 113 115 20 arch/arm/kernel/module.c:93 (set (reg:SI 192)
        (plus:SI (reg:SI 190)
            (reg:SI 191 [ <variable>.st_value ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 191 [ <variable>.st_value ])
        (expr_list:REG_DEAD (reg:SI 190)
            (nil))))

(insn 115 114 301 20 arch/arm/kernel/module.c:93 (set (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])
        (reg:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg:SI 189 [ <variable>.sh_addr ])
            (expr_list:REG_DEAD (reg:SI 160 [ D.18568 ])
                (nil)))))

(jump_insn 301 115 302 20 arch/arm/kernel/module.c:94 (set (pc)
        (label_ref 241)) -1 (nil))
;; End of basic block 20 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(98)
9, 18, 27, 35, 36, 41, 42, 47, 94, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  33 [100.0%] 

(barrier 302 301 118)

;; Start of basic block ( 8 9) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u163(11){ }u164(13){ }u165(25){ }u166(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 189
;; lr  def 	 24 [cc] 140 144 193 194
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc] 140 144 193 194
;; live  kill	
;; rd  in  	(98)
9, 18, 27, 35, 36, 41, 42, 47, 97, 98, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(5)
91, 512, 518, 565, 566
;; rd  kill	(25)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 512, 517, 518, 565, 566

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [29.0%] 
(code_label 118 302 119 21 38 "" [2 uses])

(note 119 118 121 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 121 119 122 21 arch/arm/kernel/module.c:99 (set (reg:SI 140 [ temp.418 ])
        (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 21 arch/arm/kernel/module.c:99 (set (reg:SI 193)
        (and:SI (reg:SI 140 [ temp.418 ])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 123 122 124 21 arch/arm/kernel/module.c:99 (set (reg/v:SI 144 [ offset ])
        (ashift:SI (reg:SI 193)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 124 123 125 21 arch/arm/kernel/module.c:100 (set (reg:SI 194)
        (and:SI (reg/v:SI 144 [ offset ])
            (const_int 33554432 [0x2000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 125 124 126 21 arch/arm/kernel/module.c:100 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 194)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(jump_insn 126 125 127 21 arch/arm/kernel/module.c:100 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 144
;; live  kill	
;; rd  in  	(96)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
517
;; rd  kill	(2)
517, 518

;; Pred edge  21 [50.0%]  (fallthru)
(note 127 126 128 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 22 arch/arm/kernel/module.c:101 (set (reg/v:SI 144 [ offset ])
        (plus:SI (reg/v:SI 144 [ offset ])
            (const_int -67108864 [0xfffffffffc000000]))) 4 {*arm_addsi3} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 146 147 239
;; lr  def 	 24 [cc] 139 156 195 196 198 201 202 203 204
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 144 145 146 147 148 149 150 151 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc] 139 156 195 196 198 201 202 203 204
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 91, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(10)
89, 511, 530, 567, 568, 569, 570, 571, 572, 573
;; rd  kill	(29)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 511, 530, 567, 568, 569, 570, 571, 572, 573

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 129 128 130 23 45 "" [1 uses])

(note 130 129 131 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 131 130 132 23 arch/arm/kernel/module.c:103 (set (reg:SI 139 [ temp.419 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ sym ])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ sym ])
        (nil)))

(insn 132 131 133 23 arch/arm/kernel/module.c:103 (set (reg:SI 195)
        (minus:SI (reg:SI 139 [ temp.419 ])
            (reg/v:SI 147 [ loc ]))) 28 {*arm_subsi3_insn} (nil))

(insn 133 132 135 23 arch/arm/kernel/module.c:103 (set (reg:SI 156 [ D.18586 ])
        (plus:SI (reg:SI 195)
            (reg/v:SI 144 [ offset ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_DEAD (reg/v:SI 144 [ offset ])
            (nil))))

(insn 135 133 136 23 arch/arm/kernel/module.c:104 (set (reg:SI 196)
        (and:SI (reg:SI 156 [ D.18586 ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 136 135 137 23 arch/arm/kernel/module.c:104 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 196)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 137 136 140 23 arch/arm/kernel/module.c:104 (set (reg:SI 198)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 140 137 141 23 arch/arm/kernel/module.c:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156 [ D.18586 ])
            (reg:SI 239))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 156 [ D.18586 ])
            (const_int -33554431 [0xfffffffffe000001]))
        (nil)))

(insn 141 140 143 23 arch/arm/kernel/module.c:105 (set (reg:SI 201)
        (lt:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 143 141 144 23 arch/arm/kernel/module.c:105 (set (reg:SI 202)
        (ior:SI (reg:SI 198)
            (reg:SI 201))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_DEAD (reg:SI 198)
            (nil))))

(insn 144 143 145 23 arch/arm/kernel/module.c:105 (set (reg:QI 203)
        (subreg:QI (reg:SI 202) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 145 144 146 23 arch/arm/kernel/module.c:105 (set (reg:SI 204)
        (zero_extend:SI (reg:QI 203))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 203)
        (nil)))

(insn 146 145 147 23 arch/arm/kernel/module.c:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 204)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(jump_insn 147 146 148 23 arch/arm/kernel/module.c:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 152)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  25 [0.0%]  (loop_exit)
;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u200(11){ }u201(13){ }u202(25){ }u203(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 240
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
84
;; rd  kill	(20)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103

;; Pred edge  23 [100.0%]  (fallthru)
(note 148 147 150 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 150 148 151 24 arch/arm/kernel/module.c:104 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156 [ D.18586 ])
            (reg:SI 240))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 156 [ D.18586 ])
            (const_int 33554431 [0x1ffffff]))
        (nil)))

(jump_insn 151 150 152 24 arch/arm/kernel/module.c:104 discrim 1 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 168)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 143 145 147 148 149 150 151 156 158 160 164 167 169 170 189 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 84, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  25 [0.0%]  (fallthru,loop_exit)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 23 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 145 147 148 158 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 145 147 148 158 169 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 145 147 148 158 169 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 161 207
;; live  kill	 14 [lr]
;; rd  in  	(98)
9, 18, 27, 35, 36, 41, 42, 47, 84, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
6, 536, 574
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 574

;; Pred edge  23 [0.0%]  (loop_exit)
;; Pred edge  24 [0.0%]  (fallthru,loop_exit)
(code_label 152 151 153 25 46 "" [1 uses])

(note 153 152 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 155 153 156 25 arch/arm/kernel/module.c:107 (set (reg/f:SI 207)
        (plus:SI (reg/v/f:SI 170 [ module ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 170 [ module ])
        (nil)))

(insn 156 155 157 25 arch/arm/kernel/module.c:107 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 145 [ symname ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ symname ])
        (nil)))

(insn 157 156 158 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 158 [ D.18574 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158 [ D.18574 ])
        (nil)))

(insn 158 157 159 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v:SI 147 [ loc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ loc ])
        (nil)))

(insn 159 158 160 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 139 [ temp.419 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ temp.419 ])
        (nil)))

(insn 160 159 161 25 arch/arm/kernel/module.c:107 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x111c33f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x111c33f0>)
        (nil)))

(insn 161 160 162 25 arch/arm/kernel/module.c:107 (set (reg:SI 1 r1)
        (reg/f:SI 207)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 207)
        (nil)))

(insn 162 161 163 25 arch/arm/kernel/module.c:107 (set (reg:SI 2 r2)
        (reg/v:SI 169 [ relindex ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 169 [ relindex ])
        (nil)))

(insn 163 162 164 25 arch/arm/kernel/module.c:107 (set (reg:SI 3 r3)
        (reg/v:SI 148 [ i ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 148 [ i ])
        (nil)))

(call_insn 164 163 165 25 arch/arm/kernel/module.c:107 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 165 164 303 25 arch/arm/kernel/module.c:111 (set (reg:SI 161 [ D.18562 ])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 303 165 304 25 arch/arm/kernel/module.c:111 (set (pc)
        (label_ref 254)) -1 (nil))
;; End of basic block 25 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(99)
6, 18, 27, 35, 36, 41, 42, 84, 89, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  36 [100.0%] 

(barrier 304 303 168)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 148 149 150 151 156 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 156 160 189
;; lr  def 	 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 148 149 150 151 156 160 164 167 169 170 189 239 240
;; live  gen 	 208 209 210 211
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 84, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(4)
575, 576, 577, 578
;; rd  kill	(4)
575, 576, 577, 578

;; Pred edge  24 [100.0%] 
(code_label 168 304 169 26 47 "" [1 uses])

(note 169 168 170 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 170 169 171 26 arch/arm/kernel/module.c:117 (set (reg:SI 208)
        (ashiftrt:SI (reg:SI 156 [ D.18586 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 156 [ D.18586 ])
        (nil)))

(insn 171 170 172 26 arch/arm/kernel/module.c:117 (set (reg:SI 209)
        (and:SI (reg:SI 208)
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 172 171 173 26 arch/arm/kernel/module.c:117 (set (reg:SI 210)
        (and:SI (reg:SI 140 [ temp.418 ])
            (const_int -16777216 [0xffffffffff000000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 140 [ temp.418 ])
        (nil)))

(insn 173 172 174 26 arch/arm/kernel/module.c:117 (set (reg:SI 211)
        (ior:SI (reg:SI 209)
            (reg:SI 210))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_DEAD (reg:SI 209)
            (nil))))

(insn 174 173 305 26 arch/arm/kernel/module.c:117 (set (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])
        (reg:SI 211)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 211)
        (expr_list:REG_DEAD (reg:SI 189 [ <variable>.sh_addr ])
            (expr_list:REG_DEAD (reg:SI 160 [ D.18568 ])
                (nil)))))

(jump_insn 305 174 306 26 arch/arm/kernel/module.c:118 (set (pc)
        (label_ref 241)) -1 (nil))
;; End of basic block 26 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 84, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  33 [100.0%] 

(barrier 306 305 177)

;; Start of basic block ( 17) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 189
;; lr  def 	 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 212 213 214 215
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(4)
579, 580, 581, 582
;; rd  kill	(4)
579, 580, 581, 582

;; Pred edge  17 [100.0%] 
(code_label 177 306 178 27 40 "" [1 uses])

(note 178 177 180 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 180 178 181 27 arch/arm/kernel/module.c:126 (set (reg:SI 213)
        (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 181 180 182 27 arch/arm/kernel/module.c:126 (set (reg:SI 212)
        (and:SI (reg:SI 213)
            (const_int -268435441 [0xfffffffff000000f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 213)
        (nil)))

(insn 182 181 183 27 arch/arm/kernel/module.c:126 (set (reg:SI 215)
        (ior:SI (reg:SI 212)
            (const_int 27262976 [0x1a00000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 183 182 184 27 arch/arm/kernel/module.c:126 (set (reg:SI 214)
        (ior:SI (reg:SI 215)
            (const_int 61440 [0xf000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_EQUAL (ior:SI (reg:SI 212)
                (const_int 27324416 [0x1a0f000]))
            (nil))))

(insn 184 183 307 27 arch/arm/kernel/module.c:126 (set (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])
        (reg:SI 214)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg:SI 189 [ <variable>.sh_addr ])
            (expr_list:REG_DEAD (reg:SI 160 [ D.18568 ])
                (nil)))))

(jump_insn 307 184 308 27 arch/arm/kernel/module.c:127 (set (pc)
        (label_ref 241)) -1 (nil))
;; End of basic block 27 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 93, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  33 [100.0%] 

(barrier 308 307 187)

;; Start of basic block ( 13) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u251(11){ }u252(13){ }u253(25){ }u254(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 160 189
;; lr  def 	 216 217 218 219 220
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 146 147 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 216 217 218 219 220
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(5)
583, 584, 585, 586, 587
;; rd  kill	(5)
583, 584, 585, 586, 587

;; Pred edge  13 [29.0%] 
(code_label 187 308 188 28 41 "" [1 uses])

(note 188 187 190 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 190 188 191 28 arch/arm/kernel/module.c:131 (set (reg:SI 217 [ <variable>.st_value ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ sym ])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ sym ])
        (nil)))

(insn 191 190 192 28 arch/arm/kernel/module.c:131 (set (reg:SI 216)
        (minus:SI (reg:SI 217 [ <variable>.st_value ])
            (reg/v:SI 147 [ loc ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 217 [ <variable>.st_value ])
        (expr_list:REG_DEAD (reg/v:SI 147 [ loc ])
            (nil))))

(insn 192 191 193 28 arch/arm/kernel/module.c:131 (set (reg:SI 219)
        (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 193 192 194 28 arch/arm/kernel/module.c:131 (set (reg:SI 218)
        (plus:SI (reg:SI 216)
            (reg:SI 219))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 219)
        (expr_list:REG_DEAD (reg:SI 216)
            (nil))))

(insn 194 193 195 28 arch/arm/kernel/module.c:131 (set (reg:SI 220)
        (and:SI (reg:SI 218)
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 218)
        (nil)))

(insn 195 194 309 28 arch/arm/kernel/module.c:131 (set (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])
        (reg:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (expr_list:REG_DEAD (reg:SI 189 [ <variable>.sh_addr ])
            (expr_list:REG_DEAD (reg:SI 160 [ D.18568 ])
                (nil)))))

(jump_insn 309 195 310 28 arch/arm/kernel/module.c:132 (set (pc)
        (label_ref 241)) -1 (nil))
;; End of basic block 28 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 95, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  33 [100.0%] 

(barrier 310 309 298)

;; Start of basic block ( 19) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 146 160 189
;; lr  def 	 134 142 153 154 155 221 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 143 146 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 134 142 153 154 155 221 222 223 224 225
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(10)
510, 513, 527, 528, 529, 588, 589, 590, 591, 592
;; rd  kill	(11)
510, 513, 514, 527, 528, 529, 588, 589, 590, 591, 592

;; Pred edge  19 [100.0%] 
(code_label 298 310 199 29 51 "" [1 uses])

(note 199 298 201 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 201 199 203 29 arch/arm/kernel/module.c:136 (set (reg:SI 134 [ temp.430 ])
        (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 203 201 204 29 arch/arm/kernel/module.c:137 (set (reg:SI 221)
        (and:SI (reg:SI 134 [ temp.430 ])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 204 203 205 29 arch/arm/kernel/module.c:137 (set (reg:SI 155 [ D.18603 ])
        (ashiftrt:SI (reg:SI 221)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 221)
        (nil)))

(insn 205 204 206 29 arch/arm/kernel/module.c:137 (set (reg:SI 222)
        (ashift:SI (reg:SI 134 [ temp.430 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 206 205 207 29 arch/arm/kernel/module.c:137 (set (reg:SI 154 [ D.18604 ])
        (lshiftrt:SI (reg:SI 222)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 222)
        (expr_list:REG_EQUAL (and:SI (reg:SI 134 [ temp.430 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 207 206 208 29 arch/arm/kernel/module.c:138 (set (reg:SI 223)
        (ior:SI (reg:SI 155 [ D.18603 ])
            (reg:SI 154 [ D.18604 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 155 [ D.18603 ])
        (expr_list:REG_DEAD (reg:SI 154 [ D.18604 ])
            (nil))))

(insn 208 207 209 29 arch/arm/kernel/module.c:138 (set (reg:SI 153 [ D.18605 ])
        (xor:SI (reg:SI 223)
            (const_int 32768 [0x8000]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 223)
        (nil)))

(insn 209 208 210 29 arch/arm/kernel/module.c:140 (set (reg:SI 224)
        (plus:SI (reg:SI 153 [ D.18605 ])
            (const_int -32768 [0xffffffffffff8000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 153 [ D.18605 ])
        (nil)))

(insn 210 209 211 29 arch/arm/kernel/module.c:140 (set (reg:SI 225 [ <variable>.st_value ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 146 [ sym ])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ sym ])
        (nil)))

(insn 211 210 214 29 arch/arm/kernel/module.c:140 (set (reg/v:SI 142 [ offset.415 ])
        (plus:SI (reg:SI 224)
            (reg:SI 225 [ <variable>.st_value ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 225 [ <variable>.st_value ])
        (expr_list:REG_DEAD (reg:SI 224)
            (nil))))

(jump_insn 214 211 215 29 arch/arm/kernel/module.c:141 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  30 [28.0%]  (fallthru)
;; Succ edge  31 [72.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u282(11){ }u283(13){ }u284(25){ }u285(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 142
;; live  kill	
;; rd  in  	(96)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
514
;; rd  kill	(2)
513, 514

;; Pred edge  29 [28.0%]  (fallthru)
(note 215 214 216 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 217 30 arch/arm/kernel/module.c:142 (set (reg/v:SI 142 [ offset.415 ])
        (ashiftrt:SI (reg/v:SI 142 [ offset.415 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 30 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; rd  out 	(96)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 29 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u287(11){ }u288(13){ }u289(25){ }u290(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 160 189
;; lr  def 	 226 227 228 229 230 231 233
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142 143 148 149 150 151 160 164 167 169 170 189 239 240
;; live  gen 	 226 227 228 229 230 231 233
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(7)
593, 594, 595, 596, 597, 598, 599
;; rd  kill	(7)
593, 594, 595, 596, 597, 598, 599

;; Pred edge  29 [72.0%] 
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 217 216 218 31 48 "" [1 uses])

(note 218 217 219 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 220 31 arch/arm/kernel/module.c:145 (set (reg:SI 226)
        (and:SI (reg/v:SI 142 [ offset.415 ])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 220 219 221 31 arch/arm/kernel/module.c:145 (set (reg:SI 227)
        (ashift:SI (reg:SI 226)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(insn 221 220 222 31 arch/arm/kernel/module.c:145 (set (reg:SI 229)
        (ashift:SI (reg/v:SI 142 [ offset.415 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 142 [ offset.415 ])
        (nil)))

(insn 222 221 223 31 arch/arm/kernel/module.c:145 (set (reg:SI 228)
        (lshiftrt:SI (reg:SI 229)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 229)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 142 [ offset.415 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 223 222 225 31 arch/arm/kernel/module.c:145 (set (reg:SI 230)
        (ior:SI (reg:SI 227)
            (reg:SI 228))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 228)
        (expr_list:REG_DEAD (reg:SI 227)
            (nil))))

(insn 225 223 226 31 arch/arm/kernel/module.c:145 (set (reg:SI 231)
        (and:SI (reg:SI 134 [ temp.430 ])
            (const_int -987136 [0xfffffffffff0f000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 134 [ temp.430 ])
        (expr_list:REG_EQUAL (and:SI (reg:SI 134 [ temp.430 ])
                (const_int -987136 [0xfffffffffff0f000]))
            (nil))))

(insn 226 225 227 31 arch/arm/kernel/module.c:145 (set (reg:SI 233)
        (ior:SI (reg:SI 230)
            (reg:SI 231))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg:SI 230)
            (nil))))

(insn 227 226 311 31 arch/arm/kernel/module.c:145 (set (mem:SI (plus:SI (reg:SI 160 [ D.18568 ])
                (reg:SI 189 [ <variable>.sh_addr ])) [0 S4 A32])
        (reg:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 233)
        (expr_list:REG_DEAD (reg:SI 189 [ <variable>.sh_addr ])
            (expr_list:REG_DEAD (reg:SI 160 [ D.18568 ])
                (nil)))))

(jump_insn 311 227 312 31 arch/arm/kernel/module.c:147 (set (pc)
        (label_ref 241)) -1 (nil))
;; End of basic block 31 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 92, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  33 [100.0%] 

(barrier 312 311 230)

;; Start of basic block ( 18 11 16) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u304(11){ }u305(13){ }u306(25){ }u307(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 170
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 170
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 161 235
;; live  kill	 14 [lr]
;; rd  in  	(99)
9, 18, 27, 35, 36, 41, 42, 47, 92, 93, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
5, 535, 600
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 44, 45, 46, 47, 534, 535, 536, 537, 538, 600

;; Pred edge  18 [50.0%]  (loop_exit)
;; Pred edge  11 [71.0%]  (loop_exit)
;; Pred edge  16 [71.0%]  (loop_exit)
(code_label 230 312 231 32 36 "" [3 uses])

(note 231 230 233 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 233 231 234 32 arch/arm/kernel/module.c:243 (set (reg/f:SI 235)
        (plus:SI (reg/v/f:SI 170 [ module ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 170 [ module ])
        (nil)))

(insn 234 233 235 32 arch/arm/kernel/module.c:243 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x111b02c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x111b02c0>)
        (nil)))

(insn 235 234 236 32 arch/arm/kernel/module.c:243 (set (reg:SI 1 r1)
        (reg/f:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 235)
        (nil)))

(insn 236 235 237 32 arch/arm/kernel/module.c:243 (set (reg:SI 2 r2)
        (reg:SI 158 [ D.18574 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158 [ D.18574 ])
        (nil)))

(call_insn 237 236 238 32 arch/arm/kernel/module.c:243 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 238 237 313 32 arch/arm/kernel/module.c:245 (set (reg:SI 161 [ D.18562 ])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 313 238 314 32 arch/arm/kernel/module.c:245 (set (pc)
        (label_ref 254)) -1 (nil))
;; End of basic block 32 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; rd  out 	(100)
5, 18, 27, 35, 36, 41, 42, 92, 93, 96, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604


;; Succ edge  36 [100.0%] 

(barrier 314 313 241)

;; Start of basic block ( 28 10 20 26 27 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u315(11){ }u316(13){ }u317(25){ }u318(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 148
;; lr  def 	 143 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  gen 	 143 148
;; live  kill	
;; rd  in  	(103)
9, 18, 27, 35, 36, 41, 42, 47, 84, 92, 93, 94, 95, 96, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(2)
515, 523
;; rd  kill	(4)
515, 516, 522, 523

;; Pred edge  28 [100.0%] 
;; Pred edge  10 [50.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  26 [100.0%] 
;; Pred edge  27 [100.0%] 
;; Pred edge  31 [100.0%] 
(code_label 241 314 242 33 37 "" [6 uses])

(note 242 241 243 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 33 arch/arm/kernel/module.c:58 (set (reg/v:SI 148 [ i ])
        (plus:SI (reg/v:SI 148 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 244 243 245 33 arch/arm/kernel/module.c:58 (set (reg:SI 143 [ ivtmp.410 ])
        (plus:SI (reg:SI 143 [ ivtmp.410 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(101)
9, 18, 27, 35, 36, 41, 42, 47, 84, 92, 93, 94, 95, 96, 97, 104, 105, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u321(11){ }u322(13){ }u323(25){ }u324(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150
;; lr  def 	 24 [cc] 236 237
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  gen 	 24 [cc] 236 237
;; live  kill	
;; rd  in  	(103)
9, 18, 27, 35, 36, 41, 42, 47, 84, 92, 93, 94, 95, 96, 97, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(3)
86, 601, 602
;; rd  kill	(22)
84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 601, 602

;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 245 244 246 34 31 "" [1 uses])

(note 246 245 248 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 248 246 249 34 arch/arm/kernel/module.c:58 (set (reg:SI 237 [ <variable>.sh_size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ relsec ])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 250 34 arch/arm/kernel/module.c:58 (set (reg:SI 236)
        (lshiftrt:SI (reg:SI 237 [ <variable>.sh_size ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 237 [ <variable>.sh_size ])
        (nil)))

(insn 250 249 251 34 arch/arm/kernel/module.c:58 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ i ])
            (reg:SI 236))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(jump_insn 251 250 252 34 arch/arm/kernel/module.c:58 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 247)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
            (nil))))
;; End of basic block 34 -> ( 3 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 148 149 150 151 164 167 169 170 239 240
;; rd  out 	(97)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  3 [98.0%] 
;; Succ edge  35 [2.0%]  (fallthru,loop_exit)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u330(11){ }u331(13){ }u332(25){ }u333(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 161
;; live  kill	
;; rd  in  	(97)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604
;; rd  gen 	(1)
534
;; rd  kill	(5)
534, 535, 536, 537, 538

;; Pred edge  34 [2.0%]  (fallthru,loop_exit)
(note 252 251 253 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 35 arch/arm/kernel/module.c:248 (set (reg:SI 161 [ D.18562 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 35 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; rd  out 	(98)
9, 18, 27, 35, 36, 41, 42, 47, 86, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 4 6 25 32) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u334(11){ }u335(13){ }u336(25){ }u337(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(117)
5, 6, 7, 8, 9, 18, 27, 35, 36, 41, 42, 47, 84, 86, 89, 92, 93, 96, 101, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604
;; rd  gen 	(1)
4
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  25 [100.0%] 
;; Pred edge  32 [100.0%] 
(code_label 254 253 255 36 34 "" [4 uses])

(note 255 254 260 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 260 255 266 36 arch/arm/kernel/module.c:249 (set (reg/i:SI 0 r0)
        (reg:SI 161 [ D.18562 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 161 [ D.18562 ])
        (nil)))

(insn 266 260 0 36 arch/arm/kernel/module.c:249 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 36 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(113)
4, 18, 27, 35, 36, 41, 42, 47, 84, 86, 89, 92, 93, 96, 101, 103, 104, 105, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function module_alloc (module_alloc)[0:990]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


module_alloc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,7u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 162{136d,26u,0e} in 15{14 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,3] 2[5,3] 3[8,3] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 138[131,1] 139[132,1] 140[133,1] 141[134,1] 142[135,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d4(1){ }d7(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 138 139 140 141 142
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 138 139 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(7)
0, 130, 131, 132, 133, 134, 135
;; rd  kill	(10)
0, 1, 15, 16, 130, 131, 132, 133, 134, 135
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 36
;;      reg 14 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d131(bb 2 insn 6) }
;;   UD chains for insn luid 5 uid 11
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 141 { d134(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 134 { d130(bb 2 insn 7) }
;;   UD chains for insn luid 8 uid 14
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 142 { d135(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 139 { d132(bb 2 insn 36) }
;;   UD chains for insn luid 12 uid 19
;;      reg 140 { d133(bb 2 insn 9) }
;;   UD chains for insn luid 13 uid 20
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d1(bb 0 insn -1) }
;;      reg 1 { d3(bb 2 insn 17) }
;;      reg 2 { d6(bb 2 insn 18) }
;;      reg 3 { d9(bb 2 insn 19) }
;;   UD chains for insn luid 14 uid 32
;;      reg 0 { d0(bb 2 insn 20) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u21(0){ d0(bb 2 insn 20) }u22(11){ d11(bb 0 insn -1) }u23(13){ d14(bb 0 insn -1) }u24(14){ }u25(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 20) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 32 to worklist
  Adding insn 20 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 141) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 13 sp) in insn 12:
Processing use of (reg 134 [ pgprot_kernel.262 ]) in insn 12:
  Adding insn 7 to worklist
Processing use of (reg 138) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 142) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 139) in insn 15:
  Adding insn 36 to worklist
Processing use of (reg 14 lr) in insn 36:
Processing use of (reg 13 sp) in insn 20:
Processing use of (reg 0 r0) in insn 20:
Processing use of (reg 1 r1) in insn 20:
  Adding insn 17 to worklist
Processing use of (reg 2 r2) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 3 r3) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 140) in insn 19:
  Adding insn 9 to worklist
Processing use of (reg 0 r0) in insn 32:


module_alloc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r11={1d,2u} r12={2d} r13={1d,7u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 162{136d,26u,0e} in 15{14 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,2] 1[2,3] 2[5,3] 3[8,3] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 138[131,1] 139[132,1] 140[133,1] 141[134,1] 142[135,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 138 139 140 141 142
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 138 139 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 4, 7, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(7)
0, 130, 131, 132, 133, 134, 135
;; rd  kill	(10)
0, 1, 15, 16, 130, 131, 132, 133, 134, 135

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 36 4 3 2 (set (reg:SI 139)
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(note 3 36 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/module.c:42 (set (reg/f:SI 138)
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e750c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/module.c:42 (set (reg:SI 134 [ pgprot_kernel.262 ])
        (mem/c/i:SI (reg/f:SI 138) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (nil)))

(insn 9 7 10 2 arch/arm/kernel/module.c:42 (set (reg:SI 140)
        (const_int -1075838976 [0xffffffffbfe00000])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/module.c:42 (set (reg:SI 141)
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/module.c:42 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (const_int 208 [0xd0])
            (nil))))

(insn 12 11 13 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 134 [ pgprot_kernel.262 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ pgprot_kernel.262 ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/module.c:42 (set (reg:SI 142)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))

(insn 15 14 17 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 17 15 18 2 arch/arm/kernel/module.c:42 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/kernel/module.c:42 (set (reg:SI 2 r2)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/kernel/module.c:42 (set (reg:SI 3 r3)
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int -1075838976 [0xffffffffbfe00000])
            (nil))))

(call_insn 20 19 32 2 arch/arm/kernel/module.c:42 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vmalloc_node_range") [flags 0x41] <function_decl 0x10fb8e80 __vmalloc_node_range>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 32 20 0 2 arch/arm/kernel/module.c:45 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
0, 4, 7, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
