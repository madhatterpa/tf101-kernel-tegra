
;; Function trap_init (trap_init)[0:1083] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


trap_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 12 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 12 2 13 NOTE_INSN_DELETED)

(note 13 12 0 NOTE_INSN_DELETED)


;; Function early_trap_init (early_trap_init)[0:1085] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 92.
verify found no changes in insn with uid = 92.
deleting insn with uid = 33.
scanning new insn with uid = 93.
verify found no changes in insn with uid = 93.
deleting insn with uid = 21.
rescanning insn with uid = 29.
deleting insn with uid = 29.
deleting insn with uid = 22.
scanning new insn with uid = 94.
verify found no changes in insn with uid = 94.
deleting insn with uid = 8.
rescanning insn with uid = 16.
deleting insn with uid = 16.
deleting insn with uid = 9.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a3(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r183: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a3(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 83(l0): point = 0
   Insn 79(l0): point = 2
   Insn 82(l0): point = 4
   Insn 81(l0): point = 6
   Insn 77(l0): point = 8
   Insn 76(l0): point = 10
   Insn 75(l0): point = 12
   Insn 74(l0): point = 14
   Insn 68(l0): point = 16
   Insn 66(l0): point = 18
   Insn 63(l0): point = 20
   Insn 65(l0): point = 22
   Insn 64(l0): point = 24
   Insn 56(l0): point = 26
   Insn 54(l0): point = 28
   Insn 55(l0): point = 30
   Insn 53(l0): point = 32
   Insn 47(l0): point = 34
   Insn 45(l0): point = 36
   Insn 42(l0): point = 38
   Insn 44(l0): point = 40
   Insn 35(l0): point = 42
   Insn 92(l0): point = 44
   Insn 43(l0): point = 46
   Insn 34(l0): point = 48
   Insn 31(l0): point = 50
   Insn 30(l0): point = 52
   Insn 93(l0): point = 54
   Insn 29(l0): point = 56
   Insn 28(l0): point = 58
   Insn 18(l0): point = 60
   Insn 36(l0): point = 62
   Insn 15(l0): point = 64
   Insn 17(l0): point = 66
   Insn 94(l0): point = 68
   Insn 16(l0): point = 70
   Insn 6(l0): point = 72
   Insn 5(l0): point = 74
 a0(r183): [1..2]
 a1(r134): [5..62]
 a2(r136): [7..72]
 a3(r177): [15..16]
 a4(r163): [33..34]
 a5(r135): [39..42]
 a6(r156): [43..48]
 a7(r155): [43..44]
 a8(r148): [53..54]
 a9(r139): [67..68]
 a10(r137): [73..74]
Compressing live ranges: from 77 to 21 - 27%
Ranges after the compression:
 a0(r183): [0..1]
 a1(r134): [2..15]
 a2(r136): [3..18]
 a3(r177): [4..5]
 a4(r163): [6..7]
 a5(r135): [8..9]
 a6(r156): [10..12]
 a7(r155): [10..11]
 a8(r148): [13..14]
 a9(r139): [16..17]
 a10(r137): [19..20]
+++Allocating 72 bytes for conflict table (uncompressed size 88)
;; a0(r183,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r134,l0) conflicts: a2(r136,l0) a3(r177,l0) a4(r163,l0) a5(r135,l0) a7(r155,l0) a6(r156,l0) a8(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r136,l0) conflicts: a1(r134,l0) a3(r177,l0) a4(r163,l0) a5(r135,l0) a7(r155,l0) a6(r156,l0) a8(r148,l0) a9(r139,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r177,l0) conflicts: a1(r134,l0) a2(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r163,l0) conflicts: a1(r134,l0) a2(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r135,l0) conflicts: a1(r134,l0) a2(r136,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a6(r156,l0) conflicts: a1(r134,l0) a2(r136,l0) a7(r155,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a7(r155,l0) conflicts: a1(r134,l0) a2(r136,l0) a6(r156,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a8(r148,l0) conflicts: a1(r134,l0) a2(r136,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a9(r139,l0) conflicts: a2(r136,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a10(r137,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a5(r135)<->a7(r155)@125:shuffle
  cp1:a5(r135)<->a6(r156)@125:shuffle
  regions=1, blocks=3, points=21
    allocnos=11, copies=2, conflicts=1, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r183 1r134 2r136 3r177 4r163 5r135 6r156 7r155 8r148 9r139 10r137
    modified regnos: 134 135 136 137 139 148 155 156 163 177 183
    border:
    Pressure: GENERAL_REGS=6
    Reg 183 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 4 regs less
    Reg 136 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
      Pushing a10(r137,l0)
      Pushing a4(r163,l0)
      Pushing a3(r177,l0)
      Pushing a9(r139,l0)
      Pushing a7(r155,l0)
      Pushing a6(r156,l0)
      Pushing a8(r148,l0)
      Pushing a5(r135,l0)
      Pushing a0(r183,l0)
      Pushing a1(r134,l0)
      Pushing a2(r136,l0)
      Popping a2(r136,l0)  -- assign reg 4
      Popping a1(r134,l0)  -- assign reg 5
      Popping a0(r183,l0)  -- assign reg 3
      Popping a5(r135,l0)  -- assign reg 0
      Popping a8(r148,l0)  -- assign reg 2
      Popping a6(r156,l0)  -- assign reg 3
      Popping a7(r155,l0)  -- assign reg 0
      Popping a9(r139,l0)  -- assign reg 2
      Popping a3(r177,l0)  -- assign reg 0
      Popping a4(r163,l0)  -- assign reg 0
      Popping a10(r137,l0)  -- assign reg 3
Disposition:
    1:r134 l0     5    5:r135 l0     0    2:r136 l0     4   10:r137 l0     3
    9:r139 l0     2    8:r148 l0     2    7:r155 l0     0    6:r156 l0     3
    4:r163 l0     0    3:r177 l0     0    0:r183 l0     3
New iteration of spill/restore move
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 137
insn=6, live_throughout: 13, dead_or_set: 136, 137
insn=16, live_throughout: 13, 136, dead_or_set: 1
insn=94, live_throughout: 1, 13, 136, dead_or_set: 139
insn=17, live_throughout: 1, 13, 136, dead_or_set: 2, 139
insn=15, live_throughout: 1, 2, 13, 136, dead_or_set: 0
insn=36, live_throughout: 0, 1, 2, 13, 136, dead_or_set: 134
insn=18, live_throughout: 13, 134, 136, dead_or_set: 0, 1, 2, 14
insn=28, live_throughout: 13, 134, 136, dead_or_set: 0
insn=29, live_throughout: 0, 13, 134, 136, dead_or_set: 1
insn=93, live_throughout: 0, 1, 13, 134, 136, dead_or_set: 148
insn=30, live_throughout: 0, 1, 13, 134, 136, dead_or_set: 2, 148
insn=31, live_throughout: 13, 134, 136, dead_or_set: 0, 1, 2, 14
insn=34, live_throughout: 13, 134, 136, dead_or_set: 156
insn=43, live_throughout: 13, 134, 136, 156, dead_or_set: 1
insn=92, live_throughout: 1, 13, 134, 136, 156, dead_or_set: 155
insn=35, live_throughout: 1, 13, 134, 136, dead_or_set: 135, 155, 156
insn=44, live_throughout: 1, 13, 134, 135, 136, dead_or_set: 2
insn=42, live_throughout: 1, 2, 13, 134, 136, dead_or_set: 0, 135
insn=45, live_throughout: 13, 134, 136, dead_or_set: 0, 1, 2, 14
insn=47, live_throughout: 13, 134, 136, dead_or_set: 163
insn=53, live_throughout: 13, 134, 136, dead_or_set: 0, 163
insn=55, live_throughout: 0, 13, 134, 136, dead_or_set: 2
insn=54, live_throughout: 0, 2, 13, 134, 136, dead_or_set: 1
insn=56, live_throughout: 13, 134, 136, dead_or_set: 0, 1, 2, 14
insn=64, live_throughout: 13, 134, 136, dead_or_set: 1
insn=65, live_throughout: 1, 13, 134, 136, dead_or_set: 2
insn=63, live_throughout: 1, 2, 13, 134, 136, dead_or_set: 0
insn=66, live_throughout: 13, 134, 136, dead_or_set: 0, 1, 2, 14
insn=68, live_throughout: 13, 134, 136, dead_or_set: 177
insn=74, live_throughout: 13, 134, 136, dead_or_set: 0, 177
insn=75, live_throughout: 0, 13, 134, 136, dead_or_set: 1
insn=76, live_throughout: 0, 1, 13, 134, 136, dead_or_set: 2
insn=77, live_throughout: 13, 134, 136, dead_or_set: 0, 1, 2, 14
insn=81, live_throughout: 13, 134, dead_or_set: 0, 136
insn=82, live_throughout: 0, 13, dead_or_set: 1, 134
insn=79, live_throughout: 0, 1, 13, dead_or_set: 183
insn=83, live_throughout: 13, dead_or_set: 0, 1, 14, 183
init_insns for 137: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 93 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 92 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 183: (insn_list:REG_DEP_TRUE 79 (nil))
changing reg in insn 36
changing reg in insn 42
changing reg in insn 82
changing reg in insn 35
changing reg in insn 42
changing reg in insn 44
changing reg in insn 6
changing reg in insn 63
changing reg in insn 28
changing reg in insn 81
changing reg in insn 68
changing reg in insn 47
changing reg in insn 36
changing reg in insn 15
changing reg in insn 5
changing reg in insn 6
changing reg in insn 94
changing reg in insn 17
changing reg in insn 93
changing reg in insn 30
changing reg in insn 92
changing reg in insn 35
changing reg in insn 34
changing reg in insn 43
changing reg in insn 35
changing reg in insn 47
changing reg in insn 53
changing reg in insn 68
changing reg in insn 74
changing reg in insn 79
changing reg in insn 83
deleting insn with uid = 53.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 77.
rescanning insn with uid = 83.
deleting insn with uid = 83.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


early_trap_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr]
;;  ref usage 	r0={18d,12u} r1={15d,9u} r2={16d,8u} r3={11d,4u} r4={1d,7u} r5={1d,2u} r12={8d} r13={1d,9u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 908{856d,52u,0e} in 37{30 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 2 20 2 NOTE_INSN_DELETED)

(note 20 10 23 2 NOTE_INSN_DELETED)

(note 23 20 37 2 NOTE_INSN_DELETED)

(note 37 23 49 2 NOTE_INSN_DELETED)

(note 49 37 52 2 NOTE_INSN_DELETED)

(note 52 49 58 2 NOTE_INSN_DELETED)

(note 58 52 59 2 NOTE_INSN_DELETED)

(note 59 58 62 2 NOTE_INSN_DELETED)

(note 62 59 69 2 NOTE_INSN_DELETED)

(note 69 62 70 2 NOTE_INSN_DELETED)

(note 70 69 73 2 NOTE_INSN_DELETED)

(note 73 70 80 2 NOTE_INSN_DELETED)

(note 80 73 5 2 NOTE_INSN_DELETED)

(insn 5 80 6 2 arch/arm/kernel/traps.c:779 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 6 5 16 2 arch/arm/kernel/traps.c:779 (set (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [137]) [0 vectors_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 6 94 2 arch/arm/kernel/traps.c:791 (set (reg:SI 1 r1)
        (symbol_ref:SI ("__vectors_start") [flags 0xc0] <var_decl 0x1121f360 __vectors_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__vectors_start") [flags 0xc0] <var_decl 0x1121f360 __vectors_start>)
        (nil)))

(insn 94 16 17 2 arch/arm/kernel/traps.c:791 (set (reg/f:SI 2 r2 [139])
        (symbol_ref:SI ("__vectors_end") [flags 0xc0] <var_decl 0x1121f3c0 __vectors_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__vectors_end") [flags 0xc0] <var_decl 0x1121f3c0 __vectors_end>)
        (nil)))

(insn 17 94 15 2 arch/arm/kernel/traps.c:791 (set (reg:SI 2 r2)
        (minus:SI (reg/f:SI 2 r2 [139])
            (reg:SI 1 r1))) 28 {*arm_subsi3_insn} (nil))

(insn 15 17 36 2 arch/arm/kernel/traps.c:791 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 36 15 18 2 arch/arm/kernel/traps.c:793 (set (reg/f:SI 5 r5 [orig:134 D.18814 ] [134])
        (plus:SI (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])
            (const_int 4096 [0x1000]))) 4 {*arm_addsi3} (nil))

(call_insn 18 36 28 2 arch/arm/kernel/traps.c:791 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 28 18 29 2 arch/arm/kernel/traps.c:792 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (nil))

(insn 29 28 93 2 arch/arm/kernel/traps.c:792 (set (reg:SI 1 r1)
        (symbol_ref:SI ("__stubs_start") [flags 0xc0] <var_decl 0x1121f2a0 __stubs_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__stubs_start") [flags 0xc0] <var_decl 0x1121f2a0 __stubs_start>)
        (nil)))

(insn 93 29 30 2 arch/arm/kernel/traps.c:792 (set (reg/f:SI 2 r2 [148])
        (symbol_ref:SI ("__stubs_end") [flags 0xc0] <var_decl 0x1121f300 __stubs_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__stubs_end") [flags 0xc0] <var_decl 0x1121f300 __stubs_end>)
        (nil)))

(insn 30 93 31 2 arch/arm/kernel/traps.c:792 (set (reg:SI 2 r2)
        (minus:SI (reg/f:SI 2 r2 [148])
            (reg:SI 1 r1))) 28 {*arm_subsi3_insn} (nil))

(call_insn 31 30 34 2 arch/arm/kernel/traps.c:792 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 31 43 2 arch/arm/kernel/traps.c:793 (set (reg/f:SI 3 r3 [156])
        (symbol_ref:SI ("__kuser_helper_start") [flags 0xc0] <var_decl 0x1121f420 __kuser_helper_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__kuser_helper_start") [flags 0xc0] <var_decl 0x1121f420 __kuser_helper_start>)
        (nil)))

(insn 43 34 92 2 arch/arm/kernel/traps.c:793 (set (reg:SI 1 r1)
        (reg/f:SI 3 r3 [156])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__kuser_helper_start") [flags 0xc0] <var_decl 0x1121f420 __kuser_helper_start>)
        (nil)))

(insn 92 43 35 2 arch/arm/kernel/traps.c:793 (set (reg/f:SI 0 r0 [155])
        (symbol_ref:SI ("__kuser_helper_end") [flags 0xc0] <var_decl 0x1121f480 __kuser_helper_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__kuser_helper_end") [flags 0xc0] <var_decl 0x1121f480 __kuser_helper_end>)
        (nil)))

(insn 35 92 44 2 arch/arm/kernel/traps.c:793 (set (reg:SI 0 r0 [orig:135 kuser_sz.318 ] [135])
        (minus:SI (reg/f:SI 0 r0 [155])
            (reg/f:SI 3 r3 [156]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (minus:SI (symbol_ref:SI ("__kuser_helper_end") [flags 0xc0] <var_decl 0x1121f480 __kuser_helper_end>)
            (symbol_ref:SI ("__kuser_helper_start") [flags 0xc0] <var_decl 0x1121f420 __kuser_helper_start>))
        (nil)))

(insn 44 35 42 2 arch/arm/kernel/traps.c:793 (set (reg:SI 2 r2)
        (reg:SI 0 r0 [orig:135 kuser_sz.318 ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 42 44 45 2 arch/arm/kernel/traps.c:793 (set (reg:SI 0 r0)
        (minus:SI (reg/f:SI 5 r5 [orig:134 D.18814 ] [134])
            (reg:SI 0 r0 [orig:135 kuser_sz.318 ] [135]))) 28 {*arm_subsi3_insn} (nil))

(call_insn 45 42 47 2 arch/arm/kernel/traps.c:793 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 47 45 55 2 arch/arm/kernel/traps.c:771 (set (reg/f:SI 0 r0 [163])
        (plus:SI (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])
            (const_int 4064 [0xfe0]))) 4 {*arm_addsi3} (nil))

(insn 55 47 54 2 arch/arm/kernel/traps.c:771 (set (reg:SI 2 r2)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 54 55 56 2 arch/arm/kernel/traps.c:771 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 0 r0)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn 56 54 64 2 arch/arm/kernel/traps.c:771 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 64 56 65 2 arch/arm/kernel/traps.c:804 (set (reg:SI 1 r1)
        (symbol_ref:SI ("sigreturn_codes") [flags 0xc0] <var_decl 0x111bf780 sigreturn_codes>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("sigreturn_codes") [flags 0xc0] <var_decl 0x111bf780 sigreturn_codes>)
        (nil)))

(insn 65 64 63 2 arch/arm/kernel/traps.c:804 (set (reg:SI 2 r2)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 28 [0x1c])
        (nil)))

(insn 63 65 66 2 arch/arm/kernel/traps.c:804 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])
            (const_int 1280 [0x500]))) 4 {*arm_addsi3} (nil))

(call_insn 66 63 68 2 arch/arm/kernel/traps.c:804 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 68 66 74 2 arch/arm/kernel/traps.c:806 (set (reg/f:SI 0 r0 [177])
        (plus:SI (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])
            (const_int 1296 [0x510]))) 4 {*arm_addsi3} (nil))

(insn 74 68 75 2 arch/arm/kernel/traps.c:806 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 0 r0 [177])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 75 74 76 2 arch/arm/kernel/traps.c:806 (set (reg:SI 1 r1)
        (symbol_ref:SI ("syscall_restart_code") [flags 0xc0] <var_decl 0x111bf7e0 syscall_restart_code>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("syscall_restart_code") [flags 0xc0] <var_decl 0x111bf7e0 syscall_restart_code>)
        (nil)))

(insn 76 75 77 2 arch/arm/kernel/traps.c:806 (set (reg:SI 2 r2)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(call_insn 77 76 81 2 arch/arm/kernel/traps.c:806 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x1124e800 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 81 77 82 2 arch/arm/kernel/traps.c:809 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [orig:136 vectors_page.310 ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 79 2 arch/arm/kernel/traps.c:809 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [orig:134 D.18814 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 79 82 83 2 arch/arm/kernel/traps.c:809 (set (reg/f:SI 3 r3 [183])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111974e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111974e0 cpu_cache>)
        (nil)))

(call_insn 83 79 91 2 arch/arm/kernel/traps.c:809 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [183])
                            (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 91 83 95 NOTE_INSN_DELETED)

(note 95 91 0 NOTE_INSN_DELETED)


;; Function __pgd_error (__pgd_error)[0:1080]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 15(l0): point = 0
   Insn 26(l0): point = 2
   Insn 24(l0): point = 4
   Insn 25(l0): point = 6
   Insn 12(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
   Insn 9(l0): point = 18
 a0(r140): [3..4]
 a1(r137): [7..18]
 a2(r134): [11..14]
 a3(r133): [13..16]
Compressing live ranges: from 21 to 8 - 38%
Ranges after the compression:
 a0(r140): [0..1]
 a1(r137): [2..7]
 a2(r134): [3..5]
 a3(r133): [4..6]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r140,l0) conflicts:
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a1(r137,l0) conflicts: a2(r134,l0) a3(r133,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a2(r134,l0) conflicts: a1(r137,l0) a3(r133,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a3(r133,l0) conflicts: a1(r137,l0) a2(r134,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

  regions=1, blocks=3, points=8
    allocnos=4, copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r140 1r137 2r134 3r133
    modified regnos: 133 134 137 140
    border:
    Pressure: GENERAL_REGS=4
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
      Pushing a3(r133,l0)
      Pushing a2(r134,l0)
      Pushing a1(r137,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r134,l0)  -- assign reg 2
      Popping a3(r133,l0)  -- assign reg 0
Disposition:
    3:r133 l0     0    2:r134 l0     2    1:r137 l0     3    0:r140 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=9, live_throughout: 0, 1, 13, dead_or_set: 2, 137
insn=2, live_throughout: 1, 13, 137, dead_or_set: 0, 133
insn=3, live_throughout: 13, 133, 137, dead_or_set: 1, 134
insn=13, live_throughout: 13, 134, 137, dead_or_set: 1, 133
insn=14, live_throughout: 1, 13, 137, dead_or_set: 2, 134
insn=12, live_throughout: 1, 2, 13, 137, dead_or_set: 0
insn=25, live_throughout: 0, 1, 2, 13, dead_or_set: 137
insn=24, live_throughout: 0, 1, 2, 13, dead_or_set: 140
insn=26, live_throughout: 0, 1, 2, 13, dead_or_set: 140
insn=15, live_throughout: 13, dead_or_set: 0, 1, 2, 14
init_insns for 137: (insn_list:REG_DEP_TRUE 25 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 24 (nil))
changing reg in insn 2
changing reg in insn 13
changing reg in insn 3
changing reg in insn 14
changing reg in insn 9
changing reg in insn 25
changing reg in insn 24
changing reg in insn 26
Spilling for insn 25.
Spilling for insn 26.

Reloads for insn # 25
Reload 0: reload_out (SI) = (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])

Reloads for insn # 26
Reload 0: reload_out (SI) = (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 14.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__pgd_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={4d,2u} r12={2d} r13={1d,5u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 144{129d,14u,1e} in 8{7 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 6 5 2 NOTE_INSN_DELETED)

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 NOTE_INSN_DELETED)

(insn 9 8 3 2 arch/arm/kernel/traps.c:740 (set (reg:SI 3 r3 [137])
        (mem:SI (reg:SI 2 r2 [ pgd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
        (nil)))

(insn 3 9 13 2 arch/arm/kernel/traps.c:739 (set (reg/v:SI 2 r2 [orig:134 line ] [134])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (nil))

(insn 13 3 12 2 arch/arm/kernel/traps.c:740 (set (reg:SI 1 r1)
        (reg/v/f:SI 0 r0 [orig:133 file ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 12 13 25 2 arch/arm/kernel/traps.c:740 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1124a400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1124a400>)
        (nil)))

(insn 25 12 24 2 arch/arm/kernel/traps.c:740 (set (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg:SI 3 r3 [137])) 167 {*arm_movsi_insn} (nil))

(insn 24 25 26 2 arch/arm/kernel/traps.c:740 (set (reg:SI 3 r3 [orig:140+4 ] [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 26 24 15 2 arch/arm/kernel/traps.c:740 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3 [orig:140+4 ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 15 26 27 2 arch/arm/kernel/traps.c:740 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 27 15 28 NOTE_INSN_DELETED)

(note 28 27 0 NOTE_INSN_DELETED)


;; Function __pmd_error (__pmd_error)[0:1079]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 14(l0): point = 0
   Insn 25(l0): point = 2
   Insn 23(l0): point = 4
   Insn 11(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 24(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r139): [3..4]
 a1(r134): [9..14]
 a2(r133): [11..16]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r139): [0..1]
 a1(r134): [2..4]
 a2(r133): [3..5]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r139,l0) conflicts:
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a1(r134,l0) conflicts: a2(r133,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a2(r133,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

  regions=1, blocks=3, points=6
    allocnos=3, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r134 2r133
    modified regnos: 133 134 139
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
      Pushing a2(r133,l0)
      Pushing a1(r134,l0)
      Pushing a0(r139,l0)
      Popping a0(r139,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 3
      Popping a2(r133,l0)  -- assign reg 0
Disposition:
    2:r133 l0     0    1:r134 l0     3    0:r139 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, dead_or_set: 0, 133
insn=3, live_throughout: 2, 13, 133, dead_or_set: 1, 134
insn=24, live_throughout: 13, 133, 134, dead_or_set: 2
insn=12, live_throughout: 13, 134, dead_or_set: 1, 133
insn=13, live_throughout: 1, 13, dead_or_set: 2, 134
insn=11, live_throughout: 1, 2, 13, dead_or_set: 0
insn=23, live_throughout: 0, 1, 2, 13, dead_or_set: 139
insn=25, live_throughout: 0, 1, 2, 13, dead_or_set: 139
insn=14, live_throughout: 13, dead_or_set: 0, 1, 2, 14
init_insns for 139: (insn_list:REG_DEP_TRUE 23 (nil))
changing reg in insn 2
changing reg in insn 12
changing reg in insn 3
changing reg in insn 13
changing reg in insn 23
changing reg in insn 25
Spilling for insn 24.
Spilling for insn 25.

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])

Reloads for insn # 25
Reload 0: reload_out (SI) = (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__pmd_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={4d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{129d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 6 5 2 NOTE_INSN_DELETED)

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 3 2 NOTE_INSN_DELETED)

(insn 3 8 24 2 arch/arm/kernel/traps.c:734 (set (reg/v:SI 3 r3 [orig:134 line ] [134])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (nil))

(insn 24 3 12 2 arch/arm/kernel/traps.c:735 (set (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg:SI 2 r2 [ pmd ])) 167 {*arm_movsi_insn} (nil))

(insn 12 24 13 2 arch/arm/kernel/traps.c:735 (set (reg:SI 1 r1)
        (reg/v/f:SI 0 r0 [orig:133 file ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 11 2 arch/arm/kernel/traps.c:735 (set (reg:SI 2 r2)
        (reg/v:SI 3 r3 [orig:134 line ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 11 13 23 2 arch/arm/kernel/traps.c:735 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11290f00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11290f00>)
        (nil)))

(insn 23 11 25 2 arch/arm/kernel/traps.c:735 (set (reg:SI 3 r3 [orig:139+4 ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 25 23 14 2 arch/arm/kernel/traps.c:735 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3 [orig:139+4 ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 14 25 26 2 arch/arm/kernel/traps.c:735 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 14 27 NOTE_INSN_DELETED)

(note 27 26 0 NOTE_INSN_DELETED)


;; Function __pte_error (__pte_error)[0:1078]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 14(l0): point = 0
   Insn 25(l0): point = 2
   Insn 23(l0): point = 4
   Insn 11(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 24(l0): point = 12
   Insn 3(l0): point = 14
   Insn 2(l0): point = 16
 a0(r139): [3..4]
 a1(r134): [9..14]
 a2(r133): [11..16]
Compressing live ranges: from 19 to 6 - 31%
Ranges after the compression:
 a0(r139): [0..1]
 a1(r134): [2..4]
 a2(r133): [3..5]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r139,l0) conflicts:
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a1(r134,l0) conflicts: a2(r133,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a2(r133,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

  regions=1, blocks=3, points=6
    allocnos=3, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r134 2r133
    modified regnos: 133 134 139
    border:
    Pressure: GENERAL_REGS=4
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
      Pushing a2(r133,l0)
      Pushing a1(r134,l0)
      Pushing a0(r139,l0)
      Popping a0(r139,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 3
      Popping a2(r133,l0)  -- assign reg 0
Disposition:
    2:r133 l0     0    1:r134 l0     3    0:r139 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, dead_or_set: 0, 133
insn=3, live_throughout: 2, 13, 133, dead_or_set: 1, 134
insn=24, live_throughout: 13, 133, 134, dead_or_set: 2
insn=12, live_throughout: 13, 134, dead_or_set: 1, 133
insn=13, live_throughout: 1, 13, dead_or_set: 2, 134
insn=11, live_throughout: 1, 2, 13, dead_or_set: 0
insn=23, live_throughout: 0, 1, 2, 13, dead_or_set: 139
insn=25, live_throughout: 0, 1, 2, 13, dead_or_set: 139
insn=14, live_throughout: 13, dead_or_set: 0, 1, 2, 14
init_insns for 139: (insn_list:REG_DEP_TRUE 23 (nil))
changing reg in insn 2
changing reg in insn 12
changing reg in insn 3
changing reg in insn 13
changing reg in insn 23
changing reg in insn 25
Spilling for insn 24.
Spilling for insn 25.

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])

Reloads for insn # 25
Reload 0: reload_out (SI) = (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__pte_error

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={4d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 143{129d,14u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 6 5 2 NOTE_INSN_DELETED)

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 3 2 NOTE_INSN_DELETED)

(insn 3 8 24 2 arch/arm/kernel/traps.c:729 (set (reg/v:SI 3 r3 [orig:134 line ] [134])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (nil))

(insn 24 3 12 2 arch/arm/kernel/traps.c:730 (set (mem/i:SI (reg/f:SI 13 sp) [0 S4 A64])
        (reg:SI 2 r2 [ pte ])) 167 {*arm_movsi_insn} (nil))

(insn 12 24 13 2 arch/arm/kernel/traps.c:730 (set (reg:SI 1 r1)
        (reg/v/f:SI 0 r0 [orig:133 file ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 11 2 arch/arm/kernel/traps.c:730 (set (reg:SI 2 r2)
        (reg/v:SI 3 r3 [orig:134 line ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 11 13 23 2 arch/arm/kernel/traps.c:730 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11295400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11295400>)
        (nil)))

(insn 23 11 25 2 arch/arm/kernel/traps.c:730 (set (reg:SI 3 r3 [orig:139+4 ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 25 23 14 2 arch/arm/kernel/traps.c:730 (set (mem/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3 [orig:139+4 ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 14 25 26 2 arch/arm/kernel/traps.c:730 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 14 27 NOTE_INSN_DELETED)

(note 27 26 0 NOTE_INSN_DELETED)


;; Function __bug (__bug)[0:1076]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 14(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 9(l0): point = 8
   Insn 10(l0): point = 10
   Insn 3(l0): point = 12
   Insn 2(l0): point = 14
   Insn 45(l1): point = 17
 a0(r136): [1..2]
 a1(r133): [9..14]
 a2(r134): [11..12]
Compressing live ranges: from 20 to 6 - 30%
Ranges after the compression:
 a0(r136): [0..1]
 a1(r133): [2..5]
 a2(r134): [3..4]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r136,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r133,l0) conflicts: a2(r134,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a2(r134,l0) conflicts: a1(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=2, blocks=4, points=6
    allocnos=3, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 3 2
    all: 0r136 1r133 2r134
    modified regnos: 133 134 136
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 2 regs less
      Pushing a2(r134,l0)
      Pushing a0(r136,l0)
      Pushing a1(r133,l0)
      Popping a1(r133,l0)  -- assign reg 0
      Popping a0(r136,l0)  -- assign reg 3
      Popping a2(r134,l0)  -- assign reg 2
Disposition:
    1:r133 l0     0    2:r134 l0     2    0:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, dead_or_set: 0, 133
insn=3, live_throughout: 13, 133, dead_or_set: 1, 134
insn=10, live_throughout: 13, 133, dead_or_set: 2, 134
insn=9, live_throughout: 2, 13, dead_or_set: 1, 133
insn=8, live_throughout: 1, 2, 13, dead_or_set: 0
insn=11, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=12, live_throughout: 13, dead_or_set: 136
insn=14, live_throughout: 13, dead_or_set: 136
insn=16, live_throughout: 13, dead_or_set: 
insn=45, live_throughout: 13, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 12 (nil))
changing reg in insn 2
changing reg in insn 9
changing reg in insn 3
changing reg in insn 10
changing reg in insn 12
changing reg in insn 14
changing reg in insn 14
Spilling for insn 14.

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 3 r3 [136]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 3 r3 [136]) [0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 10.


try_optimize_cfg iteration 1

Infinite loop in BB 3.
Infinite loop in BB 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


__bug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={3d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 140{128d,12u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 4 9 2 arch/arm/kernel/traps.c:712 (set (reg/v:SI 2 r2 [orig:134 line ] [134])
        (reg:SI 1 r1 [ line ])) 167 {*arm_movsi_insn} (nil))

(insn 9 3 8 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (reg/v/f:SI 0 r0 [orig:133 file ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 8 9 11 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(call_insn 11 8 12 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 14 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 3 r3 [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 14 12 16 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 3 r3 [136]) [0 S4 A32])
        (reg/f:SI 3 r3 [136])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 16 14 15 3 20 "" [1 uses])

(note 15 16 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 45 15 46 3 (set (pc)
        (label_ref 16)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 46 45 47)

(note 47 46 0 NOTE_INSN_DELETED)


;; Function abort (abort)[0:1082]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 13(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 8(l0): point = 6
   Insn 9(l0): point = 8
   Insn 7(l0): point = 10
   Insn 26(l1): point = 13
 a0(r135): [1..2]
Compressing live ranges: from 16 to 2 - 12%
Ranges after the compression:
 a0(r135): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=2, blocks=4, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 3 2
    all: 0r135
    modified regnos: 135
    border:
    Pressure: GENERAL_REGS=4
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
Disposition:
    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, dead_or_set: 0
insn=9, live_throughout: 0, 13, dead_or_set: 2
insn=8, live_throughout: 0, 2, 13, dead_or_set: 1
insn=10, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=11, live_throughout: 13, dead_or_set: 135
insn=13, live_throughout: 13, dead_or_set: 135
insn=15, live_throughout: 13, dead_or_set: 
insn=26, live_throughout: 13, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 11 (nil))
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
Spilling for insn 13.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 3 r3 [135]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 3 r3 [135]) [0 S4 A32])


try_optimize_cfg iteration 1

Infinite loop in BB 3.
Infinite loop in BB 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


abort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={3d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 138{128d,10u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 2 9 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(insn 9 7 8 2 arch/arm/kernel/traps.c:713 (set (reg:SI 2 r2)
        (const_int 752 [0x2f0])) 167 {*arm_movsi_insn} (nil))

(insn 8 9 10 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)
        (nil)))

(call_insn 10 8 11 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 11 10 13 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 3 r3 [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 13 11 15 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 3 r3 [135]) [0 S4 A32])
        (reg/f:SI 3 r3 [135])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 15 13 14 3 26 "" [1 uses])

(note 14 15 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 26 14 27 3 (set (pc)
        (label_ref 15)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 27 26 28)

(note 28 27 0 NOTE_INSN_DELETED)


;; Function __readwrite_bug (__readwrite_bug)[0:1077]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 18(l0): point = 0
   Insn 16(l0): point = 2
   Insn 15(l0): point = 4
   Insn 14(l0): point = 6
   Insn 13(l0): point = 8
   Insn 12(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 2(l0): point = 18
   Insn 31(l1): point = 21
 a0(r137): [1..2]
 a1(r133): [15..18]
Compressing live ranges: from 24 to 4 - 16%
Ranges after the compression:
 a0(r137): [0..1]
 a1(r133): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r137,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r133,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  regions=2, blocks=4, points=4
    allocnos=2, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 3 2
    all: 0r137 1r133
    modified regnos: 133 137
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 1 regs less
      Pushing a0(r137,l0)
      Pushing a1(r133,l0)
      Popping a1(r133,l0)  -- assign reg 1
      Popping a0(r137,l0)  -- assign reg 3
Disposition:
    1:r133 l0     1    0:r137 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 133
insn=7, live_throughout: 13, 133, dead_or_set: 0
insn=8, live_throughout: 0, 13, dead_or_set: 1, 133
insn=9, live_throughout: 13, dead_or_set: 0, 1, 14
insn=12, live_throughout: 13, dead_or_set: 0
insn=13, live_throughout: 0, 13, dead_or_set: 1
insn=14, live_throughout: 0, 1, 13, dead_or_set: 2
insn=15, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=16, live_throughout: 13, dead_or_set: 137
insn=18, live_throughout: 13, dead_or_set: 137
insn=20, live_throughout: 13, dead_or_set: 
insn=31, live_throughout: 13, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 16 (nil))
changing reg in insn 2
changing reg in insn 8
changing reg in insn 16
changing reg in insn 18
changing reg in insn 18
Spilling for insn 18.

Reloads for insn # 18
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 3 r3 [137]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 3 r3 [137]) [0 S4 A32])
deleting insn with uid = 8.


try_optimize_cfg iteration 1

Infinite loop in BB 3.
Infinite loop in BB 3.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


__readwrite_bug

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={4d,2u} r12={3d} r13={1d,5u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 261{247d,14u,0e} in 10{8 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 7 2 arch/arm/kernel/traps.c:722 (set (reg/v/f:SI 1 r1 [orig:133 fn ] [133])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 7 2 9 2 arch/arm/kernel/traps.c:723 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1124ae00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x1124ae00>)
        (nil)))

(call_insn 9 7 12 2 arch/arm/kernel/traps.c:723 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 12 9 13 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/traps.c:713 (set (reg:SI 2 r2)
        (const_int 724 [0x2d4])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 16 15 18 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 3 r3 [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 18 16 20 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 3 r3 [137]) [0 S4 A32])
        (reg/f:SI 3 r3 [137])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 20 18 19 3 31 "" [1 uses])

(note 19 20 31 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 31 19 32 3 (set (pc)
        (label_ref 20)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 32 31 33)

(note 33 32 0 NOTE_INSN_DELETED)


;; Function do_unexp_fiq (do_unexp_fiq)[0:1069]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
Compressing live ranges: from 9 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=2
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, dead_or_set: 0
insn=8, live_throughout: 13, dead_or_set: 0, 14
insn=10, live_throughout: 13, 14, dead_or_set: 0
insn=11, live_throughout: 13, 14, dead_or_set: 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_unexp_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={5d,2u} r1={3d} r2={3d} r3={3d} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 249{242d,7u,0e} in 4{2 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 9 2 NOTE_INSN_DELETED)

(note 9 6 7 2 NOTE_INSN_DELETED)

(insn 7 9 8 2 arch/arm/kernel/traps.c:401 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11236af0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11236af0>)
        (nil)))

(call_insn 8 7 10 2 arch/arm/kernel/traps.c:401 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 8 11 2 arch/arm/kernel/traps.c:402 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1124a5c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1124a5c0>)
        (nil)))

(call_insn/j 11 10 12 2 arch/arm/kernel/traps.c:402 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 12 11 20)

(note 20 12 0 NOTE_INSN_DELETED)


;; Function __bad_xchg (__bad_xchg)[0:1074]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 22(l0): point = 0
   Insn 20(l0): point = 2
   Insn 19(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 13(l0): point = 12
   Insn 9(l0): point = 14
   Insn 12(l0): point = 16
   Insn 10(l0): point = 18
   Insn 11(l0): point = 20
   Insn 3(l0): point = 22
   Insn 2(l0): point = 24
   Insn 36(l1): point = 27
 a0(r140): [1..2]
 a1(r135): [17..22]
 a2(r134): [21..24]
Compressing live ranges: from 30 to 6 - 20%
Ranges after the compression:
 a0(r140): [0..1]
 a1(r135): [2..4]
 a2(r134): [3..5]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r140,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a1(r135,l0) conflicts: a2(r134,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14
;; a2(r134,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14

  regions=2, blocks=4, points=6
    allocnos=3, copies=0, conflicts=2, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 3 2
    all: 0r140 1r135 2r134
    modified regnos: 134 135 140
    border:
    Pressure: GENERAL_REGS=5
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a0(r140,l0)
      Pushing a2(r134,l0)
      Pushing a1(r135,l0)
      Popping a1(r135,l0)  -- assign reg 3
      Popping a2(r134,l0)  -- assign reg 2
      Popping a0(r140,l0)  -- assign reg 3
Disposition:
    2:r134 l0     2    1:r135 l0     3    0:r140 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 134
insn=3, live_throughout: 13, 14, 134, dead_or_set: 1, 135
insn=11, live_throughout: 13, 14, 135, dead_or_set: 2, 134
insn=10, live_throughout: 2, 13, 135, dead_or_set: 1, 14
insn=12, live_throughout: 1, 2, 13, dead_or_set: 3, 135
insn=9, live_throughout: 1, 2, 3, 13, dead_or_set: 0
insn=13, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=16, live_throughout: 13, dead_or_set: 0
insn=17, live_throughout: 0, 13, dead_or_set: 1
insn=18, live_throughout: 0, 1, 13, dead_or_set: 2
insn=19, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=20, live_throughout: 13, dead_or_set: 140
insn=22, live_throughout: 13, dead_or_set: 140
insn=24, live_throughout: 13, dead_or_set: 
insn=36, live_throughout: 13, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 20 (nil))
changing reg in insn 2
changing reg in insn 11
changing reg in insn 3
changing reg in insn 12
changing reg in insn 20
changing reg in insn 22
changing reg in insn 22
Spilling for insn 22.

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 3 r3 [140]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 3 r3 [140]) [0 S4 A32])
deleting insn with uid = 11.
deleting insn with uid = 12.


try_optimize_cfg iteration 1

Infinite loop in BB 3.
Infinite loop in BB 3.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 4 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 3 count 5 (  1.2)


__bad_xchg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,2u} r3={5d,3u} r12={3d} r13={1d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 267{249d,18u,0e} in 12{10 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 34 5 4 2 NOTE_INSN_DELETED)

(note 4 34 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/traps.c:677 (set (reg/v/f:SI 2 r2 [orig:134 ptr ] [134])
        (reg:SI 0 r0 [ ptr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 10 2 arch/arm/kernel/traps.c:677 (set (reg/v:SI 3 r3 [orig:135 size ] [135])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 10 3 9 2 arch/arm/kernel/traps.c:678 (set (reg:SI 1 r1)
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (nil))

(insn 9 10 13 2 arch/arm/kernel/traps.c:678 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11236b40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11236b40>)
        (nil)))

(call_insn 13 9 16 2 arch/arm/kernel/traps.c:678 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 13 17 2 arch/arm/kernel/traps.c:713 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11295300>)
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/traps.c:713 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x1129a800>)
        (nil)))

(insn 18 17 19 2 arch/arm/kernel/traps.c:713 (set (reg:SI 2 r2)
        (const_int 680 [0x2a8])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 20 2 arch/arm/kernel/traps.c:713 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 19 22 2 arch/arm/kernel/traps.c:714 (set (reg/f:SI 3 r3 [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 22 20 24 2 arch/arm/kernel/traps.c:714 (set (mem:SI (reg/f:SI 3 r3 [140]) [0 S4 A32])
        (reg/f:SI 3 r3 [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (dfs_back)
(code_label 24 22 23 3 40 "" [1 uses])

(note 23 24 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 36 23 37 3 (set (pc)
        (label_ref 24)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 3)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 37 36 38)

(note 38 37 0 NOTE_INSN_DELETED)


;; Function unregister_undef_hook (unregister_undef_hook)[0:1066]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 34.
verify found no changes in insn with uid = 34.
deleting insn with uid = 15.
scanning new insn with uid = 35.
verify found no changes in insn with uid = 35.
deleting insn with uid = 17.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 23(l0): point = 0
   Insn 16(l0): point = 2
   Insn 34(l0): point = 4
   Insn 18(l0): point = 6
   Insn 35(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 22(l0): point = 14
   Insn 12(l0): point = 16
   Insn 21(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 2(l0): point = 28
   Insn 7(l0): point = 30
 a0(r136): [3..28]
 a1(r139): [3..4]
 a2(r140): [7..8]
 a3(r133): [11..20]
 a4(r134): [11..16]
 a5(r135): [15..22]
 a6(r138): [19..30]
Compressing live ranges: from 33 to 12 - 36%
Ranges after the compression:
 a0(r136): [0..10]
 a1(r139): [0..1]
 a2(r140): [2..3]
 a3(r133): [4..8]
 a4(r134): [4..6]
 a5(r135): [5..9]
 a6(r138): [7..11]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r136,l0) conflicts: a1(r139,l0) a2(r140,l0) a4(r134,l0) a3(r133,l0) a5(r135,l0) a6(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r139,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r140,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r133,l0) conflicts: a0(r136,l0) a4(r134,l0) a5(r135,l0) a6(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r134,l0) conflicts: a0(r136,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r135,l0) conflicts: a0(r136,l0) a4(r134,l0) a3(r133,l0) a6(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a6(r138,l0) conflicts: a0(r136,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=12
    allocnos=7, copies=0, conflicts=2, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r136 1r139 2r140 3r133 4r134 5r135 6r138
    modified regnos: 133 134 135 136 138 139 140
    border:
    Pressure: GENERAL_REGS=6
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
      Pushing a5(r135,l0)
      Pushing a6(r138,l0)
      Pushing a2(r140,l0)
      Pushing a1(r139,l0)
      Pushing a4(r134,l0)
      Pushing a3(r133,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a3(r133,l0)  -- assign reg 3
      Popping a4(r134,l0)  -- assign reg 2
      Popping a1(r139,l0)  -- assign reg 3
      Popping a2(r140,l0)  -- assign reg 3
      Popping a6(r138,l0)  -- assign reg 5
      Popping a5(r135,l0)  -- assign reg 1
Disposition:
    3:r133 l0     3    4:r134 l0     2    5:r135 l0     1    0:r136 l0     4
    6:r138 l0     5    1:r139 l0     3    2:r140 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 13, dead_or_set: 138
insn=2, live_throughout: 13, 138, dead_or_set: 0, 136
insn=8, live_throughout: 13, 136, 138, dead_or_set: 0
insn=9, live_throughout: 13, 136, 138, dead_or_set: 0, 14
insn=10, live_throughout: 13, 14, 136, 138, dead_or_set: 0, 135
insn=11, live_throughout: 13, 14, 135, 136, 138, dead_or_set: 133
insn=21, live_throughout: 13, 14, 133, 135, 136, dead_or_set: 0, 138
insn=12, live_throughout: 0, 13, 14, 133, 135, 136, dead_or_set: 134
insn=22, live_throughout: 0, 13, 14, 133, 134, 136, dead_or_set: 1, 135
insn=13, live_throughout: 0, 1, 13, 14, 133, 134, 136, dead_or_set: 
insn=14, live_throughout: 0, 1, 13, 14, 136, dead_or_set: 133, 134
insn=35, live_throughout: 0, 1, 13, 14, 136, dead_or_set: 140
insn=18, live_throughout: 0, 1, 13, 14, 136, dead_or_set: 140
insn=34, live_throughout: 0, 1, 13, 14, 136, dead_or_set: 139
insn=16, live_throughout: 0, 1, 13, 14, dead_or_set: 136, 139
insn=23, live_throughout: 13, 14, dead_or_set: 0, 1
init_insns for 138: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 35 (nil))
changing reg in insn 11
changing reg in insn 14
changing reg in insn 13
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 10
changing reg in insn 22
changing reg in insn 2
changing reg in insn 18
changing reg in insn 16
changing reg in insn 12
changing reg in insn 11
changing reg in insn 7
changing reg in insn 21
changing reg in insn 8
changing reg in insn 34
changing reg in insn 16
changing reg in insn 35
changing reg in insn 18
Spilling for insn 13.
Spilling for insn 14.
Spilling for insn 18.
Spilling for insn 16.

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:134 D.18886 ] [134])
                                                        (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:134 D.18886 ] [134])
                                                        (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/f:SI 3 r3 [orig:133 D.18887 ] [133]) [0 <variable>.next+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/f:SI 3 r3 [orig:133 D.18887 ] [133]) [0 <variable>.next+0 S4 A32])

Reloads for insn # 18
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
                                                        (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
                                                        (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136]) [0 <variable>.node.next+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136]) [0 <variable>.node.next+0 S4 A32])
deleting insn with uid = 22.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


unregister_undef_hook

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d,2u} r3={6d,4u} r4={1d,4u} r5={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 271{249d,22u,0e} in 15{13 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(insn 7 6 2 2 arch/arm/kernel/traps.c:320 (set (reg/f:SI 5 r5 [138])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 2 7 8 2 arch/arm/kernel/traps.c:317 (set (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
        (reg:SI 0 r0 [ hook ])) 167 {*arm_movsi_insn} (nil))

(insn 8 2 9 2 arch/arm/kernel/traps.c:320 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/traps.c:320 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b28b80 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/traps.c:320 (set (reg/v:SI 1 r1 [orig:135 flags ] [135])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 21 2 include/linux/list.h:106 (set (reg/f:SI 3 r3 [orig:133 D.18887 ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 11 12 2 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 12 21 13 2 include/linux/list.h:106 (set (reg/f:SI 2 r2 [orig:134 D.18886 ] [134])
        (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136]) [0 <variable>.node.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 include/linux/list.h:88 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:134 D.18886 ] [134])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/f:SI 3 r3 [orig:133 D.18887 ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 35 2 include/linux/list.h:89 (set (mem/s/f/j:SI (reg/f:SI 3 r3 [orig:133 D.18887 ] [133]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 2 r2 [orig:134 D.18886 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 35 14 18 2 include/linux/list.h:108 (set (reg:SI 3 r3 [140])
        (const_int 2097664 [0x200200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2097664 [0x200200])
        (nil)))

(insn 18 35 34 2 include/linux/list.h:108 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
        (reg:SI 3 r3 [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2097664 [0x200200])
        (nil)))

(insn 34 18 16 2 include/linux/list.h:107 (set (reg:SI 3 r3 [139])
        (const_int 1048832 [0x100100])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1048832 [0x100100])
        (nil)))

(insn 16 34 23 2 include/linux/list.h:107 (set (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136]) [0 <variable>.node.next+0 S4 A32])
        (reg:SI 3 r3 [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1048832 [0x100100])
        (nil)))

(call_insn/j 23 16 24 2 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b28f00 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 24 23 36)

(note 36 24 0 NOTE_INSN_DELETED)


;; Function register_undef_hook (register_undef_hook)[0:1065]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 24(l0): point = 0
   Insn 19(l0): point = 2
   Insn 17(l0): point = 4
   Insn 15(l0): point = 6
   Insn 14(l0): point = 8
   Insn 13(l0): point = 10
   Insn 23(l0): point = 12
   Insn 22(l0): point = 14
   Insn 12(l0): point = 16
   Insn 10(l0): point = 18
   Insn 9(l0): point = 20
   Insn 8(l0): point = 22
   Insn 2(l0): point = 24
   Insn 7(l0): point = 26
 a0(r139): [3..16]
 a1(r136): [3..24]
 a2(r133): [7..10]
 a3(r134): [13..18]
 a4(r138): [15..26]
Compressing live ranges: from 29 to 9 - 31%
Ranges after the compression:
 a0(r139): [0..5]
 a1(r136): [0..7]
 a2(r133): [1..2]
 a3(r134): [3..6]
 a4(r138): [4..8]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r139,l0) conflicts: a1(r136,l0) a2(r133,l0) a3(r134,l0) a4(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r136,l0) conflicts: a0(r139,l0) a2(r133,l0) a3(r134,l0) a4(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r133,l0) conflicts: a0(r139,l0) a1(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r134,l0) conflicts: a0(r139,l0) a1(r136,l0) a4(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r138,l0) conflicts: a0(r139,l0) a1(r136,l0) a3(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=9
    allocnos=5, copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r139 1r136 2r133 3r134 4r138
    modified regnos: 133 134 136 138 139
    border:
    Pressure: GENERAL_REGS=6
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
      Pushing a3(r134,l0)
      Pushing a4(r138,l0)
      Pushing a2(r133,l0)
      Pushing a0(r139,l0)
      Pushing a1(r136,l0)
      Popping a1(r136,l0)  -- assign reg 4
      Popping a0(r139,l0)  -- assign reg 3
      Popping a2(r133,l0)  -- assign reg 2
      Popping a4(r138,l0)  -- assign reg 5
      Popping a3(r134,l0)  -- assign reg 1
Disposition:
    2:r133 l0     2    3:r134 l0     1    1:r136 l0     4    4:r138 l0     5
    0:r139 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 13, dead_or_set: 138
insn=2, live_throughout: 13, 138, dead_or_set: 0, 136
insn=8, live_throughout: 13, 136, 138, dead_or_set: 0
insn=9, live_throughout: 13, 136, 138, dead_or_set: 0, 14
insn=10, live_throughout: 13, 14, 136, 138, dead_or_set: 0, 134
insn=12, live_throughout: 13, 14, 134, 136, 138, dead_or_set: 139
insn=22, live_throughout: 13, 14, 134, 136, 139, dead_or_set: 0, 138
insn=23, live_throughout: 0, 13, 14, 136, 139, dead_or_set: 1, 134
insn=13, live_throughout: 0, 1, 13, 14, 136, 139, dead_or_set: 133
insn=14, live_throughout: 0, 1, 13, 14, 133, 136, 139, dead_or_set: 
insn=15, live_throughout: 0, 1, 13, 14, 136, 139, dead_or_set: 133
insn=17, live_throughout: 0, 1, 13, 14, 136, 139, dead_or_set: 
insn=19, live_throughout: 0, 1, 13, 14, dead_or_set: 136, 139
insn=24, live_throughout: 13, 14, dead_or_set: 0, 1
init_insns for 138: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 12 (nil))
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 10
changing reg in insn 23
changing reg in insn 2
changing reg in insn 19
changing reg in insn 17
changing reg in insn 14
changing reg in insn 15
changing reg in insn 7
changing reg in insn 22
changing reg in insn 8
changing reg in insn 12
changing reg in insn 19
changing reg in insn 17
changing reg in insn 13
Spilling for insn 14.
Spilling for insn 15.
Spilling for insn 17.
Spilling for insn 19.

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:133 D.18899 ] [133])
                                                        (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:133 D.18899 ] [133])
                                                        (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136]) [0 <variable>.node.next+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136]) [0 <variable>.node.next+0 S4 A32])

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
                                                        (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
                                                        (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (reg/f:SI 3 r3 [139]) [0 undef_hook.next+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (reg/f:SI 3 r3 [139]) [0 undef_hook.next+0 S4 A32])
deleting insn with uid = 23.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


register_undef_hook

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d,2u} r3={4d,3u} r4={1d,4u} r5={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 268{247d,21u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(insn 7 6 2 2 arch/arm/kernel/traps.c:311 (set (reg/f:SI 5 r5 [138])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 2 7 8 2 arch/arm/kernel/traps.c:308 (set (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
        (reg:SI 0 r0 [ hook ])) 167 {*arm_movsi_insn} (nil))

(insn 8 2 9 2 arch/arm/kernel/traps.c:311 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/traps.c:311 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b28b80 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 10 9 12 2 arch/arm/kernel/traps.c:311 (set (reg/v:SI 1 r1 [orig:134 flags ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 12 10 22 2 include/linux/list.h:62 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 22 12 13 2 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 13 22 14 2 include/linux/list.h:62 (set (reg/f:SI 2 r2 [orig:133 D.18899 ] [133])
        (mem/s/f/j/c:SI (reg/f:SI 3 r3 [139]) [0 undef_hook.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 include/linux/list.h:41 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:133 D.18899 ] [133])
                (const_int 4 [0x4])) [0 <variable>.prev+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:136 hook ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 17 2 include/linux/list.h:42 (set (mem/s/f/j:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136]) [0 <variable>.node.next+0 S4 A32])
        (reg/f:SI 2 r2 [orig:133 D.18899 ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 17 15 19 2 include/linux/list.h:43 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:136 hook ] [136])
                (const_int 4 [0x4])) [0 <variable>.node.prev+0 S4 A32])
        (reg/f:SI 3 r3 [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 19 17 24 2 include/linux/list.h:44 (set (mem/s/f/j/c:SI (reg/f:SI 3 r3 [139]) [0 undef_hook.next+0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:136 hook ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 24 19 25 2 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b28f00 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 25 24 33)

(note 33 25 0 NOTE_INSN_DELETED)


;; Function dump_mem (dump_mem)[0:1057]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 36 (  2.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 37 (  2.8)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a30 (r184,l2) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r184,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r181,l2) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r181,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r171,l2) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r151,l2) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r150,l2) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r148,l2) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r147,l2) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r146,l2) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r145,l2) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r145,l1) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r144,l2) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r143,l2) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r142,l2) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r138,l2) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r176,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r152,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a5(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a12(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a13(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a15(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r181,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r144,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a23(r145,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a24(r146,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a25(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a26(r148,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a27(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r151,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r181,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a30(r184,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r171,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r143,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r184: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS

  a0(r176,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r152,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a5(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a12(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a13(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a15(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r181,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r138,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r144,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a23(r145,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a24(r146,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a25(r147,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a26(r148,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a27(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r151,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r181,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a30(r184,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r171,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r143,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r142,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 109(l0): point = 0
   Insn 139(l0): point = 2
   Insn 138(l0): point = 4
   Insn 132(l0): point = 7
   Insn 29(l0): point = 9
   Insn 24(l0): point = 11
   Insn 35(l0): point = 13
   Insn 22(l0): point = 15
   Insn 30(l0): point = 17
   Insn 17(l0): point = 19
   Insn 40(l0): point = 21
   Insn 28(l0): point = 23
   Insn 26(l0): point = 25
   Insn 25(l0): point = 27
   Insn 21(l0): point = 29
   Insn 27(l0): point = 31
   Insn 10(l0): point = 33
   Insn 8(l0): point = 35
   Insn 7(l0): point = 37
   Insn 141(l0): point = 39
   Insn 9(l0): point = 41
   Insn 140(l0): point = 43
   Insn 104(l1): point = 46
   Insn 103(l1): point = 48
   Insn 99(l1): point = 51
   Insn 98(l1): point = 53
   Insn 97(l1): point = 55
   Insn 95(l1): point = 57
   Insn 131(l1): point = 59
   Insn 96(l1): point = 61
   Insn 134(l1): point = 64
   Insn 125(l1): point = 66
   Insn 44(l1): point = 68
   Insn 42(l1): point = 70
   Insn 39(l1): point = 72
   Insn 43(l1): point = 74
   Insn 123(l1): point = 76
   Insn 122(l1): point = 78
   Insn 36(l1): point = 80
   Insn 88(l2): point = 83
   Insn 87(l2): point = 85
   Insn 142(l2): point = 87
   Insn 86(l2): point = 89
   Insn 74(l2): point = 97
   Insn 73(l2): point = 99
   Insn 72(l2): point = 101
   Insn 69(l2): point = 104
   Insn 136(l2): point = 107
   Insn 61(l2): point = 109
   Insn 120(l2): point = 111
   Insn 58(l2): point = 113
   Insn 55(l2): point = 116
   Insn 54(l2): point = 118
   Insn 60(l2): point = 120
   Insn 67(l2): point = 122
   Insn 119(l2): point = 124
   Insn 53(l2): point = 126
   Insn 50(l2): point = 130
   Insn 49(l2): point = 132
 a0(r176): [1..4]
 a1(r146): [1..19]
 a2(r151): [7..33]
 a3(r181): [7..13]
 a4(r152): [16..43]
 a5(r156): [16..29]
 a6(r147): [7..17]
 a7(r150): [7..41]
 a8(r184): [7..21]
 a9(r148): [7..37]
 a10(r149): [32..35]
 a11(r146): [46..82]
 a12(r147): [46..82]
 a13(r148): [46..82]
 a14(r150): [46..82]
 a15(r151): [46..82]
 a16(r181): [46..82]
 a17(r184): [46..82]
 a18(r145): [64..66]
 a19(r144): [64..68]
 a20(r138): [64..74]
 a21(r138): [83..134]
 a22(r144): [94..134] [83..92]
 a23(r145): [83..134]
 a24(r146): [83..134]
 a25(r147): [83..134]
 a26(r148): [83..134]
 a27(r150): [83..134]
 a28(r151): [92..134] [83..90]
 a29(r181): [83..134]
 a30(r184): [83..134]
 a31(r171): [93..93] [86..91]
 a32(r143): [119..134] [83..87]
 a33(r142): [121..127]
 Rebuilding regno allocno list for 171
 Rebuilding regno allocno list for 145
 Rebuilding regno allocno list for 144
 Rebuilding regno allocno list for 143
 Rebuilding regno allocno list for 142
 Rebuilding regno allocno list for 138
Compressing live ranges: from 135 to 32 - 23%
Ranges after the compression:
 a0(r176): [0..1]
 a1(r146): [15..31] [0..6]
 a2(r151): [25..31] [15..23] [2..10]
 a3(r181): [15..31] [2..3]
 a4(r152): [4..14]
 a5(r156): [4..8]
 a6(r147): [15..31] [2..5]
 a7(r150): [15..31] [2..13]
 a8(r184): [15..31] [2..7]
 a9(r148): [15..31] [2..12]
 a10(r149): [9..11]
 a18(r145): [20..31] [16..17]
 a19(r144): [27..31] [20..25] [16..18]
 a20(r138): [20..31] [16..19]
 a31(r171): [26..26] [21..24]
 a32(r143): [28..31] [20..22]
 a33(r142): [29..30]
+++Allocating 136 bytes for conflict table (uncompressed size 272)
;; a0(r176,l0) conflicts: a1(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r146,l0) conflicts: a0(r176,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a5(r156,l0) a4(r152,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r151,l0) conflicts: a1(r146,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a5(r156,l0) a4(r152,l0) a10(r149,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a3(r181,l0) conflicts: a1(r146,l0) a2(r151,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r152,l0) conflicts: a1(r146,l0) a2(r151,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a5(r156,l0) a10(r149,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a5(r156,l0) conflicts: a1(r146,l0) a2(r151,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a4(r152,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a6(r147,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a5(r156,l0) a4(r152,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a7(r150,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a8(r184,l0) a9(r148,l0) a5(r156,l0) a4(r152,l0) a10(r149,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a8(r184,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a9(r148,l0) a5(r156,l0) a4(r152,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a9(r148,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a5(r156,l0) a4(r152,l0) a10(r149,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a10(r149,l0) conflicts: a2(r151,l0) a7(r150,l0) a9(r148,l0) a4(r152,l0)
;;     total conflict hard regs: 3
;;     conflict hard regs: 3
;; a18(r145,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a19(r144,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a18(r145,l0) a20(r138,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a20(r138,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a18(r145,l0) a19(r144,l0) a32(r143,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a31(r171,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a32(r143,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a31(r171,l0) a33(r142,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a33(r142,l0) conflicts: a1(r146,l0) a2(r151,l0) a3(r181,l0) a6(r147,l0) a7(r150,l0) a8(r184,l0) a9(r148,l0) a18(r145,l0) a19(r144,l0) a20(r138,l0) a32(r143,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1

  regions=3, blocks=13, points=32
    allocnos=34, copies=0, conflicts=1, ranges=31

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 12 11 10 9 8 7 6 5 4 3 2
    all: 0r176 1r146 2r151 3r181 4r152 5r156 6r147 7r150 8r184 9r148 10r149 18r145 19r144 20r138 31r171 32r143 33r142
    modified regnos: 138 142 143 144 145 146 147 148 149 150 151 152 156 171 176 181 184
    border:
    Pressure: GENERAL_REGS=14
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 5 regs less
    Reg 151 of GENERAL_REGS has 5 regs less
    Reg 181 of GENERAL_REGS has 5 regs less
    Reg 152 of GENERAL_REGS has 4 regs less
    Reg 156 of GENERAL_REGS has 4 regs less
    Reg 147 of GENERAL_REGS has 5 regs less
    Reg 150 of GENERAL_REGS has 5 regs less
    Reg 184 of GENERAL_REGS has 5 regs less
    Reg 148 of GENERAL_REGS has 5 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 4 regs less
    Reg 144 of GENERAL_REGS has 4 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
      Pushing a31(r171,l0)
      Pushing a10(r149,l0)
      Pushing a0(r176,l0)
      Pushing a1(r146,l0)(potential spill: pri=1052, cost=20000)
      Pushing a8(r184,l0)(potential spill: pri=1666, cost=30000)
      Pushing a33(r142,l0)
      Pushing a5(r156,l0)
      Pushing a4(r152,l0)
      Pushing a9(r148,l0)(potential spill: pri=2142, cost=30000)
      Pushing a32(r143,l0)
      Pushing a2(r151,l0)(potential spill: pri=3333, cost=40000)
      Pushing a18(r145,l0)
      Pushing a20(r138,l0)
      Pushing a19(r144,l0)
      Pushing a7(r150,l0)
      Pushing a3(r181,l0)
      Pushing a6(r147,l0)
      Popping a6(r147,l0)  -- assign reg 4
      Popping a3(r181,l0)  -- assign reg 5
      Popping a7(r150,l0)  -- assign reg 6
      Popping a19(r144,l0)  -- assign reg 7
      Popping a20(r138,l0)  -- assign reg 8
      Popping a18(r145,l0)  -- assign reg 10
      Popping a2(r151,l0)  -- assign reg 9
      Popping a32(r143,l0)  -- assign reg 3
      Popping a9(r148,l0)  -- assign reg 11
      Popping a4(r152,l0)  -- assign reg 12
      Popping a5(r156,l0)  -- assign reg 14
      Popping a33(r142,l0)  -- assign reg 2
      Popping a8(r184,l0)  -- spill
      Popping a1(r146,l0)  -- spill
      Popping a0(r176,l0)  -- assign reg 3
      Popping a10(r149,l0)  -- assign reg 2
      Popping a31(r171,l0)  -- assign reg 2
Disposition:
   20:r138 l0     8   33:r142 l0     2   32:r143 l0     3   19:r144 l0     7
   18:r145 l0    10    1:r146 l0   mem    6:r147 l0     4    9:r148 l0    11
   10:r149 l0     2    7:r150 l0     6    2:r151 l0     9    4:r152 l0    12
    5:r156 l0    14   31:r171 l0     2    0:r176 l0     3    3:r181 l0     5
    8:r184 l0   mem
New iteration of spill/restore move
+++Costs: overall 46000, reg -4000, mem 50000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=140, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 152
insn=9, live_throughout: 0, 1, 3, 13, 152, dead_or_set: 2, 150
insn=141, live_throughout: 0, 1, 3, 13, 150, dead_or_set: 152
insn=7, live_throughout: 1, 3, 13, 150, 152, dead_or_set: 0, 148
insn=8, live_throughout: 3, 13, 148, 150, 152, dead_or_set: 1, 149
insn=10, live_throughout: 13, 148, 149, 150, 152, dead_or_set: 3, 151
insn=27, live_throughout: 13, 148, 150, 151, 152, dead_or_set: 2, 149
insn=21, live_throughout: 2, 13, 148, 150, 151, 152, dead_or_set: 156
insn=25, live_throughout: 2, 13, 148, 150, 151, 152, 156, dead_or_set: 0
insn=26, live_throughout: 0, 2, 13, 148, 150, 151, 152, 156, dead_or_set: 1
insn=28, live_throughout: 0, 1, 2, 13, 148, 150, 151, 152, 156, dead_or_set: 3
insn=40, live_throughout: 0, 1, 2, 3, 13, 148, 150, 151, 152, 156, dead_or_set: 184
insn=17, live_throughout: 0, 1, 2, 3, 13, 148, 150, 151, 152, 156, 184, dead_or_set: 146
insn=30, live_throughout: 0, 1, 2, 3, 13, 146, 148, 150, 151, 152, 156, 184, dead_or_set: 147
insn=22, live_throughout: 0, 1, 2, 3, 13, 146, 147, 148, 150, 151, 184, dead_or_set: 152, 156
insn=35, live_throughout: 0, 1, 2, 3, 13, 146, 147, 148, 150, 151, 184, dead_or_set: 181
insn=24, live_throughout: 0, 1, 2, 3, 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=29, live_throughout: 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0, 1, 2, 3, 14
insn=132, live_throughout: 13, 14, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=102, live_throughout: 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=36, live_throughout: 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0
insn=122, live_throughout: 0, 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 1
insn=123, live_throughout: 0, 1, 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 2
insn=43, live_throughout: 0, 1, 2, 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 138
insn=39, live_throughout: 13, 138, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0, 1, 2, 14
insn=42, live_throughout: 13, 138, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=44, live_throughout: 13, 138, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 144
insn=125, live_throughout: 13, 138, 144, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 145
insn=134, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=77, live_throughout: 13, 138, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=49, live_throughout: 13, 138, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=50, live_throughout: 13, 138, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=53, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 142, 143
insn=119, live_throughout: 13, 138, 142, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 1
insn=67, live_throughout: 1, 13, 138, 142, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0
insn=60, live_throughout: 0, 1, 13, 138, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 2, 142
insn=54, live_throughout: 0, 1, 2, 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 143
insn=55, live_throughout: 0, 1, 2, 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=58, live_throughout: 2, 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0
insn=120, live_throughout: 0, 2, 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 1
insn=61, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0, 1, 2, 14
insn=136, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=64, live_throughout: 0, 1, 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=69, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0, 1, 14
insn=70, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=72, live_throughout: 13, 138, 144, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 145
insn=73, live_throughout: 13, 138, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 144
insn=74, live_throughout: 13, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 138
insn=75, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=86, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 171
insn=142, live_throughout: 13, 138, 144, 145, 146, 147, 148, 150, 151, 171, 181, 184, dead_or_set: 143
insn=87, live_throughout: 13, 138, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 171
insn=88, live_throughout: 13, 138, 143, 144, 145, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=96, live_throughout: 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 2
insn=131, live_throughout: 2, 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0
insn=95, live_throughout: 0, 2, 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 1
insn=97, live_throughout: 0, 1, 2, 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 3
insn=98, live_throughout: 13, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 0, 1, 2, 3, 14
insn=99, live_throughout: 13, 14, 146, 148, 150, 151, 181, 184, dead_or_set: 147
insn=100, live_throughout: 13, 14, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=103, live_throughout: 13, 14, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=104, live_throughout: 13, 14, 146, 147, 148, 150, 151, 181, 184, dead_or_set: 
insn=138, live_throughout: 13, 14, 146, dead_or_set: 176
insn=139, live_throughout: 13, 14, 146, dead_or_set: 176
insn=109, live_throughout: 13, 14, dead_or_set: 146, 176
init_insns for 156: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 181: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 40 (nil))
      Slot 1 (freq,size): a1r146(2000,4)
      Assigning 146(freq=2000) a new slot 0
changing reg in insn 43
changing reg in insn 74
changing reg in insn 74
changing reg in insn 67
changing reg in insn 58
changing reg in insn 53
changing reg in insn 60
changing reg in insn 142
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 73
changing reg in insn 44
changing reg in insn 53
changing reg in insn 86
changing reg in insn 73
changing reg in insn 49
changing reg in insn 125
changing reg in insn 72
changing reg in insn 86
changing reg in insn 72
changing reg in insn 99
changing reg in insn 30
changing reg in insn 103
changing reg in insn 99
changing reg in insn 44
changing reg in insn 7
changing reg in insn 95
changing reg in insn 26
changing reg in insn 8
changing reg in insn 27
changing reg in insn 9
changing reg in insn 49
changing reg in insn 30
changing reg in insn 28
changing reg in insn 10
changing reg in insn 86
changing reg in insn 103
changing reg in insn 24
changing reg in insn 141
changing reg in insn 140
changing reg in insn 141
changing reg in insn 22
changing reg in insn 17
changing reg in insn 21
changing reg in insn 40
changing reg in insn 22
changing reg in insn 86
changing reg in insn 87
changing reg in insn 139
changing reg in insn 138
changing reg in insn 139
changing reg in insn 109
changing reg in insn 35
changing reg in insn 97
changing reg in insn 43
changing reg in insn 36
Spilling for insn 140.
Using reg 14 for reload 0
Spilling for insn 17.
Using reg 4 for reload 0
Spilling for insn 22.
Spilling for insn 24.
Spilling for insn 42.
Using reg 3 for reload 1
Spilling for insn 138.
Using reg 2 for reload 0
Spilling for insn 109.
Using reg 2 for reload 1
deleting insn with uid = 40.

Reloads for insn # 140
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 4 r4)

Reloads for insn # 17
Reload 0: reload_out (SI) = (reg/v:SI 146 [ fs ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg/v:SI 146 [ fs ])
	reload_reg_rtx: (reg:SI 4 r4)

Reloads for insn # 22
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 12 ip [152])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 12 ip [152])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 42
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 100 [0x64])) [0 str+80 S1 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 100 [0x64])) [0 str+80 S1 A32])
Reload 1: reload_in (QI) = (const_int 0 [0x0])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), can't combine
	reload_in_reg: (subreg:QI (reg:SI 184) 0)
	reload_reg_rtx: (reg:QI 14 lr)

Reloads for insn # 138
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 109
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [176])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [176])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
Reload 1: reload_in (SI) = (reg/v:SI 146 [ fs ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/v:SI 146 [ fs ])
	reload_reg_rtx: (reg:SI 4 r4)
deleting insn with uid = 27.
deleting insn with uid = 60.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 98.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 28 (  2.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 37 (  2.8)


dump_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,6u} r1={11d,6u} r2={12d,7u} r3={12d,7u} r4={5d,7u} r5={1d,3u} r6={1d,3u} r7={2d,4u} r8={2d,3u} r9={1d,3u} r10={2d,2u} r11={1d,2u} r12={8d,3u} r13={1d,24u,1d} r14={8d,3u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={11d,4u} r25={3d} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} 
;;    total ref usage 730{639d,87u,4e} in 61{56 regular + 5 call} insns.
(note 6 0 12 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 12 6 11 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 11 12 15 2 NOTE_INSN_FUNCTION_BEG)

(note 15 11 145 2 NOTE_INSN_DELETED)

(insn 145 15 140 2 arch/arm/kernel/traps.c:98 (set (reg:SI 4 r4)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 140 145 9 2 arch/arm/kernel/traps.c:98 (set (reg:SI 12 ip [152])
        (and:SI (reg:SI 4 r4)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 140 141 2 arch/arm/kernel/traps.c:88 (set (reg/v:SI 6 r6 [orig:150 bottom ] [150])
        (reg:SI 2 r2 [ bottom ])) 167 {*arm_movsi_insn} (nil))

(insn 141 9 7 2 arch/arm/kernel/traps.c:98 (set (reg:SI 12 ip [152])
        (and:SI (reg:SI 12 ip [152])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 141 8 2 arch/arm/kernel/traps.c:88 (set (reg/v/f:SI 11 fp [orig:148 lvl ] [148])
        (reg:SI 0 r0 [ lvl ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/kernel/traps.c:88 (set (reg/v/f:SI 2 r2 [orig:149 str ] [149])
        (reg:SI 1 r1 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 21 2 arch/arm/kernel/traps.c:88 (set (reg/v:SI 9 r9 [orig:151 top ] [151])
        (reg:SI 3 r3 [ top ])) 167 {*arm_movsi_insn} (nil))

(insn 21 10 25 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 14 lr [156])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 25 21 26 2 arch/arm/kernel/traps.c:101 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x112b0e00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x112b0e00>)
        (nil)))

(insn 26 25 28 2 arch/arm/kernel/traps.c:101 (set (reg:SI 1 r1)
        (reg/v/f:SI 11 fp [orig:148 lvl ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 28 26 40 2 arch/arm/kernel/traps.c:101 (set (reg:SI 3 r3)
        (reg/v:SI 6 r6 [orig:150 bottom ] [150])) 167 {*arm_movsi_insn} (nil))

(note 40 28 17 2 NOTE_INSN_DELETED)

(insn 17 40 146 2 arch/arm/kernel/traps.c:98 (set (reg:SI 4 r4)
        (mem/s/j:SI (plus:SI (reg:SI 12 ip [152])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 146 17 30 2 arch/arm/kernel/traps.c:98 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-92 S4 A32])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (nil))

(insn 30 146 22 2 arch/arm/kernel/traps.c:103 (set (reg/v:SI 4 r4 [orig:147 first ] [147])
        (and:SI (reg/v:SI 6 r6 [orig:150 bottom ] [150])
            (const_int -32 [0xffffffffffffffe0]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 30 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 12 ip [152])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 14 lr [156])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 35 22 24 2 arch/arm/kernel/traps.c:107 discrim 3 (set (reg/f:SI 5 r5 [181])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 20 [0x14]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 20 [0x14]))
        (nil)))

(insn 24 35 29 2 arch/arm/kernel/traps.c:101 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 9 r9 [orig:151 top ] [151])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 24 132 2 arch/arm/kernel/traps.c:101 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 132 29 133 2 arch/arm/kernel/traps.c:103 (set (pc)
        (label_ref 100)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%] 

(barrier 133 132 102)

;; Start of basic block ( 11) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 7 [r7] 8 [r8] 10 [sl] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  11 [0.0%] 
(code_label 102 133 33 3 58 "" [1 uses])

(note 33 102 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 33 122 3 arch/arm/kernel/traps.c:107 discrim 3 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [181])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -84 [0xffffffffffffffac]))
        (nil)))

(insn 122 36 123 3 arch/arm/kernel/traps.c:107 discrim 3 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 123 122 43 3 arch/arm/kernel/traps.c:107 discrim 3 (set (reg:SI 2 r2)
        (const_int 81 [0x51])) 167 {*arm_movsi_insn} (nil))

(insn 43 123 39 3 arch/arm/kernel/traps.c:108 (set (reg:SI 8 r8 [orig:138 ivtmp.628 ] [138])
        (reg/f:SI 5 r5 [181])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -84 [0xffffffffffffffac]))
        (nil)))

(call_insn 39 43 147 3 arch/arm/kernel/traps.c:107 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memset") [flags 0x41] <function_decl 0x51154f80 memset>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 147 39 42 3 arch/arm/kernel/traps.c:108 (set (reg:QI 14 lr)
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (nil))

(insn 42 147 44 3 arch/arm/kernel/traps.c:108 (set (mem/s/j:QI (plus:SI (reg/f:SI 13 sp)
                (const_int 100 [0x64])) [0 str+80 S1 A32])
        (reg:QI 14 lr)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 44 42 125 3 arch/arm/kernel/traps.c:108 (set (reg/v:SI 7 r7 [orig:144 p ] [144])
        (reg/v:SI 4 r4 [orig:147 first ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 125 44 134 3 arch/arm/kernel/traps.c:110 (set (reg/v:SI 10 sl [orig:145 i ] [145])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 134 125 135 3 arch/arm/kernel/traps.c:110 (set (pc)
        (label_ref 75)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%] 

(barrier 135 134 77)

;; Start of basic block ( 9) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  9 [91.0%] 
(code_label 77 135 48 4 57 "" [1 uses])

(note 48 77 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 4 arch/arm/kernel/traps.c:111 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:144 p ] [144])
            (reg/v:SI 6 r6 [orig:150 bottom ] [150]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 4 arch/arm/kernel/traps.c:111 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 51 50 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 119 5 arch/arm/kernel/traps.c:113 discrim 4 (parallel [
            (set (reg/v:SI 3 r3 [orig:143 __gu_err ] [143])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg/v:SI 7 r7 [orig:144 p ] [144])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 3 r3 [orig:143 __gu_err ] [143])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7011996))
            (set (reg/v:SI 2 r2 [orig:142 __gu_val ] [142])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg/v:SI 7 r7 [orig:144 p ] [144])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 3 r3 [orig:143 __gu_err ] [143])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7011996))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 119 53 67 5 arch/arm/kernel/traps.c:116 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x112b4d50>)) 167 {*arm_movsi_insn} (nil))

(insn 67 119 54 5 arch/arm/kernel/traps.c:116 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:138 ivtmp.628 ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 54 67 55 5 arch/arm/kernel/traps.c:113 discrim 5 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:143 __gu_err ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 55 54 56 5 arch/arm/kernel/traps.c:113 discrim 5 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%]  (fallthru)
(note 56 55 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 58 56 120 6 arch/arm/kernel/traps.c:114 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:138 ivtmp.628 ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 120 58 61 6 arch/arm/kernel/traps.c:114 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x112b1700>)) 167 {*arm_movsi_insn} (nil))

(call_insn 61 120 136 6 arch/arm/kernel/traps.c:114 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 136 61 137 6 (set (pc)
        (label_ref 70)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 137 136 64)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%] 
(code_label 64 137 65 7 56 "" [1 uses])

(note 65 64 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 69 65 70 7 arch/arm/kernel/traps.c:116 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157700 __builtin_strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 7 [r7] 8 [r8] 10 [sl]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 8 [r8] 10 [sl]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 70 69 71 8 55 "" [2 uses])

(note 71 70 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 8 arch/arm/kernel/traps.c:110 (set (reg/v:SI 10 sl [orig:145 i ] [145])
        (plus:SI (reg/v:SI 10 sl [orig:145 i ] [145])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 8 arch/arm/kernel/traps.c:110 (set (reg/v:SI 7 r7 [orig:144 p ] [144])
        (plus:SI (reg/v:SI 7 r7 [orig:144 p ] [144])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 74 73 75 8 arch/arm/kernel/traps.c:110 (set (reg:SI 8 r8 [orig:138 ivtmp.628 ] [138])
        (plus:SI (reg:SI 8 r8 [orig:138 ivtmp.628 ] [138])
            (const_int 9 [0x9]))) 4 {*arm_addsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 8 3) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  8 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 75 74 76 9 54 "" [1 uses])

(note 76 75 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 78 76 79 9 NOTE_INSN_DELETED)

(note 79 78 81 9 NOTE_INSN_DELETED)

(note 81 79 82 9 NOTE_INSN_DELETED)

(note 82 81 84 9 NOTE_INSN_DELETED)

(note 84 82 85 9 NOTE_INSN_DELETED)

(note 85 84 86 9 NOTE_INSN_DELETED)

(insn 86 85 142 9 arch/arm/kernel/traps.c:110 discrim 1 (parallel [
            (set (reg:SI 2 r2 [171])
                (and:SI (ltu:SI (reg/v:SI 7 r7 [orig:144 p ] [144])
                        (reg/v:SI 9 r9 [orig:151 top ] [151]))
                    (le:SI (reg/v:SI 10 sl [orig:145 i ] [145])
                        (const_int 7 [0x7]))))
            (clobber (reg:CC 24 cc))
        ]) 290 {*and_scc_scc_nodom} (nil))

(insn 142 86 87 9 arch/arm/kernel/traps.c:113 discrim 4 (set (reg/v:SI 3 r3 [orig:143 __gu_err ] [143])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 87 142 88 9 arch/arm/kernel/traps.c:110 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [171])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 9 arch/arm/kernel/traps.c:110 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 9 -> ( 4 10)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 [91.0%] 
;; Succ edge  10 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  9 [9.0%]  (fallthru,loop_exit)
(note 89 88 91 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 91 89 92 10 NOTE_INSN_DELETED)

(note 92 91 96 10 NOTE_INSN_DELETED)

(insn 96 92 131 10 arch/arm/kernel/traps.c:119 (set (reg:SI 2 r2)
        (zero_extend:SI (reg:HI 4 r4 [orig:147 first ] [147]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 131 96 95 10 arch/arm/kernel/traps.c:119 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x112b4f00>)) 167 {*arm_movsi_insn} (nil))

(insn 95 131 97 10 arch/arm/kernel/traps.c:119 (set (reg:SI 1 r1)
        (reg/v/f:SI 11 fp [orig:148 lvl ] [148])) 167 {*arm_movsi_insn} (nil))

(insn 97 95 98 10 arch/arm/kernel/traps.c:119 (set (reg:SI 3 r3)
        (reg/f:SI 5 r5 [181])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -84 [0xffffffffffffffac]))
        (nil)))

(call_insn 98 97 99 10 arch/arm/kernel/traps.c:119 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 99 98 100 10 arch/arm/kernel/traps.c:103 (set (reg/v:SI 4 r4 [orig:147 first ] [147])
        (plus:SI (reg/v:SI 4 r4 [orig:147 first ] [147])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 10 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 100 99 101 11 53 "" [1 uses])

(note 101 100 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 103 101 104 11 arch/arm/kernel/traps.c:103 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:147 first ] [147])
            (reg/v:SI 9 r9 [orig:151 top ] [151]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 11 arch/arm/kernel/traps.c:103 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 11 -> ( 3 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%] 
;; Succ edge  12 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru,loop_exit)
(note 105 104 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 107 105 148 12 NOTE_INSN_DELETED)

(insn 148 107 138 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 138 148 139 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 3 r3 [176])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 139 138 149 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 3 r3 [176])
        (and:SI (reg:SI 3 r3 [176])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 149 139 109 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 4 r4)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-92 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 109 149 143 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [176])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 143 109 144 NOTE_INSN_DELETED)

(note 144 143 0 NOTE_INSN_DELETED)


;; Function dump_backtrace_entry (dump_backtrace_entry)[0:1056]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 36(l0): point = 1
   Insn 34(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 35(l0): point = 9
   Insn 21(l0): point = 12
   Insn 20(l0): point = 14
   Insn 19(l0): point = 16
   Insn 17(l0): point = 19
   Insn 16(l0): point = 21
   Insn 15(l0): point = 23
   Insn 14(l0): point = 25
   Insn 9(l0): point = 27
   Insn 12(l0): point = 29
   Insn 11(l0): point = 31
   Insn 10(l0): point = 33
   Insn 13(l0): point = 35
   Insn 4(l0): point = 37
   Insn 3(l0): point = 39
   Insn 2(l0): point = 41
 a0(r135): [4..37]
 a1(r138): [15..16]
 a2(r133): [15..41]
 a3(r137): [22..23]
 a4(r134): [28..39]
Compressing live ranges: from 44 to 9 - 20%
Ranges after the compression:
 a0(r135): [0..6]
 a1(r138): [1..2]
 a2(r133): [1..8]
 a3(r137): [3..4]
 a4(r134): [5..7]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r135,l0) conflicts: a1(r138,l0) a2(r133,l0) a3(r137,l0) a4(r134,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r138,l0) conflicts: a0(r135,l0) a2(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r133,l0) conflicts: a0(r135,l0) a1(r138,l0) a3(r137,l0) a4(r134,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a3(r137,l0) conflicts: a0(r135,l0) a2(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r134,l0) conflicts: a0(r135,l0) a2(r133,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3

  regions=1, blocks=6, points=9
    allocnos=5, copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r135 1r138 2r133 3r137 4r134
    modified regnos: 133 134 135 137 138
    border:
    Pressure: GENERAL_REGS=7
    Reg 135 of GENERAL_REGS has 5 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 5 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 4 regs less
      Pushing a3(r137,l0)
      Pushing a1(r138,l0)
      Pushing a4(r134,l0)
      Pushing a0(r135,l0)
      Pushing a2(r133,l0)
      Popping a2(r133,l0)  -- assign reg 4
      Popping a0(r135,l0)  -- assign reg 5
      Popping a4(r134,l0)  -- assign reg 12
      Popping a1(r138,l0)  -- assign reg 3
      Popping a3(r137,l0)  -- assign reg 3
Disposition:
    2:r133 l0     4    4:r134 l0    12    0:r135 l0     5    3:r137 l0     3
    1:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, dead_or_set: 0, 133
insn=3, live_throughout: 2, 13, 133, dead_or_set: 1, 134
insn=4, live_throughout: 13, 133, 134, dead_or_set: 2, 135
insn=13, live_throughout: 13, 133, 134, 135, dead_or_set: 3
insn=10, live_throughout: 3, 13, 133, 134, 135, dead_or_set: 0
insn=11, live_throughout: 0, 3, 13, 133, 134, 135, dead_or_set: 1
insn=12, live_throughout: 0, 1, 3, 13, 133, 134, 135, dead_or_set: 2
insn=9, live_throughout: 0, 1, 2, 3, 13, 133, 135, dead_or_set: 134
insn=14, live_throughout: 13, 133, 135, dead_or_set: 0, 1, 2, 3, 14
insn=15, live_throughout: 13, 14, 133, 135, dead_or_set: 137
insn=16, live_throughout: 13, 14, 133, 135, dead_or_set: 137
insn=17, live_throughout: 13, 14, 133, 135, dead_or_set: 
insn=19, live_throughout: 13, 14, 133, 135, dead_or_set: 138
insn=20, live_throughout: 13, 14, 135, dead_or_set: 133, 138
insn=21, live_throughout: 13, 14, 135, dead_or_set: 
insn=26, live_throughout: 13, 14, 135, dead_or_set: 
insn=35, live_throughout: 13, 14, 135, dead_or_set: 3
insn=32, live_throughout: 3, 13, 14, 135, dead_or_set: 0
insn=33, live_throughout: 0, 3, 13, 14, 135, dead_or_set: 1
insn=34, live_throughout: 0, 1, 3, 13, 14, dead_or_set: 2, 135
insn=36, live_throughout: 13, 14, dead_or_set: 0, 1, 2, 3
insn=41, live_throughout: 13, 14, dead_or_set: 
init_insns for 134: (insn_list:REG_DEP_TRUE 9 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 138: (insn_list:REG_DEP_TRUE 19 (nil))
changing reg in insn 2
changing reg in insn 20
changing reg in insn 16
changing reg in insn 12
changing reg in insn 11
changing reg in insn 20
changing reg in insn 16
changing reg in insn 3
changing reg in insn 13
changing reg in insn 9
changing reg in insn 4
changing reg in insn 35
changing reg in insn 34
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 20
Spilling for insn 9.

Reloads for insn # 9
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])


try_optimize_cfg iteration 1

deleting insn with uid = 26.
Deleted label in block 4.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


dump_backtrace_entry

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={7d,4u} r4={1d,4u,2d} r5={1d,2u} r12={4d,2u} r13={1d,8u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 290{255d,32u,3e} in 20{18 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 5 3 2 arch/arm/kernel/traps.c:56 (set (reg/v:SI 4 r4 [orig:133 where ] [133])
        (reg:SI 0 r0 [ where ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/traps.c:56 (set (reg/v:SI 12 ip [orig:134 from ] [134])
        (reg:SI 1 r1 [ from ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (nil)))

(insn 4 3 13 2 arch/arm/kernel/traps.c:56 (set (reg/v:SI 5 r5 [orig:135 frame ] [135])
        (reg:SI 2 r2 [ frame ])) 167 {*arm_movsi_insn} (nil))

(insn 13 4 10 2 arch/arm/kernel/traps.c:58 (set (reg:SI 3 r3)
        (reg/v:SI 12 ip [orig:134 from ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 10 13 11 2 arch/arm/kernel/traps.c:58 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x112bee40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x112bee40>)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/traps.c:58 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:133 where ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 9 2 arch/arm/kernel/traps.c:58 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:133 where ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 9 12 14 2 arch/arm/kernel/traps.c:58 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 12 ip [orig:134 from ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 9 15 2 arch/arm/kernel/traps.c:58 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:43 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("__exception_text_start") [flags 0xc0] <var_decl 0x1119ff00 __exception_text_start>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__exception_text_start") [flags 0xc0] <var_decl 0x1119ff00 __exception_text_start>)
        (nil)))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:43 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:133 where ] [133])
            (reg/f:SI 3 r3 [137]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 4 r4 [orig:133 where ] [133])
            (symbol_ref:SI ("__exception_text_start") [flags 0xc0] <var_decl 0x1119ff00 __exception_text_start>))
        (nil)))

(jump_insn 17 16 18 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:43 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:44 (set (reg/f:SI 3 r3 [138])
        (symbol_ref:SI ("__exception_text_end") [flags 0xc0] <var_decl 0x1119ff60 __exception_text_end>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__exception_text_end") [flags 0xc0] <var_decl 0x1119ff60 __exception_text_end>)
        (nil)))

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:44 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:133 where ] [133])
            (reg/f:SI 3 r3 [138]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 4 r4 [orig:133 where ] [133])
            (symbol_ref:SI ("__exception_text_end") [flags 0xc0] <var_decl 0x1119ff60 __exception_text_end>))
        (nil)))

(jump_insn 21 20 27 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/traps.h:44 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 27 21 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 30 27 31 4 NOTE_INSN_DELETED)

(note 31 30 35 4 NOTE_INSN_DELETED)

(insn 35 31 32 4 arch/arm/kernel/traps.c:64 (set (reg:SI 3 r3)
        (plus:SI (reg/v:SI 5 r5 [orig:135 frame ] [135])
            (const_int 76 [0x4c]))) 4 {*arm_addsi3} (nil))

(insn 32 35 33 4 arch/arm/kernel/traps.c:64 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x112bca60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x112bca60>)
        (nil)))

(insn 33 32 34 4 arch/arm/kernel/traps.c:64 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x112bb570>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x112bb570>)
        (nil)))

(insn 34 33 36 4 arch/arm/kernel/traps.c:64 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 5 r5 [orig:135 frame ] [135])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(call_insn/j 36 34 37 4 arch/arm/kernel/traps.c:64 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_mem") [flags 0x3] <function_decl 0x111aa800 dump_mem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 37 36 41)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  2 [50.0%] 
(code_label 41 37 44 5 65 "" [2 uses])

(note 44 41 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 44 46 NOTE_INSN_DELETED)

(note 46 45 0 NOTE_INSN_DELETED)


;; Function show_stack (show_stack)[0:1061]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 10(l0): point = 0
   Insn 9(l0): point = 2
   Insn 8(l0): point = 4
   Insn 7(l0): point = 6
   Insn 2(l0): point = 8
 a0(r133): [5..8]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r133): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r133,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r133
    modified regnos: 133
    border:
    Pressure: GENERAL_REGS=3
    Reg 133 of GENERAL_REGS has 1 regs less
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 1
Disposition:
    0:r133 l0     1
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 133
insn=7, live_throughout: 13, 133, dead_or_set: 0
insn=8, live_throughout: 0, 13, dead_or_set: 1, 133
insn=9, live_throughout: 13, dead_or_set: 0, 1, 14
insn=10, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 8
deleting insn with uid = 8.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


show_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{126d,7u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 7 2 arch/arm/kernel/traps.c:213 (set (reg/v/f:SI 1 r1 [orig:133 tsk ] [133])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 7 2 9 2 arch/arm/kernel/traps.c:166 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 9 7 10 2 arch/arm/kernel/traps.c:166 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_backtrace") [flags 0x41] <function_decl 0x111aa680 unwind_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 10 9 18 2 arch/arm/kernel/traps.c:215 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 6935662)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 10 19 NOTE_INSN_DELETED)

(note 19 18 0 NOTE_INSN_DELETED)


;; Function dump_stack (dump_stack)[0:1060] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=3
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 0
insn=6, live_throughout: 0, 13, 14, dead_or_set: 1
insn=7, live_throughout: 13, 14, dead_or_set: 0, 1


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


dump_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 132{125d,7u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/traps.c:166 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/traps.c:166 (set (reg:SI 1 r1)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn/j 7 6 8 2 arch/arm/kernel/traps.c:166 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_backtrace") [flags 0x41] <function_decl 0x111aa680 unwind_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 8 7 16)

(note 16 8 0 NOTE_INSN_DELETED)


;; Function __div0 (__div0)[0:1081]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 8(l0): point = 0
   Insn 7(l0): point = 2
   Insn 6(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=2
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, dead_or_set: 0
insn=7, live_throughout: 13, dead_or_set: 0, 14
insn=8, live_throughout: 13, 14, dead_or_set: 


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__div0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,1u} r1={3d} r2={3d} r3={3d} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 247{241d,6u,0e} in 3{1 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(note 5 2 6 2 NOTE_INSN_DELETED)

(insn 6 5 7 2 arch/arm/kernel/traps.c:745 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11260d40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x11260d40>)
        (nil)))

(call_insn 7 6 8 2 arch/arm/kernel/traps.c:745 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn/j 8 7 9 2 arch/arm/kernel/traps.c:746 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x3] <function_decl 0x10aa9400 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 9 8 17)

(note 17 9 0 NOTE_INSN_DELETED)


;; Function die (die)[0:1063]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a54 (r226,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r226,l0) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r225,l1) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r225,l0) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r224,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r224,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r221,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r218,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r216,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r215,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r214,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r212,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r208,l0) best GENERAL_REGS, cover GENERAL_REGS
    a58 (r201,l1) best GENERAL_REGS, cover GENERAL_REGS
    a62 (r199,l1) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r185,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r159,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r155,l1) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r153,l1) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r152,l1) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r149,l1) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a59 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a60 (r145,l1) best GENERAL_REGS, cover GENERAL_REGS
    a61 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r218,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r212,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a8(r208,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a9(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r226,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a12(r193,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a13(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r153,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a21(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a22(r225,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a23(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a24(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r149,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a26(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r183,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a30(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r160,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a33(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a37(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a39(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a40(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a42(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a45(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a46(r149,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a47(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a48(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a49(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a50(r153,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a51(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a52(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a53(r225,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:12000
  a54(r226,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:12000
  a55(r155,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a56(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a57(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a58(r201,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a59(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a60(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r199,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r226: preferred GENERAL_REGS, alternative NO_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS
    r208: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r218,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r212,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a8(r208,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a9(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r226,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a12(r193,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a13(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a16(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r153,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a21(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a22(r225,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a23(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a24(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r149,l0) costs: LO_REGS:0,2000 BASE_REGS:0,2000 HI_REGS:0,2000 GENERAL_REGS:0,2000 MEM:10000
  a26(r185,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r183,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a30(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r160,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:52000
  a33(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a37(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a39(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a40(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a42(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a44(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a45(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a46(r149,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a47(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a48(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a49(r152,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a50(r153,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a51(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a52(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a53(r225,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:12000
  a54(r226,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:12000
  a55(r155,l1) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a56(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a57(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a58(r201,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a59(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a60(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r199,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 250(l0): point = 1
   Insn 249(l0): point = 3
   Insn 247(l0): point = 6
   Insn 246(l0): point = 8
   Insn 245(l0): point = 10
   Insn 241(l0): point = 13
   Insn 240(l0): point = 15
   Insn 237(l0): point = 18
   Insn 236(l0): point = 20
   Insn 235(l0): point = 22
   Insn 234(l0): point = 24
   Insn 230(l0): point = 27
   Insn 229(l0): point = 29
   Insn 226(l0): point = 32
   Insn 225(l0): point = 34
   Insn 224(l0): point = 36
   Insn 223(l0): point = 38
   Insn 222(l0): point = 40
   Insn 282(l0): point = 42
   Insn 281(l0): point = 44
   Insn 218(l0): point = 46
   Insn 217(l0): point = 48
   Insn 216(l0): point = 50
   Insn 213(l0): point = 52
   Insn 212(l0): point = 54
   Insn 211(l0): point = 56
   Insn 210(l0): point = 58
   Insn 207(l0): point = 61
   Insn 284(l0): point = 63
   Insn 283(l0): point = 65
   Insn 203(l0): point = 67
   Insn 201(l0): point = 69
   Insn 202(l0): point = 71
   Insn 200(l0): point = 73
   Insn 278(l0): point = 76
   Insn 176(l0): point = 78
   Insn 175(l0): point = 80
   Insn 174(l0): point = 82
   Insn 272(l0): point = 85
   Insn 264(l0): point = 87
   Insn 116(l0): point = 89
   Insn 117(l0): point = 91
   Insn 111(l0): point = 93
   Insn 127(l0): point = 95
   Insn 118(l0): point = 97
   Insn 262(l0): point = 99
   Insn 115(l0): point = 101
   Insn 261(l0): point = 103
   Insn 286(l0): point = 105
   Insn 94(l0): point = 107
   Insn 285(l0): point = 109
   Insn 95(l0): point = 111
   Insn 93(l0): point = 113
   Insn 263(l0): point = 115
   Insn 92(l0): point = 117
   Insn 91(l0): point = 119
   Insn 90(l0): point = 121
   Insn 87(l0): point = 123
   Insn 86(l0): point = 125
   Insn 89(l0): point = 127
   Insn 120(l0): point = 129
   Insn 88(l0): point = 131
   Insn 119(l0): point = 133
   Insn 84(l0): point = 135
   Insn 79(l0): point = 138
   Insn 78(l0): point = 140
   Insn 77(l0): point = 142
   Insn 76(l0): point = 144
   Insn 75(l0): point = 146
   Insn 288(l0): point = 148
   Insn 287(l0): point = 150
   Insn 70(l0): point = 153
   Insn 69(l0): point = 155
   Insn 67(l0): point = 157
   Insn 66(l0): point = 159
   Insn 65(l0): point = 161
   Insn 64(l0): point = 163
   Insn 62(l0): point = 165
   Insn 63(l0): point = 167
   Insn 61(l0): point = 169
   Insn 60(l0): point = 171
   Insn 57(l0): point = 173
   Insn 56(l0): point = 175
   Insn 55(l0): point = 177
   Insn 53(l0): point = 180
   Insn 52(l0): point = 182
   Insn 51(l0): point = 184
   Insn 50(l0): point = 186
   Insn 49(l0): point = 188
   Insn 44(l0): point = 190
   Insn 43(l0): point = 192
   Insn 42(l0): point = 194
   Insn 47(l0): point = 196
   Insn 45(l0): point = 198
   Insn 48(l0): point = 200
   Insn 46(l0): point = 202
   Insn 41(l0): point = 204
   Insn 40(l0): point = 206
   Insn 39(l0): point = 208
   Insn 34(l0): point = 210
   Insn 32(l0): point = 212
   Insn 31(l0): point = 214
   Insn 36(l0): point = 216
   Insn 38(l0): point = 218
   Insn 37(l0): point = 220
   Insn 29(l0): point = 222
   Insn 30(l0): point = 224
   Insn 28(l0): point = 226
   Insn 27(l0): point = 228
   Insn 24(l0): point = 231
   Insn 23(l0): point = 233
   Insn 20(l0): point = 236
   Insn 19(l0): point = 238
   Insn 18(l0): point = 240
   Insn 291(l0): point = 242
   Insn 17(l0): point = 244
   Insn 16(l0): point = 246
   Insn 290(l0): point = 248
   Insn 15(l0): point = 250
   Insn 12(l0): point = 252
   Insn 5(l0): point = 254
   Insn 4(l0): point = 256
   Insn 3(l0): point = 258
   Insn 194(l1): point = 261
   Insn 193(l1): point = 263
   Insn 268(l1): point = 265
   Insn 276(l1): point = 268
   Insn 165(l1): point = 270
   Insn 168(l1): point = 272
   Insn 167(l1): point = 274
   Insn 166(l1): point = 276
   Insn 162(l1): point = 278
   Insn 160(l1): point = 280
   Insn 158(l1): point = 282
   Insn 161(l1): point = 284
   Insn 159(l1): point = 286
   Insn 145(l1): point = 289
   Insn 144(l1): point = 291
   Insn 141(l1): point = 294
   Insn 293(l1): point = 297
   Insn 274(l1): point = 300
   Insn 133(l1): point = 302
   Insn 134(l1): point = 304
   Insn 132(l1): point = 306
   Insn 130(l1): point = 308
   Insn 129(l1): point = 311
   Insn 128(l1): point = 313
   Insn 292(l1): point = 316
   Insn 125(l1): point = 319
   Insn 124(l1): point = 321
 a0(r221): [9..10]
 a1(r159): [32..186] [18..26] [9..12]
 a2(r219): [21..22]
 a3(r218): [23..24]
 a4(r214): [35..36]
 a5(r216): [37..38]
 a6(r215): [39..40]
 a7(r212): [41..44]
 a8(r208): [62..65]
 a9(r151): [62..93]
 a10(r150): [83..129]
 a11(r226): [85..87]
 a12(r193): [90..109]
 a13(r197): [90..101]
 a14(r135): [85..91]
 a15(r154): [92..107]
 a16(r224): [85..95]
 a17(r134): [85..97]
 a18(r152): [85..99]
 a19(r192): [104..111]
 a20(r153): [85..103]
 a21(r162): [108..256]
 a22(r225): [85..115]
 a23(r138): [118..222]
 a24(r191): [128..135]
 a25(r149): [85..133]
 a26(r185): [141..142]
 a27(r187): [143..144]
 a28(r186): [145..146]
 a29(r183): [147..150]
 a30(r182): [156..157]
 a31(r180): [170..171]
 a32(r160): [172..248]
 a33(r177): [183..184]
 a34(r176): [191..192]
 a35(r175): [195..204]
 a36(r163): [201..254]
 a37(r161): [203..258]
 a38(r137): [209..212]
 a39(r171): [211..224]
 a40(r172): [213..214]
 a41(r167): [232..244]
 a42(r170): [232..233]
 a43(r168): [239..240]
 a44(r134): [261..323]
 a45(r135): [261..323]
 a46(r149): [261..323]
 a47(r150): [261..323]
 a48(r151): [261..323]
 a49(r152): [261..323]
 a50(r153): [261..323]
 a51(r159): [261..323]
 a52(r224): [261..323]
 a53(r225): [261..323]
 a54(r226): [261..323]
 a55(r155): [264..265]
 a56(r148): [300..302] [285..295]
 a57(r147): [300..304] [292..297]
 a58(r201): [303..306]
 a59(r146): [305..316]
 a60(r145): [307..314]
 a61(r144): [307..309]
 a62(r199): [309..311]
Compressing live ranges: from 324 to 100 - 30%
Ranges after the compression:
 a0(r221): [0..1]
 a1(r159): [9..58] [3..8] [0..2]
 a2(r219): [4..5]
 a3(r218): [6..7]
 a4(r214): [10..11]
 a5(r216): [12..13]
 a6(r215): [14..15]
 a7(r212): [16..17]
 a8(r208): [18..19]
 a9(r151): [18..26]
 a10(r150): [20..40]
 a11(r226): [21..22]
 a12(r193): [23..35]
 a13(r197): [23..30]
 a14(r135): [21..24]
 a15(r154): [25..33]
 a16(r224): [21..27]
 a17(r134): [21..28]
 a18(r152): [21..29]
 a19(r192): [32..36]
 a20(r153): [21..31]
 a21(r162): [34..79]
 a22(r225): [21..37]
 a23(r138): [38..70]
 a24(r191): [39..42]
 a25(r149): [21..41]
 a26(r185): [43..44]
 a27(r187): [45..46]
 a28(r186): [47..48]
 a29(r183): [49..50]
 a30(r182): [51..52]
 a31(r180): [53..54]
 a32(r160): [55..77]
 a33(r177): [56..57]
 a34(r176): [59..60]
 a35(r175): [61..64]
 a36(r163): [62..78]
 a37(r161): [63..80]
 a38(r137): [65..67]
 a39(r171): [66..71]
 a40(r172): [68..69]
 a41(r167): [72..76]
 a42(r170): [72..73]
 a43(r168): [74..75]
 a44(r134): [81..99]
 a45(r135): [81..99]
 a46(r149): [81..99]
 a47(r150): [81..99]
 a48(r151): [81..99]
 a49(r152): [81..99]
 a50(r153): [81..99]
 a51(r159): [81..99]
 a52(r224): [81..99]
 a53(r225): [81..99]
 a54(r226): [81..99]
 a55(r155): [82..83]
 a56(r148): [88..89] [84..86]
 a57(r147): [88..91] [85..87]
 a58(r201): [90..93]
 a59(r146): [92..98]
 a60(r145): [94..97]
 a61(r144): [94..95]
 a62(r199): [95..96]
    Creating cap  a63(r155,l0: a55(r155,l1))
    Creating cap  a64(r148,l0: a56(r148,l1))
    Creating cap  a65(r147,l0: a57(r147,l1))
    Creating cap  a66(r201,l0: a58(r201,l1))
    Creating cap  a67(r146,l0: a59(r146,l1))
    Creating cap  a68(r145,l0: a60(r145,l1))
    Creating cap  a69(r144,l0: a61(r144,l1))
    Creating cap  a70(r199,l0: a62(r199,l1))
+++Allocating 808 bytes for conflict table (uncompressed size 1136)
;; a0(r221,l0) conflicts: a1(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r159,l0) conflicts: a0(r221,l0) a2(r219,l0) a3(r218,l0) a4(r214,l0) a5(r216,l0) a6(r215,l0) a7(r212,l0) a8(r208,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a19(r192,l0) a21(r162,l0) a23(r138,l0) a24(r191,l0) a26(r185,l0) a27(r187,l0) a28(r186,l0) a29(r183,l0) a30(r182,l0) a31(r180,l0) a32(r160,l0) a33(r177,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r219,l0) conflicts: a1(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r218,l0) conflicts: a1(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r214,l0) conflicts: a1(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r216,l0) conflicts: a1(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r215,l0) conflicts: a1(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r212,l0) conflicts: a1(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r208,l0) conflicts: a1(r159,l0) a9(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r151,l0) conflicts: a1(r159,l0) a8(r208,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-2 14
;; a10(r150,l0) conflicts: a1(r159,l0) a9(r151,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a19(r192,l0) a21(r162,l0) a23(r138,l0) a24(r191,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a11(r226,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a12(r193,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a15(r154,l0) a19(r192,l0) a21(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r197,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a12(r193,l0) a15(r154,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r135,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a15(r154,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a19(r192,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a16(r224,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a17(r134,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a18(r152,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a19(r192,l0) conflicts: a1(r159,l0) a10(r150,l0) a22(r225,l0) a25(r149,l0) a12(r193,l0) a15(r154,l0) a21(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a20(r153,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a22(r225,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs:
;; a21(r162,l0) conflicts: a1(r159,l0) a10(r150,l0) a22(r225,l0) a25(r149,l0) a12(r193,l0) a19(r192,l0) a23(r138,l0) a24(r191,l0) a26(r185,l0) a27(r187,l0) a28(r186,l0) a29(r183,l0) a30(r182,l0) a31(r180,l0) a32(r160,l0) a33(r177,l0) a34(r176,l0) a35(r175,l0) a36(r163,l0) a37(r161,l0) a38(r137,l0) a39(r171,l0) a40(r172,l0) a42(r170,l0) a41(r167,l0) a43(r168,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a22(r225,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a25(r149,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a19(r192,l0) a21(r162,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0 1 14
;; a23(r138,l0) conflicts: a1(r159,l0) a10(r150,l0) a25(r149,l0) a21(r162,l0) a24(r191,l0) a26(r185,l0) a27(r187,l0) a28(r186,l0) a29(r183,l0) a30(r182,l0) a31(r180,l0) a32(r160,l0) a33(r177,l0) a34(r176,l0) a35(r175,l0) a36(r163,l0) a37(r161,l0) a38(r137,l0) a39(r171,l0) a40(r172,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a24(r191,l0) conflicts: a1(r159,l0) a10(r150,l0) a25(r149,l0) a21(r162,l0) a23(r138,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a25(r149,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a13(r197,l0) a12(r193,l0) a15(r154,l0) a19(r192,l0) a21(r162,l0) a23(r138,l0) a24(r191,l0) a63(r155,l0) a64(r148,l0) a65(r147,l0) a66(r201,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a26(r185,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a27(r187,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r186,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r183,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a30(r182,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a31(r180,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a32(r160,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0) a33(r177,l0) a34(r176,l0) a35(r175,l0) a36(r163,l0) a37(r161,l0) a38(r137,l0) a39(r171,l0) a40(r172,l0) a42(r170,l0) a41(r167,l0) a43(r168,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a33(r177,l0) conflicts: a1(r159,l0) a21(r162,l0) a23(r138,l0) a32(r160,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a34(r176,l0) conflicts: a21(r162,l0) a23(r138,l0) a32(r160,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a35(r175,l0) conflicts: a21(r162,l0) a23(r138,l0) a32(r160,l0) a36(r163,l0) a37(r161,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a36(r163,l0) conflicts: a21(r162,l0) a23(r138,l0) a32(r160,l0) a35(r175,l0) a37(r161,l0) a38(r137,l0) a39(r171,l0) a40(r172,l0) a42(r170,l0) a41(r167,l0) a43(r168,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a37(r161,l0) conflicts: a21(r162,l0) a23(r138,l0) a32(r160,l0) a35(r175,l0) a36(r163,l0) a38(r137,l0) a39(r171,l0) a40(r172,l0) a42(r170,l0) a41(r167,l0) a43(r168,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a38(r137,l0) conflicts: a21(r162,l0) a23(r138,l0) a32(r160,l0) a36(r163,l0) a37(r161,l0) a39(r171,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a39(r171,l0) conflicts: a21(r162,l0) a23(r138,l0) a32(r160,l0) a36(r163,l0) a37(r161,l0) a38(r137,l0) a40(r172,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a40(r172,l0) conflicts: a21(r162,l0) a23(r138,l0) a32(r160,l0) a36(r163,l0) a37(r161,l0) a39(r171,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a41(r167,l0) conflicts: a21(r162,l0) a32(r160,l0) a36(r163,l0) a37(r161,l0) a42(r170,l0) a43(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a42(r170,l0) conflicts: a21(r162,l0) a32(r160,l0) a36(r163,l0) a37(r161,l0) a41(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a43(r168,l0) conflicts: a21(r162,l0) a32(r160,l0) a36(r163,l0) a37(r161,l0) a41(r167,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a44(r134,l1) conflicts: a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a45(r135,l1) conflicts: a44(r134,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a46(r149,l1) conflicts: a44(r134,l1) a45(r135,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a47(r150,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a48(r151,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a49(r152,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a50(r153,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a51(r159,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a52(r224,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a53(r225,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a53(r225,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a54(r226,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a54(r226,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a55(r155,l1) a56(r148,l1) a57(r147,l1) a58(r201,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a55(r155,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a56(r148,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a57(r147,l1)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a57(r147,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a56(r148,l1) a58(r201,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a58(r201,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a57(r147,l1) a59(r146,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a59(r146,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a58(r201,l1) a61(r144,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a60(r145,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a59(r146,l1) a61(r144,l1) a62(r199,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a61(r144,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a59(r146,l1) a60(r145,l1) a62(r199,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a62(r199,l1) conflicts: a44(r134,l1) a45(r135,l1) a46(r149,l1) a47(r150,l1) a48(r151,l1) a49(r152,l1) a50(r153,l1) a51(r159,l1) a52(r224,l1) a53(r225,l1) a54(r226,l1) a59(r146,l1) a61(r144,l1) a60(r145,l1)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a63(r155,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a64(r148,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a65(r147,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a65(r147,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a64(r148,l0) a66(r201,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a66(r201,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a65(r147,l0) a67(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a67(r146,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a66(r201,l0) a69(r144,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a68(r145,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a67(r146,l0) a69(r144,l0) a70(r199,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a69(r144,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a67(r146,l0) a68(r145,l0) a70(r199,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a70(r199,l0) conflicts: a1(r159,l0) a9(r151,l0) a10(r150,l0) a11(r226,l0) a14(r135,l0) a16(r224,l0) a17(r134,l0) a18(r152,l0) a20(r153,l0) a22(r225,l0) a25(r149,l0) a67(r146,l0) a69(r144,l0) a68(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a5(r216)<->a6(r215)@125:shuffle
  cp1:a4(r214)<->a5(r216)@125:shuffle
  cp2:a19(r192)<->a20(r153)@125:shuffle
  cp3:a14(r135)<->a15(r154)@125:shuffle
  cp4:a27(r187)<->a28(r186)@125:shuffle
  cp5:a26(r185)<->a27(r187)@125:shuffle
  cp6:a31(r180)<->a32(r160)@125:shuffle
  cp7:a38(r137)<->a40(r172)@125:shuffle
  cp8:a58(r201)<->a60(r145)@125:shuffle
  cp9:a58(r201)<->a61(r144)@125:shuffle
  cp10:a57(r147)<->a59(r146)@1000:move
  cp11:a56(r148)<->a58(r201)@125:shuffle
  cp12:a66(r201)<->a68(r145)@125:shuffle
  cp13:a66(r201)<->a69(r144)@125:shuffle
  cp14:a65(r147)<->a67(r146)@1000:move
  cp15:a64(r148)<->a66(r201)@125:shuffle
  regions=2, blocks=23, points=100
    allocnos=71, copies=16, conflicts=7, ranges=67

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 22 21 20 19 18 17 16 15 13 7(->14:l1) 6 5 4 3 2
    all: 0r221 1r159 2r219 3r218 4r214 5r216 6r215 7r212 8r208 9r151 10r150 11r226 12r193 13r197 14r135 15r154 16r224 17r134 18r152 19r192 20r153 21r162 22r225 23r138 24r191 25r149 26r185 27r187 28r186 29r183 30r182 31r180 32r160 33r177 34r176 35r175 36r163 37r161 38r137 39r171 40r172 41r167 42r170 43r168 63r155 64r148 65r147 66r201 67r146 68r145 69r144 70r199
    modified regnos: 134 135 137 138 144 145 146 147 148 149 150 151 152 153 154 155 159 160 161 162 163 167 168 170 171 172 175 176 177 180 182 183 185 186 187 191 192 193 197 199 201 208 212 214 215 216 218 219 221 224 225 226
    border:
    Pressure: GENERAL_REGS=16
    Reg 221 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 5 regs less
    Reg 219 of GENERAL_REGS has 1 regs less
    Reg 218 of GENERAL_REGS has 1 regs less
    Reg 214 of GENERAL_REGS has 1 regs less
    Reg 216 of GENERAL_REGS has 1 regs less
    Reg 215 of GENERAL_REGS has 1 regs less
    Reg 212 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 5 regs less
    Reg 150 of GENERAL_REGS has 5 regs less
    Reg 226 of GENERAL_REGS has 5 regs less
    Reg 135 of GENERAL_REGS has 5 regs less
    Reg 224 of GENERAL_REGS has 5 regs less
    Reg 134 of GENERAL_REGS has 5 regs less
    Reg 152 of GENERAL_REGS has 5 regs less
    Reg 153 of GENERAL_REGS has 5 regs less
    Reg 162 of GENERAL_REGS has 5 regs less
    Reg 225 of GENERAL_REGS has 5 regs less
    Reg 138 of GENERAL_REGS has 5 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 5 regs less
    Reg 160 of GENERAL_REGS has 5 regs less
    Reg 176 of GENERAL_REGS has 4 regs less
    Reg 175 of GENERAL_REGS has 4 regs less
    Reg 163 of GENERAL_REGS has 5 regs less
    Reg 161 of GENERAL_REGS has 5 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 171 of GENERAL_REGS has 3 regs less
    Reg 172 of GENERAL_REGS has 3 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
      Pushing a66(r201,l0: a58(r201,l1))
      Pushing a63(r155,l0: a55(r155,l1))
      Pushing a43(r168,l0)
      Pushing a42(r170,l0)
      Pushing a33(r177,l0)
      Pushing a31(r180,l0)
      Pushing a30(r182,l0)
      Pushing a28(r186,l0)
      Pushing a27(r187,l0)
      Pushing a26(r185,l0)
      Pushing a41(r167,l0)
      Pushing a19(r192,l0)
      Pushing a15(r154,l0)
      Pushing a13(r197,l0)
      Pushing a29(r183,l0)
      Pushing a8(r208,l0)
      Pushing a12(r193,l0)
      Pushing a65(r147,l0: a57(r147,l1))
      Pushing a24(r191,l0)
      Pushing a6(r215,l0)
      Pushing a5(r216,l0)
      Pushing a4(r214,l0)
      Pushing a3(r218,l0)
      Pushing a2(r219,l0)
      Pushing a0(r221,l0)
      Pushing a64(r148,l0: a56(r148,l1))
      Pushing a7(r212,l0)
      Pushing a40(r172,l0)
      Pushing a39(r171,l0)
      Pushing a38(r137,l0)
      Pushing a35(r175,l0)
      Pushing a34(r176,l0)
      Pushing a22(r225,l0)(potential spill: pri=952, cost=20000)
      Pushing a69(r144,l0: a61(r144,l1))
      Pushing a68(r145,l0: a60(r145,l1))
      Pushing a70(r199,l0: a62(r199,l1))
      Pushing a67(r146,l0: a59(r146,l1))
      Pushing a9(r151,l0)(potential spill: pri=1333, cost=20000)
      Pushing a11(r226,l0)(potential spill: pri=1428, cost=20000)
      Pushing a16(r224,l0)(potential spill: pri=1538, cost=20000)
      Pushing a18(r152,l0)(potential spill: pri=1666, cost=20000)
      Pushing a1(r159,l0)(potential spill: pri=2142, cost=30000)
      Pushing a36(r163,l0)(potential spill: pri=3000, cost=30000)
      Pushing a37(r161,l0)
      Pushing a32(r160,l0)
      Pushing a23(r138,l0)
      Pushing a21(r162,l0)
      Pushing a17(r134,l0)(potential spill: pri=4000, cost=40000)
      Pushing a20(r153,l0)
      Pushing a25(r149,l0)
      Pushing a10(r150,l0)
      Pushing a14(r135,l0)
      Popping a14(r135,l0)  -- assign reg 4
      Popping a10(r150,l0)  -- assign reg 5
      Popping a25(r149,l0)  -- assign reg 6
      Popping a20(r153,l0)  -- assign reg 7
      Popping a17(r134,l0)  -- assign reg 8
      Popping a21(r162,l0)  -- assign reg 4
      Popping a23(r138,l0)  -- assign reg 7
      Popping a32(r160,l0)  -- assign reg 5
      Popping a37(r161,l0)  -- assign reg 6
      Popping a36(r163,l0)  -- assign reg 8
      Popping a1(r159,l0)  -- assign reg 10
      Popping a18(r152,l0)  -- assign reg 9
      Popping a16(r224,l0)  -- assign reg 11
      Popping a11(r226,l0)  -- assign reg 12
      Popping a9(r151,l0)  -- spill
      Popping a67(r146,l0: a59(r146,l1))  -- assign reg 2
      Popping a70(r199,l0: a62(r199,l1))  -- assign reg 1
      Popping a68(r145,l0: a60(r145,l1))  -- assign reg 3
      Popping a69(r144,l0: a61(r144,l1))  -- assign reg 0
      Popping a22(r225,l0)  -- spill
      Popping a34(r176,l0)  -- assign reg 12
      Popping a35(r175,l0)  -- assign reg 12
      Popping a38(r137,l0)  -- assign reg 3
      Popping a39(r171,l0)  -- assign reg 12
      Popping a40(r172,l0)  -- assign reg 3
      Popping a7(r212,l0)  -- assign reg 3
      Popping a64(r148,l0: a56(r148,l1))  -- assign reg 3
      Popping a0(r221,l0)  -- assign reg 3
      Popping a2(r219,l0)  -- assign reg 3
      Popping a3(r218,l0)  -- assign reg 3
      Popping a4(r214,l0)  -- assign reg 3
      Popping a5(r216,l0)  -- assign reg 3
      Popping a6(r215,l0)  -- assign reg 3
      Popping a24(r191,l0)  -- assign reg 3
      Popping a65(r147,l0: a57(r147,l1))  -- assign reg 2
      Popping a12(r193,l0)  -- assign reg 3
      Popping a8(r208,l0)  -- assign reg 3
      Popping a29(r183,l0)  -- assign reg 3
      Popping a13(r197,l0)  -- assign reg 2
      Popping a15(r154,l0)  -- assign reg 4
      Popping a19(r192,l0)  -- assign reg 7
      Popping a41(r167,l0)  -- assign reg 3
      Popping a26(r185,l0)  -- assign reg 3
      Popping a27(r187,l0)  -- assign reg 3
      Popping a28(r186,l0)  -- assign reg 3
      Popping a30(r182,l0)  -- assign reg 3
      Popping a31(r180,l0)  -- assign reg 5
      Popping a33(r177,l0)  -- assign reg 3
      Popping a42(r170,l0)  -- assign reg 2
      Popping a43(r168,l0)  -- assign reg 2
      Popping a63(r155,l0: a55(r155,l1))  -- assign reg 3
      Popping a66(r201,l0: a58(r201,l1))  -- assign reg 3

  Loop 1 (parent 0, header bb14, depth 1)
    bbs: 14(->15:l0) 12 11(->13:l0) 10 9 8
    all: 44r134 45r135 46r149 47r150 48r151 49r152 50r153 51r159 52r224 53r225 54r226 55r155 56r148 57r147 58r201 59r146 60r145 61r144 62r199
    modified regnos: 134 135 144 145 146 147 148 149 150 155 199 201
    border: 44r134 45r135 46r149 47r150 48r151 49r152 50r153 51r159 52r224 53r225 54r226
    Pressure: GENERAL_REGS=16
    Reg 134 of GENERAL_REGS has 5 regs less
    Reg 135 of GENERAL_REGS has 5 regs less
    Reg 149 of GENERAL_REGS has 5 regs less
    Reg 150 of GENERAL_REGS has 5 regs less
    Reg 151 of GENERAL_REGS has 5 regs less
    Reg 152 of GENERAL_REGS has 5 regs less
    Reg 153 of GENERAL_REGS has 5 regs less
    Reg 159 of GENERAL_REGS has 5 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
      Pushing a61(r144,l1)
      Pushing a60(r145,l1)
      Pushing a58(r201,l1)
      Pushing a55(r155,l1)
      Pushing a62(r199,l1)
      Pushing a57(r147,l1)
      Pushing a59(r146,l1)
      Pushing a56(r148,l1)
      Pushing a48(r151,l1)(potential spill: pri=-2666, cost=-40000)
      Pushing a51(r159,l1)(potential spill: pri=2857, cost=40000)
      Pushing a49(r152,l1)(potential spill: pri=3846, cost=50000)
      Pushing a44(r134,l1)(potential spill: pri=5833, cost=70000)
      Pushing a47(r150,l1)(potential spill: pri=6363, cost=70000)
      Pushing a50(r153,l1)(potential spill: pri=7000, cost=70000)
      Pushing a46(r149,l1)
      Pushing a45(r135,l1)
      Popping a45(r135,l1)  -- assign reg 4
      Popping a46(r149,l1)  -- assign reg 6
      Popping a50(r153,l1)  -- assign reg 7
      Popping a47(r150,l1)  -- assign reg 5
      Popping a44(r134,l1)  -- assign reg 8
      Popping a49(r152,l1)  -- assign reg 9
      Popping a51(r159,l1)  -- assign reg 10
      Popping a48(r151,l1)  -- spill
      Popping a56(r148,l1)  -- assign reg 3
      Popping a59(r146,l1)  -- assign reg 2
      Popping a57(r147,l1)  -- assign reg 2
      Popping a62(r199,l1)  -- assign reg 1
      Popping a55(r155,l1)  -- assign reg 3
      Popping a58(r201,l1)  -- assign reg 3
      Popping a60(r145,l1)  -- assign reg 3
      Popping a61(r144,l1)  -- assign reg 0
Disposition:
   44:r134 l1     8   17:r134 l0     8   45:r135 l1     4   14:r135 l0     4
   38:r137 l0     3   23:r138 l0     7   61:r144 l1     0   60:r145 l1     3
   59:r146 l1     2   57:r147 l1     2   56:r148 l1     3   46:r149 l1     6
   25:r149 l0     6   47:r150 l1     5   10:r150 l0     5   48:r151 l1   mem
    9:r151 l0   mem   49:r152 l1     9   18:r152 l0     9   50:r153 l1     7
   20:r153 l0     7   15:r154 l0     4   55:r155 l1     3   51:r159 l1    10
    1:r159 l0    10   32:r160 l0     5   37:r161 l0     6   21:r162 l0     4
   36:r163 l0     8   41:r167 l0     3   43:r168 l0     2   42:r170 l0     2
   39:r171 l0    12   40:r172 l0     3   35:r175 l0    12   34:r176 l0    12
   33:r177 l0     3   31:r180 l0     5   30:r182 l0     3   29:r183 l0     3
   26:r185 l0     3   28:r186 l0     3   27:r187 l0     3   24:r191 l0     3
   19:r192 l0     7   12:r193 l0     3   13:r197 l0     2   62:r199 l1     1
   58:r201 l1     3    8:r208 l0     3    7:r212 l0     3    4:r214 l0     3
    6:r215 l0     3    5:r216 l0     3    3:r218 l0     3    2:r219 l0     3
    0:r221 l0     3   52:r224 l1    11   16:r224 l0    11   53:r225 l1   mem
   22:r225 l0   mem   54:r226 l1    12   11:r226 l0    12
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb14)
  8 vs parent 8:      Creating newreg=227 from oldreg=134
  4 vs parent 4:      Creating newreg=228 from oldreg=135
  6 vs parent 6:      Creating newreg=229 from oldreg=149
  5 vs parent 5:      Creating newreg=230 from oldreg=150
  9 vs parent 9:      Creating newreg=231 from oldreg=152
  7 vs parent 7:      Creating newreg=232 from oldreg=153
  10 vs parent 10:      Creating newreg=233 from oldreg=159
rescanning insn with uid = 268.
deleting insn with uid = 268.
rescanning insn with uid = 193.
deleting insn with uid = 193.
rescanning insn with uid = 159.
deleting insn with uid = 159.
rescanning insn with uid = 158.
deleting insn with uid = 158.
rescanning insn with uid = 160.
deleting insn with uid = 160.
rescanning insn with uid = 166.
deleting insn with uid = 166.
rescanning insn with uid = 167.
deleting insn with uid = 167.
rescanning insn with uid = 168.
deleting insn with uid = 168.
rescanning insn with uid = 165.
deleting insn with uid = 165.
rescanning insn with uid = 293.
deleting insn with uid = 293.
rescanning insn with uid = 141.
deleting insn with uid = 141.
rescanning insn with uid = 128.
deleting insn with uid = 128.
rescanning insn with uid = 129.
deleting insn with uid = 129.
rescanning insn with uid = 124.
deleting insn with uid = 124.
scanning new insn with uid = 302.
scanning new insn with uid = 303.
    Adding cp16:a17r134-a44r227
    Adding range [101..101] to allocno a17r134
    Adding cp17:a14r135-a45r228
    Adding range [101..103] to allocno a14r135
    Adding cp18:a25r149-a46r229
    Adding range [101..105] to allocno a25r149
    Adding cp19:a10r150-a47r230
    Adding range [101..107] to allocno a10r150
    Adding cp20:a18r152-a49r231
    Adding range [101..109] to allocno a18r152
    Adding cp21:a20r153-a50r232
    Adding range [101..111] to allocno a20r153
    Adding cp22:a1r159-a51r233
    Adding range [101..113] to allocno a1r159
    Adding range [102..114] to allocno a44r227
    Adding range [104..114] to allocno a45r228
    Adding range [106..114] to allocno a46r229
    Adding range [108..114] to allocno a47r230
    Adding range [110..114] to allocno a49r231
    Adding range [112..114] to allocno a50r232
    Adding range [114..114] to allocno a51r233
    Adding range [101..114] to live through  allocno a9r151
    Adding range [101..114] to live through  allocno a16r224
    Adding range [101..114] to live through  allocno a22r225
    Adding range [101..114] to live through  allocno a11r226
    Adding cp23:a10r150-a47r230
    Adding range [116..116] to allocno a47r230
    Adding cp24:a1r159-a51r233
    Adding range [116..118] to allocno a51r233
    Adding range [117..119] to allocno a10r150
    Adding range [119..119] to allocno a1r159
    Adding range [116..119] to live through  allocno a9r151
    Adding cp25:a1r159-a51r233
    Adding range [121..121] to allocno a51r233
    Adding range [122..122] to allocno a1r159
    Adding range [121..122] to live through  allocno a48r151
scanning new insn with uid = 295.
scanning new insn with uid = 296.
scanning new insn with uid = 297.
scanning new insn with uid = 298.
scanning new insn with uid = 299.
scanning new insn with uid = 300.
scanning new insn with uid = 301.
changing bb of uid 305
  unscanned insn
scanning new insn with uid = 304.
    New r227: setting preferred GENERAL_REGS, alternative NO_REGS
    New r228: setting preferred GENERAL_REGS, alternative NO_REGS
    New r229: setting preferred GENERAL_REGS, alternative NO_REGS
    New r230: setting preferred GENERAL_REGS, alternative NO_REGS
    New r231: setting preferred GENERAL_REGS, alternative NO_REGS
    New r232: setting preferred GENERAL_REGS, alternative NO_REGS
    New r233: setting preferred GENERAL_REGS, alternative NO_REGS
Flattening IR
      Moving ranges of a54r226 to a11r226:  [81..99]
      Moving ranges of a53r225 to a22r225:  [81..99]
      Moving ranges of a52r224 to a16r224:  [81..99]
      Moving ranges of a48r151 to a9r151:  [121..122] [81..99]
      Remove cp12:c66r201-c68r145
      Remove cp13:c66r201-c69r144
      Remove cp14:c65r147-c67r146
      Remove cp15:c64r148-c66r201
      Remove a48r151
      Remove a52r224
      Remove a53r225
      Remove a54r226
      Remove a63r155
      Remove a64r148
      Remove a65r147
      Remove a66r201
      Remove a67r146
      Remove a68r145
      Remove a69r144
      Remove a70r199
Compressing live ranges: from 123 to 120 - 97%
Ranges after the compression:
 a0(r221): [0..1]
 a1(r159): [119..119] [117..117] [100..112] [9..58] [3..8] [0..2]
 a2(r219): [4..5]
 a3(r218): [6..7]
 a4(r214): [10..11]
 a5(r216): [12..13]
 a6(r215): [14..15]
 a7(r212): [16..17]
 a8(r208): [18..19]
 a9(r151): [118..119] [114..117] [100..113] [81..99] [18..26]
 a10(r150): [115..117] [100..106] [20..40]
 a11(r226): [100..113] [81..99] [21..22]
 a12(r193): [23..35]
 a13(r197): [23..30]
 a14(r135): [100..102] [21..24]
 a15(r154): [25..33]
 a16(r224): [100..113] [81..99] [21..27]
 a17(r134): [100..100] [21..28]
 a18(r152): [100..108] [21..29]
 a19(r192): [32..36]
 a20(r153): [100..110] [21..31]
 a21(r162): [34..79]
 a22(r225): [100..113] [81..99] [21..37]
 a23(r138): [38..70]
 a24(r191): [39..42]
 a25(r149): [100..104] [21..41]
 a26(r185): [43..44]
 a27(r187): [45..46]
 a28(r186): [47..48]
 a29(r183): [49..50]
 a30(r182): [51..52]
 a31(r180): [53..54]
 a32(r160): [55..77]
 a33(r177): [56..57]
 a34(r176): [59..60]
 a35(r175): [61..64]
 a36(r163): [62..78]
 a37(r161): [63..80]
 a38(r137): [65..67]
 a39(r171): [66..71]
 a40(r172): [68..69]
 a41(r167): [72..76]
 a42(r170): [72..73]
 a43(r168): [74..75]
 a44(r227): [101..113] [81..99]
 a45(r228): [103..113] [81..99]
 a46(r229): [105..113] [81..99]
 a47(r230): [114..114] [107..113] [81..99]
 a49(r231): [109..113] [81..99]
 a50(r232): [111..113] [81..99]
 a51(r233): [118..118] [114..116] [113..113] [81..99]
 a55(r155): [82..83]
 a56(r148): [88..89] [84..86]
 a57(r147): [88..91] [85..87]
 a58(r201): [90..93]
 a59(r146): [92..98]
 a60(r145): [94..97]
 a61(r144): [94..95]
 a62(r199): [95..96]
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 30 count 45 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 30 count 50 (  2.1)
+++Costs: overall 71750, reg 29750, mem 42000, ld 0, st 0, move 20000
+++       move loops 0, new jumps 1
insn=3, live_throughout: 1, 2, 13, dead_or_set: 0, 161
insn=4, live_throughout: 2, 13, 161, dead_or_set: 1, 162
insn=5, live_throughout: 13, 161, 162, dead_or_set: 2, 163
insn=12, live_throughout: 13, 161, 162, 163, dead_or_set: 14
insn=15, live_throughout: 13, 161, 162, 163, dead_or_set: 0
insn=290, live_throughout: 0, 13, 161, 162, 163, dead_or_set: 160
insn=16, live_throughout: 13, 160, 161, 162, 163, dead_or_set: 0, 14
insn=17, live_throughout: 13, 160, 161, 162, 163, dead_or_set: 167
insn=291, live_throughout: 13, 161, 162, 163, 167, dead_or_set: 160
insn=18, live_throughout: 13, 160, 161, 162, 163, 167, dead_or_set: 168
insn=19, live_throughout: 13, 160, 161, 162, 163, 167, dead_or_set: 168
insn=20, live_throughout: 13, 160, 161, 162, 163, 167, dead_or_set: 
insn=23, live_throughout: 13, 160, 161, 162, 163, 167, dead_or_set: 170
insn=24, live_throughout: 13, 160, 161, 162, 163, dead_or_set: 167, 170
insn=25, live_throughout: 13, 160, 161, 162, 163, dead_or_set: 
insn=27, live_throughout: 13, 160, 161, 162, 163, dead_or_set: 0
insn=28, live_throughout: 13, 160, 161, 162, 163, dead_or_set: 0, 14
insn=30, live_throughout: 13, 160, 161, 162, 163, dead_or_set: 171
insn=29, live_throughout: 13, 160, 161, 162, 163, 171, dead_or_set: 138
insn=37, live_throughout: 13, 138, 160, 161, 162, 163, 171, dead_or_set: 1
insn=38, live_throughout: 1, 13, 138, 160, 161, 162, 163, 171, dead_or_set: 2
insn=36, live_throughout: 1, 2, 13, 138, 160, 161, 162, 163, 171, dead_or_set: 0
insn=31, live_throughout: 0, 1, 2, 13, 138, 160, 161, 162, 163, 171, dead_or_set: 172
insn=32, live_throughout: 0, 1, 2, 13, 138, 160, 161, 162, 163, 171, dead_or_set: 137, 172
insn=34, live_throughout: 0, 1, 2, 13, 137, 138, 160, 161, 162, 163, dead_or_set: 171
insn=39, live_throughout: 0, 1, 2, 13, 138, 160, 161, 162, 163, dead_or_set: 3, 137
insn=40, live_throughout: 13, 138, 160, 161, 162, 163, dead_or_set: 0, 1, 2, 3, 14
insn=41, live_throughout: 13, 138, 160, 161, 162, 163, dead_or_set: 175
insn=46, live_throughout: 13, 138, 160, 162, 163, 175, dead_or_set: 1, 161
insn=48, live_throughout: 1, 13, 138, 160, 162, 175, dead_or_set: 3, 163
insn=45, live_throughout: 1, 3, 13, 138, 160, 162, 175, dead_or_set: 0
insn=47, live_throughout: 0, 1, 3, 13, 138, 160, 162, 175, dead_or_set: 2
insn=42, live_throughout: 0, 1, 2, 3, 13, 138, 160, 162, dead_or_set: 175
insn=43, live_throughout: 0, 1, 2, 3, 13, 138, 160, 162, dead_or_set: 176
insn=44, live_throughout: 0, 1, 2, 3, 13, 138, 160, 162, dead_or_set: 176
insn=49, live_throughout: 13, 138, 160, 162, dead_or_set: 0, 1, 2, 3, 14
insn=50, live_throughout: 13, 138, 160, 162, dead_or_set: 0, 159
insn=51, live_throughout: 13, 138, 159, 160, 162, dead_or_set: 177
insn=52, live_throughout: 13, 138, 159, 160, 162, dead_or_set: 177
insn=53, live_throughout: 13, 138, 159, 160, 162, dead_or_set: 
insn=55, live_throughout: 13, 138, 159, 160, 162, dead_or_set: 14
insn=56, live_throughout: 13, 138, 159, 160, 162, dead_or_set: 0
insn=57, live_throughout: 13, 138, 159, 160, 162, dead_or_set: 0, 14
insn=60, live_throughout: 13, 138, 159, 162, dead_or_set: 160, 180
insn=61, live_throughout: 13, 138, 159, 162, dead_or_set: 180
insn=63, live_throughout: 13, 138, 159, 162, dead_or_set: 1
insn=62, live_throughout: 1, 13, 138, 159, 162, dead_or_set: 0
insn=64, live_throughout: 0, 1, 13, 138, 159, 162, dead_or_set: 2
insn=65, live_throughout: 0, 1, 2, 13, 138, 159, 162, dead_or_set: 3
insn=66, live_throughout: 13, 138, 159, 162, dead_or_set: 0, 1, 2, 3, 14
insn=67, live_throughout: 13, 138, 159, 162, dead_or_set: 182
insn=69, live_throughout: 13, 138, 159, 162, dead_or_set: 182
insn=70, live_throughout: 13, 138, 159, 162, dead_or_set: 
insn=287, live_throughout: 13, 138, 159, 162, dead_or_set: 183
insn=288, live_throughout: 13, 138, 159, 162, dead_or_set: 183
insn=75, live_throughout: 13, 138, 159, 162, dead_or_set: 183, 186
insn=76, live_throughout: 13, 138, 159, 162, dead_or_set: 186, 187
insn=77, live_throughout: 13, 138, 159, 162, dead_or_set: 185, 187
insn=78, live_throughout: 13, 138, 159, 162, dead_or_set: 185
insn=79, live_throughout: 13, 138, 159, 162, dead_or_set: 
insn=80, live_throughout: 13, 138, 159, 162, dead_or_set: 
insn=84, live_throughout: 13, 138, 159, 162, dead_or_set: 191
insn=119, live_throughout: 13, 138, 159, 162, 191, dead_or_set: 149
insn=88, live_throughout: 13, 138, 149, 159, 162, 191, dead_or_set: 2
insn=120, live_throughout: 2, 13, 138, 149, 159, 162, 191, dead_or_set: 150
insn=89, live_throughout: 2, 13, 138, 149, 150, 159, 162, dead_or_set: 3, 191
insn=86, live_throughout: 2, 3, 13, 138, 149, 150, 159, 162, dead_or_set: 0
insn=87, live_throughout: 0, 2, 3, 13, 138, 149, 150, 159, 162, dead_or_set: 1
insn=90, live_throughout: 13, 138, 149, 150, 159, 162, dead_or_set: 0, 1, 2, 3, 14
insn=91, live_throughout: 13, 138, 149, 150, 159, 162, dead_or_set: 0
insn=92, live_throughout: 0, 13, 149, 150, 159, 162, dead_or_set: 1, 138
insn=263, live_throughout: 0, 1, 13, 149, 150, 159, 162, dead_or_set: 225
insn=93, live_throughout: 13, 149, 150, 159, 162, 225, dead_or_set: 0, 1, 14
insn=95, live_throughout: 13, 149, 150, 159, 162, 225, dead_or_set: 192
insn=285, live_throughout: 13, 149, 150, 159, 162, 192, 225, dead_or_set: 193
insn=94, live_throughout: 13, 149, 150, 159, 192, 193, 225, dead_or_set: 154, 162
insn=286, live_throughout: 13, 149, 150, 154, 159, 192, 225, dead_or_set: 193
insn=261, live_throughout: 13, 149, 150, 154, 159, 193, 225, dead_or_set: 153, 192
insn=115, live_throughout: 13, 24, 149, 150, 153, 154, 159, 193, 225, dead_or_set: 197
insn=262, live_throughout: 13, 149, 150, 153, 154, 159, 193, 197, 225, dead_or_set: 152
insn=118, live_throughout: 13, 149, 150, 152, 153, 154, 159, 193, 197, 225, dead_or_set: 134
insn=127, live_throughout: 13, 134, 149, 150, 152, 153, 154, 159, 193, 197, 225, dead_or_set: 224
insn=111, live_throughout: 13, 134, 149, 150, 152, 153, 154, 159, 193, 197, 224, 225, dead_or_set: 151
insn=117, live_throughout: 13, 134, 149, 150, 151, 152, 153, 159, 193, 197, 224, 225, dead_or_set: 135, 154
insn=116, live_throughout: 13, 134, 135, 149, 150, 151, 152, 153, 159, 224, 225, dead_or_set: 193, 197
insn=264, live_throughout: 13, 134, 135, 149, 150, 151, 152, 153, 159, 224, 225, dead_or_set: 226
insn=295, live_throughout: 13, 135, 149, 150, 151, 152, 153, 159, 224, 225, 226, dead_or_set: 134, 227
insn=296, live_throughout: 13, 149, 150, 151, 152, 153, 159, 224, 225, 226, 227, dead_or_set: 135, 228
insn=297, live_throughout: 13, 150, 151, 152, 153, 159, 224, 225, 226, 227, 228, dead_or_set: 149, 229
insn=298, live_throughout: 13, 151, 152, 153, 159, 224, 225, 226, 227, 228, 229, dead_or_set: 150, 230
insn=299, live_throughout: 13, 151, 153, 159, 224, 225, 226, 227, 228, 229, 230, dead_or_set: 152, 231
insn=300, live_throughout: 13, 151, 159, 224, 225, 226, 227, 228, 229, 230, 231, dead_or_set: 153, 232
insn=301, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, dead_or_set: 159, 233
insn=272, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=192, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=124, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=125, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=292, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 146
insn=128, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 145, 146
insn=129, live_throughout: 13, 145, 146, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 199
insn=130, live_throughout: 13, 145, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 144, 146, 199
insn=132, live_throughout: 13, 146, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 144, 145, 201
insn=134, live_throughout: 13, 151, 201, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 146, 147
insn=133, live_throughout: 13, 147, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 148, 201
insn=274, live_throughout: 13, 147, 148, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=137, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=293, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 147
insn=141, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 147, 148
insn=142, live_throughout: 13, 147, 148, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=144, live_throughout: 13, 148, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 147
insn=145, live_throughout: 13, 148, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=159, live_throughout: 13, 148, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 1
insn=161, live_throughout: 1, 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 3, 148
insn=158, live_throughout: 1, 3, 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 0
insn=160, live_throughout: 0, 1, 3, 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 2
insn=162, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 0, 1, 2, 3, 14
insn=166, live_throughout: 0, 13, 151, 224, 225, 226, 227, 228, 230, 231, 232, 233, dead_or_set: 229
insn=167, live_throughout: 0, 13, 151, 224, 225, 226, 227, 229, 230, 231, 232, 233, dead_or_set: 228
insn=168, live_throughout: 0, 13, 151, 224, 225, 226, 228, 229, 230, 231, 232, 233, dead_or_set: 227
insn=165, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 231, 232, 233, dead_or_set: 0, 230
insn=276, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=171, live_throughout: 13, 151, 230, 233, dead_or_set: 
insn=302, live_throughout: 13, 151, 233, dead_or_set: 150, 230
insn=303, live_throughout: 13, 150, 151, dead_or_set: 159, 233
insn=174, live_throughout: 13, 151, 159, dead_or_set: 0, 150
insn=175, live_throughout: 0, 13, 151, 159, dead_or_set: 1
insn=176, live_throughout: 13, 151, 159, dead_or_set: 0, 1, 14
insn=278, live_throughout: 13, 151, 159, dead_or_set: 
insn=179, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=268, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 155
insn=193, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 155
insn=194, live_throughout: 13, 151, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, dead_or_set: 
insn=304, live_throughout: 13, 151, dead_or_set: 159, 233
insn=195, live_throughout: 13, 151, 159, dead_or_set: 
insn=200, live_throughout: 13, 151, 159, dead_or_set: 0
insn=202, live_throughout: 0, 13, 151, 159, dead_or_set: 2
insn=201, live_throughout: 0, 2, 13, 151, 159, dead_or_set: 1
insn=203, live_throughout: 13, 151, 159, dead_or_set: 0, 1, 2, 14
insn=283, live_throughout: 13, 151, 159, dead_or_set: 208
insn=284, live_throughout: 13, 151, 159, dead_or_set: 208
insn=207, live_throughout: 13, 159, dead_or_set: 151, 208
insn=208, live_throughout: 13, 159, dead_or_set: 
insn=210, live_throughout: 13, 159, dead_or_set: 0
insn=211, live_throughout: 13, 159, dead_or_set: 0, 14
insn=212, live_throughout: 13, 159, dead_or_set: 0
insn=213, live_throughout: 13, 159, dead_or_set: 0, 14
insn=216, live_throughout: 13, 159, dead_or_set: 0
insn=217, live_throughout: 13, 159, dead_or_set: 0, 14
insn=218, live_throughout: 13, 159, dead_or_set: 14
insn=281, live_throughout: 13, 14, 159, dead_or_set: 212
insn=282, live_throughout: 13, 14, 159, dead_or_set: 212
insn=222, live_throughout: 13, 14, 159, dead_or_set: 212, 215
insn=223, live_throughout: 13, 14, 159, dead_or_set: 215, 216
insn=224, live_throughout: 13, 14, 159, dead_or_set: 214, 216
insn=225, live_throughout: 13, 14, 159, dead_or_set: 214
insn=226, live_throughout: 13, 14, 159, dead_or_set: 
insn=229, live_throughout: 13, dead_or_set: 0
insn=230, live_throughout: 13, dead_or_set: 0, 14
insn=232, live_throughout: 13, 14, 159, dead_or_set: 
insn=234, live_throughout: 13, 14, 159, dead_or_set: 218
insn=235, live_throughout: 13, 14, 159, dead_or_set: 218, 219
insn=236, live_throughout: 13, 14, 159, dead_or_set: 219
insn=237, live_throughout: 13, 14, 159, dead_or_set: 
insn=240, live_throughout: 13, dead_or_set: 0
insn=241, live_throughout: 13, dead_or_set: 0, 14
insn=243, live_throughout: 13, 14, 159, dead_or_set: 
insn=245, live_throughout: 13, 14, 159, dead_or_set: 221
insn=246, live_throughout: 13, 14, dead_or_set: 159, 221
insn=247, live_throughout: 13, 14, dead_or_set: 
insn=249, live_throughout: 13, dead_or_set: 0
insn=250, live_throughout: 13, dead_or_set: 0, 14
insn=257, live_throughout: 13, 14, dead_or_set: 
init_insns for 167: (insn_list:REG_DEP_TRUE 17 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 23 (nil))
init_insns for 171: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 175: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 177: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 180: (insn_list:REG_DEP_TRUE 61 (nil))
init_insns for 182: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 84 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 115 (nil))
init_insns for 218: (insn_list:REG_DEP_TRUE 234 (nil))
init_insns for 221: (insn_list:REG_DEP_TRUE 245 (nil))
init_insns for 224: (insn_list:REG_DEP_TRUE 127 (nil))
init_insns for 225: (insn_list:REG_DEP_TRUE 263 (nil))
init_insns for 226: (insn_list:REG_DEP_TRUE 264 (nil))
      Slot 1 (freq,size): a9r151(2000,4)
      Assigning 151(freq=2000) a new slot 0
changing reg in insn 118
changing reg in insn 295
changing reg in insn 117
changing reg in insn 296
changing reg in insn 32
changing reg in insn 34
changing reg in insn 39
changing reg in insn 29
changing reg in insn 64
changing reg in insn 92
changing reg in insn 84
changing reg in insn 65
changing reg in insn 41
changing reg in insn 84
changing reg in insn 41
changing reg in insn 130
changing reg in insn 132
changing reg in insn 128
changing reg in insn 132
changing reg in insn 128
changing reg in insn 292
changing reg in insn 130
changing reg in insn 128
changing reg in insn 134
changing reg in insn 130
changing reg in insn 141
changing reg in insn 293
changing reg in insn 134
changing reg in insn 141
changing reg in insn 144
changing reg in insn 141
changing reg in insn 133
changing reg in insn 161
changing reg in insn 119
changing reg in insn 297
changing reg in insn 302
changing reg in insn 120
changing reg in insn 298
changing reg in insn 174
changing reg in insn 262
changing reg in insn 299
changing reg in insn 261
changing reg in insn 300
changing reg in insn 94
changing reg in insn 118
changing reg in insn 117
changing reg in insn 268
changing reg in insn 193
changing reg in insn 304
changing reg in insn 303
changing reg in insn 50
changing reg in insn 301
changing reg in insn 246
changing reg in insn 52
changing reg in insn 246
changing reg in insn 52
changing reg in insn 291
changing reg in insn 290
changing reg in insn 291
changing reg in insn 60
changing reg in insn 29
changing reg in insn 3
changing reg in insn 46
changing reg in insn 37
changing reg in insn 4
changing reg in insn 95
changing reg in insn 94
changing reg in insn 91
changing reg in insn 88
changing reg in insn 67
changing reg in insn 56
changing reg in insn 47
changing reg in insn 67
changing reg in insn 5
changing reg in insn 48
changing reg in insn 38
changing reg in insn 17
changing reg in insn 24
changing reg in insn 18
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
changing reg in insn 30
changing reg in insn 34
changing reg in insn 31
changing reg in insn 31
changing reg in insn 31
changing reg in insn 32
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 51
changing reg in insn 52
changing reg in insn 60
changing reg in insn 61
changing reg in insn 67
changing reg in insn 69
changing reg in insn 288
changing reg in insn 287
changing reg in insn 288
changing reg in insn 75
changing reg in insn 77
changing reg in insn 78
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 76
changing reg in insn 77
changing reg in insn 84
changing reg in insn 89
changing reg in insn 95
changing reg in insn 261
changing reg in insn 261
changing reg in insn 286
changing reg in insn 285
changing reg in insn 286
changing reg in insn 116
changing reg in insn 111
changing reg in insn 115
changing reg in insn 127
changing reg in insn 116
changing reg in insn 129
changing reg in insn 130
changing reg in insn 132
changing reg in insn 284
changing reg in insn 283
changing reg in insn 284
changing reg in insn 207
changing reg in insn 282
changing reg in insn 281
changing reg in insn 282
changing reg in insn 222
changing reg in insn 224
changing reg in insn 225
changing reg in insn 222
changing reg in insn 223
changing reg in insn 224
changing reg in insn 223
changing reg in insn 224
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 236
changing reg in insn 245
changing reg in insn 246
changing reg in insn 127
changing reg in insn 292
changing reg in insn 264
changing reg in insn 159
changing reg in insn 295
changing reg in insn 168
changing reg in insn 141
changing reg in insn 168
changing reg in insn 296
changing reg in insn 167
changing reg in insn 129
changing reg in insn 128
changing reg in insn 167
changing reg in insn 297
changing reg in insn 166
changing reg in insn 166
changing reg in insn 159
changing reg in insn 193
changing reg in insn 298
changing reg in insn 165
changing reg in insn 302
changing reg in insn 165
changing reg in insn 158
changing reg in insn 299
changing reg in insn 160
changing reg in insn 300
changing reg in insn 124
changing reg in insn 293
changing reg in insn 268
changing reg in insn 301
changing reg in insn 304
changing reg in insn 303
12 uses a new slot
12 uses a slot from prev iteration
Spilling for insn 290.
Using reg 3 for reload 0
Spilling for insn 24.
Spilling for insn 34.
Spilling for insn 42.
Spilling for insn 44.
Spilling for insn 61.
Spilling for insn 287.
Using reg 2 for reload 0
Spilling for insn 285.
Using reg 2 for reload 0
Spilling for insn 111.
Using reg 1 for reload 0
Spilling for insn 116.
Spilling for insn 159.
Spilling for insn 307.
Spilling for insn 283.
Using reg 2 for reload 0
Spilling for insn 207.
Using reg 2 for reload 1
Spilling for insn 281.
Using reg 2 for reload 0
deleting insn with uid = 263.

Reloads for insn # 290
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/f:SI 3 r3 [167]) [0 console_printk+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/f:SI 3 r3 [167]) [0 console_printk+0 S4 A32])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 12 ip [171])
                                                        (const_int 20 [0x14])) [0 die_counter+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 12 ip [171])
                                                        (const_int 20 [0x14])) [0 die_counter+0 S4 A32])

Reloads for insn # 42
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 44
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 61
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 287
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 285
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 111
Reload 0: reload_out (SI) = (reg/v:SI 151 [ fs ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg/v:SI 151 [ fs ])
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 116
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [193])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [193])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])

Reloads for insn # 159
Reload 0: reload_in (SI) = (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x112dc0f0>)
	reload_out (SI) = (reg:SI 1 r1)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0), can't combine
	reload_in_reg: (reg/f:SI 225)
	reload_out_reg: (reg:SI 1 r1)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 307
Reload 0: reload_out (SI) = (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 283
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 207
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 3 r3 [208])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 3 r3 [208])
                                                        (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
Reload 1: reload_in (SI) = (reg/v:SI 151 [ fs ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/v:SI 151 [ fs ])
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 281
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)
deleting insn with uid = 39.
deleting insn with uid = 295.
deleting insn with uid = 296.
deleting insn with uid = 297.
deleting insn with uid = 298.
deleting insn with uid = 299.
deleting insn with uid = 300.
deleting insn with uid = 301.
deleting insn with uid = 134.
deleting insn with uid = 161.
deleting insn with uid = 302.
deleting insn with uid = 303.
deleting insn with uid = 304.


try_optimize_cfg iteration 1

Forwarding edge 14->15 to 16 failed.
Deleting fallthru block 15.
deleting insn with uid = 305.
deleting block 15


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 55.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 90.
verify found no changes in insn with uid = 93.
verify found no changes in insn with uid = 162.
verify found no changes in insn with uid = 176.
verify found no changes in insn with uid = 203.
verify found no changes in insn with uid = 211.
verify found no changes in insn with uid = 213.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 218.
verify found no changes in insn with uid = 230.
verify found no changes in insn with uid = 241.
verify found no changes in insn with uid = 250.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 29 count 43 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 29 count 48 (  2.1)


die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={39d,21u} r1={35d,15u} r2={38d,18u} r3={52d,33u,3d} r4={4d,12u,1d} r5={5d,7u} r6={3d,5u} r7={3d,10u,2d} r8={3d,4u} r9={1d,1u} r10={1d,2u,2d} r11={1d,1u} r12={26d,6u,1d} r13={1d,56u,2d} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={36d,11u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} 
;;    total ref usage 2683{2469d,203u,11e} in 156{136 regular + 20 call} insns.
(note 2 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 2 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 3 2 NOTE_INSN_DELETED)

(insn 3 10 4 2 arch/arm/kernel/traps.c:264 (set (reg/v/f:SI 6 r6 [orig:161 str ] [161])
        (reg:SI 0 r0 [ str ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/traps.c:264 (set (reg/v/f:SI 4 r4 [orig:162 regs ] [162])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 12 2 arch/arm/kernel/traps.c:264 (set (reg/v:SI 8 r8 [orig:163 err ] [163])
        (reg:SI 2 r2 [ err ])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 5 15 2 arch/arm/kernel/traps.c:268 (parallel [
            (call (mem:SI (symbol_ref:SI ("oops_enter") [flags 0x41] <function_decl 0x10aa9d80 oops_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 15 12 309 2 include/linux/spinlock.h:310 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(insn 309 15 290 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 290 309 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 5 r5 [orig:160 thread ] [160])
        (and:SI (reg:SI 1 r1)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(call_insn 16 290 17 2 include/linux/spinlock.h:310 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irq") [flags 0x41] <function_decl 0x10b28b00 _raw_spin_lock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 291 2 include/linux/printk.h:41 (set (reg/f:SI 3 r3 [167])
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>)
        (nil)))

(insn 291 17 18 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/v/f:SI 5 r5 [orig:160 thread ] [160])
        (and:SI (reg/v/f:SI 5 r5 [orig:160 thread ] [160])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 291 19 2 include/linux/printk.h:41 (set (reg:SI 2 r2 [orig:168 console_printk ] [168])
        (mem/s/j:SI (reg/f:SI 3 r3 [167]) [0 console_printk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/f:SI 3 r3 [167]) [0 console_printk+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>) [0 console_printk+0 S4 A32])
            (nil))))

(insn 19 18 20 2 include/linux/printk.h:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:168 console_printk ] [168])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 2 include/linux/printk.h:41 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 21 20 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 21 24 3 include/linux/printk.h:42 (set (reg:SI 2 r2 [170])
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))

(insn 24 23 25 3 include/linux/printk.h:42 (set (mem/s/j:SI (reg/f:SI 3 r3 [167]) [0 console_printk+0 S4 A32])
        (reg:SI 2 r2 [170])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 15 [0xf])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 10 [sl] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 25 24 26 4 77 "" [1 uses])

(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 4 arch/arm/kernel/traps.c:272 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 30 4 arch/arm/kernel/traps.c:272 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10ad6080 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 28 29 4 arch/arm/kernel/traps.c:235 (set (reg/f:SI 12 ip [171])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 29 30 37 4 arch/arm/kernel/traps.c:231 (set (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:160 thread ] [160])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 29 38 4 arch/arm/kernel/traps.c:235 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:161 str ] [161])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 36 4 arch/arm/kernel/traps.c:235 (set (reg:SI 2 r2)
        (reg/v:SI 8 r8 [orig:163 err ] [163])) 167 {*arm_movsi_insn} (nil))

(insn 36 38 31 4 arch/arm/kernel/traps.c:235 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11236c80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x11236c80>)
        (nil)))

(insn 31 36 32 4 arch/arm/kernel/traps.c:235 (set (reg:SI 3 r3 [orig:172 die_counter ] [172])
        (mem/c/i:SI (plus:SI (reg/f:SI 12 ip [171])
                (const_int 20 [0x14])) [0 die_counter+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 12 ip [171])
                (const_int 20 [0x14])) [0 die_counter+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 20 [0x14]))) [0 die_counter+0 S4 A32])
            (nil))))

(insn 32 31 34 4 arch/arm/kernel/traps.c:235 (set (reg:SI 3 r3 [orig:137 die_counter.280 ] [137])
        (plus:SI (reg:SI 3 r3 [orig:172 die_counter ] [172])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 34 32 40 4 arch/arm/kernel/traps.c:235 (set (mem/c/i:SI (plus:SI (reg/f:SI 12 ip [171])
                (const_int 20 [0x14])) [0 die_counter+0 S4 A32])
        (reg:SI 3 r3 [orig:137 die_counter.280 ] [137])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 34 41 4 arch/arm/kernel/traps.c:235 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 41 40 46 4 arch/arm/kernel/traps.c:239 (set (reg:SI 12 ip [orig:175 <variable>.thread.trap_no ] [175])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (nil)))

(insn 46 41 48 4 arch/arm/kernel/traps.c:239 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:161 str ] [161])) 167 {*arm_movsi_insn} (nil))

(insn 48 46 45 4 arch/arm/kernel/traps.c:239 (set (reg:SI 3 r3)
        (reg/v:SI 8 r8 [orig:163 err ] [163])) 167 {*arm_movsi_insn} (nil))

(insn 45 48 47 4 arch/arm/kernel/traps.c:239 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 47 45 42 4 arch/arm/kernel/traps.c:239 (set (reg:SI 2 r2)
        (reg/v/f:SI 4 r4 [orig:162 regs ] [162])) 167 {*arm_movsi_insn} (nil))

(insn 42 47 43 4 arch/arm/kernel/traps.c:239 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [orig:175 <variable>.thread.trap_no ] [175])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 4 arch/arm/kernel/traps.c:239 (set (reg:SI 12 ip [176])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 11 [0xb])
        (nil)))

(insn 44 43 49 4 arch/arm/kernel/traps.c:239 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [176])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 11 [0xb])
        (nil)))

(call_insn 49 44 50 4 arch/arm/kernel/traps.c:239 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("notify_die") [flags 0x41] <function_decl 0x10bcbc80 notify_die>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 50 49 51 4 arch/arm/kernel/traps.c:239 (set (reg/v:SI 10 sl [orig:159 ret ] [159])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 4 arch/arm/kernel/traps.c:240 (set (reg:SI 3 r3 [177])
        (const_int 32769 [0x8001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 32769 [0x8001])
        (nil)))

(insn 52 51 53 4 arch/arm/kernel/traps.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:159 ret ] [159])
            (reg:SI 3 r3 [177]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 10 sl [orig:159 ret ] [159])
            (const_int 32769 [0x8001]))
        (nil)))

(jump_insn 53 52 54 4 arch/arm/kernel/traps.c:240 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 17 5)
;; lr  out 	 4 [r4] 5 [r5] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  17 [100.0%] 
;; Succ edge  5 [0.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 54 53 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 59 54 68 5 NOTE_INSN_DELETED)

(note 68 59 55 5 NOTE_INSN_DELETED)

(call_insn 55 68 56 5 arch/arm/kernel/traps.c:243 (parallel [
            (call (mem:SI (symbol_ref:SI ("print_modules") [flags 0x41] <function_decl 0x10e8fc80 print_modules>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 56 55 57 5 arch/arm/kernel/traps.c:244 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:162 regs ] [162])) 167 {*arm_movsi_insn} (nil))

(call_insn 57 56 60 5 arch/arm/kernel/traps.c:244 (parallel [
            (call (mem:SI (symbol_ref:SI ("__show_regs") [flags 0x41] <function_decl 0x512f9000 __show_regs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 60 57 61 5 arch/arm/kernel/traps.c:245 (set (reg/f:SI 5 r5 [180])
        (plus:SI (reg/v/f:SI 5 r5 [orig:160 thread ] [160])
            (const_int 752 [0x2f0]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (nil)))

(insn 61 60 63 5 arch/arm/kernel/traps.c:245 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 5 r5 [180])) 167 {*arm_movsi_insn} (nil))

(insn 63 61 62 5 arch/arm/kernel/traps.c:245 (set (reg:SI 1 r1)
        (const_int 16 [0x10])) 167 {*arm_movsi_insn} (nil))

(insn 62 63 64 5 arch/arm/kernel/traps.c:245 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11236cd0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x11236cd0>)
        (nil)))

(insn 64 62 65 5 arch/arm/kernel/traps.c:245 (set (reg:SI 2 r2)
        (plus:SI (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])
            (const_int 756 [0x2f4]))) 4 {*arm_addsi3} (nil))

(insn 65 64 66 5 arch/arm/kernel/traps.c:245 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])
                (const_int 532 [0x214])) [0 <variable>.pid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 66 65 67 5 arch/arm/kernel/traps.c:245 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 67 66 69 5 arch/arm/kernel/traps.c:248 (set (reg:SI 3 r3 [orig:182 <variable>.uregs+64 ] [182])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:162 regs ] [162])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:162 regs ] [162])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 69 67 70 5 arch/arm/kernel/traps.c:248 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:182 <variable>.uregs+64 ] [182])
                (const_int 4 [0x4])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 70 69 71 5 arch/arm/kernel/traps.c:248 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 4 [r4] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  7 [0.0%] 
;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
(note 71 70 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 73 71 310 6 NOTE_INSN_DELETED)

(insn 310 73 287 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 287 310 288 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [183])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 288 287 75 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [183])
        (and:SI (reg:SI 3 r3 [183])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 75 288 76 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [orig:186 <variable>.preempt_count ] [186])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [183])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [187])
        (and:SI (reg:SI 3 r3 [orig:186 <variable>.preempt_count ] [186])
            (const_int 67108863 [0x3ffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 77 76 78 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [185])
        (and:SI (reg:SI 3 r3 [187])
            (const_int -256 [0xffffffffffffff00]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 3 r3 [orig:186 <variable>.preempt_count ] [186])
            (const_int 67108608 [0x3ffff00]))
        (nil)))

(insn 78 77 79 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [185])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 79 78 80 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 6 -> ( 7 17)
;; lr  out 	 4 [r4] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  17 [100.0%] 

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%] 
;; Pred edge  6 [0.0%]  (fallthru)
(code_label 80 79 81 7 79 "" [1 uses])

(note 81 80 85 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 85 81 96 7 NOTE_INSN_DELETED)

(note 96 85 109 7 NOTE_INSN_DELETED)

(note 109 96 84 7 NOTE_INSN_DELETED)

(insn 84 109 119 7 arch/arm/kernel/traps.c:249 (set (reg/f:SI 3 r3 [orig:191 <variable>.stack ] [191])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])
        (nil)))

(insn 119 84 88 7 arch/arm/kernel/traps.c:142 (set (reg/v:SI 6 r6 [orig:149 i ] [149])
        (const_int -4 [0xfffffffffffffffc])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -4 [0xfffffffffffffffc])
        (nil)))

(insn 88 119 120 7 arch/arm/kernel/traps.c:249 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:162 regs ] [162])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 120 88 89 7 arch/arm/kernel/traps.c:131 (set (reg/v/f:SI 5 r5 [orig:150 p ] [150])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))
        (nil)))

(insn 89 120 86 7 arch/arm/kernel/traps.c:249 (set (reg:SI 3 r3)
        (plus:SI (reg/f:SI 3 r3 [orig:191 <variable>.stack ] [191])
            (const_int 8192 [0x2000]))) 4 {*arm_addsi3} (nil))

(insn 86 89 87 7 arch/arm/kernel/traps.c:249 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)
        (nil)))

(insn 87 86 90 7 arch/arm/kernel/traps.c:249 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112d3360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x112d3360>)
        (nil)))

(call_insn 90 87 91 7 arch/arm/kernel/traps.c:249 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_mem") [flags 0x3] <function_decl 0x111aa800 dump_mem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 91 90 92 7 arch/arm/kernel/traps.c:166 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:162 regs ] [162])) 167 {*arm_movsi_insn} (nil))

(insn 92 91 263 7 arch/arm/kernel/traps.c:166 (set (reg:SI 1 r1)
        (reg/v/f:SI 7 r7 [orig:138 tsk ] [138])) 167 {*arm_movsi_insn} (nil))

(note 263 92 93 7 NOTE_INSN_DELETED)

(call_insn 93 263 95 7 arch/arm/kernel/traps.c:166 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_backtrace") [flags 0x41] <function_decl 0x111aa680 unwind_backtrace>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 95 93 311 7 arch/arm/kernel/traps.c:128 (set (reg:SI 7 r7 [orig:192 <variable>.uregs+64 ] [192])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:162 regs ] [162])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 311 95 285 7 arch/arm/kernel/traps.c:139 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 285 311 94 7 arch/arm/kernel/traps.c:139 (set (reg:SI 3 r3 [193])
        (and:SI (reg:SI 1 r1)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 94 285 286 7 arch/arm/kernel/traps.c:127 (set (reg/v:SI 4 r4 [orig:154 addr ] [154])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:162 regs ] [162])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 286 94 261 7 arch/arm/kernel/traps.c:139 (set (reg:SI 3 r3 [193])
        (and:SI (reg:SI 3 r3 [193])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 261 286 115 7 arch/arm/kernel/traps.c:129 discrim 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 7 r7 [orig:192 <variable>.uregs+64 ] [192])
                        (const_int 32 [0x20]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 7 r7 [orig:153 thumb ] [153])
                (and:SI (reg:SI 7 r7 [orig:192 <variable>.uregs+64 ] [192])
                    (const_int 32 [0x20])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 115 261 262 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 2 r2 [197])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 262 115 118 7 arch/arm/kernel/traps.c:129 discrim 2 (set (reg/v:SI 9 r9 [orig:152 width ] [152])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 4 [0x4])
            (const_int 8 [0x8]))) 240 {*movsicc_insn} (nil))

(insn 118 262 127 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 8 r8 [orig:134 ivtmp.756 ] [134])
        (plus:SI (reg/v:SI 4 r4 [orig:154 addr ] [154])
            (const_int -16 [0xfffffffffffffff0]))) 4 {*arm_addsi3} (nil))

(insn 127 118 111 7 arch/arm/kernel/traps.c:146 discrim 3 (set (reg:SI 11 fp [224])
        (reg:SI 2 r2 [197])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 111 127 312 7 arch/arm/kernel/traps.c:139 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [193])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 312 111 117 7 arch/arm/kernel/traps.c:139 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-60 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (nil))

(insn 117 312 116 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 4 r4 [orig:135 ivtmp.752 ] [135])
        (plus:SI (reg/v:SI 4 r4 [orig:154 addr ] [154])
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 116 117 264 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [193])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 2 r2 [197])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 264 116 272 7 arch/arm/kernel/traps.c:151 discrim 2 (set (reg/f:SI 12 ip [226])
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x112da3a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x112da3a0>)
        (nil)))

(jump_insn 272 264 273 7 (set (pc)
        (label_ref 179)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 273 272 192)

;; Start of basic block ( 14) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [95.5%] 
(code_label 192 273 123 8 91 "" [1 uses])

(note 123 192 124 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 125 8 arch/arm/kernel/traps.c:145 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:153 thumb ] [153])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 125 124 126 8 arch/arm/kernel/traps.c:145 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  8 [50.0%]  (fallthru)
(note 126 125 131 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 131 126 292 9 NOTE_INSN_DELETED)

(insn 292 131 128 9 arch/arm/kernel/traps.c:146 discrim 3 (set (reg/v:SI 2 r2 [orig:146 __gu_err ] [146])
        (reg:SI 11 fp [224])) 167 {*arm_movsi_insn} (nil))

(insn 128 292 129 9 arch/arm/kernel/traps.c:146 discrim 3 (parallel [
            (set (reg/v:SI 2 r2 [orig:146 __gu_err ] [146])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 4 r4 [orig:135 ivtmp.752 ] [135])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 2 r2 [orig:146 __gu_err ] [146])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (set (reg/v:SI 3 r3 [orig:145 __b1 ] [145])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg:SI 4 r4 [orig:135 ivtmp.752 ] [135])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 2 r2 [orig:146 __gu_err ] [146])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 129 128 130 9 arch/arm/kernel/traps.c:146 discrim 3 (set (reg:SI 1 r1 [199])
        (plus:SI (reg:SI 4 r4 [orig:135 ivtmp.752 ] [135])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 130 129 132 9 arch/arm/kernel/traps.c:146 discrim 3 (parallel [
            (set (reg/v:SI 2 r2 [orig:146 __gu_err ] [146])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 1 r1 [199])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 2 r2 [orig:146 __gu_err ] [146])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (set (reg/v:SI 0 r0 [orig:144 __b2 ] [144])
                (asm_operands/v:SI ("1:	ldrb	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg:SI 1 r1 [199])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 2 r2 [orig:146 __gu_err ] [146])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012004))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 132 130 133 9 arch/arm/kernel/traps.c:146 discrim 5 (set (reg:SI 3 r3 [201])
        (ior:SI (ashift:SI (reg/v:SI 0 r0 [orig:144 __b2 ] [144])
                (const_int 8 [0x8]))
            (reg/v:SI 3 r3 [orig:145 __b1 ] [145]))) 270 {*arith_shiftsi} (nil))

(insn 133 132 274 9 arch/arm/kernel/traps.c:146 discrim 5 (set (reg/v:SI 3 r3 [orig:148 val ] [148])
        (zero_extend:SI (reg:HI 3 r3 [201]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(jump_insn 274 133 275 9 (set (pc)
        (label_ref 142)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 275 274 137)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  8 [50.0%] 
(code_label 137 275 138 10 83 "" [1 uses])

(note 138 137 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 140 138 293 10 NOTE_INSN_DELETED)

(insn 293 140 141 10 arch/arm/kernel/traps.c:148 discrim 5 (set (reg/v:SI 2 r2 [orig:147 bad ] [147])
        (reg/v:SI 7 r7 [orig:153 thumb ] [153])) 167 {*arm_movsi_insn} (nil))

(insn 141 293 142 10 arch/arm/kernel/traps.c:148 discrim 5 (parallel [
            (set (reg/v:SI 2 r2 [orig:147 bad ] [147])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=r") 0 [
                        (reg:SI 8 r8 [orig:134 ivtmp.756 ] [134])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 2 r2 [orig:147 bad ] [147])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012010))
            (set (reg/v:SI 3 r3 [orig:148 val ] [148])
                (asm_operands/v:SI ("1:	ldr	%1,[%2],#0
2:
	.pushsection .fixup,"ax"
	.align	2
3:	mov	%0, %3
	mov	%1, #0
	b	2b
	.popsection
	.pushsection __ex_table,"a"
	.align	3
	.long	1b, 3b
	.popsection") ("=&r") 1 [
                        (reg:SI 8 r8 [orig:134 ivtmp.756 ] [134])
                        (const_int -14 [0xfffffffffffffff2])
                        (reg/v:SI 2 r2 [orig:147 bad ] [147])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("i") 0)
                        (asm_input:SI ("0") 0)
                    ] 7012010))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 142 141 143 11 84 "" [1 uses])

(note 143 142 144 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 145 11 arch/arm/kernel/traps.c:150 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 2 r2 [orig:147 bad ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 145 144 146 11 arch/arm/kernel/traps.c:150 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 171)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  12 [95.5%]  (fallthru)
;; Succ edge  13 [4.5%]  (loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 12 [ip]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  11 [95.5%]  (fallthru)
(note 146 145 265 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 265 146 266 12 NOTE_INSN_DELETED)

(note 266 265 163 12 NOTE_INSN_DELETED)

(note 163 266 313 12 NOTE_INSN_DELETED)

(insn 313 163 159 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC22") [flags 0x82] <string_cst 0x112dc0f0>)) 167 {*arm_movsi_insn} (nil))

(insn 159 313 158 12 arch/arm/kernel/traps.c:151 discrim 3 (parallel [
            (set (reg:SI 1 r1)
                (if_then_else:SI (eq (reg/v:SI 6 r6 [orig:149 i ] [149])
                        (const_int 0 [0x0]))
                    (reg:SI 1 r1)
                    (reg/f:SI 12 ip [226])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 158 159 160 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:150 p ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 160 158 307 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg:SI 2 r2)
        (reg/v:SI 9 r9 [orig:152 width ] [152])) 167 {*arm_movsi_insn} (nil))

(insn 307 160 162 12 arch/arm/kernel/traps.c:151 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (nil))

(call_insn 162 307 166 12 arch/arm/kernel/traps.c:151 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sprintf") [flags 0x41] <function_decl 0x5115e780 sprintf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 166 162 167 12 arch/arm/kernel/traps.c:142 (set (reg/v:SI 6 r6 [orig:149 i ] [149])
        (plus:SI (reg/v:SI 6 r6 [orig:149 i ] [149])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 167 166 168 12 arch/arm/kernel/traps.c:142 (set (reg:SI 4 r4 [orig:135 ivtmp.752 ] [135])
        (plus:SI (reg:SI 4 r4 [orig:135 ivtmp.752 ] [135])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 168 167 165 12 arch/arm/kernel/traps.c:142 (set (reg:SI 8 r8 [orig:134 ivtmp.756 ] [134])
        (plus:SI (reg:SI 8 r8 [orig:134 ivtmp.756 ] [134])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 165 168 308 12 arch/arm/kernel/traps.c:151 discrim 3 (set (reg/v/f:SI 5 r5 [orig:150 p ] [150])
        (plus:SI (reg/v/f:SI 5 r5 [orig:150 p ] [150])
            (reg:SI 0 r0))) 4 {*arm_addsi3} (nil))

(insn 308 165 276 12 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 276 308 277 12 (set (pc)
        (label_ref 179)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  14 [100.0%]  (dfs_back)

(barrier 277 276 171)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  11 [4.5%]  (loop_exit)
(code_label 171 277 172 13 85 "" [1 uses])

(note 172 171 174 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 174 172 175 13 arch/arm/kernel/traps.c:154 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:150 p ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 13 arch/arm/kernel/traps.c:154 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x112dc5a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC23") [flags 0x82] <string_cst 0x112dc5a0>)
        (nil)))

(call_insn 176 175 278 13 arch/arm/kernel/traps.c:154 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcpy") [flags 0x41] <function_decl 0x51157700 __builtin_strcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 278 176 279 13 (set (pc)
        (label_ref 195)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 16)
;; lr  out 	 10 [sl] 13 [sp]
;; live  out 	 10 [sl] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 279 278 179)

;; Start of basic block ( 7 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  7 [100.0%] 
;; Pred edge  12 [100.0%]  (dfs_back)
(code_label 179 279 180 14 82 "" [2 uses])

(note 180 179 267 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 267 180 268 14 NOTE_INSN_DELETED)

(insn 268 267 193 14 arch/arm/kernel/traps.c:142 discrim 3 (parallel [
            (set (reg:SI 3 r3 [orig:155 iftmp.278 ] [155])
                (if_then_else:SI (ne (reg/v:SI 7 r7 [orig:153 thumb ] [153])
                        (const_int 0 [0x0]))
                    (const_int 2 [0x2])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 193 268 194 14 arch/arm/kernel/traps.c:142 discrim 4 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:149 i ] [149])
            (reg:SI 3 r3 [orig:155 iftmp.278 ] [155]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 194 193 195 14 arch/arm/kernel/traps.c:142 discrim 4 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 192)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 14 -> ( 8 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  8 [95.5%] 
;; Succ edge  16 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 14 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  14 [4.5%]  (fallthru,loop_exit)
;; Pred edge  13 [100.0%] 
(code_label 195 194 196 16 88 "" [1 uses])

(note 196 195 199 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 199 196 205 16 NOTE_INSN_DELETED)

(note 205 199 200 16 NOTE_INSN_DELETED)

(insn 200 205 202 16 arch/arm/kernel/traps.c:158 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x112dc9f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC24") [flags 0x82] <string_cst 0x112dc9f0>)
        (nil)))

(insn 202 200 201 16 arch/arm/kernel/traps.c:158 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))

(insn 201 202 203 16 arch/arm/kernel/traps.c:158 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x112cf6a0>)
        (nil)))

(call_insn 203 201 314 16 arch/arm/kernel/traps.c:158 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 314 203 283 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 283 314 284 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 3 r3 [208])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 284 283 315 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 3 r3 [208])
        (and:SI (reg:SI 3 r3 [208])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 315 284 207 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 207 315 208 16 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/uaccess.h:65 (set (mem/s/j:SI (plus:SI (reg:SI 3 r3 [208])
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 10 [sl] 13 [sp]
;; live  out 	 10 [sl] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 4 6 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 208 207 209 17 78 "" [2 uses])

(note 209 208 220 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 220 209 210 17 NOTE_INSN_DELETED)

(insn 210 220 211 17 arch/arm/kernel/traps.c:278 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 211 210 212 17 arch/arm/kernel/traps.c:278 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10ad6080 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 212 211 213 17 arch/arm/kernel/traps.c:279 (set (reg:SI 0 r0)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(call_insn 213 212 216 17 arch/arm/kernel/traps.c:279 (parallel [
            (call (mem:SI (symbol_ref:SI ("add_taint") [flags 0x41] <function_decl 0x10ad6200 add_taint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 216 213 217 17 include/linux/spinlock.h:335 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(call_insn 217 216 218 17 include/linux/spinlock.h:335 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irq") [flags 0x41] <function_decl 0x10b28e80 _raw_spin_unlock_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 218 217 316 17 arch/arm/kernel/traps.c:281 (parallel [
            (call (mem:SI (symbol_ref:SI ("oops_exit") [flags 0x41] <function_decl 0x10aa9e00 oops_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 316 218 281 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 281 316 282 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [212])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 282 281 222 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [212])
        (and:SI (reg:SI 3 r3 [212])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 222 282 223 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [orig:215 <variable>.preempt_count ] [215])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [212])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 223 222 224 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [216])
        (and:SI (reg:SI 3 r3 [orig:215 <variable>.preempt_count ] [215])
            (const_int 67108863 [0x3ffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 224 223 225 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3 [214])
        (and:SI (reg:SI 3 r3 [216])
            (const_int -256 [0xffffffffffffff00]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 3 r3 [orig:215 <variable>.preempt_count ] [215])
            (const_int 67108608 [0x3ffff00]))
        (nil)))

(insn 225 224 226 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [214])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 226 225 227 17 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 232)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 10 [sl] 13 [sp]


;; Succ edge  18 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  17 [0.0%]  (fallthru)
(note 227 226 229 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 229 227 230 18 arch/arm/kernel/traps.c:284 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11266dc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC25") [flags 0x82] <string_cst 0x11266dc0>)
        (nil)))

(call_insn 230 229 231 18 arch/arm/kernel/traps.c:284 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10aa9d00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 18 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 231 230 232)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  17 [100.0%] 
(code_label 232 231 233 19 92 "" [1 uses])

(note 233 232 234 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 235 19 arch/arm/kernel/traps.c:285 (set (reg/f:SI 3 r3 [218])
        (symbol_ref:SI ("panic_on_oops") [flags 0xc0] <var_decl 0x10ac6900 panic_on_oops>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("panic_on_oops") [flags 0xc0] <var_decl 0x10ac6900 panic_on_oops>)
        (nil)))

(insn 235 234 236 19 arch/arm/kernel/traps.c:285 (set (reg:SI 3 r3 [orig:219 panic_on_oops ] [219])
        (mem/c/i:SI (reg/f:SI 3 r3 [218]) [0 panic_on_oops+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("panic_on_oops") [flags 0xc0] <var_decl 0x10ac6900 panic_on_oops>) [0 panic_on_oops+0 S4 A32])
        (nil)))

(insn 236 235 237 19 arch/arm/kernel/traps.c:285 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:219 panic_on_oops ] [219])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 237 236 238 19 arch/arm/kernel/traps.c:285 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 243)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 10 [sl] 13 [sp]


;; Succ edge  20 [0.0%]  (fallthru)
;; Succ edge  21 [100.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  19 [0.0%]  (fallthru)
(note 238 237 240 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 240 238 241 20 arch/arm/kernel/traps.c:286 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x112dcd50>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC26") [flags 0x82] <string_cst 0x112dcd50>)
        (nil)))

(call_insn 241 240 242 20 arch/arm/kernel/traps.c:286 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10aa9d00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 20 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 242 241 243)

;; Start of basic block ( 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  19 [100.0%] 
(code_label 243 242 244 21 93 "" [1 uses])

(note 244 243 245 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 246 21 arch/arm/kernel/traps.c:287 (set (reg:SI 3 r3 [221])
        (const_int 32769 [0x8001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 32769 [0x8001])
        (nil)))

(insn 246 245 247 21 arch/arm/kernel/traps.c:287 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:159 ret ] [159])
            (reg:SI 3 r3 [221]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 10 sl [orig:159 ret ] [159])
            (const_int 32769 [0x8001]))
        (nil)))

(jump_insn 247 246 248 21 arch/arm/kernel/traps.c:287 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 257)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  22 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  21 [0.0%]  (fallthru)
(note 248 247 249 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 250 22 arch/arm/kernel/traps.c:288 (set (reg:SI 0 r0)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(call_insn 250 249 251 22 arch/arm/kernel/traps.c:288 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_exit") [flags 0x41] <function_decl 0x10aa9f80 do_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 22 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 251 250 257)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  21 [100.0%] 
(code_label 257 251 260 23 95 "" [1 uses])

(note 260 257 294 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 23 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 294 260 306 NOTE_INSN_DELETED)

(note 306 294 0 NOTE_INSN_DELETED)


;; Function bad_mode (bad_mode)[0:1070]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 39.
verify found no changes in insn with uid = 39.
deleting insn with uid = 18.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 6 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 7 (  1.4)

Pass 0 for finding allocno costs

    a1 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 30(l0): point = 0
   Insn 29(l0): point = 2
   Insn 27(l0): point = 4
   Insn 26(l0): point = 6
   Insn 25(l0): point = 8
   Insn 23(l0): point = 10
   Insn 24(l0): point = 12
   Insn 21(l0): point = 14
   Insn 20(l0): point = 16
   Insn 39(l0): point = 18
   Insn 19(l0): point = 20
   Insn 14(l0): point = 23
   Insn 13(l0): point = 25
   Insn 10(l0): point = 28
   Insn 9(l0): point = 30
   Insn 8(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
   Insn 7(l0): point = 38
 a0(r133): [13..36]
 a1(r140): [17..18]
 a2(r134): [17..34]
 a3(r135): [24..38]
 a4(r138): [24..25]
 a5(r136): [31..32]
Compressing live ranges: from 41 to 10 - 24%
Ranges after the compression:
 a0(r133): [0..8]
 a1(r140): [1..2]
 a2(r134): [1..7]
 a3(r135): [3..9]
 a4(r138): [3..4]
 a5(r136): [5..6]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r133,l0) conflicts: a1(r140,l0) a2(r134,l0) a4(r138,l0) a3(r135,l0) a5(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r140,l0) conflicts: a0(r133,l0) a2(r134,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a2(r134,l0) conflicts: a0(r133,l0) a1(r140,l0) a4(r138,l0) a3(r135,l0) a5(r136,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a3(r135,l0) conflicts: a0(r133,l0) a2(r134,l0) a4(r138,l0) a5(r136,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a4(r138,l0) conflicts: a0(r133,l0) a2(r134,l0) a3(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r136,l0) conflicts: a0(r133,l0) a2(r134,l0) a3(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  regions=1, blocks=5, points=10
    allocnos=6, copies=0, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r133 1r140 2r134 3r135 4r138 5r136
    modified regnos: 133 134 135 136 138 140
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
      Pushing a5(r136,l0)
      Pushing a4(r138,l0)
      Pushing a2(r134,l0)
      Pushing a1(r140,l0)
      Pushing a3(r135,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 4
      Popping a3(r135,l0)  -- assign reg 3
      Popping a1(r140,l0)  -- assign reg 3
      Popping a2(r134,l0)  -- assign reg 1
      Popping a4(r138,l0)  -- assign reg 2
      Popping a5(r136,l0)  -- assign reg 2
Disposition:
    0:r133 l0     4    2:r134 l0     1    3:r135 l0     3    5:r136 l0     2
    4:r138 l0     2    1:r140 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 1, 13, dead_or_set: 135
insn=2, live_throughout: 1, 13, 135, dead_or_set: 0, 133
insn=3, live_throughout: 13, 133, 135, dead_or_set: 1, 134
insn=8, live_throughout: 13, 133, 134, 135, dead_or_set: 136
insn=9, live_throughout: 13, 133, 134, 135, dead_or_set: 136
insn=10, live_throughout: 13, 133, 134, 135, dead_or_set: 
insn=13, live_throughout: 13, 133, 134, 135, dead_or_set: 138
insn=14, live_throughout: 13, 133, 134, dead_or_set: 135, 138
insn=15, live_throughout: 13, 133, 134, dead_or_set: 
insn=19, live_throughout: 13, 133, 134, dead_or_set: 0
insn=39, live_throughout: 0, 13, 133, 134, dead_or_set: 140
insn=20, live_throughout: 0, 13, 133, dead_or_set: 1, 134, 140
insn=21, live_throughout: 13, 133, dead_or_set: 0, 1, 14
insn=24, live_throughout: 13, dead_or_set: 1, 133
insn=23, live_throughout: 1, 13, dead_or_set: 0
insn=25, live_throughout: 0, 1, 13, dead_or_set: 2
insn=26, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=27, live_throughout: 13, dead_or_set: 
insn=29, live_throughout: 13, dead_or_set: 0
insn=30, live_throughout: 13, dead_or_set: 0, 14
init_insns for 135: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 136: (insn_list:REG_DEP_TRUE 8 (nil))
init_insns for 138: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 39 (nil))
changing reg in insn 2
changing reg in insn 24
changing reg in insn 3
changing reg in insn 20
changing reg in insn 20
changing reg in insn 7
changing reg in insn 14
changing reg in insn 8
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 13
changing reg in insn 14
changing reg in insn 39
changing reg in insn 20
Spilling for insn 14.

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
deleting insn with uid = 3.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 21.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 30.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 7 (  1.4)


bad_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={6d,3u,1d} r2={7d,3u} r3={6d,3u,1d} r4={1d,1u} r12={4d} r13={1d,7u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 396{371d,23u,2e} in 18{15 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 2 2 include/linux/printk.h:41 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>)
        (nil)))

(insn 2 7 8 2 arch/arm/kernel/traps.c:412 (set (reg/v/f:SI 4 r4 [orig:133 regs ] [133])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 8 2 9 2 include/linux/printk.h:41 (set (reg:SI 2 r2 [orig:136 console_printk ] [136])
        (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
        (expr_list:REG_EQUAL (mem/s/j:SI (symbol_ref:SI ("console_printk") [flags 0xc0] <var_decl 0x10a9ad20 console_printk>) [0 console_printk+0 S4 A32])
            (nil))))

(insn 9 8 10 2 include/linux/printk.h:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:136 console_printk ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 include/linux/printk.h:41 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 14 3 include/linux/printk.h:42 (set (reg:SI 2 r2 [138])
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))

(insn 14 13 15 3 include/linux/printk.h:42 (set (mem/s/j:SI (reg/f:SI 3 r3 [135]) [0 console_printk+0 S4 A32])
        (reg:SI 2 r2 [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 15 [0xf])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 4 [r4] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 15 14 16 4 100 "" [1 uses])

(note 16 15 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 16 39 4 arch/arm/kernel/traps.c:415 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11271a40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC27") [flags 0x82] <string_cst 0x11271a40>)
        (nil)))

(insn 39 19 20 4 arch/arm/kernel/traps.c:415 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 20 39 21 4 arch/arm/kernel/traps.c:415 (set (reg:SI 1 r1)
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg/v:SI 1 r1 [orig:134 reason ] [134])
                    (const_int 4 [0x4]))
                (reg/f:SI 3 r3 [140])) [0 handler S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/u/f/j:SI (plus:SI (mult:SI (reg/v:SI 1 r1 [orig:134 reason ] [134])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) [0 handler S4 A32])
        (nil)))

(call_insn 21 20 24 4 arch/arm/kernel/traps.c:415 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10aa9180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 24 21 23 4 arch/arm/kernel/traps.c:417 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:133 regs ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 23 24 25 4 arch/arm/kernel/traps.c:417 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x112edd80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC28") [flags 0x82] <string_cst 0x112edd80>)
        (nil)))

(insn 25 23 26 4 arch/arm/kernel/traps.c:417 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 4 arch/arm/kernel/traps.c:417 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x3] <function_decl 0x512e8c80 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 27 26 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1179107)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 29 27 30 4 arch/arm/kernel/traps.c:419 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x112edf60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC29") [flags 0x82] <string_cst 0x112edf60>)
        (nil)))

(call_insn 30 29 31 4 arch/arm/kernel/traps.c:419 (parallel [
            (call (mem:SI (symbol_ref:SI ("panic") [flags 0x41] <function_decl 0x10aa9d00 panic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 31 30 40)

(note 40 31 0 NOTE_INSN_DELETED)


;; Function arm_notify_die (arm_notify_die)[0:1064]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a3 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:82000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:82000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 38(l0): point = 0
   Insn 37(l0): point = 2
   Insn 31(l0): point = 5
   Insn 28(l0): point = 7
   Insn 30(l0): point = 9
   Insn 24(l0): point = 11
   Insn 23(l0): point = 13
   Insn 19(l0): point = 15
   Insn 18(l0): point = 17
   Insn 49(l0): point = 19
   Insn 29(l0): point = 21
   Insn 48(l0): point = 23
   Insn 13(l0): point = 26
   Insn 12(l0): point = 28
   Insn 6(l0): point = 30
   Insn 5(l0): point = 32
   Insn 4(l0): point = 34
   Insn 10(l0): point = 36
 a0(r139): [16..32] [3..4]
 a1(r138): [8..34]
 a2(r143): [10..23]
 a3(r148): [12..13]
 a4(r140): [12..30]
 a5(r145): [16..17]
 a6(r142): [29..36]
Compressing live ranges: from 39 to 14 - 35%
Ranges after the compression:
 a0(r139): [6..11] [0..1]
 a1(r138): [2..12]
 a2(r143): [3..8]
 a3(r148): [4..5]
 a4(r140): [4..10]
 a5(r145): [6..7]
 a6(r142): [9..13]
+++Allocating 56 bytes for conflict table (uncompressed size 56)
;; a0(r139,l0) conflicts: a1(r138,l0) a2(r143,l0) a4(r140,l0) a5(r145,l0) a6(r142,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r138,l0) conflicts: a0(r139,l0) a2(r143,l0) a3(r148,l0) a4(r140,l0) a5(r145,l0) a6(r142,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r143,l0) conflicts: a0(r139,l0) a1(r138,l0) a3(r148,l0) a4(r140,l0) a5(r145,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a3(r148,l0) conflicts: a1(r138,l0) a2(r143,l0) a4(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a4(r140,l0) conflicts: a0(r139,l0) a1(r138,l0) a2(r143,l0) a3(r148,l0) a5(r145,l0) a6(r142,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r145,l0) conflicts: a0(r139,l0) a1(r138,l0) a2(r143,l0) a4(r140,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a6(r142,l0) conflicts: a0(r139,l0) a1(r138,l0) a4(r140,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14

  regions=1, blocks=5, points=14
    allocnos=7, copies=0, conflicts=0, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r139 1r138 2r143 3r148 4r140 5r145 6r142
    modified regnos: 138 139 140 142 143 145 148
    border:
    Pressure: GENERAL_REGS=7
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 138 of GENERAL_REGS has 5 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 5 regs less
      Pushing a5(r145,l0)
      Pushing a3(r148,l0)
      Pushing a2(r143,l0)
      Pushing a4(r140,l0)
      Pushing a0(r139,l0)
      Pushing a6(r142,l0)
      Pushing a1(r138,l0)
      Popping a1(r138,l0)  -- assign reg 12
      Popping a6(r142,l0)  -- assign reg 4
      Popping a0(r139,l0)  -- assign reg 3
      Popping a4(r140,l0)  -- assign reg 2
      Popping a2(r143,l0)  -- assign reg 0
      Popping a3(r148,l0)  -- assign reg 3
      Popping a5(r145,l0)  -- assign reg 4
Disposition:
    1:r138 l0    12    0:r139 l0     3    4:r140 l0     2    6:r142 l0     4
    2:r143 l0     0    5:r145 l0     4    3:r148 l0     3
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=10, live_throughout: 0, 1, 2, 3, 13, 14, dead_or_set: 142
insn=4, live_throughout: 0, 1, 3, 13, 14, 142, dead_or_set: 2, 138
insn=5, live_throughout: 0, 1, 13, 14, 138, 142, dead_or_set: 3, 139
insn=6, live_throughout: 0, 1, 13, 14, 138, 139, 142, dead_or_set: 140
insn=12, live_throughout: 0, 1, 13, 14, 138, 139, 140, dead_or_set: 142
insn=13, live_throughout: 0, 1, 13, 14, 138, 139, 140, dead_or_set: 
insn=48, live_throughout: 13, 14, 138, 139, 140, dead_or_set: 143
insn=29, live_throughout: 13, 14, 138, 139, 140, 143, dead_or_set: 1
insn=49, live_throughout: 1, 13, 14, 138, 139, 140, dead_or_set: 143
insn=18, live_throughout: 1, 13, 14, 138, 139, 140, 143, dead_or_set: 145
insn=19, live_throughout: 1, 13, 14, 138, 140, 143, dead_or_set: 139, 145
insn=23, live_throughout: 1, 13, 14, 138, 140, 143, dead_or_set: 148
insn=24, live_throughout: 1, 13, 14, 138, 143, dead_or_set: 140, 148
insn=30, live_throughout: 1, 13, 14, 138, dead_or_set: 2, 143
insn=28, live_throughout: 1, 2, 13, 14, dead_or_set: 0, 138
insn=31, live_throughout: 13, 14, dead_or_set: 0, 1, 2
insn=33, live_throughout: 0, 1, 13, 14, 139, dead_or_set: 
insn=37, live_throughout: 0, 1, 13, 14, dead_or_set: 2, 139
insn=38, live_throughout: 13, 14, dead_or_set: 0, 1, 2
init_insns for 142: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 18 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 23 (nil))
changing reg in insn 4
changing reg in insn 29
changing reg in insn 28
changing reg in insn 5
changing reg in insn 37
changing reg in insn 19
changing reg in insn 6
changing reg in insn 24
changing reg in insn 10
changing reg in insn 12
changing reg in insn 49
changing reg in insn 48
changing reg in insn 49
changing reg in insn 30
changing reg in insn 23
changing reg in insn 18
changing reg in insn 23
changing reg in insn 18
changing reg in insn 18
changing reg in insn 19
changing reg in insn 23
changing reg in insn 24
Spilling for insn 48.
Using reg 1 for reload 0
Spilling for insn 19.
Spilling for insn 24.

Reloads for insn # 48
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:145 <variable>.task ] [145])
                                                        (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:145 <variable>.task ] [145])
                                                        (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])

Reloads for insn # 24
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:148 <variable>.task ] [148])
                                                        (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:148 <variable>.task ] [148])
                                                        (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
deleting insn with uid = 5.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


arm_notify_die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 24[cc]
;;  ref usage 	r0={6d,6u,2d} r1={5d,4u,1d} r2={6d,4u} r3={4d,3u} r4={2d,2u} r12={4d,2u} r13={1d,8u} r14={1d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 286{252d,31u,3e} in 18{16 regular + 2 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 2 [r2] 4 [r4] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 8 7 2 NOTE_INSN_DELETED)

(note 7 3 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 7 10 2 NOTE_INSN_DELETED)

(insn 10 11 4 2 arch/arm/kernel/traps.c:294 (set (reg:SI 4 r4 [orig:142 <variable>.uregs+64 ] [142])
        (mem/s/j:SI (plus:SI (reg:SI 1 r1 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg:SI 1 r1 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 4 10 6 2 arch/arm/kernel/traps.c:293 (set (reg/v/f:SI 12 ip [orig:138 info ] [138])
        (reg:SI 2 r2 [ info ])) 167 {*arm_movsi_insn} (nil))

(insn 6 4 12 2 arch/arm/kernel/traps.c:293 (set (reg/v:SI 2 r2 [orig:140 trap ] [140])
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 trap+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 6 13 2 arch/arm/kernel/traps.c:294 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 4 r4 [orig:142 <variable>.uregs+64 ] [142])
                (const_int 4 [0x4])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 13 12 14 2 arch/arm/kernel/traps.c:294 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 16 14 51 3 NOTE_INSN_DELETED)

(insn 51 16 48 3 arch/arm/kernel/traps.c:295 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 48 51 29 3 arch/arm/kernel/traps.c:295 (set (reg:SI 0 r0 [143])
        (and:SI (reg:SI 1 r1)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 29 48 49 3 arch/arm/kernel/traps.c:298 (set (reg:SI 1 r1)
        (reg/v/f:SI 12 ip [orig:138 info ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 49 29 18 3 arch/arm/kernel/traps.c:295 (set (reg:SI 0 r0 [143])
        (and:SI (reg:SI 0 r0 [143])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 49 19 3 arch/arm/kernel/traps.c:295 (set (reg/f:SI 4 r4 [orig:145 <variable>.task ] [145])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [143])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [143])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
        (nil)))

(insn 19 18 23 3 arch/arm/kernel/traps.c:295 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:145 <variable>.task ] [145])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg/v:SI 3 r3 [orig:139 err ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 23 19 24 3 arch/arm/kernel/traps.c:296 (set (reg/f:SI 3 r3 [orig:148 <variable>.task ] [148])
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [143])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [143])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
        (nil)))

(insn 24 23 30 3 arch/arm/kernel/traps.c:296 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:148 <variable>.task ] [148])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg/v:SI 2 r2 [orig:140 trap ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 30 24 28 3 arch/arm/kernel/traps.c:298 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [143])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 30 31 3 arch/arm/kernel/traps.c:298 (set (reg:SI 0 r0)
        (mem/s/j:SI (reg/v/f:SI 12 ip [orig:138 info ] [138]) [0 <variable>.si_signo+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 31 28 32 3 arch/arm/kernel/traps.c:298 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x11008e80 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 32 31 33)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 33 32 34 4 105 "" [1 uses])

(note 34 33 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 34 38 4 arch/arm/kernel/traps.c:300 (set (reg:SI 2 r2)
        (reg/v:SI 3 r3 [orig:139 err ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 38 37 39 4 arch/arm/kernel/traps.c:300 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x3] <function_decl 0x512e8c80 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 39 38 50)

(note 50 39 0 NOTE_INSN_DELETED)


;; Function baddataabort (baddataabort)[0:1075]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 34.
verify found no changes in insn with uid = 34.
deleting insn with uid = 9.
scanning new insn with uid = 35.
verify found no changes in insn with uid = 35.
deleting insn with uid = 13.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000

   Insn 24(l0): point = 0
   Insn 12(l0): point = 2
   Insn 10(l0): point = 4
   Insn 34(l0): point = 6
   Insn 19(l0): point = 8
   Insn 15(l0): point = 10
   Insn 11(l0): point = 12
   Insn 14(l0): point = 14
   Insn 35(l0): point = 16
   Insn 22(l0): point = 18
   Insn 20(l0): point = 20
   Insn 23(l0): point = 22
   Insn 8(l0): point = 24
   Insn 21(l0): point = 26
   Insn 3(l0): point = 28
   Insn 4(l0): point = 30
 a0(r138): [3..12]
 a1(r137): [5..6]
 a2(r133): [11..24]
 a3(r139): [15..16]
 a4(r135): [23..28]
 a5(r136): [25..30]
Compressing live ranges: from 33 to 12 - 36%
Ranges after the compression:
 a0(r138): [0..4]
 a1(r137): [1..2]
 a2(r133): [3..8]
 a3(r139): [5..6]
 a4(r135): [7..10]
 a5(r136): [9..11]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r138,l0) conflicts: a1(r137,l0) a2(r133,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r137,l0) conflicts: a0(r138,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a2(r133,l0) conflicts: a0(r138,l0) a3(r139,l0) a4(r135,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a3(r139,l0) conflicts: a2(r133,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a4(r135,l0) conflicts: a2(r133,l0) a5(r136,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a5(r136,l0) conflicts: a4(r135,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

  regions=1, blocks=3, points=12
    allocnos=6, copies=0, conflicts=3, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r138 1r137 2r133 3r139 4r135 5r136
    modified regnos: 133 135 136 137 138 139
    border:
    Pressure: GENERAL_REGS=6
    Reg 138 of GENERAL_REGS has 4 regs less
    Reg 137 of GENERAL_REGS has 4 regs less
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a4(r135,l0)
      Pushing a5(r136,l0)
      Pushing a3(r139,l0)
      Pushing a2(r133,l0)
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 12
      Popping a1(r137,l0)  -- assign reg 14
      Popping a2(r133,l0)  -- assign reg 14
      Popping a3(r139,l0)  -- assign reg 12
      Popping a5(r136,l0)  -- assign reg 2
      Popping a4(r135,l0)  -- assign reg 3
Disposition:
    2:r133 l0    14    4:r135 l0     3    5:r136 l0     2    1:r137 l0    14
    0:r138 l0    12    3:r139 l0    12
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=4, live_throughout: 1, 13, dead_or_set: 2, 136
insn=3, live_throughout: 13, 136, dead_or_set: 1, 135
insn=21, live_throughout: 13, 135, 136, dead_or_set: 1
insn=8, live_throughout: 1, 13, 135, dead_or_set: 133, 136
insn=23, live_throughout: 1, 13, 133, dead_or_set: 3, 135
insn=20, live_throughout: 1, 3, 13, 133, dead_or_set: 0
insn=22, live_throughout: 0, 1, 3, 13, 133, dead_or_set: 2
insn=35, live_throughout: 0, 1, 2, 3, 13, 133, dead_or_set: 139
insn=14, live_throughout: 0, 1, 2, 3, 13, 133, dead_or_set: 139
insn=11, live_throughout: 0, 1, 2, 3, 13, 133, dead_or_set: 138
insn=15, live_throughout: 0, 1, 2, 3, 13, 138, dead_or_set: 133
insn=19, live_throughout: 0, 1, 2, 3, 13, 138, dead_or_set: 
insn=34, live_throughout: 0, 1, 2, 3, 13, 138, dead_or_set: 137
insn=10, live_throughout: 0, 1, 2, 3, 13, 138, dead_or_set: 137
insn=12, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 138
insn=24, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
init_insns for 133: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 138: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 35 (nil))
changing reg in insn 8
changing reg in insn 15
changing reg in insn 3
changing reg in insn 23
changing reg in insn 4
changing reg in insn 21
changing reg in insn 8
changing reg in insn 34
changing reg in insn 10
changing reg in insn 11
changing reg in insn 19
changing reg in insn 12
changing reg in insn 35
changing reg in insn 14
Spilling for insn 14.
Spilling for insn 15.
Spilling for insn 19.
Spilling for insn 10.
Spilling for insn 12.

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 10
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])

Reloads for insn # 12
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
deleting insn with uid = 4.
deleting insn with uid = 23.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


baddataabort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={3d,1u} r1={3d,2u} r2={3d,3u} r3={3d,1u} r12={4d,3u} r13={1d,9u} r14={4d,3u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 155{132d,22u,1e} in 14{13 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 5 17 2 NOTE_INSN_DELETED)

(note 17 16 3 2 NOTE_INSN_DELETED)

(insn 3 17 21 2 arch/arm/kernel/traps.c:690 (set (reg/v:SI 3 r3 [orig:135 instr ] [135])
        (reg:SI 1 r1 [ instr ])) 167 {*arm_movsi_insn} (nil))

(insn 21 3 8 2 arch/arm/kernel/traps.c:708 (set (reg:SI 1 r1)
        (reg/v/f:SI 2 r2 [orig:136 regs ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 8 21 20 2 arch/arm/kernel/traps.c:691 (set (reg/v:SI 14 lr [orig:133 addr ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:136 regs ] [136])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (nil)))

(insn 20 8 22 2 arch/arm/kernel/traps.c:708 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11273e00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC30") [flags 0x82] <string_cst 0x11273e00>)
        (nil)))

(insn 22 20 35 2 arch/arm/kernel/traps.c:708 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 35 22 14 2 arch/arm/kernel/traps.c:705 (set (reg:SI 12 ip [139])
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196609 [0x30001])
        (nil)))

(insn 14 35 11 2 arch/arm/kernel/traps.c:705 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(insn 11 14 15 2 arch/arm/kernel/traps.c:704 (set (reg:SI 12 ip [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 15 11 19 2 arch/arm/kernel/traps.c:706 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 14 lr [orig:133 addr ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 19 15 34 2 arch/arm/kernel/traps.c:708 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 19 10 2 arch/arm/kernel/traps.c:703 (set (reg:SI 14 lr [137])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 10 34 12 2 arch/arm/kernel/traps.c:703 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
        (reg:SI 14 lr [137])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 12 10 24 2 arch/arm/kernel/traps.c:704 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
        (reg:SI 12 ip [138])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 24 12 33 2 arch/arm/kernel/traps.c:708 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 24 36 NOTE_INSN_DELETED)

(note 36 33 0 NOTE_INSN_DELETED)


;; Function bad_syscall (bad_syscall)[0:1071]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 88.
verify found no changes in insn with uid = 88.
deleting insn with uid = 32.
scanning new insn with uid = 89.
verify found no changes in insn with uid = 89.
deleting insn with uid = 36.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a4 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a2(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a13(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a2(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a13(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 76(l0): point = 0
   Insn 70(l0): point = 2
   Insn 63(l0): point = 5
   Insn 62(l0): point = 7
   Insn 35(l0): point = 9
   Insn 33(l0): point = 11
   Insn 88(l0): point = 13
   Insn 57(l0): point = 15
   Insn 53(l0): point = 17
   Insn 34(l0): point = 19
   Insn 37(l0): point = 21
   Insn 89(l0): point = 23
   Insn 52(l0): point = 25
   Insn 60(l0): point = 27
   Insn 58(l0): point = 29
   Insn 81(l0): point = 31
   Insn 51(l0): point = 33
   Insn 80(l0): point = 35
   Insn 59(l0): point = 37
   Insn 61(l0): point = 39
   Insn 38(l0): point = 41
   Insn 82(l0): point = 44
   Insn 27(l0): point = 46
   Insn 26(l0): point = 48
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 20(l0): point = 55
   Insn 19(l0): point = 57
   Insn 15(l0): point = 60
   Insn 14(l0): point = 62
   Insn 13(l0): point = 64
   Insn 11(l0): point = 66
   Insn 3(l0): point = 68
   Insn 86(l0): point = 70
   Insn 2(l0): point = 72
   Insn 85(l0): point = 74
 a0(r136): [44..46] [3..5]
 a1(r140): [47..68] [6..43]
 a2(r150): [10..19]
 a3(r149): [12..13]
 a4(r155): [18..25]
 a5(r151): [22..23]
 a6(r154): [26..33]
 a7(r135): [26..31]
 a8(r153): [36..41]
 a9(r139): [51..72] [40..43]
 a10(r137): [49..55]
 a11(r148): [56..57]
 a12(r141): [58..74]
 a13(r144): [63..64]
 a14(r143): [65..66]
Compressing live ranges: from 77 to 34 - 44%
Ranges after the compression:
 a0(r136): [18..19] [0..1]
 a1(r140): [20..31] [2..17]
 a2(r150): [3..7]
 a3(r149): [4..5]
 a4(r155): [6..10]
 a5(r151): [8..9]
 a6(r154): [11..13]
 a7(r135): [11..12]
 a8(r153): [14..16]
 a9(r139): [22..32] [15..17]
 a10(r137): [21..23]
 a11(r148): [24..25]
 a12(r141): [26..33]
 a13(r144): [27..28]
 a14(r143): [29..30]
+++Allocating 120 bytes for conflict table (uncompressed size 120)
;; a0(r136,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r140,l0) conflicts: a2(r150,l0) a3(r149,l0) a4(r155,l0) a5(r151,l0) a7(r135,l0) a6(r154,l0) a8(r153,l0) a9(r139,l0) a10(r137,l0) a11(r148,l0) a12(r141,l0) a13(r144,l0) a14(r143,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r150,l0) conflicts: a1(r140,l0) a3(r149,l0) a4(r155,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a3(r149,l0) conflicts: a1(r140,l0) a2(r150,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a4(r155,l0) conflicts: a1(r140,l0) a2(r150,l0) a5(r151,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a5(r151,l0) conflicts: a1(r140,l0) a4(r155,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a6(r154,l0) conflicts: a1(r140,l0) a7(r135,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a7(r135,l0) conflicts: a1(r140,l0) a6(r154,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a8(r153,l0) conflicts: a1(r140,l0) a9(r139,l0)
;;     total conflict hard regs: 1 3
;;     conflict hard regs: 1 3
;; a9(r139,l0) conflicts: a1(r140,l0) a8(r153,l0) a10(r137,l0) a11(r148,l0) a12(r141,l0) a13(r144,l0) a14(r143,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a10(r137,l0) conflicts: a1(r140,l0) a9(r139,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a11(r148,l0) conflicts: a1(r140,l0) a9(r139,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a12(r141,l0) conflicts: a1(r140,l0) a9(r139,l0) a13(r144,l0) a14(r143,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a13(r144,l0) conflicts: a1(r140,l0) a9(r139,l0) a12(r141,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a14(r143,l0) conflicts: a1(r140,l0) a9(r139,l0) a12(r141,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1

  cp0:a4(r155)<->a7(r135)@125:shuffle
  cp1:a4(r155)<->a6(r154)@125:shuffle
  regions=1, blocks=7, points=34
    allocnos=15, copies=2, conflicts=0, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r136 1r140 2r150 3r149 4r155 5r151 6r154 7r135 8r153 9r139 10r137 11r148 12r141 13r144 14r143
    modified regnos: 135 136 137 139 140 141 143 144 148 149 150 151 153 154 155
    border:
    Pressure: GENERAL_REGS=7
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 5 regs less
    Reg 150 of GENERAL_REGS has 4 regs less
    Reg 149 of GENERAL_REGS has 4 regs less
    Reg 155 of GENERAL_REGS has 4 regs less
    Reg 151 of GENERAL_REGS has 4 regs less
    Reg 154 of GENERAL_REGS has 4 regs less
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 153 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 143 of GENERAL_REGS has 2 regs less
      Pushing a0(r136,l0)
      Pushing a14(r143,l0)
      Pushing a13(r144,l0)
      Pushing a11(r148,l0)
      Pushing a9(r139,l0)
      Pushing a8(r153,l0)
      Pushing a12(r141,l0)
      Pushing a10(r137,l0)
      Pushing a7(r135,l0)
      Pushing a6(r154,l0)
      Pushing a5(r151,l0)
      Pushing a4(r155,l0)
      Pushing a3(r149,l0)
      Pushing a2(r150,l0)
      Pushing a1(r140,l0)
      Popping a1(r140,l0)  -- assign reg 4
      Popping a2(r150,l0)  -- assign reg 12
      Popping a3(r149,l0)  -- assign reg 14
      Popping a4(r155,l0)  -- assign reg 14
      Popping a5(r151,l0)  -- assign reg 12
      Popping a6(r154,l0)  -- assign reg 12
      Popping a7(r135,l0)  -- assign reg 14
      Popping a10(r137,l0)  -- assign reg 2
      Popping a12(r141,l0)  -- assign reg 2
      Popping a8(r153,l0)  -- assign reg 2
      Popping a9(r139,l0)  -- assign reg 3
      Popping a11(r148,l0)  -- assign reg 2
      Popping a13(r144,l0)  -- assign reg 12
      Popping a14(r143,l0)  -- assign reg 12
      Popping a0(r136,l0)  -- assign reg 0
Disposition:
    7:r135 l0    14    0:r136 l0     0   10:r137 l0     2    9:r139 l0     3
    1:r140 l0     4   12:r141 l0     2   14:r143 l0    12   13:r144 l0    12
   11:r148 l0     2    3:r149 l0    14    2:r150 l0    12    5:r151 l0    12
    8:r153 l0     2    6:r154 l0    12    4:r155 l0    14
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=85, live_throughout: 0, 1, 13, dead_or_set: 141
insn=2, live_throughout: 0, 1, 13, 141, dead_or_set: 139
insn=86, live_throughout: 0, 1, 13, 139, dead_or_set: 141
insn=3, live_throughout: 0, 1, 13, 139, 141, dead_or_set: 140
insn=11, live_throughout: 0, 1, 13, 139, 140, 141, dead_or_set: 143
insn=13, live_throughout: 0, 1, 13, 139, 140, 141, dead_or_set: 143, 144
insn=14, live_throughout: 0, 1, 13, 139, 140, 141, dead_or_set: 144
insn=15, live_throughout: 0, 1, 13, 139, 140, 141, dead_or_set: 
insn=19, live_throughout: 0, 1, 13, 139, 140, dead_or_set: 141, 148
insn=20, live_throughout: 0, 1, 13, 139, 140, dead_or_set: 137, 148
insn=21, live_throughout: 0, 1, 13, 137, 139, 140, dead_or_set: 
insn=22, live_throughout: 0, 1, 13, 137, 139, 140, dead_or_set: 
insn=26, live_throughout: 13, 140, dead_or_set: 0, 1, 14, 137
insn=27, live_throughout: 13, 14, dead_or_set: 136, 140
insn=82, live_throughout: 13, 14, 136, dead_or_set: 
insn=30, live_throughout: 13, 139, 140, dead_or_set: 
insn=38, live_throughout: 13, 139, 140, dead_or_set: 153
insn=61, live_throughout: 13, 140, 153, dead_or_set: 3, 139
insn=59, live_throughout: 3, 13, 140, 153, dead_or_set: 1
insn=80, live_throughout: 1, 3, 13, 140, dead_or_set: 153
insn=51, live_throughout: 1, 3, 13, 24, 140, dead_or_set: 154
insn=81, live_throughout: 1, 3, 13, 140, 154, dead_or_set: 135
insn=58, live_throughout: 1, 3, 13, 135, 140, 154, dead_or_set: 0
insn=60, live_throughout: 0, 1, 3, 13, 135, 140, 154, dead_or_set: 2
insn=52, live_throughout: 0, 1, 2, 3, 13, 140, dead_or_set: 135, 154, 155
insn=89, live_throughout: 0, 1, 2, 3, 13, 140, 155, dead_or_set: 151
insn=37, live_throughout: 0, 1, 2, 3, 13, 140, 155, dead_or_set: 151
insn=34, live_throughout: 0, 1, 2, 3, 13, 140, 155, dead_or_set: 150
insn=53, live_throughout: 0, 1, 2, 3, 13, 140, 150, dead_or_set: 155
insn=57, live_throughout: 0, 1, 2, 3, 13, 140, 150, dead_or_set: 
insn=88, live_throughout: 0, 1, 2, 3, 13, 140, 150, dead_or_set: 149
insn=33, live_throughout: 0, 1, 2, 3, 13, 140, 150, dead_or_set: 149
insn=35, live_throughout: 0, 1, 2, 3, 13, 140, dead_or_set: 150
insn=62, live_throughout: 13, 140, dead_or_set: 0, 1, 2, 3, 14
insn=63, live_throughout: 13, 14, dead_or_set: 136, 140
insn=64, live_throughout: 13, 14, 136, dead_or_set: 
insn=70, live_throughout: 13, 14, dead_or_set: 0, 136
insn=76, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 143: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 88 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 89 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 53 (nil))
changing reg in insn 81
changing reg in insn 52
changing reg in insn 63
changing reg in insn 27
changing reg in insn 70
changing reg in insn 20
changing reg in insn 26
changing reg in insn 21
changing reg in insn 2
changing reg in insn 61
changing reg in insn 3
changing reg in insn 63
changing reg in insn 59
changing reg in insn 51
changing reg in insn 38
changing reg in insn 27
changing reg in insn 51
changing reg in insn 38
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
changing reg in insn 19
changing reg in insn 11
changing reg in insn 11
changing reg in insn 11
changing reg in insn 13
changing reg in insn 13
changing reg in insn 14
changing reg in insn 19
changing reg in insn 20
changing reg in insn 88
changing reg in insn 33
changing reg in insn 34
changing reg in insn 57
changing reg in insn 35
changing reg in insn 89
changing reg in insn 37
changing reg in insn 38
changing reg in insn 80
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
Spilling for insn 85.
Using reg 3 for reload 0
Spilling for insn 37.
Spilling for insn 53.
Spilling for insn 57.
Spilling for insn 33.
Spilling for insn 35.

Reloads for insn # 85
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 37
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])

Reloads for insn # 53
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])

Reloads for insn # 57
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 33
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])

Reloads for insn # 35
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
deleting insn with uid = 61.
deleting insn with uid = 70.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 26.
deleting insn with uid = 26.
verify found no changes in insn with uid = 62.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


bad_syscall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={4d,3u} r2={9d,8u,1d} r3={5d,2u} r4={1d,5u,2d} r12={8d,6u} r13={1d,15u} r14={6d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r25={1d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 320{265d,51u,4e} in 35{33 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 4 12 2 NOTE_INSN_DELETED)

(note 12 9 91 2 NOTE_INSN_DELETED)

(insn 91 12 85 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 85 91 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2 [141])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 85 86 2 arch/arm/kernel/traps.c:423 (set (reg/v:SI 3 r3 [orig:139 n ] [139])
        (reg:SI 0 r0 [ n ])) 167 {*arm_movsi_insn} (nil))

(insn 86 2 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2 [141])
        (and:SI (reg:SI 2 r2 [141])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 86 11 2 arch/arm/kernel/traps.c:423 (set (reg/v/f:SI 4 r4 [orig:140 regs ] [140])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 11 3 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 12 ip [orig:143 <variable>.task ] [143])
        (mem/s/f/j:SI (plus:SI (reg:SI 2 r2 [141])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg:SI 2 r2 [141])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])
        (nil)))

(insn 13 11 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 12 ip [144])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 12 ip [orig:143 <variable>.task ] [143])
                    (const_int 524 [0x20c])) [0 <variable>.personality+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 16 20 3 arch/arm/kernel/traps.c:428 (set (reg/f:SI 2 r2 [orig:148 <variable>.exec_domain ] [148])
        (mem/s/f/j:SI (plus:SI (reg:SI 2 r2 [141])
                (const_int 16 [0x10])) [0 <variable>.exec_domain+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 3 arch/arm/kernel/traps.c:428 (set (reg/f:SI 2 r2 [orig:137 D.18616 ] [137])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.exec_domain ] [148])
                (const_int 4 [0x4])) [0 <variable>.handler+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/kernel/traps.c:427 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:137 D.18616 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 3 arch/arm/kernel/traps.c:427 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4032 [0xfc0])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  4 [59.7%]  (fallthru)
;; Succ edge  5 [40.3%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [59.7%]  (fallthru)
(note 23 22 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 26 23 27 4 arch/arm/kernel/traps.c:429 (parallel [
            (call (mem:SI (reg/f:SI 2 r2 [orig:137 D.18616 ] [137]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 27 26 82 4 arch/arm/kernel/traps.c:430 (set (reg:SI 0 r0 [orig:136 D.18619 ] [136])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 regs ] [140]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 82 27 83 4 arch/arm/kernel/traps.c:430 (set (pc)
        (label_ref 64)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 83 82 30)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [40.3%] 
(code_label 30 83 31 5 112 "" [2 uses])

(note 31 30 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 39 31 55 5 NOTE_INSN_DELETED)

(note 55 39 38 5 NOTE_INSN_DELETED)

(insn 38 55 59 5 arch/arm/kernel/traps.c:445 (set (reg:SI 2 r2 [orig:153 <variable>.uregs+64 ] [153])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 regs ] [140])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 regs ] [140])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 59 38 80 5 arch/arm/kernel/traps.c:447 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:140 regs ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 80 59 51 5 arch/arm/kernel/traps.c:444 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:153 <variable>.uregs+64 ] [153])
                (const_int 1 [0x1])
                (const_int 5 [0x5]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 51 80 81 5 arch/arm/kernel/traps.c:444 discrim 3 (set (reg:SI 12 ip [orig:154 <variable>.uregs+60 ] [154])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 regs ] [140])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:140 regs ] [140])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 81 51 58 5 arch/arm/kernel/traps.c:444 discrim 2 (set (reg:SI 14 lr [orig:135 iftmp.302 ] [135])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int -2 [0xfffffffffffffffe])
            (const_int -4 [0xfffffffffffffffc]))) 240 {*movsicc_insn} (nil))

(insn 58 81 60 5 arch/arm/kernel/traps.c:447 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11300840>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC31") [flags 0x82] <string_cst 0x11300840>)
        (nil)))

(insn 60 58 52 5 arch/arm/kernel/traps.c:447 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 52 60 89 5 arch/arm/kernel/traps.c:444 discrim 3 (set (reg:SI 14 lr [155])
        (plus:SI (reg:SI 14 lr [orig:135 iftmp.302 ] [135])
            (reg:SI 12 ip [orig:154 <variable>.uregs+60 ] [154]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (nil)))

(insn 89 52 37 5 arch/arm/kernel/traps.c:443 (set (reg:SI 12 ip [151])
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196612 [0x30004])
        (nil)))

(insn 37 89 34 5 arch/arm/kernel/traps.c:443 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
        (reg:SI 12 ip [151])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196612 [0x30004])
        (nil)))

(insn 34 37 53 5 arch/arm/kernel/traps.c:442 (set (reg:SI 12 ip [150])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 53 34 57 5 arch/arm/kernel/traps.c:444 discrim 3 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 14 lr [155])) 167 {*arm_movsi_insn} (nil))

(insn 57 53 88 5 arch/arm/kernel/traps.c:447 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 88 57 33 5 arch/arm/kernel/traps.c:441 (set (reg:SI 14 lr [149])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 33 88 35 5 arch/arm/kernel/traps.c:441 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
        (reg:SI 14 lr [149])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 35 33 62 5 arch/arm/kernel/traps.c:442 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
        (reg:SI 12 ip [150])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 62 35 63 5 arch/arm/kernel/traps.c:447 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 63 62 64 5 arch/arm/kernel/traps.c:449 (set (reg:SI 0 r0 [orig:136 D.18619 ] [136])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:140 regs ] [140]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 64 63 65 6 113 "" [1 uses])

(note 65 64 76 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 76 65 87 6 arch/arm/kernel/traps.c:450 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 87 76 90 NOTE_INSN_DELETED)

(note 90 87 0 NOTE_INSN_DELETED)


;; Function arm_syscall (arm_syscall)[0:1073]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 277.
verify found no changes in insn with uid = 277.
deleting insn with uid = 196.
scanning new insn with uid = 278.
verify found no changes in insn with uid = 278.
deleting insn with uid = 32.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 41 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 42 (  1.9)

Pass 0 for finding allocno costs

    a3 (r207,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r206,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r190,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a1(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:250000
  a8(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a10(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a14(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a23(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a29(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a30(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a34(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a35(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r165,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a38(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a40(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r163,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a42(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a43(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a44(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r207: preferred GENERAL_REGS, alternative NO_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a1(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:250000
  a8(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a10(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r142,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a14(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r190,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a20(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a23(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r178,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a29(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a30(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a34(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a35(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r165,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a38(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a40(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r163,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a42(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a43(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a44(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 236(l0): point = 0
   Insn 230(l0): point = 2
   Insn 223(l0): point = 5
   Insn 222(l0): point = 7
   Insn 217(l0): point = 9
   Insn 195(l0): point = 11
   Insn 193(l0): point = 13
   Insn 192(l0): point = 15
   Insn 213(l0): point = 17
   Insn 197(l0): point = 19
   Insn 277(l0): point = 21
   Insn 212(l0): point = 23
   Insn 220(l0): point = 25
   Insn 218(l0): point = 27
   Insn 194(l0): point = 29
   Insn 243(l0): point = 31
   Insn 211(l0): point = 33
   Insn 242(l0): point = 35
   Insn 221(l0): point = 37
   Insn 219(l0): point = 39
   Insn 198(l0): point = 41
   Insn 262(l0): point = 44
   Insn 187(l0): point = 46
   Insn 185(l0): point = 49
   Insn 184(l0): point = 51
   Insn 260(l0): point = 54
   Insn 178(l0): point = 56
   Insn 177(l0): point = 58
   Insn 175(l0): point = 60
   Insn 266(l0): point = 62
   Insn 174(l0): point = 64
   Insn 265(l0): point = 66
   Insn 258(l0): point = 69
   Insn 166(l0): point = 71
   Insn 165(l0): point = 73
   Insn 167(l0): point = 75
   Insn 164(l0): point = 77
   Insn 162(l0): point = 80
   Insn 161(l0): point = 82
   Insn 159(l0): point = 84
   Insn 158(l0): point = 86
   Insn 256(l0): point = 89
   Insn 152(l0): point = 91
   Insn 151(l0): point = 93
   Insn 153(l0): point = 95
   Insn 150(l0): point = 97
   Insn 148(l0): point = 100
   Insn 147(l0): point = 102
   Insn 145(l0): point = 104
   Insn 144(l0): point = 106
   Insn 254(l0): point = 109
   Insn 139(l0): point = 111
   Insn 138(l0): point = 113
   Insn 137(l0): point = 115
   Insn 252(l0): point = 118
   Insn 132(l0): point = 120
   Insn 131(l0): point = 122
   Insn 120(l0): point = 124
   Insn 270(l0): point = 126
   Insn 268(l0): point = 128
   Insn 269(l0): point = 130
   Insn 267(l0): point = 132
   Insn 125(l0): point = 134
   Insn 121(l0): point = 136
   Insn 124(l0): point = 138
   Insn 119(l0): point = 140
   Insn 117(l0): point = 142
   Insn 118(l0): point = 144
   Insn 116(l0): point = 146
   Insn 114(l0): point = 149
   Insn 113(l0): point = 151
   Insn 112(l0): point = 153
   Insn 110(l0): point = 156
   Insn 109(l0): point = 158
   Insn 107(l0): point = 160
   Insn 106(l0): point = 162
   Insn 105(l0): point = 164
   Insn 104(l0): point = 166
   Insn 103(l0): point = 168
   Insn 102(l0): point = 170
   Insn 250(l0): point = 173
   Insn 97(l0): point = 175
   Insn 95(l0): point = 178
   Insn 83(l0): point = 180
   Insn 94(l0): point = 182
   Insn 82(l0): point = 184
   Insn 78(l0): point = 186
   Insn 77(l0): point = 188
   Insn 272(l0): point = 190
   Insn 84(l0): point = 192
   Insn 271(l0): point = 194
   Insn 248(l0): point = 197
   Insn 72(l0): point = 199
   Insn 71(l0): point = 201
   Insn 65(l0): point = 203
   Insn 64(l0): point = 205
   Insn 69(l0): point = 207
   Insn 241(l0): point = 209
   Insn 70(l0): point = 211
   Insn 240(l0): point = 213
   Insn 50(l0): point = 215
   Insn 274(l0): point = 217
   Insn 273(l0): point = 219
   Insn 51(l0): point = 221
   Insn 246(l0): point = 224
   Insn 45(l0): point = 226
   Insn 44(l0): point = 228
   Insn 39(l0): point = 230
   Insn 35(l0): point = 232
   Insn 31(l0): point = 234
   Insn 29(l0): point = 236
   Insn 28(l0): point = 238
   Insn 33(l0): point = 240
   Insn 278(l0): point = 242
   Insn 43(l0): point = 244
   Insn 42(l0): point = 246
   Insn 40(l0): point = 248
   Insn 41(l0): point = 250
   Insn 30(l0): point = 252
   Insn 22(l0): point = 255
   Insn 21(l0): point = 257
   Insn 244(l0): point = 260
   Insn 15(l0): point = 262
   Insn 14(l0): point = 264
   Insn 10(l0): point = 267
   Insn 9(l0): point = 269
   Insn 8(l0): point = 271
   Insn 7(l0): point = 273
   Insn 3(l0): point = 275
   Insn 2(l0): point = 277
 a0(r147): [260..262] [224..226] [197..199] [173..175] [118..120] [109..111] [89..95] [69..75] [54..56] [44..46] [3..5]
 a1(r202): [6..29]
 a2(r201): [14..15]
 a3(r207): [18..23]
 a4(r203): [20..21]
 a5(r206): [24..33]
 a6(r143): [24..31]
 a7(r150): [267..275] [251..259] [200..223] [187..196] [92..108] [72..88] [65..68] [49..53] [34..43]
 a8(r205): [36..41]
 a9(r149): [267..277] [255..259] [100..108] [80..88] [49..53] [38..43]
 a10(r146): [255..257] [52..53]
 a11(r198): [59..64]
 a12(r196): [61..66]
 a13(r142): [267..273] [255..259] [67..68]
 a14(r195): [72..73]
 a15(r194): [74..77]
 a16(r193): [83..84]
 a17(r191): [85..86]
 a18(r190): [92..93]
 a19(r189): [94..97]
 a20(r188): [103..104]
 a21(r186): [105..106]
 a22(r134): [145..170] [116..117]
 a23(r175): [178..182] [121..172]
 a24(r177): [123..124]
 a25(r181): [131..134]
 a26(r178): [133..136]
 a27(r182): [135..138]
 a28(r139): [178..188] [137..172]
 a29(r135): [137..153]
 a30(r133): [139..142]
 a31(r176): [143..146]
 a32(r140): [178..186] [143..172]
 a33(r137): [147..158]
 a34(r136): [178..180] [165..172]
 a35(r167): [181..184]
 a36(r169): [183..192]
 a37(r165): [185..194]
 a38(r162): [204..205]
 a39(r144): [206..209]
 a40(r145): [206..215]
 a41(r163): [208..219]
 a42(r161): [214..221]
 a43(r154): [227..252]
 a44(r153): [237..238]
 a45(r155): [241..242]
 a46(r151): [270..271]
Compressing live ranges: from 280 to 131 - 46%
Ranges after the compression:
 a0(r147): [123..124] [111..112] [98..99] [83..84] [60..61] [56..57] [44..48] [32..36] [23..24] [18..19] [0..1]
 a1(r202): [2..10]
 a2(r201): [3..4]
 a3(r207): [5..8]
 a4(r203): [6..7]
 a5(r206): [9..12]
 a6(r143): [9..11]
 a7(r150): [125..129] [118..122] [100..110] [93..97] [45..55] [33..43] [28..31] [20..22] [13..17]
 a8(r205): [14..16]
 a9(r149): [125..130] [120..122] [50..55] [38..43] [20..22] [15..17]
 a10(r146): [120..121] [21..22]
 a11(r198): [25..27]
 a12(r196): [26..29]
 a13(r142): [125..128] [120..122] [30..31]
 a14(r195): [33..34]
 a15(r194): [35..37]
 a16(r193): [39..40]
 a17(r191): [41..42]
 a18(r190): [45..46]
 a19(r189): [47..49]
 a20(r188): [51..52]
 a21(r186): [53..54]
 a22(r134): [75..81] [58..59]
 a23(r175): [85..88] [62..82]
 a24(r177): [63..64]
 a25(r181): [65..67]
 a26(r178): [66..69]
 a27(r182): [68..71]
 a28(r139): [85..94] [70..82]
 a29(r135): [70..78]
 a30(r133): [72..73]
 a31(r176): [74..76]
 a32(r140): [85..92] [74..82]
 a33(r137): [77..79]
 a34(r136): [85..86] [80..82]
 a35(r167): [87..90]
 a36(r169): [89..95]
 a37(r165): [91..96]
 a38(r162): [101..102]
 a39(r144): [103..105]
 a40(r145): [103..107]
 a41(r163): [104..108]
 a42(r161): [106..109]
 a43(r154): [113..119]
 a44(r153): [114..115]
 a45(r155): [116..117]
 a46(r151): [126..127]
+++Allocating 376 bytes for conflict table (uncompressed size 376)
;; a0(r147,l0) conflicts: a7(r150,l0) a14(r195,l0) a15(r194,l0) a18(r190,l0) a19(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r202,l0) conflicts: a2(r201,l0) a3(r207,l0) a4(r203,l0) a6(r143,l0) a5(r206,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a2(r201,l0) conflicts: a1(r202,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a3(r207,l0) conflicts: a1(r202,l0) a4(r203,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a4(r203,l0) conflicts: a1(r202,l0) a3(r207,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a5(r206,l0) conflicts: a1(r202,l0) a6(r143,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a6(r143,l0) conflicts: a1(r202,l0) a5(r206,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a7(r150,l0) conflicts: a0(r147,l0) a8(r205,l0) a9(r149,l0) a10(r146,l0) a12(r196,l0) a13(r142,l0) a14(r195,l0) a15(r194,l0) a16(r193,l0) a17(r191,l0) a18(r190,l0) a19(r189,l0) a20(r188,l0) a21(r186,l0) a28(r139,l0) a36(r169,l0) a37(r165,l0) a38(r162,l0) a39(r144,l0) a40(r145,l0) a41(r163,l0) a42(r161,l0) a43(r154,l0) a46(r151,l0)
;;     total conflict hard regs: 0 1 3 14
;;     conflict hard regs: 0 1 3 14
;; a8(r205,l0) conflicts: a7(r150,l0) a9(r149,l0)
;;     total conflict hard regs: 1 3
;;     conflict hard regs: 1 3
;; a9(r149,l0) conflicts: a7(r150,l0) a8(r205,l0) a10(r146,l0) a13(r142,l0) a16(r193,l0) a17(r191,l0) a20(r188,l0) a21(r186,l0) a46(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a10(r146,l0) conflicts: a7(r150,l0) a9(r149,l0) a13(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r198,l0) conflicts: a12(r196,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r196,l0) conflicts: a7(r150,l0) a11(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r142,l0) conflicts: a7(r150,l0) a9(r149,l0) a10(r146,l0) a46(r151,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a14(r195,l0) conflicts: a0(r147,l0) a7(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r194,l0) conflicts: a0(r147,l0) a7(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r193,l0) conflicts: a7(r150,l0) a9(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r191,l0) conflicts: a7(r150,l0) a9(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r190,l0) conflicts: a0(r147,l0) a7(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r189,l0) conflicts: a0(r147,l0) a7(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r188,l0) conflicts: a7(r150,l0) a9(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r186,l0) conflicts: a7(r150,l0) a9(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r134,l0) conflicts: a23(r175,l0) a29(r135,l0) a28(r139,l0) a31(r176,l0) a32(r140,l0) a33(r137,l0) a34(r136,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a23(r175,l0) conflicts: a22(r134,l0) a24(r177,l0) a25(r181,l0) a26(r178,l0) a27(r182,l0) a29(r135,l0) a28(r139,l0) a30(r133,l0) a31(r176,l0) a32(r140,l0) a33(r137,l0) a34(r136,l0) a35(r167,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a24(r177,l0) conflicts: a23(r175,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a25(r181,l0) conflicts: a23(r175,l0) a26(r178,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a26(r178,l0) conflicts: a23(r175,l0) a25(r181,l0) a27(r182,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a27(r182,l0) conflicts: a23(r175,l0) a26(r178,l0) a29(r135,l0) a28(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r139,l0) conflicts: a7(r150,l0) a22(r134,l0) a23(r175,l0) a27(r182,l0) a29(r135,l0) a30(r133,l0) a31(r176,l0) a32(r140,l0) a33(r137,l0) a34(r136,l0) a35(r167,l0) a36(r169,l0) a37(r165,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a29(r135,l0) conflicts: a22(r134,l0) a23(r175,l0) a27(r182,l0) a28(r139,l0) a30(r133,l0) a31(r176,l0) a32(r140,l0) a33(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a30(r133,l0) conflicts: a23(r175,l0) a29(r135,l0) a28(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a31(r176,l0) conflicts: a22(r134,l0) a23(r175,l0) a29(r135,l0) a28(r139,l0) a32(r140,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a32(r140,l0) conflicts: a22(r134,l0) a23(r175,l0) a29(r135,l0) a28(r139,l0) a31(r176,l0) a33(r137,l0) a34(r136,l0) a35(r167,l0) a36(r169,l0) a37(r165,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a33(r137,l0) conflicts: a22(r134,l0) a23(r175,l0) a29(r135,l0) a28(r139,l0) a32(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a34(r136,l0) conflicts: a22(r134,l0) a23(r175,l0) a28(r139,l0) a32(r140,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a35(r167,l0) conflicts: a23(r175,l0) a28(r139,l0) a32(r140,l0) a36(r169,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a36(r169,l0) conflicts: a7(r150,l0) a28(r139,l0) a32(r140,l0) a35(r167,l0) a37(r165,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a37(r165,l0) conflicts: a7(r150,l0) a28(r139,l0) a32(r140,l0) a36(r169,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a38(r162,l0) conflicts: a7(r150,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a39(r144,l0) conflicts: a7(r150,l0) a40(r145,l0) a41(r163,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a40(r145,l0) conflicts: a7(r150,l0) a39(r144,l0) a41(r163,l0) a42(r161,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a41(r163,l0) conflicts: a7(r150,l0) a39(r144,l0) a40(r145,l0) a42(r161,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a42(r161,l0) conflicts: a7(r150,l0) a40(r145,l0) a41(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a43(r154,l0) conflicts: a7(r150,l0) a44(r153,l0) a45(r155,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a44(r153,l0) conflicts: a43(r154,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a45(r155,l0) conflicts: a43(r154,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a46(r151,l0) conflicts: a7(r150,l0) a9(r149,l0) a13(r142,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a3(r207)<->a6(r143)@125:shuffle
  cp1:a3(r207)<->a5(r206)@125:shuffle
  cp2:a0(r147)<->a1(r202)@1000:move
  cp3:a12(r196)<->a13(r142)@125:shuffle
  cp4:a14(r195)<->a15(r194)@125:shuffle
  cp5:a18(r190)<->a19(r189)@125:shuffle
  cp6:a30(r133)<->a32(r140)@125:shuffle
  cp7:a30(r133)<->a31(r176)@125:shuffle
  cp8:a27(r182)<->a30(r133)@125:shuffle
  cp9:a26(r178)<->a29(r135)@125:shuffle
  cp10:a26(r178)<->a28(r139)@125:shuffle
  cp11:a25(r181)<->a27(r182)@125:shuffle
  cp12:a0(r147)<->a23(r175)@1000:move
  cp13:a23(r175)<->a36(r169)@125:shuffle
  cp14:a38(r162)<->a40(r145)@125:shuffle
  cp15:a38(r162)<->a39(r144)@125:shuffle
  cp16:a0(r147)<->a43(r154)@1000:move
  regions=1, blocks=22, points=131
    allocnos=47, copies=17, conflicts=6, ranges=78

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r147 1r202 2r201 3r207 4r203 5r206 6r143 7r150 8r205 9r149 10r146 11r198 12r196 13r142 14r195 15r194 16r193 17r191 18r190 19r189 20r188 21r186 22r134 23r175 24r177 25r181 26r178 27r182 28r139 29r135 30r133 31r176 32r140 33r137 34r136 35r167 36r169 37r165 38r162 39r144 40r145 41r163 42r161 43r154 44r153 45r155 46r151
    modified regnos: 133 134 135 136 137 139 140 142 143 144 145 146 147 149 150 151 153 154 155 161 162 163 165 167 169 175 176 177 178 181 182 186 188 189 190 191 193 194 195 196 198 201 202 203 205 206 207
    border:
    Pressure: GENERAL_REGS=7
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 202 of GENERAL_REGS has 5 regs less
    Reg 201 of GENERAL_REGS has 4 regs less
    Reg 207 of GENERAL_REGS has 4 regs less
    Reg 203 of GENERAL_REGS has 4 regs less
    Reg 206 of GENERAL_REGS has 4 regs less
    Reg 143 of GENERAL_REGS has 4 regs less
    Reg 150 of GENERAL_REGS has 4 regs less
    Reg 205 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 3 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 196 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 3 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 194 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 190 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
    Reg 186 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 175 of GENERAL_REGS has 3 regs less
    Reg 177 of GENERAL_REGS has 3 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 5 regs less
    Reg 153 of GENERAL_REGS has 4 regs less
    Reg 155 of GENERAL_REGS has 4 regs less
    Reg 151 of GENERAL_REGS has 3 regs less
      Pushing a42(r161,l0)
      Pushing a27(r182,l0)
      Pushing a26(r178,l0)
      Pushing a33(r137,l0)
      Pushing a35(r167,l0)
      Pushing a31(r176,l0)
      Pushing a25(r181,l0)
      Pushing a21(r186,l0)
      Pushing a20(r188,l0)
      Pushing a19(r189,l0)
      Pushing a18(r190,l0)
      Pushing a17(r191,l0)
      Pushing a16(r193,l0)
      Pushing a15(r194,l0)
      Pushing a14(r195,l0)
      Pushing a36(r169,l0)
      Pushing a11(r198,l0)
      Pushing a41(r163,l0)
      Pushing a37(r165,l0)
      Pushing a12(r196,l0)
      Pushing a10(r146,l0)
      Pushing a0(r147,l0)
      Pushing a40(r145,l0)
      Pushing a39(r144,l0)
      Pushing a38(r162,l0)
      Pushing a30(r133,l0)
      Pushing a8(r205,l0)
      Pushing a34(r136,l0)
      Pushing a29(r135,l0)
      Pushing a46(r151,l0)
      Pushing a24(r177,l0)
      Pushing a23(r175,l0)
      Pushing a13(r142,l0)
      Pushing a22(r134,l0)
      Pushing a9(r149,l0)
      Pushing a32(r140,l0)
      Pushing a28(r139,l0)
      Pushing a45(r155,l0)
      Pushing a44(r153,l0)
      Pushing a6(r143,l0)
      Pushing a5(r206,l0)
      Pushing a4(r203,l0)
      Pushing a3(r207,l0)
      Pushing a2(r201,l0)
      Pushing a7(r150,l0)
      Pushing a1(r202,l0)
      Pushing a43(r154,l0)
      Popping a43(r154,l0)  -- assign reg 4
      Popping a1(r202,l0)  -- assign reg 4
      Popping a7(r150,l0)  -- assign reg 5
      Popping a2(r201,l0)  -- assign reg 12
      Popping a3(r207,l0)  -- assign reg 12
      Popping a4(r203,l0)  -- assign reg 14
      Popping a5(r206,l0)  -- assign reg 12
      Popping a6(r143,l0)  -- assign reg 14
      Popping a44(r153,l0)  -- assign reg 12
      Popping a45(r155,l0)  -- assign reg 12
      Popping a28(r139,l0)  -- assign reg 6
      Popping a32(r140,l0)  -- assign reg 5
      Popping a9(r149,l0)  -- assign reg 3
      Popping a22(r134,l0)  -- assign reg 7
      Popping a13(r142,l0)  -- assign reg 2
      Popping a23(r175,l0)  -- assign reg 4
      Popping a24(r177,l0)  -- assign reg 3
      Popping a46(r151,l0)  -- assign reg 12
      Popping a29(r135,l0)  -- assign reg 8
      Popping a34(r136,l0)  -- assign reg 8
      Popping a8(r205,l0)  -- assign reg 2
      Popping a30(r133,l0)  -- assign reg 5
      Popping a38(r162,l0)  -- assign reg 3
      Popping a39(r144,l0)  -- assign reg 3
      Popping a40(r145,l0)  -- assign reg 2
      Popping a0(r147,l0)  -- assign reg 0
      Popping a10(r146,l0)  -- assign reg 1
      Popping a12(r196,l0)  -- assign reg 2
      Popping a37(r165,l0)  -- assign reg 3
      Popping a41(r163,l0)  -- assign reg 0
      Popping a11(r198,l0)  -- assign reg 3
      Popping a36(r169,l0)  -- assign reg 4
      Popping a14(r195,l0)  -- assign reg 3
      Popping a15(r194,l0)  -- assign reg 3
      Popping a16(r193,l0)  -- assign reg 2
      Popping a17(r191,l0)  -- assign reg 2
      Popping a18(r190,l0)  -- assign reg 3
      Popping a19(r189,l0)  -- assign reg 3
      Popping a20(r188,l0)  -- assign reg 2
      Popping a21(r186,l0)  -- assign reg 2
      Popping a25(r181,l0)  -- assign reg 1
      Popping a31(r176,l0)  -- assign reg 3
      Popping a35(r167,l0)  -- assign reg 3
      Popping a33(r137,l0)  -- assign reg 0
      Popping a26(r178,l0)  -- assign reg 6
      Popping a27(r182,l0)  -- assign reg 5
      Popping a42(r161,l0)  -- assign reg 3
Disposition:
   30:r133 l0     5   22:r134 l0     7   29:r135 l0     8   34:r136 l0     8
   33:r137 l0     0   28:r139 l0     6   32:r140 l0     5   13:r142 l0     2
    6:r143 l0    14   39:r144 l0     3   40:r145 l0     2   10:r146 l0     1
    0:r147 l0     0    9:r149 l0     3    7:r150 l0     5   46:r151 l0    12
   44:r153 l0    12   43:r154 l0     4   45:r155 l0    12   42:r161 l0     3
   38:r162 l0     3   41:r163 l0     0   37:r165 l0     3   35:r167 l0     3
   36:r169 l0     4   23:r175 l0     4   31:r176 l0     3   24:r177 l0     3
   26:r178 l0     6   25:r181 l0     1   27:r182 l0     5   21:r186 l0     2
   20:r188 l0     2   19:r189 l0     3   18:r190 l0     3   17:r191 l0     2
   16:r193 l0     2   15:r194 l0     3   14:r195 l0     3   12:r196 l0     2
   11:r198 l0     3    2:r201 l0    12    1:r202 l0     4    4:r203 l0    14
    8:r205 l0     2    5:r206 l0    12    3:r207 l0    12
New iteration of spill/restore move
+++Costs: overall -6500, reg -6500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 0, 1, 13, 14, dead_or_set: 149
insn=3, live_throughout: 0, 1, 13, 14, 149, dead_or_set: 150
insn=7, live_throughout: 0, 1, 13, 14, 149, 150, dead_or_set: 142
insn=8, live_throughout: 0, 1, 13, 14, 142, 149, 150, dead_or_set: 151
insn=9, live_throughout: 0, 1, 13, 14, 142, 149, 150, dead_or_set: 151
insn=10, live_throughout: 0, 1, 13, 14, 142, 149, 150, dead_or_set: 
insn=14, live_throughout: 13, dead_or_set: 0, 1, 14
insn=15, live_throughout: 13, 14, dead_or_set: 0, 147
insn=244, live_throughout: 13, 14, 147, dead_or_set: 
insn=18, live_throughout: 13, 14, 142, 149, 150, dead_or_set: 
insn=21, live_throughout: 13, 14, 142, 149, 150, dead_or_set: 146
insn=22, live_throughout: 13, 14, 142, 146, 149, 150, dead_or_set: 
insn=23, live_throughout: 13, 150, dead_or_set: 
insn=24, live_throughout: 13, 150, dead_or_set: 
insn=26, live_throughout: 13, 150, dead_or_set: 
insn=30, live_throughout: 13, 150, dead_or_set: 154
insn=41, live_throughout: 13, 154, dead_or_set: 1, 150
insn=40, live_throughout: 1, 13, 154, dead_or_set: 0
insn=42, live_throughout: 0, 1, 13, 154, dead_or_set: 2
insn=43, live_throughout: 0, 1, 2, 13, 154, dead_or_set: 3
insn=278, live_throughout: 0, 1, 2, 3, 13, 154, dead_or_set: 155
insn=33, live_throughout: 0, 1, 2, 3, 13, 154, dead_or_set: 155
insn=28, live_throughout: 0, 1, 2, 3, 13, 154, dead_or_set: 153
insn=29, live_throughout: 0, 1, 2, 3, 13, 154, dead_or_set: 153
insn=31, live_throughout: 0, 1, 2, 3, 13, 154, dead_or_set: 
insn=35, live_throughout: 0, 1, 2, 3, 13, 154, dead_or_set: 
insn=39, live_throughout: 0, 1, 2, 3, 13, 154, dead_or_set: 
insn=44, live_throughout: 13, 154, dead_or_set: 0, 1, 2, 3, 14
insn=45, live_throughout: 13, 14, dead_or_set: 147, 154
insn=246, live_throughout: 13, 14, 147, dead_or_set: 
insn=48, live_throughout: 13, 150, dead_or_set: 
insn=51, live_throughout: 13, 150, dead_or_set: 161
insn=273, live_throughout: 13, 150, 161, dead_or_set: 163
insn=274, live_throughout: 13, 150, 161, dead_or_set: 163
insn=50, live_throughout: 13, 150, 161, 163, dead_or_set: 145
insn=240, live_throughout: 13, 145, 150, 163, dead_or_set: 161
insn=70, live_throughout: 13, 24, 145, 150, 163, dead_or_set: 1
insn=241, live_throughout: 1, 13, 145, 150, 163, dead_or_set: 144
insn=69, live_throughout: 1, 13, 144, 145, 150, dead_or_set: 0, 163
insn=64, live_throughout: 0, 1, 13, 150, dead_or_set: 144, 145, 162
insn=65, live_throughout: 0, 1, 13, 150, dead_or_set: 162
insn=71, live_throughout: 13, 150, dead_or_set: 0, 1, 14
insn=72, live_throughout: 13, 14, dead_or_set: 147, 150
insn=248, live_throughout: 13, 14, 147, dead_or_set: 
insn=75, live_throughout: 13, 14, 150, dead_or_set: 
insn=271, live_throughout: 13, 14, 150, dead_or_set: 165
insn=84, live_throughout: 13, 14, 150, 165, dead_or_set: 169
insn=272, live_throughout: 13, 14, 150, 169, dead_or_set: 165
insn=77, live_throughout: 13, 14, 150, 165, 169, dead_or_set: 139
insn=78, live_throughout: 13, 14, 139, 165, 169, dead_or_set: 140, 150
insn=82, live_throughout: 13, 14, 139, 140, 169, dead_or_set: 165, 167
insn=94, live_throughout: 13, 14, 139, 140, 167, dead_or_set: 169, 175
insn=83, live_throughout: 13, 14, 24, 139, 140, 175, dead_or_set: 136, 167
insn=95, live_throughout: 13, 14, 136, 139, 140, 175, dead_or_set: 
insn=97, live_throughout: 13, 14, dead_or_set: 147
insn=250, live_throughout: 13, 14, 147, dead_or_set: 
insn=100, live_throughout: 13, 136, 139, 140, 175, dead_or_set: 
insn=102, live_throughout: 13, 136, 139, 140, 175, dead_or_set: 134
insn=103, live_throughout: 13, 134, 136, 139, 140, 175, dead_or_set: 0
insn=104, live_throughout: 13, 134, 136, 139, 140, 175, dead_or_set: 0, 14
insn=105, live_throughout: 13, 134, 139, 140, 175, dead_or_set: 0, 136
insn=106, live_throughout: 0, 13, 134, 139, 140, 175, dead_or_set: 1
insn=107, live_throughout: 13, 134, 139, 140, 175, dead_or_set: 0, 1, 14
insn=109, live_throughout: 13, 134, 139, 140, 175, dead_or_set: 0, 137
insn=110, live_throughout: 13, 134, 137, 139, 140, 175, dead_or_set: 
insn=112, live_throughout: 13, 134, 137, 139, 140, 175, dead_or_set: 135
insn=113, live_throughout: 13, 134, 135, 137, 139, 140, 175, dead_or_set: 
insn=114, live_throughout: 13, 134, 135, 137, 139, 140, 175, dead_or_set: 
insn=116, live_throughout: 13, 134, 135, 139, 140, 175, dead_or_set: 137, 176
insn=118, live_throughout: 13, 135, 139, 140, 175, 176, dead_or_set: 0, 134
insn=117, live_throughout: 0, 13, 135, 139, 175, dead_or_set: 133, 140, 176
insn=119, live_throughout: 13, 133, 135, 139, 175, dead_or_set: 0, 14
insn=124, live_throughout: 13, 135, 139, 175, dead_or_set: 133, 182
insn=121, live_throughout: 13, 175, 182, dead_or_set: 135, 139, 178
insn=125, live_throughout: 13, 175, 178, dead_or_set: 181, 182
insn=267, live_throughout: 13, 175, 181, dead_or_set: 0, 178
insn=269, live_throughout: 0, 13, 175, dead_or_set: 1, 181
insn=268, live_throughout: 1, 13, 175, dead_or_set: 0
insn=270, live_throughout: 0, 13, 175, dead_or_set: 1
insn=120, live_throughout: 0, 1, 13, 175, dead_or_set: 177
insn=131, live_throughout: 13, 175, dead_or_set: 0, 1, 14, 177
insn=132, live_throughout: 13, 14, dead_or_set: 147, 175
insn=252, live_throughout: 13, 14, 147, dead_or_set: 
insn=135, live_throughout: 13, 134, dead_or_set: 
insn=137, live_throughout: 13, dead_or_set: 0, 134
insn=138, live_throughout: 13, dead_or_set: 0, 14
insn=139, live_throughout: 13, 14, dead_or_set: 147
insn=254, live_throughout: 13, 14, 147, dead_or_set: 
insn=142, live_throughout: 13, 14, 149, 150, dead_or_set: 
insn=144, live_throughout: 13, 14, 149, 150, dead_or_set: 186
insn=145, live_throughout: 13, 14, 149, 150, dead_or_set: 186, 188
insn=147, live_throughout: 13, 14, 149, 150, dead_or_set: 188
insn=148, live_throughout: 13, 14, 149, 150, dead_or_set: 
insn=150, live_throughout: 13, 14, 150, dead_or_set: 189
insn=153, live_throughout: 13, 14, 150, 189, dead_or_set: 147
insn=151, live_throughout: 13, 14, 147, 150, dead_or_set: 189, 190
insn=152, live_throughout: 13, 14, 147, dead_or_set: 150, 190
insn=256, live_throughout: 13, 14, 147, dead_or_set: 
insn=156, live_throughout: 13, 14, 149, 150, dead_or_set: 
insn=158, live_throughout: 13, 14, 149, 150, dead_or_set: 191
insn=159, live_throughout: 13, 14, 149, 150, dead_or_set: 191, 193
insn=161, live_throughout: 13, 14, 149, 150, dead_or_set: 193
insn=162, live_throughout: 13, 14, 149, 150, dead_or_set: 
insn=164, live_throughout: 13, 14, 150, dead_or_set: 194
insn=167, live_throughout: 13, 14, 150, 194, dead_or_set: 147
insn=165, live_throughout: 13, 14, 147, 150, dead_or_set: 194, 195
insn=166, live_throughout: 13, 14, 147, dead_or_set: 150, 195
insn=258, live_throughout: 13, 14, 147, dead_or_set: 
insn=170, live_throughout: 13, 14, 142, 150, dead_or_set: 
insn=265, live_throughout: 13, 14, 150, dead_or_set: 142, 196
insn=174, live_throughout: 13, 14, 196, dead_or_set: 150, 198
insn=266, live_throughout: 13, 14, 198, dead_or_set: 196
insn=175, live_throughout: 13, 14, 198, dead_or_set: 196
insn=177, live_throughout: 13, 14, dead_or_set: 198
insn=178, live_throughout: 13, 14, dead_or_set: 147
insn=260, live_throughout: 13, 14, 147, dead_or_set: 
insn=181, live_throughout: 13, 14, 146, 149, 150, dead_or_set: 
insn=184, live_throughout: 13, 14, 149, 150, dead_or_set: 146
insn=185, live_throughout: 13, 14, 149, 150, dead_or_set: 
insn=187, live_throughout: 13, 14, dead_or_set: 147
insn=262, live_throughout: 13, 14, 147, dead_or_set: 
insn=190, live_throughout: 13, 149, 150, dead_or_set: 
insn=198, live_throughout: 13, 149, 150, dead_or_set: 205
insn=219, live_throughout: 13, 149, 150, 205, dead_or_set: 1
insn=221, live_throughout: 1, 13, 150, 205, dead_or_set: 3, 149
insn=242, live_throughout: 1, 3, 13, 150, dead_or_set: 205
insn=211, live_throughout: 1, 3, 13, 24, dead_or_set: 150, 206
insn=243, live_throughout: 1, 3, 13, 206, dead_or_set: 143
insn=194, live_throughout: 1, 3, 13, 143, 206, dead_or_set: 202
insn=218, live_throughout: 1, 3, 13, 143, 202, 206, dead_or_set: 0
insn=220, live_throughout: 0, 1, 3, 13, 143, 202, 206, dead_or_set: 2
insn=212, live_throughout: 0, 1, 2, 3, 13, 202, dead_or_set: 143, 206, 207
insn=277, live_throughout: 0, 1, 2, 3, 13, 202, 207, dead_or_set: 203
insn=197, live_throughout: 0, 1, 2, 3, 13, 202, 207, dead_or_set: 203
insn=213, live_throughout: 0, 1, 2, 3, 13, 202, dead_or_set: 207
insn=192, live_throughout: 0, 1, 2, 3, 13, 202, dead_or_set: 201
insn=193, live_throughout: 0, 1, 2, 3, 13, 202, dead_or_set: 201
insn=195, live_throughout: 0, 1, 2, 3, 13, 202, dead_or_set: 
insn=217, live_throughout: 0, 1, 2, 3, 13, 202, dead_or_set: 
insn=222, live_throughout: 13, 202, dead_or_set: 0, 1, 2, 3, 14
insn=223, live_throughout: 13, 14, dead_or_set: 147, 202
insn=224, live_throughout: 13, 14, 147, dead_or_set: 
insn=230, live_throughout: 13, 14, dead_or_set: 0, 147
insn=236, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 145: (insn_list:REG_DEP_TRUE 50 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 28 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 30 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 278 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 65 (nil))
init_insns for 177: (insn_list:REG_DEP_TRUE 120 (nil))
init_insns for 186: (insn_list:REG_DEP_TRUE 144 (nil))
init_insns for 189: (insn_list:REG_DEP_TRUE 150 (nil))
init_insns for 190: (insn_list:REG_DEP_TRUE 152 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 158 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 164 (nil))
init_insns for 195: (insn_list:REG_DEP_TRUE 166 (nil))
init_insns for 201: (insn_list:REG_DEP_TRUE 192 (nil))
init_insns for 202: (insn_list:REG_DEP_TRUE 194 (nil))
init_insns for 203: (insn_list:REG_DEP_TRUE 277 (nil))
init_insns for 205: (insn_list:REG_DEP_TRUE 198 (nil))
init_insns for 207: (insn_list:REG_DEP_TRUE 213 (nil))
changing reg in insn 117
changing reg in insn 124
changing reg in insn 125
changing reg in insn 102
changing reg in insn 137
changing reg in insn 118
changing reg in insn 103
changing reg in insn 112
changing reg in insn 121
changing reg in insn 113
changing reg in insn 83
changing reg in insn 105
changing reg in insn 102
changing reg in insn 109
changing reg in insn 116
changing reg in insn 112
changing reg in insn 77
changing reg in insn 94
changing reg in insn 94
changing reg in insn 121
changing reg in insn 106
changing reg in insn 78
changing reg in insn 94
changing reg in insn 94
changing reg in insn 117
changing reg in insn 113
changing reg in insn 7
changing reg in insn 265
changing reg in insn 243
changing reg in insn 212
changing reg in insn 241
changing reg in insn 64
changing reg in insn 50
changing reg in insn 64
changing reg in insn 21
changing reg in insn 184
changing reg in insn 22
changing reg in insn 22
changing reg in insn 223
changing reg in insn 132
changing reg in insn 45
changing reg in insn 187
changing reg in insn 178
changing reg in insn 167
changing reg in insn 153
changing reg in insn 139
changing reg in insn 97
changing reg in insn 72
changing reg in insn 15
changing reg in insn 230
changing reg in insn 2
changing reg in insn 221
changing reg in insn 8
changing reg in insn 3
changing reg in insn 219
changing reg in insn 211
changing reg in insn 198
changing reg in insn 174
changing reg in insn 167
changing reg in insn 166
changing reg in insn 164
changing reg in insn 153
changing reg in insn 152
changing reg in insn 150
changing reg in insn 84
changing reg in insn 78
changing reg in insn 77
changing reg in insn 72
changing reg in insn 70
changing reg in insn 65
changing reg in insn 51
changing reg in insn 50
changing reg in insn 41
changing reg in insn 165
changing reg in insn 151
changing reg in insn 64
changing reg in insn 198
changing reg in insn 164
changing reg in insn 150
changing reg in insn 50
changing reg in insn 51
changing reg in insn 8
changing reg in insn 9
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 45
changing reg in insn 43
changing reg in insn 39
changing reg in insn 35
changing reg in insn 31
changing reg in insn 278
changing reg in insn 33
changing reg in insn 51
changing reg in insn 240
changing reg in insn 64
changing reg in insn 65
changing reg in insn 274
changing reg in insn 273
changing reg in insn 274
changing reg in insn 69
changing reg in insn 272
changing reg in insn 271
changing reg in insn 272
changing reg in insn 82
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 94
changing reg in insn 94
changing reg in insn 94
changing reg in insn 132
changing reg in insn 116
changing reg in insn 117
changing reg in insn 120
changing reg in insn 131
changing reg in insn 121
changing reg in insn 267
changing reg in insn 125
changing reg in insn 269
changing reg in insn 124
changing reg in insn 125
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 147
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 152
changing reg in insn 158
changing reg in insn 159
changing reg in insn 159
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 166
changing reg in insn 266
changing reg in insn 265
changing reg in insn 266
changing reg in insn 175
changing reg in insn 174
changing reg in insn 177
changing reg in insn 175
changing reg in insn 192
changing reg in insn 193
changing reg in insn 194
changing reg in insn 223
changing reg in insn 217
changing reg in insn 195
changing reg in insn 277
changing reg in insn 197
changing reg in insn 198
changing reg in insn 242
changing reg in insn 211
changing reg in insn 212
changing reg in insn 212
changing reg in insn 213
Spilling for insn 33.
Spilling for insn 29.
Spilling for insn 31.
Spilling for insn 35.
Spilling for insn 39.
Spilling for insn 273.
Using reg 2 for reload 0
Spilling for insn 65.
Spilling for insn 271.
Using reg 2 for reload 0
Spilling for insn 152.
Spilling for insn 166.
Spilling for insn 175.
Spilling for insn 197.
Spilling for insn 213.
Spilling for insn 193.
Spilling for insn 195.
Spilling for insn 217.

Reloads for insn # 33
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])

Reloads for insn # 29
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])

Reloads for insn # 31
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])

Reloads for insn # 35
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])

Reloads for insn # 39
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 273
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 65
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                                                        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                                                        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])

Reloads for insn # 271
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 152
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                                                        (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                                                        (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])

Reloads for insn # 166
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                                                        (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                                                        (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])

Reloads for insn # 175
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg:SI 2 r2 [196])
                                                        (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg:SI 2 r2 [196])
                                                        (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])

Reloads for insn # 197
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])

Reloads for insn # 213
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])

Reloads for insn # 193
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])

Reloads for insn # 195
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])

Reloads for insn # 217
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 15.
deleting insn with uid = 221.
deleting insn with uid = 230.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 104.
verify found no changes in insn with uid = 107.
verify found no changes in insn with uid = 119.
rescanning insn with uid = 131.
deleting insn with uid = 131.
verify found no changes in insn with uid = 138.
verify found no changes in insn with uid = 222.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 41 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 34 count 42 (  1.9)


arm_syscall

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={32d,19u} r1={18d,12u} r2={23d,13u} r3={25d,18u} r4={4d,11u} r5={4d,25u,9d} r6={2d,5u} r7={1d,3u} r8={2d,4u} r12={16d,6u} r13={1d,45u} r14={12d,3u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={21d,9u} r25={1d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} 
;;    total ref usage 1334{1151d,173u,10e} in 129{120 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/traps.c:482 (set (reg/v:SI 3 r3 [orig:149 no ] [149])
        (reg:SI 0 r0 [ no ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 7 2 arch/arm/kernel/traps.c:482 (set (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 7 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2 [orig:142 sp.88 ] [142])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/traps.c:486 (set (reg:SI 12 ip [151])
        (ashiftrt:SI (reg/v:SI 3 r3 [orig:149 no ] [149])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/traps.c:486 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [151])
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/traps.c:486 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5983 [0x175f])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  3 [40.2%]  (fallthru)
;; Succ edge  4 [59.8%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [40.2%]  (fallthru)
(note 11 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 14 11 244 3 arch/arm/kernel/traps.c:487 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("bad_syscall") [flags 0x3] <function_decl 0x111e7800 bad_syscall>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 244 14 245 3 arch/arm/kernel/traps.c:487 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 245 244 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1]
;; live  kill	 24 [cc]

;; Pred edge  2 [59.8%] 
(code_label 18 245 19 4 121 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 20 19 21 4 NOTE_INSN_DELETED)

(insn 21 20 22 4 arch/arm/kernel/traps.c:489 (set (reg:SI 1 r1 [orig:146 D.18679 ] [146])
        (zero_extend:SI (reg:HI 3 r3 [orig:149 no ] [149]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(jump_insn 22 21 23 4 arch/arm/kernel/traps.c:489 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 1 r1 [orig:146 D.18679 ] [146])
                        (const_int 5 [0x5]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:146 D.18679 ] [146])
                                (const_int 4 [0x4]))
                            (label_ref 23)) [0 S4 A32])
                    (label_ref 181)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 23))
        ]) 265 {arm_casesi_internal} (insn_list:REG_LABEL_TARGET 181 (nil)))
;; End of basic block 4 -> ( 18 5 6 7 13 15 17)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  18 [14.3%] 
;; Succ edge  5 [14.3%] 
;; Succ edge  6 [14.3%] 
;; Succ edge  7 [14.3%] 
;; Succ edge  13 [14.3%] 
;; Succ edge  15 [14.3%] 
;; Succ edge  17 [14.3%] 

;; Insn is not within a basic block
(code_label 23 22 24 130 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 24 23 25 arch/arm/kernel/traps.c:489 (addr_vec:SI [
            (label_ref:SI 26)
            (label_ref:SI 48)
            (label_ref:SI 75)
            (label_ref:SI 142)
            (label_ref:SI 156)
            (label_ref:SI 170)
        ]) -1 (nil))

(barrier 25 24 26)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 26 25 27 5 124 "" [1 uses])

(note 27 26 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 37 27 30 5 NOTE_INSN_DELETED)

(insn 30 37 41 5 arch/arm/kernel/traps.c:492 (set (reg:SI 4 r4 [154])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 41 30 40 5 arch/arm/kernel/traps.c:496 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:150 regs ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 40 41 42 5 arch/arm/kernel/traps.c:496 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x1123f9f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC32") [flags 0x82] <string_cst 0x1123f9f0>)
        (nil)))

(insn 42 40 43 5 arch/arm/kernel/traps.c:496 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 43 42 278 5 arch/arm/kernel/traps.c:496 (set (reg:SI 3 r3)
        (reg:SI 4 r4 [154])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 278 43 33 5 arch/arm/kernel/traps.c:493 (set (reg:SI 12 ip [155])
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196609 [0x30001])
        (nil)))

(insn 33 278 28 5 arch/arm/kernel/traps.c:493 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
        (reg:SI 12 ip [155])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(insn 28 33 29 5 arch/arm/kernel/traps.c:491 (set (reg:SI 12 ip [153])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 11 [0xb])
        (nil)))

(insn 29 28 31 5 arch/arm/kernel/traps.c:491 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
        (reg:SI 12 ip [153])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 11 [0xb])
        (nil)))

(insn 31 29 35 5 arch/arm/kernel/traps.c:492 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
        (reg:SI 4 r4 [154])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 35 31 39 5 arch/arm/kernel/traps.c:494 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 4 r4 [154])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 39 35 44 5 arch/arm/kernel/traps.c:496 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 4 r4 [154])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 44 39 45 5 arch/arm/kernel/traps.c:496 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 45 44 246 5 arch/arm/kernel/traps.c:497 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (reg:SI 4 r4 [154])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 246 45 247 5 arch/arm/kernel/traps.c:497 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 247 246 48)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 48 247 49 6 125 "" [1 uses])

(note 49 48 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 52 49 67 6 NOTE_INSN_DELETED)

(note 67 52 51 6 NOTE_INSN_DELETED)

(insn 51 67 280 6 arch/arm/kernel/traps.c:500 (set (reg:SI 3 r3 [orig:161 <variable>.uregs+64 ] [161])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 280 51 273 6 arch/arm/kernel/traps.c:501 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 273 280 274 6 arch/arm/kernel/traps.c:501 (set (reg:SI 0 r0 [163])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 274 273 50 6 arch/arm/kernel/traps.c:501 (set (reg:SI 0 r0 [163])
        (and:SI (reg:SI 0 r0 [163])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 50 274 240 6 arch/arm/kernel/traps.c:500 (set (reg:SI 2 r2 [orig:145 D.18680 ] [145])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 240 50 70 6 arch/arm/kernel/traps.c:500 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:161 <variable>.uregs+64 ] [161])
                (const_int 1 [0x1])
                (const_int 5 [0x5]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 70 240 241 6 arch/arm/kernel/traps.c:501 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:150 regs ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 241 70 69 6 arch/arm/kernel/traps.c:500 discrim 2 (set (reg:SI 3 r3 [orig:144 iftmp.305 ] [144])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (nil))

(insn 69 241 64 6 arch/arm/kernel/traps.c:501 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 0 r0 [163])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 69 65 6 arch/arm/kernel/traps.c:500 discrim 3 (set (reg:SI 3 r3 [162])
        (minus:SI (reg:SI 2 r2 [orig:145 D.18680 ] [145])
            (reg:SI 3 r3 [orig:144 iftmp.305 ] [144]))) 28 {*arm_subsi3_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 65 64 71 6 arch/arm/kernel/traps.c:500 discrim 3 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 3 r3 [162])) 167 {*arm_movsi_insn} (nil))

(call_insn 71 65 72 6 arch/arm/kernel/traps.c:501 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_break") [flags 0x41] <function_decl 0x111aa500 ptrace_break>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 72 71 248 6 arch/arm/kernel/traps.c:502 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 248 72 249 6 arch/arm/kernel/traps.c:502 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 249 248 75)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 24 [cc]
;; live  in  	 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  4 [14.3%] 
(code_label 75 249 76 7 126 "" [1 uses])

(note 76 75 80 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 80 76 85 7 NOTE_INSN_DELETED)

(note 85 80 86 7 NOTE_INSN_DELETED)

(note 86 85 88 7 NOTE_INSN_DELETED)

(note 88 86 89 7 NOTE_INSN_DELETED)

(note 89 88 91 7 NOTE_INSN_DELETED)

(note 91 89 92 7 NOTE_INSN_DELETED)

(note 92 91 93 7 NOTE_INSN_DELETED)

(note 93 92 281 7 NOTE_INSN_DELETED)

(insn 281 93 271 7 arch/arm/kernel/traps.c:455 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 271 281 84 7 arch/arm/kernel/traps.c:455 (set (reg:SI 3 r3 [165])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 271 272 7 arch/arm/kernel/traps.c:519 (set (reg:SI 4 r4 [orig:169 <variable>.uregs+8 ] [169])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 8 [0x8])) [0 <variable>.uregs+8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 272 84 77 7 arch/arm/kernel/traps.c:455 (set (reg:SI 3 r3 [165])
        (and:SI (reg:SI 3 r3 [165])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 77 272 78 7 arch/arm/kernel/traps.c:519 (set (reg/v:SI 6 r6 [orig:139 start ] [139])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 82 7 arch/arm/kernel/traps.c:519 (set (reg/v:SI 5 r5 [orig:140 end ] [140])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 4 [0x4])) [0 <variable>.uregs+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 82 78 94 7 arch/arm/kernel/traps.c:455 (set (reg/f:SI 3 r3 [orig:167 <variable>.task ] [167])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [165])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 94 82 83 7 arch/arm/kernel/traps.c:458 (parallel [
            (set (reg:CC_DNE 24 cc)
                (compare:CC_DNE (ior:SI (ne:SI (reg:SI 4 r4 [orig:169 <variable>.uregs+8 ] [169])
                            (const_int 0 [0x0]))
                        (ltu:SI (reg/v:SI 5 r5 [orig:140 end ] [140])
                            (reg/v:SI 6 r6 [orig:139 start ] [139])))
                    (const_int 0 [0x0])))
            (set (reg:SI 4 r4 [175])
                (ior:SI (ne:SI (reg:SI 4 r4 [orig:169 <variable>.uregs+8 ] [169])
                        (const_int 0 [0x0]))
                    (ltu:SI (reg/v:SI 5 r5 [orig:140 end ] [140])
                        (reg/v:SI 6 r6 [orig:139 start ] [139]))))
        ]) 287 {*ior_scc_scc_cmp} (nil))

(insn 83 94 95 7 arch/arm/kernel/traps.c:455 (set (reg/v/f:SI 8 r8 [orig:136 mm ] [136])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:167 <variable>.task ] [167])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(jump_insn 95 83 96 7 arch/arm/kernel/traps.c:458 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  8 [61.0%]  (fallthru)
;; Succ edge  9 [39.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [61.0%]  (fallthru)
(note 96 95 97 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 97 96 250 8 arch/arm/kernel/traps.c:520 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 250 97 251 8 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%] 

(barrier 251 250 100)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7 [39.0%] 
(code_label 100 251 101 9 133 "" [1 uses])

(note 101 100 108 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 108 101 102 9 NOTE_INSN_DELETED)

(insn 102 108 103 9 arch/arm/kernel/traps.c:461 (set (reg/f:SI 7 r7 [orig:134 D.19141 ] [134])
        (plus:SI (reg/v/f:SI 8 r8 [orig:136 mm ] [136])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 103 102 104 9 arch/arm/kernel/traps.c:461 (set (reg:SI 0 r0)
        (reg/f:SI 7 r7 [orig:134 D.19141 ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 104 103 105 9 arch/arm/kernel/traps.c:461 (parallel [
            (call (mem:SI (symbol_ref:SI ("down_read") [flags 0x41] <function_decl 0x10cb2700 down_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 105 104 106 9 arch/arm/kernel/traps.c:462 (set (reg:SI 0 r0)
        (reg/v/f:SI 8 r8 [orig:136 mm ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 9 arch/arm/kernel/traps.c:462 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:139 start ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 107 106 109 9 arch/arm/kernel/traps.c:462 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_vma") [flags 0x41] <function_decl 0x1118a380 find_vma>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 109 107 110 9 arch/arm/kernel/traps.c:463 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 0 r0 [orig:137 vma ] [137])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 110 109 111 9 arch/arm/kernel/traps.c:463 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 441 [0x1b9])
        (nil)))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [95.6%]  (fallthru)
;; Succ edge  12 [4.4%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 13 [sp]
;; lr  def 	 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  9 [95.6%]  (fallthru)
(note 111 110 112 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 10 arch/arm/kernel/traps.c:463 discrim 1 (set (reg:SI 8 r8 [orig:135 D.19140 ] [135])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 vma ] [137])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 113 112 114 10 arch/arm/kernel/traps.c:463 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:135 D.19140 ] [135])
            (reg/v:SI 5 r5 [orig:140 end ] [140]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 114 113 115 10 arch/arm/kernel/traps.c:463 discrim 1 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 135)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  11 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 5 [r5] 6 [r6]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  10 [61.0%]  (fallthru)
(note 115 114 122 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 122 115 123 11 NOTE_INSN_DELETED)

(note 123 122 126 11 NOTE_INSN_DELETED)

(note 126 123 127 11 NOTE_INSN_DELETED)

(note 127 126 128 11 NOTE_INSN_DELETED)

(note 128 127 116 11 NOTE_INSN_DELETED)

(insn 116 128 118 11 arch/arm/kernel/traps.c:463 discrim 1 (set (reg:SI 3 r3 [orig:176 <variable>.vm_end ] [176])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 vma ] [137])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 118 116 117 11 arch/arm/kernel/traps.c:469 (set (reg:SI 0 r0)
        (reg/f:SI 7 r7 [orig:134 D.19141 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 117 118 119 11 arch/arm/kernel/traps.c:463 discrim 1 (parallel [
            (set (reg/v:SI 5 r5 [orig:133 end.889 ] [133])
                (umin:SI (reg/v:SI 5 r5 [orig:140 end ] [140])
                    (reg:SI 3 r3 [orig:176 <variable>.vm_end ] [176])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(call_insn 119 117 124 11 arch/arm/kernel/traps.c:469 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10cb2900 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 124 119 121 11 arch/arm/kernel/traps.c:470 (set (reg:SI 5 r5 [182])
        (plus:SI (reg/v:SI 5 r5 [orig:133 end.889 ] [133])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 121 124 125 11 arch/arm/kernel/traps.c:470 (parallel [
            (set (reg:SI 6 r6 [178])
                (umax:SI (reg:SI 8 r8 [orig:135 D.19140 ] [135])
                    (reg/v:SI 6 r6 [orig:139 start ] [139])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (nil))

(insn 125 121 267 11 arch/arm/kernel/traps.c:470 (set (reg:SI 1 r1 [181])
        (plus:SI (reg:SI 5 r5 [182])
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 5 r5 [orig:133 end.889 ] [133])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 267 125 269 11 arch/arm/kernel/traps.c:470 (set (reg:SI 0 r0)
        (and:SI (reg:SI 6 r6 [178])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 269 267 268 11 arch/arm/kernel/traps.c:470 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1 [181])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 268 269 270 11 arch/arm/kernel/traps.c:470 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 270 268 120 11 arch/arm/kernel/traps.c:470 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 120 270 131 11 arch/arm/kernel/traps.c:470 (set (reg/f:SI 3 r3 [177])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111974e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111974e0 cpu_cache>)
        (nil)))

(call_insn 131 120 132 11 arch/arm/kernel/traps.c:470 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [177])
                            (const_int 20 [0x14])) [0 cpu_cache.coherent_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 132 131 252 11 arch/arm/kernel/traps.c:520 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (reg:SI 4 r4 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 252 132 253 11 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 253 252 135)

;; Start of basic block ( 9 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  9 [4.4%] 
;; Pred edge  10 [39.0%] 
(code_label 135 253 136 12 134 "" [2 uses])

(note 136 135 137 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 137 136 138 12 arch/arm/kernel/traps.c:473 (set (reg:SI 0 r0)
        (reg/f:SI 7 r7 [orig:134 D.19141 ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 138 137 139 12 arch/arm/kernel/traps.c:473 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10cb2900 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 139 138 254 12 arch/arm/kernel/traps.c:520 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 254 139 255 12 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 255 254 142)

;; Start of basic block ( 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  4 [14.3%] 
(code_label 142 255 143 13 127 "" [1 uses])

(note 143 142 146 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 146 143 144 13 NOTE_INSN_DELETED)

(insn 144 146 145 13 arch/arm/kernel/traps.c:523 (set (reg/f:SI 2 r2 [186])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>)
        (nil)))

(insn 145 144 147 13 arch/arm/kernel/traps.c:523 (set (reg:SI 2 r2 [orig:188 elf_hwcap ] [188])
        (mem/c/i:SI (reg/f:SI 2 r2 [186]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 147 145 148 13 arch/arm/kernel/traps.c:523 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:188 elf_hwcap ] [188])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 148 147 149 13 arch/arm/kernel/traps.c:523 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 13 -> ( 20 14)
;; lr  out 	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  20 [61.0%] 
;; Succ edge  14 [39.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  13 [39.0%]  (fallthru)
(note 149 148 150 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 153 14 arch/arm/kernel/traps.c:525 (set (reg:SI 3 r3 [orig:189 <variable>.uregs+64 ] [189])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 153 150 151 14 arch/arm/kernel/traps.c:526 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 151 153 152 14 arch/arm/kernel/traps.c:525 (set (reg:SI 3 r3 [190])
        (and:SI (reg:SI 3 r3 [orig:189 <variable>.uregs+64 ] [189])
            (const_int -17 [0xffffffffffffffef]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 152 151 256 14 arch/arm/kernel/traps.c:525 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 3 r3 [190])) 167 {*arm_movsi_insn} (nil))

(jump_insn 256 152 257 14 arch/arm/kernel/traps.c:526 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%] 

(barrier 257 256 156)

;; Start of basic block ( 4) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  4 [14.3%] 
(code_label 156 257 157 15 128 "" [1 uses])

(note 157 156 160 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 160 157 158 15 NOTE_INSN_DELETED)

(insn 158 160 159 15 arch/arm/kernel/traps.c:529 (set (reg/f:SI 2 r2 [191])
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>)
        (nil)))

(insn 159 158 161 15 arch/arm/kernel/traps.c:529 (set (reg:SI 2 r2 [orig:193 elf_hwcap ] [193])
        (mem/c/i:SI (reg/f:SI 2 r2 [191]) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x512d73c0 elf_hwcap>) [0 elf_hwcap+0 S4 A32])
        (nil)))

(insn 161 159 162 15 arch/arm/kernel/traps.c:529 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:193 elf_hwcap ] [193])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 162 161 163 15 arch/arm/kernel/traps.c:529 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 15 -> ( 20 16)
;; lr  out 	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  20 [61.0%] 
;; Succ edge  16 [39.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  15 [39.0%]  (fallthru)
(note 163 162 164 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 167 16 arch/arm/kernel/traps.c:531 (set (reg:SI 3 r3 [orig:194 <variable>.uregs+64 ] [194])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 167 164 165 16 arch/arm/kernel/traps.c:532 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 165 167 166 16 arch/arm/kernel/traps.c:531 (set (reg:SI 3 r3 [195])
        (ior:SI (reg:SI 3 r3 [orig:194 <variable>.uregs+64 ] [194])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 166 165 258 16 arch/arm/kernel/traps.c:531 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (reg:SI 3 r3 [195])) 167 {*arm_movsi_insn} (nil))

(jump_insn 258 166 259 16 arch/arm/kernel/traps.c:532 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%] 

(barrier 259 258 170)

;; Start of basic block ( 4) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3]
;; live  in  	 2 [r2] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  4 [14.3%] 
(code_label 170 259 171 17 129 "" [1 uses])

(note 171 170 172 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 172 171 265 17 NOTE_INSN_DELETED)

(insn 265 172 174 17 arch/arm/kernel/traps.c:535 (set (reg:SI 2 r2 [196])
        (and:SI (reg:SI 2 r2 [orig:142 sp.88 ] [142])
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 174 265 266 17 arch/arm/kernel/traps.c:535 (set (reg:SI 3 r3 [orig:198 <variable>.uregs ] [198])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150]) [0 <variable>.uregs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 266 174 175 17 arch/arm/kernel/traps.c:535 (set (reg:SI 2 r2 [196])
        (and:SI (reg:SI 2 r2 [196])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 175 266 177 17 arch/arm/kernel/traps.c:535 (set (mem/s/j:SI (plus:SI (reg:SI 2 r2 [196])
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])
        (reg:SI 3 r3 [orig:198 <variable>.uregs ] [198])) 167 {*arm_movsi_insn} (nil))

(insn 177 175 178 17 arch/arm/kernel/traps.c:539 (asm_operands/v ("mcr p15, 0, %0, c13, c0, 3") ("") 0 [
            (reg:SI 3 r3 [orig:198 <variable>.uregs ] [198])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 6977136) -1 (nil))

(insn 178 177 260 17 arch/arm/kernel/traps.c:550 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 260 178 261 17 arch/arm/kernel/traps.c:550 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%] 

(barrier 261 260 181)

;; Start of basic block ( 4) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [14.3%] 
(code_label 181 261 182 18 123 "" [1 uses])

(note 182 181 183 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 183 182 184 18 NOTE_INSN_DELETED)

(insn 184 183 185 18 arch/arm/kernel/traps.c:609 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:146 D.18679 ] [146])
            (const_int 2048 [0x800]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 185 184 186 18 arch/arm/kernel/traps.c:609 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 190)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 3 [r3] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  19 [39.0%]  (fallthru)
;; Succ edge  20 [61.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  18 [39.0%]  (fallthru)
(note 186 185 187 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 262 19 arch/arm/kernel/traps.c:610 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (const_int -38 [0xffffffffffffffda])) 167 {*arm_movsi_insn} (nil))

(jump_insn 262 187 263 19 (set (pc)
        (label_ref 224)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%] 

(barrier 263 262 190)

;; Start of basic block ( 13 15 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  13 [61.0%] 
;; Pred edge  15 [61.0%] 
;; Pred edge  18 [61.0%] 
(code_label 190 263 191 20 135 "" [3 uses])

(note 191 190 199 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 199 191 215 20 NOTE_INSN_DELETED)

(note 215 199 198 20 NOTE_INSN_DELETED)

(insn 198 215 219 20 arch/arm/kernel/traps.c:632 (set (reg:SI 2 r2 [orig:205 <variable>.uregs+64 ] [205])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 219 198 242 20 arch/arm/kernel/traps.c:634 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:150 regs ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 242 219 211 20 arch/arm/kernel/traps.c:631 discrim 2 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 2 r2 [orig:205 <variable>.uregs+64 ] [205])
                (const_int 1 [0x1])
                (const_int 5 [0x5]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 211 242 243 20 arch/arm/kernel/traps.c:631 discrim 3 (set (reg:SI 12 ip [orig:206 <variable>.uregs+60 ] [206])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:150 regs ] [150])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 243 211 194 20 arch/arm/kernel/traps.c:631 discrim 2 (set (reg:SI 14 lr [orig:143 iftmp.307 ] [143])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int -2 [0xfffffffffffffffe])
            (const_int -4 [0xfffffffffffffffc]))) 240 {*movsicc_insn} (nil))

(insn 194 243 218 20 arch/arm/kernel/traps.c:629 (set (reg:SI 4 r4 [202])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 218 194 220 20 arch/arm/kernel/traps.c:634 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x113100c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC33") [flags 0x82] <string_cst 0x113100c0>)
        (nil)))

(insn 220 218 212 20 arch/arm/kernel/traps.c:634 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 212 220 277 20 arch/arm/kernel/traps.c:631 discrim 3 (set (reg:SI 12 ip [207])
        (plus:SI (reg:SI 14 lr [orig:143 iftmp.307 ] [143])
            (reg:SI 12 ip [orig:206 <variable>.uregs+60 ] [206]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (nil)))

(insn 277 212 197 20 arch/arm/kernel/traps.c:630 (set (reg:SI 14 lr [203])
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196612 [0x30004])
        (nil)))

(insn 197 277 213 20 arch/arm/kernel/traps.c:630 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
        (reg:SI 14 lr [203])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196612 [0x30004])
        (nil)))

(insn 213 197 192 20 arch/arm/kernel/traps.c:631 discrim 3 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 12 ip [207])) 167 {*arm_movsi_insn} (nil))

(insn 192 213 193 20 arch/arm/kernel/traps.c:628 (set (reg:SI 12 ip [201])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 193 192 195 20 arch/arm/kernel/traps.c:628 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
        (reg:SI 12 ip [201])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 195 193 217 20 arch/arm/kernel/traps.c:629 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
        (reg:SI 4 r4 [202])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 217 195 222 20 arch/arm/kernel/traps.c:634 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 4 r4 [202])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 222 217 223 20 arch/arm/kernel/traps.c:634 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 223 222 224 20 arch/arm/kernel/traps.c:635 (set (reg:SI 0 r0 [orig:147 D.18677 ] [147])
        (reg:SI 4 r4 [202])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 20 -> ( 21)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 11 3 5 6 12 14 20 16 17 8 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%] 
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  19 [100.0%] 
(code_label 224 223 225 21 122 "" [10 uses])

(note 225 224 236 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 236 225 276 21 arch/arm/kernel/traps.c:636 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 276 236 279 NOTE_INSN_DELETED)

(note 279 276 0 NOTE_INSN_DELETED)


;; Function do_undefinstr (do_undefinstr)[0:1068]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 149.
verify found no changes in insn with uid = 149.
deleting insn with uid = 122.
scanning new insn with uid = 150.
verify found no changes in insn with uid = 150.
deleting insn with uid = 113.
scanning new insn with uid = 151.
verify found no changes in insn with uid = 151.
deleting insn with uid = 117.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 37 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 37 (  2.1)

Pass 0 for finding allocno costs

    a24 (r174,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r163,l1) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r162,l1) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r161,l1) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r160,l1) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r159,l1) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r158,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a4(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a8(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a19(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a20(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a23(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r174,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r161,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r160,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r174: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a4(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:80000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a8(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a11(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:120000
  a19(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a20(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a23(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r174,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r161,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r160,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a30(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 128(l0): point = 1
   Insn 116(l0): point = 3
   Insn 123(l0): point = 5
   Insn 149(l0): point = 7
   Insn 114(l0): point = 9
   Insn 150(l0): point = 11
   Insn 119(l0): point = 13
   Insn 118(l0): point = 15
   Insn 151(l0): point = 17
   Insn 126(l0): point = 19
   Insn 124(l0): point = 21
   Insn 127(l0): point = 23
   Insn 125(l0): point = 25
   Insn 115(l0): point = 27
   Insn 110(l0): point = 30
   Insn 109(l0): point = 32
   Insn 107(l0): point = 34
   Insn 105(l0): point = 36
   Insn 106(l0): point = 38
   Insn 103(l0): point = 41
   Insn 102(l0): point = 43
   Insn 101(l0): point = 45
   Insn 99(l0): point = 47
   Insn 100(l0): point = 49
   Insn 145(l0): point = 52
   Insn 67(l0): point = 54
   Insn 93(l0): point = 56
   Insn 66(l0): point = 58
   Insn 65(l0): point = 60
   Insn 64(l0): point = 62
   Insn 68(l0): point = 64
   Insn 63(l0): point = 66
   Insn 58(l0): point = 69
   Insn 57(l0): point = 71
   Insn 56(l0): point = 73
   Insn 143(l0): point = 76
   Insn 51(l0): point = 78
   Insn 50(l0): point = 80
   Insn 47(l0): point = 82
   Insn 46(l0): point = 84
   Insn 44(l0): point = 87
   Insn 43(l0): point = 89
   Insn 41(l0): point = 91
   Insn 39(l0): point = 93
   Insn 38(l0): point = 95
   Insn 35(l0): point = 98
   Insn 34(l0): point = 100
   Insn 141(l0): point = 103
   Insn 28(l0): point = 105
   Insn 26(l0): point = 108
   Insn 21(l0): point = 110
   Insn 20(l0): point = 112
   Insn 25(l0): point = 114
   Insn 139(l0): point = 116
   Insn 138(l0): point = 118
   Insn 24(l0): point = 120
   Insn 19(l0): point = 122
   Insn 6(l0): point = 124
   Insn 2(l0): point = 126
   Insn 95(l1): point = 129
   Insn 94(l1): point = 131
   Insn 88(l1): point = 134
   Insn 85(l1): point = 137
   Insn 83(l1): point = 140
   Insn 82(l1): point = 142
   Insn 80(l1): point = 144
   Insn 81(l1): point = 146
   Insn 79(l1): point = 148
   Insn 78(l1): point = 150
   Insn 76(l1): point = 153
   Insn 75(l1): point = 155
   Insn 73(l1): point = 157
   Insn 74(l1): point = 159
   Insn 72(l1): point = 161
 a0(r169): [4..27]
 a1(r173): [6..7]
 a2(r168): [10..11]
 a3(r146): [14..112]
 a4(r170): [16..17]
 a5(r147): [26..126]
 a6(r137): [35..64]
 a7(r141): [103..105] [76..91] [39..69]
 a8(r136): [50..60]
 a9(r135): [52..54]
 a10(r157): [55..58]
 a11(r174): [52..56]
 a12(r154): [79..80]
 a13(r148): [108..118] [101..102]
 a14(r142): [113..116]
 a15(r150): [113..122]
 a16(r151): [115..120]
 a17(r149): [119..124]
 a18(r135): [129..163]
 a19(r136): [129..163]
 a20(r137): [140..163] [129..137]
 a21(r141): [129..163]
 a22(r146): [129..163]
 a23(r147): [129..163]
 a24(r174): [129..163]
 a25(r164): [143..146]
 a26(r161): [143..144]
 a27(r163): [145..148]
 a28(r162): [145..150]
 a29(r160): [156..159]
 a30(r158): [156..157]
 a31(r159): [158..161]
 Rebuilding regno allocno list for 164
 Rebuilding regno allocno list for 163
 Rebuilding regno allocno list for 162
 Rebuilding regno allocno list for 161
 Rebuilding regno allocno list for 160
 Rebuilding regno allocno list for 159
 Rebuilding regno allocno list for 158
Compressing live ranges: from 164 to 55 - 33%
Ranges after the compression:
 a0(r169): [0..9]
 a1(r173): [1..2]
 a2(r168): [3..4]
 a3(r146): [40..54] [5..30]
 a4(r170): [6..7]
 a5(r147): [40..54] [8..39]
 a6(r137): [42..54] [40..41] [10..19]
 a7(r141): [40..54] [27..28] [21..24] [11..20]
 a8(r136): [40..54] [12..18]
 a9(r135): [40..54] [13..14]
 a10(r157): [15..17]
 a11(r174): [40..54] [13..16]
 a12(r154): [22..23]
 a13(r148): [29..34] [25..26]
 a14(r142): [31..33]
 a15(r150): [31..37]
 a16(r151): [32..36]
 a17(r149): [35..38]
 a25(r164): [43..46]
 a26(r161): [43..44]
 a27(r163): [45..47]
 a28(r162): [45..48]
 a29(r160): [49..52]
 a30(r158): [49..50]
 a31(r159): [51..53]
+++Allocating 200 bytes for conflict table (uncompressed size 256)
;; a0(r169,l0) conflicts: a1(r173,l0) a2(r168,l0) a3(r146,l0) a4(r170,l0) a5(r147,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r173,l0) conflicts: a0(r169,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a2(r168,l0) conflicts: a0(r169,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a3(r146,l0) conflicts: a0(r169,l0) a4(r170,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a10(r157,l0) a12(r154,l0) a13(r148,l0) a26(r161,l0) a25(r164,l0) a27(r163,l0) a28(r162,l0) a30(r158,l0) a29(r160,l0) a31(r159,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a4(r170,l0) conflicts: a0(r169,l0) a3(r146,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a5(r147,l0) conflicts: a0(r169,l0) a3(r146,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a10(r157,l0) a12(r154,l0) a13(r148,l0) a14(r142,l0) a15(r150,l0) a16(r151,l0) a17(r149,l0) a26(r161,l0) a25(r164,l0) a27(r163,l0) a28(r162,l0) a30(r158,l0) a29(r160,l0) a31(r159,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a6(r137,l0) conflicts: a3(r146,l0) a5(r147,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a10(r157,l0) a26(r161,l0) a25(r164,l0) a27(r163,l0) a28(r162,l0) a30(r158,l0) a29(r160,l0) a31(r159,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a7(r141,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a10(r157,l0) a12(r154,l0) a26(r161,l0) a25(r164,l0) a27(r163,l0) a28(r162,l0) a30(r158,l0) a29(r160,l0) a31(r159,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a8(r136,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a9(r135,l0) a11(r174,l0) a10(r157,l0) a26(r161,l0) a25(r164,l0) a27(r163,l0) a28(r162,l0) a30(r158,l0) a29(r160,l0) a31(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r135,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a11(r174,l0) a26(r161,l0) a25(r164,l0) a27(r163,l0) a28(r162,l0) a30(r158,l0) a29(r160,l0) a31(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r157,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a11(r174,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r174,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a10(r157,l0) a26(r161,l0) a25(r164,l0) a27(r163,l0) a28(r162,l0) a30(r158,l0) a29(r160,l0) a31(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r154,l0) conflicts: a3(r146,l0) a5(r147,l0) a7(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r148,l0) conflicts: a3(r146,l0) a5(r147,l0) a14(r142,l0) a15(r150,l0) a16(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r142,l0) conflicts: a5(r147,l0) a13(r148,l0) a15(r150,l0) a16(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a15(r150,l0) conflicts: a5(r147,l0) a13(r148,l0) a14(r142,l0) a16(r151,l0) a17(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a16(r151,l0) conflicts: a5(r147,l0) a13(r148,l0) a14(r142,l0) a15(r150,l0) a17(r149,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a17(r149,l0) conflicts: a5(r147,l0) a15(r150,l0) a16(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r164,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a26(r161,l0) a27(r163,l0) a28(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a26(r161,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a25(r164,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a27(r163,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a25(r164,l0) a28(r162,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r162,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a25(r164,l0) a27(r163,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r160,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a30(r158,l0) a31(r159,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a30(r158,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a29(r160,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a31(r159,l0) conflicts: a3(r146,l0) a5(r147,l0) a6(r137,l0) a7(r141,l0) a8(r136,l0) a9(r135,l0) a11(r174,l0) a29(r160,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a26(r161)<->a28(r162)@125:shuffle
  cp1:a26(r161)<->a27(r163)@125:shuffle
  cp2:a30(r158)<->a31(r159)@125:shuffle
  cp3:a13(r148)<->a17(r149)@125:shuffle
  cp4:a3(r146)<->a15(r150)@125:shuffle
  cp5:a3(r146)<->a14(r142)@125:shuffle
  regions=2, blocks=18, points=55
    allocnos=32, copies=6, conflicts=2, ranges=36

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r169 1r173 2r168 3r146 4r170 5r147 6r137 7r141 8r136 9r135 10r157 11r174 12r154 13r148 14r142 15r150 16r151 17r149 25r164 26r161 27r163 28r162 29r160 30r158 31r159
    modified regnos: 135 136 137 141 142 146 147 148 149 150 151 154 157 158 159 160 161 162 163 164 168 169 170 173 174
    border:
    Pressure: GENERAL_REGS=10
    Reg 169 of GENERAL_REGS has 4 regs less
    Reg 173 of GENERAL_REGS has 4 regs less
    Reg 168 of GENERAL_REGS has 4 regs less
    Reg 146 of GENERAL_REGS has 5 regs less
    Reg 170 of GENERAL_REGS has 4 regs less
    Reg 147 of GENERAL_REGS has 5 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 5 regs less
      Pushing a31(r159,l0)
      Pushing a30(r158,l0)
      Pushing a29(r160,l0)
      Pushing a28(r162,l0)
      Pushing a27(r163,l0)
      Pushing a26(r161,l0)
      Pushing a25(r164,l0)
      Pushing a16(r151,l0)
      Pushing a15(r150,l0)
      Pushing a14(r142,l0)
      Pushing a13(r148,l0)
      Pushing a12(r154,l0)
      Pushing a11(r174,l0)
      Pushing a8(r136,l0)
      Pushing a10(r157,l0)
      Pushing a17(r149,l0)
      Pushing a9(r135,l0)
      Pushing a6(r137,l0)
      Pushing a4(r170,l0)
      Pushing a2(r168,l0)
      Pushing a1(r173,l0)
      Pushing a0(r169,l0)
      Pushing a5(r147,l0)
      Pushing a3(r146,l0)
      Pushing a7(r141,l0)
      Popping a7(r141,l0)  -- assign reg 4
      Popping a3(r146,l0)  -- assign reg 5
      Popping a5(r147,l0)  -- assign reg 6
      Popping a0(r169,l0)  -- assign reg 12
      Popping a1(r173,l0)  -- assign reg 14
      Popping a2(r168,l0)  -- assign reg 14
      Popping a4(r170,l0)  -- assign reg 14
      Popping a6(r137,l0)  -- assign reg 7
      Popping a9(r135,l0)  -- assign reg 3
      Popping a17(r149,l0)  -- assign reg 3
      Popping a10(r157,l0)  -- assign reg 3
      Popping a8(r136,l0)  -- assign reg 1
      Popping a11(r174,l0)  -- assign reg 2
      Popping a12(r154,l0)  -- assign reg 2
      Popping a13(r148,l0)  -- assign reg 3
      Popping a14(r142,l0)  -- assign reg 2
      Popping a15(r150,l0)  -- assign reg 5
      Popping a16(r151,l0)  -- assign reg 1
      Popping a25(r164,l0)  -- assign reg 0
      Popping a26(r161,l0)  -- assign reg 12
      Popping a27(r163,l0)  -- assign reg 12
      Popping a28(r162,l0)  -- assign reg 14
      Popping a29(r160,l0)  -- assign reg 0
      Popping a30(r158,l0)  -- assign reg 12
      Popping a31(r159,l0)  -- assign reg 12
Disposition:
    9:r135 l0     3    8:r136 l0     1    6:r137 l0     7    7:r141 l0     4
   14:r142 l0     2    3:r146 l0     5    5:r147 l0     6   13:r148 l0     3
   17:r149 l0     3   15:r150 l0     5   16:r151 l0     1   12:r154 l0     2
   10:r157 l0     3   30:r158 l0    12   31:r159 l0    12   29:r160 l0     0
   26:r161 l0    12   28:r162 l0    14   27:r163 l0    12   25:r164 l0     0
    2:r168 l0    14    0:r169 l0    12    4:r170 l0    14    1:r173 l0    14
   11:r174 l0     2
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 147
insn=6, live_throughout: 13, 147, dead_or_set: 149
insn=19, live_throughout: 13, 147, 149, dead_or_set: 150
insn=24, live_throughout: 13, 147, 149, 150, dead_or_set: 151
insn=138, live_throughout: 13, 147, 150, 151, dead_or_set: 148, 149
insn=139, live_throughout: 13, 147, 148, 150, 151, dead_or_set: 142
insn=25, live_throughout: 13, 142, 147, 148, 150, dead_or_set: 151
insn=20, live_throughout: 13, 24, 147, 148, dead_or_set: 142, 146, 150
insn=21, live_throughout: 13, 24, 146, 147, 148, dead_or_set: 
insn=26, live_throughout: 13, 146, 147, 148, dead_or_set: 
insn=28, live_throughout: 13, 146, 147, dead_or_set: 141
insn=141, live_throughout: 13, 141, 146, 147, dead_or_set: 
insn=31, live_throughout: 13, 146, 147, 148, dead_or_set: 
insn=34, live_throughout: 13, 146, 147, dead_or_set: 148
insn=35, live_throughout: 13, 146, 147, dead_or_set: 
insn=38, live_throughout: 13, 146, 147, dead_or_set: 0
insn=39, live_throughout: 13, 146, 147, dead_or_set: 0, 2, 3, 14
insn=41, live_throughout: 13, 146, 147, dead_or_set: 2, 141
insn=43, live_throughout: 13, 141, 146, 147, dead_or_set: 
insn=44, live_throughout: 13, 141, 146, 147, dead_or_set: 
insn=46, live_throughout: 13, 141, 146, 147, dead_or_set: 0
insn=47, live_throughout: 13, 141, 146, 147, dead_or_set: 0, 2, 3, 14
insn=50, live_throughout: 13, 141, 146, 147, dead_or_set: 2, 154
insn=51, live_throughout: 13, 146, 147, dead_or_set: 141, 154
insn=143, live_throughout: 13, 141, 146, 147, dead_or_set: 
insn=54, live_throughout: 13, 146, 147, dead_or_set: 
insn=56, live_throughout: 13, 146, 147, dead_or_set: 0
insn=57, live_throughout: 13, 146, 147, dead_or_set: 0, 2, 14
insn=58, live_throughout: 13, 146, 147, dead_or_set: 2, 141
insn=59, live_throughout: 13, 141, 146, 147, dead_or_set: 
insn=63, live_throughout: 13, 141, 146, 147, dead_or_set: 0
insn=68, live_throughout: 0, 13, 141, 146, 147, dead_or_set: 137
insn=64, live_throughout: 13, 137, 141, 146, 147, dead_or_set: 0, 14
insn=65, live_throughout: 13, 137, 141, 146, 147, dead_or_set: 0, 136
insn=66, live_throughout: 13, 136, 137, 141, 146, 147, dead_or_set: 157
insn=93, live_throughout: 13, 136, 137, 141, 146, 147, 157, dead_or_set: 174
insn=67, live_throughout: 13, 136, 137, 141, 146, 147, 174, dead_or_set: 135, 157
insn=145, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=92, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=72, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 159
insn=74, live_throughout: 13, 135, 136, 137, 141, 146, 147, 159, 174, dead_or_set: 160
insn=73, live_throughout: 13, 135, 136, 137, 141, 146, 147, 160, 174, dead_or_set: 158, 159
insn=75, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 158, 160
insn=76, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=78, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 162
insn=79, live_throughout: 13, 135, 136, 137, 141, 146, 147, 162, 174, dead_or_set: 163
insn=81, live_throughout: 13, 135, 136, 137, 141, 146, 147, 162, 163, 174, dead_or_set: 164
insn=80, live_throughout: 13, 135, 136, 137, 141, 146, 147, 164, 174, dead_or_set: 161, 162, 163
insn=82, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 161, 164
insn=83, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=85, live_throughout: 13, 135, 136, 141, 146, 147, 174, dead_or_set: 137
insn=86, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=88, live_throughout: 13, 136, 137, 141, 146, 147, 174, dead_or_set: 135
insn=90, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=94, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=95, live_throughout: 13, 135, 136, 137, 141, 146, 147, 174, dead_or_set: 
insn=100, live_throughout: 13, 137, 141, 146, 147, dead_or_set: 1, 136
insn=99, live_throughout: 1, 13, 137, 141, 146, 147, dead_or_set: 0
insn=101, live_throughout: 13, 137, 141, 146, 147, dead_or_set: 0, 1, 14
insn=102, live_throughout: 13, 137, 141, 146, 147, dead_or_set: 
insn=103, live_throughout: 13, 137, 141, 146, 147, dead_or_set: 
insn=106, live_throughout: 13, 137, 146, 147, dead_or_set: 1, 141
insn=105, live_throughout: 1, 13, 137, 146, 147, dead_or_set: 0
insn=107, live_throughout: 13, 146, 147, dead_or_set: 0, 1, 14, 137
insn=109, live_throughout: 13, 14, 146, 147, dead_or_set: 0
insn=110, live_throughout: 13, 14, 146, 147, dead_or_set: 
insn=111, live_throughout: 13, 146, 147, dead_or_set: 
insn=115, live_throughout: 13, 146, 147, dead_or_set: 169
insn=125, live_throughout: 13, 146, 169, dead_or_set: 1, 147
insn=127, live_throughout: 1, 13, 146, 169, dead_or_set: 3
insn=124, live_throughout: 1, 3, 13, 146, 169, dead_or_set: 0
insn=126, live_throughout: 0, 1, 3, 13, 146, 169, dead_or_set: 2
insn=151, live_throughout: 0, 1, 2, 3, 13, 146, 169, dead_or_set: 170
insn=118, live_throughout: 0, 1, 2, 3, 13, 146, 169, dead_or_set: 170
insn=119, live_throughout: 0, 1, 2, 3, 13, 169, dead_or_set: 146
insn=150, live_throughout: 0, 1, 2, 3, 13, 169, dead_or_set: 168
insn=114, live_throughout: 0, 1, 2, 3, 13, 169, dead_or_set: 168
insn=149, live_throughout: 0, 1, 2, 3, 13, 169, dead_or_set: 173
insn=123, live_throughout: 0, 1, 2, 3, 13, 169, dead_or_set: 173
insn=116, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 169
insn=128, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=134, live_throughout: 13, 14, dead_or_set: 
init_insns for 149: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 19 (nil))
init_insns for 157: (insn_list:REG_DEP_TRUE 66 (nil))
init_insns for 159: (insn_list:REG_DEP_TRUE 72 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 78 (nil))
init_insns for 163: (insn_list:REG_DEP_TRUE 79 (nil))
init_insns for 164: (insn_list:REG_DEP_TRUE 81 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 150 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 115 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 151 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 149 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 93 (nil))
changing reg in insn 88
changing reg in insn 67
changing reg in insn 94
changing reg in insn 88
changing reg in insn 85
changing reg in insn 81
changing reg in insn 78
changing reg in insn 74
changing reg in insn 72
changing reg in insn 81
changing reg in insn 78
changing reg in insn 74
changing reg in insn 72
changing reg in insn 94
changing reg in insn 65
changing reg in insn 100
changing reg in insn 85
changing reg in insn 68
changing reg in insn 107
changing reg in insn 102
changing reg in insn 51
changing reg in insn 41
changing reg in insn 58
changing reg in insn 28
changing reg in insn 51
changing reg in insn 43
changing reg in insn 106
changing reg in insn 73
changing reg in insn 139
changing reg in insn 20
changing reg in insn 20
changing reg in insn 119
changing reg in insn 56
changing reg in insn 46
changing reg in insn 38
changing reg in insn 28
changing reg in insn 21
changing reg in insn 2
changing reg in insn 125
changing reg in insn 105
changing reg in insn 79
changing reg in insn 21
changing reg in insn 19
changing reg in insn 6
changing reg in insn 79
changing reg in insn 19
changing reg in insn 6
changing reg in insn 138
changing reg in insn 34
changing reg in insn 6
changing reg in insn 138
changing reg in insn 138
changing reg in insn 24
changing reg in insn 19
changing reg in insn 20
changing reg in insn 24
changing reg in insn 25
changing reg in insn 50
changing reg in insn 51
changing reg in insn 66
changing reg in insn 93
changing reg in insn 67
changing reg in insn 73
changing reg in insn 75
changing reg in insn 72
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 80
changing reg in insn 82
changing reg in insn 78
changing reg in insn 80
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 150
changing reg in insn 114
changing reg in insn 115
changing reg in insn 127
changing reg in insn 116
changing reg in insn 151
changing reg in insn 118
changing reg in insn 149
changing reg in insn 123
changing reg in insn 93
changing reg in insn 94
Spilling for insn 21.
Spilling for insn 118.
Spilling for insn 119.
Spilling for insn 114.
Spilling for insn 123.
Spilling for insn 116.

Reloads for insn # 21
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                                                        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                                                        (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])

Reloads for insn # 118
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])

Reloads for insn # 119
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])

Reloads for insn # 114
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])

Reloads for insn # 123
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 116
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
deleting insn with uid = 100.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 64.
verify found no changes in insn with uid = 101.
rescanning insn with uid = 107.
deleting insn with uid = 107.
verify found no changes in insn with uid = 128.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 37 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 37 (  2.1)


do_undefinstr

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,12u} r1={9d,4u} r2={12d,7u} r3={13d,14u,5d} r4={4d,4u} r5={2d,7u} r6={1d,6u,3d} r7={2d,2u} r12={10d,6u} r13={1d,27u} r14={12d,5u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={16d,9u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 650{539d,103u,8e} in 73{69 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 2 2 NOTE_INSN_DELETED)

(insn 2 7 6 2 arch/arm/kernel/traps.c:342 (set (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 19 2 arch/arm/kernel/traps.c:343 (set (reg:SI 3 r3 [orig:149 <variable>.uregs+64 ] [149])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 19 6 24 2 arch/arm/kernel/traps.c:353 (set (reg:SI 5 r5 [orig:150 <variable>.uregs+60 ] [150])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (nil)))

(insn 24 19 138 2 arch/arm/kernel/traps.c:357 (set (reg:SI 1 r1 [151])
        (and:SI (reg:SI 3 r3 [orig:149 <variable>.uregs+64 ] [149])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 138 24 139 2 arch/arm/kernel/traps.c:343 discrim 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [orig:149 <variable>.uregs+64 ] [149])
                        (const_int 32 [0x20]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [148])
                (and:SI (reg:SI 3 r3 [orig:149 <variable>.uregs+64 ] [149])
                    (const_int 32 [0x20])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 139 138 25 2 arch/arm/kernel/traps.c:343 discrim 2 (set (reg/v:SI 2 r2 [orig:142 correction ] [142])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 2 [0x2])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (nil))

(insn 25 139 20 2 arch/arm/kernel/traps.c:357 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [151])
            (const_int 19 [0x13]))) 219 {*arm_cmpsi_insn} (nil))

(insn 20 25 21 2 arch/arm/kernel/traps.c:353 (set (reg:SI 5 r5 [orig:146 D.18571 ] [146])
        (minus:SI (reg:SI 5 r5 [orig:150 <variable>.uregs+60 ] [150])
            (reg/v:SI 2 r2 [orig:142 correction ] [142]))) 28 {*arm_subsi3_insn} (nil))

(insn 21 20 26 2 arch/arm/kernel/traps.c:353 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])
        (reg:SI 5 r5 [orig:146 D.18571 ] [146])) 167 {*arm_movsi_insn} (nil))

(jump_insn 26 21 27 2 arch/arm/kernel/traps.c:357 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 3 [r3] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 27 26 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 141 3 arch/arm/kernel/traps.c:367 (set (reg/v:SI 4 r4 [orig:141 instr ] [141])
        (mem:SI (reg:SI 5 r5 [orig:146 D.18571 ] [146]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 141 28 142 3 (set (pc)
        (label_ref 59)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 142 141 31)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 31 142 32 4 148 "" [1 uses])

(note 32 31 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 32 35 4 arch/arm/kernel/traps.c:368 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 4 arch/arm/kernel/traps.c:368 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 14 [lr] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 4 [r4] 24 [cc]
;; live  kill	 3 [r3] 14 [lr] 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 36 35 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 40 36 42 5 NOTE_INSN_DELETED)

(note 42 40 38 5 NOTE_INSN_DELETED)

(insn 38 42 39 5 arch/arm/kernel/traps.c:369 (set (reg/v:SI 0 r0 [ __p ])
        (reg:SI 5 r5 [orig:146 D.18571 ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 41 5 arch/arm/kernel/traps.c:369 discrim 3 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011968))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011968))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 3 r3))
        ]) -1 (nil))

(insn 41 39 43 5 arch/arm/kernel/traps.c:369 discrim 5 (set (reg/v:SI 4 r4 [orig:141 instr ] [141])
        (zero_extend:SI (reg:HI 2 r2 [ __r2 ]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 43 41 44 5 arch/arm/kernel/traps.c:370 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:141 instr ] [141])
            (const_int 59392 [0xe800]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 5 arch/arm/kernel/traps.c:370 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 14 [lr] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 4 [r4]
;; live  kill	 3 [r3] 14 [lr] 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 45 44 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 48 45 49 6 NOTE_INSN_DELETED)

(note 49 48 46 6 NOTE_INSN_DELETED)

(insn 46 49 47 6 arch/arm/kernel/traps.c:372 (set (reg/v:SI 0 r0 [ __p ])
        (plus:SI (reg:SI 5 r5 [orig:146 D.18571 ] [146])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (nil))

(insn 47 46 50 6 arch/arm/kernel/traps.c:372 discrim 3 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011973))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_2") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011973))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 3 r3))
        ]) -1 (nil))

(insn 50 47 51 6 arch/arm/kernel/traps.c:374 (set (reg:SI 2 r2 [orig:154 __r2.298 ] [154])
        (zero_extend:SI (reg:HI 2 r2 [ __r2 ]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 51 50 143 6 arch/arm/kernel/traps.c:374 (set (reg/v:SI 4 r4 [orig:141 instr ] [141])
        (ior:SI (ashift:SI (reg/v:SI 4 r4 [orig:141 instr ] [141])
                (const_int 16 [0x10]))
            (reg:SI 2 r2 [orig:154 __r2.298 ] [154]))) 270 {*arith_shiftsi} (nil))

(jump_insn 143 51 144 6 (set (pc)
        (label_ref 59)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [100.0%] 

(barrier 144 143 54)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 4 [r4] 14 [lr] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 4 [r4]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [50.0%] 
(code_label 54 144 55 7 150 "" [1 uses])

(note 55 54 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 7 arch/arm/kernel/traps.c:377 (set (reg/v:SI 0 r0 [ __p ])
        (reg:SI 5 r5 [orig:146 D.18571 ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 7 arch/arm/kernel/traps.c:377 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011979))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 7011979))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
        ]) -1 (nil))

(insn 58 57 59 7 arch/arm/kernel/traps.c:377 discrim 5 (set (reg/v:SI 4 r4 [orig:141 instr ] [141])
        (reg/v:SI 2 r2 [ __r2 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 3 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%] 
;; Pred edge  3 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 59 58 60 8 149 "" [3 uses])

(note 60 59 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 63 60 68 8 arch/arm/kernel/traps.c:331 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 68 63 64 8 arch/arm/kernel/traps.c:329 (set (reg/v/f:SI 7 r7 [orig:137 fn ] [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 64 68 65 8 arch/arm/kernel/traps.c:331 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_raw_spin_lock_irqsave") [flags 0x41] <function_decl 0x10b28b80 _raw_spin_lock_irqsave>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 65 64 66 8 arch/arm/kernel/traps.c:331 (set (reg/v:SI 1 r1 [orig:136 flags ] [136])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 66 65 93 8 arch/arm/kernel/traps.c:332 (set (reg/f:SI 3 r3 [157])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 93 66 67 8 arch/arm/kernel/traps.c:332 discrim 1 (set (reg/f:SI 2 r2 [174])
        (reg/f:SI 3 r3 [157])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 67 93 145 8 arch/arm/kernel/traps.c:332 (set (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
        (mem/s/f/j/c:SI (reg/f:SI 3 r3 [157]) [0 undef_hook.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 undef_hook.next+0 S4 A32])
        (nil)))

(jump_insn 145 67 146 8 (set (pc)
        (label_ref 90)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 146 145 92)

;; Start of basic block ( 13) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  13 [91.0%] 
(code_label 92 146 71 9 153 "" [1 uses])

(note 71 92 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 74 9 arch/arm/kernel/traps.c:333 (set (reg:SI 12 ip [orig:159 <variable>.instr_mask ] [159])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 8 [0x8])) [0 <variable>.instr_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 8 [0x8])) [0 <variable>.instr_mask+0 S4 A32])
        (nil)))

(insn 74 72 73 9 arch/arm/kernel/traps.c:333 (set (reg:SI 0 r0 [orig:160 <variable>.instr_val ] [160])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 12 [0xc])) [0 <variable>.instr_val+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 12 [0xc])) [0 <variable>.instr_val+0 S4 A32])
        (nil)))

(insn 73 74 75 9 arch/arm/kernel/traps.c:333 (set (reg:SI 12 ip [158])
        (and:SI (reg/v:SI 4 r4 [orig:141 instr ] [141])
            (reg:SI 12 ip [orig:159 <variable>.instr_mask ] [159]))) 67 {*arm_andsi3_insn} (nil))

(insn 75 73 76 9 arch/arm/kernel/traps.c:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [158])
            (reg:SI 0 r0 [orig:160 <variable>.instr_val ] [160]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 76 75 77 9 arch/arm/kernel/traps.c:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 9 -> ( 10 12)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  9 [28.0%]  (fallthru)
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 10 arch/arm/kernel/traps.c:334 (set (reg:SI 14 lr [orig:162 <variable>.cpsr_mask ] [162])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 16 [0x10])) [0 <variable>.cpsr_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 16 [0x10])) [0 <variable>.cpsr_mask+0 S4 A32])
        (nil)))

(insn 79 78 81 10 arch/arm/kernel/traps.c:334 (set (reg:SI 12 ip [orig:163 <variable>.uregs+64 ] [163])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:147 regs ] [147])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 81 79 80 10 arch/arm/kernel/traps.c:334 (set (reg:SI 0 r0 [orig:164 <variable>.cpsr_val ] [164])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpsr_val+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpsr_val+0 S4 A32])
        (nil)))

(insn 80 81 82 10 arch/arm/kernel/traps.c:334 (set (reg:SI 12 ip [161])
        (and:SI (reg:SI 14 lr [orig:162 <variable>.cpsr_mask ] [162])
            (reg:SI 12 ip [orig:163 <variable>.uregs+64 ] [163]))) 67 {*arm_andsi3_insn} (nil))

(insn 82 80 83 10 arch/arm/kernel/traps.c:334 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [161])
            (reg:SI 0 r0 [orig:164 <variable>.cpsr_val ] [164]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 10 arch/arm/kernel/traps.c:334 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  11 [28.0%]  (fallthru)
;; Succ edge  12 [72.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  10 [28.0%]  (fallthru)
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 11 arch/arm/kernel/traps.c:335 (set (reg/v/f:SI 7 r7 [orig:137 fn ] [137])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
                (const_int 24 [0x18])) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  9 [72.0%] 
;; Pred edge  10 [72.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 86 85 87 12 152 "" [2 uses])

(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 90 12 arch/arm/kernel/traps.c:332 (set (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:135 hook ] [135]) [0 <variable>.node.next+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 12 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 90 88 91 13 151 "" [1 uses])

(note 91 90 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 94 91 95 13 arch/arm/kernel/traps.c:332 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
            (reg/f:SI 2 r2 [174]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 3 r3 [orig:135 hook ] [135])
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]))
        (nil)))

(jump_insn 95 94 96 13 arch/arm/kernel/traps.c:332 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 13 -> ( 9 14)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  9 [91.0%] 
;; Succ edge  14 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  13 [9.0%]  (fallthru,loop_exit)
(note 96 95 99 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 99 96 101 14 include/linux/spinlock.h:340 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 101 99 102 14 include/linux/spinlock.h:340 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock_irqrestore") [flags 0x41] <function_decl 0x10b28f00 _raw_spin_unlock_irqrestore>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 102 101 103 14 arch/arm/kernel/traps.c:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 7 r7 [orig:137 fn ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 103 102 104 14 arch/arm/kernel/traps.c:338 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  15 [69.8%]  (fallthru)
;; Succ edge  16 [30.2%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [69.8%]  (fallthru)
(note 104 103 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 108 104 106 15 NOTE_INSN_DELETED)

(insn 106 108 105 15 arch/arm/kernel/traps.c:338 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:141 instr ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 105 106 107 15 arch/arm/kernel/traps.c:338 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:147 regs ] [147])) 167 {*arm_movsi_insn} (nil))

(call_insn 107 105 109 15 arch/arm/kernel/traps.c:338 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/v/f:SI 7 r7 [orig:137 fn ] [137]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 109 107 110 15 arch/arm/kernel/traps.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 110 109 111 15 arch/arm/kernel/traps.c:380 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8745 [0x2229])
        (nil)))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  17 [87.5%] 
;; Succ edge  16 [12.6%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  15 [12.6%]  (fallthru)
;; Pred edge  14 [30.2%] 
(code_label 111 110 112 16 154 "" [1 uses])

(note 112 111 121 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 121 112 115 16 NOTE_INSN_DELETED)

(insn 115 121 125 16 arch/arm/kernel/traps.c:392 (set (reg:SI 12 ip [169])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 125 115 127 16 arch/arm/kernel/traps.c:396 (set (reg:SI 1 r1)
        (reg/v/f:SI 6 r6 [orig:147 regs ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 127 125 124 16 arch/arm/kernel/traps.c:396 (set (reg:SI 3 r3)
        (reg:SI 12 ip [169])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 124 127 126 16 arch/arm/kernel/traps.c:396 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1127c100>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC34") [flags 0x82] <string_cst 0x1127c100>)
        (nil)))

(insn 126 124 151 16 arch/arm/kernel/traps.c:396 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 151 126 118 16 arch/arm/kernel/traps.c:393 (set (reg:SI 14 lr [170])
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 196609 [0x30001])
        (nil)))

(insn 118 151 119 16 arch/arm/kernel/traps.c:393 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 info.si_code+0 S4 A64])
        (reg:SI 14 lr [170])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(insn 119 118 150 16 arch/arm/kernel/traps.c:394 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 5 r5 [orig:146 D.18571 ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 150 119 114 16 arch/arm/kernel/traps.c:391 (set (reg:SI 14 lr [168])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 114 150 149 16 arch/arm/kernel/traps.c:391 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 info.si_signo+0 S4 A64])
        (reg:SI 14 lr [168])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 149 114 123 16 arch/arm/kernel/traps.c:396 (set (reg:SI 14 lr [173])
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 6 [0x6])
        (nil)))

(insn 123 149 116 16 arch/arm/kernel/traps.c:396 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 14 lr [173])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 6 [0x6])
        (nil)))

(insn 116 123 128 16 arch/arm/kernel/traps.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 info.si_errno+0 S4 A32])
        (reg:SI 12 ip [169])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 128 116 134 16 arch/arm/kernel/traps.c:396 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x3] <function_decl 0x512e8d00 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 16 -> ( 17)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [87.5%] 
(code_label 134 128 137 17 156 "" [1 uses])

(note 137 134 148 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 17 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 148 137 152 NOTE_INSN_DELETED)

(note 152 148 0 NOTE_INSN_DELETED)

