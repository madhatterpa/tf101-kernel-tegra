
;; Function ipi_flush_tlb_all (ipi_flush_tlb_all)[0:746]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 22(l0): point = 5
   Insn 21(l0): point = 7
   Insn 19(l0): point = 10
   Insn 18(l0): point = 12
   Insn 14(l0): point = 15
   Insn 13(l0): point = 17
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 8(l0): point = 24
   Insn 7(l0): point = 26
   Insn 6(l0): point = 28
 a0(r139): [6..7]
 a1(r133): [13..26]
 a2(r137): [16..17]
 a3(r135): [27..28]
Compressing live ranges: from 31 to 8 - 25%
Ranges after the compression:
 a0(r139): [0..1]
 a1(r133): [2..5]
 a2(r137): [3..4]
 a3(r135): [6..7]
+++Allocating 16 bytes for conflict table (uncompressed size 32)
;; a0(r139,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a2(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r137,l0) conflicts: a1(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=7, points=8
    allocnos=4, copies=0, conflicts=2, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r139 1r133 2r137 3r135
    modified regnos: 133 135 137 139
    border:
    Pressure: GENERAL_REGS=3
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a3(r135,l0)
      Pushing a2(r137,l0)
      Pushing a0(r139,l0)
      Pushing a1(r133,l0)
      Popping a1(r133,l0)  -- assign reg 3
      Popping a0(r139,l0)  -- assign reg 3
      Popping a2(r137,l0)  -- assign reg 2
      Popping a3(r135,l0)  -- assign reg 3
Disposition:
    1:r133 l0     3    3:r135 l0     3    2:r137 l0     2    0:r139 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, 14, dead_or_set: 135
insn=7, live_throughout: 13, 14, dead_or_set: 133, 135
insn=8, live_throughout: 13, 14, 133, dead_or_set: 
insn=10, live_throughout: 13, 14, 133, dead_or_set: 
insn=11, live_throughout: 13, 14, 133, dead_or_set: 
insn=13, live_throughout: 13, 14, 133, dead_or_set: 137
insn=14, live_throughout: 13, 14, 133, dead_or_set: 137
insn=15, live_throughout: 13, 14, 133, dead_or_set: 
insn=18, live_throughout: 13, 14, dead_or_set: 133
insn=19, live_throughout: 13, 14, dead_or_set: 
insn=21, live_throughout: 13, 14, dead_or_set: 139
insn=22, live_throughout: 13, 14, dead_or_set: 139
insn=23, live_throughout: 13, 14, dead_or_set: 
insn=25, live_throughout: 13, 14, dead_or_set: 
insn=26, live_throughout: 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 139: (insn_list:REG_DEP_TRUE 21 (nil))
changing reg in insn 7
changing reg in insn 18
changing reg in insn 10
changing reg in insn 6
changing reg in insn 7
changing reg in insn 13
changing reg in insn 14
changing reg in insn 21
changing reg in insn 22


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


ipi_flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d} r1={1d} r2={2d,1u} r3={4d,4u} r12={1d} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 29{15d,14u,0e} in 13{13 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 6 2 NOTE_INSN_DELETED)

(insn 6 9 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [135])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 8 7 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 10 8 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 15 14 16 4 2 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 16 18 4 NOTE_INSN_DELETED)

(insn 18 17 19 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 19 18 20 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 22 21 23 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [139])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 23 22 24 6 3 "" [1 uses])

(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 26 25 53 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 53 26 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_page (ipi_flush_tlb_page)[0:748]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 63.
verify found no changes in insn with uid = 63.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a0 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r150,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r160: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r150,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a13(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 48(l0): point = 0
   Insn 45(l0): point = 3
   Insn 57(l0): point = 5
   Insn 56(l0): point = 7
   Insn 41(l0): point = 10
   Insn 40(l0): point = 12
   Insn 36(l0): point = 15
   Insn 34(l0): point = 18
   Insn 31(l0): point = 20
   Insn 28(l0): point = 22
   Insn 33(l0): point = 24
   Insn 27(l0): point = 26
   Insn 25(l0): point = 28
   Insn 23(l0): point = 30
   Insn 20(l0): point = 32
   Insn 61(l0): point = 34
   Insn 19(l0): point = 36
   Insn 60(l0): point = 38
   Insn 17(l0): point = 40
   Insn 16(l0): point = 42
   Insn 12(l0): point = 44
   Insn 59(l0): point = 46
   Insn 58(l0): point = 48
   Insn 10(l0): point = 50
   Insn 9(l0): point = 52
   Insn 63(l0): point = 54
   Insn 13(l0): point = 56
   Insn 7(l0): point = 58
   Insn 2(l0): point = 60
 a0(r160): [4..7]
 a1(r137): [8..42]
 a2(r133): [13..52]
 a3(r135): [20..20]
 a4(r148): [21..32]
 a5(r156): [21..22]
 a6(r154): [23..26]
 a7(r155): [27..28]
 a8(r153): [27..30]
 a9(r150): [31..38]
 a10(r149): [33..36]
 a11(r139): [37..58]
 a12(r145): [43..48]
 a13(r143): [43..44]
 a14(r142): [45..50]
 a15(r146): [49..56]
 a16(r141): [53..54]
 a17(r140): [57..60]
Compressing live ranges: from 63 to 32 - 50%
Ranges after the compression:
 a0(r160): [0..1]
 a1(r137): [2..18]
 a2(r133): [3..25]
 a3(r135): [4..4]
 a4(r148): [5..13]
 a5(r156): [5..6]
 a6(r154): [7..8]
 a7(r155): [9..10]
 a8(r153): [9..11]
 a9(r150): [12..17]
 a10(r149): [14..15]
 a11(r139): [16..30]
 a12(r145): [19..22]
 a13(r143): [19..20]
 a14(r142): [21..24]
 a15(r146): [23..28]
 a16(r141): [26..27]
 a17(r140): [29..31]
+++Allocating 136 bytes for conflict table (uncompressed size 144)
;; a0(r160,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a2(r133,l0) a3(r135,l0) a5(r156,l0) a4(r148,l0) a6(r154,l0) a7(r155,l0) a8(r153,l0) a9(r150,l0) a10(r149,l0) a11(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r133,l0) conflicts: a1(r137,l0) a3(r135,l0) a5(r156,l0) a4(r148,l0) a6(r154,l0) a7(r155,l0) a8(r153,l0) a9(r150,l0) a10(r149,l0) a11(r139,l0) a13(r143,l0) a12(r145,l0) a14(r142,l0) a15(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r135,l0) conflicts: a1(r137,l0) a2(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r148,l0) conflicts: a1(r137,l0) a2(r133,l0) a5(r156,l0) a6(r154,l0) a7(r155,l0) a8(r153,l0) a9(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r156,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r154,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r155,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r148,l0) a8(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r153,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r148,l0) a7(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r150,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r148,l0) a10(r149,l0) a11(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r149,l0) conflicts: a1(r137,l0) a2(r133,l0) a9(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r139,l0) conflicts: a1(r137,l0) a2(r133,l0) a9(r150,l0) a13(r143,l0) a12(r145,l0) a14(r142,l0) a15(r146,l0) a16(r141,l0) a17(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r145,l0) conflicts: a2(r133,l0) a11(r139,l0) a13(r143,l0) a14(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r143,l0) conflicts: a2(r133,l0) a11(r139,l0) a12(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r142,l0) conflicts: a2(r133,l0) a11(r139,l0) a12(r145,l0) a15(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r146,l0) conflicts: a2(r133,l0) a11(r139,l0) a14(r142,l0) a16(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r141,l0) conflicts: a11(r139,l0) a15(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r140,l0) conflicts: a11(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r160)<->a1(r137)@125:shuffle
  cp1:a12(r145)<->a15(r146)@125:shuffle
  cp2:a1(r137)<->a13(r143)@125:shuffle
  cp3:a1(r137)<->a12(r145)@125:shuffle
  cp4:a4(r148)<->a10(r149)@125:shuffle
  cp5:a6(r154)<->a8(r153)@250:shuffle
  cp6:a6(r154)<->a7(r155)@125:shuffle
  cp7:a5(r156)<->a6(r154)@125:shuffle
  regions=1, blocks=7, points=32
    allocnos=18, copies=8, conflicts=1, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r160 1r137 2r133 3r135 4r148 5r156 6r154 7r155 8r153 9r150 10r149 11r139 12r145 13r143 14r142 15r146 16r141 17r140
    modified regnos: 133 135 137 139 140 141 142 143 145 146 148 149 150 153 154 155 156 160
    border:
    Pressure: GENERAL_REGS=6
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
      Pushing a3(r135,l0)
      Pushing a16(r141,l0)
      Pushing a15(r146,l0)
      Pushing a14(r142,l0)
      Pushing a13(r143,l0)
      Pushing a10(r149,l0)
      Pushing a7(r155,l0)
      Pushing a6(r154,l0)
      Pushing a5(r156,l0)
      Pushing a4(r148,l0)
      Pushing a17(r140,l0)
      Pushing a11(r139,l0)
      Pushing a2(r133,l0)
      Pushing a1(r137,l0)
      Pushing a12(r145,l0)
      Pushing a9(r150,l0)
      Pushing a8(r153,l0)
      Pushing a0(r160,l0)
      Popping a0(r160,l0)  -- assign reg 3
      Popping a8(r153,l0)  -- assign reg 2
      Popping a9(r150,l0)  -- assign reg 2
      Popping a12(r145,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 3
      Popping a2(r133,l0)  -- assign reg 1
      Popping a11(r139,l0)  -- assign reg 12
      Popping a17(r140,l0)  -- assign reg 0
      Popping a4(r148,l0)  -- assign reg 0
      Popping a5(r156,l0)  -- assign reg 2
      Popping a6(r154,l0)  -- assign reg 2
      Popping a7(r155,l0)  -- assign reg 12
      Popping a10(r149,l0)  -- assign reg 0
      Popping a13(r143,l0)  -- assign reg 2
      Popping a14(r142,l0)  -- assign reg 2
      Popping a15(r146,l0)  -- assign reg 3
      Popping a16(r141,l0)  -- assign reg 2
      Popping a3(r135,l0)  -- assign reg 2
Disposition:
    2:r133 l0     1    3:r135 l0     2    1:r137 l0     3   11:r139 l0    12
   17:r140 l0     0   16:r141 l0     2   14:r142 l0     2   13:r143 l0     2
   12:r145 l0     3   15:r146 l0     3    4:r148 l0     0   10:r149 l0     0
    9:r150 l0     2    8:r153 l0     2    6:r154 l0     2    7:r155 l0    12
    5:r156 l0     2    0:r160 l0     3
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 140
insn=7, live_throughout: 13, 14, 140, dead_or_set: 139
insn=13, live_throughout: 13, 14, 139, dead_or_set: 140, 146
insn=63, live_throughout: 13, 14, 139, 146, dead_or_set: 141
insn=9, live_throughout: 13, 14, 139, 146, dead_or_set: 133, 141
insn=10, live_throughout: 13, 14, 133, 139, 146, dead_or_set: 142
insn=58, live_throughout: 13, 14, 133, 139, 142, dead_or_set: 145, 146
insn=59, live_throughout: 13, 14, 133, 139, 142, dead_or_set: 145
insn=12, live_throughout: 13, 14, 133, 139, 145, dead_or_set: 142, 143
insn=16, live_throughout: 13, 14, 133, 139, dead_or_set: 137, 143, 145
insn=17, live_throughout: 13, 14, 133, 137, 139, dead_or_set: 
insn=60, live_throughout: 13, 14, 133, 137, 139, dead_or_set: 150
insn=19, live_throughout: 13, 14, 133, 137, 150, dead_or_set: 139, 149
insn=61, live_throughout: 13, 14, 133, 137, 149, dead_or_set: 150
insn=20, live_throughout: 13, 14, 133, 137, 150, dead_or_set: 148, 149
insn=23, live_throughout: 13, 14, 133, 137, 148, dead_or_set: 150, 153
insn=25, live_throughout: 13, 14, 133, 137, 148, 153, dead_or_set: 155
insn=27, live_throughout: 13, 14, 133, 137, 148, dead_or_set: 153, 154, 155
insn=33, live_throughout: 13, 14, 133, 137, 148, 154, dead_or_set: 
insn=28, live_throughout: 13, 14, 24, 133, 137, 148, dead_or_set: 154, 156
insn=31, live_throughout: 13, 14, 24, 133, 137, dead_or_set: 135, 148, 156
insn=34, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=36, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=37, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=40, live_throughout: 13, 14, 137, dead_or_set: 133
insn=41, live_throughout: 13, 14, 137, dead_or_set: 
insn=56, live_throughout: 13, 14, dead_or_set: 137, 160
insn=57, live_throughout: 13, 14, dead_or_set: 160
insn=45, live_throughout: 13, 14, dead_or_set: 160
insn=46, live_throughout: 13, 14, dead_or_set: 
insn=48, live_throughout: 13, 14, dead_or_set: 
init_insns for 141: (insn_list:REG_DEP_TRUE 63 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 10 (nil))
changing reg in insn 9
changing reg in insn 40
changing reg in insn 33
changing reg in insn 31
changing reg in insn 16
changing reg in insn 56
changing reg in insn 36
changing reg in insn 7
changing reg in insn 19
changing reg in insn 10
changing reg in insn 10
changing reg in insn 2
changing reg in insn 13
changing reg in insn 7
changing reg in insn 63
changing reg in insn 9
changing reg in insn 10
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
changing reg in insn 59
changing reg in insn 58
changing reg in insn 59
changing reg in insn 16
changing reg in insn 13
changing reg in insn 58
changing reg in insn 20
changing reg in insn 31
changing reg in insn 19
changing reg in insn 20
changing reg in insn 61
changing reg in insn 60
changing reg in insn 61
changing reg in insn 23
changing reg in insn 23
changing reg in insn 27
changing reg in insn 27
changing reg in insn 25
changing reg in insn 28
changing reg in insn 27
changing reg in insn 28
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 57
changing reg in insn 56
changing reg in insn 57
changing reg in insn 45
Spilling for insn 60.
Using reg 0 for reload 0

Reloads for insn # 60
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 0 r0)
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


ipi_flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 24[cc]
;;  ref usage 	r0={4d,5u} r1={2d,2u} r2={10d,10u,1d} r3={7d,7u} r12={3d,3u,1d} r13={1d,7u} r14={1d,1u} r24={5d,2u} 
;;    total ref usage 72{33d,37u,2e} in 29{29 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 14 2 NOTE_INSN_DELETED)

(note 14 11 21 2 NOTE_INSN_DELETED)

(note 21 14 26 2 NOTE_INSN_DELETED)

(note 26 21 32 2 NOTE_INSN_DELETED)

(note 32 26 7 2 NOTE_INSN_DELETED)

(insn 7 32 13 2 arch/arm/kernel/smp_tlb.c:55 (set (reg/f:SI 12 ip [orig:139 D.13370 ] [139])
        (mem/s/f/j:SI (reg/v/f:SI 0 r0 [orig:140 arg ] [140]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 7 63 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [orig:146 <variable>.ta_start ] [146])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:140 arg ] [140])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 63 13 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 2 r2 [141])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 9 63 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [141])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 10 9 58 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 2 r2 [orig:142 <variable>.vm_mm ] [142])
        (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 58 10 59 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 3 r3 [orig:146 <variable>.ta_start ] [146])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 59 58 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 3 r3 [145])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 59 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 2 r2 [143])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 2 r2 [orig:142 <variable>.vm_mm ] [142])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 16 12 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
        (ior:SI (reg:SI 2 r2 [143])
            (reg:SI 3 r3 [145]))) 89 {*arm_iorsi3} (nil))

(insn 17 16 65 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 65 17 60 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 60 65 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [150])
        (and:SI (reg:SI 0 r0)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 60 61 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [orig:149 <variable>.vm_mm ] [149])
        (mem/s/f/j:SI (reg/f:SI 12 ip [orig:139 D.13370 ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 19 20 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [150])
        (and:SI (reg:SI 2 r2 [150])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 20 61 23 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [148])
        (plus:SI (reg/f:SI 0 r0 [orig:149 <variable>.vm_mm ] [149])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 23 20 25 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [150])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 23 27 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 12 ip [155])
        (plus:SI (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 27 25 33 2 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 2 r2 [orig:154 <variable>.cpu ] [154])
                (if_then_else:SI (ge (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
                        (const_int 0 [0x0]))
                    (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
                    (reg:SI 12 ip [155])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 33 27 28 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 28 33 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [156])
        (ashiftrt:SI (reg:SI 2 r2 [orig:154 <variable>.cpu ] [154])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:153 <variable>.cpu ] [153])
            (const_int 32 [0x20]))
        (nil)))

(insn 31 28 34 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:135 D.13510 ] [135])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [156])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [148])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 34 31 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 35 34 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 37 36 38 4 9 "" [1 uses])

(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 39 38 40 4 NOTE_INSN_DELETED)

(insn 40 39 41 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 41 40 42 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 43 42 56 5 NOTE_INSN_DELETED)

(insn 56 43 57 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 3 r3 [160])
        (and:SI (reg/v:SI 3 r3 [orig:137 uaddr ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 57 56 45 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 3 r3 [160])
        (and:SI (reg:SI 3 r3 [160])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 45 57 46 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 3 r3 [160])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 46 45 47 6 10 "" [1 uses])

(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 62 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 48 64 NOTE_INSN_DELETED)

(note 64 62 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_kernel_page (ipi_flush_tlb_kernel_page)[0:749]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 38.
verify found no changes in insn with uid = 38.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 27(l0): point = 0
   Insn 26(l0): point = 2
   Insn 23(l0): point = 5
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 16(l0): point = 13
   Insn 14(l0): point = 16
   Insn 13(l0): point = 18
   Insn 11(l0): point = 20
   Insn 7(l0): point = 22
   Insn 38(l0): point = 24
   Insn 36(l0): point = 26
   Insn 35(l0): point = 28
   Insn 8(l0): point = 30
 a0(r134): [6..28]
 a1(r133): [11..22]
 a2(r136): [23..24]
 a3(r137): [29..30]
Compressing live ranges: from 33 to 8 - 24%
Ranges after the compression:
 a0(r134): [0..5]
 a1(r133): [1..2]
 a2(r136): [3..4]
 a3(r137): [6..7]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r134,l0) conflicts: a1(r133,l0) a2(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r136,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r137,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r134)<->a3(r137)@125:shuffle
  regions=1, blocks=7, points=8
    allocnos=4, copies=1, conflicts=2, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r134 1r133 2r136 3r137
    modified regnos: 133 134 136 137
    border:
    Pressure: GENERAL_REGS=3
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a3(r137,l0)
      Pushing a2(r136,l0)
      Pushing a1(r133,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 3
      Popping a1(r133,l0)  -- assign reg 2
      Popping a2(r136,l0)  -- assign reg 2
      Popping a3(r137,l0)  -- assign reg 3
Disposition:
    1:r133 l0     2    0:r134 l0     3    2:r136 l0     2    3:r137 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 13, 14, dead_or_set: 0, 137
insn=35, live_throughout: 13, 14, dead_or_set: 134, 137
insn=36, live_throughout: 13, 14, dead_or_set: 134
insn=38, live_throughout: 13, 14, 134, dead_or_set: 136
insn=7, live_throughout: 13, 14, 134, dead_or_set: 133, 136
insn=11, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=13, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=14, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=16, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=17, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=20, live_throughout: 13, 14, 134, dead_or_set: 133
insn=21, live_throughout: 13, 14, 134, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 134
insn=24, live_throughout: 13, 14, dead_or_set: 
insn=26, live_throughout: 13, 14, dead_or_set: 
insn=27, live_throughout: 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 38 (nil))
changing reg in insn 7
changing reg in insn 20
changing reg in insn 13
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 23
changing reg in insn 16
changing reg in insn 38
changing reg in insn 7
changing reg in insn 8
changing reg in insn 35


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


ipi_flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d} r2={3d,3u} r3={4d,4u} r12={1d} r13={1d,6u} r14={1d,1u} r24={4d,2u} 
;;    total ref usage 33{16d,17u,0e} in 14{14 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 12 2 NOTE_INSN_DELETED)

(note 12 9 8 2 NOTE_INSN_DELETED)

(insn 8 12 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg:SI 3 r3 [orig:137 <variable>.ta_start ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ arg ])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 35 8 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg:SI 3 r3 [orig:137 <variable>.ta_start ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 36 35 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 36 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 2 r2 [136])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 7 38 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [136])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 11 7 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 13 11 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 15 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 18 20 4 NOTE_INSN_DELETED)

(insn 20 19 21 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 21 20 22 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 24 23 25 6 16 "" [1 uses])

(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 27 26 37 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 37 27 39 NOTE_INSN_DELETED)

(note 39 37 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_range (ipi_flush_tlb_range)[0:750]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 21.
verify found no changes in insn with uid = 21.
deleting insn with uid = 7.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000

   Insn 12(l0): point = 0
   Insn 21(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 11(l0): point = 8
   Insn 2(l0): point = 10
 a0(r135): [1..2]
 a1(r134): [5..10]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r134,l0) conflicts:
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r134
    modified regnos: 134 135
    border:
    Pressure: GENERAL_REGS=5
    Reg 135 of GENERAL_REGS has 4 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r134,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 3
Disposition:
    1:r134 l0     3    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 134
insn=11, live_throughout: 13, 134, dead_or_set: 2
insn=9, live_throughout: 2, 13, 134, dead_or_set: 0
insn=10, live_throughout: 0, 2, 13, dead_or_set: 1, 134
insn=21, live_throughout: 0, 1, 2, 13, dead_or_set: 135
insn=12, live_throughout: 13, dead_or_set: 0, 1, 2, 14, 135
init_insns for 135: (insn_list:REG_DEP_TRUE 21 (nil))
changing reg in insn 2
changing reg in insn 11
changing reg in insn 10
changing reg in insn 9
changing reg in insn 21
changing reg in insn 12


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 12.
deleting insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ipi_flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={4d,4u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 141{129d,12u,0e} in 6{5 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 2 2 NOTE_INSN_DELETED)

(insn 2 8 11 2 arch/arm/kernel/smp_tlb.c:66 (set (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
        (reg:SI 0 r0 [ arg ])) 167 {*arm_movsi_insn} (nil))

(insn 11 2 9 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:134 arg ] [134]) [0 <variable>.ta_vma+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 11 10 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 21 2 arch/arm/kernel/smp_tlb.c:69 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:134 arg ] [134])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 10 12 2 arch/arm/kernel/smp_tlb.c:69 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 12 21 20 2 arch/arm/kernel/smp_tlb.c:69 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [135]) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 12 22 NOTE_INSN_DELETED)

(note 22 20 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_kernel_range (ipi_flush_tlb_kernel_range)[0:751]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 20.
verify found no changes in insn with uid = 20.
deleting insn with uid = 7.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 11(l0): point = 0
   Insn 20(l0): point = 2
   Insn 9(l0): point = 4
   Insn 10(l0): point = 6
   Insn 2(l0): point = 8
 a0(r135): [1..2]
 a1(r134): [5..8]
Compressing live ranges: from 11 to 4 - 36%
Ranges after the compression:
 a0(r135): [0..1]
 a1(r134): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r134,l0) conflicts:
;;     total conflict hard regs: 1
;;     conflict hard regs: 1

  regions=1, blocks=3, points=4
    allocnos=2, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135 1r134
    modified regnos: 134 135
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a1(r134,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 0
Disposition:
    1:r134 l0     0    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 134
insn=10, live_throughout: 13, 134, dead_or_set: 1
insn=9, live_throughout: 1, 13, dead_or_set: 0, 134
insn=20, live_throughout: 0, 1, 13, dead_or_set: 135
insn=11, live_throughout: 13, dead_or_set: 0, 1, 14, 135
init_insns for 135: (insn_list:REG_DEP_TRUE 20 (nil))
changing reg in insn 2
changing reg in insn 10
changing reg in insn 9
changing reg in insn 20
changing reg in insn 11
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 11.
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ipi_flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={2d} r3={3d,1u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 136{127d,9u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 10 2 NOTE_INSN_DELETED)

(insn 10 8 9 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 8 [0x8])) [0 <variable>.ta_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 10 20 2 arch/arm/kernel/smp_tlb.c:76 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:134 arg ] [134])
                (const_int 4 [0x4])) [0 <variable>.ta_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 9 11 2 arch/arm/kernel/smp_tlb.c:76 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 11 20 19 2 arch/arm/kernel/smp_tlb.c:76 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [135])
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 19 11 21 NOTE_INSN_DELETED)

(note 21 19 0 NOTE_INSN_DELETED)


;; Function flush_tlb_kernel_range (flush_tlb_kernel_range)[0:757]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 47.
verify found no changes in insn with uid = 47.
deleting insn with uid = 7.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a0 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r142: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 34(l0): point = 1
   Insn 30(l0): point = 3
   Insn 33(l0): point = 5
   Insn 32(l0): point = 7
   Insn 44(l0): point = 10
   Insn 25(l0): point = 12
   Insn 19(l0): point = 14
   Insn 18(l0): point = 16
   Insn 22(l0): point = 18
   Insn 24(l0): point = 20
   Insn 23(l0): point = 22
   Insn 16(l0): point = 25
   Insn 15(l0): point = 27
   Insn 14(l0): point = 29
   Insn 12(l0): point = 31
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 8(l0): point = 38
   Insn 47(l0): point = 40
   Insn 3(l0): point = 42
   Insn 2(l0): point = 44
 a0(r142): [2..3]
 a1(r135): [15..42] [6..9]
 a2(r134): [17..44] [8..9]
 a3(r139): [28..29]
 a4(r133): [30..31]
 a5(r137): [37..38]
 a6(r136): [39..40]
Compressing live ranges: from 47 to 17 - 36%
Ranges after the compression:
 a0(r142): [0..1]
 a1(r135): [5..15] [2..4]
 a2(r134): [6..16] [3..4]
 a3(r139): [7..8]
 a4(r133): [9..10]
 a5(r137): [11..12]
 a6(r136): [13..14]
+++Allocating 48 bytes for conflict table (uncompressed size 56)
;; a0(r142,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r135,l0) conflicts: a2(r134,l0) a3(r139,l0) a4(r133,l0) a5(r137,l0) a6(r136,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a2(r134,l0) conflicts: a1(r135,l0) a3(r139,l0) a4(r133,l0) a5(r137,l0) a6(r136,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a3(r139,l0) conflicts: a1(r135,l0) a2(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a4(r133,l0) conflicts: a1(r135,l0) a2(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a5(r137,l0) conflicts: a1(r135,l0) a2(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r136,l0) conflicts: a1(r135,l0) a2(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a3(r139)<->a4(r133)@125:shuffle
  regions=1, blocks=7, points=17
    allocnos=7, copies=1, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r142 1r135 2r134 3r139 4r133 5r137 6r136
    modified regnos: 133 134 135 136 137 139 142
    border:
    Pressure: GENERAL_REGS=5
    Reg 142 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
      Pushing a6(r136,l0)
      Pushing a5(r137,l0)
      Pushing a4(r133,l0)
      Pushing a3(r139,l0)
      Pushing a0(r142,l0)
      Pushing a2(r134,l0)
      Pushing a1(r135,l0)
      Popping a1(r135,l0)  -- assign reg 3
      Popping a2(r134,l0)  -- assign reg 12
      Popping a0(r142,l0)  -- assign reg 3
      Popping a3(r139,l0)  -- assign reg 2
      Popping a4(r133,l0)  -- assign reg 2
      Popping a5(r137,l0)  -- assign reg 2
      Popping a6(r136,l0)  -- assign reg 2
Disposition:
    4:r133 l0     2    2:r134 l0    12    1:r135 l0     3    6:r136 l0     2
    5:r137 l0     2    3:r139 l0     2    0:r142 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, dead_or_set: 0, 134
insn=3, live_throughout: 13, 134, dead_or_set: 1, 135
insn=47, live_throughout: 13, 134, 135, dead_or_set: 136
insn=8, live_throughout: 13, 134, 135, dead_or_set: 136, 137
insn=9, live_throughout: 13, 134, 135, dead_or_set: 137
insn=10, live_throughout: 13, 134, 135, dead_or_set: 
insn=12, live_throughout: 13, 134, 135, dead_or_set: 133
insn=14, live_throughout: 13, 134, 135, dead_or_set: 133, 139
insn=15, live_throughout: 13, 134, 135, dead_or_set: 139
insn=16, live_throughout: 13, 134, 135, dead_or_set: 
insn=23, live_throughout: 13, 134, 135, dead_or_set: 1
insn=24, live_throughout: 1, 13, 134, 135, dead_or_set: 2
insn=22, live_throughout: 1, 2, 13, 134, 135, dead_or_set: 0
insn=18, live_throughout: 0, 1, 2, 13, 135, dead_or_set: 134
insn=19, live_throughout: 0, 1, 2, 13, dead_or_set: 135
insn=25, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=44, live_throughout: 13, 14, dead_or_set: 
insn=28, live_throughout: 13, 134, 135, dead_or_set: 
insn=32, live_throughout: 13, 135, dead_or_set: 0, 134
insn=33, live_throughout: 0, 13, dead_or_set: 1, 135
insn=30, live_throughout: 0, 1, 13, dead_or_set: 142
insn=34, live_throughout: 13, dead_or_set: 0, 1, 14, 142
insn=40, live_throughout: 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 47 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 30 (nil))
changing reg in insn 12
changing reg in insn 14
changing reg in insn 2
changing reg in insn 32
changing reg in insn 18
changing reg in insn 3
changing reg in insn 33
changing reg in insn 19
changing reg in insn 47
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 14
changing reg in insn 15
changing reg in insn 30
changing reg in insn 34
Spilling for insn 18.
Spilling for insn 19.

Reloads for insn # 18
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 25.
rescanning insn with uid = 34.
deleting insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


flush_tlb_kernel_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={8d,5u} r3={5d,3u} r12={4d,2u} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 286{256d,30u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 12 ip [orig:134 start ] [134])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 47 2 arch/arm/kernel/smp_tlb.c:130 (set (reg/v:SI 3 r3 [orig:135 end ] [135])
        (reg:SI 1 r1 [ end ])) 167 {*arm_movsi_insn} (nil))

(insn 47 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [136])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 8 47 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
        (mem/c/i:SI (reg/f:SI 2 r2 [136]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:137 smp_on_up ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn 12 13 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 14 12 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [139])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __val ] [133])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [139])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2200 [0x898])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(insn 23 21 24 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 24 23 22 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 22 24 18 4 arch/arm/kernel/smp_tlb.c:135 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_range") [flags 0x3] <function_decl 0x10f4ce00 ipi_flush_tlb_kernel_range>)
        (nil)))

(insn 18 22 19 4 arch/arm/kernel/smp_tlb.c:133 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 12 ip [orig:134 start ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 25 4 arch/arm/kernel/smp_tlb.c:134 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 3 r3 [orig:135 end ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 19 44 4 arch/arm/kernel/smp_tlb.c:135 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 44 25 45 4 (set (pc)
        (label_ref 40)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 45 44 28)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 28 45 29 5 29 "" [2 uses])

(note 29 28 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 29 32 5 NOTE_INSN_DELETED)

(insn 32 31 33 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 0 r0)
        (reg/v:SI 12 ip [orig:134 start ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 30 5 arch/arm/kernel/smp_tlb.c:137 (set (reg:SI 1 r1)
        (reg/v:SI 3 r3 [orig:135 end ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 30 33 34 5 arch/arm/kernel/smp_tlb.c:137 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 34 30 40 5 arch/arm/kernel/smp_tlb.c:137 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [142])
                            (const_int 4 [0x4])) [0 cpu_tlb.flush_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 40 34 43 6 31 "" [1 uses])

(note 43 40 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 46 43 48 NOTE_INSN_DELETED)

(note 48 46 0 NOTE_INSN_DELETED)


;; Function flush_tlb_kernel_page (flush_tlb_kernel_page)[0:755]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 63.
verify found no changes in insn with uid = 63.
deleting insn with uid = 28.
scanning new insn with uid = 64.
verify found no changes in insn with uid = 64.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)

Pass 0 for finding allocno costs

    a2 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r143: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 48(l0): point = 1
   Insn 47(l0): point = 3
   Insn 44(l0): point = 6
   Insn 42(l0): point = 9
   Insn 41(l0): point = 11
   Insn 37(l0): point = 14
   Insn 35(l0): point = 17
   Insn 34(l0): point = 19
   Insn 32(l0): point = 21
   Insn 29(l0): point = 23
   Insn 63(l0): point = 25
   Insn 61(l0): point = 27
   Insn 60(l0): point = 29
   Insn 58(l0): point = 32
   Insn 23(l0): point = 34
   Insn 17(l0): point = 36
   Insn 20(l0): point = 38
   Insn 22(l0): point = 40
   Insn 21(l0): point = 42
   Insn 15(l0): point = 45
   Insn 14(l0): point = 47
   Insn 13(l0): point = 49
   Insn 11(l0): point = 51
   Insn 9(l0): point = 54
   Insn 8(l0): point = 56
   Insn 7(l0): point = 58
   Insn 64(l0): point = 60
   Insn 2(l0): point = 62
 a0(r134): [7..29]
 a1(r133): [12..23]
 a2(r143): [24..25]
 a3(r136): [37..62] [30..31]
 a4(r140): [48..49]
 a5(r135): [50..51]
 a6(r138): [57..58]
 a7(r137): [59..60]
Compressing live ranges: from 65 to 18 - 27%
Ranges after the compression:
 a0(r134): [0..5]
 a1(r133): [1..2]
 a2(r143): [3..4]
 a3(r136): [8..17] [6..7]
 a4(r140): [9..10]
 a5(r135): [11..12]
 a6(r138): [13..14]
 a7(r137): [15..16]
+++Allocating 64 bytes for conflict table (uncompressed size 64)
;; a0(r134,l0) conflicts: a1(r133,l0) a2(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r143,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r136,l0) conflicts: a4(r140,l0) a5(r135,l0) a6(r138,l0) a7(r137,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r140,l0) conflicts: a3(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r135,l0) conflicts: a3(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r138,l0) conflicts: a3(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r137,l0) conflicts: a3(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r134)<->a3(r136)@125:shuffle
  cp1:a4(r140)<->a5(r135)@125:shuffle
  regions=1, blocks=11, points=18
    allocnos=8, copies=2, conflicts=6, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r134 1r133 2r143 3r136 4r140 5r135 6r138 7r137
    modified regnos: 133 134 135 136 137 138 140 143
    border:
    Pressure: GENERAL_REGS=4
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a7(r137,l0)
      Pushing a6(r138,l0)
      Pushing a5(r135,l0)
      Pushing a4(r140,l0)
      Pushing a2(r143,l0)
      Pushing a1(r133,l0)
      Pushing a0(r134,l0)
      Pushing a3(r136,l0)
      Popping a3(r136,l0)  -- assign reg 3
      Popping a0(r134,l0)  -- assign reg 3
      Popping a1(r133,l0)  -- assign reg 2
      Popping a2(r143,l0)  -- assign reg 2
      Popping a4(r140,l0)  -- assign reg 2
      Popping a5(r135,l0)  -- assign reg 2
      Popping a6(r138,l0)  -- assign reg 2
      Popping a7(r137,l0)  -- assign reg 2
Disposition:
    1:r133 l0     2    0:r134 l0     3    5:r135 l0     2    3:r136 l0     3
    7:r137 l0     2    6:r138 l0     2    4:r140 l0     2    2:r143 l0     2
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 136
insn=64, live_throughout: 13, 14, 136, dead_or_set: 137
insn=7, live_throughout: 13, 14, 136, dead_or_set: 137, 138
insn=8, live_throughout: 13, 14, 136, dead_or_set: 138
insn=9, live_throughout: 13, 14, 136, dead_or_set: 
insn=11, live_throughout: 13, 14, 136, dead_or_set: 135
insn=13, live_throughout: 13, 14, 136, dead_or_set: 135, 140
insn=14, live_throughout: 13, 14, 136, dead_or_set: 140
insn=15, live_throughout: 13, 14, 136, dead_or_set: 
insn=21, live_throughout: 13, 136, dead_or_set: 1
insn=22, live_throughout: 1, 13, 136, dead_or_set: 2
insn=20, live_throughout: 1, 2, 13, 136, dead_or_set: 0
insn=17, live_throughout: 0, 1, 2, 13, dead_or_set: 136
insn=23, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=58, live_throughout: 13, 14, dead_or_set: 
insn=26, live_throughout: 13, 14, 136, dead_or_set: 
insn=60, live_throughout: 13, 14, dead_or_set: 134, 136
insn=61, live_throughout: 13, 14, dead_or_set: 134
insn=63, live_throughout: 13, 14, 134, dead_or_set: 143
insn=29, live_throughout: 13, 14, 134, dead_or_set: 133, 143
insn=32, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=34, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=35, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=37, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=38, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=41, live_throughout: 13, 14, 134, dead_or_set: 133
insn=42, live_throughout: 13, 14, 134, dead_or_set: 
insn=44, live_throughout: 13, 14, dead_or_set: 134
insn=45, live_throughout: 13, 14, dead_or_set: 
insn=47, live_throughout: 13, 14, dead_or_set: 
insn=48, live_throughout: 13, 14, dead_or_set: 
insn=54, live_throughout: 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 64 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 63 (nil))
changing reg in insn 29
changing reg in insn 41
changing reg in insn 34
changing reg in insn 61
changing reg in insn 60
changing reg in insn 61
changing reg in insn 44
changing reg in insn 37
changing reg in insn 11
changing reg in insn 13
changing reg in insn 2
changing reg in insn 60
changing reg in insn 17
changing reg in insn 64
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 13
changing reg in insn 14
changing reg in insn 63
changing reg in insn 29
Spilling for insn 17.

Reloads for insn # 17
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)


flush_tlb_kernel_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={9d,8u} r3={5d,5u} r12={2d} r13={1d,13u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 177{143d,34u,0e} in 28{27 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 64 2 arch/arm/kernel/smp_tlb.c:107 (set (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 64 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 7 64 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn 11 12 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:135 __val ] [135])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 13 11 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [140])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:135 __val ] [135])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [140])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 19 16 21 4 NOTE_INSN_DELETED)

(insn 21 19 22 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 22 21 20 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 20 22 17 4 arch/arm/kernel/smp_tlb.c:111 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_kernel_page") [flags 0x3] <function_decl 0x10f4cc00 ipi_flush_tlb_kernel_page>)
        (nil)))

(insn 17 20 23 4 arch/arm/kernel/smp_tlb.c:110 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 3 r3 [orig:136 kaddr ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 23 17 58 4 arch/arm/kernel/smp_tlb.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 58 23 59 4 (set (pc)
        (label_ref 54)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 59 58 26)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 26 59 27 5 35 "" [2 uses])

(note 27 26 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 30 27 33 5 NOTE_INSN_DELETED)

(note 33 30 60 5 NOTE_INSN_DELETED)

(insn 60 33 61 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:136 kaddr ] [136])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 61 60 63 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:430 (set (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
        (and:SI (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 63 61 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/f:SI 2 r2 [143])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 29 63 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:428 (set (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 2 r2 [143])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 32 29 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:433 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5164795)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 34 32 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:446 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:447 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5166587)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 38 37 39 7 37 "" [1 uses])

(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 40 39 41 7 NOTE_INSN_DELETED)

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:452 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 43 42 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:453 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 1") ("") 0 [
                    (reg/v:SI 3 r3 [orig:134 kaddr ] [134])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5167355)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 45 44 46 9 38 "" [1 uses])

(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:456 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5167739)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 48 47 54 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:457 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5167867)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 54 48 57 10 39 "" [1 uses])

(note 57 54 62 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 57 65 NOTE_INSN_DELETED)

(note 65 62 0 NOTE_INSN_DELETED)


;; Function flush_tlb_all (flush_tlb_all)[0:752]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 44(l0): point = 0
   Insn 43(l0): point = 2
   Insn 40(l0): point = 5
   Insn 39(l0): point = 7
   Insn 37(l0): point = 10
   Insn 36(l0): point = 12
   Insn 32(l0): point = 15
   Insn 31(l0): point = 17
   Insn 29(l0): point = 20
   Insn 28(l0): point = 22
   Insn 26(l0): point = 24
   Insn 25(l0): point = 26
   Insn 24(l0): point = 28
   Insn 20(l0): point = 31
   Insn 19(l0): point = 33
   Insn 18(l0): point = 35
   Insn 17(l0): point = 37
   Insn 14(l0): point = 40
   Insn 13(l0): point = 42
   Insn 12(l0): point = 44
   Insn 10(l0): point = 46
   Insn 8(l0): point = 49
   Insn 7(l0): point = 51
   Insn 6(l0): point = 53
   Insn 5(l0): point = 55
 a0(r144): [6..7]
 a1(r133): [13..26]
 a2(r142): [16..17]
 a3(r140): [27..28]
 a4(r138): [43..44]
 a5(r134): [45..46]
 a6(r136): [52..53]
 a7(r135): [54..55]
Compressing live ranges: from 58 to 16 - 27%
Ranges after the compression:
 a0(r144): [0..1]
 a1(r133): [2..5]
 a2(r142): [3..4]
 a3(r140): [6..7]
 a4(r138): [8..9]
 a5(r134): [10..11]
 a6(r136): [12..13]
 a7(r135): [14..15]
+++Allocating 16 bytes for conflict table (uncompressed size 64)
;; a0(r144,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a2(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r142,l0) conflicts: a1(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r140,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r138,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r136,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a4(r138)<->a5(r134)@125:shuffle
  regions=1, blocks=10, points=16
    allocnos=8, copies=1, conflicts=2, ranges=8

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r144 1r133 2r142 3r140 4r138 5r134 6r136 7r135
    modified regnos: 133 134 135 136 138 140 142 144
    border:
    Pressure: GENERAL_REGS=4
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a7(r135,l0)
      Pushing a6(r136,l0)
      Pushing a5(r134,l0)
      Pushing a4(r138,l0)
      Pushing a3(r140,l0)
      Pushing a2(r142,l0)
      Pushing a0(r144,l0)
      Pushing a1(r133,l0)
      Popping a1(r133,l0)  -- assign reg 3
      Popping a0(r144,l0)  -- assign reg 3
      Popping a2(r142,l0)  -- assign reg 2
      Popping a3(r140,l0)  -- assign reg 3
      Popping a4(r138,l0)  -- assign reg 3
      Popping a5(r134,l0)  -- assign reg 3
      Popping a6(r136,l0)  -- assign reg 3
      Popping a7(r135,l0)  -- assign reg 3
Disposition:
    1:r133 l0     3    5:r134 l0     3    7:r135 l0     3    6:r136 l0     3
    4:r138 l0     3    3:r140 l0     3    2:r142 l0     2    0:r144 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 135
insn=6, live_throughout: 13, 14, dead_or_set: 135, 136
insn=7, live_throughout: 13, 14, dead_or_set: 136
insn=8, live_throughout: 13, 14, dead_or_set: 
insn=10, live_throughout: 13, 14, dead_or_set: 134
insn=12, live_throughout: 13, 14, dead_or_set: 134, 138
insn=13, live_throughout: 13, 14, dead_or_set: 138
insn=14, live_throughout: 13, 14, dead_or_set: 
insn=17, live_throughout: 13, 14, dead_or_set: 0
insn=18, live_throughout: 0, 13, 14, dead_or_set: 1
insn=19, live_throughout: 0, 1, 13, 14, dead_or_set: 2
insn=20, live_throughout: 13, 14, dead_or_set: 0, 1, 2
insn=22, live_throughout: 13, 14, dead_or_set: 
insn=24, live_throughout: 13, 14, dead_or_set: 140
insn=25, live_throughout: 13, 14, dead_or_set: 133, 140
insn=26, live_throughout: 13, 14, 133, dead_or_set: 
insn=28, live_throughout: 13, 14, 133, dead_or_set: 
insn=29, live_throughout: 13, 14, 133, dead_or_set: 
insn=31, live_throughout: 13, 14, 133, dead_or_set: 142
insn=32, live_throughout: 13, 14, 133, dead_or_set: 142
insn=33, live_throughout: 13, 14, 133, dead_or_set: 
insn=36, live_throughout: 13, 14, dead_or_set: 133
insn=37, live_throughout: 13, 14, dead_or_set: 
insn=39, live_throughout: 13, 14, dead_or_set: 144
insn=40, live_throughout: 13, 14, dead_or_set: 144
insn=41, live_throughout: 13, 14, dead_or_set: 
insn=43, live_throughout: 13, 14, dead_or_set: 
insn=44, live_throughout: 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 140: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 39 (nil))
changing reg in insn 25
changing reg in insn 36
changing reg in insn 28
changing reg in insn 10
changing reg in insn 12
changing reg in insn 5
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 12
changing reg in insn 13
changing reg in insn 24
changing reg in insn 25
changing reg in insn 31
changing reg in insn 32
changing reg in insn 39
changing reg in insn 40


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 17 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)


flush_tlb_all

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={4d,2u} r3={9d,8u} r12={2d} r13={1d,10u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={8d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 168{141d,27u,0e} in 25{24 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 6 5 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
        (mem/c/i:SI (reg/f:SI 3 r3 [135]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 7 6 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:136 smp_on_up ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 10 3 NOTE_INSN_DELETED)

(insn 10 11 12 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 3 r3 [orig:134 __val ] [134])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 12 10 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 3 r3 [138])
        (zero_extract:SI (reg/v:SI 3 r3 [orig:134 __val ] [134])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 13 12 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [138])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 15 18 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_all") [flags 0x3] <function_decl 0x10f4c900 ipi_flush_tlb_all>)
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/kernel/smp_tlb.c:82 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 20 19 21 4 arch/arm/kernel/smp_tlb.c:82 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10b23600 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 21 20 22)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 22 21 23 5 43 "" [2 uses])

(note 23 22 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 27 23 24 5 NOTE_INSN_DELETED)

(insn 24 27 25 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 25 24 26 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 26 25 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5151227)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 28 26 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 29 28 30 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [142])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5151867)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 33 32 34 7 44 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 35 34 36 7 NOTE_INSN_DELETED)

(insn 36 35 37 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 40 39 41 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [144])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5152635)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 41 40 42 9 45 "" [1 uses])

(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5153019)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 44 43 53 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 5153147)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 53 44 54 NOTE_INSN_DELETED)

(note 54 53 0 NOTE_INSN_DELETED)


;; Function ipi_flush_tlb_mm (ipi_flush_tlb_mm)[0:747]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 77.
verify found no changes in insn with uid = 77.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)

Pass 0 for finding allocno costs

    a0 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:122000
  a6(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r168: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:122000
  a6(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 66(l0): point = 0
   Insn 63(l0): point = 3
   Insn 62(l0): point = 5
   Insn 60(l0): point = 8
   Insn 59(l0): point = 10
   Insn 55(l0): point = 13
   Insn 54(l0): point = 15
   Insn 52(l0): point = 18
   Insn 51(l0): point = 20
   Insn 47(l0): point = 23
   Insn 45(l0): point = 26
   Insn 44(l0): point = 28
   Insn 42(l0): point = 30
   Insn 38(l0): point = 32
   Insn 37(l0): point = 34
   Insn 36(l0): point = 36
   Insn 35(l0): point = 38
   Insn 31(l0): point = 40
   Insn 30(l0): point = 42
   Insn 27(l0): point = 44
   Insn 26(l0): point = 46
   Insn 24(l0): point = 48
   Insn 19(l0): point = 50
   Insn 22(l0): point = 52
   Insn 17(l0): point = 54
   Insn 16(l0): point = 56
   Insn 15(l0): point = 58
   Insn 14(l0): point = 60
   Insn 75(l0): point = 62
   Insn 74(l0): point = 64
   Insn 10(l0): point = 66
   Insn 9(l0): point = 68
   Insn 77(l0): point = 70
   Insn 7(l0): point = 72
   Insn 2(l0): point = 74
 a0(r168): [4..5]
 a1(r134): [11..68]
 a2(r166): [14..15]
 a3(r133): [16..72]
 a4(r143): [29..30]
 a5(r135): [31..64]
 a6(r162): [35..36]
 a7(r161): [37..38]
 a8(r138): [42..42]
 a9(r151): [43..50]
 a10(r158): [43..44]
 a11(r156): [45..46]
 a12(r157): [47..48]
 a13(r155): [47..52]
 a14(r146): [51..74]
 a15(r150): [57..58]
 a16(r149): [59..60]
 a17(r147): [69..70]
Compressing live ranges: from 77 to 33 - 42%
Ranges after the compression:
 a0(r168): [0..1]
 a1(r134): [2..28]
 a2(r166): [3..4]
 a3(r133): [5..31]
 a4(r143): [6..7]
 a5(r135): [8..27]
 a6(r162): [9..10]
 a7(r161): [11..12]
 a8(r138): [13..13]
 a9(r151): [14..20]
 a10(r158): [14..15]
 a11(r156): [16..17]
 a12(r157): [18..19]
 a13(r155): [18..22]
 a14(r146): [21..32]
 a15(r150): [23..24]
 a16(r149): [25..26]
 a17(r147): [29..30]
+++Allocating 136 bytes for conflict table (uncompressed size 144)
;; a0(r168,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts: a2(r166,l0) a3(r133,l0) a4(r143,l0) a5(r135,l0) a6(r162,l0) a7(r161,l0) a8(r138,l0) a10(r158,l0) a9(r151,l0) a11(r156,l0) a12(r157,l0) a13(r155,l0) a14(r146,l0) a15(r150,l0) a16(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r166,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r133,l0) conflicts: a1(r134,l0) a4(r143,l0) a5(r135,l0) a6(r162,l0) a7(r161,l0) a8(r138,l0) a10(r158,l0) a9(r151,l0) a11(r156,l0) a12(r157,l0) a13(r155,l0) a14(r146,l0) a15(r150,l0) a16(r149,l0) a17(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r143,l0) conflicts: a1(r134,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r135,l0) conflicts: a1(r134,l0) a3(r133,l0) a6(r162,l0) a7(r161,l0) a8(r138,l0) a10(r158,l0) a9(r151,l0) a11(r156,l0) a12(r157,l0) a13(r155,l0) a14(r146,l0) a15(r150,l0) a16(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r162,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r161,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r138,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r151,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a10(r158,l0) a11(r156,l0) a12(r157,l0) a13(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r158,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r151,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r156,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r151,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r157,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r151,l0) a13(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r155,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r151,l0) a12(r157,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r146,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a13(r155,l0) a15(r150,l0) a16(r149,l0) a17(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r150,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r149,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r147,l0) conflicts: a3(r133,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r166)<->a3(r133)@125:shuffle
  cp1:a15(r150)<->a16(r149)@125:shuffle
  cp2:a9(r151)<->a14(r146)@125:shuffle
  cp3:a11(r156)<->a13(r155)@250:shuffle
  cp4:a11(r156)<->a12(r157)@125:shuffle
  cp5:a10(r158)<->a11(r156)@125:shuffle
  cp6:a6(r162)<->a7(r161)@125:shuffle
  regions=1, blocks=9, points=33
    allocnos=18, copies=7, conflicts=1, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r168 1r134 2r166 3r133 4r143 5r135 6r162 7r161 8r138 9r151 10r158 11r156 12r157 13r155 14r146 15r150 16r149 17r147
    modified regnos: 133 134 135 138 143 146 147 149 150 151 155 156 157 158 161 162 166 168
    border:
    Pressure: GENERAL_REGS=7
    Reg 168 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
      Pushing a8(r138,l0)
      Pushing a17(r147,l0)
      Pushing a16(r149,l0)
      Pushing a15(r150,l0)
      Pushing a12(r157,l0)
      Pushing a11(r156,l0)
      Pushing a10(r158,l0)
      Pushing a9(r151,l0)
      Pushing a7(r161,l0)
      Pushing a6(r162,l0)
      Pushing a4(r143,l0)
      Pushing a3(r133,l0)
      Pushing a2(r166,l0)
      Pushing a0(r168,l0)
      Pushing a14(r146,l0)
      Pushing a1(r134,l0)
      Pushing a13(r155,l0)
      Pushing a5(r135,l0)
      Popping a5(r135,l0)  -- assign reg 3
      Popping a13(r155,l0)  -- assign reg 2
      Popping a1(r134,l0)  -- assign reg 4
      Popping a14(r146,l0)  -- assign reg 0
      Popping a0(r168,l0)  -- assign reg 3
      Popping a2(r166,l0)  -- assign reg 3
      Popping a3(r133,l0)  -- assign reg 5
      Popping a4(r143,l0)  -- assign reg 3
      Popping a6(r162,l0)  -- assign reg 2
      Popping a7(r161,l0)  -- assign reg 2
      Popping a9(r151,l0)  -- assign reg 0
      Popping a10(r158,l0)  -- assign reg 2
      Popping a11(r156,l0)  -- assign reg 2
      Popping a12(r157,l0)  -- assign reg 1
      Popping a15(r150,l0)  -- assign reg 2
      Popping a16(r149,l0)  -- assign reg 2
      Popping a17(r147,l0)  -- assign reg 3
      Popping a8(r138,l0)  -- assign reg 2
Disposition:
    3:r133 l0     5    1:r134 l0     4    5:r135 l0     3    8:r138 l0     2
    4:r143 l0     3   14:r146 l0     0   17:r147 l0     3   16:r149 l0     2
   15:r150 l0     2    9:r151 l0     0   13:r155 l0     2   11:r156 l0     2
   12:r157 l0     1   10:r158 l0     2    7:r161 l0     2    6:r162 l0     2
    2:r166 l0     3    0:r168 l0     3
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 146
insn=7, live_throughout: 13, 14, 146, dead_or_set: 133
insn=77, live_throughout: 13, 14, 133, 146, dead_or_set: 147
insn=9, live_throughout: 13, 14, 133, 146, dead_or_set: 134, 147
insn=10, live_throughout: 13, 14, 133, 134, 146, dead_or_set: 
insn=74, live_throughout: 13, 14, 133, 134, 146, dead_or_set: 135
insn=75, live_throughout: 13, 14, 133, 134, 146, dead_or_set: 135
insn=14, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 149
insn=15, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 149, 150
insn=16, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 150
insn=17, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 
insn=22, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 155
insn=19, live_throughout: 13, 14, 133, 134, 135, 155, dead_or_set: 146, 151
insn=24, live_throughout: 13, 14, 133, 134, 135, 151, 155, dead_or_set: 157
insn=26, live_throughout: 13, 14, 133, 134, 135, 151, dead_or_set: 155, 156, 157
insn=27, live_throughout: 13, 14, 133, 134, 135, 151, dead_or_set: 156, 158
insn=30, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 138, 151, 158
insn=31, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 
insn=35, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 161
insn=36, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 161, 162
insn=37, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 162
insn=38, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 
insn=42, live_throughout: 13, 14, 133, 134, dead_or_set: 135, 143
insn=44, live_throughout: 13, 14, 133, 134, dead_or_set: 143
insn=45, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=47, live_throughout: 13, 133, 134, dead_or_set: 14
insn=48, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=51, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=52, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=54, live_throughout: 13, 14, 134, dead_or_set: 133, 166
insn=55, live_throughout: 13, 14, 134, dead_or_set: 166
insn=56, live_throughout: 13, 14, 134, dead_or_set: 
insn=59, live_throughout: 13, 14, dead_or_set: 134
insn=60, live_throughout: 13, 14, dead_or_set: 
insn=62, live_throughout: 13, 14, dead_or_set: 168
insn=63, live_throughout: 13, 14, dead_or_set: 168
insn=64, live_throughout: 13, 14, dead_or_set: 
insn=66, live_throughout: 13, 14, dead_or_set: 
init_insns for 147: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 37 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 62 (nil))
changing reg in insn 7
changing reg in insn 54
changing reg in insn 9
changing reg in insn 59
changing reg in insn 51
changing reg in insn 75
changing reg in insn 74
changing reg in insn 75
changing reg in insn 42
changing reg in insn 37
changing reg in insn 35
changing reg in insn 22
changing reg in insn 16
changing reg in insn 14
changing reg in insn 36
changing reg in insn 15
changing reg in insn 35
changing reg in insn 22
changing reg in insn 14
changing reg in insn 30
changing reg in insn 42
changing reg in insn 44
changing reg in insn 2
changing reg in insn 19
changing reg in insn 7
changing reg in insn 77
changing reg in insn 9
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 19
changing reg in insn 30
changing reg in insn 22
changing reg in insn 26
changing reg in insn 26
changing reg in insn 24
changing reg in insn 27
changing reg in insn 26
changing reg in insn 27
changing reg in insn 24
changing reg in insn 26
changing reg in insn 27
changing reg in insn 30
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 54
changing reg in insn 55
changing reg in insn 62
changing reg in insn 63
Spilling for insn 74.
Using reg 2 for reload 0
Spilling for insn 16.
Spilling for insn 37.

Reloads for insn # 74
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 37
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


ipi_flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,1u} r2={11d,10u,1d} r3={8d,11u,5d} r4={1d,2u} r5={1d,1u} r12={2d} r13={1d,10u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={7d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 197{149d,42u,6e} in 35{34 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 3 25 2 NOTE_INSN_DELETED)

(note 25 12 43 2 NOTE_INSN_DELETED)

(note 43 25 7 2 NOTE_INSN_DELETED)

(insn 7 43 77 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 5 r5 [orig:133 D.13829 ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:146 arg ] [146])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 9 77 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [147])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 10 9 79 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 79 10 74 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 74 79 75 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 75 74 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 75 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [orig:149 <variable>.preempt_count ] [149])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [150])
        (plus:SI (reg:SI 2 r2 [orig:149 <variable>.preempt_count ] [149])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [150])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 22 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 22 17 19 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 19 22 24 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [151])
        (plus:SI (reg/v/f:SI 0 r0 [orig:146 arg ] [146])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 24 19 26 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 1 r1 [157])
        (plus:SI (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 26 24 27 2 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 2 r2 [orig:156 <variable>.cpu ] [156])
                (if_then_else:SI (ge (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
                        (const_int 0 [0x0]))
                    (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
                    (reg:SI 1 r1 [157])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 27 26 30 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [158])
        (ashiftrt:SI (reg:SI 2 r2 [orig:156 <variable>.cpu ] [156])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:155 <variable>.cpu ] [155])
            (const_int 32 [0x20]))
        (nil)))

(insn 30 27 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:138 D.13810 ] [138])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [158])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [151])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 35 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 31 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 36 35 37 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 37 36 38 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 42 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 42 38 44 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:143 D.13797 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.13817 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 42 45 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:143 D.13797 ] [143])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 45 44 46 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 46 45 47 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 47 46 48 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 48 47 49 4 50 "" [1 uses])

(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 4 NOTE_INSN_DELETED)

(insn 51 50 52 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 52 51 53 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 3 r3 [166])
        (and:SI (reg:SI 5 r5 [orig:133 D.13829 ] [133])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 3 r3 [166])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 56 55 57 6 51 "" [1 uses])

(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 6 NOTE_INSN_DELETED)

(insn 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 60 59 61 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  7 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  6 [61.0%]  (fallthru)
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 3 r3 [168])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [168])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [39.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 64 63 65 8 52 "" [1 uses])

(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 76 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 76 66 78 NOTE_INSN_DELETED)

(note 78 76 0 NOTE_INSN_DELETED)


;; Function on_each_cpu_mask.clone.0 (on_each_cpu_mask.clone.0)[0:758]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a2(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r134,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a15(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r139,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a2(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a14(r134,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a15(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 58(l0): point = 1
   Insn 56(l0): point = 4
   Insn 55(l0): point = 6
   Insn 53(l0): point = 8
   Insn 49(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 70(l0): point = 18
   Insn 69(l0): point = 20
   Insn 42(l0): point = 22
   Insn 39(l0): point = 25
   Insn 38(l0): point = 27
   Insn 36(l0): point = 30
   Insn 35(l0): point = 32
   Insn 33(l0): point = 34
   Insn 31(l0): point = 36
   Insn 28(l0): point = 38
   Insn 27(l0): point = 40
   Insn 32(l0): point = 42
   Insn 25(l0): point = 44
   Insn 23(l0): point = 46
   Insn 19(l0): point = 48
   Insn 17(l0): point = 50
   Insn 16(l0): point = 52
   Insn 15(l0): point = 54
   Insn 18(l0): point = 56
   Insn 14(l0): point = 58
   Insn 13(l0): point = 60
   Insn 12(l0): point = 62
   Insn 11(l0): point = 64
   Insn 4(l0): point = 66
   Insn 3(l0): point = 68
   Insn 72(l0): point = 70
   Insn 2(l0): point = 72
   Insn 71(l0): point = 74
 a0(r142): [7..8]
 a1(r139): [9..20]
 a2(r162): [13..14]
 a3(r161): [15..16]
 a4(r144): [26..72]
 a5(r145): [28..68]
 a6(r158): [33..34]
 a7(r157): [35..42]
 a8(r137): [35..36]
 a9(r146): [37..66]
 a10(r155): [37..38]
 a11(r153): [39..40]
 a12(r154): [41..44]
 a13(r133): [41..46]
 a14(r134): [47..74]
 a15(r149): [61..62]
 a16(r148): [63..64]
Compressing live ranges: from 77 to 31 - 40%
Ranges after the compression:
 a0(r142): [0..1]
 a1(r139): [2..7]
 a2(r162): [3..4]
 a3(r161): [5..6]
 a4(r144): [8..29]
 a5(r145): [9..28]
 a6(r158): [10..11]
 a7(r157): [12..19]
 a8(r137): [12..13]
 a9(r146): [14..27]
 a10(r155): [14..15]
 a11(r153): [16..17]
 a12(r154): [18..20]
 a13(r133): [18..21]
 a14(r134): [22..30]
 a15(r149): [23..24]
 a16(r148): [25..26]
+++Allocating 128 bytes for conflict table (uncompressed size 136)
;; a0(r142,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r139,l0) conflicts: a2(r162,l0) a3(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r162,l0) conflicts: a1(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r161,l0) conflicts: a1(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r144,l0) conflicts: a5(r145,l0) a6(r158,l0) a8(r137,l0) a7(r157,l0) a10(r155,l0) a9(r146,l0) a11(r153,l0) a12(r154,l0) a13(r133,l0) a14(r134,l0) a15(r149,l0) a16(r148,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a5(r145,l0) conflicts: a4(r144,l0) a6(r158,l0) a8(r137,l0) a7(r157,l0) a10(r155,l0) a9(r146,l0) a11(r153,l0) a12(r154,l0) a13(r133,l0) a14(r134,l0) a15(r149,l0) a16(r148,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a6(r158,l0) conflicts: a4(r144,l0) a5(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r157,l0) conflicts: a4(r144,l0) a5(r145,l0) a8(r137,l0) a10(r155,l0) a9(r146,l0) a11(r153,l0) a12(r154,l0) a13(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r137,l0) conflicts: a4(r144,l0) a5(r145,l0) a7(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r146,l0) conflicts: a4(r144,l0) a5(r145,l0) a7(r157,l0) a10(r155,l0) a11(r153,l0) a12(r154,l0) a13(r133,l0) a14(r134,l0) a15(r149,l0) a16(r148,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a10(r155,l0) conflicts: a4(r144,l0) a5(r145,l0) a7(r157,l0) a9(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r153,l0) conflicts: a4(r144,l0) a5(r145,l0) a7(r157,l0) a9(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r154,l0) conflicts: a4(r144,l0) a5(r145,l0) a7(r157,l0) a9(r146,l0) a13(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r133,l0) conflicts: a4(r144,l0) a5(r145,l0) a7(r157,l0) a9(r146,l0) a12(r154,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r134,l0) conflicts: a4(r144,l0) a5(r145,l0) a9(r146,l0) a15(r149,l0) a16(r148,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a15(r149,l0) conflicts: a4(r144,l0) a5(r145,l0) a9(r146,l0) a14(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a16(r148,l0) conflicts: a4(r144,l0) a5(r145,l0) a9(r146,l0) a14(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r162)<->a3(r161)@125:shuffle
  cp1:a15(r149)<->a16(r148)@125:shuffle
  cp2:a11(r153)<->a13(r133)@250:shuffle
  cp3:a11(r153)<->a12(r154)@125:shuffle
  cp4:a10(r155)<->a11(r153)@125:shuffle
  cp5:a6(r158)<->a8(r137)@125:shuffle
  cp6:a6(r158)<->a7(r157)@125:shuffle
  regions=1, blocks=7, points=31
    allocnos=17, copies=7, conflicts=2, ranges=17

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r142 1r139 2r162 3r161 4r144 5r145 6r158 7r157 8r137 9r146 10r155 11r153 12r154 13r133 14r134 15r149 16r148
    modified regnos: 133 134 137 139 142 144 145 146 148 149 153 154 155 157 158 161 162
    border:
    Pressure: GENERAL_REGS=9
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 5 regs less
    Reg 145 of GENERAL_REGS has 5 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 5 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 5 regs less
      Pushing a16(r148,l0)
      Pushing a15(r149,l0)
      Pushing a12(r154,l0)
      Pushing a11(r153,l0)
      Pushing a10(r155,l0)
      Pushing a8(r137,l0)
      Pushing a7(r157,l0)
      Pushing a6(r158,l0)
      Pushing a3(r161,l0)
      Pushing a2(r162,l0)
      Pushing a0(r142,l0)
      Pushing a13(r133,l0)
      Pushing a1(r139,l0)
      Pushing a9(r146,l0)
      Pushing a5(r145,l0)
      Pushing a4(r144,l0)
      Pushing a14(r134,l0)
      Popping a14(r134,l0)  -- assign reg 4
      Popping a4(r144,l0)  -- assign reg 5
      Popping a5(r145,l0)  -- assign reg 6
      Popping a9(r146,l0)  -- assign reg 7
      Popping a1(r139,l0)  -- assign reg 3
      Popping a13(r133,l0)  -- assign reg 3
      Popping a0(r142,l0)  -- assign reg 3
      Popping a2(r162,l0)  -- assign reg 2
      Popping a3(r161,l0)  -- assign reg 2
      Popping a6(r158,l0)  -- assign reg 3
      Popping a7(r157,l0)  -- assign reg 2
      Popping a8(r137,l0)  -- assign reg 3
      Popping a10(r155,l0)  -- assign reg 3
      Popping a11(r153,l0)  -- assign reg 3
      Popping a12(r154,l0)  -- assign reg 1
      Popping a15(r149,l0)  -- assign reg 3
      Popping a16(r148,l0)  -- assign reg 3
Disposition:
   13:r133 l0     3   14:r134 l0     4    8:r137 l0     3    1:r139 l0     3
    0:r142 l0     3    4:r144 l0     5    5:r145 l0     6    9:r146 l0     7
   16:r148 l0     3   15:r149 l0     3   11:r153 l0     3   12:r154 l0     1
   10:r155 l0     3    7:r157 l0     2    6:r158 l0     3    3:r161 l0     2
    2:r162 l0     2
New iteration of spill/restore move
+++Costs: overall 4000, reg 4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=71, live_throughout: 0, 1, 2, 13, dead_or_set: 134
insn=2, live_throughout: 1, 2, 13, 134, dead_or_set: 0, 144
insn=72, live_throughout: 1, 2, 13, 144, dead_or_set: 134
insn=3, live_throughout: 2, 13, 134, 144, dead_or_set: 1, 145
insn=4, live_throughout: 13, 134, 144, 145, dead_or_set: 2, 146
insn=11, live_throughout: 13, 134, 144, 145, 146, dead_or_set: 148
insn=12, live_throughout: 13, 134, 144, 145, 146, dead_or_set: 148, 149
insn=13, live_throughout: 13, 134, 144, 145, 146, dead_or_set: 149
insn=14, live_throughout: 13, 134, 144, 145, 146, dead_or_set: 
insn=18, live_throughout: 13, 134, 144, 145, 146, dead_or_set: 3
insn=15, live_throughout: 3, 13, 134, 144, 145, 146, dead_or_set: 0
insn=16, live_throughout: 0, 3, 13, 134, 144, 145, 146, dead_or_set: 1
insn=17, live_throughout: 0, 1, 3, 13, 134, 144, 145, 146, dead_or_set: 2
insn=19, live_throughout: 13, 134, 144, 145, 146, dead_or_set: 0, 1, 2, 3, 14
insn=23, live_throughout: 13, 14, 144, 145, 146, dead_or_set: 133, 134
insn=25, live_throughout: 13, 14, 133, 144, 145, 146, dead_or_set: 154
insn=32, live_throughout: 13, 14, 133, 144, 145, 146, 154, dead_or_set: 157
insn=27, live_throughout: 13, 14, 144, 145, 146, 157, dead_or_set: 133, 153, 154
insn=28, live_throughout: 13, 14, 144, 145, 146, 157, dead_or_set: 153, 155
insn=31, live_throughout: 13, 14, 144, 145, 157, dead_or_set: 137, 146, 155
insn=33, live_throughout: 13, 14, 144, 145, dead_or_set: 137, 157, 158
insn=35, live_throughout: 13, 14, 144, 145, dead_or_set: 158
insn=36, live_throughout: 13, 14, 144, 145, dead_or_set: 
insn=38, live_throughout: 13, 144, dead_or_set: 0, 145
insn=39, live_throughout: 13, dead_or_set: 0, 14, 144
insn=40, live_throughout: 13, 14, dead_or_set: 
insn=42, live_throughout: 13, 14, dead_or_set: 
insn=69, live_throughout: 13, 14, dead_or_set: 139
insn=70, live_throughout: 13, 14, dead_or_set: 139
insn=46, live_throughout: 13, 14, 139, dead_or_set: 161
insn=47, live_throughout: 13, 14, 139, dead_or_set: 161, 162
insn=48, live_throughout: 13, 14, 139, dead_or_set: 162
insn=49, live_throughout: 13, 14, 139, dead_or_set: 
insn=53, live_throughout: 13, 14, dead_or_set: 139, 142
insn=55, live_throughout: 13, 14, dead_or_set: 142
insn=56, live_throughout: 13, 14, dead_or_set: 
insn=58, live_throughout: 13, 14, dead_or_set: 
insn=65, live_throughout: 13, 14, dead_or_set: 
init_insns for 148: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 48 (nil))
changing reg in insn 23
changing reg in insn 27
changing reg in insn 27
changing reg in insn 25
changing reg in insn 32
changing reg in insn 28
changing reg in insn 72
changing reg in insn 71
changing reg in insn 72
changing reg in insn 23
changing reg in insn 13
changing reg in insn 11
changing reg in insn 12
changing reg in insn 11
changing reg in insn 31
changing reg in insn 33
changing reg in insn 70
changing reg in insn 69
changing reg in insn 70
changing reg in insn 53
changing reg in insn 48
changing reg in insn 46
changing reg in insn 47
changing reg in insn 46
changing reg in insn 53
changing reg in insn 55
changing reg in insn 2
changing reg in insn 39
changing reg in insn 16
changing reg in insn 3
changing reg in insn 38
changing reg in insn 17
changing reg in insn 4
changing reg in insn 31
changing reg in insn 15
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 27
changing reg in insn 28
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 46
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
Spilling for insn 71.
Using reg 3 for reload 0
Spilling for insn 13.
Spilling for insn 69.
Using reg 2 for reload 0
Spilling for insn 48.

Reloads for insn # 71
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 69
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 48
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
rescanning insn with uid = 39.
deleting insn with uid = 39.
verify found no changes in insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


on_each_cpu_mask.clone.0

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,3u} r1={6d,3u} r2={9d,6u} r3={16d,17u,3d} r4={2d,4u,2d} r5={1d,2u} r6={1d,2u} r7={1d,2u} r12={4d} r13={1d,11u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,2u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} 
;;    total ref usage 444{386d,53u,5e} in 38{35 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 26 2 NOTE_INSN_DELETED)

(note 26 9 34 2 NOTE_INSN_DELETED)

(note 34 26 75 2 NOTE_INSN_DELETED)

(insn 75 34 71 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 71 75 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 71 72 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 5 r5 [orig:144 func ] [144])
        (reg:SI 0 r0 [ func ])) 167 {*arm_movsi_insn} (nil))

(insn 72 2 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
        (and:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 72 4 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 6 r6 [orig:145 info ] [145])
        (reg:SI 1 r1 [ info ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 11 2 arch/arm/kernel/smp_tlb.c:16 (set (reg/v/f:SI 7 r7 [orig:146 mask ] [146])
        (reg:SI 2 r2 [ mask ])) 167 {*arm_movsi_insn} (nil))

(insn 11 4 12 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/smp_tlb.c:19 (set (reg:SI 3 r3 [149])
        (plus:SI (reg:SI 3 r3 [orig:148 <variable>.preempt_count ] [148])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/smp_tlb.c:19 (set (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [149])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 18 2 arch/arm/kernel/smp_tlb.c:19 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180162)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 18 14 15 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 15 18 16 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 0 r0)
        (reg/v/f:SI 7 r7 [orig:146 mask ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:144 func ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 19 2 arch/arm/kernel/smp_tlb.c:21 (set (reg:SI 2 r2)
        (reg/v/f:SI 6 r6 [orig:145 info ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 17 23 2 arch/arm/kernel/smp_tlb.c:21 (parallel [
            (call (mem:SI (symbol_ref:SI ("smp_call_function_many") [flags 0x41] <function_decl 0x10b23100 smp_call_function_many>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 23 19 25 2 arch/arm/kernel/smp_tlb.c:22 (set (reg:SI 3 r3 [orig:133 D.13877 ] [133])
        (mem/s/j:SI (plus:SI (reg/f:SI 4 r4 [orig:134 D.13871 ] [134])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 23 32 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 1 r1 [154])
        (plus:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 32 25 27 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 32 28 2 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 3 r3 [orig:153 D.13877 ] [153])
                (if_then_else:SI (ge (reg:SI 3 r3 [orig:133 D.13877 ] [133])
                        (const_int 0 [0x0]))
                    (reg:SI 3 r3 [orig:133 D.13877 ] [133])
                    (reg:SI 1 r1 [154])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 28 27 31 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [155])
        (ashiftrt:SI (reg:SI 3 r3 [orig:153 D.13877 ] [153])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:133 D.13877 ] [133])
            (const_int 32 [0x20]))
        (nil)))

(insn 31 28 33 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:137 D.13860 ] [137])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [155])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 7 r7 [orig:146 mask ] [146])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 31 35 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [158])
        (lshiftrt:SI (reg:SI 3 r3 [orig:137 D.13860 ] [137])
            (reg:SI 2 r2 [157]))) 117 {*arm_shiftsi3} (nil))

(insn 35 33 36 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [158])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 36 35 37 2 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (nil))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [29.0%]  (fallthru)
;; Succ edge  4 [71.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%]  (fallthru)
(note 37 36 38 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 3 arch/arm/kernel/smp_tlb.c:23 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:145 info ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 40 3 arch/arm/kernel/smp_tlb.c:23 (parallel [
            (call (mem:SI (reg/v/f:SI 5 r5 [orig:144 func ] [144]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 40 39 41 4 57 "" [1 uses])

(note 41 40 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 44 41 54 4 NOTE_INSN_DELETED)

(note 54 44 42 4 NOTE_INSN_DELETED)

(insn 42 54 76 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 76 42 69 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 69 76 70 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 70 69 46 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
        (and:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 46 70 47 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 47 46 48 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.preempt_count ] [161])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 48 47 49 4 arch/arm/kernel/smp_tlb.c:25 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [162])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 53 4 arch/arm/kernel/smp_tlb.c:25 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5180930)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 53 49 55 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:142 D.13847 ] [142])
        (mem/v:SI (reg/f:SI 3 r3 [orig:139 D.13855 ] [139]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 53 56 4 arch/arm/kernel/smp_tlb.c:25 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:142 D.13847 ] [142])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 56 55 57 4 arch/arm/kernel/smp_tlb.c:25 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 65)
            (pc))) 229 {*arm_cond_branch} (nil))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 58 57 59 5 arch/arm/kernel/smp_tlb.c:25 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 59 58 65)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 65 59 68 6 59 "" [1 uses])

(note 68 65 73 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 73 68 74 NOTE_INSN_DELETED)

(note 74 73 0 NOTE_INSN_DELETED)


;; Function flush_tlb_mm (flush_tlb_mm)[0:753]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 97.
verify found no changes in insn with uid = 97.
deleting insn with uid = 27.
scanning new insn with uid = 98.
verify found no changes in insn with uid = 98.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 21 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)

Pass 0 for finding allocno costs

    a0 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:122000
  a6(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a15(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r174: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:122000
  a6(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a15(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 85(l0): point = 0
   Insn 82(l0): point = 3
   Insn 81(l0): point = 5
   Insn 79(l0): point = 8
   Insn 78(l0): point = 10
   Insn 74(l0): point = 13
   Insn 73(l0): point = 15
   Insn 71(l0): point = 18
   Insn 70(l0): point = 20
   Insn 66(l0): point = 23
   Insn 64(l0): point = 26
   Insn 63(l0): point = 28
   Insn 61(l0): point = 30
   Insn 57(l0): point = 32
   Insn 56(l0): point = 34
   Insn 55(l0): point = 36
   Insn 54(l0): point = 38
   Insn 50(l0): point = 40
   Insn 49(l0): point = 42
   Insn 46(l0): point = 44
   Insn 45(l0): point = 46
   Insn 43(l0): point = 48
   Insn 38(l0): point = 50
   Insn 41(l0): point = 52
   Insn 36(l0): point = 54
   Insn 35(l0): point = 56
   Insn 34(l0): point = 58
   Insn 33(l0): point = 60
   Insn 95(l0): point = 62
   Insn 94(l0): point = 64
   Insn 29(l0): point = 66
   Insn 28(l0): point = 68
   Insn 97(l0): point = 70
   Insn 26(l0): point = 72
   Insn 22(l0): point = 75
   Insn 21(l0): point = 77
   Insn 19(l0): point = 79
   Insn 20(l0): point = 81
   Insn 15(l0): point = 84
   Insn 14(l0): point = 86
   Insn 13(l0): point = 88
   Insn 11(l0): point = 90
   Insn 9(l0): point = 93
   Insn 8(l0): point = 95
   Insn 7(l0): point = 97
   Insn 98(l0): point = 99
   Insn 2(l0): point = 101
 a0(r174): [4..5]
 a1(r134): [11..68]
 a2(r172): [14..15]
 a3(r133): [16..72]
 a4(r143): [29..30]
 a5(r135): [31..64]
 a6(r168): [35..36]
 a7(r167): [37..38]
 a8(r138): [42..42]
 a9(r157): [43..50]
 a10(r164): [43..44]
 a11(r162): [45..46]
 a12(r163): [47..48]
 a13(r161): [47..52]
 a14(r146): [82..101] [51..74]
 a15(r156): [57..58]
 a16(r155): [59..60]
 a17(r153): [69..70]
 a18(r150): [87..88]
 a19(r145): [89..90]
 a20(r148): [96..97]
 a21(r147): [98..99]
Compressing live ranges: from 104 to 43 - 41%
Ranges after the compression:
 a0(r174): [0..1]
 a1(r134): [2..28]
 a2(r172): [3..4]
 a3(r133): [5..31]
 a4(r143): [6..7]
 a5(r135): [8..27]
 a6(r168): [9..10]
 a7(r167): [11..12]
 a8(r138): [13..13]
 a9(r157): [14..20]
 a10(r164): [14..15]
 a11(r162): [16..17]
 a12(r163): [18..19]
 a13(r161): [18..22]
 a14(r146): [33..42] [21..32]
 a15(r156): [23..24]
 a16(r155): [25..26]
 a17(r153): [29..30]
 a18(r150): [34..35]
 a19(r145): [36..37]
 a20(r148): [38..39]
 a21(r147): [40..41]
+++Allocating 168 bytes for conflict table (uncompressed size 176)
;; a0(r174,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts: a2(r172,l0) a3(r133,l0) a4(r143,l0) a5(r135,l0) a6(r168,l0) a7(r167,l0) a8(r138,l0) a10(r164,l0) a9(r157,l0) a11(r162,l0) a12(r163,l0) a13(r161,l0) a14(r146,l0) a15(r156,l0) a16(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r172,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r133,l0) conflicts: a1(r134,l0) a4(r143,l0) a5(r135,l0) a6(r168,l0) a7(r167,l0) a8(r138,l0) a10(r164,l0) a9(r157,l0) a11(r162,l0) a12(r163,l0) a13(r161,l0) a14(r146,l0) a15(r156,l0) a16(r155,l0) a17(r153,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r143,l0) conflicts: a1(r134,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r135,l0) conflicts: a1(r134,l0) a3(r133,l0) a6(r168,l0) a7(r167,l0) a8(r138,l0) a10(r164,l0) a9(r157,l0) a11(r162,l0) a12(r163,l0) a13(r161,l0) a14(r146,l0) a15(r156,l0) a16(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r168,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r167,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r138,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r157,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a10(r164,l0) a11(r162,l0) a12(r163,l0) a13(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r164,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r162,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r163,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r157,l0) a13(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r161,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a9(r157,l0) a12(r163,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r146,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a13(r161,l0) a15(r156,l0) a16(r155,l0) a17(r153,l0) a18(r150,l0) a19(r145,l0) a20(r148,l0) a21(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r156,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r155,l0) conflicts: a1(r134,l0) a3(r133,l0) a5(r135,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r153,l0) conflicts: a3(r133,l0) a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r150,l0) conflicts: a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r145,l0) conflicts: a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r148,l0) conflicts: a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r147,l0) conflicts: a14(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r172)<->a3(r133)@125:shuffle
  cp1:a15(r156)<->a16(r155)@125:shuffle
  cp2:a9(r157)<->a14(r146)@125:shuffle
  cp3:a11(r162)<->a13(r161)@250:shuffle
  cp4:a11(r162)<->a12(r163)@125:shuffle
  cp5:a10(r164)<->a11(r162)@125:shuffle
  cp6:a6(r168)<->a7(r167)@125:shuffle
  cp7:a18(r150)<->a19(r145)@125:shuffle
  regions=1, blocks=12, points=43
    allocnos=22, copies=8, conflicts=5, ranges=23

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r174 1r134 2r172 3r133 4r143 5r135 6r168 7r167 8r138 9r157 10r164 11r162 12r163 13r161 14r146 15r156 16r155 17r153 18r150 19r145 20r148 21r147
    modified regnos: 133 134 135 138 143 145 146 147 148 150 153 155 156 157 161 162 163 164 167 168 172 174
    border:
    Pressure: GENERAL_REGS=7
    Reg 174 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 172 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 1 regs less
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
      Pushing a8(r138,l0)
      Pushing a21(r147,l0)
      Pushing a20(r148,l0)
      Pushing a19(r145,l0)
      Pushing a18(r150,l0)
      Pushing a17(r153,l0)
      Pushing a16(r155,l0)
      Pushing a15(r156,l0)
      Pushing a12(r163,l0)
      Pushing a11(r162,l0)
      Pushing a10(r164,l0)
      Pushing a9(r157,l0)
      Pushing a7(r167,l0)
      Pushing a6(r168,l0)
      Pushing a4(r143,l0)
      Pushing a3(r133,l0)
      Pushing a2(r172,l0)
      Pushing a0(r174,l0)
      Pushing a1(r134,l0)
      Pushing a14(r146,l0)
      Pushing a13(r161,l0)
      Pushing a5(r135,l0)
      Popping a5(r135,l0)  -- assign reg 3
      Popping a13(r161,l0)  -- assign reg 2
      Popping a14(r146,l0)  -- assign reg 1
      Popping a1(r134,l0)  -- assign reg 4
      Popping a0(r174,l0)  -- assign reg 3
      Popping a2(r172,l0)  -- assign reg 3
      Popping a3(r133,l0)  -- assign reg 5
      Popping a4(r143,l0)  -- assign reg 3
      Popping a6(r168,l0)  -- assign reg 2
      Popping a7(r167,l0)  -- assign reg 2
      Popping a9(r157,l0)  -- assign reg 1
      Popping a10(r164,l0)  -- assign reg 2
      Popping a11(r162,l0)  -- assign reg 2
      Popping a12(r163,l0)  -- assign reg 0
      Popping a15(r156,l0)  -- assign reg 2
      Popping a16(r155,l0)  -- assign reg 2
      Popping a17(r153,l0)  -- assign reg 3
      Popping a18(r150,l0)  -- assign reg 3
      Popping a19(r145,l0)  -- assign reg 3
      Popping a20(r148,l0)  -- assign reg 3
      Popping a21(r147,l0)  -- assign reg 3
      Popping a8(r138,l0)  -- assign reg 2
Disposition:
    3:r133 l0     5    1:r134 l0     4    5:r135 l0     3    8:r138 l0     2
    4:r143 l0     3   19:r145 l0     3   14:r146 l0     1   21:r147 l0     3
   20:r148 l0     3   18:r150 l0     3   17:r153 l0     3   16:r155 l0     2
   15:r156 l0     2    9:r157 l0     1   13:r161 l0     2   11:r162 l0     2
   12:r163 l0     0   10:r164 l0     2    7:r167 l0     2    6:r168 l0     2
    2:r172 l0     3    0:r174 l0     3
New iteration of spill/restore move
+++Costs: overall -2000, reg -2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 146
insn=98, live_throughout: 13, 14, 146, dead_or_set: 147
insn=7, live_throughout: 13, 14, 146, dead_or_set: 147, 148
insn=8, live_throughout: 13, 14, 146, dead_or_set: 148
insn=9, live_throughout: 13, 14, 146, dead_or_set: 
insn=11, live_throughout: 13, 14, 146, dead_or_set: 145
insn=13, live_throughout: 13, 14, 146, dead_or_set: 145, 150
insn=14, live_throughout: 13, 14, 146, dead_or_set: 150
insn=15, live_throughout: 13, 14, 146, dead_or_set: 
insn=20, live_throughout: 13, 14, dead_or_set: 1, 146
insn=19, live_throughout: 1, 13, 14, dead_or_set: 0
insn=21, live_throughout: 0, 1, 13, 14, dead_or_set: 2
insn=22, live_throughout: 13, 14, dead_or_set: 0, 1, 2
insn=24, live_throughout: 13, 14, 146, dead_or_set: 
insn=26, live_throughout: 13, 14, 146, dead_or_set: 133
insn=97, live_throughout: 13, 14, 133, 146, dead_or_set: 153
insn=28, live_throughout: 13, 14, 133, 146, dead_or_set: 134, 153
insn=29, live_throughout: 13, 14, 133, 134, 146, dead_or_set: 
insn=94, live_throughout: 13, 14, 133, 134, 146, dead_or_set: 135
insn=95, live_throughout: 13, 14, 133, 134, 146, dead_or_set: 135
insn=33, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 155
insn=34, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 155, 156
insn=35, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 156
insn=36, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 
insn=41, live_throughout: 13, 14, 133, 134, 135, 146, dead_or_set: 161
insn=38, live_throughout: 13, 14, 133, 134, 135, 161, dead_or_set: 146, 157
insn=43, live_throughout: 13, 14, 133, 134, 135, 157, 161, dead_or_set: 163
insn=45, live_throughout: 13, 14, 133, 134, 135, 157, dead_or_set: 161, 162, 163
insn=46, live_throughout: 13, 14, 133, 134, 135, 157, dead_or_set: 162, 164
insn=49, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 138, 157, 164
insn=50, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 
insn=54, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 167
insn=55, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 167, 168
insn=56, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 168
insn=57, live_throughout: 13, 14, 133, 134, 135, dead_or_set: 
insn=61, live_throughout: 13, 14, 133, 134, dead_or_set: 135, 143
insn=63, live_throughout: 13, 14, 133, 134, dead_or_set: 143
insn=64, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=66, live_throughout: 13, 133, 134, dead_or_set: 14
insn=67, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=70, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=71, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=73, live_throughout: 13, 14, 134, dead_or_set: 133, 172
insn=74, live_throughout: 13, 14, 134, dead_or_set: 172
insn=75, live_throughout: 13, 14, 134, dead_or_set: 
insn=78, live_throughout: 13, 14, dead_or_set: 134
insn=79, live_throughout: 13, 14, dead_or_set: 
insn=81, live_throughout: 13, 14, dead_or_set: 174
insn=82, live_throughout: 13, 14, dead_or_set: 174
insn=83, live_throughout: 13, 14, dead_or_set: 
insn=85, live_throughout: 13, 14, dead_or_set: 
init_insns for 147: (insn_list:REG_DEP_TRUE 98 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 97 (nil))
init_insns for 155: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 156: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 54 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 56 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 81 (nil))
changing reg in insn 26
changing reg in insn 73
changing reg in insn 28
changing reg in insn 78
changing reg in insn 70
changing reg in insn 95
changing reg in insn 94
changing reg in insn 95
changing reg in insn 61
changing reg in insn 56
changing reg in insn 54
changing reg in insn 41
changing reg in insn 35
changing reg in insn 33
changing reg in insn 55
changing reg in insn 34
changing reg in insn 54
changing reg in insn 41
changing reg in insn 33
changing reg in insn 49
changing reg in insn 61
changing reg in insn 63
changing reg in insn 11
changing reg in insn 13
changing reg in insn 2
changing reg in insn 38
changing reg in insn 26
changing reg in insn 20
changing reg in insn 98
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 13
changing reg in insn 14
changing reg in insn 97
changing reg in insn 28
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 35
changing reg in insn 38
changing reg in insn 49
changing reg in insn 41
changing reg in insn 45
changing reg in insn 45
changing reg in insn 43
changing reg in insn 46
changing reg in insn 45
changing reg in insn 46
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 73
changing reg in insn 74
changing reg in insn 81
changing reg in insn 82
Spilling for insn 94.
Using reg 2 for reload 0
Spilling for insn 35.
Spilling for insn 56.

Reloads for insn # 94
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 35
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 56
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
deleting insn with uid = 20.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 66.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 21 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)


flush_tlb_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,5u} r2={13d,11u,1d} r3={13d,15u,5d} r4={1d,2u} r5={1d,1u} r12={3d} r13={1d,14u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={11d,5u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 338{275d,57u,6e} in 47{45 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 98 2 arch/arm/kernel/smp_tlb.c:88 (set (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 98 2 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 7 98 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
        (mem/c/i:SI (reg/f:SI 3 r3 [147]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 8 7 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:148 smp_on_up ] [148])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 12 10 11 3 NOTE_INSN_DELETED)

(insn 11 12 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 3 r3 [orig:145 __val ] [145])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 13 11 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 3 r3 [150])
        (zero_extract:SI (reg/v:SI 3 r3 [orig:145 __val ] [145])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [150])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2]
;; live  kill	

;; Pred edge  3 [41.4%]  (fallthru)
(note 16 15 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 16 19 4 NOTE_INSN_DELETED)

(insn 19 18 21 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_mm") [flags 0x3] <function_decl 0x10f4ca00 ipi_flush_tlb_mm>)
        (nil)))

(insn 21 19 22 4 arch/arm/kernel/smp_tlb.c:90 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 1 r1)
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(call_insn/j 22 21 23 4 arch/arm/kernel/smp_tlb.c:90 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 23 22 24)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 24 23 25 5 61 "" [2 uses])

(note 25 24 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 25 44 5 NOTE_INSN_DELETED)

(note 44 31 62 5 NOTE_INSN_DELETED)

(note 62 44 26 5 NOTE_INSN_DELETED)

(insn 26 62 97 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:349 (set (reg:SI 5 r5 [orig:133 D.13780 ] [133])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
                (const_int 352 [0x160])) [0 <variable>.context.id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 97 26 28 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/f:SI 3 r3 [153])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 28 97 29 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:350 (set (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [153])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 29 28 100 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:353 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5154555)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 100 29 94 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 94 100 95 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 95 94 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
        (and:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 95 34 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [orig:155 <variable>.preempt_count ] [155])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 34 33 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (reg:SI 2 r2 [156])
        (plus:SI (reg:SI 2 r2 [orig:155 <variable>.preempt_count ] [155])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 35 34 36 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [156])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 41 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:355 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5154814)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 41 36 38 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
        (nil)))

(insn 38 41 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 1 r1 [157])
        (plus:SI (reg/v/f:SI 1 r1 [orig:146 mm ] [146])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 43 38 45 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0 [163])
        (plus:SI (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 45 43 46 5 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 2 r2 [orig:162 <variable>.cpu ] [162])
                (if_then_else:SI (ge (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
                        (const_int 0 [0x0]))
                    (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
                    (reg:SI 0 r0 [163])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 46 45 49 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [164])
        (ashiftrt:SI (reg:SI 2 r2 [orig:162 <variable>.cpu ] [162])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 2 r2 [orig:161 <variable>.cpu ] [161])
            (const_int 32 [0x20]))
        (nil)))

(insn 49 46 50 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [orig:138 D.13761 ] [138])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 2 r2 [164])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [157])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 54 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 54 50 55 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [orig:167 <variable>.preempt_count ] [167])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 55 54 56 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:SI 2 r2 [168])
        (plus:SI (reg:SI 2 r2 [orig:167 <variable>.preempt_count ] [167])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 56 55 57 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [168])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 61 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 5156090)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 61 57 63 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:143 D.13748 ] [143])
        (mem/v:SI (reg/f:SI 3 r3 [orig:135 D.13768 ] [135]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 63 61 64 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:143 D.13748 ] [143])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 64 63 65 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 66 65 67 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:365 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a55380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 67 66 68 7 62 "" [1 uses])

(note 68 67 69 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 69 68 70 7 NOTE_INSN_DELETED)

(insn 70 69 71 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 16 [0x10]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 71 70 72 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:367 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (set (reg:SI 3 r3 [172])
        (and:SI (reg:SI 5 r5 [orig:133 D.13780 ] [133])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 74 73 75 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:368 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 2") ("") 0 [
                    (reg:SI 3 r3 [172])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5156475)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 75 74 76 9 63 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 77 76 78 9 NOTE_INSN_DELETED)

(insn 78 77 79 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:134 __tlb_flag ] [134])
                (const_int 1 [0x1])
                (const_int 21 [0x15]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 79 78 80 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:373 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 83)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  9 [50.0%]  (fallthru)
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (set (reg:SI 3 r3 [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 82 81 83 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:375 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [174])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5157371)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 83 82 84 11 64 "" [1 uses])

(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 96 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:381 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5158139)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 96 85 99 NOTE_INSN_DELETED)

(note 99 96 0 NOTE_INSN_DELETED)


;; Function flush_tlb_page (flush_tlb_page)[0:754]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 90.
verify found no changes in insn with uid = 90.
deleting insn with uid = 32.
scanning new insn with uid = 91.
verify found no changes in insn with uid = 91.
deleting insn with uid = 7.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)

Pass 0 for finding allocno costs

    a0 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r157,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a10(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a12(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r167: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r157,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a10(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a12(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a16(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a17(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 71(l0): point = 1
   Insn 68(l0): point = 4
   Insn 84(l0): point = 6
   Insn 83(l0): point = 8
   Insn 64(l0): point = 11
   Insn 63(l0): point = 13
   Insn 59(l0): point = 16
   Insn 57(l0): point = 19
   Insn 54(l0): point = 21
   Insn 51(l0): point = 23
   Insn 56(l0): point = 25
   Insn 50(l0): point = 27
   Insn 48(l0): point = 29
   Insn 46(l0): point = 31
   Insn 43(l0): point = 33
   Insn 88(l0): point = 35
   Insn 42(l0): point = 37
   Insn 87(l0): point = 39
   Insn 40(l0): point = 41
   Insn 39(l0): point = 43
   Insn 33(l0): point = 45
   Insn 90(l0): point = 47
   Insn 38(l0): point = 49
   Insn 86(l0): point = 51
   Insn 85(l0): point = 53
   Insn 36(l0): point = 55
   Insn 81(l0): point = 58
   Insn 27(l0): point = 60
   Insn 18(l0): point = 62
   Insn 19(l0): point = 64
   Insn 26(l0): point = 66
   Insn 24(l0): point = 68
   Insn 25(l0): point = 70
   Insn 22(l0): point = 72
   Insn 16(l0): point = 75
   Insn 15(l0): point = 77
   Insn 14(l0): point = 79
   Insn 12(l0): point = 81
   Insn 10(l0): point = 84
   Insn 9(l0): point = 86
   Insn 8(l0): point = 88
   Insn 91(l0): point = 90
   Insn 3(l0): point = 92
   Insn 2(l0): point = 94
 a0(r167): [5..8]
 a1(r137): [9..43]
 a2(r133): [14..45]
 a3(r135): [21..21]
 a4(r155): [22..33]
 a5(r163): [22..23]
 a6(r161): [24..27]
 a7(r162): [28..29]
 a8(r160): [28..31]
 a9(r157): [32..39]
 a10(r156): [34..37]
 a11(r139): [63..94] [38..57]
 a12(r153): [44..49]
 a13(r150): [44..53]
 a14(r149): [46..47]
 a15(r152): [50..55]
 a16(r140): [65..92] [54..57]
 a17(r148): [67..72]
 a18(r144): [78..79]
 a19(r138): [80..81]
 a20(r142): [87..88]
 a21(r141): [89..90]
Compressing live ranges: from 97 to 43 - 44%
Ranges after the compression:
 a0(r167): [0..1]
 a1(r137): [2..18]
 a2(r133): [3..20]
 a3(r135): [4..4]
 a4(r155): [5..13]
 a5(r163): [5..6]
 a6(r161): [7..8]
 a7(r162): [9..10]
 a8(r160): [9..11]
 a9(r157): [12..17]
 a10(r156): [14..15]
 a11(r139): [29..42] [16..28]
 a12(r153): [19..23]
 a13(r150): [19..25]
 a14(r149): [21..22]
 a15(r152): [24..27]
 a16(r140): [30..41] [26..28]
 a17(r148): [31..32]
 a18(r144): [33..34]
 a19(r138): [35..36]
 a20(r142): [37..38]
 a21(r141): [39..40]
+++Allocating 168 bytes for conflict table (uncompressed size 176)
;; a0(r167,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a2(r133,l0) a3(r135,l0) a5(r163,l0) a4(r155,l0) a6(r161,l0) a7(r162,l0) a8(r160,l0) a9(r157,l0) a10(r156,l0) a11(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r133,l0) conflicts: a1(r137,l0) a3(r135,l0) a5(r163,l0) a4(r155,l0) a6(r161,l0) a7(r162,l0) a8(r160,l0) a9(r157,l0) a10(r156,l0) a11(r139,l0) a12(r153,l0) a13(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r135,l0) conflicts: a1(r137,l0) a2(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r155,l0) conflicts: a1(r137,l0) a2(r133,l0) a5(r163,l0) a6(r161,l0) a7(r162,l0) a8(r160,l0) a9(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r163,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r161,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r162,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r155,l0) a8(r160,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r160,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r155,l0) a7(r162,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r157,l0) conflicts: a1(r137,l0) a2(r133,l0) a4(r155,l0) a10(r156,l0) a11(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r156,l0) conflicts: a1(r137,l0) a2(r133,l0) a9(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r139,l0) conflicts: a1(r137,l0) a2(r133,l0) a9(r157,l0) a12(r153,l0) a13(r150,l0) a14(r149,l0) a15(r152,l0) a16(r140,l0) a17(r148,l0) a18(r144,l0) a19(r138,l0) a20(r142,l0) a21(r141,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a12(r153,l0) conflicts: a2(r133,l0) a11(r139,l0) a13(r150,l0) a14(r149,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r150,l0) conflicts: a2(r133,l0) a11(r139,l0) a12(r153,l0) a14(r149,l0) a15(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r149,l0) conflicts: a11(r139,l0) a12(r153,l0) a13(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r152,l0) conflicts: a11(r139,l0) a13(r150,l0) a16(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r140,l0) conflicts: a11(r139,l0) a15(r152,l0) a17(r148,l0) a18(r144,l0) a19(r138,l0) a20(r142,l0) a21(r141,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a17(r148,l0) conflicts: a11(r139,l0) a16(r140,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a18(r144,l0) conflicts: a11(r139,l0) a16(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r138,l0) conflicts: a11(r139,l0) a16(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r142,l0) conflicts: a11(r139,l0) a16(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r141,l0) conflicts: a11(r139,l0) a16(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r167)<->a1(r137)@125:shuffle
  cp1:a13(r150)<->a16(r140)@125:shuffle
  cp2:a1(r137)<->a13(r150)@125:shuffle
  cp3:a1(r137)<->a12(r153)@125:shuffle
  cp4:a4(r155)<->a10(r156)@125:shuffle
  cp5:a6(r161)<->a8(r160)@250:shuffle
  cp6:a6(r161)<->a7(r162)@125:shuffle
  cp7:a5(r163)<->a6(r161)@125:shuffle
  cp8:a18(r144)<->a19(r138)@125:shuffle
  regions=1, blocks=11, points=43
    allocnos=22, copies=9, conflicts=0, ranges=24

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r167 1r137 2r133 3r135 4r155 5r163 6r161 7r162 8r160 9r157 10r156 11r139 12r153 13r150 14r149 15r152 16r140 17r148 18r144 19r138 20r142 21r141
    modified regnos: 133 135 137 138 139 140 141 142 144 148 149 150 152 153 155 156 157 160 161 162 163 167
    border:
    Pressure: GENERAL_REGS=6
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 4 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
      Pushing a3(r135,l0)
      Pushing a21(r141,l0)
      Pushing a20(r142,l0)
      Pushing a19(r138,l0)
      Pushing a18(r144,l0)
      Pushing a15(r152,l0)
      Pushing a14(r149,l0)
      Pushing a12(r153,l0)
      Pushing a10(r156,l0)
      Pushing a7(r162,l0)
      Pushing a6(r161,l0)
      Pushing a5(r163,l0)
      Pushing a4(r155,l0)
      Pushing a2(r133,l0)
      Pushing a1(r137,l0)
      Pushing a13(r150,l0)
      Pushing a9(r157,l0)
      Pushing a8(r160,l0)
      Pushing a0(r167,l0)
      Pushing a17(r148,l0)
      Pushing a16(r140,l0)
      Pushing a11(r139,l0)
      Popping a11(r139,l0)  -- assign reg 3
      Popping a16(r140,l0)  -- assign reg 12
      Popping a17(r148,l0)  -- assign reg 2
      Popping a0(r167,l0)  -- assign reg 12
      Popping a8(r160,l0)  -- assign reg 3
      Popping a9(r157,l0)  -- assign reg 2
      Popping a13(r150,l0)  -- assign reg 12
      Popping a1(r137,l0)  -- assign reg 12
      Popping a2(r133,l0)  -- assign reg 1
      Popping a4(r155,l0)  -- assign reg 0
      Popping a5(r163,l0)  -- assign reg 3
      Popping a6(r161,l0)  -- assign reg 3
      Popping a7(r162,l0)  -- assign reg 2
      Popping a10(r156,l0)  -- assign reg 0
      Popping a12(r153,l0)  -- assign reg 2
      Popping a14(r149,l0)  -- assign reg 1
      Popping a15(r152,l0)  -- assign reg 2
      Popping a18(r144,l0)  -- assign reg 2
      Popping a19(r138,l0)  -- assign reg 2
      Popping a20(r142,l0)  -- assign reg 2
      Popping a21(r141,l0)  -- assign reg 2
      Popping a3(r135,l0)  -- assign reg 3
Disposition:
    2:r133 l0     1    3:r135 l0     3    1:r137 l0    12   19:r138 l0     2
   11:r139 l0     3   16:r140 l0    12   21:r141 l0     2   20:r142 l0     2
   18:r144 l0     2   17:r148 l0     2   14:r149 l0     1   13:r150 l0    12
   15:r152 l0     2   12:r153 l0     2    4:r155 l0     0   10:r156 l0     0
    9:r157 l0     2    8:r160 l0     3    6:r161 l0     3    7:r162 l0     2
    5:r163 l0     3    0:r167 l0    12
New iteration of spill/restore move
+++Costs: overall 1750, reg 1750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 139
insn=3, live_throughout: 13, 14, 139, dead_or_set: 1, 140
insn=91, live_throughout: 13, 14, 139, 140, dead_or_set: 141
insn=8, live_throughout: 13, 14, 139, 140, dead_or_set: 141, 142
insn=9, live_throughout: 13, 14, 139, 140, dead_or_set: 142
insn=10, live_throughout: 13, 14, 139, 140, dead_or_set: 
insn=12, live_throughout: 13, 14, 139, 140, dead_or_set: 138
insn=14, live_throughout: 13, 14, 139, 140, dead_or_set: 138, 144
insn=15, live_throughout: 13, 14, 139, 140, dead_or_set: 144
insn=16, live_throughout: 13, 14, 139, 140, dead_or_set: 
insn=22, live_throughout: 13, 139, 140, dead_or_set: 148
insn=25, live_throughout: 13, 139, 140, 148, dead_or_set: 1
insn=24, live_throughout: 1, 13, 139, 140, 148, dead_or_set: 0
insn=26, live_throughout: 0, 1, 13, 139, 140, dead_or_set: 2, 148
insn=19, live_throughout: 0, 1, 2, 13, 139, dead_or_set: 140
insn=18, live_throughout: 0, 1, 2, 13, dead_or_set: 139
insn=27, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=81, live_throughout: 13, 14, dead_or_set: 
insn=30, live_throughout: 13, 14, 139, 140, dead_or_set: 
insn=36, live_throughout: 13, 14, 139, 140, dead_or_set: 152
insn=85, live_throughout: 13, 14, 139, 152, dead_or_set: 140, 150
insn=86, live_throughout: 13, 14, 139, 152, dead_or_set: 150
insn=38, live_throughout: 13, 14, 139, 150, dead_or_set: 152, 153
insn=90, live_throughout: 13, 14, 139, 150, 153, dead_or_set: 149
insn=33, live_throughout: 13, 14, 139, 150, 153, dead_or_set: 133, 149
insn=39, live_throughout: 13, 14, 133, 139, dead_or_set: 137, 150, 153
insn=40, live_throughout: 13, 14, 133, 137, 139, dead_or_set: 
insn=87, live_throughout: 13, 14, 133, 137, 139, dead_or_set: 157
insn=42, live_throughout: 13, 14, 133, 137, 157, dead_or_set: 139, 156
insn=88, live_throughout: 13, 14, 133, 137, 156, dead_or_set: 157
insn=43, live_throughout: 13, 14, 133, 137, 157, dead_or_set: 155, 156
insn=46, live_throughout: 13, 14, 133, 137, 155, dead_or_set: 157, 160
insn=48, live_throughout: 13, 14, 133, 137, 155, 160, dead_or_set: 162
insn=50, live_throughout: 13, 14, 133, 137, 155, dead_or_set: 160, 161, 162
insn=56, live_throughout: 13, 14, 133, 137, 155, 161, dead_or_set: 
insn=51, live_throughout: 13, 14, 24, 133, 137, 155, dead_or_set: 161, 163
insn=54, live_throughout: 13, 14, 24, 133, 137, dead_or_set: 135, 155, 163
insn=57, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=59, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=60, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=63, live_throughout: 13, 14, 137, dead_or_set: 133
insn=64, live_throughout: 13, 14, 137, dead_or_set: 
insn=83, live_throughout: 13, 14, dead_or_set: 137, 167
insn=84, live_throughout: 13, 14, dead_or_set: 167
insn=68, live_throughout: 13, 14, dead_or_set: 167
insn=69, live_throughout: 13, 14, dead_or_set: 
insn=71, live_throughout: 13, 14, dead_or_set: 
insn=77, live_throughout: 13, 14, dead_or_set: 
init_insns for 141: (insn_list:REG_DEP_TRUE 91 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 90 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 36 (nil))
changing reg in insn 33
changing reg in insn 63
changing reg in insn 56
changing reg in insn 54
changing reg in insn 39
changing reg in insn 83
changing reg in insn 59
changing reg in insn 12
changing reg in insn 14
changing reg in insn 2
changing reg in insn 42
changing reg in insn 36
changing reg in insn 22
changing reg in insn 18
changing reg in insn 36
changing reg in insn 22
changing reg in insn 3
changing reg in insn 85
changing reg in insn 19
changing reg in insn 91
changing reg in insn 8
changing reg in insn 8
changing reg in insn 9
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 26
changing reg in insn 90
changing reg in insn 33
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
changing reg in insn 39
changing reg in insn 36
changing reg in insn 38
changing reg in insn 38
changing reg in insn 39
changing reg in insn 43
changing reg in insn 54
changing reg in insn 42
changing reg in insn 43
changing reg in insn 88
changing reg in insn 87
changing reg in insn 88
changing reg in insn 46
changing reg in insn 46
changing reg in insn 50
changing reg in insn 50
changing reg in insn 48
changing reg in insn 51
changing reg in insn 50
changing reg in insn 51
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 68
Spilling for insn 19.
Spilling for insn 18.
Spilling for insn 87.
Using reg 0 for reload 0

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])

Reloads for insn # 18
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])

Reloads for insn # 87
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 0 r0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)


flush_tlb_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,5u} r2={13d,11u} r3={7d,9u,3d} r12={8d,8u} r13={1d,15u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 222{161d,58u,3e} in 45{44 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 4 3 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v/f:SI 3 r3 [orig:139 vma ] [139])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 91 2 arch/arm/kernel/smp_tlb.c:96 (set (reg/v:SI 12 ip [orig:140 uaddr ] [140])
        (reg:SI 1 r1 [ uaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 91 3 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [141])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 8 91 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
        (mem/c/i:SI (reg/f:SI 2 r2 [141]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:142 smp_on_up ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 11 12 3 NOTE_INSN_DELETED)

(insn 12 13 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:138 __val ] [138])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 14 12 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [144])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:138 __val ] [138])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [144])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5858 [0x16e2])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [41.4%]  (fallthru)
;; Succ edge  5 [58.6%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [41.4%]  (fallthru)
(note 17 16 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 21 17 23 4 NOTE_INSN_DELETED)

(note 23 21 22 4 NOTE_INSN_DELETED)

(insn 22 23 25 4 arch/arm/kernel/smp_tlb.c:101 (set (reg/f:SI 2 r2 [orig:148 <variable>.vm_mm ] [148])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 25 22 24 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 24 25 26 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_page") [flags 0x3] <function_decl 0x10f4cb00 ipi_flush_tlb_page>)
        (nil)))

(insn 26 24 19 4 arch/arm/kernel/smp_tlb.c:101 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 2 r2 [orig:148 <variable>.vm_mm ] [148])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 19 26 18 4 arch/arm/kernel/smp_tlb.c:100 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 12 ip [orig:140 uaddr ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 18 19 27 4 arch/arm/kernel/smp_tlb.c:99 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:139 vma ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 27 18 81 4 arch/arm/kernel/smp_tlb.c:101 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 81 27 82 4 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 82 81 30)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  3 [58.6%] 
;; Pred edge  2 [50.0%] 
(code_label 30 82 31 5 69 "" [2 uses])

(note 31 30 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 34 31 37 5 NOTE_INSN_DELETED)

(note 37 34 44 5 NOTE_INSN_DELETED)

(note 44 37 49 5 NOTE_INSN_DELETED)

(note 49 44 55 5 NOTE_INSN_DELETED)

(note 55 49 36 5 NOTE_INSN_DELETED)

(insn 36 55 85 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/f:SI 2 r2 [orig:152 <variable>.vm_mm ] [152])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 85 36 86 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 12 ip [150])
        (and:SI (reg/v:SI 12 ip [orig:140 uaddr ] [140])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 86 85 38 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 12 ip [150])
        (and:SI (reg:SI 12 ip [150])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 86 90 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg:SI 2 r2 [153])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/f:SI 2 r2 [orig:152 <variable>.vm_mm ] [152])
                    (const_int 352 [0x160])) [0 <variable>.context.id+0 S1 A32]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 90 38 33 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/f:SI 1 r1 [149])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(insn 33 90 39 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:388 (set (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 1 r1 [149])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 39 33 40 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:390 (set (reg/v:SI 12 ip [orig:137 uaddr ] [137])
        (ior:SI (reg:SI 12 ip [150])
            (reg:SI 2 r2 [153]))) 89 {*arm_iorsi3} (nil))

(insn 40 39 93 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:393 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5159675)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 93 40 87 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 87 93 42 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 0 r0)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 42 87 88 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [orig:156 <variable>.vm_mm ] [156])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:139 vma ] [139]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 88 42 43 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [157])
        (and:SI (reg:SI 2 r2 [157])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 88 46 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 0 r0 [155])
        (plus:SI (reg/f:SI 0 r0 [orig:156 <variable>.vm_mm ] [156])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 46 43 48 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [157])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 46 50 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 2 r2 [162])
        (plus:SI (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 50 48 56 5 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 3 r3 [orig:161 <variable>.cpu ] [161])
                (if_then_else:SI (ge (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
                        (const_int 0 [0x0]))
                    (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
                    (reg:SI 2 r2 [162])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 56 50 51 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 51 56 54 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [163])
        (ashiftrt:SI (reg:SI 3 r3 [orig:161 <variable>.cpu ] [161])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 3 r3 [orig:160 <variable>.cpu ] [160])
            (const_int 32 [0x20]))
        (nil)))

(insn 54 51 57 5 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:135 D.13646 ] [135])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 3 r3 [163])
                    (const_int 4 [0x4]))
                (reg/f:SI 0 r0 [155])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 57 54 58 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:408 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 58 57 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:409 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 1") ("") 0 [
                    (reg/v:SI 12 ip [orig:137 uaddr ] [137])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5161723)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [r1] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 60 59 61 7 71 "" [1 uses])

(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 62 61 63 7 NOTE_INSN_DELETED)

(insn 63 62 64 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 19 [0x13]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 64 63 65 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:414 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 66 65 83 8 NOTE_INSN_DELETED)

(insn 83 66 84 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 12 ip [167])
        (and:SI (reg/v:SI 12 ip [orig:137 uaddr ] [137])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 68 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (set (reg:SI 12 ip [167])
        (and:SI (reg:SI 12 ip [167])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 68 84 69 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:416 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 3") ("") 0 [
                    (reg:SI 12 ip [167])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 5162619)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 69 68 70 9 72 "" [1 uses])

(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 77 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:422 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5163387)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 77 71 80 10 73 "" [1 uses])

(note 80 77 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 89 80 92 NOTE_INSN_DELETED)

(note 92 89 0 NOTE_INSN_DELETED)


;; Function flush_tlb_range (flush_tlb_range)[0:756]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 52.
verify found no changes in insn with uid = 52.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

Pass 0 for finding allocno costs

    a0 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 39(l0): point = 1
   Insn 34(l0): point = 3
   Insn 38(l0): point = 5
   Insn 37(l0): point = 7
   Insn 36(l0): point = 9
   Insn 49(l0): point = 12
   Insn 29(l0): point = 14
   Insn 19(l0): point = 16
   Insn 21(l0): point = 18
   Insn 20(l0): point = 20
   Insn 28(l0): point = 22
   Insn 26(l0): point = 24
   Insn 27(l0): point = 26
   Insn 24(l0): point = 28
   Insn 17(l0): point = 31
   Insn 16(l0): point = 33
   Insn 15(l0): point = 35
   Insn 13(l0): point = 37
   Insn 11(l0): point = 40
   Insn 10(l0): point = 42
   Insn 9(l0): point = 44
   Insn 52(l0): point = 46
   Insn 4(l0): point = 48
   Insn 3(l0): point = 50
   Insn 2(l0): point = 52
 a0(r145): [2..3]
 a1(r134): [17..52] [6..11]
 a2(r136): [19..48] [8..11]
 a3(r135): [21..50] [10..11]
 a4(r144): [23..28]
 a5(r140): [34..35]
 a6(r133): [36..37]
 a7(r138): [43..44]
 a8(r137): [45..46]
Compressing live ranges: from 55 to 22 - 40%
Ranges after the compression:
 a0(r145): [0..1]
 a1(r134): [6..21] [2..5]
 a2(r136): [7..19] [3..5]
 a3(r135): [8..20] [4..5]
 a4(r144): [9..10]
 a5(r140): [11..12]
 a6(r133): [13..14]
 a7(r138): [15..16]
 a8(r137): [17..18]
+++Allocating 64 bytes for conflict table (uncompressed size 72)
;; a0(r145,l0) conflicts:
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r134,l0) conflicts: a2(r136,l0) a3(r135,l0) a4(r144,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a8(r137,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a2(r136,l0) conflicts: a1(r134,l0) a3(r135,l0) a4(r144,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a8(r137,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a3(r135,l0) conflicts: a1(r134,l0) a2(r136,l0) a4(r144,l0) a5(r140,l0) a6(r133,l0) a7(r138,l0) a8(r137,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a4(r144,l0) conflicts: a1(r134,l0) a2(r136,l0) a3(r135,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a5(r140,l0) conflicts: a1(r134,l0) a2(r136,l0) a3(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r133,l0) conflicts: a1(r134,l0) a2(r136,l0) a3(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r138,l0) conflicts: a1(r134,l0) a2(r136,l0) a3(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a8(r137,l0) conflicts: a1(r134,l0) a2(r136,l0) a3(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a5(r140)<->a6(r133)@125:shuffle
  regions=1, blocks=7, points=22
    allocnos=9, copies=1, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r145 1r134 2r136 3r135 4r144 5r140 6r133 7r138 8r137
    modified regnos: 133 134 135 136 137 138 140 144 145
    border:
    Pressure: GENERAL_REGS=6
    Reg 145 of GENERAL_REGS has 4 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 144 of GENERAL_REGS has 2 regs less
      Pushing a8(r137,l0)
      Pushing a7(r138,l0)
      Pushing a6(r133,l0)
      Pushing a5(r140,l0)
      Pushing a4(r144,l0)
      Pushing a3(r135,l0)
      Pushing a2(r136,l0)
      Pushing a1(r134,l0)
      Pushing a0(r145,l0)
      Popping a0(r145,l0)  -- assign reg 3
      Popping a1(r134,l0)  -- assign reg 3
      Popping a2(r136,l0)  -- assign reg 12
      Popping a3(r135,l0)  -- assign reg 14
      Popping a4(r144,l0)  -- assign reg 2
      Popping a5(r140,l0)  -- assign reg 2
      Popping a6(r133,l0)  -- assign reg 2
      Popping a7(r138,l0)  -- assign reg 2
      Popping a8(r137,l0)  -- assign reg 2
Disposition:
    6:r133 l0     2    1:r134 l0     3    3:r135 l0    14    2:r136 l0    12
    8:r137 l0     2    7:r138 l0     2    5:r140 l0     2    4:r144 l0     2
    0:r145 l0     3
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, dead_or_set: 0, 134
insn=3, live_throughout: 2, 13, 134, dead_or_set: 1, 135
insn=4, live_throughout: 13, 134, 135, dead_or_set: 2, 136
insn=52, live_throughout: 13, 134, 135, 136, dead_or_set: 137
insn=9, live_throughout: 13, 134, 135, 136, dead_or_set: 137, 138
insn=10, live_throughout: 13, 134, 135, 136, dead_or_set: 138
insn=11, live_throughout: 13, 134, 135, 136, dead_or_set: 
insn=13, live_throughout: 13, 134, 135, 136, dead_or_set: 133
insn=15, live_throughout: 13, 134, 135, 136, dead_or_set: 133, 140
insn=16, live_throughout: 13, 134, 135, 136, dead_or_set: 140
insn=17, live_throughout: 13, 134, 135, 136, dead_or_set: 
insn=24, live_throughout: 13, 134, 135, 136, dead_or_set: 144
insn=27, live_throughout: 13, 134, 135, 136, 144, dead_or_set: 1
insn=26, live_throughout: 1, 13, 134, 135, 136, 144, dead_or_set: 0
insn=28, live_throughout: 0, 1, 13, 134, 135, 136, dead_or_set: 2, 144
insn=20, live_throughout: 0, 1, 2, 13, 134, 136, dead_or_set: 135
insn=21, live_throughout: 0, 1, 2, 13, 134, dead_or_set: 136
insn=19, live_throughout: 0, 1, 2, 13, dead_or_set: 134
insn=29, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=49, live_throughout: 13, 14, dead_or_set: 
insn=32, live_throughout: 13, 134, 135, 136, dead_or_set: 
insn=36, live_throughout: 13, 134, 136, dead_or_set: 0, 135
insn=37, live_throughout: 0, 13, 134, dead_or_set: 1, 136
insn=38, live_throughout: 0, 1, 13, dead_or_set: 2, 134
insn=34, live_throughout: 0, 1, 2, 13, dead_or_set: 145
insn=39, live_throughout: 13, dead_or_set: 0, 1, 2, 14, 145
insn=45, live_throughout: 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 34 (nil))
changing reg in insn 13
changing reg in insn 15
changing reg in insn 2
changing reg in insn 38
changing reg in insn 24
changing reg in insn 19
changing reg in insn 24
changing reg in insn 3
changing reg in insn 36
changing reg in insn 20
changing reg in insn 4
changing reg in insn 37
changing reg in insn 21
changing reg in insn 52
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 15
changing reg in insn 16
changing reg in insn 24
changing reg in insn 28
changing reg in insn 34
changing reg in insn 39
Spilling for insn 20.
Spilling for insn 21.
Spilling for insn 19.

Reloads for insn # 20
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])

Reloads for insn # 21
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])

Reloads for insn # 19
Reload 0: reload_out (SI) = (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 29.
rescanning insn with uid = 39.
deleting insn with uid = 39.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


flush_tlb_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={10d,8u} r3={5d,4u,1d} r12={4d,2u} r13={1d,12u} r14={4d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 297{259d,37u,1e} in 25{23 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 5 3 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v/f:SI 3 r3 [orig:134 vma ] [134])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 14 lr [orig:135 start ] [135])
        (reg:SI 1 r1 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 52 2 arch/arm/kernel/smp_tlb.c:118 (set (reg/v:SI 12 ip [orig:136 end ] [136])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (nil))

(insn 52 4 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg/f:SI 2 r2 [137])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>)
        (nil)))

(insn 9 52 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
        (mem/c/i:SI (reg/f:SI 2 r2 [137]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x10b1dc00 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:138 smp_on_up ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:28 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 12 13 3 NOTE_INSN_DELETED)

(insn 13 14 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c1, 7") ("=r") 0 []
                     [] 2012747))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 15 13 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:SI 2 r2 [140])
        (zero_extract:SI (reg/v:SI 2 r2 [orig:133 __val ] [133])
            (const_int 4 [0x4])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [140])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/smp_plat.h:31 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2200 [0x898])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [78.0%]  (fallthru)
;; Succ edge  5 [22.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [78.0%]  (fallthru)
(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 23 18 25 4 NOTE_INSN_DELETED)

(note 25 23 24 4 NOTE_INSN_DELETED)

(insn 24 25 27 4 arch/arm/kernel/smp_tlb.c:124 (set (reg/f:SI 2 r2 [orig:144 <variable>.vm_mm ] [144])
        (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:134 vma ] [134]) [0 <variable>.vm_mm+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 3 r3 [orig:134 vma ] [134]) [0 <variable>.vm_mm+0 S4 A32])
        (nil)))

(insn 27 24 26 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 26 27 28 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 0 r0)
        (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ipi_flush_tlb_range") [flags 0x3] <function_decl 0x10f4cd00 ipi_flush_tlb_range>)
        (nil)))

(insn 28 26 20 4 arch/arm/kernel/smp_tlb.c:124 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 2 r2 [orig:144 <variable>.vm_mm ] [144])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (nil))

(insn 20 28 21 4 arch/arm/kernel/smp_tlb.c:122 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 ta.ta_start+0 S4 A32])
        (reg/v:SI 14 lr [orig:135 start ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 19 4 arch/arm/kernel/smp_tlb.c:123 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 ta.ta_end+0 S4 A32])
        (reg/v:SI 12 ip [orig:136 end ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 19 21 29 4 arch/arm/kernel/smp_tlb.c:121 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 ta.ta_vma+0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:134 vma ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 19 49 4 arch/arm/kernel/smp_tlb.c:124 (parallel [
            (call (mem:SI (symbol_ref:SI ("on_each_cpu_mask.clone.0") [flags 0x3] <function_decl 0x10f7ff80 on_each_cpu_mask.clone.0>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 49 29 50 4 (set (pc)
        (label_ref 45)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 50 49 32)

;; Start of basic block ( 3 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [22.0%] 
;; Pred edge  2 [50.0%] 
(code_label 32 50 33 5 77 "" [2 uses])

(note 33 32 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 35 33 36 5 NOTE_INSN_DELETED)

(insn 36 35 37 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 0 r0)
        (reg/v:SI 14 lr [orig:135 start ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 1 r1)
        (reg/v:SI 12 ip [orig:136 end ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 34 5 arch/arm/kernel/smp_tlb.c:126 (set (reg:SI 2 r2)
        (reg/v/f:SI 3 r3 [orig:134 vma ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 34 38 39 5 arch/arm/kernel/smp_tlb.c:126 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x10f31f60 cpu_tlb>)
        (nil)))

(call_insn 39 34 45 5 arch/arm/kernel/smp_tlb.c:126 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [145]) [0 cpu_tlb.flush_user_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 45 39 48 6 79 "" [1 uses])

(note 48 45 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 51 48 53 NOTE_INSN_DELETED)

(note 53 51 0 NOTE_INSN_DELETED)

