
;; Function regs_query_register_name (regs_query_register_name)[0:1537]


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 9550, maybe hot.
Predecessors:  4 [95.5%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [4.5%]  4 [95.5%]  (fallthru,dfs_back)


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 3 [95.5%]  (fallthru,dfs_back)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [95.5%]  5 [4.5%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  3 [4.5%]  4 [4.5%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


regs_query_register_name

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,2u} r25={1d,5u} r26={1d,4u} r162={2d,3u} r163={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 58{22d,36u,0e} in 15{15 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 44 to worklist
  Adding insn 51 to worklist
  Adding insn 64 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 58 to worklist
  Adding insn 54 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166
  Adding insn 35 to worklist
  Adding insn 31 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
;; Following path with 2 sets: 2 
;; Following path with 10 sets: 4 3 
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 40.
;; Following path with 3 sets: 5 
deferring rescan insn with uid = 58.


try_optimize_cfg iteration 1



regs_query_register_name

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,2u} r25={1d,5u} r26={1d,4u} r162={2d,3u} r163={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} 
;;    total ref usage 58{22d,36u,0e} in 15{15 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162 166
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162 166
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 33 0 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 31 33 32 2 arch/arm/kernel/ptrace.c:111 (set (reg/v:SI 166 [ offset ])
        (reg:SI 0 r0 [ offset ])) 167 {*arm_movsi_insn} (nil))

(note 32 31 35 2 NOTE_INSN_FUNCTION_BEG)

(insn 35 32 49 2 arch/arm/kernel/ptrace.c:111 (set (reg:SI 162 [ ivtmp.457 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 166
;; lr  def 	 24 [cc] 162 164 167 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166
;; live  gen 	 24 [cc] 162 164 167 168
;; live  kill	

;; Pred edge  4 [95.5%] 
(code_label 49 35 38 3 4 "" [1 uses])

(note 38 49 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 3 arch/arm/kernel/ptrace.c:114 (set (reg/f:SI 167)
        (reg/f:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 40 39 41 3 arch/arm/kernel/ptrace.c:114 (set (reg:SI 168)
        (plus:SI (reg/f:SI 169)
            (reg:SI 162 [ ivtmp.457 ]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 3 arch/arm/kernel/ptrace.c:114 (set (reg:SI 164 [ D.26791 ])
        (mem/s/j:SI (plus:SI (reg:SI 168)
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 3 arch/arm/kernel/ptrace.c:114 (set (reg:SI 162 [ ivtmp.457 ])
        (plus:SI (reg:SI 162 [ ivtmp.457 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 43 42 44 3 arch/arm/kernel/ptrace.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 164 [ D.26791 ])
            (reg/v:SI 166 [ offset ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 3 arch/arm/kernel/ptrace.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166


;; Succ edge  5 [4.5%] 
;; Succ edge  4 [95.5%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162
;; lr  def 	 24 [cc] 163 169
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166
;; live  gen 	 24 [cc] 163 169
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [95.5%]  (fallthru,dfs_back)
(code_label 45 44 46 4 2 "" [0 uses])

(note 46 45 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 4 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 50 4 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg/f:SI 163 [ D.26794 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 169)
                (reg:SI 162 [ ivtmp.457 ])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 48 51 4 arch/arm/kernel/ptrace.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 163 [ D.26794 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 4 arch/arm/kernel/ptrace.c:113 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 166


;; Succ edge  3 [95.5%] 
;; Succ edge  5 [4.5%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0] 165
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0] 165
;; live  kill	

;; Pred edge  3 [4.5%] 
;; Pred edge  4 [4.5%]  (fallthru)
(code_label 52 51 53 5 3 "" [1 uses])

(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 58 5 arch/arm/kernel/ptrace.c:117 (set (reg/f:SI 165 [ <result> ])
        (reg/f:SI 163 [ D.26794 ])) 167 {*arm_movsi_insn} (nil))

(insn 58 54 64 5 arch/arm/kernel/ptrace.c:117 (set (reg/i:SI 0 r0)
        (reg/f:SI 163 [ D.26794 ])) 167 {*arm_movsi_insn} (nil))

(insn 64 58 0 5 arch/arm/kernel/ptrace.c:117 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 40.
deleting insn with uid = 40.
rescanning insn with uid = 58.
deleting insn with uid = 58.
ending the processing of deferred insns

;; Function regs_within_kernel_stack (regs_within_kernel_stack)[0:1538]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


regs_within_kernel_stack

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1d} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 46{22d,23u,1e} in 13{13 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 25 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 13 sets: 2 
deferring rescan insn with uid = 19.


try_optimize_cfg iteration 1



regs_within_kernel_stack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r24={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u,1d} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 46{22d,23u,1e} in 13{13 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 24 [cc] 133 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 134 135 136 137 138 139 140 141 142
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:128 (set (reg/v/f:SI 134 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:128 (set (reg/v:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 138 [ <variable>.uregs+52 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 137)
        (xor:SI (reg/v:SI 135 [ addr ])
            (reg:SI 138 [ <variable>.uregs+52 ]))) 96 {*arm_xorsi3} (nil))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 140)
        (and:SI (reg:SI 137)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 137)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:131 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 141)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:131 (set (reg:QI 136)
        (subreg:QI (reg:SI 141) 0)) 178 {*arm_movqi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 142)
        (zero_extend:SI (reg:QI 136))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 15 14 19 2 arch/arm/kernel/ptrace.c:131 (set (reg:SI 133 [ <result> ])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 19 15 25 2 arch/arm/kernel/ptrace.c:131 (set (reg/i:SI 0 r0)
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 25 19 0 2 arch/arm/kernel/ptrace.c:131 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 19.
deleting insn with uid = 19.
ending the processing of deferred insns

;; Function regs_get_kernel_stack_nth (regs_get_kernel_stack_nth)[0:1539]


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [61.0%]  3 [39.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  2 [39.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 3 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


regs_get_kernel_stack_nth

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u,1d} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 63{24d,38u,1e} in 16{16 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 35 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 29 to worklist
  Adding insn 25 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 22 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 17 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
;; Following path with 12 sets: 2 4 
deferring rescan insn with uid = 10.
;; Following path with 12 sets: 2 3 
;; Following path with 3 sets: 5 
deferring rescan insn with uid = 29.


try_optimize_cfg iteration 1



regs_get_kernel_stack_nth

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,1u} r25={1d,5u} r26={1d,4u} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u,1d} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 63{24d,38u,1e} in 16{16 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 138 139 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 138 139 140 141 142 143
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:143 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:143 (set (reg/v:SI 139 [ n ])
        (reg:SI 1 r1 [ n ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:244 (set (reg:SI 134 [ D.27412 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 52 [0x34])) [0 <variable>.uregs+52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:144 (set (reg/v/f:SI 135 [ addr ])
        (reg:SI 134 [ D.27412 ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:145 (set (reg:SI 140)
        (ashift:SI (reg/v:SI 139 [ n ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:145 (set (reg/v/f:SI 133 [ addr.512 ])
        (plus:SI (reg:SI 134 [ D.27412 ])
            (reg:SI 140))) 4 {*arm_addsi3} (nil))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:146 (set (reg:SI 141)
        (xor:SI (reg/v/f:SI 133 [ addr.512 ])
            (reg:SI 134 [ D.27412 ]))) 96 {*arm_xorsi3} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:146 (set (reg:SI 143)
        (and:SI (reg:SI 141)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:146 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 141)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:146 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 arch/arm/kernel/ptrace.c:146 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 20 3 arch/arm/kernel/ptrace.c:149 (set (reg:SI 136 [ D.26815 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 136
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 20 17 21 4 12 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/ptrace.c:147 (set (reg:SI 136 [ D.26815 ])
        (mem:SI (reg/v/f:SI 133 [ addr.512 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 137
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 23 22 24 5 13 "" [0 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 29 5 arch/arm/kernel/ptrace.c:150 (set (reg:SI 137 [ <result> ])
        (reg:SI 136 [ D.26815 ])) 167 {*arm_movsi_insn} (nil))

(insn 29 25 35 5 arch/arm/kernel/ptrace.c:150 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ D.26815 ])) 167 {*arm_movsi_insn} (nil))

(insn 35 29 0 5 arch/arm/kernel/ptrace.c:150 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 10.
deleting insn with uid = 10.
rescanning insn with uid = 29.
deleting insn with uid = 29.
ending the processing of deferred insns

;; Function ptrace_disable (ptrace_disable)[0:1542]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


ptrace_disable

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
Finished finding needed instructions:
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1



ptrace_disable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ptrace_write_user (ptrace_write_user)[0:1547]


12 basic blocks, 16 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [39.0%]  (fallthru) 4 [61.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  2 [39.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [39.0%]  (fallthru) 6 [61.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2379, maybe hot.
Predecessors:  4 [39.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3721, maybe hot.
Predecessors:  4 [61.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [50.0%]  (fallthru) 10 [50.0%] 


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1860, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [28.0%]  8 [72.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1340, maybe hot.
Predecessors:  7 [72.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [50.0%]  (fallthru) 10 [50.0%] 


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 521, maybe hot.
Predecessors:  7 [28.0%]  8 [50.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 1191, should be 521

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 3200, maybe hot.
Predecessors:  6 [50.0%]  8 [50.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 2531, should be 3200

Basic block 11 , prev 10, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 3 [100.0%]  (fallthru) 5 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 11, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  11 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)


ptrace_write_user

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,11u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,8u} r25={1d,14u} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={4d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,1u} r140={1d,4u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} 
;;    total ref usage 293{181d,111u,1e} in 63{62 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 11 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 11 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 10 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 8 )->[9]->( 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 3 5 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 28 to worklist
  Adding insn 55 to worklist
  Adding insn 51 to worklist
  Adding insn 45 to worklist
  Adding insn 59 to worklist
  Adding insn 74 to worklist
  Adding insn 77 to worklist
  Adding insn 96 to worklist
Finished finding needed instructions:
processing block 11 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 90 to worklist
  Adding insn 86 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 22 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 30 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 78 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 83 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 141
  Adding insn 58 to worklist
  Adding insn 57 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
  Adding insn 27 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 22 (  1.8)
;; Following path with 57 sets: 2 4 6 7 8 
deferring rescan insn with uid = 43.
deferring rescan insn with uid = 50.
;; Following path with 19 sets: 2 4 5 
deferring rescan insn with uid = 30.
;; Following path with 17 sets: 2 3 
;; Following path with 1 sets: 10 
;; Following path with 2 sets: 9 
;; Following path with 3 sets: 11 
deferring rescan insn with uid = 90.


try_optimize_cfg iteration 1



ptrace_write_user

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,2u} r2={3d,2u} r3={2d} r11={1d,11u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={9d,8u} r25={1d,14u} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={4d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,1u} r140={1d,4u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} 
;;    total ref usage 293{181d,111u,1e} in 63{62 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142 143 144 145 146 147 148 149 150
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142 143 144 145 146 147 148 149 150
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/ptrace.c:280 (set (reg/v/f:SI 139 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:280 (set (reg/v:SI 140 [ off ])
        (reg:SI 1 r1 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:280 (set (reg/v:SI 141 [ val ])
        (reg:SI 2 r2 [ val ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 142)
        (and:SI (reg/v:SI 140 [ off ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 144)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:281 (set (reg:QI 143)
        (subreg:QI (reg:SI 144) 0)) 178 {*arm_movqi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 146)
        (const_int 295 [0x127])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (reg:SI 146))) 219 {*arm_cmpsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 147)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 15 14 16 2 arch/arm/kernel/ptrace.c:281 (set (reg:QI 145)
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 148)
        (ior:SI (subreg:SI (reg:QI 143) 0)
            (subreg:SI (reg:QI 145) 0))) 89 {*arm_iorsi3} (nil))

(insn 17 16 18 2 arch/arm/kernel/ptrace.c:281 (set (reg:QI 149)
        (subreg:QI (reg:SI 148) 0)) 178 {*arm_movqi_insn} (nil))

(insn 18 17 19 2 arch/arm/kernel/ptrace.c:281 (set (reg:SI 150)
        (zero_extend:SI (reg:QI 149))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 19 18 20 2 arch/arm/kernel/ptrace.c:281 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 2 arch/arm/kernel/ptrace.c:281 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 25 3 arch/arm/kernel/ptrace.c:282 (set (reg/v:SI 134 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 25 22 26 4 18 "" [1 uses])

(note 26 25 27 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 4 arch/arm/kernel/ptrace.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ off ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 4 arch/arm/kernel/ptrace.c:284 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  4 [39.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 33 5 arch/arm/kernel/ptrace.c:285 (set (reg/v:SI 134 [ ret ])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 5 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 137 151 152 153 154 155 157 158 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 137 151 152 153 154 155 157 158 159 160 161
;; live  kill	 14 [lr]

;; Pred edge  4 [61.0%] 
(code_label 33 30 34 6 20 "" [1 uses])

(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 6 arch/arm/kernel/ptrace.c:287 (set (reg:SI 137 [ D.26920 ])
        (lshiftrt:SI (reg/v:SI 140 [ off ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 36 35 37 6 arch/arm/kernel/ptrace.c:172 (set (reg/f:SI 151 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ tsk ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 6 arch/arm/kernel/ptrace.c:172 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 151 [ <variable>.stack ])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 6 arch/arm/kernel/ptrace.c:172 (set (reg/v/f:SI 133 [ regs ])
        (plus:SI (reg/f:SI 152)
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 151 [ <variable>.stack ])
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 39 38 40 6 arch/arm/kernel/ptrace.c:175 (set (reg/f:SI 153)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 40 39 41 6 arch/arm/kernel/ptrace.c:175 (set (reg/f:SI 154 [ regs ])
        (reg/v/f:SI 133 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 arch/arm/kernel/ptrace.c:175 (set (reg:SI 155)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 6 arch/arm/kernel/ptrace.c:175 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 43 42 44 6 arch/arm/kernel/ptrace.c:175 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 6 arch/arm/kernel/ptrace.c:175 (set (reg:SI 2 r2)
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(call_insn 45 44 47 6 arch/arm/kernel/ptrace.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 47 45 48 6 arch/arm/kernel/ptrace.c:176 (set (reg:SI 157)
        (const_int -72 [0xffffffffffffffb8])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 6 arch/arm/kernel/ptrace.c:176 (set (reg:SI 158)
        (ashift:SI (reg:SI 137 [ D.26920 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 49 48 50 6 arch/arm/kernel/ptrace.c:176 (set (reg:SI 159)
        (plus:SI (reg/f:SI 25 sfp)
            (reg:SI 158))) 4 {*arm_addsi3} (nil))

(insn 50 49 51 6 arch/arm/kernel/ptrace.c:176 (set (reg/f:SI 160)
        (minus:SI (reg:SI 159)
            (reg:SI 155))) 28 {*arm_subsi3_insn} (nil))

(insn 51 50 52 6 arch/arm/kernel/ptrace.c:176 (set (mem/s/j:SI (reg/f:SI 160) [0 newregs.uregs S4 A32])
        (reg/v:SI 141 [ val ])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 136 [ D.27452 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 161)
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 54 53 55 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 55 54 56 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141
;; live  gen 	 24 [cc] 135
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 56 55 57 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 136 [ D.27452 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 58 57 59 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 59 58 60 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141


;; Succ edge  9 [28.0%] 
;; Succ edge  8 [72.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 162 163 164 165 166 167 168 169 170 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 141
;; live  gen 	 24 [cc] 162 163 164 165 166 167 168 169 170 171 172
;; live  kill	

;; Pred edge  7 [72.0%]  (fallthru)
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 62 61 63 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 63 62 64 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 162)
        (subreg:QI (reg:SI 163) 0)) 178 {*arm_movqi_insn} (nil))

(insn 64 63 65 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 164)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 166 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 164) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 165)
        (lshiftrt:SI (reg:SI 166 [ elf_hwcap ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 67 66 68 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 167)
        (subreg:QI (reg:SI 165) 0)) 178 {*arm_movqi_insn} (nil))

(insn 68 67 69 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 168)
        (and:SI (subreg:SI (reg:QI 167) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 69 68 70 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 169)
        (subreg:QI (reg:SI 168) 0)) 178 {*arm_movqi_insn} (nil))

(insn 70 69 71 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 170)
        (and:SI (subreg:SI (reg:QI 162) 0)
            (subreg:SI (reg:QI 169) 0))) 67 {*arm_andsi3_insn} (nil))

(insn 71 70 72 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 171)
        (subreg:QI (reg:SI 170) 0)) 178 {*arm_movqi_insn} (nil))

(insn 72 71 73 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 172)
        (zero_extend:SI (reg:QI 171))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 73 72 74 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 74 73 75 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 141
;; live  gen 	 134
;; live  kill	

;; Pred edge  7 [28.0%] 
;; Pred edge  8 [50.0%]  (fallthru)
(code_label 75 74 76 9 22 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 9 arch/arm/kernel/ptrace.c:179 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 137 [ D.26920 ])
                    (const_int 4 [0x4]))
                (reg/v/f:SI 133 [ regs ])) [0 <variable>.uregs S4 A32])
        (reg/v:SI 141 [ val ])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 81 9 arch/arm/kernel/ptrace.c:180 (set (reg/v:SI 134 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 6 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  8 [50.0%] 
(code_label 81 78 82 10 21 "" [2 uses])

(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 10 arch/arm/kernel/ptrace.c:173 (set (reg/v:SI 134 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 3 5 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 138
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 84 83 85 11 19 "" [0 uses])

(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 90 11 arch/arm/kernel/ptrace.c:288 (set (reg:SI 138 [ <result> ])
        (reg/v:SI 134 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 90 86 96 11 arch/arm/kernel/ptrace.c:288 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 96 90 0 11 arch/arm/kernel/ptrace.c:288 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 11 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 43.
deleting insn with uid = 43.
rescanning insn with uid = 50.
deleting insn with uid = 50.
rescanning insn with uid = 90.
deleting insn with uid = 90.
ending the processing of deferred insns

;; Function task_user_regset_view (task_user_regset_view)[0:1563]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


task_user_regset_view

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 27{14d,13u,0e} in 5{5 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 18 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 12 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 5 sets: 2 
deferring rescan insn with uid = 12.


try_optimize_cfg iteration 1



task_user_regset_view

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 27{14d,13u,0e} in 5{5 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/ptrace.c:786 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:786 (set (reg/f:SI 135)
        (plus:SI (reg/f:SI 136)
            (const_int 152 [0x98]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 152 [0x98])))
        (nil)))

(insn 8 7 12 2 arch/arm/kernel/ptrace.c:786 (set (reg/f:SI 133 [ <result> ])
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 152 [0x98])))
        (nil)))

(insn 12 8 18 2 arch/arm/kernel/ptrace.c:786 (set (reg/i:SI 0 r0)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 152 [0x98])))
        (nil)))

(insn 18 12 0 2 arch/arm/kernel/ptrace.c:786 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 12.
deleting insn with uid = 12.
ending the processing of deferred insns

;; Function ptrace_break_init (ptrace_break_init)[0:1545] (unlikely executed)


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


ptrace_break_init

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={8d,5u} r1={4d} r2={4d} r3={4d} r11={1d,2u} r12={4d} r13={1d,5u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={1d,2u} r26={1d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 393{371d,22u,0e} in 14{11 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 26 to worklist
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 20 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 20 sets: 2 
deferring rescan insn with uid = 8.
deferring rescan insn with uid = 9.
deferring rescan insn with uid = 12.
deferring rescan insn with uid = 13.


try_optimize_cfg iteration 1



ptrace_break_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={8d,5u} r1={4d} r2={4d} r3={4d} r11={1d,2u} r12={4d} r13={1d,5u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={1d,2u} r26={1d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 393{371d,22u,0e} in 14{11 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136 137 138
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/ptrace.c:241 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:241 (set (reg:SI 0 r0)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn 7 6 8 2 arch/arm/kernel/ptrace.c:241 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:242 (set (reg/f:SI 135)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:242 (set (reg/f:SI 136)
        (plus:SI (reg/f:SI 134)
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:242 (set (reg:SI 0 r0)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(call_insn 11 10 12 2 arch/arm/kernel/ptrace.c:242 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:243 (set (reg/f:SI 137)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:243 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 134)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 56 [0x38])))
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:243 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 56 [0x38])))
        (nil)))

(call_insn 15 14 16 2 arch/arm/kernel/ptrace.c:243 (parallel [
            (call (mem:SI (symbol_ref:SI ("register_undef_hook") [flags 0x41] <function_decl 0x11539500 register_undef_hook>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 16 15 20 2 arch/arm/kernel/ptrace.c:245 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 20 16 26 2 arch/arm/kernel/ptrace.c:245 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 26 20 0 2 arch/arm/kernel/ptrace.c:245 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 8.
deleting insn with uid = 8.
rescanning insn with uid = 9.
deleting insn with uid = 9.
rescanning insn with uid = 12.
deleting insn with uid = 12.
rescanning insn with uid = 13.
deleting insn with uid = 13.
ending the processing of deferred insns

;; Function syscall_trace (syscall_trace)[0:1565]


11 basic blocks, 14 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [39.0%]  3 [61.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [39.0%]  4 [61.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3721, maybe hot.
Predecessors:  3 [61.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [50.0%]  5 [50.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1861, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1861, maybe hot.
Predecessors:  4 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 3721, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [29.0%]  (fallthru) 9 [71.0%] 


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1079, maybe hot.
Predecessors:  7 [29.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 3721, maybe hot.
Predecessors:  7 [71.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [100.0%]  (fallthru)


Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [39.0%]  3 [39.0%]  9 [100.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)


syscall_trace

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={4d,2u} r2={4d,2u} r3={3d} r11={1d,10u} r12={3d} r13={1d,21u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,10u} r26={1d,9u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,1u,1d} r135={1d,1u,1d} r136={1d,1u,1d} r137={1d,1u,1d} r138={1d,1u,1d} r139={1d,1u,1d} r140={1d,1u,1d} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r145={2d,1u} r146={1d,1u} r147={1d,1u} r148={1d,3u} r149={2d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} 
;;    total ref usage 423{301d,113u,9e} in 68{66 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 10 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 10 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 9 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 23 to worklist
  Adding insn 38 to worklist
  Adding insn 30 to worklist
  Adding insn 26 to worklist
  Adding insn 56 to worklist
  Adding insn 49 to worklist
  Adding insn 74 to worklist
  Adding insn 68 to worklist
  Adding insn 77 to worklist
  Adding insn 94 to worklist
Finished finding needed instructions:
processing block 10 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 88 to worklist
  Adding insn 84 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
  Adding insn 73 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148
  Adding insn 45 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148
  Adding insn 40 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 20 (  1.8)
;; Following path with 33 sets: 2 3 4 6 
deferring rescan insn with uid = 9.
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 18.
deferring rescan insn with uid = 19.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 32.
deferring rescan insn with uid = 32.
deferring rescan insn with uid = 33.
deferring rescan insn with uid = 33.
deferring rescan insn with uid = 34.
deferring rescan insn with uid = 34.
deferring rescan insn with uid = 35.
;; Following path with 33 sets: 2 3 4 5 
;; Following path with 30 sets: 7 8 
deferring rescan insn with uid = 51.
deferring rescan insn with uid = 60.
deferring rescan insn with uid = 60.
deferring rescan insn with uid = 61.
deferring rescan insn with uid = 61.
deferring rescan insn with uid = 62.
deferring rescan insn with uid = 62.
deferring rescan insn with uid = 63.
deferring rescan insn with uid = 63.
deferring rescan insn with uid = 64.
deferring rescan insn with uid = 64.
deferring rescan insn with uid = 65.
deferring rescan insn with uid = 65.
deferring rescan insn with uid = 66.
deferring rescan insn with uid = 66.
deferring rescan insn with uid = 70.
deferring rescan insn with uid = 70.
deferring rescan insn with uid = 71.
deferring rescan insn with uid = 71.
deferring rescan insn with uid = 72.
;; Following path with 5 sets: 9 
deferring rescan insn with uid = 79.
;; Following path with 3 sets: 10 
deferring rescan insn with uid = 88.


try_optimize_cfg iteration 1



syscall_trace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={4d,2u} r2={4d,2u} r3={3d} r11={1d,10u} r12={3d} r13={1d,21u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={6d,4u} r25={1d,10u} r26={1d,9u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,1u,1d} r135={1d,1u,1d} r136={1d,1u,1d} r137={1d,1u,1d} r138={1d,1u,1d} r139={1d,1u,1d} r140={1d,1u,1d} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r145={2d,1u} r146={1d,1u} r147={1d,1u} r148={1d,3u} r149={2d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} 
;;    total ref usage 423{301d,113u,9e} in 68{66 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 142 143 147 148 149 150 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 142 143 147 148 149 150 151
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/ptrace.c:905 (set (reg/v:SI 147 [ why ])
        (reg:SI 0 r0 [ why ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:905 (set (reg/v/f:SI 148 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:905 (set (reg/v:SI 149 [ scno ])
        (reg:SI 2 r2 [ scno ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 143 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 include/linux/thread_info.h:84 (set (reg:SI 150)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 include/linux/thread_info.h:84 (set (reg/f:SI 141 [ D.27485 ])
        (and:SI (reg:SI 150)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 2 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 142 [ D.27480 ])
        (mem/v:SI (reg/f:SI 141 [ D.27485 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:908 (set (reg:SI 151)
        (and:SI (reg:SI 142 [ D.27480 ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:908 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/ptrace.c:908 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 10 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149


;; Succ edge  10 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 152 153 154 155 156
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149
;; live  gen 	 24 [cc] 140 152 153 154 155 156
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 140 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 153)
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 152)
        (reg/f:SI 141 [ D.27485 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 19 18 20 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 154 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 141 [ D.27485 ])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 156 [ <variable>.ptrace ])
        (mem/s/j:SI (plus:SI (reg/f:SI 154 [ <variable>.task ])
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 155)
        (and:SI (reg:SI 156 [ <variable>.ptrace ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 10 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149


;; Succ edge  10 [39.0%] 
;; Succ edge  4 [61.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149
;; lr  def 	 24 [cc] 138 139 144 157 158 159 160 161 162 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149
;; live  gen 	 24 [cc] 138 139 144 157 158 159 160 161 162 163
;; live  kill	

;; Pred edge  3 [61.0%]  (fallthru)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 4 arch/arm/kernel/ptrace.c:917 (set (reg/v:SI 144 [ ip ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/kernel/ptrace.c:918 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 147 [ why ])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 4 arch/arm/kernel/ptrace.c:920 (set (reg:SI 158)
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/kernel/ptrace.c:920 (set (reg:SI 157)
        (reg/f:SI 141 [ D.27485 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 30 29 31 4 arch/arm/kernel/ptrace.c:920 (set (mem/s/j:SI (plus:SI (reg/f:SI 141 [ D.27485 ])
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 149 [ scno ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 160)
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 159)
        (reg/f:SI 141 [ D.27485 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 34 33 35 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 161 [ <variable>.task ])
        (reg/f:SI 154 [ <variable>.task ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163 [ <variable>.ptrace ])
        (mem/s/j:SI (plus:SI (reg/f:SI 154 [ <variable>.task ])
                (const_int 16 [0x10])) [0 <variable>.ptrace+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 162)
        (and:SI (reg:SI 163 [ <variable>.ptrace ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 37 36 38 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 162)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 39 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 145
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 39 38 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 43 5 arch/arm/kernel/ptrace.c:924 discrim 2 (set (reg:SI 145 [ iftmp.405 ])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 145
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 43 40 44 6 36 "" [1 uses])

(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 6 arch/arm/kernel/ptrace.c:924 discrim 1 (set (reg:SI 145 [ iftmp.405 ])
        (const_int 133 [0x85])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 164 165 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 148
;; live  gen 	 0 [r0] 24 [cc] 137 164 165 166 167
;; live  kill	 14 [lr]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 46 45 47 7 37 "" [0 uses])

(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 arch/arm/kernel/ptrace.c:924 discrim 3 (set (reg:SI 0 r0)
        (reg:SI 145 [ iftmp.405 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 49 48 50 7 arch/arm/kernel/ptrace.c:924 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_notify") [flags 0x41] <function_decl 0x1109c700 ptrace_notify>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 50 49 51 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 52 51 53 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg:SI 165)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 53 52 54 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 166 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 164)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 167 [ <variable>.exit_code ])
        (mem/s/j:SI (plus:SI (reg/f:SI 166 [ <variable>.task ])
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167 [ <variable>.exit_code ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148


;; Succ edge  8 [29.0%]  (fallthru)
;; Succ edge  9 [71.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 168 169 170 171 172 173 174 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 168 169 170 171 172 173 174 175 176
;; live  kill	 14 [lr]

;; Pred edge  7 [29.0%]  (fallthru)
(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 136 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 135 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 8 arch/arm/kernel/ptrace.c:932 (set (reg:SI 169)
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 8 arch/arm/kernel/ptrace.c:932 (set (reg:SI 168)
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 62 61 63 8 arch/arm/kernel/ptrace.c:932 (set (reg/f:SI 170 [ <variable>.task ])
        (reg/f:SI 166 [ <variable>.task ])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 8 arch/arm/kernel/ptrace.c:932 (set (reg:SI 172)
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 8 arch/arm/kernel/ptrace.c:932 (set (reg:SI 171)
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 65 64 66 8 arch/arm/kernel/ptrace.c:932 (set (reg:SI 0 r0)
        (reg:SI 167 [ <variable>.exit_code ])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 8 arch/arm/kernel/ptrace.c:932 (set (reg:SI 1 r1)
        (reg/f:SI 166 [ <variable>.task ])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 8 arch/arm/kernel/ptrace.c:932 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 68 67 69 8 arch/arm/kernel/ptrace.c:932 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("send_sig") [flags 0x41] <function_decl 0x10f01b80 send_sig>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 69 68 70 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 134 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 8 arch/arm/kernel/ptrace.c:933 (set (reg:SI 174)
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 8 arch/arm/kernel/ptrace.c:933 (set (reg:SI 173)
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 72 71 73 8 arch/arm/kernel/ptrace.c:933 (set (reg/f:SI 175 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 164)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 8 arch/arm/kernel/ptrace.c:933 (set (reg:SI 176)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 8 arch/arm/kernel/ptrace.c:933 (set (mem/s/j:SI (plus:SI (reg/f:SI 175 [ <variable>.task ])
                (const_int 508 [0x1fc])) [0 <variable>.exit_code+0 S4 A32])
        (reg:SI 176)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; lr  def 	 133 149 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148
;; live  gen 	 133 149 177 178
;; live  kill	

;; Pred edge  7 [71.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 75 74 76 9 38 "" [1 uses])

(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 9 arch/arm/kernel/ptrace.c:935 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ regs ])
                (const_int 48 [0x30])) [0 <variable>.uregs+48 S4 A32])
        (reg/v:SI 144 [ ip ])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 9 arch/arm/kernel/ptrace.c:937 (set (reg:SI 178)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 80 79 81 9 arch/arm/kernel/ptrace.c:937 (set (reg:SI 177)
        (and:SI (reg:SI 178)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 81 80 82 9 arch/arm/kernel/ptrace.c:937 (set (reg/v:SI 149 [ scno ])
        (mem/s/j:SI (plus:SI (reg:SI 177)
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 0 [r0] 146
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 149
;; live  gen 	 0 [r0] 146
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 82 81 83 10 35 "" [2 uses])

(note 83 82 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 88 10 arch/arm/kernel/ptrace.c:938 (set (reg:SI 146 [ <result> ])
        (reg/v:SI 149 [ scno ])) 167 {*arm_movsi_insn} (nil))

(insn 88 84 94 10 arch/arm/kernel/ptrace.c:938 (set (reg/i:SI 0 r0)
        (reg/v:SI 149 [ scno ])) 167 {*arm_movsi_insn} (nil))

(insn 94 88 0 10 arch/arm/kernel/ptrace.c:938 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 9.
deleting insn with uid = 9.
rescanning insn with uid = 17.
deleting insn with uid = 17.
rescanning insn with uid = 18.
deleting insn with uid = 18.
rescanning insn with uid = 19.
deleting insn with uid = 19.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 32.
deleting insn with uid = 32.
rescanning insn with uid = 33.
deleting insn with uid = 33.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 35.
deleting insn with uid = 35.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 60.
deleting insn with uid = 60.
rescanning insn with uid = 61.
deleting insn with uid = 61.
rescanning insn with uid = 62.
deleting insn with uid = 62.
rescanning insn with uid = 63.
deleting insn with uid = 63.
rescanning insn with uid = 64.
deleting insn with uid = 64.
rescanning insn with uid = 65.
deleting insn with uid = 65.
rescanning insn with uid = 66.
deleting insn with uid = 66.
rescanning insn with uid = 70.
deleting insn with uid = 70.
rescanning insn with uid = 71.
deleting insn with uid = 71.
rescanning insn with uid = 72.
deleting insn with uid = 72.
rescanning insn with uid = 79.
deleting insn with uid = 79.
rescanning insn with uid = 88.
deleting insn with uid = 88.
ending the processing of deferred insns

;; Function vfp_set (vfp_set)[0:1562]


18 basic blocks, 25 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [50.0%]  3 [50.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [50.0%]  (fallthru) 17 [50.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [85.0%]  (fallthru) 6 [15.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2125, maybe hot.
Predecessors:  4 [85.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 375, maybe hot.
Predecessors:  4 [15.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  15 [50.0%]  7 [50.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 187, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 2313, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 2313, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [0.2%]  (fallthru) 17 [99.8%] 


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 1.
Predecessors:  9 [0.2%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors: 


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1524, maybe hot.
Predecessors:  17 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [85.0%]  (fallthru) 13 [15.0%] 

Invalid sum of incoming frequencies 763, should be 1524

Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 1296, maybe hot.
Predecessors:  11 [85.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [100.0%]  (fallthru)


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 228, maybe hot.
Predecessors:  11 [15.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  15 [50.0%]  14 [50.0%]  (fallthru)


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 0.
Predecessors:  12 [100.0%]  (fallthru) 2 [50.0%]  8 13 [50.0%]  (fallthru) 17 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 7173, should be 0

Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 9998, maybe hot.
Predecessors:  6 [50.0%]  13 [50.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 302, should be 9998

Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 9998, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 14 [100.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 17 , prev 16, next 1, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  3 [50.0%]  9 [99.8%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [50.0%]  14 [50.0%]  (fallthru)

Invalid sum of incoming frequencies 4808, should be 1525

Basic block 1 , prev 17, loop_depth 0, count 0, freq 9998, maybe hot.
Predecessors:  16 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 31 (  1.7)


vfp_set

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,14u} r1={17d,7u} r2={16d,7u} r3={10d,1u} r11={1d,17u} r12={10d} r13={1d,26u} r14={10d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={20d,9u} r25={1d,21u} r26={1d,18u,2d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,4u} r140={2d,1u} r141={1d,1u} r142={1d,1u} r144={2d,8u} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r171={1d,1u} 
;;    total ref usage 1323{1137d,184u,2e} in 91{82 regular + 9 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 14 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 15 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 7 )->[8]->( 14 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 17 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[13]->( 15 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 2 8 13 17 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 13 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 15 14 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 9 )->[17]->( 11 14 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 21 to worklist
  Adding insn 18 to worklist
  Adding insn 24 to worklist
  Adding insn 31 to worklist
  Adding insn 39 to worklist
  Adding insn 52 to worklist
  Adding insn 49 to worklist
  Adding insn 59 to worklist
  Adding insn 63 to worklist
  Adding insn 69 to worklist
  Adding insn 79 to worklist
  Adding insn 87 to worklist
  Adding insn 99 to worklist
  Adding insn 96 to worklist
  Adding insn 113 to worklist
  Adding insn 110 to worklist
  Adding insn 103 to worklist
  Adding insn 141 to worklist
  Adding insn 130 to worklist
Finished finding needed instructions:
processing block 16 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 135 to worklist
  Adding insn 122 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 114 to worklist
  Adding insn 112 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 102 to worklist
processing block 10 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 119 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146 147
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 72 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 129 to worklist
  Adding insn 128 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
  Adding insn 58 to worklist
  Adding insn 57 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
  Adding insn 41 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
  Adding insn 54 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 23 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 34 (  1.9)
;; Following path with 36 sets: 2 3 4 6 7 
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 29.
;; Following path with 36 sets: 2 3 4 5 
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 37.
deferring rescan insn with uid = 38.
;; Following path with 13 sets: 8 9 10 
;; Following path with 21 sets: 17 11 13 
;; Following path with 21 sets: 17 11 12 
deferring rescan insn with uid = 84.
deferring rescan insn with uid = 85.
deferring rescan insn with uid = 86.
;; Following path with 1 sets: 15 
;; Following path with 18 sets: 14 
;; Following path with 3 sets: 16 
deferring rescan insn with uid = 135.


try_optimize_cfg iteration 1



vfp_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,14u} r1={17d,7u} r2={16d,7u} r3={10d,1u} r11={1d,17u} r12={10d} r13={1d,26u} r14={10d,1u} r15={9d} r16={9d} r17={9d} r18={9d} r19={9d} r20={9d} r21={9d} r22={9d} r23={9d} r24={20d,9u} r25={1d,21u} r26={1d,18u,2d} r27={9d} r28={9d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={9d} r38={9d} r39={9d} r40={9d} r41={9d} r42={9d} r43={9d} r44={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r77={9d} r78={9d} r79={9d} r80={9d} r81={9d} r82={9d} r83={9d} r84={9d} r85={9d} r86={9d} r87={9d} r88={9d} r89={9d} r90={9d} r91={9d} r92={9d} r93={9d} r94={9d} r95={9d} r96={9d} r97={9d} r98={9d} r99={9d} r100={9d} r101={9d} r102={9d} r103={9d} r104={9d} r105={9d} r106={9d} r107={9d} r108={9d} r109={9d} r110={9d} r111={9d} r112={9d} r113={9d} r114={9d} r115={9d} r116={9d} r117={9d} r118={9d} r119={9d} r120={9d} r121={9d} r122={9d} r123={9d} r124={9d} r125={9d} r126={9d} r127={9d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,4u} r140={2d,1u} r141={1d,1u} r142={1d,1u} r144={2d,8u} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r171={1d,1u} 
;;    total ref usage 1323{1137d,184u,2e} in 91{82 regular + 9 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 144 145 146 147 148 149 150
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 139 142 144 145 146 147 148 149 150
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 142 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (nil))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:698 (set (reg/v:SI 144 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:698 (set (reg/v:SI 145 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 146 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:698 (set (reg/v/f:SI 147 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:700 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:701 (set (reg/f:SI 148)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))) 4 {*arm_addsi3} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:701 (set (reg/f:SI 149)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:701 (set (reg:SI 150)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/ptrace.c:701 (set (reg:SI 0 r0)
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))
        (nil)))

(insn 16 15 17 2 arch/arm/kernel/ptrace.c:701 (set (reg:SI 1 r1)
        (reg/f:SI 149)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/kernel/ptrace.c:701 (set (reg:SI 2 r2)
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 280 [0x118])
        (nil)))

(call_insn 18 17 20 2 arch/arm/kernel/ptrace.c:701 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 20 18 21 2 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 2 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 14 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  14 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 22 21 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 3 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 3 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 146
;; lr  def 	 24 [cc] 137 138 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 137 138 152
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%]  (fallthru)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 4 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 27 26 28 4 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 28 27 29 4 include/linux/regset.h:255 (set (reg/f:SI 152)
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))
        (nil)))

(insn 29 28 30 4 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg/f:SI 148)
            (reg/v:SI 144 [ pos ]))) 4 {*arm_addsi3} (nil))

(insn 30 29 31 4 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 4 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  6 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 146 153 154 155
;; live  kill	 14 [lr]

;; Pred edge  4 [85.0%]  (fallthru)
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 5 include/linux/regset.h:257 (set (reg/f:SI 153 [ data ])
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 include/linux/regset.h:257 (set (reg/f:SI 154 [ kbuf ])
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 include/linux/regset.h:257 (set (reg:SI 155 [ copy ])
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 5 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 5 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 41 5 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 41 39 44 5 include/linux/regset.h:258 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]

;; Pred edge  4 [15.0%] 
(code_label 44 41 45 6 43 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 6 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 6 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 6 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 49 48 50 6 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 50 49 51 6 include/linux/regset.h:259 (set (reg:SI 136 [ D.27545 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 6 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27545 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 53 6 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 15 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147


;; Succ edge  15 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 147
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 include/linux/regset.h:262 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145
;; lr  def 	 24 [cc] 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 145
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 55 54 56 8 44 "" [0 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 include/linux/regset.h:264 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) 28 {*arm_subsi3_insn} (nil))

(insn 58 57 59 8 include/linux/regset.h:305 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 59 58 60 8 include/linux/regset.h:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 100)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 8 -> ( 14 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147


;; Succ edge  14
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 144
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
(note 60 59 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 9 include/linux/regset.h:263 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 9 include/linux/regset.h:307 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 63 62 64 9 include/linux/regset.h:307 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
        (nil)))
;; End of basic block 9 -> ( 10 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  10 [0.2%]  (fallthru)
;; Succ edge  17 [99.8%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 157 158
;; live  kill	 14 [lr]

;; Pred edge  9 [0.2%]  (fallthru)
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 10 include/linux/regset.h:307 discrim 1 (set (reg/f:SI 157)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 10 include/linux/regset.h:307 discrim 1 (set (reg:SI 158)
        (const_int 307 [0x133])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 10 include/linux/regset.h:307 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)
        (nil)))

(insn 68 67 69 10 include/linux/regset.h:307 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 307 [0x133])
        (nil)))

(call_insn 69 68 127 10 include/linux/regset.h:307 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 17) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 146
;; lr  def 	 24 [cc] 134 135 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 134 135 159 160 161
;; live  kill	 24 [cc]

;; Pred edge  17 [50.0%] 
(code_label 127 69 71 11 48 "" [1 uses])

(note 71 127 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 11 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 73 72 74 11 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 74 73 75 11 include/linux/regset.h:255 (set (reg/f:SI 159)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))) 4 {*arm_addsi3} (nil))

(insn 75 74 76 11 include/linux/regset.h:255 (set (reg/f:SI 160)
        (plus:SI (reg/f:SI 159)
            (const_int 260 [0x104]))) 4 {*arm_addsi3} (nil))

(insn 76 75 77 11 include/linux/regset.h:255 (set (reg:SI 161)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) 4 {*arm_addsi3} (nil))

(insn 77 76 78 11 include/linux/regset.h:255 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg/f:SI 160)
            (reg:SI 161))) 4 {*arm_addsi3} (nil))

(insn 78 77 79 11 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 79 78 80 11 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146 147


;; Succ edge  12 [85.0%]  (fallthru)
;; Succ edge  13 [15.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 162 163 164
;; live  kill	 14 [lr]

;; Pred edge  11 [85.0%]  (fallthru)
(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 12 include/linux/regset.h:257 (set (reg/f:SI 162 [ data ])
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 12 include/linux/regset.h:257 (set (reg/f:SI 163 [ kbuf ])
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 12 include/linux/regset.h:257 (set (reg:SI 164 [ copy ])
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 84 83 85 12 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 12 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 12 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 87 86 91 12 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 139 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  11 [15.0%] 
(code_label 91 87 92 13 46 "" [1 uses])

(note 92 91 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 13 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 13 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 13 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 96 95 97 13 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 97 96 98 13 include/linux/regset.h:259 (set (reg:SI 133 [ D.27591 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 13 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27591 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 13 include/linux/regset.h:259 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 117)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 12 2 8 13 17) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 166 167 168
;; live  kill	 14 [lr]

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
;; Pred edge  8
;; Pred edge  13 [50.0%]  (fallthru)
;; Pred edge  17 [50.0%]  (fallthru)
(code_label 100 99 101 14 41 "" [2 uses])

(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 103 14 arch/arm/kernel/ptrace.c:725 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) 167 {*arm_movsi_insn} (nil))

(call_insn 103 102 104 14 arch/arm/kernel/ptrace.c:725 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 104 103 105 14 arch/arm/kernel/ptrace.c:726 (set (reg/f:SI 166)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 105 104 106 14 arch/arm/kernel/ptrace.c:726 (set (reg/f:SI 167)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))) 4 {*arm_addsi3} (nil))

(insn 106 105 107 14 arch/arm/kernel/ptrace.c:726 (set (reg:SI 168)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (nil))

(insn 107 106 108 14 arch/arm/kernel/ptrace.c:726 (set (reg:SI 0 r0)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (nil))

(insn 108 107 109 14 arch/arm/kernel/ptrace.c:726 (set (reg:SI 1 r1)
        (reg/f:SI 167)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -280 [0xfffffffffffffee8]))
        (nil)))

(insn 109 108 110 14 arch/arm/kernel/ptrace.c:726 (set (reg:SI 2 r2)
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 280 [0x118])
        (nil)))

(call_insn 110 109 112 14 arch/arm/kernel/ptrace.c:726 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 112 110 113 14 arch/arm/kernel/ptrace.c:727 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) 167 {*arm_movsi_insn} (nil))

(call_insn 113 112 114 14 arch/arm/kernel/ptrace.c:727 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_flush_hwstate") [flags 0x41] <function_decl 0x10a83b80 vfp_flush_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 114 113 117 14 arch/arm/kernel/ptrace.c:729 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 6 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  13 [50.0%] 
(code_label 117 114 118 15 45 "" [2 uses])

(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 15 include/linux/regset.h:260 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 141
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 120 119 121 16 47 "" [0 uses])

(note 121 120 122 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 122 121 135 16 arch/arm/kernel/ptrace.c:730 (set (reg:SI 141 [ <result> ])
        (reg/v:SI 140 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 135 122 141 16 arch/arm/kernel/ptrace.c:730 (set (reg/i:SI 0 r0)
        (reg/v:SI 140 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 141 135 125 16 arch/arm/kernel/ptrace.c:730 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3 9) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 171
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  9 [99.8%] 
(code_label 125 141 126 17 42 "" [2 uses])

(note 126 125 128 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 128 126 129 17 include/linux/regset.h:252 discrim 1 (set (reg:SI 171)
        (const_int 259 [0x103])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 17 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 171))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 130 129 0 17 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 17 -> ( 11 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  11 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 37.
deleting insn with uid = 37.
rescanning insn with uid = 38.
deleting insn with uid = 38.
rescanning insn with uid = 84.
deleting insn with uid = 84.
rescanning insn with uid = 85.
deleting insn with uid = 85.
rescanning insn with uid = 86.
deleting insn with uid = 86.
rescanning insn with uid = 135.
deleting insn with uid = 135.
ending the processing of deferred insns

;; Function fpa_set (fpa_set)[0:1560]


10 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [39.0%]  3 [61.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [61.0%]  (fallthru) 8 [39.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3721, maybe hot.
Predecessors:  3 [61.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [99.3%]  (fallthru) 6 [0.7%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3694, maybe hot.
Predecessors:  4 [99.3%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 27, maybe hot.
Predecessors:  4 [0.7%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 6295, maybe hot.
Predecessors:  2 [39.0%]  3 [39.0%]  6 [61.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 17 (  1.7)


fpa_set

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,3u} r138={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 364{278d,84u,2e} in 42{40 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 7 5 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 22 to worklist
  Adding insn 29 to worklist
  Adding insn 37 to worklist
  Adding insn 50 to worklist
  Adding insn 47 to worklist
  Adding insn 70 to worklist
Finished finding needed instructions:
processing block 9 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 64 to worklist
  Adding insn 60 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 57 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 52 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
  Adding insn 21 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)
;; Following path with 33 sets: 2 3 4 6 7 
deferring rescan insn with uid = 14.
deferring rescan insn with uid = 15.
deferring rescan insn with uid = 16.
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 17.
;; Following path with 33 sets: 2 3 4 5 
deferring rescan insn with uid = 34.
deferring rescan insn with uid = 35.
deferring rescan insn with uid = 36.
;; Following path with 1 sets: 8 
;; Following path with 3 sets: 9 
deferring rescan insn with uid = 64.


try_optimize_cfg iteration 1



fpa_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,3u} r138={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 364{278d,84u,2e} in 42{40 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144 145 146 147 148
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144 145 146 147 148
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (nil))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:624 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:624 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:624 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:625 (set (reg/v/f:SI 137 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:627 (set (reg:SI 145)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:627 (set (reg:QI 146)
        (subreg:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 82 [0x52])) [0 <variable>.used_cp+2 S1 A16])
        (subreg:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/ptrace.c:627 (set (reg:SI 147)
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 16 15 17 2 arch/arm/kernel/ptrace.c:627 (set (reg:QI 148)
        (subreg:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/ptrace.c:627 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 137 [ thread ])
                (const_int 81 [0x51])) [0 <variable>.used_cp+1 S1 A8])
        (subreg:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (nil))

(insn 18 17 19 2 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 2 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144


;; Succ edge  8 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 20 19 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 3 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 3 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 149
;; live  kill	 24 [cc]

;; Pred edge  3 [61.0%]  (fallthru)
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 include/linux/regset.h:254 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 25 24 26 4 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 26 25 27 4 include/linux/regset.h:255 (set (reg/f:SI 149)
        (plus:SI (reg/v/f:SI 137 [ thread ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (nil))

(insn 27 26 28 4 include/linux/regset.h:255 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg/f:SI 149)
            (reg/v:SI 141 [ pos ]))) 4 {*arm_addsi3} (nil))

(insn 28 27 29 4 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 4 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144


;; Succ edge  5 [99.3%]  (fallthru)
;; Succ edge  6 [0.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 150 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 150 151 152
;; live  kill	 14 [lr]

;; Pred edge  4 [99.3%]  (fallthru)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 include/linux/regset.h:257 (set (reg/f:SI 150 [ data ])
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 include/linux/regset.h:257 (set (reg/f:SI 151 [ kbuf ])
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 include/linux/regset.h:257 (set (reg:SI 152 [ copy ])
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 5 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 39 5 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 39 37 42 5 include/linux/regset.h:266 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  4 [0.7%] 
(code_label 42 39 43 6 54 "" [1 uses])

(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 6 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 6 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 6 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 6 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 48 47 49 6 include/linux/regset.h:259 (set (reg:SI 133 [ D.27616 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 6 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27616 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 6 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  6 [39.0%]  (fallthru)
(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 55 7 include/linux/regset.h:260 (set (reg:SI 135 [ D.27612 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  6 [61.0%] 
(code_label 55 52 56 8 53 "" [3 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 include/linux/regset.h:250 (set (reg:SI 135 [ D.27612 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 138
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 58 57 59 9 55 "" [0 uses])

(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 64 9 arch/arm/kernel/ptrace.c:632 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27612 ])) 167 {*arm_movsi_insn} (nil))

(insn 64 60 70 9 arch/arm/kernel/ptrace.c:632 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.27612 ])) 167 {*arm_movsi_insn} (nil))

(insn 70 64 0 9 arch/arm/kernel/ptrace.c:632 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 14.
deleting insn with uid = 14.
rescanning insn with uid = 15.
deleting insn with uid = 15.
rescanning insn with uid = 16.
deleting insn with uid = 16.
rescanning insn with uid = 17.
deleting insn with uid = 17.
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 35.
deleting insn with uid = 35.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 64.
deleting insn with uid = 64.
ending the processing of deferred insns

;; Function gpr_set (gpr_set)[0:1558]


14 basic blocks, 20 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [50.0%]  3 [50.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [50.0%]  (fallthru) 8 [50.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [85.0%]  (fallthru) 6 [15.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2125, maybe hot.
Predecessors:  4 [85.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 375, maybe hot.
Predecessors:  4 [15.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [50.0%]  (fallthru) 8 [50.0%] 


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 188, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  13 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  3 [50.0%]  5 [100.0%]  (fallthru) 6 [50.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [50.0%]  (fallthru) 12 [50.0%] 

Invalid sum of incoming frequencies 9813, should be 5000

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 200, maybe hot.
Predecessors:  8 [50.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [28.0%]  10 [72.0%]  (fallthru)

Invalid sum of incoming frequencies 2500, should be 200

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 144, maybe hot.
Predecessors:  9 [72.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [50.0%]  (fallthru) 12 [50.0%] 


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  9 [28.0%]  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  13 [100.0%]  (fallthru)


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 9756, maybe hot.
Predecessors:  8 [50.0%]  10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  13 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 2572, should be 9756

Basic block 13 , prev 12, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 11 [100.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 13, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  13 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 20 count 26 (  1.9)


gpr_set

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={7d,3u} r2={7d,4u} r3={4d,1u} r11={1d,13u} r12={4d} r13={1d,16u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={12d,8u} r25={1d,17u} r26={1d,14u,2d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={2d,3u} r138={1d,2u} r139={3d,1u} r140={1d,1u} r141={1d,1u} r143={1d,3u} r144={1d,2u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} 
;;    total ref usage 547{417d,128u,2e} in 67{64 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 13 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 5 6 )->[8]->( 9 12 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[9]->( 11 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( 11 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 10 )->[11]->( 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 12 7 11 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 15 to worklist
  Adding insn 22 to worklist
  Adding insn 30 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 53 to worklist
  Adding insn 57 to worklist
  Adding insn 72 to worklist
  Adding insn 84 to worklist
  Adding insn 75 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
processing block 13 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 98 to worklist
  Adding insn 94 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 86 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 91 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
  Adding insn 52 to worklist
  Adding insn 51 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 44 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145 146
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
  Adding insn 14 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 20 count 26 (  1.9)
;; Following path with 26 sets: 2 3 4 6 7 
;; Following path with 25 sets: 2 3 4 5 
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 29.
;; Following path with 22 sets: 8 9 10 
deferring rescan insn with uid = 51.
;; Following path with 1 sets: 12 
;; Following path with 13 sets: 11 
;; Following path with 3 sets: 13 
deferring rescan insn with uid = 98.


try_optimize_cfg iteration 1



gpr_set

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,7u} r1={7d,3u} r2={7d,4u} r3={4d,1u} r11={1d,13u} r12={4d} r13={1d,16u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={12d,8u} r25={1d,17u} r26={1d,14u,2d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={2d,3u} r138={1d,2u} r139={3d,1u} r140={1d,1u} r141={1d,1u} r143={1d,3u} r144={1d,2u} r145={1d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} 
;;    total ref usage 547{417d,128u,2e} in 67{64 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 143 144 145 146
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 143 144 145 146
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 141 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (nil))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:593 (set (reg/v:SI 143 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:593 (set (reg/v:SI 144 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 145 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:593 (set (reg/v/f:SI 146 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 include/linux/regset.h:249 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 include/linux/regset.h:249 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146


;; Succ edge  8 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 include/linux/regset.h:252 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ pos ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 3 include/linux/regset.h:252 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 143 144 145 146


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 145
;; lr  def 	 24 [cc] 137 138 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143 144 145 146
;; live  gen 	 24 [cc] 137 138 147
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%]  (fallthru)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 include/linux/regset.h:254 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 143 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 18 17 19 4 include/linux/regset.h:254 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 144 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 19 18 20 4 include/linux/regset.h:255 (set (reg/f:SI 147)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 4 include/linux/regset.h:255 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg/f:SI 147)
            (reg/v:SI 143 [ pos ]))) 4 {*arm_addsi3} (nil))

(insn 21 20 22 4 include/linux/regset.h:256 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 4 include/linux/regset.h:256 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145 146


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  6 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 145
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 148 149 150
;; live  kill	 14 [lr]

;; Pred edge  4 [85.0%]  (fallthru)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 include/linux/regset.h:257 (set (reg/f:SI 148 [ data ])
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 include/linux/regset.h:257 (set (reg/f:SI 149 [ kbuf ])
        (reg/v/f:SI 145 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 include/linux/regset.h:257 (set (reg:SI 150 [ copy ])
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/regset.h:257 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 include/linux/regset.h:257 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 include/linux/regset.h:257 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 34 5 include/linux/regset.h:257 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 141 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]

;; Pred edge  4 [15.0%] 
(code_label 34 30 35 6 59 "" [1 uses])

(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 6 include/linux/regset.h:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 6 include/linux/regset.h:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 146 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 6 include/linux/regset.h:259 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 40 6 include/linux/regset.h:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_from_user") [flags 0x41] <function_decl 0x113a2f80 __copy_from_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 40 39 41 6 include/linux/regset.h:259 (set (reg:SI 136 [ D.27641 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 include/linux/regset.h:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27641 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 6 include/linux/regset.h:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 47 7 include/linux/regset.h:260 (set (reg/v:SI 139 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 5 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 152
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141
;; live  gen 	 24 [cc] 133 134 152
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [50.0%] 
(code_label 47 44 48 8 58 "" [3 uses])

(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg:SI 133 [ D.27667 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (reg:SI 134 [ D.27666 ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int -321 [0xfffffffffffffebf]))) 67 {*arm_andsi3_insn} (nil))

(insn 51 50 52 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:SI 152)
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 52 51 53 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:175 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 141
;; live  gen 	 24 [cc] 135
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:168 (set (reg/v:SI 135 [ mode ])
        (and:SI (reg:SI 133 [ D.27667 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 56 55 57 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 57 56 58 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141


;; Succ edge  11 [28.0%] 
;; Succ edge  10 [72.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 153 154 155 156 157 158 159 160 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 141
;; live  gen 	 24 [cc] 153 154 155 156 157 158 159 160 161 162 163
;; live  kill	

;; Pred edge  9 [72.0%]  (fallthru)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ mode ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 60 59 61 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 154)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 61 60 62 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 153)
        (subreg:QI (reg:SI 154) 0)) 178 {*arm_movqi_insn} (nil))

(insn 62 61 63 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg/f:SI 155)
        (symbol_ref:SI ("elf_hwcap") [flags 0xc0] <var_decl 0x5128fb40 elf_hwcap>)) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 157 [ elf_hwcap ])
        (mem/c/i:SI (reg/f:SI 155) [0 elf_hwcap+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 156)
        (lshiftrt:SI (reg:SI 157 [ elf_hwcap ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 65 64 66 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 158)
        (subreg:QI (reg:SI 156) 0)) 178 {*arm_movqi_insn} (nil))

(insn 66 65 67 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 159)
        (and:SI (subreg:SI (reg:QI 158) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 67 66 68 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 160)
        (subreg:QI (reg:SI 159) 0)) 178 {*arm_movqi_insn} (nil))

(insn 68 67 69 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 161)
        (and:SI (subreg:SI (reg:QI 153) 0)
            (subreg:SI (reg:QI 160) 0))) 67 {*arm_andsi3_insn} (nil))

(insn 69 68 70 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:QI 162)
        (subreg:QI (reg:SI 161) 0)) 178 {*arm_movqi_insn} (nil))

(insn 70 69 71 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:SI 163)
        (zero_extend:SI (reg:QI 162))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 71 70 72 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:178 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 164 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 139 164 165 166 167 168
;; live  kill	 14 [lr]

;; Pred edge  9 [28.0%] 
;; Pred edge  10 [50.0%]  (fallthru)
(code_label 73 72 74 11 62 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/ptrace.h:173 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 newregs.uregs+64 S4 A64])
        (reg:SI 134 [ D.27666 ])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 11 arch/arm/kernel/ptrace.c:606 (set (reg/f:SI 164 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 165)
        (const_int 8112 [0x1fb0])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 166)
        (plus:SI (reg/f:SI 164 [ <variable>.stack ])
            (reg:SI 165))) 4 {*arm_addsi3} (nil))

(insn 79 78 80 11 arch/arm/kernel/ptrace.c:606 (set (reg/f:SI 167)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 80 79 81 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 168)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 0 r0)
        (reg:SI 166)) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 1 r1)
        (reg/f:SI 167)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 83 82 84 11 arch/arm/kernel/ptrace.c:606 (set (reg:SI 2 r2)
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(call_insn 84 83 86 11 arch/arm/kernel/ptrace.c:606 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 86 84 89 11 arch/arm/kernel/ptrace.c:607 (set (reg/v:SI 139 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 8 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 139
;; live  kill	

;; Pred edge  8 [50.0%] 
;; Pred edge  10 [50.0%] 
(code_label 89 86 90 12 61 "" [2 uses])

(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 12 arch/arm/kernel/ptrace.c:604 (set (reg/v:SI 139 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 7 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 140
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 92 91 93 13 60 "" [0 uses])

(note 93 92 94 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 98 13 arch/arm/kernel/ptrace.c:608 (set (reg:SI 140 [ <result> ])
        (reg/v:SI 139 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 98 94 104 13 arch/arm/kernel/ptrace.c:608 (set (reg/i:SI 0 r0)
        (reg/v:SI 139 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 104 98 0 13 arch/arm/kernel/ptrace.c:608 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 13 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 27.
deleting insn with uid = 27.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 98.
deleting insn with uid = 98.
ending the processing of deferred insns

;; Function clear_ptrace_hw_breakpoint (clear_ptrace_hw_breakpoint)[0:1551]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (ab,sibcall)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


clear_ptrace_hw_breakpoint

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 144{130d,14u,0e} in 5{4 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 9 to worklist
Finished finding needed instructions:
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 7 sets: 2 


try_optimize_cfg iteration 1



clear_ptrace_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} 
;;    total ref usage 144{130d,14u,0e} in 5{4 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:406 (set (reg/v/f:SI 133 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg/f:SI 134)
        (plus:SI (reg/v/f:SI 133 [ tsk ])
            (const_int 796 [0x31c]))) 4 {*arm_addsi3} (nil))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 134)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:407 discrim 1 (set (reg:SI 1 r1)
        (const_int 128 [0x80])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 9 8 0 2 arch/arm/kernel/ptrace.c:407 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function vfp_get (vfp_get)[0:1561]


18 basic blocks, 25 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  15 [50.0%]  3 [50.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [50.0%]  (fallthru) 17 [50.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [85.0%]  (fallthru) 6 [15.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2125, maybe hot.
Predecessors:  4 [85.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 375, maybe hot.
Predecessors:  4 [15.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [50.0%]  7 [50.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 187, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 2313, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  15 9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 550, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [0.2%]  (fallthru) 17 [99.8%] 

Invalid sum of incoming frequencies 2313, should be 550

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 1.
Predecessors:  9 [0.2%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors: 


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 930, maybe hot.
Predecessors:  17 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  12 [85.0%]  (fallthru) 13 [15.0%] 

Invalid sum of incoming frequencies 1250, should be 930

Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 790, maybe hot.
Predecessors:  11 [85.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [100.0%]  (fallthru)


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 139, maybe hot.
Predecessors:  11 [15.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  14 [50.0%]  (fallthru) 15 [50.0%] 


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 2888, maybe hot.
Predecessors:  6 [50.0%]  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 258, should be 2888

Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 6320, maybe hot.
Predecessors:  2 [50.0%]  13 [50.0%]  8 17 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  16 [100.0%]  (fallthru)


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 9998, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 14 [100.0%]  (fallthru) 12 [100.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 17 , prev 16, next 1, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  3 [50.0%]  9 [99.8%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  11 [50.0%]  15 [50.0%]  (fallthru)

Invalid sum of incoming frequencies 3049, should be 2500

Basic block 1 , prev 17, loop_depth 0, count 0, freq 9998, maybe hot.
Predecessors:  16 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 31 (  1.7)


vfp_get

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,11u} r1={12d,5u} r2={11d,5u} r3={7d,1u} r11={1d,17u} r12={7d} r13={1d,23u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={17d,9u} r25={1d,17u} r26={1d,18u,2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,3u} r140={3d,1u} r141={1d,1u} r142={1d,1u} r144={2d,8u} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r162={1d,1u} 
;;    total ref usage 937{773d,162u,2e} in 75{69 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 15 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 17 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 14 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 7 )->[8]->( 15 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[9]->( 10 17 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 17 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[12]->( 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 13 8 17 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 15 14 12 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 9 )->[17]->( 11 15 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 18 to worklist
  Adding insn 25 to worklist
  Adding insn 33 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 54 to worklist
  Adding insn 57 to worklist
  Adding insn 63 to worklist
  Adding insn 72 to worklist
  Adding insn 80 to worklist
  Adding insn 93 to worklist
  Adding insn 90 to worklist
  Adding insn 123 to worklist
  Adding insn 112 to worklist
Finished finding needed instructions:
processing block 16 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 117 to worklist
  Adding insn 104 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 101 to worklist
processing block 10 lr out =  13 [sp] 25 [sfp] 26 [afp]
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 82 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
  Adding insn 96 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146 147
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 111 to worklist
  Adding insn 110 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 56 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 51 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
  Adding insn 48 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 17 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 25 count 34 (  1.9)
;; Following path with 31 sets: 2 3 4 6 7 
;; Following path with 31 sets: 2 3 4 5 
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 31.
deferring rescan insn with uid = 32.
;; Following path with 13 sets: 8 9 10 
;; Following path with 20 sets: 17 11 13 
;; Following path with 21 sets: 17 11 12 
deferring rescan insn with uid = 77.
deferring rescan insn with uid = 78.
deferring rescan insn with uid = 79.
;; Following path with 1 sets: 14 
;; Following path with 1 sets: 15 
;; Following path with 3 sets: 16 
deferring rescan insn with uid = 117.


try_optimize_cfg iteration 1



vfp_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,11u} r1={12d,5u} r2={11d,5u} r3={7d,1u} r11={1d,17u} r12={7d} r13={1d,23u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={17d,9u} r25={1d,17u} r26={1d,18u,2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r134={2d,3u} r135={1d,2u} r136={1d,1u} r137={2d,7u} r138={1d,2u} r139={1d,3u} r140={3d,1u} r141={1d,1u} r142={1d,1u} r144={2d,8u} r145={2d,5u} r146={2d,5u} r147={2d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r162={1d,1u} 
;;    total ref usage 937{773d,162u,2e} in 75{69 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 142 144 145 146 147
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 142 144 145 146 147
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 142 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (nil))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:661 (set (reg/v:SI 144 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:661 (set (reg/v:SI 145 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 146 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:661 (set (reg/v/f:SI 147 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:663 (set (reg/v/f:SI 139 [ thread ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 142 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:668 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ thread ])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 2 arch/arm/kernel/ptrace.c:668 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_sync_hwstate") [flags 0x41] <function_decl 0x10a83b00 vfp_sync_hwstate>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 14 13 15 2 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 15 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  15 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 3 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146
;; lr  def 	 24 [cc] 137 138 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 137 138 148
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 include/linux/regset.h:229 (set (reg/v:SI 137 [ copy ])
        (minus:SI (const_int 256 [0x100])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 21 20 22 4 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 137 [ copy ])
                (umin:SI (reg/v:SI 137 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 22 21 23 4 include/linux/regset.h:230 (set (reg/f:SI 148)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 432 [0x1b0]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 include/linux/regset.h:230 (set (reg/v/f:SI 138 [ data ])
        (plus:SI (reg/f:SI 148)
            (reg/v:SI 144 [ pos ]))) 4 {*arm_addsi3} (nil))

(insn 24 23 25 4 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 4 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  6 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 149 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 146 149 150 151
;; live  kill	 14 [lr]

;; Pred edge  4 [85.0%]  (fallthru)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 5 include/linux/regset.h:232 (set (reg/f:SI 149 [ kbuf ])
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 include/linux/regset.h:232 (set (reg/f:SI 150 [ data ])
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 include/linux/regset.h:232 (set (reg:SI 151 [ copy ])
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 35 5 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 35 33 38 5 include/linux/regset.h:233 (set (reg/v/f:SI 146 [ kbuf ])
        (plus:SI (reg/v/f:SI 146 [ kbuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 5 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 144 145 146 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 136
;; live  kill	 14 [lr]

;; Pred edge  4 [15.0%] 
(code_label 38 35 39 6 71 "" [1 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 6 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 6 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 6 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 44 43 45 6 include/linux/regset.h:234 (set (reg:SI 136 [ D.27683 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 6 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.27683 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 46 45 47 6 include/linux/regset.h:234 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 14 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147


;; Succ edge  14 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 147
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 147
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 include/linux/regset.h:237 (set (reg/v/f:SI 147 [ ubuf ])
        (plus:SI (reg/v/f:SI 147 [ ubuf ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 144 145
;; lr  def 	 24 [cc] 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 144 145 146 147
;; live  gen 	 24 [cc] 144 145
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 49 48 50 8 72 "" [0 uses])

(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 include/linux/regset.h:238 (set (reg/v:SI 144 [ pos ])
        (plus:SI (reg/v:SI 144 [ pos ])
            (reg/v:SI 137 [ copy ]))) 4 {*arm_addsi3} (nil))

(insn 52 51 53 8 include/linux/regset.h:239 (set (reg/v:SI 145 [ count ])
        (minus:SI (reg/v:SI 145 [ count ])
            (reg/v:SI 137 [ copy ]))) 28 {*arm_subsi3_insn} (nil))

(insn 53 52 54 8 include/linux/regset.h:279 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 8 include/linux/regset.h:279 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 8 -> ( 15 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  15
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
(note 55 54 56 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 9 include/linux/regset.h:281 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 57 56 58 9 include/linux/regset.h:281 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9978 [0x26fa])
        (nil)))
;; End of basic block 9 -> ( 10 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  10 [0.2%]  (fallthru)
;; Succ edge  17 [99.8%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 153 154
;; live  kill	 14 [lr]

;; Pred edge  9 [0.2%]  (fallthru)
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 10 include/linux/regset.h:281 discrim 1 (set (reg/f:SI 153)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 10 include/linux/regset.h:281 discrim 1 (set (reg:SI 154)
        (const_int 281 [0x119])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 10 include/linux/regset.h:281 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x116b8180>)
        (nil)))

(insn 62 61 63 10 include/linux/regset.h:281 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 281 [0x119])
        (nil)))

(call_insn 63 62 109 10 include/linux/regset.h:281 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 17) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146
;; lr  def 	 24 [cc] 134 135 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 134 135 155 156
;; live  kill	 24 [cc]

;; Pred edge  17 [50.0%] 
(code_label 109 63 65 11 76 "" [1 uses])

(note 65 109 66 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 11 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 260 [0x104])
            (reg/v:SI 144 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 67 66 68 11 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 145 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 68 67 69 11 include/linux/regset.h:230 (set (reg/f:SI 155)
        (plus:SI (reg/v/f:SI 139 [ thread ])
            (const_int 692 [0x2b4]))) 4 {*arm_addsi3} (nil))

(insn 69 68 70 11 include/linux/regset.h:230 (set (reg:SI 156)
        (plus:SI (reg/v:SI 144 [ pos ])
            (const_int -256 [0xffffffffffffff00]))) 4 {*arm_addsi3} (nil))

(insn 70 69 71 11 include/linux/regset.h:230 (set (reg/v/f:SI 135 [ data ])
        (plus:SI (reg/f:SI 155)
            (reg:SI 156))) 4 {*arm_addsi3} (nil))

(insn 71 70 72 11 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 146 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 11 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1499 [0x5db])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146 147


;; Succ edge  12 [85.0%]  (fallthru)
;; Succ edge  13 [15.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 157 158 159
;; live  kill	 14 [lr]

;; Pred edge  11 [85.0%]  (fallthru)
(note 73 72 74 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 12 include/linux/regset.h:232 (set (reg/f:SI 157 [ kbuf ])
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 12 include/linux/regset.h:232 (set (reg/f:SI 158 [ data ])
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 12 include/linux/regset.h:232 (set (reg:SI 159 [ copy ])
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 12 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 146 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 12 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 12 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 80 79 82 12 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 82 80 85 12 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 147
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  11 [15.0%] 
(code_label 85 82 86 13 74 "" [1 uses])

(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 13 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 147 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 13 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 13 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 90 89 91 13 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 91 90 92 13 include/linux/regset.h:234 (set (reg:SI 133 [ D.27733 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 13 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27733 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 94 13 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 6 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  6 [50.0%] 
;; Pred edge  13 [50.0%]  (fallthru)
(code_label 94 93 95 14 73 "" [1 uses])

(note 95 94 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 99 14 include/linux/regset.h:235 (set (reg/v:SI 140 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 2 13 8 17) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  13 [50.0%] 
;; Pred edge  8
;; Pred edge  17 [50.0%]  (fallthru)
(code_label 99 96 100 15 69 "" [3 uses])

(note 100 99 101 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 15 include/linux/regset.h:241 (set (reg/v:SI 140 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 14 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0] 141
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 102 101 103 16 75 "" [0 uses])

(note 103 102 104 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 117 16 arch/arm/kernel/ptrace.c:687 (set (reg:SI 141 [ <result> ])
        (reg/v:SI 140 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 117 104 123 16 arch/arm/kernel/ptrace.c:687 (set (reg/i:SI 0 r0)
        (reg/v:SI 140 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 123 117 107 16 arch/arm/kernel/ptrace.c:687 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3 9) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  gen 	 24 [cc] 162
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  9 [99.8%] 
(code_label 107 123 108 17 70 "" [2 uses])

(note 108 107 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 111 17 include/linux/regset.h:227 discrim 1 (set (reg:SI 162)
        (const_int 259 [0x103])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 17 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ pos ])
            (reg:SI 162))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 112 111 0 17 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 17 -> ( 11 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 144 145 146 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 146 147


;; Succ edge  11 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 31.
deleting insn with uid = 31.
rescanning insn with uid = 32.
deleting insn with uid = 32.
rescanning insn with uid = 77.
deleting insn with uid = 77.
rescanning insn with uid = 78.
deleting insn with uid = 78.
rescanning insn with uid = 79.
deleting insn with uid = 79.
rescanning insn with uid = 117.
deleting insn with uid = 117.
ending the processing of deferred insns

;; Function fpa_get (fpa_get)[0:1559]


10 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [39.0%]  3 [61.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [61.0%]  (fallthru) 8 [39.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3721, maybe hot.
Predecessors:  3 [61.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [99.3%]  (fallthru) 6 [0.7%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3694, maybe hot.
Predecessors:  4 [99.3%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 27, maybe hot.
Predecessors:  4 [0.7%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 6295, maybe hot.
Predecessors:  2 [39.0%]  3 [39.0%]  6 [61.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 17 (  1.7)


fpa_get

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 354{274d,78u,2e} in 36{34 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 7 5 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 16 to worklist
  Adding insn 23 to worklist
  Adding insn 31 to worklist
  Adding insn 44 to worklist
  Adding insn 41 to worklist
  Adding insn 64 to worklist
Finished finding needed instructions:
processing block 9 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 58 to worklist
  Adding insn 54 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 51 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 33 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 46 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
  Adding insn 15 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)
;; Following path with 27 sets: 2 3 4 6 7 
;; Following path with 27 sets: 2 3 4 5 
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 30.
;; Following path with 1 sets: 8 
;; Following path with 3 sets: 9 
deferring rescan insn with uid = 58.


try_optimize_cfg iteration 1



fpa_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 354{274d,78u,2e} in 36{34 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (nil))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:614 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:614 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:614 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:616 (set (reg/f:SI 137 [ D.27170 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144


;; Succ edge  8 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 115 [0x73]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 145
;; live  kill	 24 [cc]

;; Pred edge  3 [61.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 116 [0x74])
            (reg/v:SI 141 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 19 18 20 4 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 20 19 21 4 include/linux/regset.h:230 (set (reg/f:SI 145)
        (plus:SI (reg/f:SI 137 [ D.27170 ])
            (const_int 288 [0x120]))) 4 {*arm_addsi3} (nil))

(insn 21 20 22 4 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg/f:SI 145)
            (reg/v:SI 141 [ pos ]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 4 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144


;; Succ edge  5 [99.3%]  (fallthru)
;; Succ edge  6 [0.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 146 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 146 147 148
;; live  kill	 14 [lr]

;; Pred edge  4 [99.3%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 include/linux/regset.h:232 (set (reg/f:SI 146 [ kbuf ])
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 include/linux/regset.h:232 (set (reg/f:SI 147 [ data ])
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/regset.h:232 (set (reg:SI 148 [ copy ])
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 33 5 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 33 31 36 5 include/linux/regset.h:241 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  4 [0.7%] 
(code_label 36 33 37 6 82 "" [1 uses])

(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 6 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 42 6 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 43 6 include/linux/regset.h:234 (set (reg:SI 133 [ D.27758 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 6 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27758 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 45 6 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  6 [39.0%]  (fallthru)
(note 45 44 46 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 49 7 include/linux/regset.h:235 (set (reg:SI 135 [ D.27754 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  6 [61.0%] 
(code_label 49 46 50 8 81 "" [3 uses])

(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 8 include/linux/regset.h:225 (set (reg:SI 135 [ D.27754 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 138
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 52 51 53 9 83 "" [0 uses])

(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 58 9 arch/arm/kernel/ptrace.c:618 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27754 ])) 167 {*arm_movsi_insn} (nil))

(insn 58 54 64 9 arch/arm/kernel/ptrace.c:618 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.27754 ])) 167 {*arm_movsi_insn} (nil))

(insn 64 58 0 9 arch/arm/kernel/ptrace.c:618 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 58.
deleting insn with uid = 58.
ending the processing of deferred insns

;; Function gpr_get (gpr_get)[0:1557]


10 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [39.0%]  3 [61.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [61.0%]  (fallthru) 8 [39.0%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 3721, maybe hot.
Predecessors:  3 [61.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [99.3%]  (fallthru) 6 [0.7%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3694, maybe hot.
Predecessors:  4 [99.3%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 27, maybe hot.
Predecessors:  4 [0.7%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 6295, maybe hot.
Predecessors:  2 [39.0%]  3 [39.0%]  6 [61.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 17 (  1.7)


gpr_get

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u,1d} r138={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 357{275d,79u,3e} in 37{35 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 7 5 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 16 to worklist
  Adding insn 24 to worklist
  Adding insn 32 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 65 to worklist
Finished finding needed instructions:
processing block 9 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 59 to worklist
  Adding insn 55 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 52 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
  Adding insn 47 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
  Adding insn 15 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)
;; Following path with 28 sets: 2 3 4 6 7 
;; Following path with 28 sets: 2 3 4 5 
deferring rescan insn with uid = 29.
deferring rescan insn with uid = 30.
deferring rescan insn with uid = 31.
;; Following path with 1 sets: 8 
;; Following path with 3 sets: 9 
deferring rescan insn with uid = 59.


try_optimize_cfg iteration 1



gpr_get

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,2u} r2={5d,3u} r3={3d,1u} r11={1d,9u} r12={3d} r13={1d,11u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,4u} r25={1d,9u} r26={1d,10u,2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,3u} r135={3d,1u} r136={1d,2u} r137={1d,1u,1d} r138={1d,1u} r139={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 357{275d,79u,3e} in 37{35 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 139 141 142 143 144
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 139 141 142 143 144
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 4 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 139 [ target ])
        (reg:SI 0 r0 [ target ])) 167 {*arm_movsi_insn} (nil))

(insn 4 2 5 2 arch/arm/kernel/ptrace.c:581 (set (reg/v:SI 141 [ pos ])
        (reg:SI 2 r2 [ pos ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:581 (set (reg/v:SI 142 [ count ])
        (reg:SI 3 r3 [ count ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 143 [ kbuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 kbuf+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/ptrace.c:581 (set (reg/v/f:SI 144 [ ubuf ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 8 [0x8])) [0 ubuf+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/kernel/ptrace.c:582 (set (reg/f:SI 137 [ D.27137 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 139 [ target ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/regset.h:224 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 include/linux/regset.h:224 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144


;; Succ edge  8 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 include/linux/regset.h:227 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ pos ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 include/linux/regset.h:227 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 141 142 143 144


;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143
;; lr  def 	 24 [cc] 134 136 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 141 142 143 144
;; live  gen 	 24 [cc] 134 136 145 146
;; live  kill	 24 [cc]

;; Pred edge  3 [61.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 include/linux/regset.h:229 (set (reg/v:SI 134 [ copy ])
        (minus:SI (const_int 72 [0x48])
            (reg/v:SI 141 [ pos ]))) 28 {*arm_subsi3_insn} (nil))

(insn 19 18 20 4 include/linux/regset.h:229 (parallel [
            (set (reg/v:SI 134 [ copy ])
                (umin:SI (reg/v:SI 134 [ copy ])
                    (reg/v:SI 142 [ count ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (nil))

(insn 20 19 21 4 include/linux/regset.h:230 (set (reg/f:SI 146)
        (plus:SI (reg/f:SI 137 [ D.27137 ])
            (const_int 8064 [0x1f80]))) 4 {*arm_addsi3} (nil))

(insn 21 20 22 4 include/linux/regset.h:230 (set (reg/f:SI 145)
        (plus:SI (reg/f:SI 146)
            (const_int 48 [0x30]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 137 [ D.27137 ])
            (const_int 8112 [0x1fb0]))
        (nil)))

(insn 22 21 23 4 include/linux/regset.h:230 (set (reg/v/f:SI 136 [ data ])
        (plus:SI (reg/f:SI 145)
            (reg/v:SI 141 [ pos ]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 include/linux/regset.h:231 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ kbuf ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 include/linux/regset.h:231 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 73 [0x49])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143 144


;; Succ edge  5 [99.3%]  (fallthru)
;; Succ edge  6 [0.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 147 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 147 148 149
;; live  kill	 14 [lr]

;; Pred edge  4 [99.3%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/linux/regset.h:232 (set (reg/f:SI 147 [ kbuf ])
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/regset.h:232 (set (reg/f:SI 148 [ data ])
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 include/linux/regset.h:232 (set (reg:SI 149 [ copy ])
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 include/linux/regset.h:232 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ kbuf ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 include/linux/regset.h:232 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 include/linux/regset.h:232 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 32 31 34 5 include/linux/regset.h:232 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 32 37 5 include/linux/regset.h:241 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  4 [0.7%] 
(code_label 37 34 38 6 87 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 include/linux/regset.h:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ ubuf ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 include/linux/regset.h:234 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 include/linux/regset.h:234 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ copy ])) 167 {*arm_movsi_insn} (nil))

(call_insn 42 41 43 6 include/linux/regset.h:234 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__copy_to_user") [flags 0x41] <function_decl 0x113b1000 __copy_to_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 43 42 44 6 include/linux/regset.h:234 (set (reg:SI 133 [ D.27783 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 6 include/linux/regset.h:234 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.27783 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 46 6 include/linux/regset.h:234 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  6 [39.0%]  (fallthru)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 50 7 include/linux/regset.h:235 (set (reg:SI 135 [ D.27779 ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [39.0%] 
;; Pred edge  6 [61.0%] 
(code_label 50 47 51 8 86 "" [3 uses])

(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 include/linux/regset.h:225 (set (reg:SI 135 [ D.27779 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 138
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 53 52 54 9 88 "" [0 uses])

(note 54 53 55 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 59 9 arch/arm/kernel/ptrace.c:587 (set (reg:SI 138 [ <result> ])
        (reg:SI 135 [ D.27779 ])) 167 {*arm_movsi_insn} (nil))

(insn 59 55 65 9 arch/arm/kernel/ptrace.c:587 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.27779 ])) 167 {*arm_movsi_insn} (nil))

(insn 65 59 0 9 arch/arm/kernel/ptrace.c:587 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 29.
deleting insn with uid = 29.
rescanning insn with uid = 30.
deleting insn with uid = 30.
rescanning insn with uid = 31.
deleting insn with uid = 31.
rescanning insn with uid = 59.
deleting insn with uid = 59.
ending the processing of deferred insns

;; Function ptrace_hbp_create (ptrace_hbp_create)[0:1554]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


ptrace_hbp_create

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={5d,3u} r2={4d,1u} r3={4d,1u} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,16u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={2d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={2d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={2d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 340{278d,62u,0e} in 46{44 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 58 to worklist
  Adding insn 46 to worklist
  Adding insn 39 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 52 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 50 sets: 2 
deferring rescan insn with uid = 20.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 40.
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 52.
deferring rescan insn with uid = 52.


try_optimize_cfg iteration 1



ptrace_hbp_create

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={5d,3u} r2={4d,1u} r3={4d,1u} r11={1d,2u} r12={3d} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,16u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={2d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={2d,2u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={2d,2u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 340{278d,62u,0e} in 46{44 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:449 (set (reg/v/f:SI 135 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:449 (set (reg/v:SI 136 [ type ])
        (reg:SI 1 r1 [ type ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg/f:SI 137)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 8 7 9 2 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 9 8 10 2 include/linux/hw_breakpoint.h:40 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 include/linux/hw_breakpoint.h:40 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bba080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 11 10 12 2 include/linux/hw_breakpoint.h:42 (set (reg:SI 138)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 include/linux/hw_breakpoint.h:42 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8])) [0 attr.type+0 S4 A64])
        (reg:SI 138)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 include/linux/hw_breakpoint.h:43 (set (reg:SI 139)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 include/linux/hw_breakpoint.h:43 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -68 [0xffffffffffffffbc])) [0 attr.size+0 S4 A32])
        (reg:SI 139)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 include/linux/hw_breakpoint.h:48 (set (reg:SI 141 [+40 ])
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 16 15 17 2 include/linux/hw_breakpoint.h:48 (set (reg:QI 140 [+40 ])
        (subreg:QI (reg:SI 141 [+40 ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 17 16 18 2 include/linux/hw_breakpoint.h:48 (set (reg:SI 143 [+40 ])
        (subreg:SI (reg:QI 140 [+40 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 include/linux/hw_breakpoint.h:48 (set (reg:SI 142)
        (ior:SI (reg:SI 143 [+40 ])
            (const_int 4 [0x4]))) 89 {*arm_iorsi3} (nil))

(insn 19 18 20 2 include/linux/hw_breakpoint.h:48 (set (reg:QI 140 [+40 ])
        (subreg:QI (reg:SI 142) 0)) 178 {*arm_movqi_insn} (nil))

(insn 20 19 21 2 include/linux/hw_breakpoint.h:48 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (subreg:QI (reg:SI 142) 0)) 178 {*arm_movqi_insn} (nil))

(insn 21 20 22 2 include/linux/hw_breakpoint.h:49 (set (reg:DI 144)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(insn 22 21 23 2 include/linux/hw_breakpoint.h:49 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -56 [0xffffffffffffffc8])) [0 attr.D.23422.sample_period+0 S8 A64])
        (reg:DI 144)) 163 {*arm_movdi} (nil))

(insn 23 22 24 2 include/linux/hw_breakpoint.h:55 (set (reg:SI 146 [+40 ])
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 24 23 25 2 include/linux/hw_breakpoint.h:55 (set (reg:QI 145 [+40 ])
        (subreg:QI (reg:SI 146 [+40 ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 25 24 26 2 include/linux/hw_breakpoint.h:55 (set (reg:SI 148 [+40 ])
        (subreg:SI (reg:QI 145 [+40 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 2 include/linux/hw_breakpoint.h:55 (set (reg:SI 147)
        (ior:SI (reg:SI 148 [+40 ])
            (const_int 32 [0x20]))) 89 {*arm_iorsi3} (nil))

(insn 27 26 28 2 include/linux/hw_breakpoint.h:55 (set (reg:QI 145 [+40 ])
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (nil))

(insn 28 27 29 2 include/linux/hw_breakpoint.h:55 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (nil))

(insn 29 28 30 2 arch/arm/kernel/ptrace.c:455 (set (reg:DI 149)
        (const_int 0 [0x0])) 163 {*arm_movdi} (nil))

(insn 30 29 31 2 arch/arm/kernel/ptrace.c:455 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23452.bp_addr+0 S8 A64])
        (reg:DI 149)) 163 {*arm_movdi} (nil))

(insn 31 30 32 2 arch/arm/kernel/ptrace.c:456 (set (reg:DI 150)
        (const_int 4 [0x4])) 163 {*arm_movdi} (nil))

(insn 32 31 33 2 arch/arm/kernel/ptrace.c:456 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 150)) 163 {*arm_movdi} (nil))

(insn 33 32 34 2 arch/arm/kernel/ptrace.c:457 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 attr.bp_type+0 S4 A32])
        (reg/v:SI 136 [ type ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 2 arch/arm/kernel/ptrace.c:458 (set (reg:SI 152 [+40 ])
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 35 34 36 2 arch/arm/kernel/ptrace.c:458 (set (reg:QI 151 [+40 ])
        (subreg:QI (reg:SI 152 [+40 ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 36 35 37 2 arch/arm/kernel/ptrace.c:458 (set (reg:SI 154 [+40 ])
        (subreg:SI (reg:QI 151 [+40 ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 2 arch/arm/kernel/ptrace.c:458 (set (reg:SI 153)
        (ior:SI (reg:SI 154 [+40 ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn 38 37 39 2 arch/arm/kernel/ptrace.c:458 (set (reg:QI 151 [+40 ])
        (subreg:QI (reg:SI 153) 0)) 178 {*arm_movqi_insn} (nil))

(insn 39 38 40 2 arch/arm/kernel/ptrace.c:458 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -32 [0xffffffffffffffe0])) [0+40 S1 A64])
        (subreg:QI (reg:SI 153) 0)) 178 {*arm_movqi_insn} (nil))

(insn 40 39 41 2 arch/arm/kernel/ptrace.c:460 (set (reg/f:SI 155)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 41 40 42 2 arch/arm/kernel/ptrace.c:460 (set (reg/f:SI 156)
        (symbol_ref:SI ("ptrace_hbptriggered") [flags 0x3] <function_decl 0x1155b780 ptrace_hbptriggered>)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 0 r0)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 43 42 44 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 1 r1)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("ptrace_hbptriggered") [flags 0x3] <function_decl 0x1155b780 ptrace_hbptriggered>)
        (nil)))

(insn 44 43 45 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 2 arch/arm/kernel/ptrace.c:460 (set (reg:SI 3 r3)
        (reg/v/f:SI 135 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 47 2 arch/arm/kernel/ptrace.c:460 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524700 register_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 47 46 48 2 arch/arm/kernel/ptrace.c:460 (set (reg/f:SI 133 [ D.27011 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 48 47 52 2 arch/arm/kernel/ptrace.c:462 (set (reg/f:SI 134 [ <result> ])
        (reg/f:SI 133 [ D.27011 ])) 167 {*arm_movsi_insn} (nil))

(insn 52 48 58 2 arch/arm/kernel/ptrace.c:462 (set (reg/i:SI 0 r0)
        (reg/i:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 58 52 0 2 arch/arm/kernel/ptrace.c:462 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 20.
deleting insn with uid = 20.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 39.
deleting insn with uid = 39.
rescanning insn with uid = 40.
deleting insn with uid = 40.
rescanning insn with uid = 42.
deleting insn with uid = 42.
rescanning insn with uid = 52.
deleting insn with uid = 52.
ending the processing of deferred insns

;; Function arch_ptrace (arch_ptrace)[0:1564]


68 basic blocks, 105 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  64 [7.7%]  3 [7.7%]  8 [7.7%]  9 [7.7%]  11 [7.7%]  13 [7.7%]  15 [7.7%]  17 [7.7%]  18 [7.7%]  19 [7.7%]  21 [7.7%]  23 [7.7%]  43 [7.7%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  66 [50.0%]  4 [50.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 144, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [50.0%]  5 [50.0%]  (fallthru)

Invalid sum of incoming frequencies 385, should be 144

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 72, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 72, maybe hot.
Predecessors:  4 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [100.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 384, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)

Invalid sum of incoming frequencies 144, should be 384

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  66 [71.0%]  10 [29.0%]  (fallthru)


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 223, maybe hot.
Predecessors:  9 [29.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  66 [71.0%]  12 [29.0%]  (fallthru)


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 223, maybe hot.
Predecessors:  11 [29.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  66 [71.0%]  14 [29.0%]  (fallthru)


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 223, maybe hot.
Predecessors:  13 [29.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  66 [71.0%]  16 [29.0%]  (fallthru)


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 223, maybe hot.
Predecessors:  15 [29.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  66 [71.0%]  20 [29.0%]  (fallthru)


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 223, maybe hot.
Predecessors:  19 [29.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  66 [71.0%]  22 [29.0%]  (fallthru)


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 223, maybe hot.
Predecessors:  21 [29.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  65 [19.1%]  24 [80.9%]  (fallthru)


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 622, maybe hot.
Predecessors:  23 [80.9%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  25 [29.0%]  (fallthru) 26 [71.0%] 


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 180, maybe hot.
Predecessors:  24 [29.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  39 [100.0%]  (fallthru)


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  24 [71.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  28 [27.0%]  27 [73.0%]  (fallthru)


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 323, maybe hot.
Predecessors:  26 [73.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  29 [100.0%]  (fallthru)


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 119, maybe hot.
Predecessors:  26 [27.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  29 [100.0%]  (fallthru)


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  27 [100.0%]  (fallthru) 28 [100.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  30 [50.0%]  (fallthru) 31 [50.0%] 


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  29 [50.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  42 [100.0%]  (fallthru)


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  29 [50.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  32 [15.0%]  (fallthru) 33 [85.0%] 


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 33, maybe hot.
Predecessors:  31 [15.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  39 [100.0%]  (fallthru)


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 188, maybe hot.
Predecessors:  31 [85.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  35 [100.0%]  (fallthru)


Basic block 34 , prev 33, next 35, loop_depth 1, count 0, freq 1898, maybe hot.
Predecessors:  35 [91.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  35 [100.0%]  (fallthru,dfs_back)


Basic block 35 , prev 34, next 36, loop_depth 1, count 0, freq 2085, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 34 [100.0%]  (fallthru,dfs_back)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  34 [91.0%]  36 [9.0%]  (fallthru)


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 188, maybe hot.
Predecessors:  35 [9.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  37 [50.0%]  (fallthru) 38 [50.0%] 


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 94, maybe hot.
Predecessors:  36 [50.0%]  (fallthru)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  39 [100.0%]  (fallthru)


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 94, maybe hot.
Predecessors:  36 [50.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  39 [100.0%]  (fallthru)


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 401, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 32 [100.0%]  (fallthru) 37 [100.0%]  (fallthru) 38 [100.0%]  (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  40 [50.0%]  (fallthru) 41 [50.0%] 


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 201, maybe hot.
Predecessors:  39 [50.0%]  (fallthru)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  42 [100.0%]  (fallthru)


Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 201, maybe hot.
Predecessors:  39 [50.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  42 [100.0%]  (fallthru)


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 622, maybe hot.
Predecessors:  30 [100.0%]  (fallthru) 41 [100.0%]  (fallthru) 40 [100.0%]  (fallthru)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  65 [19.1%]  44 [80.9%]  (fallthru)


Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 622, maybe hot.
Predecessors:  43 [80.9%]  (fallthru)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  45 [50.0%]  (fallthru) 46 [50.0%] 


Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 311, maybe hot.
Predecessors:  44 [50.0%]  (fallthru)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  63 [100.0%]  (fallthru)


Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 311, maybe hot.
Predecessors:  44 [50.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  48 [27.0%]  47 [73.0%]  (fallthru)


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 227, maybe hot.
Predecessors:  46 [73.0%]  (fallthru)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  49 [100.0%]  (fallthru)


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 84, maybe hot.
Predecessors:  46 [27.0%] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  49 [100.0%]  (fallthru)


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 311, maybe hot.
Predecessors:  47 [100.0%]  (fallthru) 48 [100.0%]  (fallthru)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  62 [50.0%]  50 [50.0%]  (fallthru)


Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 155, maybe hot.
Predecessors:  49 [50.0%]  (fallthru)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  51 [50.0%]  (fallthru) 52 [50.0%] 


Basic block 51 , prev 50, next 52, loop_depth 0, count 0, freq 78, maybe hot.
Predecessors:  50 [50.0%]  (fallthru)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  63 [100.0%]  (fallthru)


Basic block 52 , prev 51, next 53, loop_depth 0, count 0, freq 78, maybe hot.
Predecessors:  50 [50.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  53 [6.7%]  (fallthru) 56 [93.3%] 


Basic block 53 , prev 52, next 54, loop_depth 0, count 0, freq 5.
Predecessors:  52 [6.7%]  (fallthru)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  54 [0.0%]  (fallthru) 55 [100.0%] 


Basic block 54 , prev 53, next 55, loop_depth 0, count 0, freq 0.
Predecessors:  53 [0.0%]  (fallthru)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  63 [100.0%]  (fallthru)


Basic block 55 , prev 54, next 56, loop_depth 0, count 0, freq 5.
Predecessors:  53 [100.0%] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  56 [100.0%]  (fallthru)


Basic block 56 , prev 55, next 57, loop_depth 0, count 0, freq 78, maybe hot.
Predecessors:  52 [93.3%]  55 [100.0%]  (fallthru)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  57 [71.0%]  (fallthru) 58 [29.0%] 


Basic block 57 , prev 56, next 58, loop_depth 0, count 0, freq 55, maybe hot.
Predecessors:  56 [71.0%]  (fallthru)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  61 [100.0%]  (fallthru)


Basic block 58 , prev 57, next 59, loop_depth 0, count 0, freq 23, maybe hot.
Predecessors:  56 [29.0%] 
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  63 [50.0%]  59 [50.0%]  (fallthru)


Basic block 59 , prev 58, next 60, loop_depth 0, count 0, freq 11, maybe hot.
Predecessors:  58 [50.0%]  (fallthru)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  62 [72.0%]  60 [28.0%]  (fallthru)


Basic block 60 , prev 59, next 61, loop_depth 0, count 0, freq 3.
Predecessors:  59 [28.0%]  (fallthru)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  61 [100.0%]  (fallthru)


Basic block 61 , prev 60, next 62, loop_depth 0, count 0, freq 58, maybe hot.
Predecessors:  57 [100.0%]  (fallthru) 60 [100.0%]  (fallthru)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  63 [100.0%]  (fallthru)


Basic block 62 , prev 61, next 63, loop_depth 0, count 0, freq 163, maybe hot.
Predecessors:  59 [72.0%]  49 [50.0%] 
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  63 [100.0%]  (fallthru)


Basic block 63 , prev 62, next 64, loop_depth 0, count 0, freq 622, maybe hot.
Predecessors:  62 [100.0%]  (fallthru) 45 [100.0%]  (fallthru) 61 [100.0%]  (fallthru) 51 [100.0%]  (fallthru) 58 [50.0%]  54 [100.0%]  (fallthru)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 64 , prev 63, next 65, loop_depth 0, count 0, freq 769, maybe hot.
Predecessors:  2 [7.7%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 65 , prev 64, next 66, loop_depth 0, count 0, freq 294, maybe hot.
Predecessors:  23 [19.1%]  43 [19.1%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 66 , prev 65, next 67, loop_depth 0, count 0, freq 3661, maybe hot.
Predecessors:  21 [71.0%]  19 [71.0%]  3 [50.0%]  9 [71.0%]  11 [71.0%]  13 [71.0%]  15 [71.0%] 
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  67 [100.0%]  (fallthru)


Basic block 67 , prev 66, next 1, loop_depth 0, count 0, freq 9997, maybe hot.
Predecessors:  66 [100.0%]  (fallthru) 65 [100.0%]  (fallthru) 7 [100.0%]  (fallthru) 64 [100.0%]  (fallthru) 63 [100.0%]  (fallthru) 42 [100.0%]  (fallthru) 22 [100.0%]  (fallthru) 20 [100.0%]  (fallthru) 18 [100.0%]  (fallthru) 17 [100.0%]  (fallthru) 16 [100.0%]  (fallthru) 14 [100.0%]  (fallthru) 12 [100.0%]  (fallthru) 10 [100.0%]  (fallthru) 8 [100.0%]  (fallthru)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 67, loop_depth 0, count 0, freq 9997, maybe hot.
Predecessors:  67 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 68 n_edges 105 count 133 (    2)


arch_ptrace

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={48d,46u} r1={33d,13u} r2={35d,15u} r3={28d,8u} r11={1d,67u} r12={24d} r13={1d,105u} r14={25d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={59d,28u} r25={1d,79u} r26={1d,66u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r133={1d,2u} r134={1d,2u} r135={2d,1u} r136={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={2d,3u} r142={1d,1u} r143={1d,2u} r144={1d,2u} r145={1d,3u} r146={2d,2u} r147={1d,3u} r148={2d,6u} r149={1d,2u} r150={1d,5u} r151={1d,1u} r152={4d,1u} r153={1d,2u} r154={1d,3u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,5u} r161={1d,1u} r162={1d} r163={1d,1u,1d} r164={1d,1u} r165={1d} r166={1d,1u,1d} r167={1d,1u} r168={1d} r169={1d,1u,1d} r170={1d,1u} r171={1d} r172={1d,1u,1d} r173={1d,1u} r174={1d} r175={1d,1u,1d} r176={1d,1u} r177={1d} r178={1d,1u,1d} r179={2d,1u} r180={1d,16u} r181={22d,2u} r182={1d,1u} r183={1d,1u} r184={5d,7u} r185={2d,3u} r186={1d,5u} r187={1d,1u} r188={1d,19u} r189={1d,2u} r190={1d,8u} r191={1d,4u} r192={1d,2u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r297={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={2d,2u} r334={1d,1u} r335={1d,1u} r337={1d,1u} r338={1d,1u} 
;;    total ref usage 3411{2694d,711u,6e} in 386{366 regular + 20 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 64 3 8 9 11 13 15 17 18 19 21 23 43 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 66 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 5 )->[7]->( 67 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[8]->( 67 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[9]->( 66 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( 67 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[11]->( 66 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[12]->( 67 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[13]->( 66 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 13 )->[14]->( 67 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[15]->( 66 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 15 )->[16]->( 67 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[17]->( 67 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[18]->( 67 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[19]->( 66 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 19 )->[20]->( 67 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[21]->( 66 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 21 )->[22]->( 67 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[23]->( 65 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 23 )->[24]->( 25 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 24 )->[25]->( 39 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 24 )->[26]->( 28 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 26 )->[27]->( 29 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 26 )->[28]->( 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 27 28 )->[29]->( 30 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 29 )->[30]->( 42 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 29 )->[31]->( 32 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 31 )->[32]->( 39 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 31 )->[33]->( 35 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 35 )->[34]->( 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 33 34 )->[35]->( 34 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 35 )->[36]->( 37 38 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 36 )->[37]->( 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 36 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 25 32 37 38 )->[39]->( 40 41 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 39 )->[40]->( 42 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 39 )->[41]->( 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 30 41 40 )->[42]->( 67 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[43]->( 65 44 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 43 )->[44]->( 45 46 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 44 )->[45]->( 63 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 44 )->[46]->( 48 47 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 46 )->[47]->( 49 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 46 )->[48]->( 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 47 48 )->[49]->( 62 50 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 49 )->[50]->( 51 52 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 50 )->[51]->( 63 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 50 )->[52]->( 53 56 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 52 )->[53]->( 54 55 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 53 )->[54]->( 63 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 53 )->[55]->( 56 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 52 55 )->[56]->( 57 58 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 56 )->[57]->( 61 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 56 )->[58]->( 63 59 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 58 )->[59]->( 62 60 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 59 )->[60]->( 61 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 57 60 )->[61]->( 63 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 59 49 )->[62]->( 63 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 62 45 61 51 58 54 )->[63]->( 67 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[64]->( 67 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 23 43 )->[65]->( 67 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 21 19 3 9 11 13 15 )->[66]->( 67 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 66 65 7 64 63 42 22 20 18 17 16 14 12 10 8 )->[67]->( 1 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 67 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 29 to worklist
  Adding insn 32 to worklist
  Adding insn 50 to worklist
  Adding insn 59 to worklist
  Adding insn 71 to worklist
  Adding insn 82 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 94 to worklist
  Adding insn 105 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 117 to worklist
  Adding insn 129 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 141 to worklist
  Adding insn 153 to worklist
  Adding insn 148 to worklist
  Adding insn 147 to worklist
  Adding insn 162 to worklist
  Adding insn 169 to worklist
  Adding insn 181 to worklist
  Adding insn 193 to worklist
  Adding insn 188 to worklist
  Adding insn 187 to worklist
  Adding insn 205 to worklist
  Adding insn 217 to worklist
  Adding insn 212 to worklist
  Adding insn 211 to worklist
  Adding insn 227 to worklist
  Adding insn 224 to worklist
  Adding insn 231 to worklist
  Adding insn 242 to worklist
  Adding insn 239 to worklist
  Adding insn 237 to worklist
  Adding insn 234 to worklist
  Adding insn 258 to worklist
  Adding insn 271 to worklist
  Adding insn 285 to worklist
  Adding insn 306 to worklist
  Adding insn 310 to worklist
  Adding insn 344 to worklist
  Adding insn 341 to worklist
  Adding insn 355 to worklist
  Adding insn 364 to worklist
  Adding insn 361 to worklist
  Adding insn 368 to worklist
  Adding insn 376 to worklist
  Adding insn 391 to worklist
  Adding insn 398 to worklist
  Adding insn 394 to worklist
  Adding insn 412 to worklist
  Adding insn 419 to worklist
  Adding insn 416 to worklist
  Adding insn 431 to worklist
  Adding insn 444 to worklist
  Adding insn 440 to worklist
  Adding insn 567 to worklist
  Adding insn 566 to worklist
  Adding insn 493 to worklist
  Adding insn 490 to worklist
  Adding insn 498 to worklist
  Adding insn 511 to worklist
  Adding insn 503 to worklist
  Adding insn 502 to worklist
  Adding insn 517 to worklist
  Adding insn 527 to worklist
  Adding insn 536 to worklist
  Adding insn 560 to worklist
Finished finding needed instructions:
processing block 67 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 554 to worklist
  Adding insn 550 to worklist
processing block 64 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 537 to worklist
  Adding insn 535 to worklist
  Adding insn 534 to worklist
  Adding insn 533 to worklist
  Adding insn 532 to worklist
processing block 66 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 547 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180
  Adding insn 34 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
  Adding insn 31 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 190
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 83 to worklist
  Adding insn 81 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 106 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 130 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 154 to worklist
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 150 to worklist
  Adding insn 149 to worklist
  Adding insn 146 to worklist
  Adding insn 145 to worklist
  Adding insn 144 to worklist
  Adding insn 143 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 138 to worklist
  Adding insn 137 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 163 to worklist
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 170 to worklist
  Adding insn 168 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 194 to worklist
  Adding insn 192 to worklist
  Adding insn 191 to worklist
  Adding insn 190 to worklist
  Adding insn 189 to worklist
  Adding insn 186 to worklist
  Adding insn 185 to worklist
  Adding insn 184 to worklist
  Adding insn 183 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 218 to worklist
  Adding insn 216 to worklist
  Adding insn 215 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 210 to worklist
  Adding insn 209 to worklist
  Adding insn 208 to worklist
  Adding insn 207 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
  Adding insn 204 to worklist
  Adding insn 203 to worklist
  Adding insn 202 to worklist
  Adding insn 201 to worklist
  Adding insn 200 to worklist
  Adding insn 199 to worklist
processing block 65 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 542 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 354 to worklist
processing block 40 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 346 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 351 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
  Adding insn 343 to worklist
  Adding insn 342 to worklist
  Adding insn 340 to worklist
  Adding insn 339 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
  Adding insn 252 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
  Adding insn 244 to worklist
  Adding insn 243 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
  Adding insn 238 to worklist
  Adding insn 236 to worklist
  Adding insn 235 to worklist
  Adding insn 233 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 273 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
  Adding insn 287 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
  Adding insn 300 to worklist
  Adding insn 299 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
  Adding insn 312 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
  Adding insn 336 to worklist
  Adding insn 335 to worklist
  Adding insn 334 to worklist
  Adding insn 333 to worklist
  Adding insn 332 to worklist
  Adding insn 331 to worklist
  Adding insn 330 to worklist
  Adding insn 329 to worklist
  Adding insn 328 to worklist
  Adding insn 327 to worklist
  Adding insn 326 to worklist
  Adding insn 325 to worklist
  Adding insn 324 to worklist
  Adding insn 323 to worklist
  Adding insn 322 to worklist
  Adding insn 321 to worklist
  Adding insn 320 to worklist
  Adding insn 319 to worklist
  Adding insn 318 to worklist
  Adding insn 317 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 180 185 188
  Adding insn 309 to worklist
  Adding insn 308 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
  Adding insn 305 to worklist
  Adding insn 304 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
  Adding insn 295 to worklist
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 292 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 160 180 188
  Adding insn 284 to worklist
  Adding insn 283 to worklist
  Adding insn 282 to worklist
  Adding insn 281 to worklist
  Adding insn 280 to worklist
  Adding insn 279 to worklist
  Adding insn 278 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 180 188
  Adding insn 270 to worklist
  Adding insn 269 to worklist
  Adding insn 268 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188
  Adding insn 265 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188
  Adding insn 260 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
  Adding insn 257 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
  Adding insn 230 to worklist
  Adding insn 229 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 190
  Adding insn 226 to worklist
  Adding insn 225 to worklist
  Adding insn 223 to worklist
processing block 63 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
  Adding insn 526 to worklist
processing block 45 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 370 to worklist
processing block 62 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 523 to worklist
processing block 51 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 400 to worklist
processing block 54 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 421 to worklist
processing block 61 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
  Adding insn 518 to worklist
  Adding insn 516 to worklist
  Adding insn 515 to worklist
  Adding insn 514 to worklist
processing block 57 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
  Adding insn 565 to worklist
  Adding insn 564 to worklist
processing block 60 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
  Adding insn 510 to worklist
  Adding insn 509 to worklist
  Adding insn 508 to worklist
  Adding insn 507 to worklist
  Adding insn 506 to worklist
  Adding insn 505 to worklist
  Adding insn 504 to worklist
  Adding insn 501 to worklist
  Adding insn 500 to worklist
processing block 59 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
  Adding insn 497 to worklist
  Adding insn 496 to worklist
  Adding insn 495 to worklist
processing block 58 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 181 184 188
  Adding insn 492 to worklist
  Adding insn 491 to worklist
  Adding insn 489 to worklist
  Adding insn 488 to worklist
  Adding insn 487 to worklist
  Adding insn 486 to worklist
  Adding insn 485 to worklist
  Adding insn 484 to worklist
  Adding insn 483 to worklist
  Adding insn 482 to worklist
  Adding insn 481 to worklist
  Adding insn 480 to worklist
  Adding insn 479 to worklist
  Adding insn 478 to worklist
  Adding insn 477 to worklist
  Adding insn 476 to worklist
  Adding insn 475 to worklist
  Adding insn 474 to worklist
  Adding insn 473 to worklist
  Adding insn 472 to worklist
  Adding insn 471 to worklist
  Adding insn 470 to worklist
  Adding insn 469 to worklist
  Adding insn 468 to worklist
  Adding insn 467 to worklist
  Adding insn 466 to worklist
  Adding insn 465 to worklist
  Adding insn 464 to worklist
  Adding insn 463 to worklist
  Adding insn 462 to worklist
  Adding insn 461 to worklist
  Adding insn 460 to worklist
  Adding insn 459 to worklist
  Adding insn 458 to worklist
  Adding insn 457 to worklist
  Adding insn 456 to worklist
  Adding insn 455 to worklist
  Adding insn 454 to worklist
  Adding insn 453 to worklist
  Adding insn 452 to worklist
processing block 56 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 184 188
  Adding insn 443 to worklist
  Adding insn 442 to worklist
  Adding insn 439 to worklist
  Adding insn 438 to worklist
  Adding insn 437 to worklist
  Adding insn 436 to worklist
  Adding insn 435 to worklist
  Adding insn 434 to worklist
processing block 55 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 184 188
  Adding insn 430 to worklist
  Adding insn 429 to worklist
  Adding insn 428 to worklist
  Adding insn 427 to worklist
  Adding insn 426 to worklist
processing block 53 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 184 188
  Adding insn 418 to worklist
  Adding insn 417 to worklist
  Adding insn 415 to worklist
  Adding insn 414 to worklist
processing block 52 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 184 188
  Adding insn 411 to worklist
  Adding insn 410 to worklist
  Adding insn 409 to worklist
  Adding insn 408 to worklist
  Adding insn 407 to worklist
  Adding insn 406 to worklist
  Adding insn 405 to worklist
processing block 50 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 150 184 188
  Adding insn 397 to worklist
  Adding insn 396 to worklist
  Adding insn 395 to worklist
  Adding insn 393 to worklist
processing block 49 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 180 184 188
  Adding insn 390 to worklist
  Adding insn 389 to worklist
  Adding insn 388 to worklist
processing block 48 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 184 188
  Adding insn 385 to worklist
  Adding insn 384 to worklist
processing block 47 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 184 188
  Adding insn 379 to worklist
  Adding insn 378 to worklist
processing block 46 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 184 188
  Adding insn 375 to worklist
processing block 44 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 184 188
  Adding insn 367 to worklist
  Adding insn 366 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 184 188 190
  Adding insn 363 to worklist
  Adding insn 362 to worklist
  Adding insn 360 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 184 188 189 190 191
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 68 n_edges 105 count 135 (    2)
;; Following path with 9 sets: 2 
;; Following path with 14 sets: 43 44 46 48 
deferring rescan insn with uid = 375.
;; Following path with 14 sets: 43 44 46 47 
deferring rescan insn with uid = 378.
deferring rescan insn with uid = 378.
;; Following path with 11 sets: 43 44 45 
deferring rescan insn with uid = 367.
deferring rescan insn with uid = 370.
;; Following path with 35 sets: 49 50 52 53 55 
deferring rescan insn with uid = 409.
deferring rescan insn with uid = 426.
deferring rescan insn with uid = 427.
deferring rescan insn with uid = 428.
deferring rescan insn with uid = 428.
deferring rescan insn with uid = 429.
deferring rescan insn with uid = 429.
deferring rescan insn with uid = 430.
deferring rescan insn with uid = 430.
deferring rescan insn with uid = 430.
deferring rescan insn with uid = 431.
;; Following path with 30 sets: 49 50 52 53 54 
;; Following path with 14 sets: 49 50 51 
;; Following path with 72 sets: 56 58 59 60 
deferring rescan insn with uid = 467.
deferring rescan insn with uid = 475.
deferring rescan insn with uid = 477.
;; Following path with 16 sets: 56 57 
deferring rescan insn with uid = 566.
;; Following path with 7 sets: 61 
;; Following path with 1 sets: 62 
;; Following path with 4 sets: 63 
;; Following path with 13 sets: 23 24 26 28 
deferring rescan insn with uid = 257.
;; Following path with 13 sets: 23 24 26 27 
deferring rescan insn with uid = 260.
deferring rescan insn with uid = 260.
;; Following path with 38 sets: 23 24 25 
deferring rescan insn with uid = 230.
deferring rescan insn with uid = 233.
deferring rescan insn with uid = 245.
deferring rescan insn with uid = 246.
;; Following path with 16 sets: 29 31 33 
deferring rescan insn with uid = 282.
deferring rescan insn with uid = 294.
deferring rescan insn with uid = 295.
;; Following path with 13 sets: 29 31 32 
deferring rescan insn with uid = 287.
;; Following path with 5 sets: 29 30 
;; Following path with 5 sets: 35 34 
;; Following path with 26 sets: 35 36 38 
deferring rescan insn with uid = 319.
deferring rescan insn with uid = 322.
deferring rescan insn with uid = 326.
deferring rescan insn with uid = 329.
deferring rescan insn with uid = 333.
;; Following path with 7 sets: 35 36 37 
;; Following path with 10 sets: 39 41 
deferring rescan insn with uid = 351.
;; Following path with 10 sets: 39 40 
;; Following path with 4 sets: 42 
;; Following path with 1 sets: 65 
;; Following path with 23 sets: 21 22 
deferring rescan insn with uid = 200.
deferring rescan insn with uid = 209.
deferring rescan insn with uid = 210.
deferring rescan insn with uid = 211.
deferring rescan insn with uid = 215.
;; Following path with 23 sets: 19 20 
deferring rescan insn with uid = 176.
deferring rescan insn with uid = 185.
deferring rescan insn with uid = 186.
deferring rescan insn with uid = 187.
deferring rescan insn with uid = 191.
;; Following path with 3 sets: 18 
;; Following path with 8 sets: 17 
;; Following path with 23 sets: 15 16 
deferring rescan insn with uid = 136.
deferring rescan insn with uid = 145.
deferring rescan insn with uid = 146.
deferring rescan insn with uid = 147.
deferring rescan insn with uid = 151.
;; Following path with 23 sets: 13 14 
deferring rescan insn with uid = 112.
deferring rescan insn with uid = 121.
deferring rescan insn with uid = 122.
deferring rescan insn with uid = 123.
deferring rescan insn with uid = 127.
;; Following path with 22 sets: 11 12 
deferring rescan insn with uid = 89.
deferring rescan insn with uid = 98.
deferring rescan insn with uid = 99.
deferring rescan insn with uid = 103.
;; Following path with 22 sets: 9 10 
deferring rescan insn with uid = 66.
deferring rescan insn with uid = 75.
deferring rescan insn with uid = 76.
deferring rescan insn with uid = 80.
;; Following path with 7 sets: 8 
;; Following path with 22 sets: 3 4 6 
;; Following path with 16 sets: 3 4 5 
deferring rescan insn with uid = 34.
;; Following path with 7 sets: 7 
;; Following path with 1 sets: 66 
;; Following path with 8 sets: 64 
;; Following path with 3 sets: 67 
deferring rescan insn with uid = 554.


try_optimize_cfg iteration 1



arch_ptrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={48d,46u} r1={33d,13u} r2={35d,15u} r3={28d,8u} r11={1d,67u} r12={24d} r13={1d,105u} r14={25d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={59d,28u} r25={1d,79u} r26={1d,66u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r133={1d,2u} r134={1d,2u} r135={2d,1u} r136={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={2d,3u} r142={1d,1u} r143={1d,2u} r144={1d,2u} r145={1d,3u} r146={2d,2u} r147={1d,3u} r148={2d,6u} r149={1d,2u} r150={1d,5u} r151={1d,1u} r152={4d,1u} r153={1d,2u} r154={1d,3u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,5u} r161={1d,1u} r162={1d} r163={1d,1u,1d} r164={1d,1u} r165={1d} r166={1d,1u,1d} r167={1d,1u} r168={1d} r169={1d,1u,1d} r170={1d,1u} r171={1d} r172={1d,1u,1d} r173={1d,1u} r174={1d} r175={1d,1u,1d} r176={1d,1u} r177={1d} r178={1d,1u,1d} r179={2d,1u} r180={1d,16u} r181={22d,2u} r182={1d,1u} r183={1d,1u} r184={5d,7u} r185={2d,3u} r186={1d,5u} r187={1d,1u} r188={1d,19u} r189={1d,2u} r190={1d,8u} r191={1d,4u} r192={1d,2u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r297={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={2d,2u} r334={1d,1u} r335={1d,1u} r337={1d,1u} r338={1d,1u} 
;;    total ref usage 3411{2694d,711u,6e} in 386{366 regular + 20 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 184
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 180 188 189 190 191 192
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 180 188 189 190 191 192
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/kernel/ptrace.c:790 (set (reg/v/f:SI 188 [ child ])
        (reg:SI 0 r0 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 189 [ request ])
        (reg:SI 1 r1 [ request ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 190 [ addr ])
        (reg:SI 2 r2 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/kernel/ptrace.c:790 (set (reg/v:SI 191 [ data ])
        (reg:SI 3 r3 [ data ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/kernel/ptrace.c:792 (set (reg/v/f:SI 180 [ datap ])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:794 (set (reg:SI 192)
        (plus:SI (reg/v:SI 189 [ request ])
            (const_int -3 [0xfffffffffffffffd]))) 4 {*arm_addsi3} (nil))

(jump_insn 11 10 15 2 arch/arm/kernel/ptrace.c:794 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 192)
                        (const_int 27 [0x1b]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 192)
                                (const_int 4 [0x4]))
                            (label_ref 12)) [0 S4 A32])
                    (label_ref 530)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 12))
        ]) 265 {arm_casesi_internal} (insn_list:REG_LABEL_TARGET 530 (nil)))
;; End of basic block 2 -> ( 64 3 8 9 11 13 15 17 18 19 21 23 43)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 184 188 189 190 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 189 190 191


;; Succ edge  64 [7.7%] 
;; Succ edge  3 [7.7%] 
;; Succ edge  8 [7.7%] 
;; Succ edge  9 [7.7%] 
;; Succ edge  11 [7.7%] 
;; Succ edge  13 [7.7%] 
;; Succ edge  15 [7.7%] 
;; Succ edge  17 [7.7%] 
;; Succ edge  18 [7.7%] 
;; Succ edge  19 [7.7%] 
;; Succ edge  21 [7.7%] 
;; Succ edge  23 [7.7%] 
;; Succ edge  43 [7.7%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc] 193 194 195 196 197 198 199 200 201
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 190
;; live  gen 	 24 [cc] 193 194 195 196 197 198 199 200 201
;; live  kill	

;; Pred edge  2 [7.7%] 
(code_label 15 11 16 3 96 "" [1 uses])

(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 193)
        (and:SI (reg/v:SI 190 [ addr ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 18 17 19 3 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 19 18 20 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 195)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 20 19 21 3 arch/arm/kernel/ptrace.c:258 (set (reg:QI 194)
        (subreg:QI (reg:SI 195) 0)) 178 {*arm_movqi_insn} (nil))

(insn 21 20 22 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 197)
        (const_int 295 [0x127])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (reg:SI 197))) 219 {*arm_cmpsi_insn} (nil))

(insn 23 22 24 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 198)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 24 23 25 3 arch/arm/kernel/ptrace.c:258 (set (reg:QI 196)
        (subreg:QI (reg:SI 198) 0)) 178 {*arm_movqi_insn} (nil))

(insn 25 24 26 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 199)
        (ior:SI (subreg:SI (reg:QI 194) 0)
            (subreg:SI (reg:QI 196) 0))) 89 {*arm_iorsi3} (nil))

(insn 26 25 27 3 arch/arm/kernel/ptrace.c:258 (set (reg:QI 200)
        (subreg:QI (reg:SI 199) 0)) 178 {*arm_movqi_insn} (nil))

(insn 27 26 28 3 arch/arm/kernel/ptrace.c:258 (set (reg:SI 201)
        (zero_extend:SI (reg:QI 200))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 28 27 29 3 arch/arm/kernel/ptrace.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 3 arch/arm/kernel/ptrace.c:258 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 66 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 190
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 190


;; Succ edge  66 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 arch/arm/kernel/ptrace.c:268 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 71 [0x47]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 4 arch/arm/kernel/ptrace.c:268 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; live  gen 	 179
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 37 5 arch/arm/kernel/ptrace.c:261 (set (reg/v:SI 179 [ tmp ])
        (reg:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190
;; lr  def 	 179 202 203 204 205 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; live  gen 	 179 202 203 204 205 206 207
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 37 34 38 6 110 "" [1 uses])

(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 6 arch/arm/kernel/ptrace.c:160 (set (reg/f:SI 202 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 203)
        (const_int 8112 [0x1fb0])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 204)
        (lshiftrt:SI (reg/v:SI 190 [ addr ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 42 41 43 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 205)
        (ashift:SI (reg:SI 204)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 43 42 44 6 arch/arm/kernel/ptrace.c:160 (set (reg:SI 206)
        (plus:SI (reg/f:SI 202 [ <variable>.stack ])
            (reg:SI 205))) 4 {*arm_addsi3} (nil))

(insn 44 43 45 6 arch/arm/kernel/ptrace.c:160 (set (reg/f:SI 207)
        (plus:SI (reg:SI 206)
            (reg:SI 203))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 6 arch/arm/kernel/ptrace.c:160 (set (reg/v:SI 179 [ tmp ])
        (mem/s/j:SI (reg/f:SI 207) [0 <variable>.uregs S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 179 180
;; live  gen 	 0 [r0] 2 [r2] 181
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 46 45 47 7 111 "" [0 uses])

(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 179 [ tmp ])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 arch/arm/kernel/ptrace.c:271 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 7 arch/arm/kernel/ptrace.c:271 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592343))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

(insn 51 50 54 7 arch/arm/kernel/ptrace.c:271 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 190 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 181
;; live  kill	 14 [lr]

;; Pred edge  2 [7.7%] 
(code_label 54 51 55 8 97 "" [1 uses])

(note 55 54 56 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 8 arch/arm/kernel/ptrace.c:800 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 8 arch/arm/kernel/ptrace.c:800 (set (reg:SI 1 r1)
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 8 arch/arm/kernel/ptrace.c:800 (set (reg:SI 2 r2)
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (nil))

(call_insn 59 58 60 8 arch/arm/kernel/ptrace.c:800 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_write_user") [flags 0x3] <function_decl 0x1155b480 ptrace_write_user>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 60 59 63 8 arch/arm/kernel/ptrace.c:800 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 24 [cc] 176 177 178 208 209 210
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 24 [cc] 176 177 178 208 209 210
;; live  kill	 24 [cc]

;; Pred edge  2 [7.7%] 
(code_label 63 60 64 9 98 "" [1 uses])

(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 178 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 9 include/linux/regset.h:338 (set (reg:SI 209)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 67 66 68 9 include/linux/regset.h:338 (set (reg:SI 208)
        (and:SI (reg:SI 209)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 68 67 69 9 include/linux/regset.h:338 (set (reg:SI 210 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 208)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 69 68 70 9 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 176 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 210 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 177 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 210 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 70 69 71 9 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 176 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 72 9 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 9 -> ( 66 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188


;; Succ edge  66 [71.0%] 
;; Succ edge  10 [29.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 211 212 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181 211 212 213
;; live  kill	 14 [lr]

;; Pred edge  9 [29.0%]  (fallthru)
(note 72 71 73 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 10 include/linux/regset.h:341 (set (reg/f:SI 211)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 10 include/linux/regset.h:341 (set (reg/f:SI 212)
        (plus:SI (reg/f:SI 211)
            (const_int 172 [0xac]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 75 74 76 10 include/linux/regset.h:341 (set (reg:SI 213)
        (reg/v:SI 176 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 76 75 77 10 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 176 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 10 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 10 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 10 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg/f:SI 212)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 80 79 81 10 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (reg/v:SI 176 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 81 80 82 10 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 82 81 83 10 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_get") [flags 0x3] <function_decl 0x1155be80 gpr_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 83 82 86 10 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 24 [cc] 173 174 175 214 215 216
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 24 [cc] 173 174 175 214 215 216
;; live  kill	 24 [cc]

;; Pred edge  2 [7.7%] 
(code_label 86 83 87 11 99 "" [1 uses])

(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 175 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 11 include/linux/regset.h:361 (set (reg:SI 215)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 90 89 91 11 include/linux/regset.h:361 (set (reg:SI 214)
        (and:SI (reg:SI 215)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 91 90 92 11 include/linux/regset.h:361 (set (reg:SI 216 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 214)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 11 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 173 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 216 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 174 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 72 [0x48])
                        (reg:SI 216 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 93 92 94 11 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 173 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 94 93 95 11 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 66 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188


;; Succ edge  66 [71.0%] 
;; Succ edge  12 [29.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 217 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181 217 218 219
;; live  kill	 14 [lr]

;; Pred edge  11 [29.0%]  (fallthru)
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 12 include/linux/regset.h:364 (set (reg/f:SI 217)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 12 include/linux/regset.h:364 (set (reg/f:SI 218)
        (plus:SI (reg/f:SI 217)
            (const_int 172 [0xac]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 98 97 99 12 include/linux/regset.h:364 (set (reg:SI 219)
        (reg/v:SI 173 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 99 98 100 12 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 173 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 100 99 101 12 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 12 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 12 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg/f:SI 218)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 103 102 104 12 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (reg/v:SI 173 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 104 103 105 12 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 105 104 106 12 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("gpr_set") [flags 0x3] <function_decl 0x1155bf80 gpr_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 106 105 109 12 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 24 [cc] 170 171 172 220 221 222
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 24 [cc] 170 171 172 220 221 222
;; live  kill	 24 [cc]

;; Pred edge  2 [7.7%] 
(code_label 109 106 110 13 100 "" [1 uses])

(note 110 109 111 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 172 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 112 111 113 13 include/linux/regset.h:338 (set (reg:SI 221)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 113 112 114 13 include/linux/regset.h:338 (set (reg:SI 220)
        (and:SI (reg:SI 221)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 114 113 115 13 include/linux/regset.h:338 (set (reg:SI 222 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 220)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 115 114 116 13 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 170 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 222 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 171 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 222 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 116 115 117 13 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 117 116 118 13 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 13 -> ( 66 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188


;; Succ edge  66 [71.0%] 
;; Succ edge  14 [29.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 223 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181 223 224 225 226
;; live  kill	 14 [lr]

;; Pred edge  13 [29.0%]  (fallthru)
(note 118 117 119 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 120 14 include/linux/regset.h:341 (set (reg/f:SI 223)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 121 14 include/linux/regset.h:341 (set (reg/f:SI 224)
        (plus:SI (reg/f:SI 223)
            (const_int 172 [0xac]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 121 120 122 14 include/linux/regset.h:341 (set (reg/f:SI 225)
        (plus:SI (reg/f:SI 223)
            (const_int 208 [0xd0]))) 4 {*arm_addsi3} (nil))

(insn 122 121 123 14 include/linux/regset.h:341 (set (reg:SI 226)
        (reg/v:SI 170 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 123 122 124 14 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 170 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 124 123 125 14 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 125 124 126 14 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 126 125 127 14 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg/f:SI 225)) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 14 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (reg/v:SI 170 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 128 127 129 14 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) 167 {*arm_movsi_insn} (nil))

(call_insn 129 128 130 14 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_get") [flags 0x3] <function_decl 0x11582080 fpa_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 130 129 133 14 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 24 [cc] 167 168 169 227 228 229
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 24 [cc] 167 168 169 227 228 229
;; live  kill	 24 [cc]

;; Pred edge  2 [7.7%] 
(code_label 133 130 134 15 101 "" [1 uses])

(note 134 133 135 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 15 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 169 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 15 include/linux/regset.h:361 (set (reg:SI 228)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 137 136 138 15 include/linux/regset.h:361 (set (reg:SI 227)
        (and:SI (reg:SI 228)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 138 137 139 15 include/linux/regset.h:361 (set (reg:SI 229 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 227)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 15 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 167 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 229 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 168 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 140 [0x8c])
                        (reg:SI 229 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 140 139 141 15 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 141 140 142 15 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 15 -> ( 66 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188


;; Succ edge  66 [71.0%] 
;; Succ edge  16 [29.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 230 231 232 233
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181 230 231 232 233
;; live  kill	 14 [lr]

;; Pred edge  15 [29.0%]  (fallthru)
(note 142 141 143 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 16 include/linux/regset.h:364 (set (reg/f:SI 230)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 144 143 145 16 include/linux/regset.h:364 (set (reg/f:SI 231)
        (plus:SI (reg/f:SI 230)
            (const_int 172 [0xac]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 145 144 146 16 include/linux/regset.h:364 (set (reg/f:SI 232)
        (plus:SI (reg/f:SI 230)
            (const_int 208 [0xd0]))) 4 {*arm_addsi3} (nil))

(insn 146 145 147 16 include/linux/regset.h:364 (set (reg:SI 233)
        (reg/v:SI 167 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 147 146 148 16 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 167 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 148 147 149 16 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 149 148 150 16 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 150 149 151 16 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg/f:SI 232)) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 16 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (reg/v:SI 167 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 152 151 153 16 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 140 [0x8c])) 167 {*arm_movsi_insn} (nil))

(call_insn 153 152 154 16 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fpa_set") [flags 0x3] <function_decl 0x11582180 fpa_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 154 153 157 16 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 181 234
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 2 [r2] 181 234
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  2 [7.7%] 
(code_label 157 154 158 17 102 "" [1 uses])

(note 158 157 159 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 160 17 arch/arm/kernel/ptrace.c:842 (set (reg/f:SI 234 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 160 159 161 17 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 2 r2 [ __r2 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 234 [ <variable>.stack ])
                (const_int 96 [0x60])) [0 <variable>.tp_value+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 161 160 162 17 arch/arm/kernel/ptrace.c:842 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 162 161 163 17 arch/arm/kernel/ptrace.c:842 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592319))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

(insn 163 162 166 17 arch/arm/kernel/ptrace.c:842 discrim 6 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 191
;; lr  def 	 181 235
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 188 191
;; live  gen 	 181 235
;; live  kill	

;; Pred edge  2 [7.7%] 
(code_label 166 163 167 18 103 "" [1 uses])

(note 167 166 168 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 169 18 arch/arm/kernel/ptrace.c:847 (set (reg/f:SI 235 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 188 [ child ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 18 arch/arm/kernel/ptrace.c:847 (set (mem/s/j:SI (plus:SI (reg/f:SI 235 [ <variable>.stack ])
                (const_int 76 [0x4c])) [0 <variable>.syscall+0 S4 A32])
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (nil))

(insn 170 169 173 18 arch/arm/kernel/ptrace.c:848 (set (reg/v:SI 181 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 24 [cc] 164 165 166 236 237 238
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 24 [cc] 164 165 166 236 237 238
;; live  kill	 24 [cc]

;; Pred edge  2 [7.7%] 
(code_label 173 170 174 19 104 "" [1 uses])

(note 174 173 175 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 19 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 176 175 177 19 include/linux/regset.h:338 (set (reg:SI 237)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 177 176 178 19 include/linux/regset.h:338 (set (reg:SI 236)
        (and:SI (reg:SI 237)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 178 177 179 19 include/linux/regset.h:338 (set (reg:SI 238 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 236)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 19 include/linux/regset.h:338 (parallel [
            (set (reg/v:SI 164 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 238 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (set (reg/v:SI 165 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 238 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9464662))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 180 179 181 19 include/linux/regset.h:338 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 164 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 181 180 182 19 include/linux/regset.h:338 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 19 -> ( 66 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188


;; Succ edge  66 [71.0%] 
;; Succ edge  20 [29.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 239 240 241 242
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181 239 240 241 242
;; live  kill	 14 [lr]

;; Pred edge  19 [29.0%]  (fallthru)
(note 182 181 183 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 184 20 include/linux/regset.h:341 (set (reg/f:SI 239)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 185 20 include/linux/regset.h:341 (set (reg/f:SI 240)
        (plus:SI (reg/f:SI 239)
            (const_int 172 [0xac]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 185 184 186 20 include/linux/regset.h:341 (set (reg/f:SI 241)
        (plus:SI (reg/f:SI 239)
            (const_int 244 [0xf4]))) 4 {*arm_addsi3} (nil))

(insn 186 185 187 20 include/linux/regset.h:341 (set (reg:SI 242)
        (reg/v:SI 164 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 187 186 188 20 include/linux/regset.h:341 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 164 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 188 187 189 20 include/linux/regset.h:341 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 20 include/linux/regset.h:341 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 190 189 191 20 include/linux/regset.h:341 (set (reg:SI 1 r1)
        (reg/f:SI 241)) 167 {*arm_movsi_insn} (nil))

(insn 191 190 192 20 include/linux/regset.h:341 (set (reg:SI 2 r2)
        (reg/v:SI 164 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 192 191 193 20 include/linux/regset.h:341 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) 167 {*arm_movsi_insn} (nil))

(call_insn 193 192 194 20 include/linux/regset.h:341 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get") [flags 0x3] <function_decl 0x11582280 vfp_get>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 194 193 197 20 include/linux/regset.h:341 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 20 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 24 [cc] 161 162 163 243 244 245
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 24 [cc] 161 162 163 243 244 245
;; live  kill	 24 [cc]

;; Pred edge  2 [7.7%] 
(code_label 197 194 198 21 105 "" [1 uses])

(note 198 197 199 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 200 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 200 199 201 21 include/linux/regset.h:361 (set (reg:SI 244)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 201 200 202 21 include/linux/regset.h:361 (set (reg:SI 243)
        (and:SI (reg:SI 244)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 202 201 203 21 include/linux/regset.h:361 (set (reg:SI 245 [ <variable>.addr_limit ])
        (mem/s/j:SI (plus:SI (reg:SI 243)
                (const_int 8 [0x8])) [0 <variable>.addr_limit+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 203 202 204 21 include/linux/regset.h:361 (parallel [
            (set (reg/v:SI 161 [ flag ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 0 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 245 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (set (reg/v:SI 162 [ roksum ])
                (asm_operands:SI ("adds %1, %2, %3; sbcccs %1, %1, %0; movcc %0, #0") ("=&r") 1 [
                        (reg/v/f:SI 180 [ datap ])
                        (const_int 260 [0x104])
                        (reg:SI 245 [ <variable>.addr_limit ])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("0") 0)
                    ] 9467606))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 204 203 205 21 include/linux/regset.h:361 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 161 [ flag ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 205 204 206 21 include/linux/regset.h:361 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 545)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 21 -> ( 66 22)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188


;; Succ edge  66 [71.0%] 
;; Succ edge  22 [29.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 246 247 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181 246 247 248 249
;; live  kill	 14 [lr]

;; Pred edge  21 [29.0%]  (fallthru)
(note 206 205 207 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 207 206 208 22 include/linux/regset.h:364 (set (reg/f:SI 246)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 208 207 209 22 include/linux/regset.h:364 (set (reg/f:SI 247)
        (plus:SI (reg/f:SI 246)
            (const_int 172 [0xac]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 172 [0xac])))
        (nil)))

(insn 209 208 210 22 include/linux/regset.h:364 (set (reg/f:SI 248)
        (plus:SI (reg/f:SI 246)
            (const_int 244 [0xf4]))) 4 {*arm_addsi3} (nil))

(insn 210 209 211 22 include/linux/regset.h:364 (set (reg:SI 249)
        (reg/v:SI 161 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 211 210 212 22 include/linux/regset.h:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 161 [ flag ])) 167 {*arm_movsi_insn} (nil))

(insn 212 211 213 22 include/linux/regset.h:364 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 213 212 214 22 include/linux/regset.h:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 214 213 215 22 include/linux/regset.h:364 (set (reg:SI 1 r1)
        (reg/f:SI 248)) 167 {*arm_movsi_insn} (nil))

(insn 215 214 216 22 include/linux/regset.h:364 (set (reg:SI 2 r2)
        (reg/v:SI 161 [ flag ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 216 215 217 22 include/linux/regset.h:364 (set (reg:SI 3 r3)
        (const_int 260 [0x104])) 167 {*arm_movsi_insn} (nil))

(call_insn 217 216 218 22 include/linux/regset.h:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_set") [flags 0x3] <function_decl 0x11582380 vfp_set>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 218 217 221 22 include/linux/regset.h:364 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; live  gen 	 0 [r0] 24 [cc] 183
;; live  kill	 14 [lr]

;; Pred edge  2 [7.7%] 
(code_label 221 218 222 23 106 "" [1 uses])

(note 222 221 223 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 224 23 arch/arm/kernel/ptrace.c:879 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(call_insn 224 223 225 23 arch/arm/kernel/ptrace.c:879 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 225 224 226 23 arch/arm/kernel/ptrace.c:879 (set (reg:SI 183 [ D.27292 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 23 arch/arm/kernel/ptrace.c:879 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183 [ D.27292 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 227 226 228 23 arch/arm/kernel/ptrace.c:879 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))
;; End of basic block 23 -> ( 65 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 188 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190


;; Succ edge  65 [19.1%] 
;; Succ edge  24 [80.9%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; live  gen 	 24 [cc] 160
;; live  kill	

;; Pred edge  23 [80.9%]  (fallthru)
(note 228 227 229 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 24 arch/arm/kernel/ptrace.c:882 (set (reg/v:SI 160 [ num ])
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 230 229 231 24 arch/arm/kernel/ptrace.c:472 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 231 230 232 24 arch/arm/kernel/ptrace.c:472 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188


;; Succ edge  25 [29.0%]  (fallthru)
;; Succ edge  26 [71.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 138 139 152 155 156 157 158 159 250 251 252 253 254
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 0 [r0] 137 138 139 152 155 156 157 158 159 250 251 252 253 254
;; live  kill	 14 [lr]

;; Pred edge  24 [29.0%]  (fallthru)
(note 232 231 233 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 234 25 arch/arm/kernel/ptrace.c:432 (set (reg:SI 0 r0)
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 234 233 235 25 arch/arm/kernel/ptrace.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 235 234 236 25 arch/arm/kernel/ptrace.c:432 (set (reg:SI 159 [ D.28052 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 236 235 237 25 arch/arm/kernel/ptrace.c:433 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 237 236 238 25 arch/arm/kernel/ptrace.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("hw_breakpoint_slots") [flags 0x41] <function_decl 0x10ad9700 hw_breakpoint_slots>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 238 237 239 25 arch/arm/kernel/ptrace.c:433 (set (reg:SI 158 [ D.28053 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(call_insn 239 238 240 25 arch/arm/kernel/ptrace.c:434 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_debug_arch") [flags 0x41] <function_decl 0x10ad9400 arch_get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 240 239 241 25 arch/arm/kernel/ptrace.c:434 (set (reg:SI 250)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 241 240 242 25 arch/arm/kernel/ptrace.c:434 (set (reg/v:SI 157 [ debug_arch ])
        (reg:SI 250)) 167 {*arm_movsi_insn} (nil))

(call_insn 242 241 243 25 arch/arm/kernel/ptrace.c:435 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_get_max_wp_len") [flags 0x41] <function_decl 0x10ad9480 arch_get_max_wp_len>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 243 242 244 25 arch/arm/kernel/ptrace.c:435 (set (reg:SI 251)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 244 243 245 25 arch/arm/kernel/ptrace.c:435 (set (reg/v:SI 156 [ wp_len ])
        (reg:SI 251)) 167 {*arm_movsi_insn} (nil))

(insn 245 244 246 25 arch/arm/kernel/ptrace.c:438 (set (reg/v:SI 155 [ reg ])
        (ashift:SI (reg:SI 250)
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 246 245 247 25 arch/arm/kernel/ptrace.c:439 (set (reg/v:SI 139 [ reg.860 ])
        (ior:SI (reg/v:SI 155 [ reg ])
            (reg:SI 251))) 89 {*arm_iorsi3} (nil))

(insn 247 246 248 25 arch/arm/kernel/ptrace.c:440 (set (reg/v:SI 138 [ reg.861 ])
        (ashift:SI (reg/v:SI 139 [ reg.860 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 248 247 249 25 arch/arm/kernel/ptrace.c:441 (set (reg:SI 252 [ D.28053 ])
        (zero_extend:SI (subreg:QI (reg:SI 158 [ D.28053 ]) 0))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 249 248 250 25 arch/arm/kernel/ptrace.c:441 (set (reg/v:SI 137 [ reg.862 ])
        (ior:SI (reg/v:SI 138 [ reg.861 ])
            (reg:SI 252 [ D.28053 ]))) 89 {*arm_iorsi3} (nil))

(insn 250 249 251 25 arch/arm/kernel/ptrace.c:443 (set (reg:SI 253)
        (ashift:SI (reg/v:SI 137 [ reg.862 ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 251 250 252 25 arch/arm/kernel/ptrace.c:443 (set (reg:SI 254 [ D.28052 ])
        (zero_extend:SI (subreg:QI (reg:SI 159 [ D.28052 ]) 0))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 252 251 255 25 arch/arm/kernel/ptrace.c:443 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 253)
            (reg:SI 254 [ D.28052 ]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 25 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [71.0%] 
(code_label 255 252 256 26 114 "" [1 uses])

(note 256 255 257 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 257 256 258 26 arch/arm/kernel/ptrace.c:358 (set (reg:CC 24 cc)
        (reg:CC 24 cc)) 226 {*deleted_compare} (nil))

(jump_insn 258 257 259 26 arch/arm/kernel/ptrace.c:358 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 263)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))
;; End of basic block 26 -> ( 28 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188


;; Succ edge  28 [27.0%] 
;; Succ edge  27 [73.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; live  gen 	 136
;; live  kill	

;; Pred edge  26 [73.0%]  (fallthru)
(note 259 258 260 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 263 27 arch/arm/kernel/ptrace.c:358 (set (reg/v:SI 136 [ num.864 ])
        (reg/v:SI 160 [ num ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 27 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188


;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160 180 188
;; live  gen 	 136
;; live  kill	

;; Pred edge  26 [27.0%] 
(code_label 263 260 264 28 116 "" [1 uses])

(note 264 263 265 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 265 264 266 28 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 136 [ num.864 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 160 [ num ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 28 -> ( 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188


;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 27 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 153 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 160 180 188
;; live  gen 	 24 [cc] 153 255
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru)
;; Pred edge  28 [100.0%]  (fallthru)
(code_label 266 265 267 29 117 "" [0 uses])

(note 267 266 268 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 269 29 arch/arm/kernel/ptrace.c:360 (set (reg:SI 255)
        (plus:SI (reg/v:SI 136 [ num.864 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 269 268 270 29 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 153 [ idx ])
        (ashiftrt:SI (reg:SI 255)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 270 269 271 29 arch/arm/kernel/ptrace.c:476 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 153 [ idx ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 271 270 272 29 arch/arm/kernel/ptrace.c:476 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 180 188


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 272 271 273 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 273 272 276 30 arch/arm/kernel/ptrace.c:477 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 30 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 188
;; lr  def 	 24 [cc] 154 256 257 258 259 260
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153 160 180 188
;; live  gen 	 24 [cc] 154 256 257 258 259 260
;; live  kill	

;; Pred edge  29 [50.0%] 
(code_label 276 273 277 31 118 "" [1 uses])

(note 277 276 278 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 279 31 arch/arm/kernel/ptrace.c:481 (set (reg:SI 256)
        (plus:SI (reg/v:SI 153 [ idx ])
            (const_int 198 [0xc6]))) 4 {*arm_addsi3} (nil))

(insn 279 278 280 31 arch/arm/kernel/ptrace.c:481 (set (reg:SI 257)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 280 279 281 31 arch/arm/kernel/ptrace.c:481 (set (reg:SI 258)
        (ashift:SI (reg:SI 256)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 281 280 282 31 arch/arm/kernel/ptrace.c:481 (set (reg:SI 259)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 258))) 4 {*arm_addsi3} (nil))

(insn 282 281 283 31 arch/arm/kernel/ptrace.c:481 (set (reg/f:SI 260)
        (plus:SI (reg:SI 259)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 283 282 284 31 arch/arm/kernel/ptrace.c:481 (set (reg/v/f:SI 154 [ bp ])
        (mem/s/f/j:SI (reg/f:SI 260) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 284 283 285 31 arch/arm/kernel/ptrace.c:482 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 154 [ bp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 285 284 286 31 arch/arm/kernel/ptrace.c:482 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 160 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 160 180 188


;; Succ edge  32 [15.0%]  (fallthru)
;; Succ edge  33 [85.0%] 

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188
;; live  gen 	 152
;; live  kill	

;; Pred edge  31 [15.0%]  (fallthru)
(note 286 285 287 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 287 286 290 32 arch/arm/kernel/ptrace.c:483 (set (reg/v:SI 152 [ reg ])
        (reg/v/f:SI 154 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 32 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 160 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 140 141 185 261
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 160 180 188
;; live  gen 	 140 141 185 261
;; live  kill	

;; Pred edge  31 [85.0%] 
(code_label 290 287 291 33 120 "" [1 uses])

(note 291 290 292 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 292 291 293 33 arch/arm/kernel/ptrace.c:487 (set (reg/v:SI 185 [ arch_ctrl ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 212 [0xd4])) [0 <variable>.hw.D.25978.D.25977.info.ctrl+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 293 292 294 33 arch/arm/kernel/ptrace.c:487 (set (subreg:SI (reg:QI 261) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) 124 {extzv_t2} (nil))

(insn 294 293 295 33 arch/arm/kernel/ptrace.c:487 (set (reg:SI 141 [ arch_ctrl$len ])
        (zero_extend:SI (reg:QI 261))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 295 294 303 33 arch/arm/kernel/ptrace.c:487 (set (reg:SI 140 [ arch_ctrl$len ])
        (reg:SI 141 [ arch_ctrl$len ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 33 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 35) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; live  gen 	 141 262
;; live  kill	

;; Pred edge  35 [91.0%] 
(code_label 303 295 298 34 122 "" [1 uses])

(note 298 303 299 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 300 34 arch/arm/kernel/ptrace.c:494 (set (reg:SI 262)
        (lshiftrt:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 300 299 301 34 arch/arm/kernel/ptrace.c:494 (set (reg:SI 141 [ arch_ctrl$len ])
        (zero_extend:SI (subreg:QI (reg:SI 262) 0))) 149 {*arm_zero_extendqisi2_v6} (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188


;; Succ edge  35 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; live  gen 	 24 [cc] 263
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  34 [100.0%]  (fallthru,dfs_back)
(code_label 301 300 302 35 121 "" [0 uses])

(note 302 301 304 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 304 302 305 35 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:SI 263)
        (and:SI (reg:SI 141 [ arch_ctrl$len ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 305 304 306 35 arch/arm/kernel/ptrace.c:493 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 263)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 306 305 307 35 arch/arm/kernel/ptrace.c:493 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 303)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 35 -> ( 34 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188


;; Succ edge  34 [91.0%] 
;; Succ edge  36 [9.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc] 264
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 160 180 185 188
;; live  gen 	 24 [cc] 264
;; live  kill	

;; Pred edge  35 [9.0%]  (fallthru)
(note 307 306 308 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 309 36 arch/arm/kernel/ptrace.c:496 (set (reg:SI 264)
        (and:SI (reg/v:SI 160 [ num ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 309 308 310 36 arch/arm/kernel/ptrace.c:496 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 264)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 310 309 311 36 arch/arm/kernel/ptrace.c:496 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 315)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 36 -> ( 37 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 180 185 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 154 180 185 188


;; Succ edge  37 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 180 188
;; live  gen 	 152
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
(note 311 310 312 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 312 311 315 37 arch/arm/kernel/ptrace.c:497 (set (reg/v:SI 152 [ reg ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 154 [ bp ])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.23452.bp_addr+0 S4 A64])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 180 185 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 185
;; lr  def 	 152 186 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 180 185 188
;; live  gen 	 152 185 186 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281
;; live  kill	

;; Pred edge  36 [50.0%] 
(code_label 315 312 316 38 123 "" [1 uses])

(note 316 315 317 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 317 316 318 38 arch/arm/kernel/ptrace.c:497 (set (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg:SI 141 [ arch_ctrl$len ])) 77 {insv_t2} (nil))

(insn 318 317 319 38 arch/arm/kernel/ptrace.c:497 (set (reg/v:SI 186 [ ctrl ])
        (reg/v:SI 185 [ arch_ctrl ])) 167 {*arm_movsi_insn} (nil))

(insn 319 318 320 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 265) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))) 124 {extzv_t2} (nil))

(insn 320 319 321 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 266)
        (zero_extend:SI (reg:QI 265))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 321 320 322 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 267)
        (ashift:SI (reg:SI 266)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (nil))

(insn 322 321 323 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 268) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) 124 {extzv_t2} (nil))

(insn 323 322 324 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 269)
        (zero_extend:SI (reg:QI 268))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 324 323 325 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 270)
        (ashift:SI (reg:SI 269)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 325 324 326 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 271)
        (ior:SI (reg:SI 267)
            (reg:SI 270))) 89 {*arm_iorsi3} (nil))

(insn 326 325 327 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 272) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))) 124 {extzv_t2} (nil))

(insn 327 326 328 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 273)
        (zero_extend:SI (reg:QI 272))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 328 327 329 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 274)
        (ior:SI (reg:SI 271)
            (reg:SI 273))) 89 {*arm_iorsi3} (nil))

(insn 329 328 330 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 275) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) 124 {extzv_t2} (nil))

(insn 330 329 331 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 276)
        (zero_extend:SI (reg:QI 275))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 331 330 332 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 277)
        (ashift:SI (reg:SI 276)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 332 331 333 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 278)
        (ior:SI (reg:SI 274)
            (reg:SI 277))) 89 {*arm_iorsi3} (nil))

(insn 333 332 334 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 279) 0)
        (zero_extract:SI (reg/v:SI 185 [ arch_ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))) 124 {extzv_t2} (nil))

(insn 334 333 335 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 280)
        (zero_extend:SI (reg:QI 279))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 335 334 336 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 281)
        (ashift:SI (reg:SI 280)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 336 335 337 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 152 [ reg ])
        (ior:SI (reg:SI 278)
            (reg:SI 281))) 89 {*arm_iorsi3} (nil))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 25 32 37 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180
;; lr  def 	 0 [r0] 2 [r2] 12 [ip] 14 [lr] 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 180 188
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 151
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%]  (fallthru)
(code_label 337 336 338 39 115 ("put") [0 uses])

(note 338 337 339 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 339 338 340 39 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 2 r2 [ __r2 ])
        (reg/v:SI 152 [ reg ])) 167 {*arm_movsi_insn} (nil))

(insn 340 339 341 39 arch/arm/kernel/ptrace.c:503 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 341 340 342 39 arch/arm/kernel/ptrace.c:503 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %2,r2 ; .err ; .endif
	bl	__put_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                        (reg/v:SI 2 r2 [ __r2 ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                        (asm_input:SI ("r") 0)
                    ] 9592350))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (nil))

(insn 342 341 343 39 arch/arm/kernel/ptrace.c:503 discrim 6 (set (reg:SI 151 [ D.28058 ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (nil))

(insn 343 342 344 39 arch/arm/kernel/ptrace.c:503 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ D.28058 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 344 343 345 39 arch/arm/kernel/ptrace.c:503 discrim 6 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 349)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 39 -> ( 40 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188


;; Succ edge  40 [50.0%]  (fallthru)
;; Succ edge  41 [50.0%] 

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	

;; Pred edge  39 [50.0%]  (fallthru)
(note 345 344 346 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 346 345 349 40 arch/arm/kernel/ptrace.c:504 (set (reg/v:SI 181 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 40 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 39) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	

;; Pred edge  39 [50.0%] 
(code_label 349 346 350 41 124 "" [1 uses])

(note 350 349 351 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 351 350 352 41 arch/arm/kernel/ptrace.c:468 (set (reg/v:SI 181 [ ret ])
        (reg:SI 151 [ D.28058 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 41 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 30 41 40) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  30 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%]  (fallthru)
;; Pred edge  40 [100.0%]  (fallthru)
(code_label 352 351 353 42 119 ("out") [0 uses])

(note 353 352 354 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 354 353 355 42 arch/arm/kernel/ptrace.c:884 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(call_insn 355 354 358 42 arch/arm/kernel/ptrace.c:884 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 42 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 184 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; live  gen 	 0 [r0] 24 [cc] 182
;; live  kill	 14 [lr]

;; Pred edge  2 [7.7%] 
(code_label 358 355 359 43 107 "" [1 uses])

(note 359 358 360 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 360 359 361 43 arch/arm/kernel/ptrace.c:887 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(call_insn 361 360 362 43 arch/arm/kernel/ptrace.c:887 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_get_breakpoints") [flags 0x41] <function_decl 0x110a8680 ptrace_get_breakpoints>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 362 361 363 43 arch/arm/kernel/ptrace.c:887 (set (reg:SI 182 [ D.27299 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 363 362 364 43 arch/arm/kernel/ptrace.c:887 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182 [ D.27299 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 364 363 365 43 arch/arm/kernel/ptrace.c:887 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 540)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1912 [0x778])
        (nil)))
;; End of basic block 43 -> ( 65 44)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 180 184 188 190
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190


;; Succ edge  65 [19.1%] 
;; Succ edge  44 [80.9%]  (fallthru)

;; Start of basic block ( 43) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 184 188 190
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 190
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180 188 190
;; live  gen 	 24 [cc] 150
;; live  kill	

;; Pred edge  43 [80.9%]  (fallthru)
(note 365 364 366 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 366 365 367 44 arch/arm/kernel/ptrace.c:890 (set (reg/v:SI 150 [ num ])
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 367 366 368 44 arch/arm/kernel/ptrace.c:519 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 190 [ addr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 368 367 369 44 arch/arm/kernel/ptrace.c:519 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 373)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 44 -> ( 45 46)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 188


;; Succ edge  45 [50.0%]  (fallthru)
;; Succ edge  46 [50.0%] 

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	

;; Pred edge  44 [50.0%]  (fallthru)
(note 369 368 370 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 370 369 373 45 arch/arm/kernel/ptrace.c:513 (set (reg/v:SI 181 [ ret ])
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 45 -> ( 63)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  63 [100.0%]  (fallthru)

;; Start of basic block ( 44) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 188
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  44 [50.0%] 
(code_label 373 370 374 46 125 "" [1 uses])

(note 374 373 375 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 375 374 376 46 arch/arm/kernel/ptrace.c:521 (set (reg:CC 24 cc)
        (reg:CC 24 cc)) 226 {*deleted_compare} (nil))

(jump_insn 376 375 377 46 arch/arm/kernel/ptrace.c:521 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 382)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2700 [0xa8c])
        (nil)))
;; End of basic block 46 -> ( 48 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 188


;; Succ edge  48 [27.0%] 
;; Succ edge  47 [73.0%]  (fallthru)

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 135 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 188
;; live  gen 	 135 146
;; live  kill	

;; Pred edge  46 [73.0%]  (fallthru)
(note 377 376 378 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 378 377 379 47 arch/arm/kernel/ptrace.c:521 (set (reg/v:SI 135 [ num.865 ])
        (reg/v:SI 150 [ num ])) 167 {*arm_movsi_insn} (nil))

(insn 379 378 382 47 arch/arm/kernel/ptrace.c:524 (set (reg/v:SI 146 [ implied_type ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 47 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 188


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 46) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150
;; lr  def 	 135 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 180 188
;; live  gen 	 135 146
;; live  kill	

;; Pred edge  46 [27.0%] 
(code_label 382 379 383 48 127 "" [1 uses])

(note 383 382 384 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 384 383 385 48 arch/arm/kernel/ptrace.c:359 (set (reg/v:SI 135 [ num.865 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 150 [ num ]))) 28 {*arm_subsi3_insn} (nil))

(insn 385 384 386 48 arch/arm/kernel/ptrace.c:522 (set (reg/v:SI 146 [ implied_type ])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 48 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 188


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 47 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 145 282
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 146 150 180 188
;; live  gen 	 24 [cc] 145 282
;; live  kill	

;; Pred edge  47 [100.0%]  (fallthru)
;; Pred edge  48 [100.0%]  (fallthru)
(code_label 386 385 387 49 128 "" [0 uses])

(note 387 386 388 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 388 387 389 49 arch/arm/kernel/ptrace.c:360 (set (reg:SI 282)
        (plus:SI (reg/v:SI 135 [ num.865 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 389 388 390 49 arch/arm/kernel/ptrace.c:360 (set (reg/v:SI 145 [ idx ])
        (ashiftrt:SI (reg:SI 282)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 390 389 391 49 arch/arm/kernel/ptrace.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ idx ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 391 390 392 49 arch/arm/kernel/ptrace.c:527 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 521)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 49 -> ( 62 50)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 180 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 180 188


;; Succ edge  62 [50.0%] 
;; Succ edge  50 [50.0%]  (fallthru)

;; Start of basic block ( 49) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 180 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 180
;; lr  def 	 0 [r0] 2 [r2] 14 [lr] 24 [cc] 142 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 150 180 188
;; live  gen 	 0 [r0] 2 [r2] 24 [cc] 142 147
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  49 [50.0%]  (fallthru)
(note 392 391 393 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 393 392 394 50 arch/arm/kernel/ptrace.c:532 (set (reg/v:SI 0 r0 [ __p ])
        (reg/v/f:SI 180 [ datap ])) 167 {*arm_movsi_insn} (nil))

(insn 394 393 395 50 arch/arm/kernel/ptrace.c:532 discrim 4 (parallel [
            (set (reg/v:SI 0 r0 [ __e ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=&r") 0 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (set (reg/v:SI 2 r2 [ __r2 ])
                (asm_operands/v:SI (".ifnc %0,r0 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	bl	__get_user_4") ("=r") 1 [
                        (reg/v:SI 0 r0 [ __p ])
                    ]
                     [
                        (asm_input:SI ("0") 0)
                    ] 9592356))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
        ]) -1 (nil))

(insn 395 394 396 50 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg/v:SI 147 [ user_val ])
        (reg/v:SI 2 r2 [ __r2 ])) 167 {*arm_movsi_insn} (nil))

(insn 396 395 397 50 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:SI 142 [ D.28105 ])
        (reg/v:SI 0 r0 [ __e ])) 167 {*arm_movsi_insn} (nil))

(insn 397 396 398 50 arch/arm/kernel/ptrace.c:532 discrim 5 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.28105 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 398 397 399 50 arch/arm/kernel/ptrace.c:532 discrim 5 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 403)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 50 -> ( 51 52)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 150 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 150 188


;; Succ edge  51 [50.0%]  (fallthru)
;; Succ edge  52 [50.0%] 

;; Start of basic block ( 50) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	

;; Pred edge  50 [50.0%]  (fallthru)
(note 399 398 400 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 400 399 403 51 arch/arm/kernel/ptrace.c:533 (set (reg/v:SI 181 [ ret ])
        (const_int -14 [0xfffffffffffffff2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 51 -> ( 63)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  63 [100.0%]  (fallthru)

;; Start of basic block ( 50) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 150 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 188
;; lr  def 	 24 [cc] 148 283 284 285 286 287
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 150 188
;; live  gen 	 24 [cc] 148 283 284 285 286 287
;; live  kill	

;; Pred edge  50 [50.0%] 
(code_label 403 400 404 52 130 "" [1 uses])

(note 404 403 405 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 405 404 406 52 arch/arm/kernel/ptrace.c:537 (set (reg:SI 283)
        (plus:SI (reg/v:SI 145 [ idx ])
            (const_int 198 [0xc6]))) 4 {*arm_addsi3} (nil))

(insn 406 405 407 52 arch/arm/kernel/ptrace.c:537 (set (reg:SI 284)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 407 406 408 52 arch/arm/kernel/ptrace.c:537 (set (reg:SI 285)
        (ashift:SI (reg:SI 283)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 408 407 409 52 arch/arm/kernel/ptrace.c:537 (set (reg:SI 286)
        (plus:SI (reg/v/f:SI 188 [ child ])
            (reg:SI 285))) 4 {*arm_addsi3} (nil))

(insn 409 408 410 52 arch/arm/kernel/ptrace.c:537 (set (reg/f:SI 287)
        (plus:SI (reg:SI 286)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 410 409 411 52 arch/arm/kernel/ptrace.c:537 (set (reg/v/f:SI 148 [ bp ])
        (mem/s/f/j:SI (reg/f:SI 287) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 411 410 412 52 arch/arm/kernel/ptrace.c:538 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 412 411 413 52 arch/arm/kernel/ptrace.c:538 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 432)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 52 -> ( 53 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 188


;; Succ edge  53 [6.7%]  (fallthru)
;; Succ edge  56 [93.3%] 

;; Start of basic block ( 52) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 150 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 150 188
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 148
;; live  kill	 14 [lr]

;; Pred edge  52 [6.7%]  (fallthru)
(note 413 412 414 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 414 413 415 53 arch/arm/kernel/ptrace.c:539 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 415 414 416 53 arch/arm/kernel/ptrace.c:539 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ implied_type ])) 167 {*arm_movsi_insn} (nil))

(call_insn 416 415 417 53 arch/arm/kernel/ptrace.c:539 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_hbp_create") [flags 0x3] <function_decl 0x1155bb80 ptrace_hbp_create>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 417 416 418 53 arch/arm/kernel/ptrace.c:539 (set (reg/v/f:SI 148 [ bp ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 418 417 419 53 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ bp ])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 419 418 420 53 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 424)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 53 -> ( 54 55)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 188


;; Succ edge  54 [0.0%]  (fallthru)
;; Succ edge  55 [100.0%] 

;; Start of basic block ( 53) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  gen 	 181
;; live  kill	

;; Pred edge  53 [0.0%]  (fallthru)
(note 420 419 421 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 421 420 424 54 include/linux/err.h:29 (set (reg/v:SI 181 [ ret ])
        (reg/v/f:SI 148 [ bp ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 54 -> ( 63)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  63 [100.0%]  (fallthru)

;; Start of basic block ( 53) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 188
;; lr  def 	 288 289 290 291 292
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 147 148 150 188
;; live  gen 	 288 289 290 291 292
;; live  kill	

;; Pred edge  53 [100.0%] 
(code_label 424 421 425 55 132 "" [1 uses])

(note 425 424 426 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 426 425 427 55 arch/arm/kernel/ptrace.c:544 (set (reg:SI 288)
        (reg:SI 283)) 167 {*arm_movsi_insn} (nil))

(insn 427 426 428 55 arch/arm/kernel/ptrace.c:544 (set (reg:SI 289)
        (reg:SI 284)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 428 427 429 55 arch/arm/kernel/ptrace.c:544 (set (reg:SI 290)
        (reg:SI 285)) 167 {*arm_movsi_insn} (nil))

(insn 429 428 430 55 arch/arm/kernel/ptrace.c:544 (set (reg:SI 291)
        (reg:SI 286)) 167 {*arm_movsi_insn} (nil))

(insn 430 429 431 55 arch/arm/kernel/ptrace.c:544 (set (reg/f:SI 292)
        (reg/f:SI 287)) 167 {*arm_movsi_insn} (nil))

(insn 431 430 432 55 arch/arm/kernel/ptrace.c:544 (set (mem/s/f/j:SI (reg/f:SI 287) [0 <variable>.thread.debug.hbp S4 A32])
        (reg/v/f:SI 148 [ bp ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 55 -> ( 56)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 188


;; Succ edge  56 [100.0%]  (fallthru)

;; Start of basic block ( 52 55) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 293 294 295 297
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 150 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 293 294 295 297
;; live  kill	 14 [lr]

;; Pred edge  52 [93.3%] 
;; Pred edge  55 [100.0%]  (fallthru)
(code_label 432 431 433 56 131 "" [1 uses])

(note 433 432 434 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 434 433 435 56 arch/arm/kernel/ptrace.c:547 (set (reg/f:SI 293)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))) 4 {*arm_addsi3} (nil))

(insn 435 434 436 56 arch/arm/kernel/ptrace.c:547 (set (reg/f:SI 294)
        (plus:SI (reg/v/f:SI 148 [ bp ])
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (nil))

(insn 436 435 437 56 arch/arm/kernel/ptrace.c:547 (set (reg:SI 295)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(insn 437 436 438 56 arch/arm/kernel/ptrace.c:547 (set (reg:SI 0 r0)
        (reg/f:SI 293)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))

(insn 438 437 439 56 arch/arm/kernel/ptrace.c:547 (set (reg:SI 1 r1)
        (reg/f:SI 294)) 167 {*arm_movsi_insn} (nil))

(insn 439 438 440 56 arch/arm/kernel/ptrace.c:547 (set (reg:SI 2 r2)
        (reg:SI 295)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 72 [0x48])
        (nil)))

(call_insn 440 439 442 56 arch/arm/kernel/ptrace.c:547 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x115c3d80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 442 440 443 56 arch/arm/kernel/ptrace.c:549 (set (reg:SI 297)
        (and:SI (reg/v:SI 150 [ num ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 443 442 444 56 arch/arm/kernel/ptrace.c:549 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 297)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 444 443 445 56 arch/arm/kernel/ptrace.c:549 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 450)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 56 -> ( 57 58)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188


;; Succ edge  57 [71.0%]  (fallthru)
;; Succ edge  58 [29.0%] 

;; Start of basic block ( 56) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 337 338
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 188
;; live  gen 	 337 338
;; live  kill	

;; Pred edge  56 [71.0%]  (fallthru)
(note 445 444 564 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 564 445 565 57 arch/arm/kernel/ptrace.c:551 (set (reg:SI 337 [ user_val ])
        (reg/v:SI 147 [ user_val ])) 167 {*arm_movsi_insn} (nil))

(insn 565 564 566 57 arch/arm/kernel/ptrace.c:551 (set (reg:SI 338 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 566 565 567 57 arch/arm/kernel/ptrace.c:551 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 attr.D.23452.bp_addr+0 S4 A64])
        (reg/v:SI 147 [ user_val ])) 167 {*arm_movsi_insn} (nil))

(insn 567 566 450 57 arch/arm/kernel/ptrace.c:551 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 attr.D.23452.bp_addr+4 S4 A32])
        (reg:SI 338 [+4 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 57 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188


;; Succ edge  61 [100.0%]  (fallthru)

;; Start of basic block ( 56) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 184
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 149 181 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 148 188
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 149 181 184 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325
;; live  kill	 14 [lr]

;; Pred edge  56 [29.0%] 
(code_label 450 567 451 58 133 "" [1 uses])

(note 451 450 452 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 452 451 453 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 299 [ user_val ])
        (subreg:QI (reg/v:SI 147 [ user_val ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 453 452 454 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 300)
        (and:SI (subreg:SI (reg:QI 299 [ user_val ]) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 454 453 455 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 301)
        (subreg:QI (reg:SI 300) 0)) 178 {*arm_movqi_insn} (nil))

(insn 455 454 456 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 302)
        (and:SI (subreg:SI (reg:QI 301) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 456 455 457 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:QI 303)
        (subreg:QI (reg:SI 302) 0)) 178 {*arm_movqi_insn} (nil))

(insn 457 456 458 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (reg:SI 304)
        (and:SI (subreg:SI (reg:QI 303) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 458 457 459 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:36 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))
        (reg:SI 304)) 77 {insv_t2} (nil))

(insn 459 458 460 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:37 (set (reg/v:SI 149 [ reg ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 460 459 461 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 305 [ reg ])
        (subreg:QI (reg/v:SI 149 [ reg ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 461 460 462 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 306)
        (and:SI (subreg:SI (reg:QI 305 [ reg ]) 0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 462 461 463 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 307)
        (subreg:QI (reg:SI 306) 0)) 178 {*arm_movqi_insn} (nil))

(insn 463 462 464 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 308)
        (and:SI (subreg:SI (reg:QI 307) 0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 464 463 465 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:QI 309)
        (subreg:QI (reg:SI 308) 0)) 178 {*arm_movqi_insn} (nil))

(insn 465 464 466 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (reg:SI 310)
        (and:SI (subreg:SI (reg:QI 309) 0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 466 465 467 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:38 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))
        (reg:SI 310)) 77 {insv_t2} (nil))

(insn 467 466 468 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:39 (set (reg/v:SI 134 [ reg.867 ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 468 467 469 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 311 [ reg.867 ])
        (subreg:QI (reg/v:SI 134 [ reg.867 ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 469 468 470 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 312)
        (and:SI (subreg:SI (reg:QI 311 [ reg.867 ]) 0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 470 469 471 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 313)
        (subreg:QI (reg:SI 312) 0)) 178 {*arm_movqi_insn} (nil))

(insn 471 470 472 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 314)
        (and:SI (subreg:SI (reg:QI 313) 0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 472 471 473 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:QI 315)
        (subreg:QI (reg:SI 314) 0)) 178 {*arm_movqi_insn} (nil))

(insn 473 472 474 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (reg:SI 316)
        (and:SI (subreg:SI (reg:QI 315) 0)
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 474 473 475 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:40 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))
        (reg:SI 316)) 77 {insv_t2} (nil))

(insn 475 474 476 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg/v:SI 133 [ reg.871 ])
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 476 475 477 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:42 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg/v:SI 133 [ reg.871 ])) 77 {insv_t2} (nil))

(insn 477 476 478 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 317)
        (lshiftrt:SI (reg/v:SI 147 [ user_val ])
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (nil))

(insn 478 477 479 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 318)
        (subreg:QI (reg:SI 317) 0)) 178 {*arm_movqi_insn} (nil))

(insn 479 478 480 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 319)
        (and:SI (subreg:SI (reg:QI 318) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 480 479 481 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 320)
        (subreg:QI (reg:SI 319) 0)) 178 {*arm_movqi_insn} (nil))

(insn 481 480 482 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 321)
        (and:SI (subreg:SI (reg:QI 320) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 482 481 483 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:QI 322)
        (subreg:QI (reg:SI 321) 0)) 178 {*arm_movqi_insn} (nil))

(insn 483 482 484 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (reg:SI 323)
        (and:SI (subreg:SI (reg:QI 322) 0)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 484 483 485 58 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:44 (set (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))
        (reg:SI 323)) 77 {insv_t2} (nil))

(insn 485 484 486 58 arch/arm/kernel/ptrace.c:555 (set (reg/f:SI 324)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 486 485 487 58 arch/arm/kernel/ptrace.c:555 (set (reg/f:SI 325)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 487 486 488 58 arch/arm/kernel/ptrace.c:555 (set (reg:SI 0 r0)
        (reg/v:SI 184 [ ctrl ])) 167 {*arm_movsi_insn} (nil))

(insn 488 487 489 58 arch/arm/kernel/ptrace.c:555 (set (reg:SI 1 r1)
        (reg/f:SI 324)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 489 488 490 58 arch/arm/kernel/ptrace.c:555 (set (reg:SI 2 r2)
        (reg/f:SI 325)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))
        (nil)))

(call_insn 490 489 491 58 arch/arm/kernel/ptrace.c:555 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_bp_generic_fields") [flags 0x41] <function_decl 0x10ad9200 arch_bp_generic_fields>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 491 490 492 58 arch/arm/kernel/ptrace.c:555 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 492 491 493 58 arch/arm/kernel/ptrace.c:556 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 181 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 493 492 494 58 arch/arm/kernel/ptrace.c:556 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 524)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 58 -> ( 63 59)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 181 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 181 184 188


;; Succ edge  63 [50.0%] 
;; Succ edge  59 [50.0%]  (fallthru)

;; Start of basic block ( 58) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 148 184 188
;; live  gen 	 24 [cc] 143 144
;; live  kill	

;; Pred edge  58 [50.0%]  (fallthru)
(note 494 493 495 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 495 494 496 59 arch/arm/kernel/ptrace.c:559 (set (reg:SI 143 [ gen_type.377 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 gen_type+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 496 495 497 59 arch/arm/kernel/ptrace.c:559 (set (reg:SI 144 [ D.28101 ])
        (and:SI (reg/v:SI 146 [ implied_type ])
            (reg:SI 143 [ gen_type.377 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 497 496 498 59 arch/arm/kernel/ptrace.c:559 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144 [ D.28101 ])
            (reg:SI 143 [ gen_type.377 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 498 497 499 59 arch/arm/kernel/ptrace.c:559 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 521)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 59 -> ( 62 60)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188


;; Succ edge  62 [72.0%] 
;; Succ edge  60 [28.0%]  (fallthru)

;; Start of basic block ( 59) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 184
;; lr  def 	 326 327 328 330 331 332 333 334
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 148 184 188
;; live  gen 	 326 327 328 330 331 332 333 334
;; live  kill	

;; Pred edge  59 [28.0%]  (fallthru)
(note 499 498 500 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 500 499 501 60 arch/arm/kernel/ptrace.c:564 (set (reg:SI 326 [ gen_len ])
        (mem/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 gen_len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 501 500 502 60 arch/arm/kernel/ptrace.c:564 (set (reg:DI 327 [ gen_len ])
        (sign_extend:DI (reg:SI 326 [ gen_len ]))) 140 {*arm_extendsidi2} (nil))

(insn 502 501 503 60 arch/arm/kernel/ptrace.c:564 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                (const_int -16 [0xfffffffffffffff0])) [0 attr.D.23456.bp_len+0 S8 A64])
        (reg:DI 327 [ gen_len ])) 163 {*arm_movdi} (nil))

(insn 503 502 504 60 arch/arm/kernel/ptrace.c:565 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -28 [0xffffffffffffffe4])) [0 attr.bp_type+0 S4 A32])
        (reg:SI 144 [ D.28101 ])) 167 {*arm_movsi_insn} (nil))

(insn 504 503 505 60 arch/arm/kernel/ptrace.c:566 (set (subreg:SI (reg:QI 328) 0)
        (zero_extract:SI (reg/v:SI 184 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 24 [0x18]))) 124 {extzv_t2} (nil))

(insn 505 504 506 60 arch/arm/kernel/ptrace.c:566 (set (reg:SI 330)
        (not:SI (subreg:SI (reg:QI 328) 0))) 134 {*arm_one_cmplsi2} (nil))

(insn 506 505 507 60 arch/arm/kernel/ptrace.c:566 (set (reg:SI 331)
        (zero_extend:SI (subreg:QI (reg:SI 330) 0))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 507 506 508 60 arch/arm/kernel/ptrace.c:566 (set (reg:SI 332)
        (lshiftrt:SI (reg:SI 331)
            (const_int 7 [0x7]))) 117 {*arm_shiftsi3} (nil))

(insn 508 507 509 60 arch/arm/kernel/ptrace.c:566 (set (reg:SI 334 [+40 ])
        (zero_extend:SI (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 509 508 510 60 arch/arm/kernel/ptrace.c:566 (set (reg:QI 333 [+40 ])
        (subreg:QI (reg:SI 334 [+40 ]) 0)) 178 {*arm_movqi_insn} (nil))

(insn 510 509 511 60 arch/arm/kernel/ptrace.c:566 (set (zero_extract:SI (subreg:SI (reg:QI 333 [+40 ]) 0)
            (const_int 1 [0x1])
            (const_int 0 [0x0]))
        (reg:SI 332)) 77 {insv_t2} (nil))

(insn 511 510 512 60 arch/arm/kernel/ptrace.c:566 (set (mem/s/j/c:QI (plus:SI (reg/f:SI 25 sfp)
                (const_int -40 [0xffffffffffffffd8])) [0+40 S1 A64])
        (reg:QI 333 [+40 ])) 178 {*arm_movqi_insn} (nil))
;; End of basic block 60 -> ( 61)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188


;; Succ edge  61 [100.0%]  (fallthru)

;; Start of basic block ( 57 60) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181 335
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 188
;; live  gen 	 0 [r0] 1 [r1] 181 335
;; live  kill	 14 [lr]

;; Pred edge  57 [100.0%]  (fallthru)
;; Pred edge  60 [100.0%]  (fallthru)
(code_label 512 511 513 61 134 "" [0 uses])

(note 513 512 514 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 514 513 515 61 arch/arm/kernel/ptrace.c:569 (set (reg/f:SI 335)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))) 4 {*arm_addsi3} (nil))

(insn 515 514 516 61 arch/arm/kernel/ptrace.c:569 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ bp ])) 167 {*arm_movsi_insn} (nil))

(insn 516 515 517 61 arch/arm/kernel/ptrace.c:569 (set (reg:SI 1 r1)
        (reg/f:SI 335)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -80 [0xffffffffffffffb0]))
        (nil)))

(call_insn 517 516 518 61 arch/arm/kernel/ptrace.c:569 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("modify_user_hw_breakpoint") [flags 0x41] <function_decl 0x11524780 modify_user_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 518 517 521 61 arch/arm/kernel/ptrace.c:569 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 61 -> ( 63)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  63 [100.0%]  (fallthru)

;; Start of basic block ( 59 49) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; live  gen 	 181
;; live  kill	

;; Pred edge  59 [72.0%] 
;; Pred edge  49 [50.0%] 
(code_label 521 518 522 62 129 ("out") [2 uses])

(note 522 521 523 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 523 522 524 62 arch/arm/kernel/ptrace.c:528 (set (reg/v:SI 181 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 62 -> ( 63)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188


;; Succ edge  63 [100.0%]  (fallthru)

;; Start of basic block ( 62 45 61 51 58 54) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 188
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  62 [100.0%]  (fallthru)
;; Pred edge  45 [100.0%]  (fallthru)
;; Pred edge  61 [100.0%]  (fallthru)
;; Pred edge  51 [100.0%]  (fallthru)
;; Pred edge  58 [50.0%] 
;; Pred edge  54 [100.0%]  (fallthru)
(code_label 524 523 525 63 126 "" [1 uses])

(note 525 524 526 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 526 525 527 63 arch/arm/kernel/ptrace.c:892 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(call_insn 527 526 530 63 arch/arm/kernel/ptrace.c:892 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_put_breakpoints") [flags 0x41] <function_decl 0x110a8700 ptrace_put_breakpoints>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 63 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 188 189 190 191
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 181
;; live  kill	 14 [lr]

;; Pred edge  2 [7.7%] 
(code_label 530 527 531 64 95 "" [17 uses])

(note 531 530 532 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 532 531 533 64 arch/arm/kernel/ptrace.c:897 (set (reg:SI 0 r0)
        (reg/v/f:SI 188 [ child ])) 167 {*arm_movsi_insn} (nil))

(insn 533 532 534 64 arch/arm/kernel/ptrace.c:897 (set (reg:SI 1 r1)
        (reg/v:SI 189 [ request ])) 167 {*arm_movsi_insn} (nil))

(insn 534 533 535 64 arch/arm/kernel/ptrace.c:897 (set (reg:SI 2 r2)
        (reg/v:SI 190 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 535 534 536 64 arch/arm/kernel/ptrace.c:897 (set (reg:SI 3 r3)
        (reg/v:SI 191 [ data ])) 167 {*arm_movsi_insn} (nil))

(call_insn 536 535 537 64 arch/arm/kernel/ptrace.c:897 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ptrace_request") [flags 0x41] <function_decl 0x1109c680 ptrace_request>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 537 536 540 64 arch/arm/kernel/ptrace.c:897 (set (reg/v:SI 181 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 64 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 23 43) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 181
;; live  kill	

;; Pred edge  23 [19.1%] 
;; Pred edge  43 [19.1%] 
(code_label 540 537 541 65 113 "" [2 uses])

(note 541 540 542 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 542 541 545 65 arch/arm/kernel/ptrace.c:880 (set (reg/v:SI 181 [ ret ])
        (const_int -3 [0xfffffffffffffffd])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 65 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 21 19 3 9 11 13 15) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 181
;; live  kill	

;; Pred edge  21 [71.0%] 
;; Pred edge  19 [71.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  9 [71.0%] 
;; Pred edge  11 [71.0%] 
;; Pred edge  13 [71.0%] 
;; Pred edge  15 [71.0%] 
(code_label 545 542 546 66 109 "" [7 uses])

(note 546 545 547 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 547 546 548 66 include/linux/regset.h:362 (set (reg/v:SI 181 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 66 -> ( 67)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181


;; Succ edge  67 [100.0%]  (fallthru)

;; Start of basic block ( 66 65 7 64 63 42 22 20 18 17 16 14 12 10 8) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181
;; lr  def 	 0 [r0] 187
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 181
;; live  gen 	 0 [r0] 187
;; live  kill	

;; Pred edge  66 [100.0%]  (fallthru)
;; Pred edge  65 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  64 [100.0%]  (fallthru)
;; Pred edge  63 [100.0%]  (fallthru)
;; Pred edge  42 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 548 547 549 67 112 "" [0 uses])

(note 549 548 550 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 550 549 554 67 arch/arm/kernel/ptrace.c:902 (set (reg:SI 187 [ <result> ])
        (reg/v:SI 181 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 554 550 560 67 arch/arm/kernel/ptrace.c:902 (set (reg/i:SI 0 r0)
        (reg/v:SI 181 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 560 554 0 67 arch/arm/kernel/ptrace.c:902 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 67 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 34.
deleting insn with uid = 34.
rescanning insn with uid = 66.
deleting insn with uid = 66.
rescanning insn with uid = 75.
deleting insn with uid = 75.
rescanning insn with uid = 76.
deleting insn with uid = 76.
rescanning insn with uid = 80.
deleting insn with uid = 80.
rescanning insn with uid = 89.
deleting insn with uid = 89.
rescanning insn with uid = 98.
deleting insn with uid = 98.
rescanning insn with uid = 99.
deleting insn with uid = 99.
rescanning insn with uid = 103.
deleting insn with uid = 103.
rescanning insn with uid = 112.
deleting insn with uid = 112.
rescanning insn with uid = 121.
deleting insn with uid = 121.
rescanning insn with uid = 122.
deleting insn with uid = 122.
rescanning insn with uid = 123.
deleting insn with uid = 123.
rescanning insn with uid = 127.
deleting insn with uid = 127.
rescanning insn with uid = 136.
deleting insn with uid = 136.
rescanning insn with uid = 145.
deleting insn with uid = 145.
rescanning insn with uid = 146.
deleting insn with uid = 146.
rescanning insn with uid = 147.
deleting insn with uid = 147.
rescanning insn with uid = 151.
deleting insn with uid = 151.
rescanning insn with uid = 176.
deleting insn with uid = 176.
rescanning insn with uid = 185.
deleting insn with uid = 185.
rescanning insn with uid = 186.
deleting insn with uid = 186.
rescanning insn with uid = 187.
deleting insn with uid = 187.
rescanning insn with uid = 191.
deleting insn with uid = 191.
rescanning insn with uid = 200.
deleting insn with uid = 200.
rescanning insn with uid = 209.
deleting insn with uid = 209.
rescanning insn with uid = 210.
deleting insn with uid = 210.
rescanning insn with uid = 211.
deleting insn with uid = 211.
rescanning insn with uid = 215.
deleting insn with uid = 215.
rescanning insn with uid = 230.
deleting insn with uid = 230.
rescanning insn with uid = 233.
deleting insn with uid = 233.
rescanning insn with uid = 245.
deleting insn with uid = 245.
rescanning insn with uid = 246.
deleting insn with uid = 246.
rescanning insn with uid = 257.
deleting insn with uid = 257.
verify found no changes in insn with uid = 260.
rescanning insn with uid = 282.
deleting insn with uid = 282.
rescanning insn with uid = 287.
deleting insn with uid = 287.
rescanning insn with uid = 294.
deleting insn with uid = 294.
rescanning insn with uid = 295.
deleting insn with uid = 295.
rescanning insn with uid = 319.
deleting insn with uid = 319.
rescanning insn with uid = 322.
deleting insn with uid = 322.
rescanning insn with uid = 326.
deleting insn with uid = 326.
rescanning insn with uid = 329.
deleting insn with uid = 329.
rescanning insn with uid = 333.
deleting insn with uid = 333.
rescanning insn with uid = 351.
deleting insn with uid = 351.
rescanning insn with uid = 367.
deleting insn with uid = 367.
rescanning insn with uid = 370.
deleting insn with uid = 370.
rescanning insn with uid = 375.
deleting insn with uid = 375.
verify found no changes in insn with uid = 378.
rescanning insn with uid = 409.
deleting insn with uid = 409.
rescanning insn with uid = 426.
deleting insn with uid = 426.
rescanning insn with uid = 427.
deleting insn with uid = 427.
rescanning insn with uid = 428.
deleting insn with uid = 428.
rescanning insn with uid = 429.
deleting insn with uid = 429.
rescanning insn with uid = 430.
deleting insn with uid = 430.
rescanning insn with uid = 431.
deleting insn with uid = 431.
rescanning insn with uid = 467.
deleting insn with uid = 467.
rescanning insn with uid = 475.
deleting insn with uid = 475.
rescanning insn with uid = 477.
deleting insn with uid = 477.
rescanning insn with uid = 554.
deleting insn with uid = 554.
rescanning insn with uid = 566.
deleting insn with uid = 566.
ending the processing of deferred insns

;; Function ptrace_hbptriggered (ptrace_hbptriggered)[0:1550]


9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 739, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 739, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 9697, maybe hot.
Predecessors:  5 [96.7%]  (dfs_back) 2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [4.5%]  (fallthru) 5 [95.5%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 436, maybe hot.
Predecessors:  3 [4.5%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [50.0%]  8 [50.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 9261, maybe hot.
Predecessors:  3 [95.5%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [96.7%]  (dfs_back) 6 [3.3%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 303, maybe hot.
Predecessors:  5 [3.3%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 296, maybe hot.
Predecessors:  4 [50.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 739, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 6 [100.0%]  (fallthru) 4 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 8, loop_depth 0, count 0, freq 739, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 13 (  1.4)


ptrace_hbptriggered

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,8u} r12={2d} r13={1d,11u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,13u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={2d,2u} r138={1d,1u,1d} r139={1d,1u,1d} r140={2d,3u} r141={3d,3u} r142={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 224{153d,69u,2e} in 34{33 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 7 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[5]->( 3 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 7 6 4 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 25 to worklist
  Adding insn 35 to worklist
  Adding insn 59 to worklist
  Adding insn 51 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
Finished finding needed instructions:
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 45 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
  Adding insn 42 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
  Adding insn 37 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
  Adding insn 19 to worklist
  Adding insn 18 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 18 (    2)
;; Following path with 6 sets: 2 
deferring rescan insn with uid = 13.
;; Following path with 8 sets: 3 5 6 
;; Following path with 8 sets: 3 4 7 
;; Following path with 17 sets: 8 
deferring rescan insn with uid = 54.
deferring rescan insn with uid = 56.


try_optimize_cfg iteration 1



ptrace_hbptriggered

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,8u} r12={2d} r13={1d,11u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,13u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r137={2d,2u} r138={1d,1u,1d} r139={1d,1u,1d} r140={2d,3u} r141={3d,3u} r142={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 224{153d,69u,2e} in 34{33 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 139 140 142 145 146
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 139 140 142 145 146
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 10 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 6 10 9 2 arch/arm/kernel/ptrace.c:380 (set (reg/v/f:SI 142 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (nil))

(note 9 6 12 2 NOTE_INSN_FUNCTION_BEG)

(insn 12 9 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 139 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 146)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 145)
        (and:SI (reg:SI 146)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 137 [ ivtmp.909 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 145)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 33 2 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 5 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  gen 	 24 [cc] 147
;; live  kill	

;; Pred edge  5 [96.7%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 33 16 17 3 143 "" [1 uses])

(note 17 33 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/kernel/ptrace.c:387 (set (reg/f:SI 147)
        (mem/s/f/j:SI (plus:SI (reg:SI 137 [ ivtmp.909 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/kernel/ptrace.c:387 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 147)
            (reg/v/f:SI 142 [ bp ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 3 arch/arm/kernel/ptrace.c:387 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142


;; Succ edge  4 [4.5%]  (fallthru)
;; Succ edge  5 [95.5%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 141 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 142
;; live  gen 	 24 [cc] 141 148
;; live  kill	

;; Pred edge  3 [4.5%]  (fallthru)
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/ptrace.c:370 (set (reg:SI 148)
        (ashift:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 23 22 24 4 arch/arm/kernel/ptrace.c:370 (set (reg/v:SI 141 [ num ])
        (plus:SI (reg:SI 148)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 24 23 25 4 arch/arm/kernel/ptrace.c:371 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ num ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 29 4 arch/arm/kernel/ptrace.c:371 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142


;; Succ edge  7 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 24 [cc] 137 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  gen 	 24 [cc] 137 140
;; live  kill	

;; Pred edge  3 [95.5%] 
(code_label 29 25 30 5 140 "" [1 uses])

(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 arch/arm/kernel/ptrace.c:386 (set (reg/v:SI 140 [ i ])
        (plus:SI (reg/v:SI 140 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 32 31 34 5 arch/arm/kernel/ptrace.c:386 (set (reg:SI 137 [ ivtmp.909 ])
        (plus:SI (reg:SI 137 [ ivtmp.909 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 34 32 35 5 arch/arm/kernel/ptrace.c:386 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ i ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 5 arch/arm/kernel/ptrace.c:386 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9673 [0x25c9])
        (nil)))
;; End of basic block 5 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140 142


;; Succ edge  3 [96.7%]  (dfs_back)
;; Succ edge  6 [3.3%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 141
;; live  kill	

;; Pred edge  5 [3.3%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 40 6 arch/arm/kernel/ptrace.c:390 discrim 2 (set (reg/v:SI 141 [ num ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 141
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 40 37 41 7 141 "" [1 uses])

(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 arch/arm/kernel/ptrace.c:371 discrim 1 (set (reg/v:SI 141 [ num ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 141 [ num ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 149 150 151 152 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 149 150 151 152 153 154
;; live  kill	 14 [lr]

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  4 [50.0%]  (fallthru)
(code_label 43 42 44 8 142 "" [0 uses])

(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 8 arch/arm/kernel/ptrace.c:392 (set (reg:SI 149)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 8 arch/arm/kernel/ptrace.c:392 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 149)) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 8 arch/arm/kernel/ptrace.c:393 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg/v:SI 141 [ num ])) 167 {*arm_movsi_insn} (nil))

(insn 48 47 49 8 arch/arm/kernel/ptrace.c:394 (set (reg:SI 150)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 8 arch/arm/kernel/ptrace.c:394 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 8 arch/arm/kernel/ptrace.c:395 (set (reg:SI 151 [ <variable>.hw.D.25978.D.25977.info.trigger ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.25978.D.25977.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 8 arch/arm/kernel/ptrace.c:395 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 151 [ <variable>.hw.D.25978.D.25977.info.trigger ])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 138 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 arch/arm/kernel/ptrace.c:397 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 54 53 55 8 arch/arm/kernel/ptrace.c:397 (set (reg:SI 154)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 54 56 8 arch/arm/kernel/ptrace.c:397 (set (reg:SI 153)
        (and:SI (reg:SI 154)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 56 55 57 8 arch/arm/kernel/ptrace.c:397 (set (reg:SI 0 r0)
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))

(insn 57 56 58 8 arch/arm/kernel/ptrace.c:397 (set (reg:SI 1 r1)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))

(insn 58 57 59 8 arch/arm/kernel/ptrace.c:397 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg:SI 153)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 59 58 0 8 arch/arm/kernel/ptrace.c:397 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 13.
deleting insn with uid = 13.
rescanning insn with uid = 54.
deleting insn with uid = 54.
rescanning insn with uid = 56.
deleting insn with uid = 56.
ending the processing of deferred insns

;; Function ptrace_break (ptrace_break)[0:1543]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


ptrace_break

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 163{137d,26u,0e} in 15{14 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 17 sets: 2 
deferring rescan insn with uid = 16.


try_optimize_cfg iteration 1



ptrace_break

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 163{137d,26u,0e} in 15{14 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 138 139
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/ptrace.c:198 (set (reg/v/f:SI 133 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/ptrace.c:198 (set (reg/v/f:SI 134 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/ptrace.c:201 (set (reg:SI 135)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:201 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 135)) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:202 (set (reg:SI 136)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:202 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:203 (set (reg:SI 137)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/ptrace.c:203 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 137)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/kernel/ptrace.c:204 (set (reg:SI 138 [ <variable>.uregs+60 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/ptrace.c:204 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg:SI 138 [ <variable>.uregs+60 ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/kernel/ptrace.c:206 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 16 15 17 2 arch/arm/kernel/ptrace.c:206 (set (reg:SI 0 r0)
        (reg:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 5 [0x5])
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/ptrace.c:206 (set (reg:SI 1 r1)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))

(insn 18 17 19 2 arch/arm/kernel/ptrace.c:206 (set (reg:SI 2 r2)
        (reg/v/f:SI 133 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 0 2 arch/arm/kernel/ptrace.c:206 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x10f01680 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 16.
deleting insn with uid = 16.
ending the processing of deferred insns

;; Function break_trap (break_trap)[0:1544]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


break_trap

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u,1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 156{135d,20u,1e} in 10{9 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 12 to worklist
Finished finding needed instructions:
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;; Following path with 12 sets: 2 
deferring rescan insn with uid = 8.


try_optimize_cfg iteration 1



break_trap

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u,1d} r134={1d,1u} r135={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 156{135d,20u,1e} in 10{9 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 137 138
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/kernel/ptrace.c:210 (set (reg/v/f:SI 135 [ regs ])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 138)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 137)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg:SI 137)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/kernel/ptrace.c:211 (set (reg:SI 1 r1)
        (reg/v/f:SI 135 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 13 2 arch/arm/kernel/ptrace.c:211 (parallel [
            (call (mem:SI (symbol_ref:SI ("ptrace_break") [flags 0x3] <function_decl 0x11539900 ptrace_break>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 12 17 2 arch/arm/kernel/ptrace.c:213 (set (reg:SI 134 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 17 13 23 2 arch/arm/kernel/ptrace.c:213 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 23 17 0 2 arch/arm/kernel/ptrace.c:213 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 8.
deleting insn with uid = 8.
ending the processing of deferred insns

;; Function flush_ptrace_hw_breakpoint (flush_ptrace_hw_breakpoint)[0:1552]


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 303, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 303, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 9697, maybe hot.
Predecessors:  5 [96.9%]  (dfs_back) 2 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [69.8%]  (fallthru) 5 [30.2%] 


Basic block 4 , prev 3, next 5, loop_depth 1, count 0, freq 6771, maybe hot.
Predecessors:  3 [69.8%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 9697, maybe hot.
Predecessors:  3 [30.2%]  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [96.9%]  (dfs_back) 6 [3.1%]  (fallthru)


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 303, maybe hot.
Predecessors:  5 [3.1%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 6, loop_depth 0, count 0, freq 303, maybe hot.
Predecessors:  6 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


flush_ptrace_hw_breakpoint

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 175{137d,38u,0e} in 14{13 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 4 )->[5]->( 3 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 23 to worklist
Finished finding needed instructions:
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 15 to worklist
  Adding insn 13 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
  Adding insn 10 to worklist
  Adding insn 9 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;; Following path with 3 sets: 2 
deferring rescan insn with uid = 2.
deferring rescan insn with uid = 6.
;; Following path with 9 sets: 3 4 
;; Following path with 4 sets: 5 6 


try_optimize_cfg iteration 1



flush_ptrace_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} 
;;    total ref usage 175{137d,38u,0e} in 14{13 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:415 (set (reg:SI 133 [ ivtmp.989 ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/ptrace.c:415 (set (reg/v/f:SI 136 [ tsk ])
        (reg:SI 133 [ ivtmp.989 ])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 21 2 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 5 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 135
;; live  kill	

;; Pred edge  5 [96.9%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 21 7 8 3 156 "" [1 uses])

(note 8 21 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/kernel/ptrace.c:420 (set (reg/f:SI 135 [ D.26985 ])
        (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 3 arch/arm/kernel/ptrace.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ D.26985 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 3 arch/arm/kernel/ptrace.c:420 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135
;; live  gen 	 0 [r0] 137
;; live  kill	 14 [lr]

;; Pred edge  3 [69.8%]  (fallthru)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 4 arch/arm/kernel/ptrace.c:421 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ D.26985 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 4 arch/arm/kernel/ptrace.c:421 (parallel [
            (call (mem:SI (symbol_ref:SI ("unregister_hw_breakpoint") [flags 0x41] <function_decl 0x11524a00 unregister_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 15 14 16 4 arch/arm/kernel/ptrace.c:422 (set (reg:SI 137)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 4 arch/arm/kernel/ptrace.c:422 (set (mem/s/f/j:SI (plus:SI (reg:SI 133 [ ivtmp.989 ])
                (const_int 796 [0x31c])) [0 <variable>.thread.debug.hbp S4 A32])
        (reg:SI 137)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134
;; lr  def 	 24 [cc] 133 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 133 134
;; live  kill	

;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 17 16 18 5 155 "" [1 uses])

(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 5 arch/arm/kernel/ptrace.c:419 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 20 19 22 5 arch/arm/kernel/ptrace.c:419 (set (reg:SI 133 [ ivtmp.989 ])
        (plus:SI (reg:SI 133 [ ivtmp.989 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 22 20 23 5 arch/arm/kernel/ptrace.c:419 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 31 5 arch/arm/kernel/ptrace.c:419 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9688 [0x25d8])
        (nil)))
;; End of basic block 5 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134


;; Succ edge  3 [96.9%]  (dfs_back)
;; Succ edge  6 [3.1%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [3.1%]  (fallthru)
(note 31 23 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 2.
deleting insn with uid = 2.
rescanning insn with uid = 6.
deleting insn with uid = 6.
ending the processing of deferred insns

;; Function regs_query_register_offset (regs_query_register_offset)[0:1536]


9 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 9550, maybe hot.
Predecessors:  6 [95.5%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [4.5%]  (fallthru) 5 [95.5%] 


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 430, maybe hot.
Predecessors:  3 [4.5%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 9120, maybe hot.
Predecessors:  3 [95.5%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru,dfs_back)


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 5 [100.0%]  (fallthru,dfs_back)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [95.5%]  7 [4.5%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 450, maybe hot.
Predecessors:  6 [4.5%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 8, loop_depth 0, count 0, freq 880, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 17 (  1.9)


regs_query_register_offset

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 194{142d,52u,0e} in 19{18 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 5 )->[6]->( 3 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 7 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 30 to worklist
  Adding insn 45 to worklist
Finished finding needed instructions:
processing block 8 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 39 to worklist
  Adding insn 35 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 19 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
  Adding insn 24 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
  Adding insn 32 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138
  Adding insn 29 to worklist
  Adding insn 27 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 17 (  1.9)
;; Following path with 3 sets: 2 
deferring rescan insn with uid = 6.
deferring rescan insn with uid = 7.
;; Following path with 13 sets: 6 3 5 
deferring rescan insn with uid = 16.
;; Following path with 13 sets: 6 3 4 
;; Following path with 4 sets: 6 7 
;; Following path with 3 sets: 8 
deferring rescan insn with uid = 39.


try_optimize_cfg iteration 1



regs_query_register_offset

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={2d} r3={2d} r11={1d,8u} r12={2d} r13={1d,9u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,8u} r26={1d,7u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,3u} r134={2d,1u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 194{142d,52u,0e} in 19{18 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 138 139
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/ptrace.c:95 (set (reg/v/f:SI 138 [ name ])
        (reg:SI 0 r0 [ name ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 28 2 arch/arm/kernel/ptrace.c:97 (set (reg/f:SI 139)
        (reg/v/f:SI 133 [ roff ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))
;; End of basic block 2 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 140
;; live  kill	 14 [lr]

;; Pred edge  6 [95.5%] 
(code_label 28 7 10 3 163 "" [1 uses])

(note 10 28 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/ptrace.c:98 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ D.26778 ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/ptrace.c:98 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ name ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 13 12 14 3 arch/arm/kernel/ptrace.c:98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 13 15 3 arch/arm/kernel/ptrace.c:98 (set (reg:SI 140)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/kernel/ptrace.c:98 (set (reg:SI 135 [ D.26779 ])
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 arch/arm/kernel/ptrace.c:98 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 arch/arm/kernel/ptrace.c:98 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138


;; Succ edge  4 [4.5%]  (fallthru)
;; Succ edge  5 [95.5%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 134
;; live  kill	

;; Pred edge  3 [4.5%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 22 4 arch/arm/kernel/ptrace.c:99 (set (reg:SI 134 [ D.26782 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ roff ])
                (const_int 4 [0x4])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 133
;; live  kill	

;; Pred edge  3 [95.5%] 
(code_label 22 19 23 5 161 "" [1 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 arch/arm/kernel/ptrace.c:97 (set (reg/v/f:SI 133 [ roff ])
        (plus:SI (reg/v/f:SI 133 [ roff ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 24 [cc] 136
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru,dfs_back)
(code_label 25 24 26 6 160 "" [0 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 29 6 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg/f:SI 136 [ D.26778 ])
        (mem/s/f/j:SI (reg/v/f:SI 133 [ roff ]) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 27 30 6 arch/arm/kernel/ptrace.c:97 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 136 [ D.26778 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 6 arch/arm/kernel/ptrace.c:97 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 6 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138


;; Succ edge  3 [95.5%] 
;; Succ edge  7 [4.5%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  6 [4.5%]  (fallthru)
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 7 arch/arm/kernel/ptrace.c:100 (set (reg:SI 134 [ D.26782 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 137
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 33 32 34 8 162 "" [0 uses])

(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 39 8 arch/arm/kernel/ptrace.c:101 (set (reg:SI 137 [ <result> ])
        (reg:SI 134 [ D.26782 ])) 167 {*arm_movsi_insn} (nil))

(insn 39 35 45 8 arch/arm/kernel/ptrace.c:101 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.26782 ])) 167 {*arm_movsi_insn} (nil))

(insn 45 39 0 8 arch/arm/kernel/ptrace.c:101 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 6.
deleting insn with uid = 6.
rescanning insn with uid = 7.
deleting insn with uid = 7.
rescanning insn with uid = 16.
deleting insn with uid = 16.
rescanning insn with uid = 39.
deleting insn with uid = 39.
ending the processing of deferred insns
