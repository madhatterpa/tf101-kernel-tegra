
;; Function module_arch_cleanup (module_arch_cleanup)[0:994]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a4 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r165,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r166: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS

  a0(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 38(l0): point = 1
   Insn 33(l0): point = 3
   Insn 52(l1): point = 6
   Insn 51(l1): point = 8
   Insn 45(l1): point = 11
   Insn 42(l1): point = 14
   Insn 41(l1): point = 16
   Insn 44(l1): point = 18
   Insn 49(l1): point = 20
   Insn 48(l1): point = 22
   Insn 40(l1): point = 24
 a0(r165): [1..1]
 a1(r164): [1..3]
 a2(r164): [6..26]
 a3(r165): [6..26]
 a4(r166): [17..24]
 Rebuilding regno allocno list for 166
Compressing live ranges: from 27 to 6 - 22%
Ranges after the compression:
 a0(r165): [2..5] [0..0]
 a1(r164): [2..5] [0..1]
 a4(r166): [3..4]
+++Allocating 24 bytes for conflict table (uncompressed size 40)
;; a0(r165,l0) conflicts: a1(r164,l0) a4(r166,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r164,l0) conflicts: a0(r165,l0) a4(r166,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r166,l0) conflicts: a0(r165,l0) a1(r164,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=2, blocks=7, points=6
    allocnos=5, copies=0, conflicts=0, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r165 1r164 4r166
    modified regnos: 164 165 166
    border:
    Pressure: GENERAL_REGS=5
    Reg 165 of GENERAL_REGS has 2 regs less
    Reg 164 of GENERAL_REGS has 2 regs less
    Reg 166 of GENERAL_REGS has 2 regs less
      Pushing a4(r166,l0)
      Pushing a1(r164,l0)
      Pushing a0(r165,l0)
      Popping a0(r165,l0)  -- assign reg 4
      Popping a1(r164,l0)  -- assign reg 5
      Popping a4(r166,l0)  -- assign reg 3
Disposition:
    1:r164 l0     5    0:r165 l0     4    4:r166 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=33, live_throughout: 13, 14, dead_or_set: 0, 164
insn=38, live_throughout: 13, 14, 164, dead_or_set: 165
insn=50, live_throughout: 13, 14, 164, 165, dead_or_set: 
insn=40, live_throughout: 13, 14, 164, 165, dead_or_set: 166
insn=48, live_throughout: 13, 14, 164, 166, dead_or_set: 165
insn=49, live_throughout: 13, 14, 165, 166, dead_or_set: 164
insn=44, live_throughout: 13, 14, 164, 165, 166, dead_or_set: 0
insn=41, live_throughout: 0, 13, 14, 164, 165, dead_or_set: 166
insn=42, live_throughout: 0, 13, 14, 164, 165, dead_or_set: 
insn=45, live_throughout: 13, 164, 165, dead_or_set: 0, 14
insn=46, live_throughout: 13, 14, 164, 165, dead_or_set: 
insn=51, live_throughout: 13, 14, 164, 165, dead_or_set: 
insn=52, live_throughout: 13, 14, 164, 165, dead_or_set: 
changing reg in insn 33
changing reg in insn 49
changing reg in insn 49
changing reg in insn 40
changing reg in insn 48
changing reg in insn 38
changing reg in insn 51
changing reg in insn 48
changing reg in insn 40
changing reg in insn 44
changing reg in insn 41


try_optimize_cfg iteration 1

Deleting fallthru block 6.
deleting insn with uid = 60.
deleting block 6


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 45.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 11 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


module_arch_cleanup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={3d,2u} r4={2d,2u} r5={2d,2u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 149{132d,17u,0e} in 11{10 regular + 1 call} insns.
(note 32 0 35 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 32 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 34 35 33 2 NOTE_INSN_FUNCTION_BEG)

(insn 33 34 38 2 arch/arm/kernel/module.c:337 (set (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
        (reg:SI 0 r0 [ mod ])) 167 {*arm_movsi_insn} (nil))

(insn 38 33 50 2 arch/arm/kernel/module.c:341 (set (reg/v:SI 4 r4 [orig:165 i ] [165])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 5 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [80.0%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 50 38 39 3 3 "" [1 uses])

(note 39 50 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 48 3 arch/arm/kernel/module.c:342 (set (reg/f:SI 3 r3 [orig:166 D.18763 ] [166])
        (mem/s/f/j:SI (plus:SI (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
                (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 48 40 49 3 arch/arm/kernel/module.c:341 (set (reg/v:SI 4 r4 [orig:165 i ] [165])
        (plus:SI (reg/v:SI 4 r4 [orig:165 i ] [165])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 49 48 44 3 arch/arm/kernel/module.c:341 (set (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
        (plus:SI (reg:SI 5 r5 [orig:164 ivtmp.305 ] [164])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 44 49 41 3 arch/arm/kernel/module.c:343 (set (reg:SI 0 r0)
        (reg/f:SI 3 r3 [orig:166 D.18763 ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 41 44 42 3 arch/arm/kernel/module.c:342 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:166 D.18763 ] [166])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 3 arch/arm/kernel/module.c:342 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  3 [69.8%]  (fallthru)
(note 43 42 45 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 45 43 46 4 arch/arm/kernel/module.c:343 (parallel [
            (call (mem:SI (symbol_ref:SI ("unwind_table_del") [flags 0x41] <function_decl 0x11169e80 unwind_table_del>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 46 45 47 5 2 "" [1 uses])

(note 47 46 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 51 47 52 5 arch/arm/kernel/module.c:341 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:165 i ] [165])
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 82 5 arch/arm/kernel/module.c:341 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7999 [0x1f3f])
        (nil)))
;; End of basic block 5 -> ( 3 1)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  3 [80.0%]  (dfs_back)
;; Succ edge  EXIT [20.0%]  (fallthru,loop_exit)

(note 82 52 83 NOTE_INSN_DELETED)

(note 83 82 0 NOTE_INSN_DELETED)


;; Function module_finalize (module_finalize)[0:993]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 58 count 100 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 58 count 110 (  2.8)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a30 (r219,l2) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r215,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r214,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r212,l3) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r207,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r206,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r201,l2) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r178,l1) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r166,l2) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r166,l3) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r165,l1) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r165,l2) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r162,l1) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r151,l2) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r150,l2) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r145,l1) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r144,l3) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r143,l3) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r141,l2) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r140,l2) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a1(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a6(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r144,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r166,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a25(r212,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a27(r141,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r165,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r166,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a30(r219,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a32(r151,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r201,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a35(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:160000
  a37(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a39(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a41(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r178,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r219: preferred GENERAL_REGS, alternative NO_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS

  a0(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a1(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r214,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r206,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a6(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a8(r207,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r144,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r166,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a25(r212,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r140,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a27(r141,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r165,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r166,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a30(r219,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a32(r151,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a33(r201,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a35(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a36(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:160000
  a37(r165,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a38(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a39(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a40(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a41(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r178,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 273(l0): point = 0
   Insn 267(l0): point = 2
   Insn 260(l0): point = 5
   Insn 258(l0): point = 7
   Insn 259(l0): point = 9
   Insn 256(l0): point = 12
   Insn 255(l0): point = 14
   Insn 254(l0): point = 16
   Insn 253(l0): point = 18
   Insn 251(l0): point = 21
   Insn 250(l0): point = 23
   Insn 313(l0): point = 26
   Insn 310(l0): point = 29
   Insn 219(l0): point = 31
   Insn 218(l0): point = 33
   Insn 223(l0): point = 35
   Insn 217(l0): point = 37
   Insn 220(l0): point = 39
   Insn 214(l0): point = 41
   Insn 188(l0): point = 44
   Insn 186(l0): point = 46
   Insn 185(l0): point = 48
   Insn 290(l0): point = 51
   Insn 28(l0): point = 53
   Insn 20(l0): point = 55
   Insn 19(l0): point = 57
   Insn 24(l0): point = 59
   Insn 18(l0): point = 61
   Insn 29(l0): point = 63
   Insn 10(l0): point = 65
   Insn 21(l0): point = 67
   Insn 27(l0): point = 69
   Insn 15(l0): point = 71
   Insn 26(l0): point = 73
   Insn 16(l0): point = 75
   Insn 9(l0): point = 77
   Insn 8(l0): point = 79
   Insn 243(l3): point = 82
   Insn 242(l3): point = 84
   Insn 279(l3): point = 86
   Insn 238(l3): point = 89
   Insn 236(l3): point = 92
   Insn 235(l3): point = 94
   Insn 232(l3): point = 96
   Insn 231(l3): point = 98
   Insn 228(l3): point = 100
   Insn 212(l2): point = 103
   Insn 209(l2): point = 105
   Insn 211(l2): point = 107
   Insn 205(l2): point = 110
   Insn 203(l2): point = 112
   Insn 201(l2): point = 114
   Insn 199(l2): point = 116
   Insn 202(l2): point = 118
   Insn 200(l2): point = 120
   Insn 197(l2): point = 123
   Insn 196(l2): point = 125
   Insn 195(l2): point = 127
   Insn 191(l2): point = 130
   Insn 190(l2): point = 132
   Insn 208(l2): point = 134
   Insn 189(l2): point = 136
   Insn 194(l2): point = 138
   Insn 183(l1): point = 141
   Insn 182(l1): point = 143
   Insn 178(l1): point = 146
   Insn 175(l1): point = 149
   Insn 173(l1): point = 152
   Insn 172(l1): point = 154
   Insn 169(l1): point = 156
   Insn 167(l1): point = 158
   Insn 168(l1): point = 160
   Insn 308(l1): point = 163
   Insn 161(l1): point = 165
   Insn 159(l1): point = 168
   Insn 158(l1): point = 170
   Insn 155(l1): point = 172
   Insn 154(l1): point = 174
   Insn 289(l1): point = 176
   Insn 306(l1): point = 179
   Insn 147(l1): point = 181
   Insn 145(l1): point = 184
   Insn 144(l1): point = 186
   Insn 141(l1): point = 188
   Insn 140(l1): point = 190
   Insn 288(l1): point = 192
   Insn 304(l1): point = 195
   Insn 133(l1): point = 197
   Insn 131(l1): point = 200
   Insn 130(l1): point = 202
   Insn 127(l1): point = 204
   Insn 126(l1): point = 206
   Insn 287(l1): point = 208
   Insn 302(l1): point = 211
   Insn 119(l1): point = 213
   Insn 117(l1): point = 216
   Insn 116(l1): point = 218
   Insn 113(l1): point = 220
   Insn 112(l1): point = 222
   Insn 286(l1): point = 224
   Insn 300(l1): point = 227
   Insn 105(l1): point = 229
   Insn 103(l1): point = 232
   Insn 102(l1): point = 234
   Insn 99(l1): point = 236
   Insn 98(l1): point = 238
   Insn 285(l1): point = 240
   Insn 298(l1): point = 243
   Insn 91(l1): point = 245
   Insn 89(l1): point = 248
   Insn 88(l1): point = 250
   Insn 85(l1): point = 252
   Insn 84(l1): point = 254
   Insn 284(l1): point = 256
   Insn 296(l1): point = 259
   Insn 77(l1): point = 261
   Insn 75(l1): point = 264
   Insn 74(l1): point = 266
   Insn 71(l1): point = 268
   Insn 70(l1): point = 270
   Insn 283(l1): point = 272
   Insn 294(l1): point = 275
   Insn 63(l1): point = 277
   Insn 61(l1): point = 280
   Insn 60(l1): point = 282
   Insn 57(l1): point = 284
   Insn 56(l1): point = 286
   Insn 282(l1): point = 288
   Insn 292(l1): point = 291
   Insn 49(l1): point = 293
   Insn 47(l1): point = 296
   Insn 46(l1): point = 298
   Insn 43(l1): point = 300
   Insn 42(l1): point = 302
   Insn 281(l1): point = 304
   Insn 39(l1): point = 306
   Insn 37(l1): point = 309
   Insn 36(l1): point = 311
   Insn 33(l1): point = 313
   Insn 34(l1): point = 315
 a0(r166): [29..77] [8..25]
 a1(r215): [15..16]
 a2(r214): [17..18]
 a3(r144): [29..31]
 a4(r206): [32..33]
 a5(r165): [32..79]
 a6(r205): [34..37]
 a7(r143): [29..35]
 a8(r207): [36..39]
 a9(r141): [36..46]
 a10(r202): [38..41]
 a11(r219): [44..44]
 a12(r140): [44..48]
 a13(r167): [49..65]
 a14(r147): [51..55]
 a15(r172): [56..57]
 a16(r171): [58..61]
 a17(r146): [51..59]
 a18(r173): [60..67]
 a19(r170): [60..75]
 a20(r168): [62..71]
 a21(r148): [51..63]
 a22(r143): [82..102]
 a23(r144): [82..102]
 a24(r166): [82..102]
 a25(r212): [99..100]
 a26(r140): [103..140]
 a27(r141): [103..140]
 a28(r165): [103..140]
 a29(r166): [103..140]
 a30(r219): [103..140]
 a31(r150): [115..127]
 a32(r151): [117..136]
 a33(r201): [128..138]
 a34(r146): [141..317]
 a35(r147): [141..317]
 a36(r148): [141..317]
 a37(r165): [141..317]
 a38(r166): [141..317]
 a39(r167): [141..317]
 a40(r145): [296..306] [280..290] [264..274] [248..258] [232..242] [216..226] [200..210] [184..194] [168..178] [161..162]
 a41(r162): [307..313]
 a42(r178): [312..315]
 Rebuilding regno allocno list for 212
 Rebuilding regno allocno list for 201
 Rebuilding regno allocno list for 178
 Rebuilding regno allocno list for 162
 Rebuilding regno allocno list for 151
 Rebuilding regno allocno list for 150
 Rebuilding regno allocno list for 145
Compressing live ranges: from 318 to 75 - 23%
Ranges after the compression:
 a0(r166): [37..74] [6..35] [0..5]
 a1(r215): [1..2]
 a2(r214): [3..4]
 a3(r144): [37..40] [6..7]
 a4(r206): [8..9]
 a5(r165): [41..74] [8..36]
 a6(r205): [10..13]
 a7(r143): [37..40] [6..11]
 a8(r207): [12..15]
 a9(r141): [41..48] [12..18]
 a10(r202): [14..16]
 a11(r219): [41..48] [17..17]
 a12(r140): [41..48] [17..19]
 a13(r167): [49..74] [20..31]
 a14(r147): [49..74] [21..22]
 a15(r172): [23..24]
 a16(r171): [25..28]
 a17(r146): [49..74] [21..26]
 a18(r173): [27..32]
 a19(r170): [27..34]
 a20(r168): [29..33]
 a21(r148): [49..74] [21..30]
 a25(r212): [38..39]
 a31(r150): [42..44]
 a32(r151): [43..46]
 a33(r201): [45..47]
 a40(r145): [68..69] [66..67] [64..65] [62..63] [60..61] [58..59] [56..57] [54..55] [52..53] [50..51]
 a41(r162): [70..72]
 a42(r178): [71..73]
+++Allocating 232 bytes for conflict table (uncompressed size 344)
;; a0(r166,l0) conflicts: a1(r215,l0) a2(r214,l0) a3(r144,l0) a7(r143,l0) a4(r206,l0) a5(r165,l0) a6(r205,l0) a8(r207,l0) a9(r141,l0) a10(r202,l0) a11(r219,l0) a12(r140,l0) a13(r167,l0) a14(r147,l0) a17(r146,l0) a21(r148,l0) a15(r172,l0) a16(r171,l0) a18(r173,l0) a19(r170,l0) a20(r168,l0) a25(r212,l0) a31(r150,l0) a32(r151,l0) a33(r201,l0) a40(r145,l0) a41(r162,l0) a42(r178,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a1(r215,l0) conflicts: a0(r166,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r214,l0) conflicts: a0(r166,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r144,l0) conflicts: a0(r166,l0) a7(r143,l0) a25(r212,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r206,l0) conflicts: a0(r166,l0) a7(r143,l0) a5(r165,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r165,l0) conflicts: a0(r166,l0) a7(r143,l0) a4(r206,l0) a6(r205,l0) a8(r207,l0) a9(r141,l0) a10(r202,l0) a11(r219,l0) a12(r140,l0) a13(r167,l0) a14(r147,l0) a17(r146,l0) a21(r148,l0) a15(r172,l0) a16(r171,l0) a18(r173,l0) a19(r170,l0) a20(r168,l0) a31(r150,l0) a32(r151,l0) a33(r201,l0) a40(r145,l0) a41(r162,l0) a42(r178,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a6(r205,l0) conflicts: a0(r166,l0) a7(r143,l0) a5(r165,l0) a8(r207,l0) a9(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r143,l0) conflicts: a0(r166,l0) a3(r144,l0) a4(r206,l0) a5(r165,l0) a6(r205,l0) a25(r212,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r207,l0) conflicts: a0(r166,l0) a5(r165,l0) a6(r205,l0) a9(r141,l0) a10(r202,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r141,l0) conflicts: a0(r166,l0) a5(r165,l0) a6(r205,l0) a8(r207,l0) a10(r202,l0) a11(r219,l0) a12(r140,l0) a31(r150,l0) a32(r151,l0) a33(r201,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a10(r202,l0) conflicts: a0(r166,l0) a5(r165,l0) a8(r207,l0) a9(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r219,l0) conflicts: a0(r166,l0) a5(r165,l0) a9(r141,l0) a12(r140,l0) a31(r150,l0) a32(r151,l0) a33(r201,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a12(r140,l0) conflicts: a0(r166,l0) a5(r165,l0) a9(r141,l0) a11(r219,l0) a31(r150,l0) a32(r151,l0) a33(r201,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a13(r167,l0) conflicts: a0(r166,l0) a5(r165,l0) a14(r147,l0) a17(r146,l0) a21(r148,l0) a15(r172,l0) a16(r171,l0) a18(r173,l0) a19(r170,l0) a20(r168,l0) a40(r145,l0) a41(r162,l0) a42(r178,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a14(r147,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a17(r146,l0) a21(r148,l0) a40(r145,l0) a41(r162,l0) a42(r178,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a15(r172,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a17(r146,l0) a21(r148,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a16(r171,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a17(r146,l0) a21(r148,l0) a18(r173,l0) a19(r170,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a17(r146,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a14(r147,l0) a21(r148,l0) a15(r172,l0) a16(r171,l0) a40(r145,l0) a41(r162,l0) a42(r178,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a18(r173,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a21(r148,l0) a16(r171,l0) a19(r170,l0) a20(r168,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a19(r170,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a21(r148,l0) a16(r171,l0) a18(r173,l0) a20(r168,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a20(r168,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a21(r148,l0) a18(r173,l0) a19(r170,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a21(r148,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a14(r147,l0) a17(r146,l0) a15(r172,l0) a16(r171,l0) a18(r173,l0) a19(r170,l0) a20(r168,l0) a40(r145,l0) a41(r162,l0) a42(r178,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a25(r212,l0) conflicts: a0(r166,l0) a3(r144,l0) a7(r143,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a31(r150,l0) conflicts: a0(r166,l0) a5(r165,l0) a9(r141,l0) a11(r219,l0) a12(r140,l0) a32(r151,l0)
;;     total conflict hard regs: 0 1 3 14
;;     conflict hard regs: 0 1 3 14
;; a32(r151,l0) conflicts: a0(r166,l0) a5(r165,l0) a9(r141,l0) a11(r219,l0) a12(r140,l0) a31(r150,l0) a33(r201,l0)
;;     total conflict hard regs: 1 3 14
;;     conflict hard regs: 1 3 14
;; a33(r201,l0) conflicts: a0(r166,l0) a5(r165,l0) a9(r141,l0) a11(r219,l0) a12(r140,l0) a32(r151,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a40(r145,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a14(r147,l0) a17(r146,l0) a21(r148,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a41(r162,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a14(r147,l0) a17(r146,l0) a21(r148,l0) a42(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a42(r178,l0) conflicts: a0(r166,l0) a5(r165,l0) a13(r167,l0) a14(r147,l0) a17(r146,l0) a21(r148,l0) a41(r162,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a6(r205)<->a10(r202)@125:shuffle
  cp1:a7(r143)<->a8(r207)@125:shuffle
  cp2:a7(r143)<->a9(r141)@125:shuffle
  cp3:a3(r144)<->a5(r165)@125:shuffle
  cp4:a3(r144)<->a4(r206)@125:shuffle
  cp5:a12(r140)<->a13(r167)@1000:move
  cp6:a40(r145)<->a41(r162)@125:shuffle
  cp7:a16(r171)<->a20(r168)@125:shuffle
  cp8:a17(r146)<->a18(r173)@125:shuffle
  cp9:a17(r146)<->a19(r170)@125:shuffle
  cp10:a14(r147)<->a15(r172)@125:shuffle
  regions=4, blocks=40, points=75
    allocnos=43, copies=11, conflicts=2, ranges=50

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r166 1r215 2r214 3r144 4r206 5r165 6r205 7r143 8r207 9r141 10r202 11r219 12r140 13r167 14r147 15r172 16r171 17r146 18r173 19r170 20r168 21r148 25r212 31r150 32r151 33r201 40r145 41r162 42r178
    modified regnos: 140 141 143 144 145 146 147 148 150 151 162 165 166 167 168 170 171 172 173 178 201 202 205 206 207 212 214 215 219
    border:
    Pressure: GENERAL_REGS=10
    Reg 166 of GENERAL_REGS has 5 regs less
    Reg 215 of GENERAL_REGS has 1 regs less
    Reg 214 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 3 regs less
    Reg 206 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 5 regs less
    Reg 205 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
    Reg 207 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 5 regs less
    Reg 202 of GENERAL_REGS has 1 regs less
    Reg 219 of GENERAL_REGS has 5 regs less
    Reg 140 of GENERAL_REGS has 5 regs less
    Reg 167 of GENERAL_REGS has 3 regs less
    Reg 147 of GENERAL_REGS has 3 regs less
    Reg 172 of GENERAL_REGS has 2 regs less
    Reg 171 of GENERAL_REGS has 2 regs less
    Reg 146 of GENERAL_REGS has 3 regs less
    Reg 173 of GENERAL_REGS has 3 regs less
    Reg 170 of GENERAL_REGS has 3 regs less
    Reg 168 of GENERAL_REGS has 3 regs less
    Reg 148 of GENERAL_REGS has 3 regs less
    Reg 212 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 4 regs less
    Reg 151 of GENERAL_REGS has 3 regs less
    Reg 201 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 3 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 178 of GENERAL_REGS has 1 regs less
      Pushing a42(r178,l0)
      Pushing a41(r162,l0)
      Pushing a33(r201,l0)
      Pushing a25(r212,l0)
      Pushing a10(r202,l0)
      Pushing a8(r207,l0)
      Pushing a6(r205,l0)
      Pushing a4(r206,l0)
      Pushing a2(r214,l0)
      Pushing a1(r215,l0)
      Pushing a16(r171,l0)
      Pushing a15(r172,l0)
      Pushing a20(r168,l0)
      Pushing a18(r173,l0)
      Pushing a17(r146,l0)
      Pushing a14(r147,l0)
      Pushing a13(r167,l0)
      Pushing a7(r143,l0)
      Pushing a3(r144,l0)
      Pushing a32(r151,l0)
      Pushing a19(r170,l0)
      Pushing a40(r145,l0)
      Pushing a21(r148,l0)
      Pushing a31(r150,l0)
      Pushing a11(r219,l0)(potential spill: pri=3000, cost=30000)
      Pushing a12(r140,l0)
      Pushing a5(r165,l0)
      Pushing a9(r141,l0)
      Pushing a0(r166,l0)
      Popping a0(r166,l0)  -- assign reg 4
      Popping a9(r141,l0)  -- assign reg 5
      Popping a5(r165,l0)  -- assign reg 6
      Popping a12(r140,l0)  -- assign reg 7
      Popping a11(r219,l0)  -- assign reg 8
      Popping a31(r150,l0)  -- assign reg 2
      Popping a21(r148,l0)  -- assign reg 5
      Popping a40(r145,l0)  -- assign reg 8
      Popping a19(r170,l0)  -- assign reg 3
      Popping a32(r151,l0)  -- assign reg 0
      Popping a3(r144,l0)  -- assign reg 6
      Popping a7(r143,l0)  -- assign reg 5
      Popping a13(r167,l0)  -- assign reg 7
      Popping a14(r147,l0)  -- assign reg 10
      Popping a17(r146,l0)  -- assign reg 9
      Popping a18(r173,l0)  -- assign reg 9
      Popping a20(r168,l0)  -- assign reg 12
      Popping a15(r172,l0)  -- assign reg 10
      Popping a16(r171,l0)  -- assign reg 12
      Popping a1(r215,l0)  -- assign reg 3
      Popping a2(r214,l0)  -- assign reg 3
      Popping a4(r206,l0)  -- assign reg 3
      Popping a6(r205,l0)  -- assign reg 3
      Popping a8(r207,l0)  -- assign reg 2
      Popping a10(r202,l0)  -- assign reg 3
      Popping a25(r212,l0)  -- assign reg 1
      Popping a33(r201,l0)  -- assign reg 3
      Popping a41(r162,l0)  -- assign reg 8
      Popping a42(r178,l0)  -- assign reg 3
Disposition:
   12:r140 l0     7    9:r141 l0     5    7:r143 l0     5    3:r144 l0     6
   40:r145 l0     8   17:r146 l0     9   14:r147 l0    10   21:r148 l0     5
   31:r150 l0     2   32:r151 l0     0   41:r162 l0     8    5:r165 l0     6
    0:r166 l0     4   13:r167 l0     7   20:r168 l0    12   19:r170 l0     3
   16:r171 l0    12   15:r172 l0    10   18:r173 l0     9   42:r178 l0     3
   33:r201 l0     3   10:r202 l0     3    6:r205 l0     3    4:r206 l0     3
    8:r207 l0     2   25:r212 l0     1    2:r214 l0     3    1:r215 l0     3
   11:r219 l0     8
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 1, 2, 13, dead_or_set: 0, 165
insn=9, live_throughout: 2, 13, 165, dead_or_set: 1, 166
insn=16, live_throughout: 2, 13, 165, 166, dead_or_set: 170
insn=26, live_throughout: 2, 13, 165, 166, 170, dead_or_set: 0
insn=15, live_throughout: 0, 2, 13, 165, 166, 170, dead_or_set: 168
insn=27, live_throughout: 0, 2, 13, 165, 166, 168, 170, dead_or_set: 1
insn=21, live_throughout: 0, 1, 2, 13, 165, 166, 168, 170, dead_or_set: 173
insn=10, live_throughout: 0, 1, 13, 165, 166, 168, 170, 173, dead_or_set: 2, 167
insn=29, live_throughout: 0, 1, 13, 165, 166, 167, 168, 170, 173, dead_or_set: 148
insn=18, live_throughout: 0, 1, 13, 148, 165, 166, 167, 170, 173, dead_or_set: 168, 171
insn=24, live_throughout: 0, 1, 13, 148, 165, 166, 167, 171, dead_or_set: 146, 170, 173
insn=19, live_throughout: 0, 1, 13, 146, 148, 165, 166, 167, dead_or_set: 171, 172
insn=20, live_throughout: 0, 1, 13, 146, 148, 165, 166, 167, dead_or_set: 147, 172
insn=28, live_throughout: 13, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=290, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=181, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=34, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 178
insn=33, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, 178, dead_or_set: 162
insn=36, live_throughout: 13, 14, 146, 147, 148, 162, 165, 166, 167, dead_or_set: 178
insn=37, live_throughout: 13, 14, 146, 147, 148, 162, 165, 166, 167, dead_or_set: 
insn=39, live_throughout: 13, 146, 147, 148, 165, 166, 167, dead_or_set: 145, 162
insn=281, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=42, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=43, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=46, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=47, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=49, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=292, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=52, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=282, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=56, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=57, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=60, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=61, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=63, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=294, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=66, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=283, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=70, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=71, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=74, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=75, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=77, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=296, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=80, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=284, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=84, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=85, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=88, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=89, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=91, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=298, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=94, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=285, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=98, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=99, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=102, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=103, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=105, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=300, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=108, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=286, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=112, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=113, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=116, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=117, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=119, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=302, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=122, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=287, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=126, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=127, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=130, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=131, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=133, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=304, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=136, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=288, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=140, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=141, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=144, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=145, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=147, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=306, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=150, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=289, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=154, live_throughout: 0, 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 1
insn=155, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=158, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=159, live_throughout: 13, 14, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=161, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=308, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=164, live_throughout: 13, 145, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=168, live_throughout: 13, 146, 147, 148, 165, 166, 167, dead_or_set: 1, 145
insn=167, live_throughout: 1, 13, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=169, live_throughout: 13, 146, 147, 148, 165, 166, 167, dead_or_set: 0, 1, 14
insn=172, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 0
insn=173, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=175, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=176, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=178, live_throughout: 13, 14, 146, 147, 165, 166, 167, dead_or_set: 148
insn=179, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=182, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=183, live_throughout: 13, 14, 146, 147, 148, 165, 166, 167, dead_or_set: 
insn=185, live_throughout: 13, 14, 165, 166, dead_or_set: 140, 167
insn=186, live_throughout: 13, 14, 140, 165, 166, dead_or_set: 141
insn=188, live_throughout: 13, 14, 140, 141, 165, 166, dead_or_set: 219
insn=210, live_throughout: 13, 14, 140, 141, 165, 166, 219, dead_or_set: 
insn=194, live_throughout: 13, 14, 140, 141, 165, 166, 219, dead_or_set: 201
insn=189, live_throughout: 13, 14, 140, 141, 165, 166, 201, 219, dead_or_set: 151
insn=208, live_throughout: 13, 14, 140, 151, 165, 166, 201, 219, dead_or_set: 141
insn=190, live_throughout: 13, 14, 140, 141, 151, 165, 166, 201, 219, dead_or_set: 
insn=191, live_throughout: 13, 14, 140, 141, 151, 165, 166, 201, 219, dead_or_set: 
insn=195, live_throughout: 13, 14, 140, 141, 151, 165, 166, 219, dead_or_set: 150, 201
insn=196, live_throughout: 13, 14, 140, 141, 150, 151, 165, 166, 219, dead_or_set: 
insn=197, live_throughout: 13, 14, 140, 141, 150, 151, 165, 166, 219, dead_or_set: 
insn=200, live_throughout: 13, 140, 141, 150, 151, 165, 166, 219, dead_or_set: 1
insn=202, live_throughout: 1, 13, 140, 141, 150, 151, 165, 166, 219, dead_or_set: 3
insn=199, live_throughout: 1, 3, 13, 140, 141, 150, 165, 166, 219, dead_or_set: 0, 151
insn=201, live_throughout: 0, 1, 3, 13, 140, 141, 165, 166, 219, dead_or_set: 2, 150
insn=203, live_throughout: 13, 140, 141, 165, 166, 219, dead_or_set: 0, 1, 2, 3, 14
insn=205, live_throughout: 13, 14, 140, 141, 165, 166, 219, dead_or_set: 0
insn=206, live_throughout: 13, 14, 140, 141, 165, 166, 219, dead_or_set: 
insn=211, live_throughout: 13, 14, 140, 141, 165, 166, 219, dead_or_set: 
insn=209, live_throughout: 13, 14, 24, 141, 165, 166, 219, dead_or_set: 140
insn=212, live_throughout: 13, 14, 140, 141, 165, 166, 219, dead_or_set: 
insn=214, live_throughout: 13, 14, 141, 165, 166, dead_or_set: 202
insn=220, live_throughout: 13, 14, 141, 165, 166, 202, dead_or_set: 207
insn=217, live_throughout: 13, 14, 141, 165, 166, 207, dead_or_set: 202, 205
insn=223, live_throughout: 13, 14, 165, 166, 205, dead_or_set: 141, 143, 207
insn=218, live_throughout: 13, 14, 143, 165, 166, dead_or_set: 205, 206
insn=219, live_throughout: 13, 14, 143, 166, dead_or_set: 144, 165, 206
insn=310, live_throughout: 13, 14, 143, 144, 166, dead_or_set: 
insn=241, live_throughout: 0, 13, 143, 144, 166, dead_or_set: 
insn=228, live_throughout: 0, 13, 143, 144, 166, dead_or_set: 212
insn=231, live_throughout: 0, 13, 143, 144, 166, dead_or_set: 1, 212
insn=232, live_throughout: 13, 143, 144, 166, dead_or_set: 0, 1, 14
insn=235, live_throughout: 13, 14, 143, 144, 166, dead_or_set: 0
insn=236, live_throughout: 13, 14, 143, 144, 166, dead_or_set: 
insn=238, live_throughout: 13, 14, 143, 144, dead_or_set: 166
insn=239, live_throughout: 13, 14, 143, 144, 166, dead_or_set: 
insn=279, live_throughout: 13, 14, 143, 144, 166, dead_or_set: 0
insn=242, live_throughout: 0, 13, 14, 143, 144, 166, dead_or_set: 
insn=243, live_throughout: 0, 13, 14, 143, 144, 166, dead_or_set: 
insn=313, live_throughout: 13, 14, dead_or_set: 
insn=247, live_throughout: 13, 14, 166, dead_or_set: 
insn=250, live_throughout: 13, 14, 166, dead_or_set: 
insn=251, live_throughout: 13, 14, 166, dead_or_set: 
insn=253, live_throughout: 13, 14, 166, dead_or_set: 214
insn=254, live_throughout: 13, 14, 166, dead_or_set: 214, 215
insn=255, live_throughout: 13, 14, 166, dead_or_set: 215
insn=256, live_throughout: 13, 14, 166, dead_or_set: 
insn=259, live_throughout: 13, 166, dead_or_set: 1
insn=258, live_throughout: 1, 13, dead_or_set: 0, 166
insn=260, live_throughout: 13, dead_or_set: 0, 1, 14
insn=261, live_throughout: 13, 14, dead_or_set: 
insn=267, live_throughout: 13, 14, dead_or_set: 0
insn=273, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 170: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 178: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 212: (insn_list:REG_DEP_TRUE 228 (nil))
init_insns for 214: (insn_list:REG_DEP_TRUE 253 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 188 (nil))
changing reg in insn 209
changing reg in insn 185
changing reg in insn 205
changing reg in insn 209
changing reg in insn 208
changing reg in insn 186
changing reg in insn 223
changing reg in insn 217
changing reg in insn 194
changing reg in insn 189
changing reg in insn 211
changing reg in insn 208
changing reg in insn 223
changing reg in insn 242
changing reg in insn 219
changing reg in insn 231
changing reg in insn 39
changing reg in insn 168
changing reg in insn 154
changing reg in insn 140
changing reg in insn 126
changing reg in insn 112
changing reg in insn 98
changing reg in insn 84
changing reg in insn 70
changing reg in insn 56
changing reg in insn 42
changing reg in insn 24
changing reg in insn 182
changing reg in insn 20
changing reg in insn 39
changing reg in insn 178
changing reg in insn 29
changing reg in insn 182
changing reg in insn 178
changing reg in insn 175
changing reg in insn 161
changing reg in insn 147
changing reg in insn 133
changing reg in insn 119
changing reg in insn 105
changing reg in insn 91
changing reg in insn 77
changing reg in insn 63
changing reg in insn 49
changing reg in insn 34
changing reg in insn 33
changing reg in insn 34
changing reg in insn 195
changing reg in insn 202
changing reg in insn 201
changing reg in insn 196
changing reg in insn 189
changing reg in insn 200
changing reg in insn 199
changing reg in insn 190
changing reg in insn 33
changing reg in insn 39
changing reg in insn 8
changing reg in insn 219
changing reg in insn 20
changing reg in insn 220
changing reg in insn 214
changing reg in insn 21
changing reg in insn 15
changing reg in insn 238
changing reg in insn 9
changing reg in insn 223
changing reg in insn 217
changing reg in insn 24
changing reg in insn 18
changing reg in insn 259
changing reg in insn 258
changing reg in insn 250
changing reg in insn 242
changing reg in insn 238
changing reg in insn 228
changing reg in insn 29
changing reg in insn 228
changing reg in insn 10
changing reg in insn 185
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 24
changing reg in insn 18
changing reg in insn 27
changing reg in insn 18
changing reg in insn 19
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 34
changing reg in insn 36
changing reg in insn 194
changing reg in insn 195
changing reg in insn 214
changing reg in insn 217
changing reg in insn 217
changing reg in insn 218
changing reg in insn 218
changing reg in insn 219
changing reg in insn 220
changing reg in insn 223
changing reg in insn 228
changing reg in insn 231
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 255
changing reg in insn 188
changing reg in insn 194
changing reg in insn 189
Spilling for insn 49.
Spilling for insn 63.
Spilling for insn 77.
Spilling for insn 91.
Spilling for insn 105.
Spilling for insn 119.
Spilling for insn 133.
Spilling for insn 147.
Spilling for insn 161.
Spilling for insn 175.
Spilling for insn 205.

Reloads for insn # 49
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/f:SI 13 sp) [0 <variable>.unw_sec+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/f:SI 13 sp) [0 <variable>.unw_sec+0 S4 A64])

Reloads for insn # 63
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 <variable>.unw_sec+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 <variable>.unw_sec+0 S4 A64])

Reloads for insn # 77
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 <variable>.unw_sec+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 <variable>.unw_sec+0 S4 A64])

Reloads for insn # 91
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 <variable>.unw_sec+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 <variable>.unw_sec+0 S4 A64])

Reloads for insn # 105
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 <variable>.unw_sec+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 <variable>.unw_sec+0 S4 A64])

Reloads for insn # 119
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 <variable>.txt_sec+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 <variable>.txt_sec+0 S4 A32])

Reloads for insn # 133
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 <variable>.txt_sec+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 <variable>.txt_sec+0 S4 A32])

Reloads for insn # 147
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 <variable>.txt_sec+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 <variable>.txt_sec+0 S4 A32])

Reloads for insn # 161
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 <variable>.txt_sec+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 <variable>.txt_sec+0 S4 A32])

Reloads for insn # 175
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 36 [0x24])) [0 <variable>.txt_sec+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 36 [0x24])) [0 <variable>.txt_sec+0 S4 A32])

Reloads for insn # 205
Reload 0: reload_out (SI) = (mem/s/f/j:SI (plus:SI (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
                                                        (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (plus:SI (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
                                                        (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])
deleting insn with uid = 185.


try_optimize_cfg iteration 1

Forwarding edge 34->35 to 39 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 43.
verify found no changes in insn with uid = 57.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 85.
verify found no changes in insn with uid = 99.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 127.
verify found no changes in insn with uid = 141.
verify found no changes in insn with uid = 155.
verify found no changes in insn with uid = 169.
verify found no changes in insn with uid = 203.
verify found no changes in insn with uid = 232.
verify found no changes in insn with uid = 260.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 58 count 100 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 40 n_edges 58 count 108 (  2.7)


module_finalize

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,32u} r1={30d,16u} r2={18d,6u} r3={24d,11u} r4={2d,11u,1d} r5={5d,21u,1d} r6={2d,7u} r7={2d,2u} r8={3d,13u} r9={2d,2u} r10={2d,2u} r12={17d,2u} r13={1d,65u,1d} r14={15d,1u} r15={14d} r16={14d} r17={14d} r18={14d} r19={14d} r20={14d} r21={14d} r22={14d} r23={14d} r24={33d,19u} r27={14d} r28={14d} r29={14d} r30={14d} r31={14d} r32={14d} r33={14d} r34={14d} r35={14d} r36={14d} r37={14d} r38={14d} r39={14d} r40={14d} r41={14d} r42={14d} r43={14d} r44={14d} r45={14d} r46={14d} r47={14d} r48={14d} r49={14d} r50={14d} r51={14d} r52={14d} r53={14d} r54={14d} r55={14d} r56={14d} r57={14d} r58={14d} r59={14d} r60={14d} r61={14d} r62={14d} r63={14d} r64={14d} r65={14d} r66={14d} r67={14d} r68={14d} r69={14d} r70={14d} r71={14d} r72={14d} r73={14d} r74={14d} r75={14d} r76={14d} r77={14d} r78={14d} r79={14d} r80={14d} r81={14d} r82={14d} r83={14d} r84={14d} r85={14d} r86={14d} r87={14d} r88={14d} r89={14d} r90={14d} r91={14d} r92={14d} r93={14d} r94={14d} r95={14d} r96={14d} r97={14d} r98={14d} r99={14d} r100={14d} r101={14d} r102={14d} r103={14d} r104={14d} r105={14d} r106={14d} r107={14d} r108={14d} r109={14d} r110={14d} r111={14d} r112={14d} r113={14d} r114={14d} r115={14d} r116={14d} r117={14d} r118={14d} r119={14d} r120={14d} r121={14d} r122={14d} r123={14d} r124={14d} r125={14d} r126={14d} r127={14d} 
;;    total ref usage 1940{1727d,210u,3e} in 139{125 regular + 14 call} insns.
(note 7 0 12 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 12 7 11 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 11 12 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 11 23 2 NOTE_INSN_DELETED)

(note 23 17 25 2 NOTE_INSN_DELETED)

(note 25 23 8 2 NOTE_INSN_DELETED)

(insn 8 25 9 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
        (reg:SI 0 r0 [ hdr ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 16 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
        (reg:SI 1 r1 [ sechdrs ])) 167 {*arm_movsi_insn} (nil))

(insn 16 9 26 2 arch/arm/kernel/module.c:277 (set (reg:SI 3 r3 [170])
        (const_int 40 [0x28])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 40 [0x28])
        (nil)))

(insn 26 16 15 2 arch/arm/kernel/module.c:282 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 15 26 27 2 arch/arm/kernel/module.c:277 (set (reg:SI 12 ip [orig:168 <variable>.e_shstrndx ] [168])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 50 [0x32])) [0 <variable>.e_shstrndx+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 27 15 21 2 arch/arm/kernel/module.c:282 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 3 r3 [170])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 40 [0x28])
        (nil)))

(insn 21 27 10 2 arch/arm/kernel/module.c:278 (set (reg:SI 9 r9 [orig:173 <variable>.e_shnum ] [173])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 48 [0x30])) [0 <variable>.e_shnum+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 10 21 29 2 arch/arm/kernel/module.c:274 (set (reg/v/f:SI 7 r7 [orig:167 mod ] [167])
        (reg:SI 2 r2 [ mod ])) 167 {*arm_movsi_insn} (nil))

(insn 29 10 18 2 arch/arm/kernel/module.c:284 (set (reg/v/f:SI 5 r5 [orig:148 s ] [148])
        (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])) 167 {*arm_movsi_insn} (nil))

(insn 18 29 24 2 arch/arm/kernel/module.c:277 (set (reg/f:SI 12 ip [171])
        (plus:SI (mult:SI (reg:SI 3 r3 [170])
                (reg:SI 12 ip [orig:168 <variable>.e_shstrndx ] [168]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 24 18 19 2 arch/arm/kernel/module.c:278 (set (reg/v/f:SI 9 r9 [orig:146 sechdrs_end ] [146])
        (plus:SI (mult:SI (reg:SI 3 r3 [170])
                (reg:SI 9 r9 [orig:173 <variable>.e_shnum ] [173]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 19 24 20 2 arch/arm/kernel/module.c:277 (set (reg:SI 10 sl [orig:172 <variable>.sh_offset ] [172])
        (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [171])
                (const_int 16 [0x10])) [0 <variable>.sh_offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 28 2 arch/arm/kernel/module.c:277 (set (reg/v/f:SI 10 sl [orig:147 secstrs ] [147])
        (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
            (reg:SI 10 sl [orig:172 <variable>.sh_offset ] [172]))) 4 {*arm_addsi3} (nil))

(call_insn 28 20 290 2 arch/arm/kernel/module.c:282 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 290 28 291 2 arch/arm/kernel/module.c:284 (set (pc)
        (label_ref 179)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 291 290 181)

;; Start of basic block ( 25) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 8 [r8] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  25 [91.0%] 
(code_label 181 291 32 3 19 "" [1 uses])

(note 32 181 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 35 32 34 3 NOTE_INSN_DELETED)

(insn 34 35 33 3 arch/arm/kernel/module.c:287 (set (reg:SI 3 r3 [orig:178 <variable>.sh_flags ] [178])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148])
                (const_int 8 [0x8])) [0 <variable>.sh_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148])
                (const_int 8 [0x8])) [0 <variable>.sh_flags+0 S4 A32])
        (nil)))

(insn 33 34 36 3 arch/arm/kernel/module.c:285 (set (reg:SI 8 r8 [orig:162 D.18688 ] [162])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148]) [0 <variable>.sh_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 33 37 3 arch/arm/kernel/module.c:287 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:178 <variable>.sh_flags ] [178])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 37 36 38 3 arch/arm/kernel/module.c:287 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 24 4)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 8 [r8] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%]  (fallthru)
(note 38 37 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 44 38 39 4 NOTE_INSN_DELETED)

(insn 39 44 281 4 arch/arm/kernel/module.c:285 (set (reg/v/f:SI 8 r8 [orig:145 secname ] [145])
        (plus:SI (reg/v/f:SI 10 sl [orig:147 secstrs ] [147])
            (reg:SI 8 r8 [orig:162 D.18688 ] [162]))) 4 {*arm_addsi3} (nil))

(insn 281 39 42 4 arch/arm/kernel/module.c:290 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x111ac7b0>)) 167 {*arm_movsi_insn} (nil))

(insn 42 281 43 4 arch/arm/kernel/module.c:290 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 43 42 46 4 arch/arm/kernel/module.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 43 47 4 arch/arm/kernel/module.c:290 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 4 arch/arm/kernel/module.c:290 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 292 5 arch/arm/kernel/module.c:291 (set (mem/s/f/j:SI (reg/f:SI 13 sp) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 292 49 293 5 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 293 292 52)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
(code_label 52 293 53 6 10 "" [1 uses])

(note 53 52 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 53 282 6 NOTE_INSN_DELETED)

(insn 282 58 56 6 arch/arm/kernel/module.c:292 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x111b7d40>)) 167 {*arm_movsi_insn} (nil))

(insn 56 282 57 6 arch/arm/kernel/module.c:292 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 57 56 60 6 arch/arm/kernel/module.c:292 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 60 57 61 6 arch/arm/kernel/module.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 62 6 arch/arm/kernel/module.c:292 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 294 7 arch/arm/kernel/module.c:293 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 294 63 295 7 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 295 294 66)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [50.0%] 
(code_label 66 295 67 8 11 "" [1 uses])

(note 67 66 72 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 72 67 283 8 NOTE_INSN_DELETED)

(insn 283 72 70 8 arch/arm/kernel/module.c:294 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x111ced50>)) 167 {*arm_movsi_insn} (nil))

(insn 70 283 71 8 arch/arm/kernel/module.c:294 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 71 70 74 8 arch/arm/kernel/module.c:294 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 74 71 75 8 arch/arm/kernel/module.c:294 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 75 74 76 8 arch/arm/kernel/module.c:294 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 76 75 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 296 9 arch/arm/kernel/module.c:295 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 296 77 297 9 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 297 296 80)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [50.0%] 
(code_label 80 297 81 10 12 "" [1 uses])

(note 81 80 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 86 81 284 10 NOTE_INSN_DELETED)

(insn 284 86 84 10 arch/arm/kernel/module.c:296 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x111ceea0>)) 167 {*arm_movsi_insn} (nil))

(insn 84 284 85 10 arch/arm/kernel/module.c:296 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 85 84 88 10 arch/arm/kernel/module.c:296 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 88 85 89 10 arch/arm/kernel/module.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 89 88 90 10 arch/arm/kernel/module.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 90 89 91 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 298 11 arch/arm/kernel/module.c:297 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 298 91 299 11 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 299 298 94)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [50.0%] 
(code_label 94 299 95 12 13 "" [1 uses])

(note 95 94 100 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 100 95 285 12 NOTE_INSN_DELETED)

(insn 285 100 98 12 arch/arm/kernel/module.c:298 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x111ab440>)) 167 {*arm_movsi_insn} (nil))

(insn 98 285 99 12 arch/arm/kernel/module.c:298 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 99 98 102 12 arch/arm/kernel/module.c:298 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 102 99 103 12 arch/arm/kernel/module.c:298 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 103 102 104 12 arch/arm/kernel/module.c:298 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 104 103 105 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 300 13 arch/arm/kernel/module.c:299 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 <variable>.unw_sec+0 S4 A64])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 300 105 301 13 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 301 300 108)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [50.0%] 
(code_label 108 301 109 14 14 "" [1 uses])

(note 109 108 114 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 114 109 286 14 NOTE_INSN_DELETED)

(insn 286 114 112 14 arch/arm/kernel/module.c:300 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x111d9510>)) 167 {*arm_movsi_insn} (nil))

(insn 112 286 113 14 arch/arm/kernel/module.c:300 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 113 112 116 14 arch/arm/kernel/module.c:300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 116 113 117 14 arch/arm/kernel/module.c:300 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 117 116 118 14 arch/arm/kernel/module.c:300 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 118 117 119 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 302 15 arch/arm/kernel/module.c:301 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 302 119 303 15 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 303 302 122)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [50.0%] 
(code_label 122 303 123 16 15 "" [1 uses])

(note 123 122 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 128 123 287 16 NOTE_INSN_DELETED)

(insn 287 128 126 16 arch/arm/kernel/module.c:302 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x111d9870>)) 167 {*arm_movsi_insn} (nil))

(insn 126 287 127 16 arch/arm/kernel/module.c:302 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 127 126 130 16 arch/arm/kernel/module.c:302 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 130 127 131 16 arch/arm/kernel/module.c:302 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 131 130 132 16 arch/arm/kernel/module.c:302 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 136)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 132 131 133 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 304 17 arch/arm/kernel/module.c:303 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 304 133 305 17 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 305 304 136)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  16 [50.0%] 
(code_label 136 305 137 18 16 "" [1 uses])

(note 137 136 142 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 142 137 288 18 NOTE_INSN_DELETED)

(insn 288 142 140 18 arch/arm/kernel/module.c:304 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x111cfcc0>)) 167 {*arm_movsi_insn} (nil))

(insn 140 288 141 18 arch/arm/kernel/module.c:304 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 141 140 144 18 arch/arm/kernel/module.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 141 145 18 arch/arm/kernel/module.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 145 144 146 18 arch/arm/kernel/module.c:304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 150)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 146 145 147 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 306 19 arch/arm/kernel/module.c:305 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 306 147 307 19 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 307 306 150)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  18 [50.0%] 
(code_label 150 307 151 20 17 "" [1 uses])

(note 151 150 156 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 156 151 289 20 NOTE_INSN_DELETED)

(insn 289 156 154 20 arch/arm/kernel/module.c:306 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x111d9f00>)) 167 {*arm_movsi_insn} (nil))

(insn 154 289 155 20 arch/arm/kernel/module.c:306 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 155 154 158 20 arch/arm/kernel/module.c:306 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 158 155 159 20 arch/arm/kernel/module.c:306 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 159 158 160 20 arch/arm/kernel/module.c:306 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 160 159 161 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 308 21 arch/arm/kernel/module.c:307 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 308 161 309 21 (set (pc)
        (label_ref 176)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 309 308 164)

;; Start of basic block ( 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  20 [50.0%] 
(code_label 164 309 165 22 18 "" [1 uses])

(note 165 164 170 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 170 165 168 22 NOTE_INSN_DELETED)

(insn 168 170 167 22 arch/arm/kernel/module.c:308 (set (reg:SI 1 r1)
        (reg/v/f:SI 8 r8 [orig:145 secname ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 167 168 169 22 arch/arm/kernel/module.c:308 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x111d99c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x111d99c0>)
        (nil)))

(call_insn/i 169 167 172 22 arch/arm/kernel/module.c:308 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 172 169 173 22 arch/arm/kernel/module.c:308 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 173 172 174 22 arch/arm/kernel/module.c:308 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 176)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 174 173 175 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 175 174 176 23 arch/arm/kernel/module.c:309 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 <variable>.txt_sec+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:148 s ] [148])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 3 23 5 7 9 11 13 15 17 19 22 21) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  22 [50.0%] 
;; Pred edge  21 [100.0%] 
(code_label 176 175 177 24 9 "" [11 uses])

(note 177 176 178 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 179 24 arch/arm/kernel/module.c:284 (set (reg/v/f:SI 5 r5 [orig:148 s ] [148])
        (plus:SI (reg/v/f:SI 5 r5 [orig:148 s ] [148])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  25 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 24 2) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 179 178 180 25 8 "" [1 uses])

(note 180 179 182 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 182 180 183 25 arch/arm/kernel/module.c:284 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:148 s ] [148])
            (reg/v/f:SI 9 r9 [orig:146 sechdrs_end ] [146]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 183 182 184 25 arch/arm/kernel/module.c:284 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 25 -> ( 3 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  3 [91.0%] 
;; Succ edge  26 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5] 8 [r8]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5] 8 [r8]
;; live  kill	

;; Pred edge  25 [9.0%]  (fallthru,loop_exit)
(note 184 183 186 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 186 184 188 26 arch/arm/kernel/module.c:284 discrim 1 (set (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 188 186 210 26 arch/arm/kernel/module.c:313 (set (reg/f:SI 8 r8 [219])
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 0 [0x0]))
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 30 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  30 [80.0%]  (dfs_back)
;; Pred edge  26 [100.0%]  (fallthru)
(code_label 210 188 187 27 21 "" [1 uses])

(note 187 210 194 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 194 187 189 27 arch/arm/kernel/module.c:313 discrim 1 (set (reg:SI 3 r3 [201])
        (plus:SI (reg/f:SI 8 r8 [219])
            (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141]))) 4 {*arm_addsi3} (nil))

(insn 189 194 208 27 arch/arm/kernel/module.c:313 (set (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 8 r8 [219])
                (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])) [0 <variable>.unw_sec+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 208 189 190 27 arch/arm/kernel/module.c:314 (set (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
        (plus:SI (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 190 208 191 27 arch/arm/kernel/module.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 192 27 arch/arm/kernel/module.c:313 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 27 -> ( 28 30)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  28 [85.0%]  (fallthru)
;; Succ edge  30 [15.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  27 [85.0%]  (fallthru)
(note 192 191 195 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 195 192 196 28 arch/arm/kernel/module.c:313 discrim 1 (set (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [201])
                (const_int 4 [0x4])) [0 <variable>.txt_sec+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 196 195 197 28 arch/arm/kernel/module.c:313 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 197 196 198 28 arch/arm/kernel/module.c:313 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  29 [69.8%]  (fallthru)
;; Succ edge  30 [30.2%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  28 [69.8%]  (fallthru)
(note 198 197 204 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 204 198 200 29 NOTE_INSN_DELETED)

(insn 200 204 202 29 arch/arm/kernel/module.c:315 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 202 200 199 29 arch/arm/kernel/module.c:315 (set (reg:SI 3 r3)
        (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 199 202 201 29 arch/arm/kernel/module.c:315 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:151 D.18733 ] [151])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 201 199 203 29 arch/arm/kernel/module.c:315 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:150 D.18736 ] [150])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 203 201 205 29 arch/arm/kernel/module.c:315 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("unwind_table_add") [flags 0x41] <function_decl 0x11169e00 unwind_table_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 205 203 206 29 arch/arm/kernel/module.c:314 (set (mem/s/f/j:SI (plus:SI (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
                (const_int 224 [0xe0])) [0 <variable>.arch.unwind S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 30)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 27 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  27 [15.0%] 
;; Pred edge  28 [30.2%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 206 205 207 30 20 "" [2 uses])

(note 207 206 211 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 211 207 209 30 arch/arm/kernel/module.c:312 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (nil))

(insn 209 211 212 30 arch/arm/kernel/module.c:314 (set (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
        (plus:SI (reg:SI 7 r7 [orig:140 ivtmp.364 ] [140])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(jump_insn 212 209 213 30 arch/arm/kernel/module.c:312 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8000 [0x1f40])
        (nil)))
;; End of basic block 30 -> ( 27 31)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  27 [80.0%]  (dfs_back)
;; Succ edge  31 [20.0%]  (fallthru,loop_exit)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 5 [r5] 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 5 [r5] 6 [r6]
;; live  kill	

;; Pred edge  30 [20.0%]  (fallthru,loop_exit)
(note 213 212 216 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 216 213 222 31 NOTE_INSN_DELETED)

(note 222 216 214 31 NOTE_INSN_DELETED)

(insn 214 222 220 31 arch/arm/kernel/module.c:260 (set (reg:SI 3 r3 [orig:202 <variable>.e_shstrndx ] [202])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 50 [0x32])) [0 <variable>.e_shstrndx+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 220 214 217 31 arch/arm/kernel/module.c:262 (set (reg:SI 2 r2 [orig:207 <variable>.e_shnum ] [207])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
                    (const_int 48 [0x30])) [0 <variable>.e_shnum+0 S2 A32]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 217 220 223 31 arch/arm/kernel/module.c:260 (set (reg/f:SI 3 r3 [205])
        (plus:SI (mult:SI (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
                (reg:SI 3 r3 [orig:202 <variable>.e_shstrndx ] [202]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 223 217 218 31 arch/arm/kernel/module.c:262 (set (reg/v/f:SI 5 r5 [orig:143 se ] [143])
        (plus:SI (mult:SI (reg:SI 5 r5 [orig:141 ivtmp.359 ] [141])
                (reg:SI 2 r2 [orig:207 <variable>.e_shnum ] [207]))
            (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 218 223 219 31 arch/arm/kernel/module.c:260 (set (reg:SI 3 r3 [orig:206 <variable>.sh_offset ] [206])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [205])
                (const_int 16 [0x10])) [0 <variable>.sh_offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 219 218 310 31 arch/arm/kernel/module.c:260 (set (reg/v/f:SI 6 r6 [orig:144 secstrs ] [144])
        (plus:SI (reg/v/f:SI 6 r6 [orig:165 hdr ] [165])
            (reg:SI 3 r3 [orig:206 <variable>.sh_offset ] [206]))) 4 {*arm_addsi3} (nil))

(jump_insn 310 219 311 31 (set (pc)
        (label_ref 239)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  34 [100.0%] 

(barrier 311 310 241)

;; Start of basic block ( 34) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  34 [95.5%] 
(code_label 241 311 226 32 24 "" [1 uses])

(note 226 241 229 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 229 226 233 32 NOTE_INSN_DELETED)

(note 233 229 228 32 NOTE_INSN_DELETED)

(insn 228 233 231 32 arch/arm/kernel/module.c:263 (set (reg:SI 1 r1 [orig:212 <variable>.sh_name ] [212])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]) [0 <variable>.sh_name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166]) [0 <variable>.sh_name+0 S4 A32])
        (nil)))

(insn 231 228 232 32 arch/arm/kernel/module.c:263 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 6 r6 [orig:144 secstrs ] [144])
            (reg:SI 1 r1 [orig:212 <variable>.sh_name ] [212]))) 4 {*arm_addsi3} (nil))

(call_insn/i 232 231 235 32 arch/arm/kernel/module.c:263 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("strcmp") [flags 0x41] <function_decl 0x51157680 strcmp>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 235 232 236 32 arch/arm/kernel/module.c:263 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 236 235 237 32 arch/arm/kernel/module.c:263 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 247)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
        (nil)))
;; End of basic block 32 -> ( 36 33)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  36 [4.5%]  (loop_exit)
;; Succ edge  33 [95.5%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  32 [95.5%]  (fallthru)
(note 237 236 238 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 33 arch/arm/kernel/module.c:262 (set (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
        (plus:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 31) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
;; Pred edge  31 [100.0%] 
(code_label 239 238 240 34 22 "" [1 uses])

(note 240 239 279 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 279 240 242 34 arch/arm/kernel/module.c:263 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x111db270>)) 167 {*arm_movsi_insn} (nil))

(insn 242 279 243 34 arch/arm/kernel/module.c:262 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
            (reg/v/f:SI 5 r5 [orig:143 se ] [143]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 243 242 312 34 arch/arm/kernel/module.c:262 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 34 -> ( 32 35)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  32 [95.5%] 
;; Succ edge  35 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  34 [4.5%]  (fallthru,loop_exit)
(note 312 243 313 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn 313 312 314 35 (set (pc)
        (label_ref 261)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 39)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  39 [100.0%] 

(barrier 314 313 247)

;; Start of basic block ( 32) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  32 [4.5%]  (loop_exit)
(code_label 247 314 248 36 23 "" [1 uses])

(note 248 247 250 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 250 248 251 36 arch/arm/kernel/module.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 251 250 252 36 arch/arm/kernel/module.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 261)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 36 -> ( 37 39)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  37 [100.0%]  (fallthru)
;; Succ edge  39

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  36 [100.0%]  (fallthru)
(note 252 251 253 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg/f:SI 3 r3 [214])
        (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>)
        (nil)))

(insn 254 253 255 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg:SI 3 r3 [orig:215 smp_on_up ] [215])
        (mem/c/i:SI (reg/f:SI 3 r3 [214]) [0 smp_on_up+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("smp_on_up") [flags 0xc0] <var_decl 0x111751e0 smp_on_up>) [0 smp_on_up+0 S4 A32])
        (nil)))

(insn 255 254 256 37 arch/arm/kernel/module.c:326 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:215 smp_on_up ] [215])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 256 255 257 37 arch/arm/kernel/module.c:326 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 261)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  38 [39.0%]  (fallthru)
;; Succ edge  39 [61.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  37 [39.0%]  (fallthru)
(note 257 256 259 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 259 257 258 38 arch/arm/kernel/module.c:328 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 258 259 260 38 arch/arm/kernel/module.c:328 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:166 sechdrs ] [166])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 260 258 261 38 arch/arm/kernel/module.c:328 (parallel [
            (call (mem:SI (symbol_ref:SI ("fixup_smp") [flags 0x41] <function_decl 0x11179380 fixup_smp>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 38 -> ( 39)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 36 37 38 35) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  36
;; Pred edge  37 [61.0%] 
;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  35 [100.0%] 
(code_label 261 260 262 39 25 "" [3 uses])

(note 262 261 267 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 267 262 273 39 arch/arm/kernel/module.c:333 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 273 267 315 39 arch/arm/kernel/module.c:333 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 39 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 315 273 316 NOTE_INSN_DELETED)

(note 316 315 0 NOTE_INSN_DELETED)


;; Function apply_relocate (apply_relocate)[0:991]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a31 (r240,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r240,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r239,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r239,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r237,l1) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r233,l1) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r231,l1) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r230,l1) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r229,l1) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r228,l1) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r226,l1) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r225,l1) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r224,l1) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r223,l1) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r222,l1) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r221,l1) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r220,l1) best GENERAL_REGS, cover GENERAL_REGS
    a58 (r219,l1) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r218,l1) best GENERAL_REGS, cover GENERAL_REGS
    a60 (r217,l1) best GENERAL_REGS, cover GENERAL_REGS
    a59 (r216,l1) best GENERAL_REGS, cover GENERAL_REGS
    a62 (r215,l1) best GENERAL_REGS, cover GENERAL_REGS
    a61 (r214,l1) best GENERAL_REGS, cover GENERAL_REGS
    a64 (r213,l1) best GENERAL_REGS, cover GENERAL_REGS
    a63 (r212,l1) best GENERAL_REGS, cover GENERAL_REGS
    a65 (r211,l1) best GENERAL_REGS, cover GENERAL_REGS
    a66 (r210,l1) best GENERAL_REGS, cover GENERAL_REGS
    a67 (r209,l1) best GENERAL_REGS, cover GENERAL_REGS
    a70 (r204,l1) best GENERAL_REGS, cover GENERAL_REGS
    a71 (r198,l1) best GENERAL_REGS, cover GENERAL_REGS
    a73 (r195,l1) best GENERAL_REGS, cover GENERAL_REGS
    a74 (r193,l1) best GENERAL_REGS, cover GENERAL_REGS
    a75 (r192,l1) best GENERAL_REGS, cover GENERAL_REGS
    a76 (r191,l1) best GENERAL_REGS, cover GENERAL_REGS
    a77 (r190,l1) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r189,l1) best GENERAL_REGS, cover GENERAL_REGS
    a80 (r186,l1) best GENERAL_REGS, cover GENERAL_REGS
    a79 (r185,l1) best GENERAL_REGS, cover GENERAL_REGS
    a81 (r184,l1) best GENERAL_REGS, cover GENERAL_REGS
    a83 (r180,l1) best GENERAL_REGS, cover GENERAL_REGS
    a84 (r178,l1) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r170,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r169,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a78 (r163,l1) best GENERAL_REGS, cover GENERAL_REGS
    a82 (r162,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r160,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r159,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r158,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a69 (r156,l1) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r154,l1) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r153,l1) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r149,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r145,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a72 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a68 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS

  a0(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a8(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a16(r240,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r239,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r149,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a26(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r169,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a30(r239,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r240,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a33(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a34(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r160,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:160000
  a36(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r237,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a40(r233,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r231,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a42(r230,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a44(r228,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r226,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r229,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a48(r225,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r223,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a53(r221,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r222,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a56(r220,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a57(r218,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a58(r219,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a59(r216,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a60(r217,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r214,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r215,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a63(r212,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a64(r213,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a65(r211,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a66(r210,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a67(r209,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a68(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a69(r156,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a70(r204,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a71(r198,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a72(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a73(r195,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a74(r193,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a75(r192,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a76(r191,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a77(r190,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a78(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a79(r185,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a80(r186,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a81(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a82(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a83(r180,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a84(r178,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r240: preferred GENERAL_REGS, alternative NO_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS
    r233: preferred GENERAL_REGS, alternative NO_REGS
    r231: preferred GENERAL_REGS, alternative NO_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS
    r218: preferred GENERAL_REGS, alternative NO_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS
    r214: preferred GENERAL_REGS, alternative NO_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r209: preferred GENERAL_REGS, alternative NO_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a7(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a8(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a14(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a15(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a16(r240,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r239,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a18(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a19(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a21(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a23(r149,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a26(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a28(r169,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a29(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a30(r239,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r240,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r158,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a33(r145,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a34(r159,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r160,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:160000
  a36(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a38(r237,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r189,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a40(r233,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r231,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a42(r230,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a44(r228,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r226,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r229,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a48(r225,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r224,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r223,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r154,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a53(r221,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r222,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a56(r220,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a57(r218,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a58(r219,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a59(r216,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a60(r217,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r214,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r215,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a63(r212,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a64(r213,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a65(r211,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a66(r210,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a67(r209,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a68(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a69(r156,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a70(r204,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a71(r198,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a72(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a73(r195,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a74(r193,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a75(r192,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a76(r191,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a77(r190,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a78(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a79(r185,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a80(r186,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a81(r184,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a82(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a83(r180,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a84(r178,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 266(l0): point = 0
   Insn 260(l0): point = 2
   Insn 253(l0): point = 5
   Insn 313(l0): point = 8
   Insn 238(l0): point = 10
   Insn 237(l0): point = 12
   Insn 234(l0): point = 14
   Insn 236(l0): point = 16
   Insn 235(l0): point = 18
   Insn 303(l0): point = 21
   Insn 165(l0): point = 23
   Insn 164(l0): point = 25
   Insn 159(l0): point = 27
   Insn 158(l0): point = 29
   Insn 157(l0): point = 31
   Insn 156(l0): point = 33
   Insn 160(l0): point = 35
   Insn 163(l0): point = 37
   Insn 162(l0): point = 39
   Insn 161(l0): point = 41
   Insn 289(l0): point = 44
   Insn 71(l0): point = 46
   Insn 70(l0): point = 48
   Insn 65(l0): point = 50
   Insn 64(l0): point = 52
   Insn 63(l0): point = 54
   Insn 66(l0): point = 56
   Insn 69(l0): point = 58
   Insn 68(l0): point = 60
   Insn 67(l0): point = 62
   Insn 287(l0): point = 65
   Insn 45(l0): point = 67
   Insn 44(l0): point = 69
   Insn 40(l0): point = 71
   Insn 43(l0): point = 73
   Insn 42(l0): point = 75
   Insn 41(l0): point = 77
   Insn 285(l0): point = 80
   Insn 19(l0): point = 82
   Insn 20(l0): point = 84
   Insn 16(l0): point = 86
   Insn 149(l0): point = 88
   Insn 139(l0): point = 90
   Insn 12(l0): point = 92
   Insn 22(l0): point = 94
   Insn 15(l0): point = 96
   Insn 6(l0): point = 98
   Insn 3(l0): point = 100
   Insn 21(l0): point = 102
   Insn 10(l0): point = 104
   Insn 5(l0): point = 106
   Insn 2(l0): point = 108
   Insn 251(l1): point = 111
   Insn 250(l1): point = 113
   Insn 248(l1): point = 115
   Insn 244(l1): point = 118
   Insn 243(l1): point = 120
   Insn 311(l1): point = 123
   Insn 227(l1): point = 125
   Insn 226(l1): point = 127
   Insn 316(l1): point = 129
   Insn 223(l1): point = 131
   Insn 222(l1): point = 133
   Insn 315(l1): point = 135
   Insn 219(l1): point = 137
   Insn 221(l1): point = 139
   Insn 216(l1): point = 142
   Insn 214(l1): point = 145
   Insn 211(l1): point = 147
   Insn 209(l1): point = 149
   Insn 208(l1): point = 151
   Insn 207(l1): point = 153
   Insn 206(l1): point = 155
   Insn 205(l1): point = 157
   Insn 203(l1): point = 159
   Insn 210(l1): point = 161
   Insn 201(l1): point = 163
   Insn 309(l1): point = 166
   Insn 195(l1): point = 168
   Insn 194(l1): point = 170
   Insn 193(l1): point = 172
   Insn 191(l1): point = 174
   Insn 192(l1): point = 176
   Insn 190(l1): point = 178
   Insn 307(l1): point = 181
   Insn 184(l1): point = 183
   Insn 183(l1): point = 185
   Insn 182(l1): point = 187
   Insn 181(l1): point = 189
   Insn 180(l1): point = 191
   Insn 305(l1): point = 194
   Insn 174(l1): point = 196
   Insn 173(l1): point = 198
   Insn 172(l1): point = 200
   Insn 171(l1): point = 202
   Insn 151(l1): point = 205
   Insn 150(l1): point = 207
   Insn 147(l1): point = 210
   Insn 146(l1): point = 212
   Insn 145(l1): point = 214
   Insn 319(l1): point = 216
   Insn 318(l1): point = 218
   Insn 133(l1): point = 220
   Insn 132(l1): point = 222
   Insn 131(l1): point = 224
   Insn 128(l1): point = 227
   Insn 126(l1): point = 230
   Insn 125(l1): point = 232
   Insn 123(l1): point = 234
   Insn 122(l1): point = 236
   Insn 121(l1): point = 238
   Insn 301(l1): point = 241
   Insn 115(l1): point = 243
   Insn 114(l1): point = 245
   Insn 112(l1): point = 247
   Insn 113(l1): point = 249
   Insn 299(l1): point = 252
   Insn 104(l1): point = 255
   Insn 103(l1): point = 257
   Insn 295(l1): point = 260
   Insn 99(l1): point = 263
   Insn 98(l1): point = 265
   Insn 97(l1): point = 268
   Insn 96(l1): point = 270
   Insn 95(l1): point = 273
   Insn 93(l1): point = 276
   Insn 92(l1): point = 278
   Insn 292(l1): point = 281
   Insn 88(l1): point = 284
   Insn 87(l1): point = 286
   Insn 86(l1): point = 289
   Insn 84(l1): point = 292
   Insn 83(l1): point = 294
   Insn 82(l1): point = 297
   Insn 81(l1): point = 299
   Insn 80(l1): point = 302
   Insn 77(l1): point = 304
   Insn 79(l1): point = 306
   Insn 76(l1): point = 308
   Insn 78(l1): point = 310
   Insn 59(l1): point = 313
   Insn 54(l1): point = 315
   Insn 58(l1): point = 317
   Insn 53(l1): point = 319
   Insn 57(l1): point = 321
   Insn 52(l1): point = 323
   Insn 55(l1): point = 325
   Insn 56(l1): point = 327
   Insn 51(l1): point = 329
   Insn 35(l1): point = 332
   Insn 34(l1): point = 334
   Insn 28(l1): point = 336
   Insn 27(l1): point = 338
   Insn 32(l1): point = 340
   Insn 26(l1): point = 342
 a0(r161): [65..67] [44..46] [21..23] [8..10] [3..5]
 a1(r158): [32..43] [17..20]
 a2(r170): [78..98] [63..64] [42..43] [19..20]
 a3(r139): [28..43]
 a4(r147): [30..43]
 a5(r145): [55..64] [34..43]
 a6(r148): [74..94] [59..64] [38..43]
 a7(r169): [76..106] [61..64] [40..43]
 a8(r159): [51..64]
 a9(r160): [53..64]
 a10(r149): [80..82]
 a11(r166): [83..108]
 a12(r176): [83..86]
 a13(r172): [83..104]
 a14(r164): [80..84]
 a15(r150): [80..96]
 a16(r240): [80..88]
 a17(r239): [80..90]
 a18(r151): [80..92]
 a19(r143): [80..102]
 a20(r167): [80..100]
 a21(r143): [111..344]
 a22(r148): [111..344]
 a23(r149): [111..344]
 a24(r150): [111..344]
 a25(r151): [111..344]
 a26(r164): [111..344]
 a27(r167): [111..344]
 a28(r169): [111..344]
 a29(r170): [111..344]
 a30(r239): [111..344]
 a31(r240): [111..344]
 a32(r158): [284..310] [263..280] [255..259] [205..240]
 a33(r145): [292..315] [205..240]
 a34(r159): [313..327]
 a35(r160): [244..325] [197..240] [184..193] [169..180] [126..165]
 a36(r139): [205..224]
 a37(r147): [292..304] [276..280] [205..240] [175..180]
 a38(r237): [114..115]
 a39(r189): [244..308] [197..240] [184..193] [169..180] [126..165]
 a40(r233): [126..127]
 a41(r231): [128..135]
 a42(r230): [128..131]
 a43(r134): [130..163]
 a44(r228): [132..133]
 a45(r226): [132..137]
 a46(r229): [134..139]
 a47(r142): [138..147]
 a48(r225): [148..161]
 a49(r224): [148..149]
 a50(r153): [150..151]
 a51(r223): [152..153]
 a52(r154): [154..155]
 a53(r221): [154..159]
 a54(r222): [156..157]
 a55(r146): [268..323] [250..259] [225..240] [179..180] [162..165]
 a56(r220): [169..170]
 a57(r218): [171..172]
 a58(r219): [173..176]
 a59(r216): [173..174]
 a60(r217): [175..178]
 a61(r214): [184..185]
 a62(r215): [186..187]
 a63(r212): [188..189]
 a64(r213): [190..191]
 a65(r211): [197..198]
 a66(r210): [199..200]
 a67(r209): [199..202]
 a68(r140): [201..238]
 a69(r156): [203..220]
 a70(r204): [213..214]
 a71(r198): [215..218]
 a72(r144): [221..234]
 a73(r195): [221..222]
 a74(r193): [235..236]
 a75(r192): [244..245]
 a76(r191): [246..249]
 a77(r190): [246..247]
 a78(r163): [311..338]
 a79(r185): [316..319]
 a80(r186): [318..321]
 a81(r184): [320..329]
 a82(r162): [320..336]
 a83(r180): [335..340]
 a84(r178): [339..342]
Compressing live ranges: from 345 to 156 - 45%
Ranges after the compression:
 a0(r161): [26..27] [17..18] [7..8] [2..3] [0..1]
 a1(r158): [11..16] [4..6]
 a2(r170): [30..41] [24..25] [15..16] [5..6]
 a3(r139): [9..16]
 a4(r147): [10..16]
 a5(r145): [21..25] [12..16]
 a6(r148): [28..39] [22..25] [13..16]
 a7(r169): [29..45] [23..25] [14..16]
 a8(r159): [19..25]
 a9(r160): [20..25]
 a10(r149): [31..32]
 a11(r166): [33..46]
 a12(r176): [33..35]
 a13(r172): [33..44]
 a14(r164): [31..34]
 a15(r150): [31..40]
 a16(r240): [31..36]
 a17(r239): [31..37]
 a18(r151): [31..38]
 a19(r143): [31..43]
 a20(r167): [31..42]
 a21(r143): [47..155]
 a22(r148): [47..155]
 a23(r149): [47..155]
 a24(r150): [47..155]
 a25(r151): [47..155]
 a26(r164): [47..155]
 a27(r167): [47..155]
 a28(r169): [47..155]
 a29(r170): [47..155]
 a30(r239): [47..155]
 a31(r240): [47..155]
 a32(r158): [132..136] [128..131] [126..127] [105..119]
 a33(r145): [133..139] [105..119]
 a34(r159): [138..147]
 a35(r160): [120..146] [98..119] [89..97] [78..88] [50..77]
 a36(r139): [105..113]
 a37(r147): [133..134] [130..131] [105..119] [84..88]
 a38(r237): [48..49]
 a39(r189): [120..135] [98..119] [89..97] [78..88] [50..77]
 a40(r233): [50..51]
 a41(r231): [52..58]
 a42(r230): [52..54]
 a43(r134): [53..76]
 a44(r228): [55..56]
 a45(r226): [55..59]
 a46(r229): [57..61]
 a47(r142): [60..62]
 a48(r225): [63..74]
 a49(r224): [63..64]
 a50(r153): [65..66]
 a51(r223): [67..68]
 a52(r154): [69..70]
 a53(r221): [69..73]
 a54(r222): [71..72]
 a55(r146): [129..145] [125..127] [114..119] [87..88] [75..77]
 a56(r220): [78..79]
 a57(r218): [80..81]
 a58(r219): [82..85]
 a59(r216): [82..83]
 a60(r217): [84..86]
 a61(r214): [89..90]
 a62(r215): [91..92]
 a63(r212): [93..94]
 a64(r213): [95..96]
 a65(r211): [98..99]
 a66(r210): [100..101]
 a67(r209): [100..103]
 a68(r140): [102..118]
 a69(r156): [104..110]
 a70(r204): [106..107]
 a71(r198): [108..109]
 a72(r144): [111..115]
 a73(r195): [111..112]
 a74(r193): [116..117]
 a75(r192): [120..121]
 a76(r191): [122..124]
 a77(r190): [122..123]
 a78(r163): [137..151]
 a79(r185): [140..142]
 a80(r186): [141..144]
 a81(r184): [143..148]
 a82(r162): [143..150]
 a83(r180): [149..153]
 a84(r178): [152..154]
    Creating cap  a85(r237,l0: a38(r237,l1))
    Creating cap  a86(r189,l0: a39(r189,l1))
    Creating cap  a87(r233,l0: a40(r233,l1))
    Creating cap  a88(r231,l0: a41(r231,l1))
    Creating cap  a89(r230,l0: a42(r230,l1))
    Creating cap  a90(r134,l0: a43(r134,l1))
    Creating cap  a91(r228,l0: a44(r228,l1))
    Creating cap  a92(r226,l0: a45(r226,l1))
    Creating cap  a93(r229,l0: a46(r229,l1))
    Creating cap  a94(r142,l0: a47(r142,l1))
    Creating cap  a95(r225,l0: a48(r225,l1))
    Creating cap  a96(r224,l0: a49(r224,l1))
    Creating cap  a97(r153,l0: a50(r153,l1))
    Creating cap  a98(r223,l0: a51(r223,l1))
    Creating cap  a99(r154,l0: a52(r154,l1))
    Creating cap  a100(r221,l0: a53(r221,l1))
    Creating cap  a101(r222,l0: a54(r222,l1))
    Creating cap  a102(r146,l0: a55(r146,l1))
    Creating cap  a103(r220,l0: a56(r220,l1))
    Creating cap  a104(r218,l0: a57(r218,l1))
    Creating cap  a105(r219,l0: a58(r219,l1))
    Creating cap  a106(r216,l0: a59(r216,l1))
    Creating cap  a107(r217,l0: a60(r217,l1))
    Creating cap  a108(r214,l0: a61(r214,l1))
    Creating cap  a109(r215,l0: a62(r215,l1))
    Creating cap  a110(r212,l0: a63(r212,l1))
    Creating cap  a111(r213,l0: a64(r213,l1))
    Creating cap  a112(r211,l0: a65(r211,l1))
    Creating cap  a113(r210,l0: a66(r210,l1))
    Creating cap  a114(r209,l0: a67(r209,l1))
    Creating cap  a115(r140,l0: a68(r140,l1))
    Creating cap  a116(r156,l0: a69(r156,l1))
    Creating cap  a117(r204,l0: a70(r204,l1))
    Creating cap  a118(r198,l0: a71(r198,l1))
    Creating cap  a119(r144,l0: a72(r144,l1))
    Creating cap  a120(r195,l0: a73(r195,l1))
    Creating cap  a121(r193,l0: a74(r193,l1))
    Creating cap  a122(r192,l0: a75(r192,l1))
    Creating cap  a123(r191,l0: a76(r191,l1))
    Creating cap  a124(r190,l0: a77(r190,l1))
    Creating cap  a125(r163,l0: a78(r163,l1))
    Creating cap  a126(r185,l0: a79(r185,l1))
    Creating cap  a127(r186,l0: a80(r186,l1))
    Creating cap  a128(r184,l0: a81(r184,l1))
    Creating cap  a129(r162,l0: a82(r162,l1))
    Creating cap  a130(r180,l0: a83(r180,l1))
    Creating cap  a131(r178,l0: a84(r178,l1))
+++Allocating 2096 bytes for conflict table (uncompressed size 3168)
;; a0(r161,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r158,l0) conflicts: a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a102(r146,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3
;; a2(r170,l0) conflicts: a1(r158,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14
;; a3(r139,l0) conflicts: a1(r158,l0) a2(r170,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3
;; a4(r147,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a102(r146,l0) a105(r219,l0) a107(r217,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3
;; a5(r145,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a102(r146,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a125(r163,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3
;; a6(r148,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14
;; a7(r169,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14
;; a8(r159,l0) conflicts: a2(r170,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a102(r146,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3
;; a9(r160,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3
;; a10(r149,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r166,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0)
;;     total conflict hard regs: 1-3 14
;;     conflict hard regs: 1-3 14
;; a12(r176,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a13(r172,l0) a11(r166,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r172,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a11(r166,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14
;; a14(r164,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r150,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14
;; a16(r240,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r239,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r151,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a19(r143,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r143,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a20(r167,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14
;; a20(r167,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a12(r176,l0) a13(r172,l0) a11(r166,l0) a85(r237,l0) a87(r233,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0) a131(r178,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14
;; a21(r143,l1) conflicts: a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r148,l1) conflicts: a21(r143,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r149,l1) conflicts: a21(r143,l1) a22(r148,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r150,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a25(r151,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a26(r164,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a27(r167,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r169,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a29(r170,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a30(r239,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a30(r239,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a31(r240,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a31(r240,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a38(r237,l1) a40(r233,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a32(r158,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a55(r146,l1) a37(r147,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a33(r145,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a55(r146,l1) a37(r147,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a78(r163,l1) a34(r159,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a34(r159,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a35(r160,l1) a55(r146,l1) a33(r145,l1) a78(r163,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a35(r160,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a40(r233,l1) a39(r189,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a36(r139,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a37(r147,l1) a68(r140,l1) a69(r156,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a37(r147,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a55(r146,l1) a58(r219,l1) a60(r217,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a38(r237,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a39(r189,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a40(r233,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1) a56(r220,l1) a57(r218,l1) a59(r216,l1) a58(r219,l1) a60(r217,l1) a37(r147,l1) a61(r214,l1) a62(r215,l1) a63(r212,l1) a64(r213,l1) a65(r211,l1) a66(r210,l1) a67(r209,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1) a75(r192,l1) a77(r190,l1) a76(r191,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a40(r233,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a41(r231,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a43(r134,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a42(r230,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a41(r231,l1) a43(r134,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a43(r134,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a42(r230,l1) a41(r231,l1) a44(r228,l1) a45(r226,l1) a46(r229,l1) a47(r142,l1) a49(r224,l1) a48(r225,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1) a55(r146,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a44(r228,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a41(r231,l1) a43(r134,l1) a45(r226,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a45(r226,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a41(r231,l1) a43(r134,l1) a44(r228,l1) a46(r229,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a46(r229,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a41(r231,l1) a43(r134,l1) a45(r226,l1) a47(r142,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a47(r142,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a46(r229,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a48(r225,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a49(r224,l1) a50(r153,l1) a51(r223,l1) a52(r154,l1) a53(r221,l1) a54(r222,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a49(r224,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a48(r225,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a50(r153,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a48(r225,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a51(r223,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a48(r225,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a52(r154,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a48(r225,l1) a53(r221,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a53(r221,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a48(r225,l1) a52(r154,l1) a54(r222,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a54(r222,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a48(r225,l1) a53(r221,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a55(r146,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a43(r134,l1) a37(r147,l1) a68(r140,l1) a32(r158,l1) a33(r145,l1) a72(r144,l1) a74(r193,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a56(r220,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a57(r218,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a58(r219,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a59(r216,l1) a60(r217,l1) a37(r147,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a59(r216,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a58(r219,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a60(r217,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a58(r219,l1) a37(r147,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a61(r214,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a62(r215,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a63(r212,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a64(r213,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a65(r211,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a66(r210,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a67(r209,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a67(r209,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a66(r210,l1) a68(r140,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a68(r140,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a55(r146,l1) a37(r147,l1) a67(r209,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1) a73(r195,l1) a72(r144,l1) a74(r193,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a69(r156,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a37(r147,l1) a68(r140,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a70(r204,l1) a71(r198,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a70(r204,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a37(r147,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a71(r198,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a37(r147,l1) a68(r140,l1) a69(r156,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a72(r144,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a55(r146,l1) a37(r147,l1) a68(r140,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a73(r195,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a73(r195,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a37(r147,l1) a68(r140,l1) a36(r139,l1) a32(r158,l1) a33(r145,l1) a72(r144,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a74(r193,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a55(r146,l1) a37(r147,l1) a68(r140,l1) a32(r158,l1) a33(r145,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a75(r192,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a76(r191,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a77(r190,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a77(r190,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a39(r189,l1) a35(r160,l1) a76(r191,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a78(r163,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a35(r160,l1) a55(r146,l1) a33(r145,l1) a34(r159,l1) a79(r185,l1) a80(r186,l1) a81(r184,l1) a82(r162,l1) a83(r180,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a79(r185,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a35(r160,l1) a55(r146,l1) a78(r163,l1) a34(r159,l1) a80(r186,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a80(r186,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a35(r160,l1) a55(r146,l1) a78(r163,l1) a34(r159,l1) a79(r185,l1) a81(r184,l1) a82(r162,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a81(r184,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a35(r160,l1) a55(r146,l1) a78(r163,l1) a34(r159,l1) a80(r186,l1) a82(r162,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a82(r162,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a35(r160,l1) a55(r146,l1) a78(r163,l1) a34(r159,l1) a80(r186,l1) a81(r184,l1) a83(r180,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a83(r180,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a78(r163,l1) a82(r162,l1) a84(r178,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a84(r178,l1) conflicts: a21(r143,l1) a22(r148,l1) a23(r149,l1) a24(r150,l1) a25(r151,l1) a26(r164,l1) a27(r167,l1) a28(r169,l1) a29(r170,l1) a30(r239,l1) a31(r240,l1) a83(r180,l1)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a85(r237,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a86(r189,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a87(r233,l0) a89(r230,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0) a103(r220,l0) a104(r218,l0) a106(r216,l0) a105(r219,l0) a107(r217,l0) a108(r214,l0) a109(r215,l0) a110(r212,l0) a111(r213,l0) a112(r211,l0) a113(r210,l0) a114(r209,l0) a115(r140,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0) a122(r192,l0) a124(r190,l0) a123(r191,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a87(r233,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a88(r231,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a89(r230,l0) a90(r134,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a89(r230,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a88(r231,l0) a90(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a90(r134,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a89(r230,l0) a88(r231,l0) a91(r228,l0) a92(r226,l0) a93(r229,l0) a94(r142,l0) a96(r224,l0) a95(r225,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0) a102(r146,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a91(r228,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a88(r231,l0) a90(r134,l0) a92(r226,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a92(r226,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a88(r231,l0) a90(r134,l0) a91(r228,l0) a93(r229,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a93(r229,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a88(r231,l0) a90(r134,l0) a92(r226,l0) a94(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a94(r142,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a93(r229,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a95(r225,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a96(r224,l0) a97(r153,l0) a98(r223,l0) a99(r154,l0) a100(r221,l0) a101(r222,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a96(r224,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a95(r225,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a97(r153,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a95(r225,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a98(r223,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a95(r225,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a99(r154,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a95(r225,l0) a100(r221,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a100(r221,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a95(r225,l0) a99(r154,l0) a101(r222,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a101(r222,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a95(r225,l0) a100(r221,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a102(r146,l0) conflicts: a1(r158,l0) a2(r170,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a90(r134,l0) a115(r140,l0) a119(r144,l0) a121(r193,l0) a125(r163,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a103(r220,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a104(r218,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a105(r219,l0) conflicts: a2(r170,l0) a4(r147,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a106(r216,l0) a107(r217,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a106(r216,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a105(r219,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a107(r217,l0) conflicts: a2(r170,l0) a4(r147,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a105(r219,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a108(r214,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a109(r215,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a110(r212,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a111(r213,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a112(r211,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a113(r210,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a114(r209,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a114(r209,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a113(r210,l0) a115(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a115(r140,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a102(r146,l0) a114(r209,l0) a116(r156,l0) a117(r204,l0) a118(r198,l0) a120(r195,l0) a119(r144,l0) a121(r193,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a116(r156,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a115(r140,l0) a117(r204,l0) a118(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a117(r204,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a115(r140,l0) a116(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a118(r198,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a115(r140,l0) a116(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a119(r144,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a102(r146,l0) a115(r140,l0) a120(r195,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a120(r195,l0) conflicts: a1(r158,l0) a2(r170,l0) a3(r139,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a115(r140,l0) a119(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a121(r193,l0) conflicts: a1(r158,l0) a2(r170,l0) a4(r147,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a102(r146,l0) a115(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a122(r192,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a123(r191,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a124(r190,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a124(r190,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a86(r189,l0) a123(r191,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a125(r163,l0) conflicts: a2(r170,l0) a5(r145,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a102(r146,l0) a126(r185,l0) a127(r186,l0) a128(r184,l0) a129(r162,l0) a130(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a126(r185,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a102(r146,l0) a125(r163,l0) a127(r186,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a127(r186,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a102(r146,l0) a125(r163,l0) a126(r185,l0) a128(r184,l0) a129(r162,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a128(r184,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a102(r146,l0) a125(r163,l0) a127(r186,l0) a129(r162,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a129(r162,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a8(r159,l0) a9(r160,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a102(r146,l0) a125(r163,l0) a127(r186,l0) a128(r184,l0) a130(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a130(r180,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a125(r163,l0) a129(r162,l0) a131(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a131(r178,l0) conflicts: a2(r170,l0) a6(r148,l0) a7(r169,l0) a10(r149,l0) a14(r164,l0) a15(r150,l0) a16(r240,l0) a17(r239,l0) a18(r151,l0) a19(r143,l0) a20(r167,l0) a130(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a10(r149)<->a12(r176)@125:shuffle
  cp1:a10(r149)<->a13(r172)@125:shuffle
  cp2:a10(r149)<->a11(r166)@125:shuffle
  cp3:a45(r226)<->a47(r142)@125:shuffle
  cp4:a44(r228)<->a46(r229)@125:shuffle
  cp5:a42(r230)<->a44(r228)@125:shuffle
  cp6:a42(r230)<->a45(r226)@125:shuffle
  cp7:a40(r233)<->a42(r230)@125:shuffle
  cp8:a40(r233)<->a41(r231)@125:shuffle
  cp9:a52(r154)<->a54(r222)@125:shuffle
  cp10:a51(r223)<->a52(r154)@125:shuffle
  cp11:a51(r223)<->a53(r221)@125:shuffle
  cp12:a50(r153)<->a51(r223)@125:shuffle
  cp13:a49(r224)<->a50(r153)@125:shuffle
  cp14:a47(r142)<->a49(r224)@125:shuffle
  cp15:a47(r142)<->a48(r225)@125:shuffle
  cp16:a59(r216)<->a60(r217)@125:shuffle
  cp17:a37(r147)<->a59(r216)@125:shuffle
  cp18:a57(r218)<->a59(r216)@125:shuffle
  cp19:a57(r218)<->a58(r219)@125:shuffle
  cp20:a56(r220)<->a57(r218)@125:shuffle
  cp21:a63(r212)<->a64(r213)@125:shuffle
  cp22:a62(r215)<->a63(r212)@125:shuffle
  cp23:a61(r214)<->a62(r215)@125:shuffle
  cp24:a67(r209)<->a69(r156)@125:shuffle
  cp25:a66(r210)<->a68(r140)@125:shuffle
  cp26:a65(r211)<->a67(r209)@125:shuffle
  cp27:a65(r211)<->a66(r210)@125:shuffle
  cp28:a69(r156)<->a73(r195)@125:shuffle
  cp29:a69(r156)<->a72(r144)@125:shuffle
  cp30:a70(r204)<->a71(r198)@125:shuffle
  cp31:a72(r144)<->a74(r193)@125:shuffle
  cp32:a75(r192)<->a77(r190)@125:shuffle
  cp33:a75(r192)<->a76(r191)@125:shuffle
  cp34:a32(r158)<->a78(r163)@125:shuffle
  cp35:a33(r145)<->a79(r185)@125:shuffle
  cp36:a92(r226)<->a94(r142)@125:shuffle
  cp37:a91(r228)<->a93(r229)@125:shuffle
  cp38:a89(r230)<->a91(r228)@125:shuffle
  cp39:a89(r230)<->a92(r226)@125:shuffle
  cp40:a87(r233)<->a89(r230)@125:shuffle
  cp41:a87(r233)<->a88(r231)@125:shuffle
  cp42:a99(r154)<->a101(r222)@125:shuffle
  cp43:a98(r223)<->a99(r154)@125:shuffle
  cp44:a98(r223)<->a100(r221)@125:shuffle
  cp45:a97(r153)<->a98(r223)@125:shuffle
  cp46:a96(r224)<->a97(r153)@125:shuffle
  cp47:a94(r142)<->a96(r224)@125:shuffle
  cp48:a94(r142)<->a95(r225)@125:shuffle
  cp49:a106(r216)<->a107(r217)@125:shuffle
  cp50:a4(r147)<->a106(r216)@125:shuffle
  cp51:a104(r218)<->a106(r216)@125:shuffle
  cp52:a104(r218)<->a105(r219)@125:shuffle
  cp53:a103(r220)<->a104(r218)@125:shuffle
  cp54:a110(r212)<->a111(r213)@125:shuffle
  cp55:a109(r215)<->a110(r212)@125:shuffle
  cp56:a108(r214)<->a109(r215)@125:shuffle
  cp57:a114(r209)<->a116(r156)@125:shuffle
  cp58:a113(r210)<->a115(r140)@125:shuffle
  cp59:a112(r211)<->a114(r209)@125:shuffle
  cp60:a112(r211)<->a113(r210)@125:shuffle
  cp61:a116(r156)<->a120(r195)@125:shuffle
  cp62:a116(r156)<->a119(r144)@125:shuffle
  cp63:a117(r204)<->a118(r198)@125:shuffle
  cp64:a119(r144)<->a121(r193)@125:shuffle
  cp65:a122(r192)<->a124(r190)@125:shuffle
  cp66:a122(r192)<->a123(r191)@125:shuffle
  cp67:a1(r158)<->a125(r163)@125:shuffle
  cp68:a5(r145)<->a126(r185)@125:shuffle
  regions=2, blocks=37, points=156
    allocnos=132, copies=69, conflicts=0, ranges=117

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 36 35 32 25 6 4 2(->34:l1)
    all: 0r161 1r158 2r170 3r139 4r147 5r145 6r148 7r169 8r159 9r160 10r149 11r166 12r176 13r172 14r164 15r150 16r240 17r239 18r151 19r143 20r167 85r237 86r189 87r233 88r231 89r230 90r134 91r228 92r226 93r229 94r142 95r225 96r224 97r153 98r223 99r154 100r221 101r222 102r146 103r220 104r218 105r219 106r216 107r217 108r214 109r215 110r212 111r213 112r211 113r210 114r209 115r140 116r156 117r204 118r198 119r144 120r195 121r193 122r192 123r191 124r190 125r163 126r185 127r186 128r184 129r162 130r180 131r178
    modified regnos: 134 139 140 142 143 144 145 146 147 148 149 150 151 153 154 156 158 159 160 161 162 163 164 166 167 169 170 172 176 178 180 184 185 186 189 190 191 192 193 195 198 204 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 228 229 230 231 233 237 239 240
    border:
    Pressure: GENERAL_REGS=21
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 5 regs less
    Reg 170 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 5 regs less
    Reg 147 of GENERAL_REGS has 5 regs less
    Reg 145 of GENERAL_REGS has 5 regs less
    Reg 148 of GENERAL_REGS has 3 regs less
    Reg 169 of GENERAL_REGS has 3 regs less
    Reg 159 of GENERAL_REGS has 5 regs less
    Reg 160 of GENERAL_REGS has 5 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 4 regs less
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 172 of GENERAL_REGS has 3 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 2 regs less
    Reg 240 of GENERAL_REGS has 1 regs less
    Reg 239 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
    Reg 167 of GENERAL_REGS has 2 regs less
    Reg 237 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 233 of GENERAL_REGS has 1 regs less
    Reg 231 of GENERAL_REGS has 1 regs less
    Reg 230 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 228 of GENERAL_REGS has 1 regs less
    Reg 226 of GENERAL_REGS has 1 regs less
    Reg 229 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 225 of GENERAL_REGS has 1 regs less
    Reg 224 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 223 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 221 of GENERAL_REGS has 1 regs less
    Reg 222 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 220 of GENERAL_REGS has 1 regs less
    Reg 218 of GENERAL_REGS has 1 regs less
    Reg 219 of GENERAL_REGS has 1 regs less
    Reg 216 of GENERAL_REGS has 1 regs less
    Reg 217 of GENERAL_REGS has 1 regs less
    Reg 214 of GENERAL_REGS has 1 regs less
    Reg 215 of GENERAL_REGS has 1 regs less
    Reg 212 of GENERAL_REGS has 1 regs less
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 211 of GENERAL_REGS has 1 regs less
    Reg 210 of GENERAL_REGS has 1 regs less
    Reg 209 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 204 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 192 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 190 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 185 of GENERAL_REGS has 1 regs less
    Reg 186 of GENERAL_REGS has 1 regs less
    Reg 184 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 178 of GENERAL_REGS has 1 regs less
      Pushing a85(r237,l0: a38(r237,l1))
      Pushing a0(r161,l0)
      Pushing a16(r240,l0)(potential spill: pri=298, cost=20000)
      Pushing a131(r178,l0: a84(r178,l1))
      Pushing a12(r176,l0)
      Pushing a17(r239,l0)(potential spill: pri=312, cost=20000)
      Pushing a130(r180,l0: a83(r180,l1))
      Pushing a122(r192,l0: a75(r192,l1))
      Pushing a112(r211,l0: a65(r211,l1))
      Pushing a111(r213,l0: a64(r213,l1))
      Pushing a110(r212,l0: a63(r212,l1))
      Pushing a109(r215,l0: a62(r215,l1))
      Pushing a108(r214,l0: a61(r214,l1))
      Pushing a104(r218,l0: a57(r218,l1))
      Pushing a103(r220,l0: a56(r220,l1))
      Pushing a87(r233,l0: a40(r233,l1))
      Pushing a20(r167,l0)(potential spill: pri=444, cost=24000)
      Pushing a124(r190,l0: a77(r190,l1))
      Pushing a123(r191,l0: a76(r191,l1))
      Pushing a113(r210,l0: a66(r210,l1))
      Pushing a114(r209,l0: a67(r209,l1))
      Pushing a106(r216,l0: a59(r216,l1))
      Pushing a14(r164,l0)(potential spill: pri=638, cost=30000)
      Pushing a107(r217,l0: a60(r217,l1))
      Pushing a105(r219,l0: a58(r219,l1))
      Pushing a98(r223,l0: a51(r223,l1))
      Pushing a97(r153,l0: a50(r153,l1))
      Pushing a96(r224,l0: a49(r224,l1))
      Pushing a89(r230,l0: a42(r230,l1))
      Pushing a94(r142,l0: a47(r142,l1))
      Pushing a13(r172,l0)
      Pushing a10(r149,l0)(potential spill: pri=810, cost=30000)
      Pushing a126(r185,l0: a79(r185,l1))
      Pushing a101(r222,l0: a54(r222,l1))
      Pushing a100(r221,l0: a53(r221,l1))
      Pushing a99(r154,l0: a52(r154,l1))
      Pushing a95(r225,l0: a48(r225,l1))
      Pushing a93(r229,l0: a46(r229,l1))
      Pushing a92(r226,l0: a45(r226,l1))
      Pushing a91(r228,l0: a44(r228,l1))
      Pushing a90(r134,l0: a43(r134,l1))
      Pushing a88(r231,l0: a41(r231,l1))
      Pushing a5(r145,l0)(potential spill: pri=1111, cost=30000)
      Pushing a3(r139,l0)(potential spill: pri=1363, cost=30000)
      Pushing a127(r186,l0: a80(r186,l1))(potential spill: pri=1428, cost=20000)
      Pushing a128(r184,l0: a81(r184,l1))
      Pushing a125(r163,l0: a78(r163,l1))
      Pushing a129(r162,l0: a82(r162,l1))
      Pushing a115(r140,l0: a68(r140,l1))(potential spill: pri=1578, cost=30000)
      Pushing a121(r193,l0: a74(r193,l1))
      Pushing a120(r195,l0: a73(r195,l1))
      Pushing a117(r204,l0: a70(r204,l1))
      Pushing a118(r198,l0: a71(r198,l1))
      Pushing a119(r144,l0: a72(r144,l1))
      Pushing a102(r146,l0: a55(r146,l1))
      Pushing a116(r156,l0: a69(r156,l1))
      Pushing a18(r151,l0)
      Pushing a86(r189,l0: a39(r189,l1))
      Pushing a15(r150,l0)
      Pushing a2(r170,l0)
      Pushing a7(r169,l0)
      Pushing a19(r143,l0)
      Pushing a6(r148,l0)
      Pushing a11(r166,l0)
      Pushing a8(r159,l0)
      Pushing a4(r147,l0)
      Pushing a1(r158,l0)
      Pushing a9(r160,l0)
      Popping a9(r160,l0)  -- assign reg 12
      Popping a1(r158,l0)  -- assign reg 4
      Popping a4(r147,l0)  -- assign reg 5
      Popping a8(r159,l0)  -- assign reg 5
      Popping a11(r166,l0)  -- assign reg 0
      Popping a6(r148,l0)  -- assign reg 3
      Popping a19(r143,l0)  -- assign reg 6
      Popping a7(r169,l0)  -- assign reg 7
      Popping a2(r170,l0)  -- assign reg 1
      Popping a15(r150,l0)  -- assign reg 8
      Popping a86(r189,l0: a39(r189,l1))  -- assign reg 0
      Popping a18(r151,l0)  -- assign reg 2
      Popping a116(r156,l0: a69(r156,l1))  -- assign reg 10
      Popping a102(r146,l0: a55(r146,l1))  -- assign reg 9
      Popping a119(r144,l0: a72(r144,l1))  -- assign reg 10
      Popping a118(r198,l0: a71(r198,l1))  -- assign reg 9
      Popping a117(r204,l0: a70(r204,l1))  -- assign reg 9
      Popping a120(r195,l0: a73(r195,l1))  -- assign reg 9
      Popping a121(r193,l0: a74(r193,l1))  -- assign reg 10
      Popping a115(r140,l0: a68(r140,l1))  -- assign reg 11
      Popping a129(r162,l0: a82(r162,l1))  -- assign reg 0
      Popping a125(r163,l0: a78(r163,l1))  -- assign reg 4
      Popping a128(r184,l0: a81(r184,l1))  -- assign reg 10
      Popping a127(r186,l0: a80(r186,l1))  -- assign reg 11
      Popping a3(r139,l0)  -- spill
      Popping a5(r145,l0)  -- spill
      Popping a88(r231,l0: a41(r231,l1))  -- assign reg 4
      Popping a90(r134,l0: a43(r134,l1))  -- assign reg 5
      Popping a91(r228,l0: a44(r228,l1))  -- assign reg 10
      Popping a92(r226,l0: a45(r226,l1))  -- assign reg 9
      Popping a93(r229,l0: a46(r229,l1))  -- assign reg 10
      Popping a95(r225,l0: a48(r225,l1))  -- assign reg 4
      Popping a99(r154,l0: a52(r154,l1))  -- assign reg 10
      Popping a100(r221,l0: a53(r221,l1))  -- assign reg 9
      Popping a101(r222,l0: a54(r222,l1))  -- assign reg 10
      Popping a126(r185,l0: a79(r185,l1))  -- assign reg 0
      Popping a10(r149,l0)  -- spill
      Popping a13(r172,l0)  -- assign reg 12
      Popping a94(r142,l0: a47(r142,l1))  -- assign reg 9
      Popping a89(r230,l0: a42(r230,l1))  -- assign reg 10
      Popping a96(r224,l0: a49(r224,l1))  -- assign reg 9
      Popping a97(r153,l0: a50(r153,l1))  -- assign reg 9
      Popping a98(r223,l0: a51(r223,l1))  -- assign reg 9
      Popping a105(r219,l0: a58(r219,l1))  -- assign reg 4
      Popping a107(r217,l0: a60(r217,l1))  -- assign reg 10
      Popping a14(r164,l0)  -- spill
      Popping a106(r216,l0: a59(r216,l1))  -- assign reg 5
      Popping a114(r209,l0: a67(r209,l1))  -- assign reg 10
      Popping a113(r210,l0: a66(r210,l1))  -- assign reg 11
      Popping a123(r191,l0: a76(r191,l1))  -- assign reg 4
      Popping a124(r190,l0: a77(r190,l1))  -- assign reg 5
      Popping a20(r167,l0)  -- spill
      Popping a87(r233,l0: a40(r233,l1))  -- assign reg 10
      Popping a103(r220,l0: a56(r220,l1))  -- assign reg 5
      Popping a104(r218,l0: a57(r218,l1))  -- assign reg 5
      Popping a108(r214,l0: a61(r214,l1))  -- assign reg 4
      Popping a109(r215,l0: a62(r215,l1))  -- assign reg 4
      Popping a110(r212,l0: a63(r212,l1))  -- assign reg 4
      Popping a111(r213,l0: a64(r213,l1))  -- assign reg 4
      Popping a112(r211,l0: a65(r211,l1))  -- assign reg 10
      Popping a122(r192,l0: a75(r192,l1))  -- assign reg 4
      Popping a130(r180,l0: a83(r180,l1))  -- assign reg 12
      Popping a17(r239,l0)  -- spill
      Popping a12(r176,l0)  -- assign reg 4
      Popping a131(r178,l0: a84(r178,l1))  -- assign reg 0
      Popping a16(r240,l0)  -- spill
      Popping a0(r161,l0)  -- assign reg 0
      Popping a85(r237,l0: a38(r237,l1))  -- assign reg 0

  Loop 1 (parent 0, header bb34, depth 1)
    bbs: 34(->35:l0) 33 31 30 29 28 27 26 24(->25:l0) 23(->25:l0) 22 21 20 19 18(->32:l0) 17 16(->32:l0) 15 14 13 12 11(->32:l0) 10 9 8 7 5(->6:l0) 3(->4:l0)
    all: 21r143 22r148 23r149 24r150 25r151 26r164 27r167 28r169 29r170 30r239 31r240 32r158 33r145 34r159 35r160 36r139 37r147 38r237 39r189 40r233 41r231 42r230 43r134 44r228 45r226 46r229 47r142 48r225 49r224 50r153 51r223 52r154 53r221 54r222 55r146 56r220 57r218 58r219 59r216 60r217 61r214 62r215 63r212 64r213 65r211 66r210 67r209 68r140 69r156 70r204 71r198 72r144 73r195 74r193 75r192 76r191 77r190 78r163 79r185 80r186 81r184 82r162 83r180 84r178
    modified regnos: 134 139 140 142 143 144 145 146 147 148 153 154 156 158 159 160 162 163 178 180 184 185 186 189 190 191 192 193 195 198 204 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 228 229 230 231 233 237
    border: 21r143 22r148 23r149 24r150 25r151 26r164 27r167 28r169 29r170 30r239 31r240 32r158 33r145 34r159 35r160 36r139 37r147
    Pressure: GENERAL_REGS=21
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 237 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 233 of GENERAL_REGS has 1 regs less
    Reg 231 of GENERAL_REGS has 1 regs less
    Reg 230 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 228 of GENERAL_REGS has 1 regs less
    Reg 226 of GENERAL_REGS has 1 regs less
    Reg 229 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 225 of GENERAL_REGS has 1 regs less
    Reg 224 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 223 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 221 of GENERAL_REGS has 1 regs less
    Reg 222 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 220 of GENERAL_REGS has 1 regs less
    Reg 218 of GENERAL_REGS has 1 regs less
    Reg 219 of GENERAL_REGS has 1 regs less
    Reg 216 of GENERAL_REGS has 1 regs less
    Reg 217 of GENERAL_REGS has 1 regs less
    Reg 214 of GENERAL_REGS has 1 regs less
    Reg 215 of GENERAL_REGS has 1 regs less
    Reg 212 of GENERAL_REGS has 1 regs less
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 211 of GENERAL_REGS has 1 regs less
    Reg 210 of GENERAL_REGS has 1 regs less
    Reg 209 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 204 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 192 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 190 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 185 of GENERAL_REGS has 1 regs less
    Reg 186 of GENERAL_REGS has 1 regs less
    Reg 184 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 178 of GENERAL_REGS has 1 regs less
      Pushing a84(r178,l1)
      Pushing a83(r180,l1)
      Pushing a75(r192,l1)
      Pushing a65(r211,l1)
      Pushing a64(r213,l1)
      Pushing a63(r212,l1)
      Pushing a62(r215,l1)
      Pushing a61(r214,l1)
      Pushing a57(r218,l1)
      Pushing a56(r220,l1)
      Pushing a40(r233,l1)
      Pushing a38(r237,l1)
      Pushing a33(r145,l1)(potential spill: pri=-1153, cost=-30000)
      Pushing a36(r139,l1)(potential spill: pri=-952, cost=-20000)
      Pushing a27(r167,l1)(potential spill: pri=-612, cost=-30000)
      Pushing a77(r190,l1)
      Pushing a76(r191,l1)
      Pushing a66(r210,l1)
      Pushing a67(r209,l1)
      Pushing a59(r216,l1)
      Pushing a23(r149,l1)(potential spill: pri=-465, cost=-20000)
      Pushing a60(r217,l1)
      Pushing a58(r219,l1)
      Pushing a51(r223,l1)
      Pushing a50(r153,l1)
      Pushing a49(r224,l1)
      Pushing a42(r230,l1)
      Pushing a47(r142,l1)
      Pushing a26(r164,l1)(potential spill: pri=-571, cost=-20000)
      Pushing a79(r185,l1)
      Pushing a54(r222,l1)
      Pushing a53(r221,l1)
      Pushing a52(r154,l1)
      Pushing a48(r225,l1)
      Pushing a46(r229,l1)
      Pushing a45(r226,l1)
      Pushing a44(r228,l1)
      Pushing a43(r134,l1)
      Pushing a41(r231,l1)
      Pushing a80(r186,l1)(potential spill: pri=1428, cost=20000)
      Pushing a34(r159,l1)
      Pushing a81(r184,l1)
      Pushing a78(r163,l1)
      Pushing a82(r162,l1)
      Pushing a68(r140,l1)(potential spill: pri=1578, cost=30000)
      Pushing a74(r193,l1)
      Pushing a73(r195,l1)
      Pushing a70(r204,l1)
      Pushing a71(r198,l1)
      Pushing a72(r144,l1)
      Pushing a29(r170,l1)
      Pushing a28(r169,l1)
      Pushing a24(r150,l1)
      Pushing a25(r151,l1)
      Pushing a37(r147,l1)
      Pushing a22(r148,l1)
      Pushing a21(r143,l1)
      Pushing a55(r146,l1)
      Pushing a69(r156,l1)
      Pushing a32(r158,l1)
      Pushing a39(r189,l1)
      Pushing a35(r160,l1)
      Popping a35(r160,l1)  -- assign reg 12
      Popping a39(r189,l1)  -- assign reg 0
      Popping a32(r158,l1)  -- assign reg 4
      Popping a69(r156,l1)  -- assign reg 10
      Popping a55(r146,l1)  -- assign reg 9
      Popping a21(r143,l1)  -- assign reg 6
      Popping a22(r148,l1)  -- assign reg 3
      Popping a37(r147,l1)  -- assign reg 5
      Popping a25(r151,l1)  -- assign reg 2
      Popping a24(r150,l1)  -- assign reg 8
      Popping a28(r169,l1)  -- assign reg 7
      Popping a29(r170,l1)  -- assign reg 1
      Popping a72(r144,l1)  -- assign reg 10
      Popping a71(r198,l1)  -- assign reg 9
      Popping a70(r204,l1)  -- assign reg 9
      Popping a73(r195,l1)  -- assign reg 9
      Popping a74(r193,l1)  -- assign reg 10
      Popping a68(r140,l1)  -- assign reg 11
      Popping a82(r162,l1)  -- assign reg 0
      Popping a78(r163,l1)  -- assign reg 4
      Popping a81(r184,l1)  -- assign reg 10
      Popping a34(r159,l1)  -- assign reg 5
      Popping a80(r186,l1)  -- assign reg 11
      Popping a41(r231,l1)  -- assign reg 4
      Popping a43(r134,l1)  -- assign reg 5
      Popping a44(r228,l1)  -- assign reg 10
      Popping a45(r226,l1)  -- assign reg 9
      Popping a46(r229,l1)  -- assign reg 10
      Popping a48(r225,l1)  -- assign reg 4
      Popping a52(r154,l1)  -- assign reg 10
      Popping a53(r221,l1)  -- assign reg 9
      Popping a54(r222,l1)  -- assign reg 10
      Popping a79(r185,l1)  -- assign reg 0
      Popping a26(r164,l1)  -- spill
      Popping a47(r142,l1)  -- assign reg 9
      Popping a42(r230,l1)  -- assign reg 10
      Popping a49(r224,l1)  -- assign reg 9
      Popping a50(r153,l1)  -- assign reg 9
      Popping a51(r223,l1)  -- assign reg 9
      Popping a58(r219,l1)  -- assign reg 4
      Popping a60(r217,l1)  -- assign reg 10
      Popping a23(r149,l1)  -- spill
      Popping a59(r216,l1)  -- assign reg 5
      Popping a67(r209,l1)  -- assign reg 10
      Popping a66(r210,l1)  -- assign reg 11
      Popping a76(r191,l1)  -- assign reg 4
      Popping a77(r190,l1)  -- assign reg 5
      Popping a27(r167,l1)  -- spill
      Popping a36(r139,l1)  -- spill
      Popping a33(r145,l1)  -- spill
      Popping a38(r237,l1)  -- assign reg 0
      Popping a40(r233,l1)  -- assign reg 10
      Popping a56(r220,l1)  -- assign reg 5
      Popping a57(r218,l1)  -- assign reg 5
      Popping a61(r214,l1)  -- assign reg 4
      Popping a62(r215,l1)  -- assign reg 4
      Popping a63(r212,l1)  -- assign reg 4
      Popping a64(r213,l1)  -- assign reg 4
      Popping a65(r211,l1)  -- assign reg 10
      Popping a75(r192,l1)  -- assign reg 4
      Popping a83(r180,l1)  -- assign reg 12
      Popping a84(r178,l1)  -- assign reg 0
Disposition:
   43:r134 l1     5   36:r139 l1   mem    3:r139 l0   mem   68:r140 l1    11
   47:r142 l1     9   21:r143 l1     6   19:r143 l0     6   72:r144 l1    10
   33:r145 l1   mem    5:r145 l0   mem   55:r146 l1     9   37:r147 l1     5
    4:r147 l0     5   22:r148 l1     3    6:r148 l0     3   23:r149 l1   mem
   10:r149 l0   mem   24:r150 l1     8   15:r150 l0     8   25:r151 l1     2
   18:r151 l0     2   50:r153 l1     9   52:r154 l1    10   69:r156 l1    10
   32:r158 l1     4    1:r158 l0     4   34:r159 l1     5    8:r159 l0     5
   35:r160 l1    12    9:r160 l0    12    0:r161 l0     0   82:r162 l1     0
   78:r163 l1     4   26:r164 l1   mem   14:r164 l0   mem   11:r166 l0     0
   27:r167 l1   mem   20:r167 l0   mem   28:r169 l1     7    7:r169 l0     7
   29:r170 l1     1    2:r170 l0     1   13:r172 l0    12   12:r176 l0     4
   84:r178 l1     0   83:r180 l1    12   81:r184 l1    10   79:r185 l1     0
   80:r186 l1    11   39:r189 l1     0   77:r190 l1     5   76:r191 l1     4
   75:r192 l1     4   74:r193 l1    10   73:r195 l1     9   71:r198 l1     9
   70:r204 l1     9   67:r209 l1    10   66:r210 l1    11   65:r211 l1    10
   63:r212 l1     4   64:r213 l1     4   61:r214 l1     4   62:r215 l1     4
   59:r216 l1     5   60:r217 l1    10   57:r218 l1     5   58:r219 l1     4
   56:r220 l1     5   53:r221 l1     9   54:r222 l1    10   51:r223 l1     9
   49:r224 l1     9   48:r225 l1     4   45:r226 l1     9   44:r228 l1    10
   46:r229 l1    10   42:r230 l1    10   41:r231 l1     4   40:r233 l1    10
   38:r237 l1     0   30:r239 l1   mem   17:r239 l0   mem   31:r240 l1   mem
   16:r240 l0   mem
New iteration of spill/restore move
      Changing RTL for loop 1 (header bb34)
  6 vs parent 6:      Creating newreg=241 from oldreg=143
  3 vs parent 3:      Creating newreg=242 from oldreg=148
  8 vs parent 8:      Creating newreg=243 from oldreg=150
  2 vs parent 2:      Creating newreg=244 from oldreg=151
  7 vs parent 7:      Creating newreg=245 from oldreg=169
  1 vs parent 1:      Creating newreg=246 from oldreg=170
  4 vs parent 4:      Creating newreg=247 from oldreg=158
  5 vs parent 5:      Creating newreg=248 from oldreg=159
  12 vs parent 12:      Creating newreg=249 from oldreg=160
  5 vs parent 5:      Creating newreg=250 from oldreg=147
rescanning insn with uid = 248.
deleting insn with uid = 248.
rescanning insn with uid = 250.
deleting insn with uid = 250.
rescanning insn with uid = 243.
deleting insn with uid = 243.
rescanning insn with uid = 244.
deleting insn with uid = 244.
rescanning insn with uid = 226.
deleting insn with uid = 226.
rescanning insn with uid = 227.
deleting insn with uid = 227.
rescanning insn with uid = 201.
deleting insn with uid = 201.
rescanning insn with uid = 192.
deleting insn with uid = 192.
rescanning insn with uid = 191.
deleting insn with uid = 191.
rescanning insn with uid = 194.
deleting insn with uid = 194.
rescanning insn with uid = 195.
deleting insn with uid = 195.
rescanning insn with uid = 180.
deleting insn with uid = 180.
rescanning insn with uid = 183.
deleting insn with uid = 183.
rescanning insn with uid = 184.
deleting insn with uid = 184.
rescanning insn with uid = 173.
deleting insn with uid = 173.
rescanning insn with uid = 174.
deleting insn with uid = 174.
rescanning insn with uid = 132.
deleting insn with uid = 132.
rescanning insn with uid = 121.
deleting insn with uid = 121.
rescanning insn with uid = 112.
deleting insn with uid = 112.
rescanning insn with uid = 114.
deleting insn with uid = 114.
rescanning insn with uid = 115.
deleting insn with uid = 115.
rescanning insn with uid = 103.
deleting insn with uid = 103.
rescanning insn with uid = 98.
deleting insn with uid = 98.
rescanning insn with uid = 96.
deleting insn with uid = 96.
rescanning insn with uid = 92.
deleting insn with uid = 92.
rescanning insn with uid = 87.
deleting insn with uid = 87.
rescanning insn with uid = 83.
deleting insn with uid = 83.
rescanning insn with uid = 81.
deleting insn with uid = 81.
rescanning insn with uid = 78.
deleting insn with uid = 78.
rescanning insn with uid = 79.
deleting insn with uid = 79.
rescanning insn with uid = 77.
deleting insn with uid = 77.
rescanning insn with uid = 51.
deleting insn with uid = 51.
rescanning insn with uid = 56.
deleting insn with uid = 56.
rescanning insn with uid = 55.
deleting insn with uid = 55.
rescanning insn with uid = 57.
deleting insn with uid = 57.
rescanning insn with uid = 58.
deleting insn with uid = 58.
rescanning insn with uid = 26.
deleting insn with uid = 26.
rescanning insn with uid = 32.
deleting insn with uid = 32.
scanning new insn with uid = 328.
scanning new insn with uid = 329.
scanning new insn with uid = 330.
scanning new insn with uid = 331.
scanning new insn with uid = 332.
scanning new insn with uid = 333.
scanning new insn with uid = 334.
scanning new insn with uid = 335.
scanning new insn with uid = 336.
scanning new insn with uid = 337.
scanning new insn with uid = 338.
scanning new insn with uid = 339.
scanning new insn with uid = 340.
scanning new insn with uid = 341.
scanning new insn with uid = 342.
    Adding cp69:a19r143-a21r241
    Adding range [157..157] to allocno a19r143
    Adding cp70:a6r148-a22r242
    Adding range [157..159] to allocno a6r148
    Adding cp71:a15r150-a24r243
    Adding range [157..161] to allocno a15r150
    Adding cp72:a18r151-a25r244
    Adding range [157..163] to allocno a18r151
    Adding cp73:a7r169-a28r245
    Adding range [157..165] to allocno a7r169
    Adding cp74:a2r170-a29r246
    Adding range [157..167] to allocno a2r170
    Adding range [158..168] to allocno a21r241
    Adding range [160..168] to allocno a22r242
    Adding range [162..168] to allocno a24r243
    Adding range [164..168] to allocno a25r244
    Adding range [166..168] to allocno a28r245
    Adding range [168..168] to allocno a29r246
    Adding range [157..168] to live through  allocno a10r149
    Adding range [157..168] to live through  allocno a14r164
    Adding range [157..168] to live through  allocno a20r167
    Adding range [157..168] to live through  allocno a17r239
    Adding range [157..168] to live through  allocno a16r240
    Adding cp75:a6r148-a22r242
    Adding range [170..170] to allocno a22r242
    Adding cp76:a7r169-a28r245
    Adding range [170..172] to allocno a28r245
    Adding cp77:a2r170-a29r246
    Adding range [170..174] to allocno a29r246
    Adding range [171..175] to allocno a6r148
    Adding range [173..175] to allocno a7r169
    Adding range [175..175] to allocno a2r170
    Adding cp78:a6r148-a22r242
    Adding range [177..177] to allocno a22r242
    Adding cp79:a8r159-a34r248
    Adding range [177..179] to allocno a34r248
    Adding cp80:a9r160-a35r249
    Adding range [177..181] to allocno a35r249
    Adding cp81:a7r169-a28r245
    Adding range [177..183] to allocno a28r245
    Adding cp82:a2r170-a29r246
    Adding range [177..185] to allocno a29r246
    Adding range [178..186] to allocno a6r148
    Adding range [180..186] to allocno a8r159
    Adding range [182..186] to allocno a9r160
    Adding range [184..186] to allocno a7r169
    Adding range [186..186] to allocno a2r170
    Adding range [177..186] to live through  allocno a5r145
    Adding cp83:a4r147-a37r250
    Adding range [188..188] to allocno a37r250
    Adding cp84:a6r148-a22r242
    Adding range [188..190] to allocno a22r242
    Adding cp85:a1r158-a32r247
    Adding range [188..192] to allocno a32r247
    Adding cp86:a7r169-a28r245
    Adding range [188..194] to allocno a28r245
    Adding cp87:a2r170-a29r246
    Adding range [188..196] to allocno a29r246
    Adding range [189..197] to allocno a4r147
    Adding range [191..197] to allocno a6r148
    Adding range [193..197] to allocno a1r158
    Adding range [195..197] to allocno a7r169
    Adding range [197..197] to allocno a2r170
    Adding range [188..197] to live through  allocno a3r139
    Adding range [188..197] to live through  allocno a5r145
    Adding cp88:a1r158-a32r247
    Adding range [199..199] to allocno a32r247
    Adding cp89:a2r170-a29r246
    Adding range [199..201] to allocno a29r246
    Adding range [200..202] to allocno a1r158
    Adding range [202..202] to allocno a2r170
scanning new insn with uid = 322.
scanning new insn with uid = 323.
scanning new insn with uid = 324.
scanning new insn with uid = 325.
scanning new insn with uid = 326.
scanning new insn with uid = 327.
    New r241: setting preferred GENERAL_REGS, alternative NO_REGS
    New r242: setting preferred GENERAL_REGS, alternative NO_REGS
    New r243: setting preferred GENERAL_REGS, alternative NO_REGS
    New r244: setting preferred GENERAL_REGS, alternative NO_REGS
    New r245: setting preferred GENERAL_REGS, alternative NO_REGS
    New r246: setting preferred GENERAL_REGS, alternative NO_REGS
    New r247: setting preferred GENERAL_REGS, alternative NO_REGS
    New r248: setting preferred GENERAL_REGS, alternative NO_REGS
    New r249: setting preferred GENERAL_REGS, alternative NO_REGS
    New r250: setting preferred GENERAL_REGS, alternative NO_REGS
Flattening IR
      Moving ranges of a31r240 to a16r240:  [47..155]
      Moving ranges of a30r239 to a17r239:  [47..155]
      Moving ranges of a27r167 to a20r167:  [47..155]
      Moving ranges of a26r164 to a14r164:  [47..155]
      Moving ranges of a23r149 to a10r149:  [47..155]
      Moving ranges of a33r145 to a5r145:  [133..139] [105..119]
      Moving ranges of a36r139 to a3r139:  [105..113]
      Remove cp36:c92r226-c94r142
      Remove cp37:c91r228-c93r229
      Remove cp38:c89r230-c91r228
      Remove cp39:c89r230-c92r226
      Remove cp40:c87r233-c89r230
      Remove cp41:c87r233-c88r231
      Remove cp42:c99r154-c101r222
      Remove cp43:c98r223-c99r154
      Remove cp44:c98r223-c100r221
      Remove cp45:c97r153-c98r223
      Remove cp46:c96r224-c97r153
      Remove cp47:c94r142-c96r224
      Remove cp48:c94r142-c95r225
      Remove cp49:c106r216-c107r217
      Remove cp50:a4r147-c106r216
      Remove cp51:c104r218-c106r216
      Remove cp52:c104r218-c105r219
      Remove cp53:c103r220-c104r218
      Remove cp54:c110r212-c111r213
      Remove cp55:c109r215-c110r212
      Remove cp56:c108r214-c109r215
      Remove cp57:c114r209-c116r156
      Remove cp58:c113r210-c115r140
      Remove cp59:c112r211-c114r209
      Remove cp60:c112r211-c113r210
      Remove cp61:c116r156-c120r195
      Remove cp62:c116r156-c119r144
      Remove cp63:c117r204-c118r198
      Remove cp64:c119r144-c121r193
      Remove cp65:c122r192-c124r190
      Remove cp66:c122r192-c123r191
      Remove cp67:a1r158-c125r163
      Remove cp68:a5r145-c126r185
      Remove a23r149
      Remove a26r164
      Remove a27r167
      Remove a30r239
      Remove a31r240
      Remove a33r145
      Remove a36r139
      Remove a85r237
      Remove a86r189
      Remove a87r233
      Remove a88r231
      Remove a89r230
      Remove a90r134
      Remove a91r228
      Remove a92r226
      Remove a93r229
      Remove a94r142
      Remove a95r225
      Remove a96r224
      Remove a97r153
      Remove a98r223
      Remove a99r154
      Remove a100r221
      Remove a101r222
      Remove a102r146
      Remove a103r220
      Remove a104r218
      Remove a105r219
      Remove a106r216
      Remove a107r217
      Remove a108r214
      Remove a109r215
      Remove a110r212
      Remove a111r213
      Remove a112r211
      Remove a113r210
      Remove a114r209
      Remove a115r140
      Remove a116r156
      Remove a117r204
      Remove a118r198
      Remove a119r144
      Remove a120r195
      Remove a121r193
      Remove a122r192
      Remove a123r191
      Remove a124r190
      Remove a125r163
      Remove a126r185
      Remove a127r186
      Remove a128r184
      Remove a129r162
      Remove a130r180
      Remove a131r178
Compressing live ranges: from 203 to 198 - 97%
Ranges after the compression:
 a0(r161): [26..27] [17..18] [7..8] [2..3] [0..1]
 a1(r158): [195..197] [189..193] [11..16] [4..6]
 a2(r170): [197..197] [193..193] [183..183] [173..173] [156..166] [30..41] [24..25] [15..16] [5..6]
 a3(r139): [184..193] [105..113] [9..16]
 a4(r147): [185..193] [10..16]
 a5(r145): [184..193] [174..183] [133..139] [105..119] [21..25] [12..16]
 a6(r148): [187..193] [175..183] [169..173] [156..158] [28..39] [22..25] [13..16]
 a7(r169): [191..193] [181..183] [171..173] [156..164] [29..45] [23..25] [14..16]
 a8(r159): [177..183] [19..25]
 a9(r160): [179..183] [20..25]
 a10(r149): [156..167] [47..155] [31..32]
 a11(r166): [33..46]
 a12(r176): [33..35]
 a13(r172): [33..44]
 a14(r164): [156..167] [47..155] [31..34]
 a15(r150): [156..160] [31..40]
 a16(r240): [156..167] [47..155] [31..36]
 a17(r239): [156..167] [47..155] [31..37]
 a18(r151): [156..162] [31..38]
 a19(r143): [156..156] [31..43]
 a20(r167): [156..167] [47..155] [31..42]
 a21(r241): [157..167] [47..155]
 a22(r242): [184..186] [174..174] [168..168] [159..167] [47..155]
 a24(r243): [161..167] [47..155]
 a25(r244): [163..167] [47..155]
 a28(r245): [184..190] [174..180] [168..170] [165..167] [47..155]
 a29(r246): [194..196] [184..192] [174..182] [168..172] [167..167] [47..155]
 a32(r247): [194..194] [184..188] [132..136] [128..131] [126..127] [105..119]
 a34(r248): [174..176] [138..147]
 a35(r249): [174..178] [120..146] [98..119] [89..97] [78..88] [50..77]
 a37(r250): [184..184] [133..134] [130..131] [105..119] [84..88]
 a38(r237): [48..49]
 a39(r189): [120..135] [98..119] [89..97] [78..88] [50..77]
 a40(r233): [50..51]
 a41(r231): [52..58]
 a42(r230): [52..54]
 a43(r134): [53..76]
 a44(r228): [55..56]
 a45(r226): [55..59]
 a46(r229): [57..61]
 a47(r142): [60..62]
 a48(r225): [63..74]
 a49(r224): [63..64]
 a50(r153): [65..66]
 a51(r223): [67..68]
 a52(r154): [69..70]
 a53(r221): [69..73]
 a54(r222): [71..72]
 a55(r146): [129..145] [125..127] [114..119] [87..88] [75..77]
 a56(r220): [78..79]
 a57(r218): [80..81]
 a58(r219): [82..85]
 a59(r216): [82..83]
 a60(r217): [84..86]
 a61(r214): [89..90]
 a62(r215): [91..92]
 a63(r212): [93..94]
 a64(r213): [95..96]
 a65(r211): [98..99]
 a66(r210): [100..101]
 a67(r209): [100..103]
 a68(r140): [102..118]
 a69(r156): [104..110]
 a70(r204): [106..107]
 a71(r198): [108..109]
 a72(r144): [111..115]
 a73(r195): [111..112]
 a74(r193): [116..117]
 a75(r192): [120..121]
 a76(r191): [122..124]
 a77(r190): [122..123]
 a78(r163): [137..151]
 a79(r185): [140..142]
 a80(r186): [141..144]
 a81(r184): [143..148]
 a82(r162): [143..150]
 a83(r180): [149..153]
 a84(r178): [152..154]
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 53 count 99 (  2.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 53 count 114 (  3.1)
+++Costs: overall 158750, reg -21250, mem 180000, ld 0, st 0, move 42000
+++       move loops 0, new jumps 1
insn=2, live_throughout: 1, 2, 3, 13, 14, dead_or_set: 0, 166
insn=5, live_throughout: 1, 2, 13, 14, 166, dead_or_set: 3, 169
insn=10, live_throughout: 1, 2, 13, 14, 166, 169, dead_or_set: 172
insn=21, live_throughout: 1, 2, 13, 14, 166, 169, 172, dead_or_set: 143
insn=3, live_throughout: 2, 13, 14, 143, 166, 169, 172, dead_or_set: 1, 167
insn=6, live_throughout: 2, 13, 14, 143, 166, 167, 169, 172, dead_or_set: 170
insn=15, live_throughout: 2, 13, 14, 143, 166, 167, 169, 170, 172, dead_or_set: 150
insn=22, live_throughout: 2, 13, 14, 143, 150, 166, 167, 169, 170, 172, dead_or_set: 148
insn=12, live_throughout: 13, 14, 143, 148, 150, 166, 167, 169, 170, 172, dead_or_set: 2, 151
insn=139, live_throughout: 13, 14, 143, 148, 150, 151, 166, 167, 169, 170, 172, dead_or_set: 239
insn=149, live_throughout: 13, 14, 143, 148, 150, 151, 166, 167, 169, 170, 172, 239, dead_or_set: 240
insn=16, live_throughout: 13, 14, 143, 148, 150, 151, 166, 167, 169, 170, 172, 239, 240, dead_or_set: 176
insn=20, live_throughout: 13, 14, 143, 148, 150, 151, 166, 167, 169, 170, 172, 176, 239, 240, dead_or_set: 164
insn=19, live_throughout: 13, 14, 143, 148, 150, 151, 164, 167, 169, 170, 239, 240, dead_or_set: 149, 166, 172, 176
insn=322, live_throughout: 13, 14, 148, 149, 150, 151, 164, 167, 169, 170, 239, 240, dead_or_set: 143, 241
insn=323, live_throughout: 13, 14, 149, 150, 151, 164, 167, 169, 170, 239, 240, 241, dead_or_set: 148, 242
insn=324, live_throughout: 13, 14, 149, 151, 164, 167, 169, 170, 239, 240, 241, 242, dead_or_set: 150, 243
insn=325, live_throughout: 13, 14, 149, 164, 167, 169, 170, 239, 240, 241, 242, 243, dead_or_set: 151, 244
insn=326, live_throughout: 13, 14, 149, 164, 167, 170, 239, 240, 241, 242, 243, 244, dead_or_set: 169, 245
insn=327, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, dead_or_set: 170, 246
insn=285, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=247, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=26, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 178
insn=32, live_throughout: 13, 14, 149, 164, 167, 178, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 180
insn=27, live_throughout: 13, 14, 149, 164, 167, 180, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 163, 178
insn=28, live_throughout: 13, 14, 149, 163, 164, 167, 180, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 162
insn=34, live_throughout: 13, 14, 149, 162, 163, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 180
insn=35, live_throughout: 13, 14, 149, 162, 163, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=328, live_throughout: 13, 245, 246, dead_or_set: 148, 242
insn=329, live_throughout: 13, 148, 246, dead_or_set: 169, 245
insn=330, live_throughout: 13, 148, 169, dead_or_set: 170, 246
insn=41, live_throughout: 13, 148, 169, dead_or_set: 1, 170
insn=42, live_throughout: 1, 13, 148, dead_or_set: 2, 169
insn=43, live_throughout: 1, 2, 13, dead_or_set: 3, 148
insn=40, live_throughout: 1, 2, 3, 13, dead_or_set: 0
insn=44, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=45, live_throughout: 13, 14, dead_or_set: 161
insn=287, live_throughout: 13, 14, 161, dead_or_set: 
insn=48, live_throughout: 13, 14, 149, 162, 163, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=51, live_throughout: 13, 14, 149, 162, 163, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 184
insn=56, live_throughout: 13, 14, 149, 162, 163, 164, 167, 184, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 248
insn=55, live_throughout: 13, 14, 149, 162, 163, 164, 167, 184, 239, 240, 241, 242, 243, 244, 245, 246, 248, dead_or_set: 249
insn=52, live_throughout: 13, 14, 149, 162, 163, 164, 167, 184, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, dead_or_set: 146
insn=57, live_throughout: 13, 14, 146, 149, 162, 163, 164, 167, 184, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, dead_or_set: 186
insn=53, live_throughout: 13, 14, 146, 149, 163, 164, 167, 186, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, dead_or_set: 162, 184, 185
insn=58, live_throughout: 13, 14, 146, 149, 163, 164, 167, 185, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, dead_or_set: 186
insn=54, live_throughout: 13, 14, 24, 146, 149, 163, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, dead_or_set: 145, 185
insn=59, live_throughout: 13, 14, 145, 146, 149, 163, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, dead_or_set: 
insn=331, live_throughout: 13, 145, 245, 246, 248, 249, dead_or_set: 148, 242
insn=332, live_throughout: 13, 145, 148, 245, 246, 249, dead_or_set: 159, 248
insn=333, live_throughout: 13, 145, 148, 159, 245, 246, dead_or_set: 160, 249
insn=334, live_throughout: 13, 145, 148, 159, 160, 246, dead_or_set: 169, 245
insn=335, live_throughout: 13, 145, 148, 159, 160, 169, dead_or_set: 170, 246
insn=67, live_throughout: 13, 145, 148, 159, 160, 169, dead_or_set: 1, 170
insn=68, live_throughout: 1, 13, 145, 148, 159, 160, dead_or_set: 2, 169
insn=69, live_throughout: 1, 2, 13, 145, 159, 160, dead_or_set: 3, 148
insn=66, live_throughout: 1, 2, 3, 13, 145, 159, 160, dead_or_set: 0
insn=63, live_throughout: 0, 1, 2, 3, 13, 159, 160, dead_or_set: 145
insn=64, live_throughout: 0, 1, 2, 3, 13, 159, dead_or_set: 160
insn=65, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 159
insn=70, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=71, live_throughout: 13, 14, dead_or_set: 161
insn=289, live_throughout: 13, 14, 161, dead_or_set: 
insn=74, live_throughout: 13, 14, 145, 146, 149, 163, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=78, live_throughout: 13, 14, 145, 146, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 163, 247
insn=76, live_throughout: 13, 14, 145, 146, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 189
insn=79, live_throughout: 13, 14, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=77, live_throughout: 13, 14, 24, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 250
insn=80, live_throughout: 13, 14, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=81, live_throughout: 13, 14, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=82, live_throughout: 13, 14, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=83, live_throughout: 13, 14, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=84, live_throughout: 13, 14, 24, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=86, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=87, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=88, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=292, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=91, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=92, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=93, live_throughout: 13, 14, 24, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=95, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=96, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=97, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=98, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=99, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=295, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=102, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=103, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=104, live_throughout: 13, 14, 24, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, dead_or_set: 
insn=299, live_throughout: 13, 14, 24, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=109, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=113, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 146, 191
insn=112, live_throughout: 13, 14, 149, 164, 167, 189, 191, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 190
insn=114, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 190, 191, 192
insn=115, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 189, 192, 249
insn=301, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=118, live_throughout: 13, 14, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=121, live_throughout: 13, 14, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 140
insn=122, live_throughout: 13, 14, 140, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 193
insn=123, live_throughout: 13, 14, 140, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 144, 193
insn=125, live_throughout: 13, 14, 140, 144, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=126, live_throughout: 13, 14, 140, 144, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=128, live_throughout: 13, 14, 140, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 144
insn=129, live_throughout: 13, 14, 140, 144, 145, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=131, live_throughout: 13, 14, 140, 144, 145, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 139, 146
insn=132, live_throughout: 13, 14, 139, 140, 144, 145, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 195
insn=133, live_throughout: 13, 14, 139, 140, 145, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 144, 156, 195
insn=318, live_throughout: 13, 14, 139, 140, 145, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 198
insn=319, live_throughout: 13, 14, 139, 140, 145, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 198
insn=145, live_throughout: 13, 14, 139, 140, 145, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 198, 204
insn=146, live_throughout: 13, 14, 139, 140, 145, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 204
insn=147, live_throughout: 13, 14, 139, 140, 145, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=150, live_throughout: 13, 14, 139, 140, 145, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=151, live_throughout: 13, 14, 139, 140, 145, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, dead_or_set: 
insn=152, live_throughout: 13, 139, 145, 242, 245, 246, 247, 250, dead_or_set: 
insn=336, live_throughout: 13, 139, 145, 242, 245, 246, 247, dead_or_set: 147, 250
insn=337, live_throughout: 13, 139, 145, 147, 245, 246, 247, dead_or_set: 148, 242
insn=338, live_throughout: 13, 139, 145, 147, 148, 245, 246, dead_or_set: 158, 247
insn=339, live_throughout: 13, 139, 145, 147, 148, 158, 246, dead_or_set: 169, 245
insn=340, live_throughout: 13, 139, 145, 147, 148, 158, 169, dead_or_set: 170, 246
insn=161, live_throughout: 13, 139, 145, 147, 148, 158, 169, dead_or_set: 1, 170
insn=162, live_throughout: 1, 13, 139, 145, 147, 148, 158, dead_or_set: 2, 169
insn=163, live_throughout: 1, 2, 13, 139, 145, 147, 158, dead_or_set: 3, 148
insn=160, live_throughout: 1, 2, 3, 13, 139, 145, 147, 158, dead_or_set: 0
insn=156, live_throughout: 0, 1, 2, 3, 13, 139, 147, 158, dead_or_set: 145
insn=157, live_throughout: 0, 1, 2, 3, 13, 139, 147, dead_or_set: 158
insn=158, live_throughout: 0, 1, 2, 3, 13, 139, dead_or_set: 147
insn=159, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 139
insn=164, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=165, live_throughout: 13, 14, dead_or_set: 161
insn=303, live_throughout: 13, 14, 161, dead_or_set: 
insn=168, live_throughout: 13, 14, 140, 149, 156, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=171, live_throughout: 13, 14, 140, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 156, 209
insn=172, live_throughout: 13, 14, 149, 164, 167, 189, 209, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 140, 210
insn=173, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 209, 210, 211
insn=174, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 189, 211, 249
insn=305, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=177, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=180, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 213
insn=181, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 212, 213
insn=182, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 212, 215
insn=183, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 214, 215
insn=184, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 189, 214, 249
insn=307, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=187, live_throughout: 13, 14, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, dead_or_set: 
insn=190, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, dead_or_set: 146, 217
insn=192, live_throughout: 13, 14, 149, 164, 167, 189, 217, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, dead_or_set: 219
insn=191, live_throughout: 13, 14, 149, 164, 167, 189, 219, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 216, 217, 250
insn=193, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 216, 218, 219
insn=194, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 218, 220
insn=195, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 189, 220, 249
insn=309, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=298, live_throughout: 13, 14, 24, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=201, live_throughout: 13, 14, 24, 146, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 134
insn=210, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 146, 225
insn=203, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 225, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 221
insn=205, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 221, 225, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 222
insn=206, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 221, 225, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 154, 222
insn=207, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 225, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 154, 221, 223
insn=208, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 225, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 153, 223
insn=209, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 225, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 153, 224
insn=211, live_throughout: 13, 14, 24, 134, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 142, 224, 225
insn=214, live_throughout: 13, 14, 134, 142, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=216, live_throughout: 13, 14, 134, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 142
insn=217, live_throughout: 13, 14, 134, 142, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 
insn=221, live_throughout: 13, 14, 134, 142, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 229
insn=219, live_throughout: 13, 14, 134, 149, 164, 167, 189, 229, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 142, 226
insn=315, live_throughout: 13, 14, 134, 149, 164, 167, 189, 226, 229, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 231
insn=222, live_throughout: 13, 14, 134, 149, 164, 167, 189, 226, 231, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 228, 229
insn=223, live_throughout: 13, 14, 134, 149, 164, 167, 189, 231, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 226, 228, 230
insn=316, live_throughout: 13, 14, 149, 164, 167, 189, 230, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 134, 231
insn=226, live_throughout: 13, 14, 149, 164, 167, 189, 239, 240, 241, 242, 243, 244, 245, 246, 249, dead_or_set: 230, 231, 233
insn=227, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 189, 233, 249
insn=311, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=230, live_throughout: 13, 246, 247, dead_or_set: 
insn=341, live_throughout: 13, 246, dead_or_set: 158, 247
insn=342, live_throughout: 13, 158, dead_or_set: 170, 246
insn=235, live_throughout: 13, 158, dead_or_set: 1, 170
insn=236, live_throughout: 1, 13, dead_or_set: 2, 158
insn=234, live_throughout: 1, 2, 13, dead_or_set: 0
insn=237, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=238, live_throughout: 13, 14, dead_or_set: 161
insn=313, live_throughout: 13, 14, 161, dead_or_set: 
insn=241, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=243, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 243, 244, 245, 246, dead_or_set: 242
insn=244, live_throughout: 13, 14, 149, 164, 167, 239, 240, 242, 243, 244, 245, 246, dead_or_set: 241
insn=245, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=248, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 237
insn=250, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 237
insn=251, live_throughout: 13, 14, 149, 164, 167, 239, 240, 241, 242, 243, 244, 245, 246, dead_or_set: 
insn=253, live_throughout: 13, 14, dead_or_set: 161
insn=254, live_throughout: 13, 14, 161, dead_or_set: 
insn=260, live_throughout: 13, 14, dead_or_set: 0, 161
insn=266, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 170: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 180: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 51 (nil))
init_insns for 190: (insn_list:REG_DEP_TRUE 112 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 115 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 174 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 180 (nil))
init_insns for 214: (insn_list:REG_DEP_TRUE 184 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 192 (nil))
init_insns for 220: (insn_list:REG_DEP_TRUE 195 (nil))
init_insns for 233: (insn_list:REG_DEP_TRUE 227 (nil))
init_insns for 237: (insn_list:REG_DEP_TRUE 248 (nil))
init_insns for 239: (insn_list:REG_DEP_TRUE 139 (nil))
init_insns for 240: (insn_list:REG_DEP_TRUE 149 (nil))
      Slot 1 (freq,size): a3r139(3000,4)
      Slot 2 (freq,size): a5r145(3000,4)
      Slot 3 (freq,size): a10r149(3000,4)
      Slot 4 (freq,size): a14r164(3000,4)
      Slot 5 (freq,size): a20r167(2000,4)
      Assigning 167(freq=2000) a new slot 4
      Assigning 164(freq=3000) a new slot 3
      Assigning 149(freq=3000) a new slot 2
      Assigning 145(freq=3000) a new slot 1
      Assigning 139(freq=3000) a new slot 0
changing reg in insn 201
changing reg in insn 316
changing reg in insn 205
changing reg in insn 203
changing reg in insn 206
changing reg in insn 121
changing reg in insn 172
changing reg in insn 122
changing reg in insn 211
changing reg in insn 216
changing reg in insn 221
changing reg in insn 219
changing reg in insn 216
changing reg in insn 222
changing reg in insn 21
changing reg in insn 322
changing reg in insn 22
changing reg in insn 128
changing reg in insn 123
changing reg in insn 125
changing reg in insn 133
changing reg in insn 128
changing reg in insn 52
changing reg in insn 210
changing reg in insn 190
changing reg in insn 131
changing reg in insn 113
changing reg in insn 336
changing reg in insn 158
changing reg in insn 337
changing reg in insn 331
changing reg in insn 328
changing reg in insn 22
changing reg in insn 323
changing reg in insn 163
changing reg in insn 69
changing reg in insn 43
changing reg in insn 15
changing reg in insn 324
changing reg in insn 20
changing reg in insn 16
changing reg in insn 16
changing reg in insn 12
changing reg in insn 325
changing reg in insn 208
changing reg in insn 209
changing reg in insn 206
changing reg in insn 207
changing reg in insn 133
changing reg in insn 318
changing reg in insn 318
changing reg in insn 171
changing reg in insn 145
changing reg in insn 150
changing reg in insn 150
changing reg in insn 341
changing reg in insn 338
changing reg in insn 236
changing reg in insn 157
changing reg in insn 332
changing reg in insn 65
changing reg in insn 333
changing reg in insn 64
changing reg in insn 253
changing reg in insn 238
changing reg in insn 165
changing reg in insn 71
changing reg in insn 45
changing reg in insn 260
changing reg in insn 28
changing reg in insn 52
changing reg in insn 34
changing reg in insn 53
changing reg in insn 27
changing reg in insn 78
changing reg in insn 28
changing reg in insn 2
changing reg in insn 19
changing reg in insn 15
changing reg in insn 12
changing reg in insn 339
changing reg in insn 334
changing reg in insn 329
changing reg in insn 5
changing reg in insn 326
changing reg in insn 15
changing reg in insn 162
changing reg in insn 68
changing reg in insn 42
changing reg in insn 342
changing reg in insn 340
changing reg in insn 335
changing reg in insn 330
changing reg in insn 6
changing reg in insn 327
changing reg in insn 235
changing reg in insn 161
changing reg in insn 67
changing reg in insn 41
changing reg in insn 10
changing reg in insn 19
changing reg in insn 15
changing reg in insn 12
changing reg in insn 16
changing reg in insn 19
changing reg in insn 26
changing reg in insn 27
changing reg in insn 32
changing reg in insn 34
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 58
changing reg in insn 76
changing reg in insn 77
changing reg in insn 115
changing reg in insn 112
changing reg in insn 121
changing reg in insn 174
changing reg in insn 184
changing reg in insn 180
changing reg in insn 195
changing reg in insn 192
changing reg in insn 201
changing reg in insn 227
changing reg in insn 114
changing reg in insn 112
changing reg in insn 173
changing reg in insn 183
changing reg in insn 180
changing reg in insn 194
changing reg in insn 192
changing reg in insn 226
changing reg in insn 112
changing reg in insn 114
changing reg in insn 113
changing reg in insn 114
changing reg in insn 114
changing reg in insn 115
changing reg in insn 122
changing reg in insn 123
changing reg in insn 132
changing reg in insn 133
changing reg in insn 319
changing reg in insn 318
changing reg in insn 319
changing reg in insn 145
changing reg in insn 145
changing reg in insn 146
changing reg in insn 171
changing reg in insn 173
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 174
changing reg in insn 181
changing reg in insn 182
changing reg in insn 183
changing reg in insn 180
changing reg in insn 181
changing reg in insn 183
changing reg in insn 184
changing reg in insn 182
changing reg in insn 183
changing reg in insn 191
changing reg in insn 193
changing reg in insn 190
changing reg in insn 191
changing reg in insn 193
changing reg in insn 194
changing reg in insn 192
changing reg in insn 193
changing reg in insn 194
changing reg in insn 195
changing reg in insn 203
changing reg in insn 207
changing reg in insn 205
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 209
changing reg in insn 211
changing reg in insn 210
changing reg in insn 211
changing reg in insn 219
changing reg in insn 223
changing reg in insn 222
changing reg in insn 223
changing reg in insn 221
changing reg in insn 222
changing reg in insn 223
changing reg in insn 226
changing reg in insn 316
changing reg in insn 315
changing reg in insn 226
changing reg in insn 316
changing reg in insn 226
changing reg in insn 227
changing reg in insn 248
changing reg in insn 250
changing reg in insn 322
changing reg in insn 244
changing reg in insn 26
changing reg in insn 55
changing reg in insn 244
changing reg in insn 323
changing reg in insn 243
changing reg in insn 337
changing reg in insn 331
changing reg in insn 328
changing reg in insn 243
changing reg in insn 250
changing reg in insn 324
changing reg in insn 248
changing reg in insn 248
changing reg in insn 325
changing reg in insn 32
changing reg in insn 51
changing reg in insn 32
changing reg in insn 51
changing reg in insn 326
changing reg in insn 339
changing reg in insn 334
changing reg in insn 329
changing reg in insn 327
changing reg in insn 342
changing reg in insn 340
changing reg in insn 335
changing reg in insn 330
changing reg in insn 78
changing reg in insn 341
changing reg in insn 338
changing reg in insn 79
changing reg in insn 81
changing reg in insn 83
changing reg in insn 87
changing reg in insn 92
changing reg in insn 96
changing reg in insn 98
changing reg in insn 103
changing reg in insn 56
changing reg in insn 332
changing reg in insn 57
changing reg in insn 55
changing reg in insn 333
changing reg in insn 58
changing reg in insn 77
changing reg in insn 115
changing reg in insn 112
changing reg in insn 121
changing reg in insn 174
changing reg in insn 184
changing reg in insn 180
changing reg in insn 195
changing reg in insn 192
changing reg in insn 201
changing reg in insn 227
changing reg in insn 114
changing reg in insn 112
changing reg in insn 173
changing reg in insn 183
changing reg in insn 180
changing reg in insn 194
changing reg in insn 192
changing reg in insn 226
changing reg in insn 77
changing reg in insn 336
changing reg in insn 132
changing reg in insn 191
Spilling for insn 3.
Spilling for insn 20.
Using reg 5 for reload 0
Spilling for insn 19.
Spilling for insn 26.
Using reg 12 for reload 0
Spilling for insn 56.
Using reg 12 for reload 0
Spilling for insn 55.
Using reg 9 for reload 0
Spilling for insn 54.
Using reg 10 for reload 1
Spilling for insn 63.
Using reg 14 for reload 1
Spilling for insn 64.
Spilling for insn 65.
Spilling for insn 76.
Using reg 5 for reload 0
Spilling for insn 115.
Spilling for insn 131.
Spilling for insn 132.
Using reg 9 for reload 0
Spilling for insn 145.
Using reg 9 for reload 0
Spilling for insn 150.
Using reg 9 for reload 0
Spilling for insn 156.
Using reg 12 for reload 1
Spilling for insn 157.
Spilling for insn 158.
Spilling for insn 159.
Using reg 12 for reload 1
Spilling for insn 174.
Spilling for insn 184.
Spilling for insn 195.
Spilling for insn 227.
      Spill 198(a71), cost=40000
      Spill 195(a73), cost=20000
      Spill 204(a70), cost=20000
      Spilled regs 198 195 204
        Try assign 139(a3), cost=30000
        Try assign 145(a5), cost=30000
        Try assign 149(a10), cost=30000
        Try assign 164(a14), cost=30000
        Try assign 167(a20), cost=24000
        Try assign 240(a16), cost=20000
        Try assign 239(a17), cost=20000
changing reg in insn 132
changing reg in insn 133
      Assigning 195(freq=2000) a new slot 5
 Register 195 now on stack.

changing reg in insn 318
changing reg in insn 319
changing reg in insn 145
changing reg in insn 319
      Assigning 198(freq=4000) slot 5 of 195
 Register 198 now on stack.

changing reg in insn 145
changing reg in insn 146
      Assigning 204(freq=2000) slot 5 of 195 198
 Register 204 now on stack.

Spilling for insn 3.
Spilling for insn 20.
Using reg 5 for reload 0
Spilling for insn 19.
Spilling for insn 26.
Using reg 12 for reload 0
Spilling for insn 56.
Using reg 12 for reload 0
Spilling for insn 55.
Using reg 9 for reload 0
Spilling for insn 54.
Using reg 10 for reload 1
Spilling for insn 63.
Using reg 14 for reload 1
Spilling for insn 64.
Spilling for insn 65.
Spilling for insn 76.
Using reg 5 for reload 0
Spilling for insn 115.
Spilling for insn 131.
Spilling for insn 132.
Using reg 9 for reload 0
Using reg 9 for reload 1
Spilling for insn 133.
Using reg 9 for reload 0
Spilling for insn 318.
Using reg 9 for reload 0
Spilling for insn 319.
Using reg 9 for reload 0
Spilling for insn 145.
Using reg 9 for reload 0
Using reg 8 for reload 1
Spilling for insn 146.
Using reg 8 for reload 0
Spilling for insn 150.
Using reg 8 for reload 0
Spilling for insn 156.
Using reg 12 for reload 1
Spilling for insn 157.
Spilling for insn 158.
Spilling for insn 159.
Using reg 12 for reload 1
Spilling for insn 174.
Spilling for insn 184.
Spilling for insn 195.
Spilling for insn 227.
      Spill 243(a24), cost=30000
      Spilled regs 243
        Try assign 204(a70), cost=20000
        Try assign 198(a71), cost=40000
        Try assign 195(a73), cost=20000: reassign to 8
changing reg in insn 132
changing reg in insn 133
 Register 195 now in 8.

changing reg in insn 324
changing reg in insn 248
changing reg in insn 248
      Assigning 243(freq=2000) a new slot 6
 Register 243 now on stack.

Spilling for insn 3.
Spilling for insn 20.
Using reg 5 for reload 0
Spilling for insn 19.
Spilling for insn 324.
Spilling for insn 26.
Using reg 12 for reload 0
Spilling for insn 56.
Using reg 12 for reload 0
Spilling for insn 55.
Using reg 8 for reload 0
Spilling for insn 54.
Using reg 8 for reload 1
Spilling for insn 63.
Using reg 14 for reload 1
Spilling for insn 64.
Spilling for insn 65.
Spilling for insn 76.
Using reg 5 for reload 0
Spilling for insn 115.
Spilling for insn 131.
Spilling for insn 132.
Using reg 9 for reload 0
Spilling for insn 318.
Using reg 8 for reload 0
Spilling for insn 319.
Using reg 8 for reload 0
Spilling for insn 145.
Using reg 8 for reload 0
Using reg 9 for reload 1
Spilling for insn 146.
Using reg 8 for reload 0
Spilling for insn 150.
Using reg 8 for reload 0
Spilling for insn 156.
Using reg 12 for reload 1
Spilling for insn 157.
Spilling for insn 158.
Spilling for insn 159.
Using reg 12 for reload 1
Spilling for insn 174.
Spilling for insn 184.
Spilling for insn 195.
Spilling for insn 227.
Spilling for insn 248.
Using reg 12 for reload 0
deleting insn with uid = 139.
deleting insn with uid = 149.

Reloads for insn # 3
Reload 0: reload_out (SI) = (reg/v/f:SI 167 [ strtab ])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (reg/v/f:SI 167 [ strtab ])

Reloads for insn # 20
Reload 0: reload_out (SI) = (reg:SI 164 [ D.18552 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 164 [ D.18552 ])
	reload_reg_rtx: (reg:SI 5 r5)

Reloads for insn # 19
Reload 0: reload_out (SI) = (reg/v/f:SI 149 [ dstsec ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg/v/f:SI 149 [ dstsec ])
	reload_reg_rtx: (reg:SI 4 r4)

Reloads for insn # 324
Reload 0: reload_out (SI) = (reg/v/f:SI 243 [orig:150 relsec ] [150])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (reg/v/f:SI 243 [orig:150 relsec ] [150])

Reloads for insn # 26
Reload 0: reload_in (SI) = (reg:SI 164 [ D.18552 ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 2)
	reload_in_reg: (reg:SI 164 [ D.18552 ])
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 56
Reload 0: reload_in (SI) = (reg/v/f:SI 149 [ dstsec ])
	CORE_REGS, RELOAD_FOR_OPERAND_ADDRESS (opnum = 1)
	reload_in_reg: (reg/v/f:SI 149 [ dstsec ])
	reload_reg_rtx: (reg:SI 9 r9)

Reloads for insn # 55
Reload 0: reload_in (SI) = (reg:SI 164 [ D.18552 ])
	GENERAL_REGS, RELOAD_FOR_OPERAND_ADDRESS (opnum = 1)
	reload_in_reg: (reg:SI 164 [ D.18552 ])
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 54
Reload 0: reload_out (SI) = (reg/v/f:SI 145 [ symname ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg/v/f:SI 145 [ symname ])
	reload_reg_rtx: (reg:SI 0 r0)
Reload 1: reload_in (SI) = (reg/v/f:SI 167 [ strtab ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/v/f:SI 167 [ strtab ])
	reload_reg_rtx: (reg:SI 10 sl)

Reloads for insn # 63
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
Reload 1: reload_in (SI) = (reg/v/f:SI 145 [ symname ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/v/f:SI 145 [ symname ])
	reload_reg_rtx: (reg:SI 14 lr)

Reloads for insn # 64
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 65
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 76
Reload 0: reload_in (SI) = (reg/v/f:SI 149 [ dstsec ])
	CORE_REGS, RELOAD_FOR_OPERAND_ADDRESS (opnum = 1)
	reload_in_reg: (reg/v/f:SI 149 [ dstsec ])
	reload_reg_rtx: (reg:SI 5 r5)

Reloads for insn # 115
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])

Reloads for insn # 131
Reload 0: reload_out (SI) = (reg:SI 139 [ temp.419 ])
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 139 [ temp.419 ])
	reload_reg_rtx: (reg:SI 9 r9)

Reloads for insn # 132
Reload 0: reload_in (SI) = (reg:SI 139 [ temp.419 ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg:SI 139 [ temp.419 ])
	reload_reg_rtx: (reg:SI 9 r9)

Reloads for insn # 318
Reload 0: reload_out (SI) = (reg:SI 198)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 0)
	reload_out_reg: (reg:SI 198)
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 319
Reload 0: reload_in (SI) = (reg:SI 198)
	reload_out (SI) = (reg:SI 198)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 198)
	reload_out_reg: (reg:SI 198)
	reload_reg_rtx: (reg:SI 8 r8)
deleting insn with uid = 354.

Reloads for insn # 145
Reload 0: reload_in (SI) = (reg:SI 198)
	reload_out (SI) = (reg:SI 204)
	GENERAL_REGS, RELOAD_OTHER (opnum = 0)
	reload_in_reg: (reg:SI 198)
	reload_out_reg: (reg:SI 204)
	reload_reg_rtx: (reg:SI 8 r8)
Reload 1: reload_in (SI) = (const_int -33554431 [0xfffffffffe000001])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 3), can't combine
	reload_in_reg: (reg:SI 239)
	reload_reg_rtx: (reg:SI 9 r9)
deleting insn with uid = 355.

Reloads for insn # 146
Reload 0: reload_in (SI) = (reg:SI 204)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 0)
	reload_in_reg: (reg:SI 204)
	reload_reg_rtx: (reg:SI 8 r8)
deleting insn with uid = 356.
changing reg in insn 146

Reloads for insn # 150
Reload 0: reload_in (SI) = (const_int 33554431 [0x1ffffff])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1), can't combine
	reload_in_reg: (reg:SI 240)
	reload_reg_rtx: (reg:SI 8 r8)

Reloads for insn # 156
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
Reload 1: reload_in (SI) = (reg/v/f:SI 145 [ symname ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/v/f:SI 145 [ symname ])
	reload_reg_rtx: (reg:SI 9 r9)

Reloads for insn # 157
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])

Reloads for insn # 158
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 159
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
Reload 1: reload_in (SI) = (reg:SI 139 [ temp.419 ])
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg:SI 139 [ temp.419 ])
	reload_reg_rtx: (reg:SI 10 sl)

Reloads for insn # 174
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])

Reloads for insn # 184
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])

Reloads for insn # 195
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])

Reloads for insn # 227
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                                                        (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])

Reloads for insn # 248
Reload 0: reload_in (SI) = (reg/v/f:SI 243 [orig:150 relsec ] [150])
	CORE_REGS, RELOAD_FOR_OPERAND_ADDRESS (opnum = 1)
	reload_in_reg: (reg/v/f:SI 243 [orig:150 relsec ] [150])
	reload_reg_rtx: (reg:SI 12 ip)
deleting insn with uid = 2.
deleting insn with uid = 322.
deleting insn with uid = 323.
deleting insn with uid = 325.
deleting insn with uid = 326.
deleting insn with uid = 327.
deleting insn with uid = 328.
deleting insn with uid = 329.
deleting insn with uid = 330.
deleting insn with uid = 43.
deleting insn with uid = 331.
deleting insn with uid = 332.
deleting insn with uid = 333.
deleting insn with uid = 334.
deleting insn with uid = 335.
deleting insn with uid = 69.
deleting insn with uid = 336.
deleting insn with uid = 337.
deleting insn with uid = 338.
deleting insn with uid = 339.
deleting insn with uid = 340.
deleting insn with uid = 163.
deleting insn with uid = 341.
deleting insn with uid = 342.
deleting insn with uid = 260.
+++Overall after reload 248750


try_optimize_cfg iteration 1

Forwarding edge 11->12 to 20 failed.
Forwarding edge 16->17 to 27 failed.
Forwarding edge 18->19 to 29 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 44.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 237.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 53 count 103 (  2.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 53 count 114 (  3.1)


apply_relocate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,27u,8d} r1={10d,9u} r2={10d,7u,2d} r3={7d,6u} r4={14d,24u,1d} r5={9d,14u,1d} r6={2d,4u} r7={1d,4u} r8={8d,10u,1d} r9={12d,17u,1d} r10={16d,22u,1d} r11={3d,4u} r12={9d,18u,8d} r13={1d,63u,2d} r14={6d,2u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={20d,18u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 862{588d,249u,25e} in 164{160 regular + 4 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 8 7 2 NOTE_INSN_DELETED)

(note 7 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 7 14 2 NOTE_INSN_DELETED)

(note 14 11 18 2 NOTE_INSN_DELETED)

(note 18 14 5 2 NOTE_INSN_DELETED)

(insn 5 18 10 2 arch/arm/kernel/module.c:51 (set (reg/v:SI 7 r7 [orig:169 relindex ] [169])
        (reg:SI 3 r3 [ relindex ])) 167 {*arm_movsi_insn} (nil))

(insn 10 5 21 2 arch/arm/kernel/module.c:52 (set (reg:SI 12 ip [172])
        (const_int 40 [0x28])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 40 [0x28])
        (nil)))

(insn 21 10 3 2 arch/arm/kernel/module.c:55 (set (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 3 21 6 2 arch/arm/kernel/module.c:51 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1 [ strtab ])) 167 {*arm_movsi_insn} (nil))

(insn 6 3 15 2 arch/arm/kernel/module.c:51 (set (reg/v/f:SI 1 r1 [orig:170 module ] [170])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 module+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 module+0 S4 A32])
        (nil)))

(insn 15 6 22 2 arch/arm/kernel/module.c:53 (set (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
        (plus:SI (mult:SI (reg:SI 12 ip [172])
                (reg/v:SI 7 r7 [orig:169 relindex ] [169]))
            (reg/v/f:SI 0 r0 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 22 15 12 2 arch/arm/kernel/module.c:58 (set (reg/v:SI 3 r3 [orig:148 i ] [148])
        (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 22 139 2 arch/arm/kernel/module.c:52 (set (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
        (plus:SI (mult:SI (reg:SI 12 ip [172])
                (reg:SI 2 r2 [ symindex ]))
            (reg/v/f:SI 0 r0 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(note 139 12 149 2 NOTE_INSN_DELETED)

(note 149 139 16 2 NOTE_INSN_DELETED)

(insn 16 149 20 2 arch/arm/kernel/module.c:54 (set (reg:SI 4 r4 [orig:176 <variable>.sh_info ] [176])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
                (const_int 28 [0x1c])) [0 <variable>.sh_info+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
                (const_int 28 [0x1c])) [0 <variable>.sh_info+0 S4 A32])
        (nil)))

(insn 20 16 344 2 arch/arm/kernel/module.c:55 (set (reg:SI 5 r5)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 344 20 19 2 arch/arm/kernel/module.c:55 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-8 S4 A32])
        (reg:SI 5 r5)) 167 {*arm_movsi_insn} (nil))

(insn 19 344 345 2 arch/arm/kernel/module.c:54 (set (reg:SI 4 r4)
        (plus:SI (mult:SI (reg:SI 12 ip [172])
                (reg:SI 4 r4 [orig:176 <variable>.sh_info ] [176]))
            (reg/v/f:SI 0 r0 [orig:166 sechdrs ] [166]))) 40 {*mulsi3addsi_v6} (nil))

(insn 345 19 324 2 arch/arm/kernel/module.c:54 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-12 S4 A32])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (nil))

(insn 324 345 285 2 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-36 S4 A32])
        (reg/v/f:SI 8 r8 [orig:150 relsec ] [150])) 167 {*arm_movsi_insn} (nil))

(jump_insn 285 324 286 2 arch/arm/kernel/module.c:58 (set (pc)
        (label_ref 245)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 34)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%] 

(barrier 286 285 247)

;; Start of basic block ( 34) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 8 [r8] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 8 [r8] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  34 [98.0%] 
(code_label 247 286 25 3 49 "" [1 uses])

(note 25 247 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 33 25 346 3 NOTE_INSN_DELETED)

(insn 346 33 26 3 arch/arm/kernel/module.c:67 (set (reg:SI 8 r8)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 346 32 3 arch/arm/kernel/module.c:67 (set (reg:SI 0 r0 [178])
        (plus:SI (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
            (reg:SI 8 r8))) 4 {*arm_addsi3} (nil))

(insn 32 26 27 3 arch/arm/kernel/module.c:68 (set (reg:SI 12 ip [orig:180 <variable>.sh_size ] [180])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])
        (nil)))

(insn 27 32 28 3 arch/arm/kernel/module.c:67 (set (reg:SI 4 r4 [orig:163 D.18553 ] [163])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [178])
                (const_int 4 [0x4])) [0 <variable>.r_info+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 34 3 arch/arm/kernel/module.c:67 (set (reg:SI 0 r0 [orig:162 D.18554 ] [162])
        (lshiftrt:SI (reg:SI 4 r4 [orig:163 D.18553 ] [163])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 34 28 35 3 arch/arm/kernel/module.c:68 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 12 ip [orig:180 <variable>.sh_size ] [180])
                (const_int 4 [0x4]))
            (reg:SI 0 r0 [orig:162 D.18554 ] [162]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(jump_insn 35 34 37 3 arch/arm/kernel/module.c:68 (set (pc)
        (if_then_else (geu (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru,loop_exit)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru,loop_exit)
(note 37 35 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 39 37 41 4 NOTE_INSN_DELETED)

(insn 41 39 42 4 arch/arm/kernel/module.c:69 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 42 41 40 4 arch/arm/kernel/module.c:69 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:169 relindex ] [169])) 167 {*arm_movsi_insn} (nil))

(insn 40 42 44 4 arch/arm/kernel/module.c:69 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x111ae190>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x111ae190>)
        (nil)))

(call_insn 44 40 45 4 arch/arm/kernel/module.c:69 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 45 44 287 4 arch/arm/kernel/module.c:71 (set (reg:SI 0 r0 [orig:161 D.18562 ] [161])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -8 [0xfffffffffffffff8])
        (nil)))

(jump_insn 287 45 288 4 arch/arm/kernel/module.c:71 (set (pc)
        (label_ref 254)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 36)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  36 [100.0%] 

(barrier 288 287 48)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 48 288 49 5 33 "" [1 uses])

(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 50 49 51 5 NOTE_INSN_DELETED)

(insn 51 50 347 5 arch/arm/kernel/module.c:74 (set (reg:SI 10 sl [orig:184 <variable>.sh_addr ] [184])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:151 symsec ] [151])
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])
        (nil)))

(insn 347 51 56 5 arch/arm/kernel/module.c:77 (set (reg:SI 9 r9)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 56 347 348 5 arch/arm/kernel/module.c:77 (set (reg:SI 5 r5 [orig:159 D.18569 ] [159])
        (mem/s/j:SI (plus:SI (reg:SI 9 r9)
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 348 56 55 5 arch/arm/kernel/module.c:77 (set (reg:SI 8 r8)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-8 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 55 348 52 5 arch/arm/kernel/module.c:77 (set (reg:SI 12 ip [orig:160 D.18568 ] [160])
        (mem/s/j:SI (plus:SI (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
                (reg:SI 8 r8)) [0 <variable>.r_offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 55 57 5 arch/arm/kernel/module.c:74 (set (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
        (plus:SI (mult:SI (reg:SI 0 r0 [orig:162 D.18554 ] [162])
                (const_int 16 [0x10]))
            (reg:SI 10 sl [orig:184 <variable>.sh_addr ] [184]))) 270 {*arith_shiftsi} (nil))

(insn 57 52 53 5 arch/arm/kernel/module.c:77 (set (reg:SI 11 fp [186])
        (plus:SI (reg:SI 5 r5 [orig:159 D.18569 ] [159])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 53 57 58 5 arch/arm/kernel/module.c:75 (set (reg:SI 0 r0 [orig:185 <variable>.st_name ] [185])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:162 D.18554 ] [162])
                    (const_int 16 [0x10]))
                (reg:SI 10 sl [orig:184 <variable>.sh_addr ] [184])) [0 <variable>.st_name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 53 350 5 arch/arm/kernel/module.c:77 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:160 D.18568 ] [160])
            (reg:SI 11 fp [186]))) 219 {*arm_cmpsi_insn} (nil))

(insn 350 58 54 5 arch/arm/kernel/module.c:75 (set (reg:SI 10 sl)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 %sfp+-4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 350 349 5 arch/arm/kernel/module.c:75 (set (reg:SI 0 r0)
        (plus:SI (reg:SI 10 sl)
            (reg:SI 0 r0 [orig:185 <variable>.st_name ] [185]))) 4 {*arm_addsi3} (nil))

(insn 349 54 59 5 arch/arm/kernel/module.c:75 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-16 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(jump_insn 59 349 60 5 arch/arm/kernel/module.c:77 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [0.0%]  (fallthru,loop_exit)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 5 [r5] 7 [r7] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 5 [r5] 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 5 [r5] 7 [r7] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru,loop_exit)
(note 60 59 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 62 60 67 6 NOTE_INSN_DELETED)

(insn 67 62 68 6 arch/arm/kernel/module.c:78 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 68 67 66 6 arch/arm/kernel/module.c:78 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:169 relindex ] [169])) 167 {*arm_movsi_insn} (nil))

(insn 66 68 351 6 arch/arm/kernel/module.c:78 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x111c3380>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x111c3380>)
        (nil)))

(insn 351 66 63 6 arch/arm/kernel/module.c:78 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 63 351 64 6 arch/arm/kernel/module.c:78 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 6 arch/arm/kernel/module.c:78 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [orig:160 D.18568 ] [160])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 70 6 arch/arm/kernel/module.c:78 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 5 r5 [orig:159 D.18569 ] [159])) 167 {*arm_movsi_insn} (nil))

(call_insn 70 65 71 6 arch/arm/kernel/module.c:78 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 71 70 289 6 arch/arm/kernel/module.c:81 (set (reg:SI 0 r0 [orig:161 D.18562 ] [161])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -8 [0xfffffffffffffff8])
        (nil)))

(jump_insn 289 71 290 6 arch/arm/kernel/module.c:81 (set (pc)
        (label_ref 254)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 36)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  36 [100.0%] 

(barrier 290 289 74)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
(code_label 74 290 75 7 35 "" [1 uses])

(note 75 74 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 78 75 352 7 arch/arm/kernel/module.c:86 (set (reg:SI 4 r4 [orig:158 D.18574 ] [158])
        (and:SI (reg:SI 4 r4 [orig:163 D.18553 ] [163])
            (const_int 255 [0xff]))) 67 {*arm_andsi3_insn} (nil))

(insn 352 78 76 7 arch/arm/kernel/module.c:84 (set (reg:SI 5 r5)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 76 352 79 7 arch/arm/kernel/module.c:84 (set (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])
        (mem/s/j:SI (plus:SI (reg:SI 5 r5)
                (const_int 12 [0xc])) [0 <variable>.sh_addr+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 79 76 77 7 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 29 [0x1d]))) 219 {*arm_cmpsi_insn} (nil))

(insn 77 79 80 7 arch/arm/kernel/module.c:84 (set (reg/v:SI 5 r5 [orig:147 loc ] [147])
        (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
            (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189]))) 4 {*arm_addsi3} (nil))

(jump_insn 80 77 268 7 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 13 8)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 268 80 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 81 268 82 8 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 28 [0x1c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 82 81 269 8 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 21 9)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  21 [50.0%] 
;; Succ edge  9 [50.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 269 82 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 83 269 84 9 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 270 9 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 118)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 9 -> ( 21 10)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  21 [29.0%] 
;; Succ edge  10 [71.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [71.0%]  (fallthru)
(note 270 84 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 86 270 271 10 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 10 -> ( 33 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  33 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 271 86 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 87 271 88 11 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 291 11 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 32)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%]  (loop_exit)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [29.0%]  (fallthru)
(note 291 88 292 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 292 291 293 12 (set (pc)
        (label_ref 109)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 20)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%] 

(barrier 293 292 91)

;; Start of basic block ( 7) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 91 293 273 13 43 "" [1 uses])

(note 273 91 92 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 92 273 93 13 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 42 [0x2a]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 274 13 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 13 -> ( 28 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  28 [29.0%] 
;; Succ edge  14 [71.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  13 [71.0%]  (fallthru)
(note 274 93 95 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 95 274 275 14 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 18 15)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  18 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 275 95 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 275 97 15 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 38 [0x26]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 97 96 276 15 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 15 -> ( 20 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  20 [29.0%] 
;; Succ edge  16 [71.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [71.0%]  (fallthru)
(note 276 97 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 276 99 16 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 40 [0x28]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 294 16 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 16 -> ( 17 32)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [29.0%]  (fallthru)
;; Succ edge  32 [71.0%]  (loop_exit)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [29.0%]  (fallthru)
(note 294 99 295 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 295 294 296 17 (set (pc)
        (label_ref 177)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 27)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  27 [100.0%] 

(barrier 296 295 102)

;; Start of basic block ( 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 102 296 278 18 44 "" [1 uses])

(note 278 102 103 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 103 278 104 18 arch/arm/kernel/module.c:86 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:158 D.18574 ] [158])
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 297 18 arch/arm/kernel/module.c:86 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 230)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 32 19)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  32 [50.0%]  (loop_exit)
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 297 104 299 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 299 297 300 19 (set (pc)
        (label_ref 298)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 29)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  29 [100.0%] 

(barrier 300 299 109)

;; Start of basic block ( 15 12) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  15 [29.0%] 
;; Pred edge  12 [100.0%] 
(code_label 109 300 110 20 39 "" [2 uses])

(note 110 109 113 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 113 110 112 20 arch/arm/kernel/module.c:93 (set (reg:SI 4 r4 [orig:191 <variable>.st_value ] [191])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 112 113 114 20 arch/arm/kernel/module.c:93 (set (reg:SI 5 r5 [190])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 114 112 115 20 arch/arm/kernel/module.c:93 (set (reg:SI 4 r4 [192])
        (plus:SI (reg:SI 5 r5 [190])
            (reg:SI 4 r4 [orig:191 <variable>.st_value ] [191]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 115 114 301 20 arch/arm/kernel/module.c:93 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 4 r4 [192])) 167 {*arm_movsi_insn} (nil))

(jump_insn 301 115 302 20 arch/arm/kernel/module.c:94 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 302 301 118)

;; Start of basic block ( 8 9) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%] 
;; Pred edge  9 [29.0%] 
(code_label 118 302 119 21 38 "" [2 uses])

(note 119 118 124 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 124 119 121 21 NOTE_INSN_DELETED)

(insn 121 124 122 21 arch/arm/kernel/module.c:99 (set (reg:SI 11 fp [orig:140 temp.418 ] [140])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 122 121 123 21 arch/arm/kernel/module.c:99 (set (reg:SI 10 sl [193])
        (and:SI (reg:SI 11 fp [orig:140 temp.418 ] [140])
            (const_int 16777215 [0xffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 123 122 125 21 arch/arm/kernel/module.c:99 (set (reg/v:SI 10 sl [orig:144 offset ] [144])
        (ashift:SI (reg:SI 10 sl [193])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 125 123 126 21 arch/arm/kernel/module.c:100 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 10 sl [orig:144 offset ] [144])
                (const_int 1 [0x1])
                (const_int 25 [0x19]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 126 125 127 21 arch/arm/kernel/module.c:100 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 127 126 128 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 22 arch/arm/kernel/module.c:101 (set (reg/v:SI 10 sl [orig:144 offset ] [144])
        (plus:SI (reg/v:SI 10 sl [orig:144 offset ] [144])
            (const_int -67108864 [0xfffffffffc000000]))) 4 {*arm_addsi3} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  21 [50.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 129 128 130 23 45 "" [1 uses])

(note 130 129 135 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 135 130 136 23 NOTE_INSN_DELETED)

(note 136 135 140 23 NOTE_INSN_DELETED)

(note 140 136 141 23 NOTE_INSN_DELETED)

(note 141 140 143 23 NOTE_INSN_DELETED)

(note 143 141 144 23 NOTE_INSN_DELETED)

(note 144 143 131 23 NOTE_INSN_DELETED)

(insn 131 144 353 23 arch/arm/kernel/module.c:103 (set (reg:SI 9 r9)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 353 131 132 23 arch/arm/kernel/module.c:103 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-20 S4 A32])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (nil))

(insn 132 353 133 23 arch/arm/kernel/module.c:103 (set (reg:SI 8 r8 [195])
        (minus:SI (reg:SI 9 r9)
            (reg/v:SI 5 r5 [orig:147 loc ] [147]))) 28 {*arm_subsi3_insn} (nil))

(insn 133 132 318 23 arch/arm/kernel/module.c:103 (set (reg:SI 10 sl [orig:156 D.18586 ] [156])
        (plus:SI (reg:SI 8 r8 [195])
            (reg/v:SI 10 sl [orig:144 offset ] [144]))) 4 {*arm_addsi3} (nil))

(insn 318 133 319 23 arch/arm/kernel/module.c:104 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
                        (const_int 3 [0x3]))
                    (const_int 0 [0x0])))
            (set (reg:SI 8 r8)
                (and:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
                    (const_int 3 [0x3])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 319 318 357 23 arch/arm/kernel/module.c:104 (set (reg:SI 8 r8)
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 8 r8)
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (nil))

(insn 357 319 145 23 arch/arm/kernel/module.c:105 (set (reg:SI 9 r9)
        (const_int -33554431 [0xfffffffffe000001])) 167 {*arm_movsi_insn} (nil))

(insn 145 357 146 23 arch/arm/kernel/module.c:105 (parallel [
            (set (reg:SI 8 r8)
                (ior:SI (lt:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
                        (reg:SI 9 r9))
                    (reg:SI 8 r8)))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (nil))

(insn 146 145 147 23 arch/arm/kernel/module.c:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 147 146 148 23 arch/arm/kernel/module.c:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 152)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  25 [0.0%]  (loop_exit)
;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
(note 148 147 358 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 358 148 150 24 arch/arm/kernel/module.c:104 discrim 1 (set (reg:SI 8 r8)
        (const_int 33554431 [0x1ffffff])) 167 {*arm_movsi_insn} (nil))

(insn 150 358 151 24 arch/arm/kernel/module.c:104 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [orig:156 D.18586 ] [156])
            (reg:SI 8 r8))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 10 sl [orig:156 D.18586 ] [156])
            (const_int 33554431 [0x1ffffff]))
        (nil)))

(jump_insn 151 150 152 24 arch/arm/kernel/module.c:104 discrim 1 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 168)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  25 [0.0%]  (fallthru,loop_exit)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 23 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 9 [r9] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl]
;; live  kill	 14 [lr]

;; Pred edge  23 [0.0%]  (loop_exit)
;; Pred edge  24 [0.0%]  (fallthru,loop_exit)
(code_label 152 151 153 25 46 "" [1 uses])

(note 153 152 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 155 153 161 25 NOTE_INSN_DELETED)

(insn 161 155 162 25 arch/arm/kernel/module.c:107 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 162 161 160 25 arch/arm/kernel/module.c:107 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:169 relindex ] [169])) 167 {*arm_movsi_insn} (nil))

(insn 160 162 359 25 arch/arm/kernel/module.c:107 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x111c33f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x111c33f0>)
        (nil)))

(insn 359 160 156 25 arch/arm/kernel/module.c:107 (set (reg:SI 9 r9)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 156 359 157 25 arch/arm/kernel/module.c:107 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (nil))

(insn 157 156 158 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 4 r4 [orig:158 D.18574 ] [158])) 167 {*arm_movsi_insn} (nil))

(insn 158 157 360 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v:SI 5 r5 [orig:147 loc ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 360 158 159 25 arch/arm/kernel/module.c:107 (set (reg:SI 10 sl)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 159 360 164 25 arch/arm/kernel/module.c:107 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (nil))

(call_insn 164 159 165 25 arch/arm/kernel/module.c:107 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 165 164 303 25 arch/arm/kernel/module.c:111 (set (reg:SI 0 r0 [orig:161 D.18562 ] [161])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -8 [0xfffffffffffffff8])
        (nil)))

(jump_insn 303 165 304 25 arch/arm/kernel/module.c:111 (set (pc)
        (label_ref 254)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 36)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  36 [100.0%] 

(barrier 304 303 168)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  def 	 10 [sl] 11 [fp]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 11 [fp]
;; live  kill	

;; Pred edge  24 [100.0%] 
(code_label 168 304 169 26 47 "" [1 uses])

(note 169 168 170 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 170 169 171 26 NOTE_INSN_DELETED)

(insn 171 170 172 26 arch/arm/kernel/module.c:117 (set (reg:SI 10 sl [209])
        (zero_extract:SI (reg:SI 10 sl [orig:156 D.18586 ] [156])
            (const_int 24 [0x18])
            (const_int 2 [0x2]))) 124 {extzv_t2} (nil))

(insn 172 171 173 26 arch/arm/kernel/module.c:117 (set (reg:SI 11 fp [210])
        (and:SI (reg:SI 11 fp [orig:140 temp.418 ] [140])
            (const_int -16777216 [0xffffffffff000000]))) 67 {*arm_andsi3_insn} (nil))

(insn 173 172 174 26 arch/arm/kernel/module.c:117 (set (reg:SI 10 sl [211])
        (ior:SI (reg:SI 10 sl [209])
            (reg:SI 11 fp [210]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 174 173 305 26 arch/arm/kernel/module.c:117 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 10 sl [211])) 167 {*arm_movsi_insn} (nil))

(jump_insn 305 174 306 26 arch/arm/kernel/module.c:118 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 306 305 177)

;; Start of basic block ( 17) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  17 [100.0%] 
(code_label 177 306 178 27 40 "" [1 uses])

(note 178 177 180 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 180 178 181 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [213])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 181 180 182 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [212])
        (and:SI (reg:SI 4 r4 [213])
            (const_int -268435441 [0xfffffffff000000f]))) 67 {*arm_andsi3_insn} (nil))

(insn 182 181 183 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [215])
        (ior:SI (reg:SI 4 r4 [212])
            (const_int 27262976 [0x1a00000]))) 89 {*arm_iorsi3} (nil))

(insn 183 182 184 27 arch/arm/kernel/module.c:126 (set (reg:SI 4 r4 [214])
        (ior:SI (reg:SI 4 r4 [215])
            (const_int 61440 [0xf000]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (expr_list:REG_EQUAL (ior:SI (reg:SI 4 r4 [212])
                (const_int 27324416 [0x1a0f000]))
            (nil))))

(insn 184 183 307 27 arch/arm/kernel/module.c:126 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 4 r4 [214])) 167 {*arm_movsi_insn} (nil))

(jump_insn 307 184 308 27 arch/arm/kernel/module.c:127 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 27 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 308 307 187)

;; Start of basic block ( 13) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 5 [r5] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 10 [sl]
;; live  kill	

;; Pred edge  13 [29.0%] 
(code_label 187 308 188 28 41 "" [1 uses])

(note 188 187 190 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 190 188 192 28 arch/arm/kernel/module.c:131 (set (reg:SI 10 sl [orig:217 <variable>.st_value ] [217])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 192 190 191 28 arch/arm/kernel/module.c:131 (set (reg:SI 4 r4 [219])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 191 192 193 28 arch/arm/kernel/module.c:131 (set (reg:SI 5 r5 [216])
        (minus:SI (reg:SI 10 sl [orig:217 <variable>.st_value ] [217])
            (reg/v:SI 5 r5 [orig:147 loc ] [147]))) 28 {*arm_subsi3_insn} (nil))

(insn 193 191 194 28 arch/arm/kernel/module.c:131 (set (reg:SI 5 r5 [218])
        (plus:SI (reg:SI 5 r5 [216])
            (reg:SI 4 r4 [219]))) 4 {*arm_addsi3} (nil))

(insn 194 193 195 28 arch/arm/kernel/module.c:131 (set (reg:SI 5 r5 [220])
        (and:SI (reg:SI 5 r5 [218])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 195 194 309 28 arch/arm/kernel/module.c:131 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 5 r5 [220])) 167 {*arm_movsi_insn} (nil))

(jump_insn 309 195 310 28 arch/arm/kernel/module.c:132 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 310 309 298)

;; Start of basic block ( 19) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 0 [r0] 9 [r9] 12 [ip] 13 [sp] 24 [cc]
;; lr  def 	 4 [r4] 5 [r5] 9 [r9] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	 4 [r4] 5 [r5] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  19 [100.0%] 
(code_label 298 310 199 29 51 "" [1 uses])

(note 199 298 204 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 204 199 201 29 NOTE_INSN_DELETED)

(insn 201 204 210 29 arch/arm/kernel/module.c:136 (set (reg:SI 5 r5 [orig:134 temp.430 ] [134])
        (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 210 201 203 29 arch/arm/kernel/module.c:140 (set (reg:SI 4 r4 [orig:225 <variable>.st_value ] [225])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 9 r9 [orig:146 sym ] [146])
                (const_int 4 [0x4])) [0 <variable>.st_value+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 203 210 205 29 arch/arm/kernel/module.c:137 (set (reg:SI 9 r9 [221])
        (and:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn 205 203 206 29 arch/arm/kernel/module.c:137 (set (reg:SI 10 sl [222])
        (ashift:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 206 205 207 29 arch/arm/kernel/module.c:137 (set (reg:SI 10 sl [orig:154 D.18604 ] [154])
        (lshiftrt:SI (reg:SI 10 sl [222])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 207 206 208 29 arch/arm/kernel/module.c:138 (set (reg:SI 9 r9 [223])
        (ior:SI (lshiftrt:SI (reg:SI 9 r9 [221])
                (const_int 4 [0x4]))
            (reg:SI 10 sl [orig:154 D.18604 ] [154]))) 270 {*arith_shiftsi} (nil))

(insn 208 207 209 29 arch/arm/kernel/module.c:138 (set (reg:SI 9 r9 [orig:153 D.18605 ] [153])
        (xor:SI (reg:SI 9 r9 [223])
            (const_int 32768 [0x8000]))) 96 {*arm_xorsi3} (nil))

(insn 209 208 211 29 arch/arm/kernel/module.c:140 (set (reg:SI 9 r9 [224])
        (plus:SI (reg:SI 9 r9 [orig:153 D.18605 ] [153])
            (const_int -32768 [0xffffffffffff8000]))) 4 {*arm_addsi3} (nil))

(insn 211 209 214 29 arch/arm/kernel/module.c:140 (set (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
        (plus:SI (reg:SI 9 r9 [224])
            (reg:SI 4 r4 [orig:225 <variable>.st_value ] [225]))) 4 {*arm_addsi3} (nil))

(jump_insn 214 211 215 29 arch/arm/kernel/module.c:141 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  30 [28.0%]  (fallthru)
;; Succ edge  31 [72.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 9 [r9]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 9 [r9]
;; live  kill	

;; Pred edge  29 [28.0%]  (fallthru)
(note 215 214 216 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 216 215 217 30 arch/arm/kernel/module.c:142 (set (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
        (ashiftrt:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 30 -> ( 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 29 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 5 [r5] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 9 [r9] 10 [sl]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 9 [r9] 10 [sl]
;; live  kill	

;; Pred edge  29 [72.0%] 
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 217 216 218 31 48 "" [1 uses])

(note 218 217 220 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(note 220 218 221 31 NOTE_INSN_DELETED)

(insn 221 220 219 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [229])
        (ashift:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 219 221 315 31 arch/arm/kernel/module.c:145 (set (reg:SI 9 r9 [226])
        (and:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 315 219 222 31 arch/arm/kernel/module.c:145 (set (reg:SI 4 r4 [231])
        (const_int -987136 [0xfffffffffff0f000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -987136 [0xfffffffffff0f000])
        (nil)))

(insn 222 315 223 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [228])
        (lshiftrt:SI (reg:SI 10 sl [229])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 9 r9 [orig:142 offset.415 ] [142])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 223 222 316 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [230])
        (ior:SI (ashift:SI (reg:SI 9 r9 [226])
                (const_int 4 [0x4]))
            (reg:SI 10 sl [228]))) 270 {*arith_shiftsi} (nil))

(insn 316 223 226 31 arch/arm/kernel/module.c:145 (set (reg:SI 4 r4 [231])
        (and:SI (reg:SI 5 r5 [orig:134 temp.430 ] [134])
            (reg:SI 4 r4 [231]))) 67 {*arm_andsi3_insn} (nil))

(insn 226 316 227 31 arch/arm/kernel/module.c:145 (set (reg:SI 10 sl [233])
        (ior:SI (reg:SI 10 sl [230])
            (reg:SI 4 r4 [231]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (nil)))

(insn 227 226 311 31 arch/arm/kernel/module.c:145 (set (mem:SI (plus:SI (reg:SI 12 ip [orig:160 D.18568 ] [160])
                (reg:SI 0 r0 [orig:189 <variable>.sh_addr ] [189])) [0 S4 A32])
        (reg:SI 10 sl [233])) 167 {*arm_movsi_insn} (nil))

(jump_insn 311 227 312 31 arch/arm/kernel/module.c:147 (set (pc)
        (label_ref 241)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 33)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 312 311 230)

;; Start of basic block ( 18 11 16) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 13 [sp]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  18 [50.0%]  (loop_exit)
;; Pred edge  11 [71.0%]  (loop_exit)
;; Pred edge  16 [71.0%]  (loop_exit)
(code_label 230 312 231 32 36 "" [3 uses])

(note 231 230 233 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 233 231 235 32 NOTE_INSN_DELETED)

(insn 235 233 236 32 arch/arm/kernel/module.c:243 (set (reg:SI 1 r1)
        (plus:SI (reg/v/f:SI 1 r1 [orig:170 module ] [170])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 236 235 234 32 arch/arm/kernel/module.c:243 (set (reg:SI 2 r2)
        (reg:SI 4 r4 [orig:158 D.18574 ] [158])) 167 {*arm_movsi_insn} (nil))

(insn 234 236 237 32 arch/arm/kernel/module.c:243 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x111b02c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x111b02c0>)
        (nil)))

(call_insn 237 234 238 32 arch/arm/kernel/module.c:243 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 238 237 313 32 arch/arm/kernel/module.c:245 (set (reg:SI 0 r0 [orig:161 D.18562 ] [161])
        (const_int -8 [0xfffffffffffffff8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -8 [0xfffffffffffffff8])
        (nil)))

(jump_insn 313 238 314 32 arch/arm/kernel/module.c:245 (set (pc)
        (label_ref 254)) 242 {*arm_jump} (nil))
;; End of basic block 32 -> ( 36)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  36 [100.0%] 

(barrier 314 313 241)

;; Start of basic block ( 28 10 20 26 27 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6]
;; live  kill	

;; Pred edge  28 [100.0%] 
;; Pred edge  10 [50.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  26 [100.0%] 
;; Pred edge  27 [100.0%] 
;; Pred edge  31 [100.0%] 
(code_label 241 314 242 33 37 "" [6 uses])

(note 242 241 243 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 33 arch/arm/kernel/module.c:58 (set (reg/v:SI 3 r3 [orig:148 i ] [148])
        (plus:SI (reg/v:SI 3 r3 [orig:148 i ] [148])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 244 243 245 33 arch/arm/kernel/module.c:58 (set (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
        (plus:SI (reg:SI 6 r6 [orig:143 ivtmp.410 ] [143])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 33 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 245 244 246 34 31 "" [1 uses])

(note 246 245 249 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 249 246 361 34 NOTE_INSN_DELETED)

(insn 361 249 248 34 arch/arm/kernel/module.c:58 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-36 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 248 361 250 34 arch/arm/kernel/module.c:58 (set (reg:SI 0 r0 [orig:237 <variable>.sh_size ] [237])
        (mem/s/j:SI (plus:SI (reg:SI 12 ip)
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                        (const_int 20 [0x14])) [0 %sfp+-36 S4 A32])
                (const_int 20 [0x14])) [0 <variable>.sh_size+0 S4 A32])
        (nil)))

(insn 250 248 251 34 arch/arm/kernel/module.c:58 (set (reg:CC_SWP 24 cc)
        (compare:CC_SWP (lshiftrt:SI (reg:SI 0 r0 [orig:237 <variable>.sh_size ] [237])
                (const_int 3 [0x3]))
            (reg/v:SI 3 r3 [orig:148 i ] [148]))) 221 {*arm_cmpsi_shiftsi_swp} (nil))

(jump_insn 251 250 252 34 arch/arm/kernel/module.c:58 (set (pc)
        (if_then_else (gtu (reg:CC_SWP 24 cc)
                (const_int 0 [0x0]))
            (label_ref 247)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9800 [0x2648])
        (nil)))
;; End of basic block 34 -> ( 3 35)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  3 [98.0%] 
;; Succ edge  35 [2.0%]  (fallthru,loop_exit)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  34 [2.0%]  (fallthru,loop_exit)
(note 252 251 253 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 35 arch/arm/kernel/module.c:248 (set (reg:SI 0 r0 [orig:161 D.18562 ] [161])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 35 -> ( 36)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 35 4 6 25 32) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  25 [100.0%] 
;; Pred edge  32 [100.0%] 
(code_label 254 253 255 36 34 "" [4 uses])

(note 255 254 266 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 266 255 321 36 arch/arm/kernel/module.c:249 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 36 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 321 266 343 NOTE_INSN_DELETED)

(note 343 321 0 NOTE_INSN_DELETED)


;; Function module_alloc (module_alloc)[0:990]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 39.
verify found no changes in insn with uid = 39.
deleting insn with uid = 13.
scanning new insn with uid = 40.
verify found no changes in insn with uid = 40.
deleting insn with uid = 10.
scanning new insn with uid = 41.
verify found no changes in insn with uid = 41.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 32(l0): point = 0
   Insn 20(l0): point = 2
   Insn 12(l0): point = 4
   Insn 14(l0): point = 6
   Insn 39(l0): point = 8
   Insn 11(l0): point = 10
   Insn 40(l0): point = 12
   Insn 7(l0): point = 14
   Insn 41(l0): point = 16
   Insn 15(l0): point = 18
   Insn 19(l0): point = 20
   Insn 18(l0): point = 22
   Insn 17(l0): point = 24
 a0(r134): [5..14]
 a1(r142): [7..8]
 a2(r141): [11..12]
 a3(r138): [15..16]
Compressing live ranges: from 27 to 8 - 29%
Ranges after the compression:
 a0(r134): [0..5]
 a1(r142): [1..2]
 a2(r141): [3..4]
 a3(r138): [6..7]
+++Allocating 24 bytes for conflict table (uncompressed size 32)
;; a0(r134,l0) conflicts: a1(r142,l0) a2(r141,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r142,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a2(r141,l0) conflicts: a0(r134,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a3(r138,l0) conflicts:
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3

  regions=1, blocks=3, points=8
    allocnos=4, copies=0, conflicts=2, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r134 1r142 2r141 3r138
    modified regnos: 134 138 141 142
    border:
    Pressure: GENERAL_REGS=6
    Reg 134 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 4 regs less
    Reg 141 of GENERAL_REGS has 4 regs less
    Reg 138 of GENERAL_REGS has 4 regs less
      Pushing a3(r138,l0)
      Pushing a2(r141,l0)
      Pushing a1(r142,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 12
      Popping a1(r142,l0)  -- assign reg 14
      Popping a2(r141,l0)  -- assign reg 14
      Popping a3(r138,l0)  -- assign reg 12
Disposition:
    0:r134 l0    12    3:r138 l0    12    2:r141 l0    14    1:r142 l0    14
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=17, live_throughout: 0, 13, 14, dead_or_set: 1
insn=18, live_throughout: 0, 1, 13, 14, dead_or_set: 2
insn=19, live_throughout: 0, 1, 2, 13, 14, dead_or_set: 3
insn=15, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 14
insn=41, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 138
insn=7, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 134, 138
insn=40, live_throughout: 0, 1, 2, 3, 13, 134, dead_or_set: 141
insn=11, live_throughout: 0, 1, 2, 3, 13, 134, dead_or_set: 141
insn=39, live_throughout: 0, 1, 2, 3, 13, 134, dead_or_set: 142
insn=14, live_throughout: 0, 1, 2, 3, 13, 134, dead_or_set: 142
insn=12, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 134
insn=20, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=32, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 134: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 138: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 40 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 39 (nil))
changing reg in insn 7
changing reg in insn 12
changing reg in insn 41
changing reg in insn 7
changing reg in insn 40
changing reg in insn 11
changing reg in insn 39
changing reg in insn 14
Spilling for insn 15.
Spilling for insn 11.
Spilling for insn 14.
Spilling for insn 12.

Reloads for insn # 15
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])

Reloads for insn # 11
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 14
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])

Reloads for insn # 12
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


module_alloc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,3u} r1={3d,1u} r2={3d,1u} r3={3d,1u} r12={4d,2u} r13={1d,7u,1d} r14={4d,4u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 151{131d,19u,1e} in 13{12 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 36 4 3 2 NOTE_INSN_DELETED)

(note 3 36 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 17 2 NOTE_INSN_DELETED)

(insn 17 9 18 2 arch/arm/kernel/module.c:42 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/kernel/module.c:42 (set (reg:SI 2 r2)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 15 2 arch/arm/kernel/module.c:42 (set (reg:SI 3 r3)
        (const_int -1075838976 [0xffffffffbfe00000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1075838976 [0xffffffffbfe00000])
        (nil)))

(insn 15 19 41 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 14 lr)) 167 {*arm_movsi_insn} (nil))

(insn 41 15 7 2 arch/arm/kernel/module.c:42 (set (reg/f:SI 12 ip [138])
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e750c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e750c0 pgprot_kernel>)
        (nil)))

(insn 7 41 40 2 arch/arm/kernel/module.c:42 (set (reg:SI 12 ip [orig:134 pgprot_kernel.262 ] [134])
        (mem/c/i:SI (reg/f:SI 12 ip [138]) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (nil)))

(insn 40 7 11 2 arch/arm/kernel/module.c:42 (set (reg:SI 14 lr [141])
        (const_int 208 [0xd0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 208 [0xd0])
        (nil)))

(insn 11 40 39 2 arch/arm/kernel/module.c:42 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 14 lr [141])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 208 [0xd0])
        (nil)))

(insn 39 11 14 2 arch/arm/kernel/module.c:42 (set (reg:SI 14 lr [142])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 14 39 12 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 14 lr [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 12 14 20 2 arch/arm/kernel/module.c:42 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 12 ip [orig:134 pgprot_kernel.262 ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 12 32 2 arch/arm/kernel/module.c:42 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vmalloc_node_range") [flags 0x41] <function_decl 0x10fb8e80 __vmalloc_node_range>) [0 S4 A32])
                    (const_int 16 [0x10])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 32 20 38 2 arch/arm/kernel/module.c:45 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 38 32 42 NOTE_INSN_DELETED)

(note 42 38 0 NOTE_INSN_DELETED)

