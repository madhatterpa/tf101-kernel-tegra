
;; Function smp_prepare_boot_cpu (smp_prepare_boot_cpu)[0:1413] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


smp_prepare_boot_cpu

Dataflow summary:
def_info->table_size = 19, use_info->table_size = 20
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,3u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={2d,2u} r137={1d,1u} r138={2d,3u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r147={1d,1u} 
;;    total ref usage 38{19d,19u,0e} in 10{10 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 137 138 140 141 143 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136 137 138 140 141 143 147
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u16(11){ }u17(13){ }u18(14){ }u19(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 20 to worklist
Finished finding needed instructions:
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 19 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;;   ======================================================
;;   -- basic block 2 from 6 to 20 -- before reload
;;   ======================================================

;;	  0-->    28 r138=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->     9 r137=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  1-->    29 r138=r138&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->     6 r135=`cpu_data'                   :cortex_a8_load_store_1
;;	  2-->     7 r135=asm_operands                 :nothing
;;	  3-->    12 r140=[r138+0x14]                  :cortex_a8_load_store_1
;;	  4-->    19 r147=[r138+0xc]                   :cortex_a8_load_store_1
;;	  6-->    13 r141=[r140*0x4+r137]              :cortex_a8_load_store_1
;;	  8-->    15 r143=r135+r141                    :cortex_a8_default
;;	 10-->    20 [r143+0x34]=r147                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 10
;;   new head = 6
;;   new tail = 20


;; Procedure interblock/speculative motions == 0/0 




smp_prepare_boot_cpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 13[sp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,3u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={2d,2u} r137={1d,1u} r138={2d,3u} r140={1d,1u} r141={1d,1u} r143={1d,1u} r147={1d,1u} 
;;    total ref usage 38{19d,19u,0e} in 10{10 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 137 138 140 141 143 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 137 138 140 141 143 147
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 2 28 2 NOTE_INSN_DELETED)

(insn 28 10 9 2 arch/arm/kernel/smp.c:358 (set (reg:SI 138)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 28 29 2 arch/arm/kernel/smp.c:358 (set (reg/f:SI 137)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 29 9 6 2 arch/arm/kernel/smp.c:358 (set (reg:SI 138)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 6 29 7 2 arch/arm/kernel/smp.c:358 (set (reg/v:SI 135 [ __ptr ])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 12 2 arch/arm/kernel/smp.c:358 (set (reg/v:SI 135 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 135 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8535393)) -1 (nil))

(insn 12 7 19 2 arch/arm/kernel/smp.c:358 (set (reg:SI 140 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 138)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 12 13 2 arch/arm/kernel/smp.c:358 (set (reg/f:SI 147 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 138)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 13 19 15 2 arch/arm/kernel/smp.c:358 (set (reg:SI 141)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 137)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 137)
            (nil))))

(insn 15 13 20 2 arch/arm/kernel/smp.c:358 (set (reg:SI 143)
        (plus:SI (reg/v:SI 135 [ __ptr ])
            (reg:SI 141))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v:SI 135 [ __ptr ])
            (nil))))

(insn 20 15 30 2 arch/arm/kernel/smp.c:358 (set (mem/s/f/j:SI (plus:SI (reg:SI 143)
                (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])
        (reg/f:SI 147 [ <variable>.task ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147 [ <variable>.task ])
        (expr_list:REG_DEAD (reg:SI 143)
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 30 20 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function set_smp_cross_call (set_smp_cross_call)[0:1415] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 7 -- before reload
;;   ======================================================

;;	  0-->     6 r134=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->     7 [r134]=r0                         :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 6
;;   new tail = 7


;; Procedure interblock/speculative motions == 0/0 




set_smp_cross_call

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={1d,1u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/smp.c:399 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 15 2 arch/arm/kernel/smp.c:399 (set (mem/f/c/i:SI (reg/f:SI 134) [0 smp_cross_call+0 S4 A32])
        (reg:SI 0 r0 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg:SI 0 r0 [ fn ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 15 7 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_send_call_function_ipi_mask (arch_send_call_function_ipi_mask)[0:1416]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 10 -- before reload
;;   ======================================================

;;	  0-->     6 r134=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->     9 r1=0x4                            :cortex_a8_default
;;	  1-->    10 call [[r134]]                     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 6
;;   new tail = 10


;; Procedure interblock/speculative motions == 0/0 




arch_send_call_function_ipi_mask

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={2d,1u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} 
;;    total ref usage 141{129d,12u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 1 [r1] 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 6 2 NOTE_INSN_DELETED)

(insn 6 7 9 2 arch/arm/kernel/smp.c:404 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 6 10 2 arch/arm/kernel/smp.c:404 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 18 2 arch/arm/kernel/smp.c:404 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 134) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 10 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_send_call_function_single_ipi (arch_send_call_function_single_ipi)[0:1417]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 20 -- before reload
;;   ======================================================

;;	  0-->     2 r135=r0                           :cortex_a8_default
;;	  0-->    10 r139=`cpu_bit_bitmap'             :cortex_a8_load_store_1
;;	  1-->     7 r136=r135&0x1f                    :cortex_a8_default
;;	  1-->    12 r140=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->     8 r137=r136+0x1                     :cortex_a8_default
;;	  2-->    13 r141=r135 0>>0x5                  :cortex_a8_default
;;	  3-->    19 r1=0x5                            :cortex_a8_default
;;	  4-->    11 r133=r137*0x4+r139                :cortex_a8_default
;;	  6-->    18 r0=r133-r141*0x4                  :cortex_a8_default
;;	  7-->    20 call [[r140]]                     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 20


;; Procedure interblock/speculative motions == 0/0 




arch_send_call_function_single_ipi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 156{136d,20u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 139 140 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 135 136 137 139 140 141
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 14 2 NOTE_INSN_DELETED)

(note 14 9 15 2 NOTE_INSN_DELETED)

(note 15 14 16 2 NOTE_INSN_DELETED)

(note 16 15 17 2 NOTE_INSN_DELETED)

(note 17 16 2 2 NOTE_INSN_DELETED)

(insn 2 17 10 2 arch/arm/kernel/smp.c:408 (set (reg/v:SI 135 [ cpu ])
        (reg:SI 0 r0 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cpu ])
        (nil)))

(insn 10 2 7 2 include/linux/cpumask.h:738 (set (reg/f:SI 139)
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (nil))

(insn 7 10 12 2 include/linux/cpumask.h:738 (set (reg:SI 136)
        (and:SI (reg/v:SI 135 [ cpu ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 7 8 2 arch/arm/kernel/smp.c:409 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 12 13 2 include/linux/cpumask.h:738 (set (reg:SI 137)
        (plus:SI (reg:SI 136)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 13 8 19 2 arch/arm/kernel/smp.c:409 (set (reg:SI 141)
        (lshiftrt:SI (reg/v:SI 135 [ cpu ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ cpu ])
        (nil)))

(insn 19 13 11 2 arch/arm/kernel/smp.c:409 (set (reg:SI 1 r1)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 11 19 18 2 include/linux/cpumask.h:738 (set (reg/v/f:SI 133 [ p ])
        (plus:SI (mult:SI (reg:SI 137)
                (const_int 4 [0x4]))
            (reg/f:SI 139))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg:SI 137)
            (nil))))

(insn 18 11 20 2 arch/arm/kernel/smp.c:409 (set (reg:SI 0 r0)
        (minus:SI (reg/v/f:SI 133 [ p ])
            (mult:SI (reg:SI 141)
                (const_int 4 [0x4])))) 273 {*sub_shiftsi} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v/f:SI 133 [ p ])
            (nil))))

(call_insn 20 18 28 2 arch/arm/kernel/smp.c:409 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 140) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 28 20 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_irq_stat_cpu (smp_irq_stat_cpu)[0:1419]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 77 -- before reload
;;   ======================================================

;;	  0-->     2 r139=r0                           :cortex_a8_default
;;	  0-->     6 r140=`irq_stat'                   :cortex_a8_load_store_1
;;	  2-->    18 r152=r139*0x20+r140               :cortex_a8_default
;;	  2-->    10 r144=r139*0x20+r140               :cortex_a8_default
;;	  3-->    27 r160=r139*0x20+r140               :cortex_a8_default
;;	  3-->    45 r176=r139*0x20+r140               :cortex_a8_default
;;	  4-->    20 r155=[r152+0x8]                   :cortex_a8_load_store_1
;;	  5-->    13 r148=[r144+0xc]                   :cortex_a8_load_store_1
;;	  6-->    21 r154=zxn(r155)                    :cortex_a8_default
;;	  6-->    30 r164=[r160+0x10]                  :cortex_a8_load_store_1
;;	  7-->    22 {r136=zxn(r148)+r154;clobber cc;} :cortex_a8_default
;;	  7-->    38 r171=[r152+0x14]                  :cortex_a8_load_store_1
;;	  8-->    32 {r135=zxn(r164)+r136;clobber cc;} :cortex_a8_default
;;	  8-->    48 r180=[r176+0x18]                  :cortex_a8_load_store_1
;;	  9-->    40 {r134=zxn(r171)+r135;clobber cc;} :cortex_a8_default
;;	  9-->    56 r187=[r152+0x1c]                  :cortex_a8_load_store_1
;;	 10-->    50 {r133=zxn(r180)+r134;clobber cc;} :cortex_a8_default
;;	 10-->    64 r195=[r152+0x4]                   :cortex_a8_load_store_1
;;	 11-->    58 {r137=zxn(r187)+r133;clobber cc;} :cortex_a8_default
;;	 12-->    66 {r188=zxn(r195)+r137;clobber cc;} :cortex_a8_default
;;	 13-->    85 r1=r188#4                         :cortex_a8_default
;;	 13-->    84 r0=r188#0                         :cortex_a8_default
;;	 14-->    77 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 14
;;   new head = 2
;;   new tail = 77


;; Procedure interblock/speculative motions == 0/0 




smp_irq_stat_cpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={2d,2u} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r24={6d} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,4u} r140={1d,4u} r144={1d,1u} r148={1d,1u} r152={1d,4u} r154={1d,1u} r155={1d,1u} r160={1d,1u} r164={1d,1u} r171={1d,1u} r176={1d,1u} r180={1d,1u} r187={1d,1u} r188={1d,2u} r195={1d,1u} 
;;    total ref usage 81{38d,43u,0e} in 23{23 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 139 140 144 148 152 154 155 160 164 171 176 180 187 188 195
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 134 135 136 137 139 140 144 148 152 154 155 160 164 171 176 180 187 188 195
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 8 2 NOTE_INSN_DELETED)

(note 8 7 11 2 NOTE_INSN_DELETED)

(note 11 8 14 2 NOTE_INSN_DELETED)

(note 14 11 17 2 NOTE_INSN_DELETED)

(note 17 14 24 2 NOTE_INSN_DELETED)

(note 24 17 25 2 NOTE_INSN_DELETED)

(note 25 24 28 2 NOTE_INSN_DELETED)

(note 28 25 31 2 NOTE_INSN_DELETED)

(note 31 28 37 2 NOTE_INSN_DELETED)

(note 37 31 39 2 NOTE_INSN_DELETED)

(note 39 37 42 2 NOTE_INSN_DELETED)

(note 42 39 43 2 NOTE_INSN_DELETED)

(note 43 42 46 2 NOTE_INSN_DELETED)

(note 46 43 49 2 NOTE_INSN_DELETED)

(note 49 46 55 2 NOTE_INSN_DELETED)

(note 55 49 57 2 NOTE_INSN_DELETED)

(note 57 55 65 2 NOTE_INSN_DELETED)

(note 65 57 2 2 NOTE_INSN_DELETED)

(insn 2 65 6 2 arch/arm/kernel/smp.c:438 (set (reg/v:SI 139 [ cpu ])
        (reg:SI 0 r0 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cpu ])
        (nil)))

(insn 6 2 18 2 arch/arm/kernel/smp.c:443 (set (reg/f:SI 140)
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (nil))

(insn 18 6 10 2 arch/arm/kernel/smp.c:443 (set (reg:SI 152)
        (plus:SI (mult:SI (reg/v:SI 139 [ cpu ])
                (const_int 32 [0x20]))
            (reg/f:SI 140))) 270 {*arith_shiftsi} (nil))

(insn 10 18 27 2 arch/arm/kernel/smp.c:443 (set (reg:SI 144)
        (plus:SI (mult:SI (reg/v:SI 139 [ cpu ])
                (const_int 32 [0x20]))
            (reg/f:SI 140))) 270 {*arith_shiftsi} (nil))

(insn 27 10 45 2 arch/arm/kernel/smp.c:443 (set (reg:SI 160)
        (plus:SI (mult:SI (reg/v:SI 139 [ cpu ])
                (const_int 32 [0x20]))
            (reg/f:SI 140))) 270 {*arith_shiftsi} (nil))

(insn 45 27 20 2 arch/arm/kernel/smp.c:443 (set (reg:SI 176)
        (plus:SI (mult:SI (reg/v:SI 139 [ cpu ])
                (const_int 32 [0x20]))
            (reg/f:SI 140))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg/v:SI 139 [ cpu ])
            (nil))))

(insn 20 45 13 2 arch/arm/kernel/smp.c:443 (set (reg:SI 155 [ <variable>.ipi_irqs ])
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 13 20 21 2 arch/arm/kernel/smp.c:443 (set (reg:SI 148 [ <variable>.ipi_irqs+4 ])
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 12 [0xc])) [0 <variable>.ipi_irqs+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 21 13 30 2 arch/arm/kernel/smp.c:443 (set (reg:DI 154 [ <variable>.ipi_irqs ])
        (zero_extend:DI (reg:SI 155 [ <variable>.ipi_irqs ]))) 138 {*arm_zero_extendsidi2} (expr_list:REG_DEAD (reg:SI 155 [ <variable>.ipi_irqs ])
        (nil)))

(insn 30 21 22 2 arch/arm/kernel/smp.c:443 (set (reg:SI 164 [ <variable>.ipi_irqs+8 ])
        (mem/s/j:SI (plus:SI (reg:SI 160)
                (const_int 16 [0x10])) [0 <variable>.ipi_irqs+8 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 22 30 38 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 136 [ sum.577 ])
                (plus:DI (zero_extend:DI (reg:SI 148 [ <variable>.ipi_irqs+4 ]))
                    (reg:DI 154 [ <variable>.ipi_irqs ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:DI 154 [ <variable>.ipi_irqs ])
        (expr_list:REG_DEAD (reg:SI 148 [ <variable>.ipi_irqs+4 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 38 22 32 2 arch/arm/kernel/smp.c:443 (set (reg:SI 171 [ <variable>.ipi_irqs+12 ])
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 20 [0x14])) [0 <variable>.ipi_irqs+12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 38 48 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 135 [ sum.580 ])
                (plus:DI (zero_extend:DI (reg:SI 164 [ <variable>.ipi_irqs+8 ]))
                    (reg/v:DI 136 [ sum.577 ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:SI 164 [ <variable>.ipi_irqs+8 ])
        (expr_list:REG_DEAD (reg/v:DI 136 [ sum.577 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 48 32 40 2 arch/arm/kernel/smp.c:443 (set (reg:SI 180 [ <variable>.ipi_irqs+16 ])
        (mem/s/j:SI (plus:SI (reg:SI 176)
                (const_int 24 [0x18])) [0 <variable>.ipi_irqs+16 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 40 48 56 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 134 [ sum.583 ])
                (plus:DI (zero_extend:DI (reg:SI 171 [ <variable>.ipi_irqs+12 ]))
                    (reg/v:DI 135 [ sum.580 ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:SI 171 [ <variable>.ipi_irqs+12 ])
        (expr_list:REG_DEAD (reg/v:DI 135 [ sum.580 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 56 40 50 2 arch/arm/kernel/smp.c:443 (set (reg:SI 187 [ <variable>.ipi_irqs+20 ])
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 28 [0x1c])) [0 <variable>.ipi_irqs+20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 56 64 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 133 [ sum.586 ])
                (plus:DI (zero_extend:DI (reg:SI 180 [ <variable>.ipi_irqs+16 ]))
                    (reg/v:DI 134 [ sum.583 ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.ipi_irqs+16 ])
        (expr_list:REG_DEAD (reg/v:DI 134 [ sum.583 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 64 50 58 2 arch/arm/kernel/smp.c:450 (set (reg:SI 195 [ <variable>.local_timer_irqs ])
        (mem/s/j:SI (plus:SI (reg:SI 152)
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 58 64 66 2 arch/arm/kernel/smp.c:443 (parallel [
            (set (reg/v:DI 137 [ sum ])
                (plus:DI (zero_extend:DI (reg:SI 187 [ <variable>.ipi_irqs+20 ]))
                    (reg/v:DI 133 [ sum.586 ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:SI 187 [ <variable>.ipi_irqs+20 ])
        (expr_list:REG_DEAD (reg/v:DI 133 [ sum.586 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 66 58 85 2 arch/arm/kernel/smp.c:450 (parallel [
            (set (reg:DI 188)
                (plus:DI (zero_extend:DI (reg:SI 195 [ <variable>.local_timer_irqs ]))
                    (reg/v:DI 137 [ sum ])))
            (clobber (reg:CC 24 cc))
        ]) 3 {*adddi_zesidi_di} (expr_list:REG_DEAD (reg:SI 195 [ <variable>.local_timer_irqs ])
        (expr_list:REG_DEAD (reg/v:DI 137 [ sum ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 85 66 84 2 arch/arm/kernel/smp.c:450 (set (reg:SI 1 r1 [+4 ])
        (subreg:SI (reg:DI 188) 4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:DI 188)
        (nil)))

(insn 84 85 77 2 arch/arm/kernel/smp.c:450 (set (reg:SI 0 r0)
        (subreg:SI (reg:DI 188) 0)) 167 {*arm_movsi_insn} (nil))

(insn 77 84 92 2 arch/arm/kernel/smp.c:450 (use (reg/i:DI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 92 77 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_timer_broadcast (smp_timer_broadcast)[0:1423]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 10 -- before reload
;;   ======================================================

;;	  0-->     6 r134=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->     9 r1=0x2                            :cortex_a8_default
;;	  1-->    10 call [[r134]]                     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 6
;;   new tail = 10


;; Procedure interblock/speculative motions == 0/0 




smp_timer_broadcast

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={2d,1u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,1u} 
;;    total ref usage 141{129d,12u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 1 [r1] 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 6 2 NOTE_INSN_DELETED)

(insn 6 7 9 2 arch/arm/kernel/smp.c:495 (set (reg/f:SI 134)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 6 10 2 arch/arm/kernel/smp.c:495 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 18 2 arch/arm/kernel/smp.c:495 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 134) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 134)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 18 10 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function broadcast_timer_set_mode (broadcast_timer_set_mode)[0:1424]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

;; Procedure interblock/speculative motions == 0/0 




broadcast_timer_set_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 14 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 14 4 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_send_reschedule (smp_send_reschedule)[0:1432]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 20 -- before reload
;;   ======================================================

;;	  0-->     2 r135=r0                           :cortex_a8_default
;;	  0-->    10 r139=`cpu_bit_bitmap'             :cortex_a8_load_store_1
;;	  1-->     7 r136=r135&0x1f                    :cortex_a8_default
;;	  1-->    12 r140=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->     8 r137=r136+0x1                     :cortex_a8_default
;;	  2-->    13 r141=r135 0>>0x5                  :cortex_a8_default
;;	  3-->    19 r1=0x3                            :cortex_a8_default
;;	  4-->    11 r133=r137*0x4+r139                :cortex_a8_default
;;	  6-->    18 r0=r133-r141*0x4                  :cortex_a8_default
;;	  7-->    20 call [[r140]]                     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 2
;;   new tail = 20


;; Procedure interblock/speculative motions == 0/0 




smp_send_reschedule

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,1u} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 156{136d,20u,0e} in 10{9 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 139 140 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 133 135 136 137 139 140 141
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 14 2 NOTE_INSN_DELETED)

(note 14 9 15 2 NOTE_INSN_DELETED)

(note 15 14 16 2 NOTE_INSN_DELETED)

(note 16 15 17 2 NOTE_INSN_DELETED)

(note 17 16 2 2 NOTE_INSN_DELETED)

(insn 2 17 10 2 arch/arm/kernel/smp.c:673 (set (reg/v:SI 135 [ cpu ])
        (reg:SI 0 r0 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cpu ])
        (nil)))

(insn 10 2 7 2 include/linux/cpumask.h:738 (set (reg/f:SI 139)
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (nil))

(insn 7 10 12 2 include/linux/cpumask.h:738 (set (reg:SI 136)
        (and:SI (reg/v:SI 135 [ cpu ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 7 8 2 arch/arm/kernel/smp.c:674 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 12 13 2 include/linux/cpumask.h:738 (set (reg:SI 137)
        (plus:SI (reg:SI 136)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 13 8 19 2 arch/arm/kernel/smp.c:674 (set (reg:SI 141)
        (lshiftrt:SI (reg/v:SI 135 [ cpu ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ cpu ])
        (nil)))

(insn 19 13 11 2 arch/arm/kernel/smp.c:674 (set (reg:SI 1 r1)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 11 19 18 2 include/linux/cpumask.h:738 (set (reg/v/f:SI 133 [ p ])
        (plus:SI (mult:SI (reg:SI 137)
                (const_int 4 [0x4]))
            (reg/f:SI 139))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg:SI 137)
            (nil))))

(insn 18 11 20 2 arch/arm/kernel/smp.c:674 (set (reg:SI 0 r0)
        (minus:SI (reg/v/f:SI 133 [ p ])
            (mult:SI (reg:SI 141)
                (const_int 4 [0x4])))) 273 {*sub_shiftsi} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v/f:SI 133 [ p ])
            (nil))))

(call_insn 20 18 28 2 arch/arm/kernel/smp.c:674 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 140) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 28 20 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_profiling_timer (setup_profiling_timer)[0:1434]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 10 to 16 -- before reload
;;   ======================================================

;;	  0-->    10 r0=0xffffffffffffffea             :cortex_a8_default
;;	  0-->    16 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 10
;;   new tail = 16


;; Procedure interblock/speculative motions == 0/0 




setup_profiling_timer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 21{11d,10u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 10 2 NOTE_INSN_DELETED)

(insn 10 6 16 2 arch/arm/kernel/smp.c:703 (set (reg/i:SI 0 r0)
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(insn 16 10 20 2 arch/arm/kernel/smp.c:703 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 20 16 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_send_stop (smp_send_stop)[0:1433]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 19 (  1.7)


smp_send_stop

Dataflow summary:
def_info->table_size = 862, use_info->table_size = 92
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,10u} r1={10d,2u} r2={8d} r3={8d} r11={1d,10u} r12={8d} r13={1d,18u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={11d,4u} r25={1d,11u,2d} r26={1d,9u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r139={2d,2u} r140={2d,3u} r141={1d,4u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={2d,2u} r148={1d,1u} r152={1d,1u} r154={1d,1u} 
;;    total ref usage 939{855d,82u,2e} in 38{31 regular + 7 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d24(1){ }d32(2){ }d40(3){ }d41(11){ }d49(12){ }d50(13){ }d58(14){ }d133(25){ }d134(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 141 142 144
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 145 146 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 140 145 146 148
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141

( 2 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 139
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141

( 7 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 0 [r0] 139
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141

( 5 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 0 [r0] 24 [cc] 152
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141

( 6 )->[7]->( 5 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141

( 6 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 24 [cc] 154
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 9 8 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u88(11){ }u89(13){ }u90(14){ }u91(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 11 to worklist
  Adding insn 31 to worklist
  Adding insn 25 to worklist
  Adding insn 17 to worklist
  Adding insn 97 to worklist
  Adding insn 40 to worklist
  Adding insn 49 to worklist
  Adding insn 46 to worklist
  Adding insn 53 to worklist
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 66 to worklist
Finished finding needed instructions:
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
  Adding insn 95 to worklist
  Adding insn 38 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 65 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 61 to worklist
  Adding insn 58 to worklist
  Adding insn 56 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
  Adding insn 52 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
  Adding insn 48 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
  Adding insn 34 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 96 to worklist
  Adding insn 16 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 14 count 22 (    2)
;;   ======================================================
;;   -- basic block 6 from 43 to 49 -- before reload
;;   ======================================================

;;	  0-->    43 r152=[r141]                       :cortex_a8_load_store_1
;;	  2-->    45 r0=r152&0x3                       :cortex_a8_default
;;	  3-->    46 r0=call [`__sw_hweight32']        :cortex_a8_issue_branch
;;	 35-->    48 cc=cmp(r0,0x1)                    :cortex_a8_default
changing bb of uid 95
  from 5 to 6
;;	 35-->    95 r0=0x1                            :cortex_a8_default
;;	 37-->    49 pc={(leu(cc,0x0))?L54:pc}         :cortex_a8_branch
;;	Ready list (final):    52/b1
;;   total time = 37
;;   new head = 43
;;   new tail = 49

;;   ======================================================
;;   -- basic block 7 from 52 to 53 -- before reload
;;   ======================================================

;;	  0-->    52 cc=cmp(r139,0x0)                  :cortex_a8_default
changing bb of uid 38
  from 5 to 7
;;	  0-->    38 r139=r139-0x1                     :cortex_a8_default
;;	  2-->    53 pc={(cc!=0x0)?L51:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 52
;;   new tail = 53

;;   ======================================================
;;   -- basic block 5 from 40 to 40 -- before reload
;;   ======================================================

;;	  0-->    40 call [`__udelay']                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 40
;;   new tail = 40

;;   ======================================================
;;   -- basic block 2 from 6 to 14 -- before reload
;;   ======================================================

;;	  0-->     6 r142=`cpu_online_mask'            :cortex_a8_load_store_1
;;	  3-->     7 r141=[r142]                       :cortex_a8_load_store_1
;;	  6-->     8 r144=[r141]                       :cortex_a8_load_store_1
;;	  8-->    10 r0=r144&0x3                       :cortex_a8_default
;;	  9-->    11 r0=call [`__sw_hweight32']        :cortex_a8_issue_branch
;;	 41-->    13 cc=cmp(r0,0x1)                    :cortex_a8_default
;;	 43-->    14 pc={(leu(cc,0x0))?L32:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 43
;;   new head = 6
;;   new tail = 14

;;   ======================================================
;;   -- basic block 3 from 16 to 31 -- before reload
;;   ======================================================

;;	  0-->    16 r145=[r141]                       :cortex_a8_load_store_1
;;	  0-->   100 r146=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   101 r146=r146&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->    96 r140=sfp                          :cortex_a8_default
;;	  3-->    17 [--r140]=r145                     :cortex_a8_load_store_1
;;	  3-->    24 r1=r140                           :cortex_a8_default
;;	  4-->    23 r0=[r146+0x14]                    :cortex_a8_load_store_1
;;	  5-->    25 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  5-->    29 r0=r140                           :cortex_a8_default
;;	  6-->    26 r148=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  6-->    30 r1=0x6                            :cortex_a8_default
;;	  7-->    31 call [[r148]]                     :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 16
;;   new tail = 31

;;   ======================================================
;;   -- basic block 4 from 34 to 97 -- before reload
;;   ======================================================

;;	  0-->    34 r139=0xf4240                      :cortex_a8_load_store_1
;;	  0-->    97 pc=L41                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 34
;;   new tail = 97

;;   ======================================================
;;   -- basic block 8 from 56 to 62 -- before reload
;;   ======================================================

;;	  0-->    56 r154=[r141]                       :cortex_a8_load_store_1
;;	  2-->    58 r0=r154&0x3                       :cortex_a8_default
;;	  3-->    59 r0=call [`__sw_hweight32']        :cortex_a8_issue_branch
;;	 35-->    61 cc=cmp(r0,0x1)                    :cortex_a8_default
;;	 37-->    62 pc={(leu(cc,0x0))?L72:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 37
;;   new head = 56
;;   new tail = 62

;;   ======================================================
;;   -- basic block 9 from 65 to 66 -- before reload
;;   ======================================================

;;	  0-->    65 r0=`*.LC0'                        :cortex_a8_load_store_1
;;	  1-->    66 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 65
;;   new tail = 66


;; Procedure interblock/speculative motions == 2/2 




smp_send_stop

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,10u} r1={10d,2u} r2={8d} r3={8d} r11={1d,10u} r12={8d} r13={1d,18u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={11d,4u} r25={1d,11u,2d} r26={1d,9u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r139={2d,2u} r140={2d,3u} r141={1d,4u} r142={1d,1u} r144={1d,1u} r145={1d,1u} r146={2d,2u} r148={1d,1u} r152={1d,1u} r154={1d,1u} 
;;    total ref usage 939{855d,82u,2e} in 38{31 regular + 7 call} insns.
(note 2 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 141 142 144
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 12 2 NOTE_INSN_DELETED)

(note 12 9 6 2 NOTE_INSN_DELETED)

(insn 6 12 7 2 arch/arm/kernel/smp.c:681 (set (reg/f:SI 142)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/smp.c:681 (set (reg/f:SI 141 [ cpu_online_mask.449 ])
        (mem/u/f/c/i:SI (reg/f:SI 142) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
            (nil))))

(insn 8 7 10 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 144 [ <variable>.bits ])
        (mem/s/j:SI (reg/f:SI 141 [ cpu_online_mask.449 ]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 144 [ <variable>.bits ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.bits ])
        (nil)))

(call_insn 11 10 13 2 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 13 11 14 2 arch/arm/kernel/smp.c:681 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 14 13 15 2 arch/arm/kernel/smp.c:681 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4752 [0x1290])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  3 [52.5%]  (fallthru)
;; Succ edge  4 [47.5%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 145 146 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 1 [r1] 140 145 146 148
;; live  kill	 14 [lr]

;; Pred edge  2 [52.5%]  (fallthru)
(note 15 14 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 21 15 28 3 NOTE_INSN_DELETED)

(note 28 21 16 3 NOTE_INSN_DELETED)

(insn 16 28 100 3 arch/arm/kernel/smp.c:682 (set (reg:SI 145)
        (mem/s:SI (reg/f:SI 141 [ cpu_online_mask.449 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 100 16 101 3 include/linux/cpumask.h:848 (set (reg:SI 146)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 101 100 96 3 include/linux/cpumask.h:848 (set (reg:SI 146)
        (and:SI (reg:SI 146)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 96 101 17 3 arch/arm/kernel/smp.c:682 (set (reg/f:SI 140 [ mask.450 ])
        (reg/f:SI 25 sfp)) 167 {*arm_movsi_insn} (nil))

(insn 17 96 24 3 arch/arm/kernel/smp.c:682 (set (mem/s/c:SI (pre_dec:SI (reg/f:SI 140 [ mask.450 ])) [0 mask+0 S4 A32])
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_INC (reg/f:SI 140 [ mask.450 ])
            (nil))))

(insn 24 17 23 3 include/linux/cpumask.h:848 (set (reg:SI 1 r1)
        (reg/f:SI 140 [ mask.450 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(insn 23 24 25 3 include/linux/cpumask.h:848 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg:SI 146)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(call_insn 25 23 29 3 include/linux/cpumask.h:848 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 25 26 3 arch/arm/kernel/smp.c:685 (set (reg:SI 0 r0)
        (reg/f:SI 140 [ mask.450 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ mask.450 ])
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn 26 29 30 3 arch/arm/kernel/smp.c:685 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 30 26 31 3 arch/arm/kernel/smp.c:685 (set (reg:SI 1 r1)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 3 arch/arm/kernel/smp.c:685 (parallel [
            (call (mem:SI (mem/f/c/i:SI (reg/f:SI 148) [0 smp_cross_call+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 139
;; live  kill	

;; Pred edge  2 [47.5%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 32 31 33 4 34 "" [1 uses])

(note 33 32 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 97 4 arch/arm/kernel/smp.c:685 (set (reg/v:SI 139 [ timeout ])
        (const_int 1000000 [0xf4240])) 167 {*arm_movsi_insn} (nil))

(jump_insn 97 34 98 4 (set (pc)
        (label_ref 41)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141


;; Succ edge  6 [100.0%] 

(barrier 98 97 51)

;; Start of basic block ( 7) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 0 [r0] 139
;; live  kill	 14 [lr]

;; Pred edge  7 [95.5%] 
(code_label 51 98 37 5 37 "" [1 uses])

(note 37 51 40 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 40 37 41 5 arch/arm/kernel/smp.c:691 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10e39780 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 0 [r0] 24 [cc] 152
;; live  kill	 14 [lr]

;; Pred edge  5 [100.0%]  (fallthru,dfs_back)
;; Pred edge  4 [100.0%] 
(code_label 41 40 42 6 35 "" [1 uses])

(note 42 41 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 44 42 47 6 NOTE_INSN_DELETED)

(note 47 44 43 6 NOTE_INSN_DELETED)

(insn 43 47 45 6 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 152 [ <variable>.bits ])
        (mem/s/j:SI (reg/f:SI 141 [ cpu_online_mask.449 ]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 43 46 6 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 152 [ <variable>.bits ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152 [ <variable>.bits ])
        (nil)))

(call_insn 46 45 48 6 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 48 46 95 6 arch/arm/kernel/smp.c:690 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 95 48 49 6 arch/arm/kernel/smp.c:691 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 49 95 50 6 arch/arm/kernel/smp.c:690 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141


;; Succ edge  7 [95.5%]  (fallthru)
;; Succ edge  8 [4.5%]  (loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [95.5%]  (fallthru)
(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 38 7 arch/arm/kernel/smp.c:690 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ timeout ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 38 52 53 7 arch/arm/kernel/smp.c:690 discrim 2 (set (reg/v:SI 139 [ timeout ])
        (plus:SI (reg/v:SI 139 [ timeout ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(jump_insn 53 38 54 7 arch/arm/kernel/smp.c:690 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 7 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141


;; Succ edge  5 [95.5%] 
;; Succ edge  8 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; live  gen 	 0 [r0] 24 [cc] 154
;; live  kill	 14 [lr]

;; Pred edge  6 [4.5%]  (loop_exit)
;; Pred edge  7 [4.5%]  (fallthru,loop_exit)
(code_label 54 53 55 8 36 "" [1 uses])

(note 55 54 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 57 55 60 8 NOTE_INSN_DELETED)

(note 60 57 56 8 NOTE_INSN_DELETED)

(insn 56 60 58 8 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 154 [ <variable>.bits ])
        (mem/s/j:SI (reg/f:SI 141 [ cpu_online_mask.449 ]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141 [ cpu_online_mask.449 ])
        (nil)))

(insn 58 56 59 8 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 154 [ <variable>.bits ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 154 [ <variable>.bits ])
        (nil)))

(call_insn 59 58 61 8 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 61 59 62 8 arch/arm/kernel/smp.c:693 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 62 61 63 8 arch/arm/kernel/smp.c:693 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  9 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  8 [0.0%]  (fallthru)
(note 63 62 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 65 63 66 9 arch/arm/kernel/smp.c:694 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115aa400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x115aa400>)
        (nil)))

(call_insn 66 65 72 9 arch/arm/kernel/smp.c:694 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 72 66 75 10 39 "" [1 uses])

(note 75 72 102 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 102 75 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ipi_timer (ipi_timer)[0:1420]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


ipi_timer

Dataflow summary:
def_info->table_size = 370, use_info->table_size = 25
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={5d,1u} r1={4d} r2={4d} r3={4d} r11={1d,2u} r12={4d} r13={1d,6u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={1d,2u} r26={1d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={2d,3u} r135={1d,1u} r137={1d,1u} r138={2d,2u} r140={1d,1u} r141={1d,2u} 
;;    total ref usage 392{369d,23u,0e} in 12{9 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d12(2){ }d16(3){ }d17(11){ }d21(12){ }d22(13){ }d25(14){ }d56(25){ }d57(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137 138 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 135 136 137 138 140 141
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u21(11){ }u22(13){ }u23(14){ }u24(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
Finished finding needed instructions:
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 8 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
;;   ======================================================
;;   -- basic block 2 from 5 to 18 -- before reload
;;   ======================================================

;;	  0-->    27 r138=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->     8 r137=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  1-->    28 r138=r138&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->     5 r134=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->     6 r134=asm_operands                 :nothing
;;	  3-->    11 r140=[r138+0x14]                  :cortex_a8_load_store_1
;;	  6-->    12 r141=[r140*0x4+r137]              :cortex_a8_load_store_1
;;	  8-->    13 r135=r134+r141                    :cortex_a8_default
;;	  9-->    14 call [`irq_enter']                :cortex_a8_issue_branch
;;	  9-->    16 r0=r135                           :cortex_a8_default
;;	 10-->    17 call [[r134+r141]]                :cortex_a8_issue_branch
;;	 11-->    18 call [`irq_exit']                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 5
;;   new tail = 18


;; Procedure interblock/speculative motions == 0/0 




ipi_timer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={5d,1u} r1={4d} r2={4d} r3={4d} r11={1d,2u} r12={4d} r13={1d,6u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={3d} r25={1d,2u} r26={1d,1u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r134={2d,3u} r135={1d,1u} r137={1d,1u} r138={2d,2u} r140={1d,1u} r141={1d,2u} 
;;    total ref usage 392{369d,23u,0e} in 12{9 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 137 138 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 135 137 138 140 141
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 2 15 2 NOTE_INSN_DELETED)

(note 15 9 27 2 NOTE_INSN_DELETED)

(insn 27 15 8 2 arch/arm/kernel/smp.c:459 (set (reg:SI 138)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 27 28 2 arch/arm/kernel/smp.c:459 (set (reg/f:SI 137)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 28 8 5 2 arch/arm/kernel/smp.c:459 (set (reg:SI 138)
        (and:SI (reg:SI 138)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 5 28 6 2 arch/arm/kernel/smp.c:459 (set (reg/v:SI 134 [ __ptr ])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 11 2 arch/arm/kernel/smp.c:459 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 134 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8548355)) -1 (nil))

(insn 11 6 12 2 arch/arm/kernel/smp.c:459 (set (reg:SI 140 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 138)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/smp.c:459 (set (reg:SI 141)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 137)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 137)
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/smp.c:459 (set (reg/v/f:SI 135 [ evt ])
        (plus:SI (reg/v:SI 134 [ __ptr ])
            (reg:SI 141))) 4 {*arm_addsi3} (nil))

(call_insn 14 13 16 2 arch/arm/kernel/smp.c:460 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 16 14 17 2 arch/arm/kernel/smp.c:461 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ evt ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ evt ])
        (nil)))

(call_insn 17 16 18 2 arch/arm/kernel/smp.c:461 (parallel [
            (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v:SI 134 [ __ptr ])
                            (reg:SI 141)) [0 <variable>.event_handler+0 S4 A256]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v:SI 134 [ __ptr ])
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn/j 18 17 19 2 arch/arm/kernel/smp.c:462 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_exit") [flags 0x41] <function_decl 0x11017000 irq_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 19 18 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_IPI (do_IPI)[0:1431]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 25 count 28 (  1.6)


do_IPI

Dataflow summary:
def_info->table_size = 2409, use_info->table_size = 172
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,11u} r1={26d,6u} r2={22d,1u} r3={21d} r11={1d,16u} r12={21d} r13={1d,38u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={27d,3u} r25={1d,16u} r26={1d,15u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r134={2d,2u} r138={1d,1u} r141={2d,3u} r146={1d,1u} r147={1d,11u,2d} r149={1d,3u} r150={1d,2u} r151={2d,2u} r154={1d,1u} r158={1d,2u} r165={1d,2u} r166={1d,1u} r168={1d,1u} r171={1d,2u} r180={1d,1u} r181={1d,1u} r182={1d,2u} r183={1d,1u} r184={1d,1u} r191={1d,4u} r193={1d,1u} r194={1d,1u} r195={1d,1u,1d} r197={1d,1u} r198={1d,1u} r209={1d,1u} r210={2d,2u} r212={1d,1u,1d} r213={1d,1u} 
;;    total ref usage 2571{2406d,161u,4e} in 88{68 regular + 20 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d30(0){ }d56(1){ }d78(2){ }d99(3){ }d100(11){ }d121(12){ }d122(13){ }d143(14){ }d351(25){ }d352(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 146 147 149 150 151 154 158 165
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 146 147 149 150 151 153 154 158 165
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 165
;; lr  def 	 166 168 171 180 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165
;; live  gen 	 166 168 171 180 181
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150

( 2 3 )->[4]->( 15 5 6 7 8 9 13 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; live  gen 	 182
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150

( 4 )->[5]->( 16 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 4 )->[6]->( 16 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 4 )->[7]->( 16 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 4 )->[8]->( 16 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 4 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 24 [cc] 183 184
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147

( 9 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 11 12 )->[12]->( 12 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[13]->( 14 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 138 191 193 194 195 197 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150
;; live  gen 	 24 [cc] 138 191 193 194 195 197 198
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150 191

( 13 )->[14]->( 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 150 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 150 191
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 4 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 149
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 5 6 8 13 15 7 14 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 134 209 210 212 213
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 134 208 209 210 212 213
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u168(11){ }u169(13){ }u170(14){ }u171(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 50 to worklist
  Adding insn 54 to worklist
  Adding insn 184 to worklist
  Adding insn 60 to worklist
  Adding insn 186 to worklist
  Adding insn 65 to worklist
  Adding insn 188 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 190 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 88 to worklist
  Adding insn 84 to worklist
  Adding insn 102 to worklist
  Adding insn 98 to worklist
  Adding insn 97 to worklist
  Adding insn 93 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 192 to worklist
  Adding insn 111 to worklist
  Adding insn 132 to worklist
  Adding insn 127 to worklist
  Adding insn 194 to worklist
  Adding insn 153 to worklist
  Adding insn 147 to worklist
  Adding insn 143 to worklist
  Adding insn 141 to worklist
  Adding insn 137 to worklist
  Adding insn 162 to worklist
  Adding insn 175 to worklist
Finished finding needed instructions:
processing block 16 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 174 to worklist
  Adding insn 173 to worklist
  Adding insn 197 to worklist
  Adding insn 196 to worklist
  Adding insn 170 to worklist
  Adding insn 168 to worklist
  Adding insn 167 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
  Adding insn 161 to worklist
  Adding insn 160 to worklist
  Adding insn 159 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp]
  Adding insn 106 to worklist
  Adding insn 105 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
  Adding insn 101 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 92 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
  Adding insn 152 to worklist
  Adding insn 151 to worklist
  Adding insn 146 to worklist
  Adding insn 142 to worklist
  Adding insn 140 to worklist
  Adding insn 139 to worklist
  Adding insn 136 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150 191
  Adding insn 131 to worklist
  Adding insn 129 to worklist
  Adding insn 128 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
  Adding insn 121 to worklist
  Adding insn 119 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
  Adding insn 53 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 25 count 32 (  1.9)
;;   ======================================================
;;   -- basic block 2 from 2 to 31 -- before reload
;;   ======================================================

;;	  0-->   198 r151=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    14 r154=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  1-->   199 r151=r151&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->     2 r149=r0                           :cortex_a8_default
;;	  2-->    29 r165=r149-0x2                     :cortex_a8_default
;;	  2-->     3 r150=r1                           :cortex_a8_default
;;	  3-->    10 r147=[r151+0x14]                  :cortex_a8_load_store_1
;;	  3-->    30 cc=cmp(r165,0x5)                  :cortex_a8_default
;;	  4-->    11 r141=`__irq_regs'                 :cortex_a8_load_store_1
;;	  5-->    12 r141=asm_operands                 :nothing
;;	  6-->    18 r158=[r147*0x4+r154]              :cortex_a8_load_store_1
;;	  9-->    19 r146=[r141+r158]                  :cortex_a8_load_store_1
;;	 10-->    28 [r141+r158]=r150                  :cortex_a8_load_store_1
;;	 10-->    31 pc={(gtu(cc,0x0))?L51:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 2
;;   new tail = 31

;;   ======================================================
;;   -- basic block 3 from 34 to 50 -- before reload
;;   ======================================================

;;	  0-->    36 r168=r147*0x8+r165                :cortex_a8_default
;;	  0-->    34 r166=`irq_stat'                   :cortex_a8_load_store_1
;;	  2-->    39 r171=r168*0x4+r166                :cortex_a8_default
;;	  4-->    48 r180=[r171+0x8]                   :cortex_a8_load_store_1
;;	  6-->    49 r181=r180+0x1                     :cortex_a8_default
;;	  6-->    50 [r171+0x8]=r181                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 34
;;   new tail = 50

;;   ======================================================
;;   -- basic block 4 from 53 to 54 -- before reload
;;   ======================================================

;;	  0-->    53 r182=r149-0x2                     :cortex_a8_default
;;	  1-->    54 {pc={(leu(r182,0x5))?[r182*0x4+L55:cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 53
;;   new tail = 54

;;   ======================================================
;;   -- basic block 5 from 60 to 184 -- before reload
;;   ======================================================

;;	  0-->    60 call [`ipi_timer']                :cortex_a8_issue_branch
;;	  0-->   184 pc=L163                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 60
;;   new tail = 184

;;   ======================================================
;;   -- basic block 6 from 65 to 186 -- before reload
;;   ======================================================

;;	  0-->    65 call [`scheduler_ipi']            :cortex_a8_issue_branch
;;	  0-->   186 pc=L163                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 65
;;   new tail = 186

;;   ======================================================
;;   -- basic block 7 from 70 to 188 -- before reload
;;   ======================================================

;;	  0-->    70 call [`irq_enter']                :cortex_a8_issue_branch
;;	  1-->    71 call [`generic_smp_call_function_i:cortex_a8_issue_branch
;;	  2-->    72 call [`irq_exit']                 :cortex_a8_issue_branch
;;	  2-->   188 pc=L163                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 70
;;   new tail = 188

;;   ======================================================
;;   -- basic block 8 from 77 to 190 -- before reload
;;   ======================================================

;;	  0-->    77 call [`irq_enter']                :cortex_a8_issue_branch
;;	  1-->    78 call [`generic_smp_call_function_s:cortex_a8_issue_branch
;;	  2-->    79 call [`irq_exit']                 :cortex_a8_issue_branch
;;	  2-->   190 pc=L163                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 77
;;   new tail = 190

;;   ======================================================
;;   -- basic block 9 from 84 to 88 -- before reload
;;   ======================================================

;;	  0-->    84 call [`irq_enter']                :cortex_a8_issue_branch
;;	  0-->    85 r183=`system_state'               :cortex_a8_load_store_1
;;	  3-->    86 r184=[r183]                       :cortex_a8_load_store_1
;;	  5-->    87 cc=cmp(r184,0x1)                  :cortex_a8_default
;;	  7-->    88 pc={(gtu(cc,0x0))?L103:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 84
;;   new tail = 88

;;   ======================================================
;;   -- basic block 10 from 92 to 102 -- before reload
;;   ======================================================

;;	  0-->    92 r0=const(`*.LANCHOR0'+0x4)        :cortex_a8_load_store_1
;;	  1-->    93 call [`_raw_spin_lock']           :cortex_a8_issue_branch
;;	  1-->    96 r1=r147                           :cortex_a8_default
;;	  2-->    95 r0=`*.LC1'                        :cortex_a8_load_store_1
;;	  3-->    97 r0=call [`printk']                :cortex_a8_issue_branch
;;	  4-->    98 call [`dump_stack']               :cortex_a8_issue_branch
;;	  4-->   101 r0=const(`*.LANCHOR0'+0x4)        :cortex_a8_load_store_1
;;	  5-->   102 call [`_raw_spin_unlock']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 92
;;   new tail = 102

;;   ======================================================
;;   -- basic block 11 from 105 to 109 -- before reload
;;   ======================================================

;;	  0-->   105 r0=r147                           :cortex_a8_default
;;	  0-->   106 r1=0x0                            :cortex_a8_default
;;	  1-->   107 call [`set_cpu_online']           :cortex_a8_issue_branch
;;	  2-->   108 {asm_operands;clobber cc;clobber [:nothing
;;	  3-->   109 {asm_operands;clobber cc;clobber [:nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 105
;;   new tail = 109

;;   ======================================================
;;   -- basic block 12 from 111 to 192 -- before reload
;;   ======================================================

;;	  0-->   111 {asm_operands;clobber [scratch];} :nothing
;;	  1-->   192 pc=L112                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 111
;;   new tail = 192

;;   ======================================================
;;   -- basic block 13 from 119 to 132 -- before reload
;;   ======================================================

;;	  0-->   121 r194=r147+0x1f                    :cortex_a8_default
;;	  0-->   119 r191=const(`*.LANCHOR0'+0xc)      :cortex_a8_load_store_1
;;	  1-->   123 {r193={(r147>=0x0)?r147:r194};clob:cortex_a8_default
;;	  1-->   128 r197=r147&0x1f                    :cortex_a8_default
;;	  3-->   124 r195=r193>>0x5                    :cortex_a8_default
;;	  5-->   127 r138=[r195*0x4+r191]              :cortex_a8_load_store_1
;;	  8-->   129 r198=r138 0>>r197                 :cortex_a8_default
;;	  9-->   131 cc=cmp(zxt(r198,0x1,0x0),0x0)     :cortex_a8_default
;;	 11-->   132 pc={(cc==0x0)?L163:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 119
;;   new tail = 132

;;   ======================================================
;;   -- basic block 14 from 136 to 194 -- before reload
;;   ======================================================

;;	  0-->   136 r0=r191+0x4                       :cortex_a8_default
;;	  1-->   137 call [`_raw_spin_lock']           :cortex_a8_issue_branch
;;	  1-->   140 r1=r147                           :cortex_a8_default
;;	  2-->   139 r0=`*.LC2'                        :cortex_a8_load_store_1
;;	  3-->   141 r0=call [`printk']                :cortex_a8_issue_branch
;;	  3-->   142 r0=r150                           :cortex_a8_default
;;	  4-->   143 call [`show_regs']                :cortex_a8_issue_branch
;;	  4-->   146 r0=r191+0x4                       :cortex_a8_default
;;	  5-->   147 call [`_raw_spin_unlock']         :cortex_a8_issue_branch
;;	  5-->   151 r0=r147                           :cortex_a8_default
;;	  6-->   152 r1=r191                           :cortex_a8_default
;;	  7-->   153 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  7-->   194 pc=L163                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 7
;;   new head = 136
;;   new tail = 194

;;   ======================================================
;;   -- basic block 15 from 159 to 162 -- before reload
;;   ======================================================

;;	  0-->   160 r1=r147                           :cortex_a8_default
;;	  0-->   161 r2=r149                           :cortex_a8_default
;;	  1-->   159 r0=`*.LC3'                        :cortex_a8_load_store_1
;;	  2-->   162 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 159
;;   new tail = 162

;;   ======================================================
;;   -- basic block 16 from 167 to 175 -- before reload
;;   ======================================================

;;	  0-->   196 r210=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->   170 r209=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  1-->   197 r210=r210&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->   167 r134=`__irq_regs'                 :cortex_a8_load_store_1
;;	  2-->   168 r134=asm_operands                 :nothing
;;	  3-->   173 r212=[r210+0x14]                  :cortex_a8_load_store_1
;;	  6-->   174 r213=[r212*0x4+r209]              :cortex_a8_load_store_1
;;	  9-->   175 [r134+r213]=r146                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 9
;;   new head = 167
;;   new tail = 175


;; Procedure interblock/speculative motions == 0/0 




do_IPI

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,11u} r1={26d,6u} r2={22d,1u} r3={21d} r11={1d,16u} r12={21d} r13={1d,38u} r14={21d,1u} r15={20d} r16={20d} r17={20d} r18={20d} r19={20d} r20={20d} r21={20d} r22={20d} r23={20d} r24={27d,3u} r25={1d,16u} r26={1d,15u} r27={20d} r28={20d} r29={20d} r30={20d} r31={20d} r32={20d} r33={20d} r34={20d} r35={20d} r36={20d} r37={20d} r38={20d} r39={20d} r40={20d} r41={20d} r42={20d} r43={20d} r44={20d} r45={20d} r46={20d} r47={20d} r48={20d} r49={20d} r50={20d} r51={20d} r52={20d} r53={20d} r54={20d} r55={20d} r56={20d} r57={20d} r58={20d} r59={20d} r60={20d} r61={20d} r62={20d} r63={20d} r64={20d} r65={20d} r66={20d} r67={20d} r68={20d} r69={20d} r70={20d} r71={20d} r72={20d} r73={20d} r74={20d} r75={20d} r76={20d} r77={20d} r78={20d} r79={20d} r80={20d} r81={20d} r82={20d} r83={20d} r84={20d} r85={20d} r86={20d} r87={20d} r88={20d} r89={20d} r90={20d} r91={20d} r92={20d} r93={20d} r94={20d} r95={20d} r96={20d} r97={20d} r98={20d} r99={20d} r100={20d} r101={20d} r102={20d} r103={20d} r104={20d} r105={20d} r106={20d} r107={20d} r108={20d} r109={20d} r110={20d} r111={20d} r112={20d} r113={20d} r114={20d} r115={20d} r116={20d} r117={20d} r118={20d} r119={20d} r120={20d} r121={20d} r122={20d} r123={20d} r124={20d} r125={20d} r126={20d} r127={20d} r134={2d,2u} r138={1d,1u} r141={2d,3u} r146={1d,1u} r147={1d,11u,2d} r149={1d,3u} r150={1d,2u} r151={2d,2u} r154={1d,1u} r158={1d,2u} r165={1d,2u} r166={1d,1u} r168={1d,1u} r171={1d,2u} r180={1d,1u} r181={1d,1u} r182={1d,2u} r183={1d,1u} r184={1d,1u} r191={1d,4u} r193={1d,1u} r194={1d,1u} r195={1d,1u,1d} r197={1d,1u} r198={1d,1u} r209={1d,1u} r210={2d,2u} r212={1d,1u,1d} r213={1d,1u} 
;;    total ref usage 2571{2406d,161u,4e} in 88{68 regular + 20 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 146 147 149 150 151 154 158 165
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 141 146 147 149 150 151 154 158 165
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 198 2 NOTE_INSN_DELETED)

(insn 198 8 14 2 arch/arm/kernel/smp.c:627 (set (reg:SI 151)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 198 199 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/f:SI 154)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 199 14 2 2 arch/arm/kernel/smp.c:627 (set (reg:SI 151)
        (and:SI (reg:SI 151)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 199 29 2 arch/arm/kernel/smp.c:626 (set (reg/v:SI 149 [ ipinr ])
        (reg:SI 0 r0 [ ipinr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ ipinr ])
        (nil)))

(insn 29 2 3 2 arch/arm/kernel/smp.c:630 (set (reg:SI 165)
        (plus:SI (reg/v:SI 149 [ ipinr ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(insn 3 29 10 2 arch/arm/kernel/smp.c:626 (set (reg/v/f:SI 150 [ regs ])
        (reg:SI 1 r1 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ regs ])
        (nil)))

(insn 10 3 30 2 arch/arm/kernel/smp.c:627 (set (reg/v:SI 147 [ cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 151)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 30 10 11 2 arch/arm/kernel/smp.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (nil))

(insn 11 30 12 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 141 [ __ptr ])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 18 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 141 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 141 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579566)) -1 (nil))

(insn 18 12 19 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 158)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 147 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 154)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154)
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 147 [ cpu ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 19 18 28 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v/f:SI 146 [ old_regs ])
        (mem/f:SI (plus:SI (reg/v:SI 141 [ __ptr ])
                (reg:SI 158)) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 19 31 2 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 141 [ __ptr ])
                (reg:SI 158)) [0 S4 A32])
        (reg/v/f:SI 150 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/v:SI 141 [ __ptr ])
            (nil))))

(jump_insn 31 28 32 2 arch/arm/kernel/smp.c:630 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 165
;; lr  def 	 166 168 171 180 181
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150 165
;; live  gen 	 166 168 171 180 181
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 32 31 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 35 32 38 3 NOTE_INSN_DELETED)

(note 38 35 36 3 NOTE_INSN_DELETED)

(insn 36 38 34 3 arch/arm/kernel/smp.c:631 (set (reg:SI 168)
        (plus:SI (mult:SI (reg/v:SI 147 [ cpu ])
                (const_int 8 [0x8]))
            (reg:SI 165))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 34 36 39 3 arch/arm/kernel/smp.c:631 (set (reg/f:SI 166)
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (nil))

(insn 39 34 48 3 arch/arm/kernel/smp.c:631 (set (reg:SI 171)
        (plus:SI (mult:SI (reg:SI 168)
                (const_int 4 [0x4]))
            (reg/f:SI 166))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg/f:SI 166)
            (nil))))

(insn 48 39 49 3 arch/arm/kernel/smp.c:631 (set (reg:SI 180)
        (mem/s/j:SI (plus:SI (reg:SI 171)
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 3 arch/arm/kernel/smp.c:631 (set (reg:SI 181)
        (plus:SI (reg:SI 180)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 180)
        (nil)))

(insn 50 49 51 3 arch/arm/kernel/smp.c:631 (set (mem/s/j:SI (plus:SI (reg:SI 171)
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])
        (reg:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_DEAD (reg:SI 171)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; live  gen 	 182
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 51 50 52 4 48 "" [1 uses])

(note 52 51 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 4 arch/arm/kernel/smp.c:633 (set (reg:SI 182)
        (plus:SI (reg/v:SI 149 [ ipinr ])
            (const_int -2 [0xfffffffffffffffe]))) 4 {*arm_addsi3} (nil))

(jump_insn 54 53 55 4 arch/arm/kernel/smp.c:633 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 182)
                        (const_int 5 [0x5]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 182)
                                (const_int 4 [0x4]))
                            (label_ref 55)) [0 S4 A32])
                    (label_ref 156)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 55))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 156 (nil)))))
;; End of basic block 4 -> ( 15 5 6 7 8 9 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 149 150


;; Succ edge  15 [14.3%] 
;; Succ edge  5 [14.3%] 
;; Succ edge  6 [14.3%] 
;; Succ edge  7 [14.3%] 
;; Succ edge  8 [14.3%] 
;; Succ edge  9 [14.3%] 
;; Succ edge  13 [14.3%] 

;; Insn is not within a basic block
(code_label 55 54 56 56 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 56 55 57 arch/arm/kernel/smp.c:633 (addr_vec:SI [
            (label_ref:SI 58)
            (label_ref:SI 63)
            (label_ref:SI 68)
            (label_ref:SI 75)
            (label_ref:SI 82)
            (label_ref:SI 115)
        ]) -1 (nil))

(barrier 57 56 58)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 58 57 59 5 50 "" [1 uses])

(note 59 58 60 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 60 59 184 5 arch/arm/kernel/smp.c:635 (parallel [
            (call (mem:SI (symbol_ref:SI ("ipi_timer") [flags 0x3] <function_decl 0x1153a600 ipi_timer>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(jump_insn 184 60 185 5 arch/arm/kernel/smp.c:636 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  16 [100.0%] 

(barrier 185 184 63)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 63 185 64 6 51 "" [1 uses])

(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 65 64 186 6 arch/arm/kernel/smp.c:639 (parallel [
            (call (mem:SI (symbol_ref:SI ("scheduler_ipi") [flags 0x41] <function_decl 0x10fde900 scheduler_ipi>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 186 65 187 6 arch/arm/kernel/smp.c:640 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  16 [100.0%] 

(barrier 187 186 68)

;; Start of basic block ( 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 68 187 69 7 52 "" [1 uses])

(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 70 69 71 7 arch/arm/kernel/smp.c:643 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 71 70 72 7 arch/arm/kernel/smp.c:644 (parallel [
            (call (mem:SI (symbol_ref:SI ("generic_smp_call_function_interrupt") [flags 0x41] <function_decl 0x10c9fd80 generic_smp_call_function_interrupt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 72 71 188 7 arch/arm/kernel/smp.c:645 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_exit") [flags 0x41] <function_decl 0x11017000 irq_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 188 72 189 7 arch/arm/kernel/smp.c:646 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  16 [100.0%] 

(barrier 189 188 75)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 75 189 76 8 53 "" [1 uses])

(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(call_insn 77 76 78 8 arch/arm/kernel/smp.c:649 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 78 77 79 8 arch/arm/kernel/smp.c:650 (parallel [
            (call (mem:SI (symbol_ref:SI ("generic_smp_call_function_single_interrupt") [flags 0x41] <function_decl 0x10c9fd00 generic_smp_call_function_single_interrupt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn 79 78 190 8 arch/arm/kernel/smp.c:651 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_exit") [flags 0x41] <function_decl 0x11017000 irq_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 190 79 191 8 arch/arm/kernel/smp.c:652 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  16 [100.0%] 

(barrier 191 190 82)

;; Start of basic block ( 4) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 183 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 24 [cc] 183 184
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 82 191 83 9 54 "" [1 uses])

(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(call_insn 84 83 85 9 arch/arm/kernel/smp.c:655 (parallel [
            (call (mem:SI (symbol_ref:SI ("irq_enter") [flags 0x41] <function_decl 0x11007f80 irq_enter>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 85 84 86 9 arch/arm/kernel/smp.c:553 (set (reg/f:SI 183)
        (symbol_ref:SI ("system_state") [flags 0xc0] <var_decl 0x10a76d20 system_state>)) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 9 arch/arm/kernel/smp.c:553 (set (reg:SI 184 [ system_state ])
        (mem/c/i:SI (reg/f:SI 183) [0 system_state+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 183)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("system_state") [flags 0xc0] <var_decl 0x10a76d20 system_state>) [0 system_state+0 S4 A32])
            (nil))))

(insn 87 86 88 9 arch/arm/kernel/smp.c:553 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 184 [ system_state ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 184 [ system_state ])
        (nil)))

(jump_insn 88 87 89 9 arch/arm/kernel/smp.c:553 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 89 88 92 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 92 89 93 10 include/linux/spinlock.h:285 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 93 92 96 10 include/linux/spinlock.h:285 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock") [flags 0x41] <function_decl 0x10ad9a80 _raw_spin_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 96 93 95 10 arch/arm/kernel/smp.c:556 (set (reg:SI 1 r1)
        (reg/v:SI 147 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 95 96 97 10 arch/arm/kernel/smp.c:556 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11655de0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11655de0>)
        (nil)))

(call_insn 97 95 98 10 arch/arm/kernel/smp.c:556 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 98 97 101 10 arch/arm/kernel/smp.c:557 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 101 98 102 10 include/linux/spinlock.h:325 (set (reg:SI 0 r0)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 102 101 103 10 include/linux/spinlock.h:325 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock") [flags 0x41] <function_decl 0x10ad9f00 _raw_spin_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 103 102 104 11 58 "" [1 uses])

(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 11 arch/arm/kernel/smp.c:561 (set (reg:SI 0 r0)
        (reg/v:SI 147 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ cpu ])
        (nil)))

(insn 106 105 107 11 arch/arm/kernel/smp.c:561 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 107 106 108 11 arch/arm/kernel/smp.c:561 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 108 107 109 11 arch/arm/kernel/smp.c:563 (parallel [
            (asm_operands/v ("cpsid f	@ __clf") ("") 0 []
                 [] 8561633)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 109 108 112 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105528)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (dfs_back)
(code_label 112 109 110 12 59 "" [1 uses])

(note 110 112 111 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 192 12 arch/arm/kernel/smp.c:567 discrim 1 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8579562)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn 192 111 193 12 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  12 [100.0%]  (dfs_back)

(barrier 193 192 115)

;; Start of basic block ( 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 138 191 193 194 195 197 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150
;; live  gen 	 24 [cc] 138 191 193 194 195 197 198
;; live  kill	 24 [cc]

;; Pred edge  4 [14.3%] 
(code_label 115 193 116 13 55 "" [1 uses])

(note 116 115 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 122 116 130 13 NOTE_INSN_DELETED)

(note 130 122 121 13 NOTE_INSN_DELETED)

(insn 121 130 119 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 194)
        (plus:SI (reg/v:SI 147 [ cpu ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 119 121 123 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 191)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 12 [0xc])))
        (nil)))

(insn 123 119 128 13 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 193 [ cpu.442 ])
                (if_then_else:SI (ge (reg/v:SI 147 [ cpu ])
                        (const_int 0 [0x0]))
                    (reg/v:SI 147 [ cpu ])
                    (reg:SI 194)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 128 123 124 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 197)
        (and:SI (reg/v:SI 147 [ cpu ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 124 128 127 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 195)
        (ashiftrt:SI (reg:SI 193 [ cpu.442 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 193 [ cpu.442 ])
        (expr_list:REG_EQUAL (div:SI (reg/v:SI 147 [ cpu ])
                (const_int 32 [0x20]))
            (nil))))

(insn 127 124 129 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.27147 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 195)
                    (const_int 4 [0x4]))
                (reg/f:SI 191)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_EQUAL (mem/v:SI (plus:SI (mult:SI (reg:SI 195)
                        (const_int 4 [0x4]))
                    (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const_int 12 [0xc])))) [0 S4 A32])
            (nil))))

(insn 129 127 131 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 198)
        (lshiftrt:SI (reg:SI 138 [ D.27147 ])
            (reg:SI 197))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg:SI 138 [ D.27147 ])
            (nil))))

(insn 131 129 132 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 198)
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(jump_insn 132 131 133 13 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 13 -> ( 14 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150 191
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146 147 150 191


;; Succ edge  14 [0.0%]  (fallthru)
;; Succ edge  16 [100.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 150 191
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 150 191
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 150 191
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  13 [0.0%]  (fallthru)
(note 133 132 136 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 136 133 137 14 arch/arm/kernel/smp.c:614 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 191)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 137 136 140 14 arch/arm/kernel/smp.c:614 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_lock") [flags 0x41] <function_decl 0x10ad9a80 _raw_spin_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 140 137 139 14 arch/arm/kernel/smp.c:615 (set (reg:SI 1 r1)
        (reg/v:SI 147 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 139 140 141 14 arch/arm/kernel/smp.c:615 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x115c9f40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x115c9f40>)
        (nil)))

(call_insn 141 139 142 14 arch/arm/kernel/smp.c:615 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 142 141 143 14 arch/arm/kernel/smp.c:616 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 150 [ regs ])
        (nil)))

(call_insn 143 142 146 14 arch/arm/kernel/smp.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_regs") [flags 0x41] <function_decl 0x10f44a80 show_regs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 146 143 147 14 arch/arm/kernel/smp.c:617 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 191)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 147 146 151 14 arch/arm/kernel/smp.c:617 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_spin_unlock") [flags 0x41] <function_decl 0x10ad9f00 _raw_spin_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 151 147 152 14 include/linux/cpumask.h:848 (set (reg:SI 0 r0)
        (reg/v:SI 147 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ cpu ])
        (nil)))

(insn 152 151 153 14 include/linux/cpumask.h:848 (set (reg:SI 1 r1)
        (reg/f:SI 191)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 191)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc])))
            (nil))))

(call_insn 153 152 194 14 include/linux/cpumask.h:848 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 194 153 195 14 (set (pc)
        (label_ref 163)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  16 [100.0%] 

(barrier 195 194 156)

;; Start of basic block ( 4) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 149
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 149
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%] 
(code_label 156 195 157 15 49 "" [1 uses])

(note 157 156 160 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 160 157 161 15 arch/arm/kernel/smp.c:665 (set (reg:SI 1 r1)
        (reg/v:SI 147 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ cpu ])
        (nil)))

(insn 161 160 159 15 arch/arm/kernel/smp.c:665 (set (reg:SI 2 r2)
        (reg/v:SI 149 [ ipinr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ ipinr ])
        (nil)))

(insn 159 161 162 15 arch/arm/kernel/smp.c:665 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11652b00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x11652b00>)
        (nil)))

(call_insn 162 159 163 15 arch/arm/kernel/smp.c:665 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 8 13 15 7 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 134 209 210 212 213
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 146
;; live  gen 	 134 209 210 212 213
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  14 [100.0%] 
(code_label 163 162 164 16 57 "" [6 uses])

(note 164 163 171 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 171 164 196 16 NOTE_INSN_DELETED)

(insn 196 171 170 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 210)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 170 196 197 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/f:SI 209)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 197 170 167 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 210)
        (and:SI (reg:SI 210)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 197 168 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 134 [ __ptr ])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (nil))

(insn 168 167 173 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 134 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579572)) -1 (nil))

(insn 173 168 174 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 212 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 210)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 174 173 175 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 213)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 212 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 209)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 212 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 209)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 212 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 175 174 200 16 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 134 [ __ptr ])
                (reg:SI 213)) [0 S4 A32])
        (reg/v/f:SI 146 [ old_regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_DEAD (reg/v/f:SI 146 [ old_regs ])
            (expr_list:REG_DEAD (reg/v:SI 134 [ __ptr ])
                (nil)))))
;; End of basic block 16 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 200 175 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_send_all_cpu_backtrace (smp_send_all_cpu_backtrace)[0:1429]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)


smp_send_all_cpu_backtrace

Dataflow summary:
def_info->table_size = 978, use_info->table_size = 77
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,11u} r1={15d,7u} r2={9d} r3={9d} r11={1d,7u} r12={9d} r13={1d,16u} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={11d,3u} r25={1d,7u} r26={1d,6u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r135={2d,2u,1d} r136={1d,2u} r138={1d,1u} r140={2d,2u} r142={1d,4u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r153={1d,1u} r156={1d,1u} r158={1d,1u} r160={1d,1u} 
;;    total ref usage 1054{977d,76u,1e} in 41{33 regular + 8 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d16(0){ }d31(1){ }d40(2){ }d49(3){ }d50(11){ }d59(12){ }d60(13){ }d69(14){ }d153(25){ }d154(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 7 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 138 140 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136 138 140 142
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 144 145 146 153 158 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142
;; live  gen 	 0 [r0] 1 [r1] 135 144 145 146 153 158 160
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160

( 5 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  gen 	 24 [cc] 156
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160

( 4 )->[5]->( 4 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  gen 	 0 [r0] 24 [cc] 135
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160

( 4 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 6 2 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u73(11){ }u74(13){ }u75(14){ }u76(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 13 to worklist
  Adding insn 43 to worklist
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 22 to worklist
  Adding insn 50 to worklist
  Adding insn 58 to worklist
  Adding insn 53 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
Finished finding needed instructions:
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 62 to worklist
  Adding insn 61 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
  Adding insn 57 to worklist
  Adding insn 54 to worklist
  Adding insn 77 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
  Adding insn 49 to worklist
  Adding insn 47 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
  Adding insn 56 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 79 to worklist
  Adding insn 35 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 26 to worklist
  Adding insn 80 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 142
  Adding insn 15 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 16 (    2)
;;   ======================================================
;;   -- basic block 4 from 47 to 50 -- before reload
;;   ======================================================

;;	  0-->    47 r156=[r158+0xc]                   :cortex_a8_load_store_1
changing bb of uid 54
  from 5 to 4
;;	  0-->    54 r135=r135+0x1                     :cortex_a8_default
changing bb of uid 77
  from 5 to 4
;;	  1-->    77 r0=0x3e8                          :cortex_a8_default
;;	  2-->    49 cc=cmp(zxt(r156,0x2,0x0),0x0)     :cortex_a8_default
;;	  4-->    50 pc={(cc==0x0)?L59:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 47
;;   new tail = 50

;;   ======================================================
;;   -- basic block 5 from 53 to 58 -- before reload
;;   ======================================================

;;	  0-->    53 call [`__udelay']                 :cortex_a8_issue_branch
;;	  0-->    57 cc=cmp(r135,r160)                 :cortex_a8_default
;;	  2-->    58 pc={(cc!=0x0)?L55:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 53
;;   new tail = 58

;;   ======================================================
;;   -- basic block 2 from 82 to 16 -- before reload
;;   ======================================================

;;	  0-->    82 r140=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->     9 r142=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  1-->    83 r140=r140&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->    11 r0=0x0                            :cortex_a8_default
;;	  2-->    12 r1=r142+0x18                      :cortex_a8_default
;;	  3-->     8 r136=[r140+0x14]                  :cortex_a8_load_store_1
;;	  3-->    13 r0=call [`_test_and_set_bit']     :cortex_a8_issue_branch
;;	 35-->    15 {cc=cmp(r0,0x0);r138=r0;}         :cortex_a8_default
;;	 37-->    16 pc={(cc!=0x0)?L70:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 37
;;   new head = 82
;;   new tail = 16

;;   ======================================================
;;   -- basic block 3 from 19 to 56 -- before reload
;;   ======================================================

;;	  0-->    19 r145=`cpu_online_mask'            :cortex_a8_load_store_1
;;	  0-->    80 r1=r142                           :cortex_a8_default
;;	  1-->    26 r0=r136                           :cortex_a8_default
;;	  1-->    44 r135=r138                         :cortex_a8_default
;;	  2-->    46 r158=r142                         :cortex_a8_default
;;	  2-->    56 r160=0x2710                       :cortex_a8_default
;;	  3-->    20 r144=[r145]                       :cortex_a8_load_store_1
;;	  6-->    21 r146=[r144]                       :cortex_a8_load_store_1
;;	  9-->    22 [pre r1+=0xc]=r146                :cortex_a8_load_store_1
;;	 10-->    28 call [`_clear_bit']               :cortex_a8_issue_branch
;;	 10-->    31 r1=r136                           :cortex_a8_default
;;	 11-->    30 r0=`*.LC4'                        :cortex_a8_load_store_1
;;	 12-->    32 r0=call [`printk']                :cortex_a8_issue_branch
;;	 13-->    33 call [`dump_stack']               :cortex_a8_issue_branch
;;	 13-->    35 r0=`*.LC5'                        :cortex_a8_load_store_1
;;	 14-->    36 r0=call [`printk']                :cortex_a8_issue_branch
;;	 14-->    79 r0=r142                           :cortex_a8_default
;;	 15-->    42 r1=0x7                            :cortex_a8_default
;;	 16-->    40 r153=[post r0+=0xc]               :cortex_a8_load_store_1
;;	 17-->    43 call [r153]                       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 17
;;   new head = 19
;;   new tail = 56

;;   ======================================================
;;   -- basic block 6 from 61 to 64 -- before reload
;;   ======================================================

;;	  0-->    61 r0=0x0                            :cortex_a8_default
;;	  0-->    62 r1=const(`*.LANCHOR0'+0x18)       :cortex_a8_load_store_1
;;	  1-->    63 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  2-->    64 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 2
;;   new head = 61
;;   new tail = 64


;; Procedure interblock/speculative motions == 2/2 




smp_send_all_cpu_backtrace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,11u} r1={15d,7u} r2={9d} r3={9d} r11={1d,7u} r12={9d} r13={1d,16u} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={11d,3u} r25={1d,7u} r26={1d,6u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r135={2d,2u,1d} r136={1d,2u} r138={1d,1u} r140={2d,2u} r142={1d,4u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r153={1d,1u} r156={1d,1u} r158={1d,1u} r160={1d,1u} 
;;    total ref usage 1054{977d,76u,1e} in 41{33 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 138 140 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136 138 140 142
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 14 2 NOTE_INSN_DELETED)

(note 14 6 82 2 NOTE_INSN_DELETED)

(insn 82 14 9 2 arch/arm/kernel/smp.c:578 (set (reg:SI 140)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 82 83 2 arch/arm/kernel/smp.c:581 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 83 9 11 2 arch/arm/kernel/smp.c:578 (set (reg:SI 140)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 83 12 2 arch/arm/kernel/smp.c:581 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 8 2 arch/arm/kernel/smp.c:581 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 142)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 24 [0x18])))
        (nil)))

(insn 8 12 13 2 arch/arm/kernel/smp.c:578 (set (reg/v:SI 136 [ this_cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 140)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(call_insn 13 8 15 2 arch/arm/kernel/smp.c:581 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_test_and_set_bit") [flags 0x41] <function_decl 0x109c0680 _test_and_set_bit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 13 16 2 arch/arm/kernel/smp.c:581 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 138 [ D.26315 ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 16 15 17 2 arch/arm/kernel/smp.c:581 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142


;; Succ edge  7 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 144 145 146 153 158 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 142
;; live  gen 	 0 [r0] 1 [r1] 135 144 145 146 153 158 160
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 17 16 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 17 80 3 include/linux/bitmap.h:183 (set (reg/f:SI 145)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 80 19 26 3 include/linux/bitmap.h:183 (set (reg:SI 1 r1)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 26 80 44 3 include/linux/cpumask.h:848 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ this_cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 44 26 46 3 arch/arm/kernel/smp.c:598 (set (reg/v:SI 135 [ i ])
        (reg:SI 138 [ D.26315 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.26315 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 46 44 56 3 include/linux/bitmap.h:263 (set (reg/f:SI 158)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(insn 56 46 20 3 arch/arm/kernel/smp.c:598 discrim 1 (set (reg:SI 160)
        (const_int 10000 [0x2710])) 167 {*arm_movsi_insn} (nil))

(insn 20 56 21 3 include/linux/bitmap.h:183 (set (reg/f:SI 144 [ cpu_online_mask ])
        (mem/u/f/c/i:SI (reg/f:SI 145) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
            (nil))))

(insn 21 20 22 3 include/linux/bitmap.h:183 (set (reg:SI 146 [ <variable>.bits ])
        (mem/s/j:SI (reg/f:SI 144 [ cpu_online_mask ]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144 [ cpu_online_mask ])
        (nil)))

(insn 22 21 28 3 include/linux/bitmap.h:183 (set (mem/s/j:SI (pre_modify:SI (reg:SI 1 r1)
                (plus:SI (reg:SI 1 r1)
                    (const_int 12 [0xc]))) [0 backtrace_mask.bits+0 S4 A32])
        (reg:SI 146 [ <variable>.bits ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ <variable>.bits ])
        (expr_list:REG_INC (reg:SI 1 r1)
            (nil))))

(call_insn 28 22 31 3 include/linux/cpumask.h:848 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 28 30 3 arch/arm/kernel/smp.c:591 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ this_cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ this_cpu ])
        (nil)))

(insn 30 31 32 3 arch/arm/kernel/smp.c:591 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x115d6900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x115d6900>)
        (nil)))

(call_insn 32 30 33 3 arch/arm/kernel/smp.c:591 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 33 32 35 3 arch/arm/kernel/smp.c:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 35 33 36 3 arch/arm/kernel/smp.c:594 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11667c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x11667c00>)
        (nil)))

(call_insn 36 35 79 3 arch/arm/kernel/smp.c:594 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 79 36 42 3 arch/arm/kernel/smp.c:595 (set (reg:SI 0 r0)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 42 79 40 3 arch/arm/kernel/smp.c:595 (set (reg:SI 1 r1)
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 40 42 43 3 arch/arm/kernel/smp.c:595 (set (reg/f:SI 153 [ smp_cross_call ])
        (mem/f/c/i:SI (post_modify:SI (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (const_int 12 [0xc]))) [0 smp_cross_call+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 0 r0)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 smp_cross_call+0 S4 A32])
            (nil))))

(call_insn 43 40 55 3 arch/arm/kernel/smp.c:595 (parallel [
            (call (mem:SI (reg/f:SI 153 [ smp_cross_call ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 153 [ smp_cross_call ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 5 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  gen 	 24 [cc] 156
;; live  kill	

;; Pred edge  5 [98.9%]  (dfs_back)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 55 43 45 4 67 "" [1 uses])

(note 45 55 48 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 48 45 47 4 NOTE_INSN_DELETED)

(insn 47 48 54 4 include/linux/bitmap.h:263 (set (reg:SI 156 [ backtrace_mask.bits ])
        (mem/s/j:SI (plus:SI (reg/f:SI 158)
                (const_int 12 [0xc])) [0 backtrace_mask.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 backtrace_mask.bits+0 S4 A32])
        (nil)))

(insn 54 47 77 4 arch/arm/kernel/smp.c:598 (set (reg/v:SI 135 [ i ])
        (plus:SI (reg/v:SI 135 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 77 54 49 4 arch/arm/kernel/smp.c:601 (set (reg:SI 0 r0)
        (const_int 1000 [0x3e8])) 167 {*arm_movsi_insn} (nil))

(insn 49 77 50 4 include/linux/bitmap.h:263 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 156 [ backtrace_mask.bits ])
                (const_int 2 [0x2])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 156 [ backtrace_mask.bits ])
        (nil)))

(jump_insn 50 49 51 4 include/linux/bitmap.h:263 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160


;; Succ edge  6 [4.5%]  (loop_exit)
;; Succ edge  5 [95.5%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  gen 	 0 [r0] 24 [cc] 135
;; live  kill	 14 [lr]

;; Pred edge  4 [95.5%]  (fallthru)
(note 51 50 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(call_insn 53 51 57 5 arch/arm/kernel/smp.c:601 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10e39780 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 57 53 58 5 arch/arm/kernel/smp.c:598 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ i ])
            (reg:SI 160))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 135 [ i ])
            (const_int 10000 [0x2710]))
        (nil)))

(jump_insn 58 57 59 5 arch/arm/kernel/smp.c:598 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9894 [0x26a6])
            (nil))))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158 160


;; Succ edge  4 [98.9%]  (dfs_back)
;; Succ edge  6 [1.1%]  (fallthru,loop_exit)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [4.5%]  (loop_exit)
;; Pred edge  5 [1.1%]  (fallthru,loop_exit)
(code_label 59 58 60 6 66 "" [1 uses])

(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 arch/arm/kernel/smp.c:604 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 6 arch/arm/kernel/smp.c:604 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 24 [0x18])))) 167 {*arm_movsi_insn} (nil))

(call_insn 63 62 64 6 arch/arm/kernel/smp.c:604 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 64 63 70 6 arch/arm/kernel/smp.c:605 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8567009)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 70 64 73 7 68 "" [1 uses])

(note 73 70 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 84 73 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function percpu_timer_setup (percpu_timer_setup)[0:1426] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


percpu_timer_setup

Dataflow summary:
def_info->table_size = 270, use_info->table_size = 60
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,7u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r135={2d,2u} r136={1d,9u} r137={1d,3u,1d} r139={2d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} 
;;    total ref usage 320{266d,53u,1e} in 33{31 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d7(1){ }d10(2){ }d13(3){ }d14(11){ }d17(12){ }d18(13){ }d20(14){ }d42(25){ }d43(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 139 142 143 144 145 147 148 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 135 136 137 139 141 142 143 144 145 147 148 151 152
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154 155 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 153 154 155 156 157
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u56(11){ }u57(13){ }u58(14){ }u59(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
Finished finding needed instructions:
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 54 to 30 -- before reload
;;   ======================================================

;;	  0-->    54 r139=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    11 r142=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  1-->    55 r139=r139&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->    17 r147=`cpu_bit_bitmap'             :cortex_a8_load_store_1
;;	  2-->    24 r152=`smp_timer_broadcast'        :cortex_a8_load_store_1
;;	  3-->     8 r137=[r139+0x14]                  :cortex_a8_load_store_1
;;	  4-->     9 r135=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  5-->    14 r144=r137&0x1f                    :cortex_a8_default
;;	  6-->    12 r143=[r137*0x4+r142]              :cortex_a8_load_store_1
;;	  6-->    15 r145=r144+0x1                     :cortex_a8_default
;;	  7-->    10 r135=asm_operands                 :nothing
;;	  8-->    18 r133=r145*0x4+r147                :cortex_a8_default
;;	  8-->    13 r136=r135+r143                    :cortex_a8_default
;;	  9-->    19 r148=r137 0>>0x5                  :cortex_a8_default
;;	  9-->    26 r0=r136                           :cortex_a8_default
;;	 10-->    25 [r136+0x34]=r152                  :cortex_a8_load_store_1
;;	 11-->    22 r151=r133-r148*0x4                :cortex_a8_default
;;	 11-->    23 [r136+0x50]=r151                  :cortex_a8_load_store_1
;;	 12-->    27 r0=call [`local_timer_setup']     :cortex_a8_issue_branch
;;	 44-->    29 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 46-->    30 pc={(cc==0x0)?L50:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 46
;;   new head = 54
;;   new tail = 30

;;   ======================================================
;;   -- basic block 3 from 32 to 43 -- before reload
;;   ======================================================

;;	  0-->    32 r153=`*.LC6'                      :cortex_a8_load_store_1
;;	  0-->    42 r0=r136                           :cortex_a8_default
;;	  1-->    40 r157=`broadcast_timer_set_mode'   :cortex_a8_load_store_1
;;	  1-->    34 r154=0xb                          :cortex_a8_default
;;	  2-->    35 [r136+0x2c]=r154                  :cortex_a8_load_store_1
;;	  2-->    36 r155=0x190                        :cortex_a8_default
;;	  3-->    33 [r136+0x44]=r153                  :cortex_a8_load_store_1
;;	  3-->    38 r156=0x1                          :cortex_a8_default
;;	  4-->    37 [r136+0x48]=r155                  :cortex_a8_load_store_1
;;	  5-->    39 [r136+0x20]=r156                  :cortex_a8_load_store_1
;;	  6-->    41 [r136+0x38]=r157                  :cortex_a8_load_store_1
;;	  7-->    43 call [`clockevents_register_device:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 32
;;   new tail = 43


;; Procedure interblock/speculative motions == 0/0 




percpu_timer_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,7u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r135={2d,2u} r136={1d,9u} r137={1d,3u,1d} r139={2d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} 
;;    total ref usage 320{266d,53u,1e} in 33{31 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 139 142 143 144 145 147 148 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 135 136 137 139 142 143 144 145 147 148 151 152
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 16 2 NOTE_INSN_DELETED)

(note 16 6 20 2 NOTE_INSN_DELETED)

(note 20 16 21 2 NOTE_INSN_DELETED)

(note 21 20 28 2 NOTE_INSN_DELETED)

(note 28 21 54 2 NOTE_INSN_DELETED)

(insn 54 28 11 2 arch/arm/kernel/smp.c:521 (set (reg:SI 139)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 54 55 2 arch/arm/kernel/smp.c:522 (set (reg/f:SI 142)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 55 11 17 2 arch/arm/kernel/smp.c:521 (set (reg:SI 139)
        (and:SI (reg:SI 139)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 55 24 2 include/linux/cpumask.h:738 (set (reg/f:SI 147)
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c81a20 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (nil))

(insn 24 17 8 2 arch/arm/kernel/smp.c:525 (set (reg/f:SI 152)
        (symbol_ref:SI ("smp_timer_broadcast") [flags 0x3] <function_decl 0x1153a900 smp_timer_broadcast>)) 167 {*arm_movsi_insn} (nil))

(insn 8 24 9 2 arch/arm/kernel/smp.c:521 (set (reg/v:SI 137 [ cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 139)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 9 8 14 2 arch/arm/kernel/smp.c:522 (set (reg/v:SI 135 [ __ptr ])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 14 9 12 2 include/linux/cpumask.h:738 (set (reg:SI 144)
        (and:SI (reg/v:SI 137 [ cpu ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 14 15 2 arch/arm/kernel/smp.c:522 (set (reg:SI 143)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 142)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 137 [ cpu ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 15 12 10 2 include/linux/cpumask.h:738 (set (reg:SI 145)
        (plus:SI (reg:SI 144)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 10 15 18 2 arch/arm/kernel/smp.c:522 (set (reg/v:SI 135 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 135 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8556419)) -1 (nil))

(insn 18 10 13 2 include/linux/cpumask.h:738 (set (reg/v/f:SI 133 [ p ])
        (plus:SI (mult:SI (reg:SI 145)
                (const_int 4 [0x4]))
            (reg/f:SI 147))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_DEAD (reg:SI 145)
            (nil))))

(insn 13 18 19 2 arch/arm/kernel/smp.c:522 (set (reg/v/f:SI 136 [ evt ])
        (plus:SI (reg/v:SI 135 [ __ptr ])
            (reg:SI 143))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/v:SI 135 [ __ptr ])
            (nil))))

(insn 19 13 26 2 arch/arm/kernel/smp.c:524 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 137 [ cpu ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ cpu ])
        (nil)))

(insn 26 19 25 2 arch/arm/kernel/smp.c:527 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ evt ])) 167 {*arm_movsi_insn} (nil))

(insn 25 26 22 2 arch/arm/kernel/smp.c:525 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ evt ])
                (const_int 52 [0x34])) [0 <variable>.broadcast+0 S4 A32])
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (symbol_ref:SI ("smp_timer_broadcast") [flags 0x3] <function_decl 0x1153a900 smp_timer_broadcast>)
            (nil))))

(insn 22 25 23 2 arch/arm/kernel/smp.c:524 (set (reg:SI 151)
        (minus:SI (reg/v/f:SI 133 [ p ])
            (mult:SI (reg:SI 148)
                (const_int 4 [0x4])))) 273 {*sub_shiftsi} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg/v/f:SI 133 [ p ])
            (nil))))

(insn 23 22 27 2 arch/arm/kernel/smp.c:524 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ evt ])
                (const_int 80 [0x50])) [0 <variable>.cpumask+0 S4 A128])
        (reg:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(call_insn 27 23 29 2 arch/arm/kernel/smp.c:527 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("local_timer_setup") [flags 0x41] <function_decl 0x11513700 local_timer_setup>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 27 30 2 arch/arm/kernel/smp.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 30 29 31 2 arch/arm/kernel/smp.c:527 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154 155 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 153 154 155 156 157
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 42 3 arch/arm/kernel/smp.c:508 (set (reg/f:SI 153)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11676540>)) 167 {*arm_movsi_insn} (nil))

(insn 42 32 40 3 arch/arm/kernel/smp.c:516 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ evt ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ evt ])
        (nil)))

(insn 40 42 34 3 arch/arm/kernel/smp.c:514 (set (reg/f:SI 157)
        (symbol_ref:SI ("broadcast_timer_set_mode") [flags 0x3] <function_decl 0x1153aa00 broadcast_timer_set_mode>)) 167 {*arm_movsi_insn} (nil))

(insn 34 40 35 3 arch/arm/kernel/smp.c:509 (set (reg:SI 154)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/kernel/smp.c:509 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ evt ])
                (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_EQUAL (const_int 11 [0xb])
            (nil))))

(insn 36 35 33 3 arch/arm/kernel/smp.c:512 (set (reg:SI 155)
        (const_int 400 [0x190])) 167 {*arm_movsi_insn} (nil))

(insn 33 36 38 3 arch/arm/kernel/smp.c:508 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ evt ])
                (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 153)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11676540>)
            (nil))))

(insn 38 33 37 3 arch/arm/kernel/smp.c:513 (set (reg:SI 156)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 37 38 39 3 arch/arm/kernel/smp.c:512 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ evt ])
                (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_EQUAL (const_int 400 [0x190])
            (nil))))

(insn 39 37 41 3 arch/arm/kernel/smp.c:513 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ evt ])
                (const_int 32 [0x20])) [0 <variable>.mult+0 S4 A256])
        (reg:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 41 39 43 3 arch/arm/kernel/smp.c:514 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ evt ])
                (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])
        (reg/f:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (symbol_ref:SI ("broadcast_timer_set_mode") [flags 0x3] <function_decl 0x1153aa00 broadcast_timer_set_mode>)
            (nil))))

(call_insn/j 43 41 44 3 arch/arm/kernel/smp.c:516 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockevents_register_device") [flags 0x41] <function_decl 0x11406700 clockevents_register_device>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 44 43 50)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 50 44 53 4 74 "" [1 uses])

(note 53 50 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 56 53 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_local_irqs (show_local_irqs)[0:1422]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 4 from 33 to 43 -- before reload
;;   ======================================================

;;	  0-->    35 r2=r135+0x1                       :cortex_a8_default
;;	  0-->    57 r1=0x2                            :cortex_a8_default
;;	  1-->    33 r0=r133                           :cortex_a8_default
;;	  2-->    36 r0=call [`_find_next_bit_le']     :cortex_a8_issue_branch
;;	  2-->    37 r135=r0                           :cortex_a8_default
changing bb of uid 60
  from 3 to 4
;;	  3-->    60 r1=`*.LC9'                        :cortex_a8_load_store_1
changing bb of uid 26
  from 3 to 4
;;	  3-->    26 r0=r136                           :cortex_a8_default
changing bb of uid 24
  from 3 to 4
;;	  4-->    24 r145=r135*0x20+r153               :cortex_a8_default
;;	  4-->    41 r149=[r152]                       :cortex_a8_load_store_1
;;	  6-->    42 cc=cmp(r135,r149)                 :cortex_a8_default
;;	  8-->    43 pc={(ltu(cc,0x0))?L39:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 33
;;   new tail = 43

;;   ======================================================
;;   -- basic block 3 from 28 to 29 -- before reload
;;   ======================================================

;;	  0-->    28 r2=[r145+0x4]                     :cortex_a8_load_store_1
;;	  1-->    29 r0=call [`seq_printf']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 28
;;   new tail = 29

;;   ======================================================
;;   -- basic block 2 from 2 to 61 -- before reload
;;   ======================================================

;;	  0-->     3 r137=r1                           :cortex_a8_default
;;	  0-->    12 r3=`*.LC8'                        :cortex_a8_load_store_1
;;	  1-->    11 r2=r137                           :cortex_a8_default
;;	  1-->    10 r1=`*.LC7'                        :cortex_a8_load_store_1
;;	  2-->     2 r136=r0                           :cortex_a8_default
;;	  2-->    13 r0=call [`seq_printf']            :cortex_a8_issue_branch
;;	  3-->    14 r140=`cpu_present_mask'           :cortex_a8_load_store_1
;;	  3-->    16 r135=0xffffffffffffffff           :cortex_a8_default
;;	  4-->    40 r152=`nr_cpu_ids'                 :cortex_a8_load_store_1
;;	  5-->    21 r153=`irq_stat'                   :cortex_a8_load_store_1
;;	  6-->    15 r133=[r140]                       :cortex_a8_load_store_1
;;	  6-->    61 pc=L30                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 61

;;   ======================================================
;;   -- basic block 5 from 46 to 48 -- before reload
;;   ======================================================

;;	  0-->    46 r0=r136                           :cortex_a8_default
;;	  0-->    47 r1=`*.LC10'                       :cortex_a8_load_store_1
;;	  1-->    48 r0=call [`seq_printf']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 46
;;   new tail = 48


;; Procedure interblock/speculative motions == 3/3 




show_local_irqs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,6u} r1={9d,5u} r2={8d,3u} r3={6d,1u} r11={1d,5u} r12={5d} r13={1d,9u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={5d,1u} r25={1d,5u} r26={1d,4u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,1u} r135={2d,3u} r136={1d,2u} r137={1d,1u} r140={1d,1u} r145={1d,1u} r149={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 551{499d,52u,0e} in 28{24 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 136 137 140 152 153
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 135 136 137 140 152 153
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 3 2 NOTE_INSN_FUNCTION_BEG)

(insn 3 4 12 2 arch/arm/kernel/smp.c:480 (set (reg/v:SI 137 [ prec ])
        (reg:SI 1 r1 [ prec ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ prec ])
        (nil)))

(insn 12 3 11 2 arch/arm/kernel/smp.c:483 (set (reg:SI 3 r3)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1167e340>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1167e340>)
        (nil)))

(insn 11 12 10 2 arch/arm/kernel/smp.c:483 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ prec ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ prec ])
        (nil)))

(insn 10 11 2 2 arch/arm/kernel/smp.c:483 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1167e2a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x1167e2a0>)
        (nil)))

(insn 2 10 13 2 arch/arm/kernel/smp.c:480 (set (reg/v/f:SI 136 [ p ])
        (reg:SI 0 r0 [ p ])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 2 14 2 arch/arm/kernel/smp.c:483 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 14 13 16 2 include/linux/cpumask.h:174 (set (reg/f:SI 140)
        (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 16 14 40 2 arch/arm/kernel/smp.c:485 (set (reg/v:SI 135 [ cpu ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 40 16 21 2 arch/arm/kernel/smp.c:485 discrim 1 (set (reg/f:SI 152)
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (nil))

(insn 21 40 15 2 arch/arm/kernel/smp.c:486 (set (reg/f:SI 153)
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (nil))

(insn 15 21 61 2 include/linux/cpumask.h:174 (set (reg/f:SI 133 [ D.27256 ])
        (mem/u/f/c/i:SI (reg/f:SI 140) [0 cpu_present_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>) [0 cpu_present_mask+0 S4 A32])
            (nil))))

(jump_insn 61 15 62 2 arch/arm/kernel/smp.c:485 (set (pc)
        (label_ref 30)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153


;; Succ edge  4 [100.0%] 

(barrier 62 61 39)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 145 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 145
;; live  kill	 14 [lr]

;; Pred edge  4 [91.0%] 
(code_label 39 62 19 3 79 "" [1 uses])

(note 19 39 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 19 28 3 NOTE_INSN_DELETED)

(insn 28 23 29 3 arch/arm/kernel/smp.c:486 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(call_insn 29 28 30 3 arch/arm/kernel/smp.c:486 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 149
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 30 29 31 4 78 "" [1 uses])

(note 31 30 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 32 31 35 4 NOTE_INSN_DELETED)

(insn 35 32 57 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 135 [ cpu ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ cpu ])
        (nil)))

(insn 57 35 33 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 33 57 36 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 133 [ D.27256 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 33 37 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 37 36 60 4 include/linux/cpumask.h:174 (set (reg/v:SI 135 [ cpu ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 60 37 26 4 arch/arm/kernel/smp.c:486 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1167e540>)) 167 {*arm_movsi_insn} (nil))

(insn 26 60 24 4 arch/arm/kernel/smp.c:486 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 24 26 41 4 arch/arm/kernel/smp.c:486 (set (reg:SI 145)
        (plus:SI (mult:SI (reg/v:SI 135 [ cpu ])
                (const_int 32 [0x20]))
            (reg/f:SI 153))) 270 {*arith_shiftsi} (nil))

(insn 41 24 42 4 arch/arm/kernel/smp.c:485 discrim 1 (set (reg:SI 149 [ nr_cpu_ids ])
        (mem/c/i:SI (reg/f:SI 152) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
        (nil)))

(insn 42 41 43 4 arch/arm/kernel/smp.c:485 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ cpu ])
            (reg:SI 149 [ nr_cpu_ids ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ nr_cpu_ids ])
        (nil)))

(jump_insn 43 42 44 4 arch/arm/kernel/smp.c:485 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 152 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 152 153


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 44 43 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 5 arch/arm/kernel/smp.c:488 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ p ])
        (nil)))

(insn 47 46 48 5 arch/arm/kernel/smp.c:488 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x115d9a80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x115d9a80>)
        (nil)))

(call_insn/j 48 47 49 5 arch/arm/kernel/smp.c:488 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 49 48 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_ipi_list (show_ipi_list)[0:1418]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 5 from 70 to 80 -- before reload
;;   ======================================================

;;	  0-->    72 r2=r167+0x1                       :cortex_a8_default
;;	  0-->   103 r1=0x2                            :cortex_a8_default
;;	  1-->    70 r0=r164                           :cortex_a8_default
;;	  2-->    73 r0=call [`_find_next_bit_le']     :cortex_a8_issue_branch
;;	  2-->    74 r167=r0                           :cortex_a8_default
changing bb of uid 106
  from 4 to 5
;;	  3-->   106 r1=`*.LC9'                        :cortex_a8_load_store_1
changing bb of uid 63
  from 4 to 5
;;	  3-->    63 r0=r168                           :cortex_a8_default
changing bb of uid 58
  from 4 to 5
;;	  4-->    58 r177=r167*0x8+r166                :cortex_a8_default
;;	  4-->    78 r184=[r195]                       :cortex_a8_load_store_1
changing bb of uid 61
  from 4 to 5
;;	  6-->    61 r180=r177*0x4+r196                :cortex_a8_default
;;	  6-->    79 cc=cmp(r167,r184)                 :cortex_a8_default
;;	  8-->    80 pc={(ltu(cc,0x0))?L76:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 70
;;   new tail = 80

;;   ======================================================
;;   -- basic block 4 from 65 to 66 -- before reload
;;   ======================================================

;;	  0-->    65 r2=[r180+0x8]                     :cortex_a8_load_store_1
;;	  1-->    66 r0=call [`seq_printf']            :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 65
;;   new tail = 66

;;   ======================================================
;;   -- basic block 2 from 33 to 83 -- before reload
;;   ======================================================

;;	  0-->    38 r170=`cpu_present_mask'           :cortex_a8_load_store_1
;;	  0-->    33 r168=r0                           :cortex_a8_default
;;	  1-->    77 r195=`nr_cpu_ids'                 :cortex_a8_load_store_1
;;	  1-->    43 r192=r1-0x1                       :cortex_a8_default
;;	  2-->    56 r196=`irq_stat'                   :cortex_a8_load_store_1
;;	  2-->    40 r166=0x0                          :cortex_a8_default
;;	  3-->    39 r164=[r170]                       :cortex_a8_load_store_1
;;	  4-->    83 r200=`*.LANCHOR2'                 :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 33
;;   new tail = 83

;;   ======================================================
;;   -- basic block 3 from 45 to 116 -- before reload
;;   ======================================================

;;	  0-->    46 r0=r168                           :cortex_a8_default
;;	  0-->    47 r1=`*.LC11'                       :cortex_a8_load_store_1
;;	  1-->    48 r2=r192                           :cortex_a8_default
;;	  1-->    49 r3=`*.LC12'                       :cortex_a8_load_store_1
;;	  2-->    45 [sp]=r166                         :cortex_a8_load_store_1
;;	  2-->    50 r0=call [`seq_printf']            :cortex_a8_issue_branch
;;	  3-->   108 r167=0xffffffffffffffff           :cortex_a8_default
;;	  3-->   116 pc=L67                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 45
;;   new tail = 116

;;   ======================================================
;;   -- basic block 6 from 85 to 92 -- before reload
;;   ======================================================

;;	  0-->    87 r2=[r166*0x4+r200]                :cortex_a8_load_store_1
;;	  0-->    89 r166=r166+0x1                     :cortex_a8_default
;;	  1-->    85 r0=r168                           :cortex_a8_default
;;	  1-->    86 r1=`*.LC13'                       :cortex_a8_load_store_1
;;	  2-->    88 r0=call [`seq_printf']            :cortex_a8_issue_branch
;;	  2-->    91 cc=cmp(r166,0x6)                  :cortex_a8_default
;;	  4-->    92 pc={(cc!=0x0)?L90:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 85
;;   new tail = 92


;; Procedure interblock/speculative motions == 4/4 




show_ipi_list

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,6u} r1={9d,5u} r2={9d,4u} r3={6d,1u} r11={1d,7u} r12={5d} r13={1d,12u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,2u} r25={1d,7u} r26={1d,6u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r164={1d,1u} r166={2d,5u} r167={2d,3u} r168={1d,3u} r170={1d,1u} r177={1d,1u} r180={1d,1u} r184={1d,1u} r192={1d,1u} r195={1d,1u} r196={1d,1u} r200={1d,1u} 
;;    total ref usage 578{507d,71u,0e} in 37{33 regular + 4 call} insns.
(note 32 0 36 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164 166 168 170 192 195 196 200
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 164 166 168 170 192 195 196 200
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 32 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 34 36 35 2 NOTE_INSN_DELETED)

(note 35 34 38 2 NOTE_INSN_FUNCTION_BEG)

(insn 38 35 33 2 include/linux/cpumask.h:174 (set (reg/f:SI 170)
        (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 33 38 77 2 arch/arm/kernel/smp.c:423 (set (reg/v/f:SI 168 [ p ])
        (reg:SI 0 r0 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ p ])
        (nil)))

(insn 77 33 43 2 arch/arm/kernel/smp.c:429 discrim 1 (set (reg/f:SI 195)
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (nil))

(insn 43 77 56 2 arch/arm/kernel/smp.c:427 (set (reg:SI 192)
        (plus:SI (reg:SI 1 r1 [ prec ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [ prec ])
        (nil)))

(insn 56 43 40 2 arch/arm/kernel/smp.c:430 (set (reg/f:SI 196)
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (nil))

(insn 40 56 39 2 arch/arm/kernel/smp.c:426 (set (reg/v:SI 166 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 39 40 83 2 include/linux/cpumask.h:174 (set (reg/f:SI 164 [ D.27263 ])
        (mem/u/f/c/i:SI (reg/f:SI 170) [0 cpu_present_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_present_mask") [flags 0xc0] <var_decl 0x10c5bde0 cpu_present_mask>) [0 cpu_present_mask+0 S4 A32])
            (nil))))

(insn 83 39 90 2 arch/arm/kernel/smp.c:433 (set (reg/f:SI 200)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168 192
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 167
;; live  kill	 14 [lr]

;; Pred edge  6 [83.3%]  (dfs_back)
;; Pred edge  2 [100.0%]  (fallthru)
(code_label 90 83 41 3 86 "" [1 uses])

(note 41 90 46 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 46 41 47 3 arch/arm/kernel/smp.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 168 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 3 arch/arm/kernel/smp.c:427 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115d7180>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115d7180>)
        (nil)))

(insn 48 47 49 3 arch/arm/kernel/smp.c:427 (set (reg:SI 2 r2)
        (reg:SI 192)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 45 3 arch/arm/kernel/smp.c:427 (set (reg:SI 3 r3)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11683780>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11683780>)
        (nil)))

(insn 45 49 50 3 arch/arm/kernel/smp.c:427 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 166 [ i ])) 167 {*arm_movsi_insn} (nil))

(call_insn 50 45 108 3 arch/arm/kernel/smp.c:427 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 108 50 116 3 arch/arm/kernel/smp.c:429 (set (reg/v:SI 167 [ cpu ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 116 108 117 3 arch/arm/kernel/smp.c:429 (set (pc)
        (label_ref 67)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200


;; Succ edge  5 [100.0%] 

(barrier 117 116 76)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 168 196
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 177 180
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 177 180 192 195 196 200
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 177 180
;; live  kill	 14 [lr]

;; Pred edge  5 [91.0%] 
(code_label 76 117 54 4 85 "" [1 uses])

(note 54 76 57 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 57 54 60 4 NOTE_INSN_DELETED)

(note 60 57 65 4 NOTE_INSN_DELETED)

(insn 65 60 66 4 arch/arm/kernel/smp.c:430 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg:SI 180)
                (const_int 8 [0x8])) [0 <variable>.ipi_irqs S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 180)
        (nil)))

(call_insn 66 65 67 4 arch/arm/kernel/smp.c:430 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 167 195
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 167 184
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 67 66 68 5 84 "" [1 uses])

(note 68 67 69 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 69 68 72 5 NOTE_INSN_DELETED)

(insn 72 69 103 5 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 167 [ cpu ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 167 [ cpu ])
        (nil)))

(insn 103 72 70 5 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 70 103 73 5 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 164 [ D.27263 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 73 70 74 5 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 74 73 106 5 include/linux/cpumask.h:174 (set (reg/v:SI 167 [ cpu ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 106 74 63 5 arch/arm/kernel/smp.c:430 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1167e540>)) 167 {*arm_movsi_insn} (nil))

(insn 63 106 58 5 arch/arm/kernel/smp.c:430 (set (reg:SI 0 r0)
        (reg/v/f:SI 168 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 58 63 78 5 arch/arm/kernel/smp.c:430 (set (reg:SI 177)
        (plus:SI (mult:SI (reg/v:SI 167 [ cpu ])
                (const_int 8 [0x8]))
            (reg/v:SI 166 [ i ]))) 270 {*arith_shiftsi} (nil))

(insn 78 58 61 5 arch/arm/kernel/smp.c:429 discrim 1 (set (reg:SI 184 [ nr_cpu_ids ])
        (mem/c/i:SI (reg/f:SI 195) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
        (nil)))

(insn 61 78 79 5 arch/arm/kernel/smp.c:430 (set (reg:SI 180)
        (plus:SI (mult:SI (reg:SI 177)
                (const_int 4 [0x4]))
            (reg/f:SI 196))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 79 61 80 5 arch/arm/kernel/smp.c:429 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ cpu ])
            (reg:SI 184 [ nr_cpu_ids ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 184 [ nr_cpu_ids ])
        (nil)))

(jump_insn 80 79 81 5 arch/arm/kernel/smp.c:429 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 167 168 192 195 196 200


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168 200
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 166
;; live  kill	 14 [lr]

;; Pred edge  5 [9.0%]  (fallthru,loop_exit)
(note 81 80 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 87 81 89 6 arch/arm/kernel/smp.c:433 (set (reg:SI 2 r2)
        (mem/s/u/f/j:SI (plus:SI (mult:SI (reg/v:SI 166 [ i ])
                    (const_int 4 [0x4]))
                (reg/f:SI 200)) [0 ipi_types S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 89 87 85 6 arch/arm/kernel/smp.c:426 (set (reg/v:SI 166 [ i ])
        (plus:SI (reg/v:SI 166 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 85 89 86 6 arch/arm/kernel/smp.c:433 (set (reg:SI 0 r0)
        (reg/v/f:SI 168 [ p ])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 88 6 arch/arm/kernel/smp.c:433 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11689360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11689360>)
        (nil)))

(call_insn 88 86 91 6 arch/arm/kernel/smp.c:433 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x11360700 seq_printf>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 91 88 92 6 arch/arm/kernel/smp.c:426 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 166 [ i ])
            (const_int 6 [0x6]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 100 6 arch/arm/kernel/smp.c:426 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8333 [0x208d])
            (nil))))
;; End of basic block 6 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 166 168 192 195 196 200


;; Succ edge  3 [83.3%]  (dfs_back)
;; Succ edge  7 [16.7%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [16.7%]  (fallthru,loop_exit)
(note 100 92 118 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 118 100 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_cpus_done (smp_cpus_done)[0:1412] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)


smp_cpus_done

Dataflow summary:
def_info->table_size = 745, use_info->table_size = 72
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,9u} r1={12d,6u} r2={9d,2u} r3={8d,1u} r11={1d,5u} r12={7d} r13={1d,11u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={7d,1u} r25={1d,5u} r26={1d,4u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r137={2d,3u,1d} r138={2d,3u,1d} r139={1d,2u} r141={1d,1u} r144={1d,1u} r146={1d,1u} r148={1d,1u} r150={1d,1u} r152={1d,1u} r157={1d,1u} r167={1d,1u} r169={1d,1u} r171={2d,2u} r172={1d,1u} 
;;    total ref usage 811{743d,66u,2e} in 40{34 regular + 6 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d11(0){ }d23(1){ }d32(2){ }d40(3){ }d41(11){ }d48(12){ }d49(13){ }d55(14){ }d117(25){ }d118(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 138 139 141 169 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 138 139 141 169 170 171 172
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172

( 4 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ }u7(13){ }u8(25){ }u9(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 171 172
;; lr  def 	 137 144 146 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  gen 	 137 144 146 148
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172

( 3 2 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 169
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 138 150
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 152 157 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 152 157 167
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u67(11){ }u68(13){ }u69(14){ }u70(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 73 to worklist
  Adding insn 35 to worklist
  Adding insn 29 to worklist
  Adding insn 59 to worklist
  Adding insn 53 to worklist
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 40 to worklist
Finished finding needed instructions:
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 58 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 52 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 68 to worklist
  Adding insn 26 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 32 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
;;   ======================================================
;;   -- basic block 4 from 26 to 35 -- before reload
;;   ======================================================

;;	  0-->    28 r2=r138+0x1                       :cortex_a8_default
;;	  0-->    26 r0=r139                           :cortex_a8_default
;;	  1-->    68 r1=0x2                            :cortex_a8_default
;;	  2-->    29 r0=call [`_find_next_bit_le']     :cortex_a8_issue_branch
;;	  2-->    30 r138=r0                           :cortex_a8_default
;;	  3-->    33 r150=[r169]                       :cortex_a8_load_store_1
;;	  5-->    34 cc=cmp(r138,r150)                 :cortex_a8_default
;;	  7-->    35 pc={(cc<0x0)?L31:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 26
;;   new tail = 35

;;   ======================================================
;;   -- basic block 3 from 17 to 22 -- before reload
;;   ======================================================

;;	  0-->    17 r144=[r138*0x4+r172]              :cortex_a8_load_store_1
;;	  2-->    19 r146=r171+r144                    :cortex_a8_default
;;	  4-->    21 r148=[r146+0x38]                  :cortex_a8_load_store_1
;;	  6-->    22 r137=r137+r148                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 17
;;   new tail = 22

;;   ======================================================
;;   -- basic block 2 from 6 to 73 -- before reload
;;   ======================================================

;;	  0-->     6 r141=`cpu_online_mask'            :cortex_a8_load_store_1
;;	  0-->     9 r137=0x0                          :cortex_a8_default
;;	  1-->    14 r171=`cpu_data'                   :cortex_a8_load_store_1
;;	  1-->    10 r138=0xffffffffffffffff           :cortex_a8_default
;;	  2-->    15 r171=asm_operands                 :nothing
;;	  3-->     7 r139=[r141]                       :cortex_a8_load_store_1
;;	  4-->    32 r169=`nr_cpu_ids'                 :cortex_a8_load_store_1
;;	  5-->    16 r172=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  5-->    73 pc=L23                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 6
;;   new tail = 73

;;   ======================================================
;;   -- basic block 5 from 37 to 59 -- before reload
;;   ======================================================

;;	  0-->    37 r152=[r139]                       :cortex_a8_load_store_1
;;	  2-->    39 r0=r152&0x3                       :cortex_a8_default
;;	  3-->    40 r0=call [`__sw_hweight32']        :cortex_a8_issue_branch
;;	  3-->    41 r133=r0                           :cortex_a8_default
;;	  4-->    43 r0=r137                           :cortex_a8_default
;;	  4-->    44 r1=0x1388                         :cortex_a8_default
;;	  5-->    45 r0=call [`__aeabi_uidiv']         :cortex_a8_issue_branch
;;	  5-->    46 r157=r0                           :cortex_a8_default
;;	  6-->    47 r0=r137                           :cortex_a8_default
;;	  6-->    48 r1=0x32                           :cortex_a8_default
;;	  7-->    49 r0=call [`__aeabi_uidiv']         :cortex_a8_issue_branch
;;	  7-->    52 r1=0x64                           :cortex_a8_default
;;	  8-->    53 r0=call [`__aeabi_uidivmod']      :cortex_a8_issue_branch
;;	  8-->    54 r167=r1                           :cortex_a8_default
;;	  9-->    57 r2=r157                           :cortex_a8_default
;;	  9-->    56 r1=r133                           :cortex_a8_default
;;	 10-->    58 r3=r167                           :cortex_a8_default
;;	 10-->    55 r0=`*.LC14'                       :cortex_a8_load_store_1
;;	 11-->    59 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 37
;;   new tail = 59


;; Procedure interblock/speculative motions == 0/0 




smp_cpus_done

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,9u} r1={12d,6u} r2={9d,2u} r3={8d,1u} r11={1d,5u} r12={7d} r13={1d,11u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={7d,1u} r25={1d,5u} r26={1d,4u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,1u} r137={2d,3u,1d} r138={2d,3u,1d} r139={1d,2u} r141={1d,1u} r144={1d,1u} r146={1d,1u} r148={1d,1u} r150={1d,1u} r152={1d,1u} r157={1d,1u} r167={1d,1u} r169={1d,1u} r171={2d,2u} r172={1d,1u} 
;;    total ref usage 811{743d,66u,2e} in 40{34 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 138 139 141 169 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 138 139 141 169 171 172
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 9 2 arch/arm/kernel/smp.c:344 discrim 1 (set (reg/f:SI 141)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 9 6 14 2 arch/arm/kernel/smp.c:342 (set (reg/v:SI 137 [ bogosum ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 14 9 10 2 arch/arm/kernel/smp.c:345 (set (reg:SI 171 [ __ptr ])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (nil))

(insn 10 14 15 2 arch/arm/kernel/smp.c:344 (set (reg/v:SI 138 [ cpu ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 15 10 7 2 arch/arm/kernel/smp.c:345 (set (reg:SI 171 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg:SI 171 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8533741)) -1 (nil))

(insn 7 15 32 2 arch/arm/kernel/smp.c:344 discrim 1 (set (reg/f:SI 139 [ cpu_online_mask.405 ])
        (mem/u/f/c/i:SI (reg/f:SI 141) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
            (nil))))

(insn 32 7 16 2 arch/arm/kernel/smp.c:344 discrim 1 (set (reg/f:SI 169)
        (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>)) 167 {*arm_movsi_insn} (nil))

(insn 16 32 73 2 arch/arm/kernel/smp.c:345 (set (reg/f:SI 172)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 73 16 74 2 arch/arm/kernel/smp.c:344 (set (pc)
        (label_ref 23)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172


;; Succ edge  4 [100.0%] 

(barrier 74 73 31)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ }u7(13){ }u8(25){ }u9(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 171 172
;; lr  def 	 137 144 146 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  gen 	 137 144 146 148
;; live  kill	

;; Pred edge  4 [91.0%] 
(code_label 31 74 13 3 93 "" [1 uses])

(note 13 31 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 13 19 3 arch/arm/kernel/smp.c:345 (set (reg:SI 144)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 138 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 172)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 138 [ cpu ])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 19 17 21 3 arch/arm/kernel/smp.c:345 (set (reg:SI 146)
        (plus:SI (reg:SI 171 [ __ptr ])
            (reg:SI 144))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 21 19 22 3 arch/arm/kernel/smp.c:345 (set (reg:SI 148 [ <variable>.loops_per_jiffy ])
        (mem/s/j:SI (plus:SI (reg:SI 146)
                (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 22 21 23 3 arch/arm/kernel/smp.c:345 (set (reg/v:SI 137 [ bogosum ])
        (plus:SI (reg/v:SI 137 [ bogosum ])
            (reg:SI 148 [ <variable>.loops_per_jiffy ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.loops_per_jiffy ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 169
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 138 150
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 23 22 24 4 92 "" [1 uses])

(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 24 28 4 NOTE_INSN_DELETED)

(insn 28 25 26 4 include/linux/cpumask.h:174 (set (reg:SI 2 r2)
        (plus:SI (reg/v:SI 138 [ cpu ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ cpu ])
        (nil)))

(insn 26 28 68 4 include/linux/cpumask.h:174 (set (reg:SI 0 r0)
        (reg/f:SI 139 [ cpu_online_mask.405 ])) 167 {*arm_movsi_insn} (nil))

(insn 68 26 29 4 include/linux/cpumask.h:174 (set (reg:SI 1 r1)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 68 30 4 include/linux/cpumask.h:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_find_next_bit_le") [flags 0x41] <function_decl 0x109c0980 _find_next_bit_le>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 30 29 33 4 include/linux/cpumask.h:174 (set (reg/v:SI 138 [ cpu ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 33 30 34 4 arch/arm/kernel/smp.c:344 discrim 1 (set (reg:SI 150 [ nr_cpu_ids ])
        (mem/c/i:SI (reg/f:SI 169) [0 nr_cpu_ids+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("nr_cpu_ids") [flags 0xc0] <var_decl 0x10c5bea0 nr_cpu_ids>) [0 nr_cpu_ids+0 S4 A32])
        (nil)))

(insn 34 33 35 4 arch/arm/kernel/smp.c:344 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ cpu ])
            (reg:SI 150 [ nr_cpu_ids ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150 [ nr_cpu_ids ])
        (nil)))

(jump_insn 35 34 36 4 arch/arm/kernel/smp.c:344 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 169 171 172


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 152 157 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 152 157 167
;; live  kill	 14 [lr]

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 36 35 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 38 36 37 5 NOTE_INSN_DELETED)

(insn 37 38 39 5 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 152 [ <variable>.bits ])
        (mem/s/j:SI (reg/f:SI 139 [ cpu_online_mask.405 ]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ cpu_online_mask.405 ])
        (nil)))

(insn 39 37 40 5 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 152 [ <variable>.bits ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152 [ <variable>.bits ])
        (nil)))

(call_insn 40 39 41 5 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 43 5 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 133 [ D.27281 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 43 41 44 5 arch/arm/kernel/smp.c:347 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ bogosum ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 45 44 46 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 45 47 5 arch/arm/kernel/smp.c:347 (set (reg:SI 157)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg/v:SI 137 [ bogosum ])
                (const_int 5000 [0x1388]))
            (nil))))

(insn 47 46 48 5 arch/arm/kernel/smp.c:347 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ bogosum ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ bogosum ])
        (nil)))

(insn 48 47 49 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (const_int 50 [0x32])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 49 48 52 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 52 49 53 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 53 52 54 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 54 53 57 5 arch/arm/kernel/smp.c:347 (set (reg:SI 167 [+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 57 54 56 5 arch/arm/kernel/smp.c:347 (set (reg:SI 2 r2)
        (reg:SI 157)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 56 57 58 5 arch/arm/kernel/smp.c:347 (set (reg:SI 1 r1)
        (reg:SI 133 [ D.27281 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.27281 ])
        (nil)))

(insn 58 56 55 5 arch/arm/kernel/smp.c:347 (set (reg:SI 3 r3)
        (reg:SI 167 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 167 [+4 ])
        (nil)))

(insn 55 58 59 5 arch/arm/kernel/smp.c:347 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11693120>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11693120>)
        (nil)))

(call_insn/j 59 55 60 5 arch/arm/kernel/smp.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 60 59 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_local_timer (do_local_timer)[0:1421]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)


do_local_timer

Dataflow summary:
def_info->table_size = 268, use_info->table_size = 55
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={2d,2u} r137={2d,3u} r142={1d,1u} r144={1d,1u} r147={1d,1u} r148={2d,3u} r150={1d,1u,1d} r151={1d,2u} r160={1d,1u} r163={1d,2u} r170={1d,1u} r171={1d,1u} r174={1d,1u} r175={2d,2u} r177={1d,1u,1d} r178={1d,1u} 
;;    total ref usage 314{265d,47u,2e} in 27{25 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d15(12){ }d16(13){ }d19(14){ }d41(25){ }d42(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 142 144 147 148 150 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 142 144 146 147 148 150 151
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 163 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  gen 	 160 163 170 171
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 134 174 175 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 134 173 174 175 177 178
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u51(11){ }u52(13){ }u53(14){ }u54(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 31 to worklist
  Adding insn 28 to worklist
  Adding insn 23 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 60 to worklist
Finished finding needed instructions:
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 55 to worklist
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 144
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 9 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 6 to 31 -- before reload
;;   ======================================================

;;	  0-->    70 r148=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->     9 r147=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  1-->    71 r148=r148&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->     6 r137=`__irq_regs'                 :cortex_a8_load_store_1
;;	  2-->     7 r137=asm_operands                 :nothing
;;	  3-->    12 r150=[r148+0x14]                  :cortex_a8_load_store_1
;;	  6-->    13 r151=[r150*0x4+r147]              :cortex_a8_load_store_1
;;	  9-->    14 r142=[r137+r151]                  :cortex_a8_load_store_1
;;	 10-->    23 [r137+r151]=r0                    :cortex_a8_load_store_1
;;	 11-->    27 r144=[r148+0x14]                  :cortex_a8_load_store_1
;;	 11-->    28 r0=call [`twd_timer_ack']         :cortex_a8_issue_branch
;;	 43-->    30 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 45-->    31 pc={(cc==0x0)?L48:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 45
;;   new head = 6
;;   new tail = 31

;;   ======================================================
;;   -- basic block 3 from 34 to 47 -- before reload
;;   ======================================================

;;	  0-->    34 r160=`irq_stat'                   :cortex_a8_load_store_1
;;	  2-->    37 r163=r144*0x20+r160               :cortex_a8_default
;;	  4-->    44 r170=[r163+0x4]                   :cortex_a8_load_store_1
;;	  6-->    45 r171=r170+0x1                     :cortex_a8_default
;;	  6-->    46 [r163+0x4]=r171                   :cortex_a8_load_store_1
;;	  7-->    47 call [`ipi_timer']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 34
;;   new tail = 47

;;   ======================================================
;;   -- basic block 4 from 52 to 60 -- before reload
;;   ======================================================

;;	  0-->    68 r175=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    55 r174=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  1-->    69 r175=r175&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->    52 r134=`__irq_regs'                 :cortex_a8_load_store_1
;;	  2-->    53 r134=asm_operands                 :nothing
;;	  3-->    58 r177=[r175+0x14]                  :cortex_a8_load_store_1
;;	  6-->    59 r178=[r177*0x4+r174]              :cortex_a8_load_store_1
;;	  9-->    60 [r134+r178]=r142                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 9
;;   new head = 52
;;   new tail = 60


;; Procedure interblock/speculative motions == 0/0 




do_local_timer

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={2d,2u} r137={2d,3u} r142={1d,1u} r144={1d,1u} r147={1d,1u} r148={2d,3u} r150={1d,1u,1d} r151={1d,2u} r160={1d,1u} r163={1d,2u} r170={1d,1u} r171={1d,1u} r174={1d,1u} r175={2d,2u} r177={1d,1u,1d} r178={1d,1u} 
;;    total ref usage 314{265d,47u,2e} in 27{25 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 142 144 147 148 150 151
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137 142 144 147 148 150 151
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 29 2 NOTE_INSN_DELETED)

(note 29 10 70 2 NOTE_INSN_DELETED)

(insn 70 29 9 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 148)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 70 71 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/f:SI 147)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 71 9 6 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 148)
        (and:SI (reg:SI 148)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 6 71 7 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 137 [ __ptr ])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 12 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v:SI 137 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 137 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579566)) -1 (nil))

(insn 12 7 13 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 150 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 148)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg:SI 151)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 150 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 147)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 147)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 150 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 14 13 23 2 include/asm-generic/irq_regs.h:32 discrim 4 (set (reg/v/f:SI 142 [ old_regs ])
        (mem/f:SI (plus:SI (reg/v:SI 137 [ __ptr ])
                (reg:SI 151)) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 14 27 2 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 137 [ __ptr ])
                (reg:SI 151)) [0 S4 A32])
        (reg:SI 0 r0 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (expr_list:REG_DEAD (reg/v:SI 137 [ __ptr ])
            (expr_list:REG_DEAD (reg:SI 0 r0 [ regs ])
                (nil)))))

(insn 27 23 28 2 arch/arm/kernel/smp.c:469 (set (reg:SI 144 [ D.26224 ])
        (mem/s/j:SI (plus:SI (reg:SI 148)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(call_insn 28 27 30 2 arch/arm/kernel/smp.c:471 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("twd_timer_ack") [flags 0x41] <function_decl 0x11513600 twd_timer_ack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 30 28 31 2 arch/arm/kernel/smp.c:471 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 31 30 32 2 arch/arm/kernel/smp.c:471 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 163 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; live  gen 	 160 163 170 171
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 32 31 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 36 32 34 3 NOTE_INSN_DELETED)

(insn 34 36 37 3 arch/arm/kernel/smp.c:472 (set (reg/f:SI 160)
        (symbol_ref:SI ("irq_stat") [flags 0xc0] <var_decl 0x10ffef00 irq_stat>)) 167 {*arm_movsi_insn} (nil))

(insn 37 34 44 3 arch/arm/kernel/smp.c:472 (set (reg:SI 163)
        (plus:SI (mult:SI (reg:SI 144 [ D.26224 ])
                (const_int 32 [0x20]))
            (reg/f:SI 160))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 160)
        (expr_list:REG_DEAD (reg:SI 144 [ D.26224 ])
            (nil))))

(insn 44 37 45 3 arch/arm/kernel/smp.c:472 (set (reg:SI 170 [ <variable>.local_timer_irqs ])
        (mem/s/j:SI (plus:SI (reg:SI 163)
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/kernel/smp.c:472 (set (reg:SI 171)
        (plus:SI (reg:SI 170 [ <variable>.local_timer_irqs ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 170 [ <variable>.local_timer_irqs ])
        (nil)))

(insn 46 45 47 3 arch/arm/kernel/smp.c:472 (set (mem/s/j:SI (plus:SI (reg:SI 163)
                (const_int 4 [0x4])) [0 <variable>.local_timer_irqs+0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg:SI 163)
            (nil))))

(call_insn 47 46 48 3 arch/arm/kernel/smp.c:473 (parallel [
            (call (mem:SI (symbol_ref:SI ("ipi_timer") [flags 0x3] <function_decl 0x1153a600 ipi_timer>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 134 174 175 177 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 134 174 175 177 178
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [61.0%] 
(code_label 48 47 49 4 98 "" [1 uses])

(note 49 48 56 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 56 49 68 4 NOTE_INSN_DELETED)

(insn 68 56 55 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 175)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 68 69 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/f:SI 174)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 69 55 52 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 175)
        (and:SI (reg:SI 175)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 52 69 53 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 134 [ __ptr ])
        (symbol_ref:SI ("__irq_regs") [flags 0xc0] <var_decl 0x11361780 __irq_regs>)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 58 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 134 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8579572)) -1 (nil))

(insn 58 53 59 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 177 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 175)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(insn 59 58 60 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (reg:SI 178)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 177 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 174)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 177 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 174)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 177 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 60 59 72 4 include/asm-generic/irq_regs.h:33 discrim 4 (set (mem/f:SI (plus:SI (reg/v:SI 134 [ __ptr ])
                (reg:SI 178)) [0 S4 A32])
        (reg/v/f:SI 142 [ old_regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_DEAD (reg/v/f:SI 142 [ old_regs ])
            (expr_list:REG_DEAD (reg/v:SI 134 [ __ptr ])
                (nil)))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 72 60 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function smp_prepare_cpus (smp_prepare_cpus)[0:1414] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


smp_prepare_cpus

Dataflow summary:
def_info->table_size = 506, use_info->table_size = 56
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,5u} r1={5d} r2={5d} r3={5d} r11={1d,4u} r12={5d} r13={1d,9u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,1u} r25={1d,4u} r26={1d,3u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={2d,2u} r136={1d,2u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r141={1d,1u} r143={1d,1u} r144={2d,2u} r146={1d,1u,1d} r147={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 545{498d,46u,1e} in 26{22 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d7(0){ }d12(1){ }d17(2){ }d22(3){ }d23(11){ }d28(12){ }d29(13){ }d33(14){ }d78(25){ }d79(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137 138 139 141 143 144 146 147 149 151 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 134 136 137 138 139 141 142 143 144 146 147 149 151 152
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 3 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u52(11){ }u53(13){ }u54(14){ }u55(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 38 to worklist
  Adding insn 26 to worklist
  Adding insn 11 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
Finished finding needed instructions:
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 44 to worklist
  Adding insn 42 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
  Adding insn 37 to worklist
  Adding insn 27 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 2 to 38 -- before reload
;;   ======================================================

;;	  0-->     6 r139=`cpu_possible_mask'          :cortex_a8_load_store_1
;;	  0-->     2 r137=r0                           :cortex_a8_default
;;	  3-->     7 r138=[r139]                       :cortex_a8_load_store_1
;;	  6-->     8 r141=[r138]                       :cortex_a8_load_store_1
;;	  8-->    10 r0=r141&0x3                       :cortex_a8_default
;;	  9-->    11 r0=call [`__sw_hweight32']        :cortex_a8_issue_branch
;;	  9-->    12 r136=r0                           :cortex_a8_default
;;	 10-->    56 r144=sp&0xffffffffffffe03f        :cortex_a8_default
;;	 10-->    16 r143=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	 11-->    57 r144=r144&0xffffffffffffffc0      :cortex_a8_default
;;	 11-->    24 r151=`loops_per_jiffy'            :cortex_a8_load_store_1
;;	 12-->    27 {r133=umin(r136,r137);clobber cc;}:cortex_a8_default
;;	 12-->    14 r134=`cpu_data'                   :cortex_a8_load_store_1
;;	 13-->    19 r146=[r144+0x14]                  :cortex_a8_load_store_1
;;	 13-->    37 cc=cmp(r133!=0x0&gtu(r136,0x1),0x0:cortex_a8_default
;;	 14-->    25 r152=[r151]                       :cortex_a8_load_store_1
;;	 15-->    15 r134=asm_operands                 :nothing
;;	 16-->    20 r147=[r146*0x4+r143]              :cortex_a8_load_store_1
;;	 18-->    22 r149=r134+r147                    :cortex_a8_default
;;	 20-->    26 [r149+0x38]=r152                  :cortex_a8_load_store_1
;;	 20-->    38 pc={(cc==0x0)?L52:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 20
;;   new head = 2
;;   new tail = 38

;;   ======================================================
;;   -- basic block 3 from 40 to 45 -- before reload
;;   ======================================================

;;	  0-->    40 call [`percpu_timer_setup']       :cortex_a8_issue_branch
;;	  0-->    42 r0=r138                           :cortex_a8_default
;;	  1-->    43 call [`init_cpu_present']         :cortex_a8_issue_branch
;;	  1-->    44 r0=r133                           :cortex_a8_default
;;	  2-->    45 call [`platform_smp_prepare_cpus']:cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 40
;;   new tail = 45


;; Procedure interblock/speculative motions == 0/0 




smp_prepare_cpus

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,5u} r1={5d} r2={5d} r3={5d} r11={1d,4u} r12={5d} r13={1d,9u} r14={4d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,1u} r25={1d,4u} r26={1d,3u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={2d,2u} r136={1d,2u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r141={1d,1u} r143={1d,1u} r144={2d,2u} r146={1d,1u,1d} r147={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 545{498d,46u,1e} in 26{22 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137 138 139 141 143 144 146 147 149 151 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 134 136 137 138 139 141 143 144 146 147 149 151 152
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 17 2 NOTE_INSN_DELETED)

(note 17 9 28 2 NOTE_INSN_DELETED)

(note 28 17 29 2 NOTE_INSN_DELETED)

(note 29 28 31 2 NOTE_INSN_DELETED)

(note 31 29 32 2 NOTE_INSN_DELETED)

(note 32 31 34 2 NOTE_INSN_DELETED)

(note 34 32 35 2 NOTE_INSN_DELETED)

(note 35 34 36 2 NOTE_INSN_DELETED)

(note 36 35 6 2 NOTE_INSN_DELETED)

(insn 6 36 2 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg/f:SI 139)
        (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 2 6 7 2 arch/arm/kernel/smp.c:362 (set (reg/v:SI 137 [ max_cpus ])
        (reg:SI 0 r0 [ max_cpus ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ max_cpus ])
        (nil)))

(insn 7 2 8 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg/f:SI 138 [ cpu_possible_mask ])
        (mem/u/f/c/i:SI (reg/f:SI 139) [0 cpu_possible_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_possible_mask") [flags 0xc0] <var_decl 0x10c5bf00 cpu_possible_mask>) [0 cpu_possible_mask+0 S4 A32])
            (nil))))

(insn 8 7 10 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 141 [ <variable>.bits ])
        (mem/s/j:SI (reg/f:SI 138 [ cpu_possible_mask ]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 0 r0)
        (and:SI (reg:SI 141 [ <variable>.bits ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.bits ])
        (nil)))

(call_insn 11 10 12 2 include/asm-generic/bitops/arch_hweight.h:8 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__sw_hweight32") [flags 0x41] <function_decl 0x5118aa00 __sw_hweight32>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 11 56 2 include/asm-generic/bitops/arch_hweight.h:8 (set (reg:SI 136 [ D.27453 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 56 12 16 2 arch/arm/kernel/smp.c:271 (set (reg:SI 144)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 16 56 57 2 arch/arm/kernel/smp.c:271 (set (reg/f:SI 143)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 57 16 24 2 arch/arm/kernel/smp.c:271 (set (reg:SI 144)
        (and:SI (reg:SI 144)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 24 57 27 2 arch/arm/kernel/smp.c:271 (set (reg/f:SI 151)
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>)) 167 {*arm_movsi_insn} (nil))

(insn 27 24 14 2 arch/arm/kernel/smp.c:271 (parallel [
            (set (reg/v:SI 133 [ max_cpus.964 ])
                (umin:SI (reg:SI 136 [ D.27453 ])
                    (reg/v:SI 137 [ max_cpus ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ max_cpus ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 14 27 19 2 arch/arm/kernel/smp.c:269 (set (reg/v:SI 134 [ __ptr ])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (nil))

(insn 19 14 37 2 arch/arm/kernel/smp.c:271 (set (reg:SI 146 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 37 19 25 2 arch/arm/kernel/smp.c:372 (set (reg:CC_DGTU 24 cc)
        (compare:CC_DGTU (and:SI (ne:SI (reg/v:SI 133 [ max_cpus.964 ])
                    (const_int 0 [0x0]))
                (gtu:SI (reg:SI 136 [ D.27453 ])
                    (const_int 1 [0x1])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 136 [ D.27453 ])
        (nil)))

(insn 25 37 15 2 arch/arm/kernel/smp.c:271 (set (reg:SI 152 [ loops_per_jiffy ])
        (mem/c/i:SI (reg/f:SI 151) [0 loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>) [0 loops_per_jiffy+0 S4 A32])
            (nil))))

(insn 15 25 20 2 arch/arm/kernel/smp.c:269 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 134 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8524033)) -1 (nil))

(insn 20 15 22 2 arch/arm/kernel/smp.c:271 (set (reg:SI 147)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 146 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 143)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 143)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 146 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 22 20 26 2 arch/arm/kernel/smp.c:271 (set (reg:SI 149)
        (plus:SI (reg/v:SI 134 [ __ptr ])
            (reg:SI 147))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg/v:SI 134 [ __ptr ])
            (nil))))

(insn 26 22 38 2 arch/arm/kernel/smp.c:271 (set (mem/s/j:SI (plus:SI (reg:SI 149)
                (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])
        (reg:SI 152 [ loops_per_jiffy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 152 [ loops_per_jiffy ])
        (expr_list:REG_DEAD (reg:SI 149)
            (nil))))

(jump_insn 38 26 39 2 arch/arm/kernel/smp.c:372 (set (pc)
        (if_then_else (eq (reg:CC_DGTU 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DGTU 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 39 38 40 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 40 39 42 3 arch/arm/kernel/smp.c:377 (parallel [
            (call (mem:SI (symbol_ref:SI ("percpu_timer_setup") [flags 0x3] <function_decl 0x11513500 percpu_timer_setup>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 42 40 43 3 arch/arm/kernel/smp.c:385 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ cpu_possible_mask ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ cpu_possible_mask ])
        (nil)))

(call_insn 43 42 44 3 arch/arm/kernel/smp.c:385 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_cpu_present") [flags 0x41] <function_decl 0x10c85700 init_cpu_present>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 43 45 3 arch/arm/kernel/smp.c:391 (set (reg:SI 0 r0)
        (reg/v:SI 133 [ max_cpus.964 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ max_cpus.964 ])
        (nil)))

(call_insn/j 45 44 46 3 arch/arm/kernel/smp.c:391 (parallel [
            (call (mem:SI (symbol_ref:SI ("platform_smp_prepare_cpus") [flags 0x41] <function_decl 0x10c9f200 platform_smp_prepare_cpus>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 46 45 52)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 52 46 55 4 104 "" [1 uses])

(note 55 52 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 58 55 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function secondary_start_kernel (secondary_start_kernel)[0:1411] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 17 (  1.7)


secondary_start_kernel

Dataflow summary:
def_info->table_size = 1237, use_info->table_size = 122
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,6u} r1={15d,4u} r2={11d} r3={11d} r11={1d,9u} r12={11d} r13={1d,21u} r14={10d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={19d,3u} r25={1d,9u} r26={1d,8u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r133={1d,1u} r136={1d,1u} r137={2d,2u} r139={2d,3u} r140={1d,2u} r143={1d} r144={1d} r146={1d,10u,2d} r147={2d,3u} r150={1d,7u} r151={1d,1u} r155={1d,1u} r160={1d,1u} r162={1d,1u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u,1d} r183={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} 
;;    total ref usage 1346{1232d,111u,3e} in 72{62 regular + 10 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d16(0){ }d31(1){ }d42(2){ }d53(3){ }d54(11){ }d65(12){ }d66(13){ }d76(14){ }d186(25){ }d187(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 143 144 146 147 150 151 155 160 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140 143 144 146 147 150 151 155 160 162
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  gen 	 164
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 166
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146

( 4 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 139 168 169 171 172 174 176 177 179 180 181 182 183 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 133 137 139 168 169 170 171 172 174 176 177 179 180 181 182 183 187 188 189
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189

( 8 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189

( 7 6 )->[8]->( 7 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189
;; live  gen 	 24 [cc] 136
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189

( 8 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u118(11){ }u119(13){ }u120(14){ }u121(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 27 to worklist
  Adding insn 22 to worklist
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 43 to worklist
  Adding insn 48 to worklist
  Adding insn 51 to worklist
  Adding insn 121 to worklist
  Adding insn 82 to worklist
  Adding insn 81 to worklist
  Adding insn 78 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 65 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 95 to worklist
  Adding insn 105 to worklist
  Adding insn 101 to worklist
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
Finished finding needed instructions:
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
  Adding insn 104 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
  Adding insn 100 to worklist
  Adding insn 99 to worklist
  Adding insn 98 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
  Adding insn 89 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
  Adding insn 72 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 64 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 124 to worklist
  Adding insn 123 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
  Adding insn 50 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
  Adding insn 47 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
  Adding insn 42 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 29 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 8 to worklist
  Adding insn 126 to worklist
  Adding insn 125 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 19 (  1.9)
;;   ======================================================
;;   -- basic block 8 from 101 to 105 -- before reload
;;   ======================================================

;;	  0-->   101 r136=[r189]                       :cortex_a8_load_store_1
;;	  2-->   104 {cc=cmp(r136&r133,0x0);clobber scr:cortex_a8_default
;;	  4-->   105 pc={(cc==0x0)?L102:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 101
;;   new tail = 105

;;   ======================================================
;;   -- basic block 7 from 95 to 95 -- before reload
;;   ======================================================

;;	  0-->    95 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 95
;;   new tail = 95

;;   ======================================================
;;   -- basic block 2 from 125 to 40 -- before reload
;;   ======================================================

;;	  0-->   125 r147=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    13 r150=`init_mm'                    :cortex_a8_load_store_1
;;	  1-->   126 r147=r147&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->    10 r0=`*.LC15'                       :cortex_a8_load_store_1
;;	  3-->     8 r146=[r147+0x14]                  :cortex_a8_load_store_1
;;	  5-->    11 r1=r146                           :cortex_a8_default
;;	  6-->    12 r0=call [`printk']                :cortex_a8_issue_branch
;;	  6-->    14 r151=r150+0x2c                    :cortex_a8_default
;;	  7-->    16 {r144=asm_operands;r143=asm_operan:nothing
;;	  8-->    20 r155=[r147+0xc]                   :cortex_a8_load_store_1
;;	  8-->    25 r0=r146                           :cortex_a8_default
;;	  9-->    26 r1=r150+0x15c                     :cortex_a8_default
;;	 11-->    22 [r155+0x1f0]=r150                 :cortex_a8_load_store_1
;;	 12-->    27 call [`_set_bit']                 :cortex_a8_issue_branch
;;	 12-->    29 r160=[r150+0x24]                  :cortex_a8_load_store_1
;;	 13-->    33 r1=r150                           :cortex_a8_default
;;	 14-->    32 r0=r160+0x40000000                :cortex_a8_default
;;	 15-->    34 call [`cpu_v7_switch_mm']         :cortex_a8_issue_branch
;;	 15-->    35 r162=`cpu_tlb'                    :cortex_a8_load_store_1
;;	 18-->    36 r140=[r162+0x8]                   :cortex_a8_load_store_1
;;	 19-->    37 {asm_operands;clobber [scratch];} :nothing
;;	 20-->    39 cc=cmp(zxt(r140,0x1,0xc),0x0)     :cortex_a8_default
;;	 22-->    40 pc={(cc==0x0)?L44:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 22
;;   new head = 125
;;   new tail = 40

;;   ======================================================
;;   -- basic block 3 from 42 to 43 -- before reload
;;   ======================================================

;;	  0-->    42 r164=0x0                          :cortex_a8_default
;;	  1-->    43 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 42
;;   new tail = 43

;;   ======================================================
;;   -- basic block 4 from 47 to 48 -- before reload
;;   ======================================================

;;	  0-->    47 cc=cmp(zxt(r140,0x1,0x14),0x0)    :cortex_a8_default
;;	  2-->    48 pc={(cc==0x0)?L52:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 47
;;   new tail = 48

;;   ======================================================
;;   -- basic block 5 from 50 to 51 -- before reload
;;   ======================================================

;;	  0-->    50 r166=0x0                          :cortex_a8_default
;;	  1-->    51 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 50
;;   new tail = 51

;;   ======================================================
;;   -- basic block 6 from 54 to 121 -- before reload
;;   ======================================================

;;	  0-->    54 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    55 {asm_operands;clobber [scratch];} :nothing
;;	  2-->    56 call [`cpu_init']                 :cortex_a8_issue_branch
;;	  2-->   123 r139=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  3-->   124 r139=r139&0xffffffffffffffc0      :cortex_a8_default
;;	  5-->    60 r168=[r139+0x4]                   :cortex_a8_load_store_1
;;	  7-->    61 r169=r168+0x1                     :cortex_a8_default
;;	  7-->    62 [r139+0x4]=r169                   :cortex_a8_load_store_1
;;	  8-->    63 {asm_operands;clobber [scratch];} :nothing
;;	  9-->    64 r0=r146                           :cortex_a8_default
;;	 10-->    65 call [`platform_secondary_init']  :cortex_a8_issue_branch
;;	 10-->    66 r0=r146                           :cortex_a8_default
;;	 11-->    67 call [`notify_cpu_starting']      :cortex_a8_issue_branch
;;	 12-->    68 call [`calibrate_delay']          :cortex_a8_issue_branch
;;	 12-->    71 r171=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	 13-->    76 r176=`loops_per_jiffy'            :cortex_a8_load_store_1
;;	 13-->    79 r0=r146                           :cortex_a8_default
;;	 14-->    69 r137=`cpu_data'                   :cortex_a8_load_store_1
;;	 14-->    80 r1=0x1                            :cortex_a8_default
;;	 15-->    72 r172=[r146*0x4+r171]              :cortex_a8_load_store_1
;;	 16-->    77 r177=[r176]                       :cortex_a8_load_store_1
;;	 17-->    70 r137=asm_operands                 :nothing
;;	 18-->    74 r174=r137+r172                    :cortex_a8_default
;;	 20-->    78 [r174+0x38]=r177                  :cortex_a8_load_store_1
;;	 21-->    81 call [`set_cpu_online']           :cortex_a8_issue_branch
;;	 22-->    82 call [`percpu_timer_setup']       :cortex_a8_issue_branch
;;	 22-->    84 r180=r146+0x1f                    :cortex_a8_default
;;	 23-->    98 r187=`cpu_active_mask'            :cortex_a8_load_store_1
;;	 23-->    86 {r179={(r146>=0x0)?r146:r180};clob:cortex_a8_default
;;	 24-->    90 r183=0x1                          :cortex_a8_default
;;	 24-->    89 r182=r146&0x1f                    :cortex_a8_default
;;	 25-->    87 r181=r179>>0x5                    :cortex_a8_default
;;	 26-->    99 r188=[r187]                       :cortex_a8_load_store_1
;;	 26-->    91 r133=r183<<r182                   :cortex_a8_default
;;	 28-->   100 r189=r181*0x4+r188                :cortex_a8_default
;;	 28-->   121 pc=L96                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 28
;;   new head = 54
;;   new tail = 121

;;   ======================================================
;;   -- basic block 9 from 107 to 109 -- before reload
;;   ======================================================

;;	  0-->   107 {asm_operands;clobber cc;clobber [:nothing
;;	  1-->   108 {asm_operands;clobber cc;clobber [:nothing
;;	  2-->   109 call [`cpu_idle']                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 107
;;   new tail = 109


;; Procedure interblock/speculative motions == 0/0 




secondary_start_kernel

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,6u} r1={15d,4u} r2={11d} r3={11d} r11={1d,9u} r12={11d} r13={1d,21u} r14={10d,1u} r15={10d} r16={10d} r17={10d} r18={10d} r19={10d} r20={10d} r21={10d} r22={10d} r23={10d} r24={19d,3u} r25={1d,9u} r26={1d,8u} r27={10d} r28={10d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={10d} r38={10d} r39={10d} r40={10d} r41={10d} r42={10d} r43={10d} r44={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r77={10d} r78={10d} r79={10d} r80={10d} r81={10d} r82={10d} r83={10d} r84={10d} r85={10d} r86={10d} r87={10d} r88={10d} r89={10d} r90={10d} r91={10d} r92={10d} r93={10d} r94={10d} r95={10d} r96={10d} r97={10d} r98={10d} r99={10d} r100={10d} r101={10d} r102={10d} r103={10d} r104={10d} r105={10d} r106={10d} r107={10d} r108={10d} r109={10d} r110={10d} r111={10d} r112={10d} r113={10d} r114={10d} r115={10d} r116={10d} r117={10d} r118={10d} r119={10d} r120={10d} r121={10d} r122={10d} r123={10d} r124={10d} r125={10d} r126={10d} r127={10d} r133={1d,1u} r136={1d,1u} r137={2d,2u} r139={2d,3u} r140={1d,2u} r143={1d} r144={1d} r146={1d,10u,2d} r147={2d,3u} r150={1d,7u} r151={1d,1u} r155={1d,1u} r160={1d,1u} r162={1d,1u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r171={1d,1u} r172={1d,1u} r174={1d,1u} r176={1d,1u} r177={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u,1d} r183={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} 
;;    total ref usage 1346{1232d,111u,3e} in 72{62 regular + 10 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 143 144 146 147 150 151 155 160 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140 143 144 146 147 150 151 155 160 162
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 30 2 NOTE_INSN_DELETED)

(note 30 6 38 2 NOTE_INSN_DELETED)

(note 38 30 125 2 NOTE_INSN_DELETED)

(insn 125 38 13 2 arch/arm/kernel/smp.c:281 (set (reg:SI 147)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 125 126 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (set (reg/f:SI 150)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 126 13 10 2 arch/arm/kernel/smp.c:281 (set (reg:SI 147)
        (and:SI (reg:SI 147)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 126 8 2 arch/arm/kernel/smp.c:283 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116a2f80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x116a2f80>)
        (nil)))

(insn 8 10 11 2 arch/arm/kernel/smp.c:281 (set (reg/v:SI 146 [ cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 147)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 8 12 2 arch/arm/kernel/smp.c:283 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 12 11 14 2 arch/arm/kernel/smp.c:283 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 14 12 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (set (reg/f:SI 151)
        (plus:SI (reg/f:SI 150)
            (const_int 44 [0x2c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
                (const_int 44 [0x2c])))
        (nil)))

(insn 16 14 20 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/atomic.h:42 (parallel [
            (set (reg/v:SI 144 [ result ])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 0 [
                        (reg/f:SI 151)
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 150)
                                (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2074232))
            (set (reg/v:SI 143 [ tmp ])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=&r") 1 [
                        (reg/f:SI 151)
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 150)
                                (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2074232))
            (set (mem/s/j/c:SI (plus:SI (reg/f:SI 150)
                        (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                (asm_operands/v:SI ("@ atomic_add
1:	ldrex	%0, [%3]
	add	%0, %0, %4
	strex	%1, %0, [%3]
	teq	%1, #0
	bne	1b") ("=Qo") 2 [
                        (reg/f:SI 151)
                        (const_int 1 [0x1])
                        (mem/s/j/c:SI (plus:SI (reg/f:SI 150)
                                (const_int 44 [0x2c])) [0 init_mm.mm_count.counter+0 S4 A32])
                    ]
                     [
                        (asm_input:SI ("r") 0)
                        (asm_input:SI ("Ir") 0)
                        (asm_input:SI ("Qo") 0)
                    ] 2074232))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_UNUSED (reg/v:SI 144 [ result ])
            (expr_list:REG_UNUSED (reg/v:SI 143 [ tmp ])
                (expr_list:REG_UNUSED (reg:QI 24 cc)
                    (nil))))))

(insn 20 16 25 2 arch/arm/kernel/smp.c:290 (set (reg/f:SI 155 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 147)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 25 20 26 2 include/linux/cpumask.h:256 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 22 2 include/linux/cpumask.h:256 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 150)
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
                (const_int 348 [0x15c])))
        (nil)))

(insn 22 26 27 2 arch/arm/kernel/smp.c:290 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 155 [ <variable>.task ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])
        (reg/f:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 155 [ <variable>.task ])
        (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
            (nil))))

(call_insn 27 22 29 2 include/linux/cpumask.h:256 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 27 33 2 arch/arm/kernel/smp.c:292 (set (reg/f:SI 160 [ init_mm.pgd ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 150)
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
                    (const_int 36 [0x24]))) [0 init_mm.pgd+0 S4 A32])
        (nil)))

(insn 33 29 32 2 arch/arm/kernel/smp.c:292 (set (reg:SI 1 r1)
        (reg/f:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
            (nil))))

(insn 32 33 34 2 arch/arm/kernel/smp.c:292 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 160 [ init_mm.pgd ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 160 [ init_mm.pgd ])
        (nil)))

(call_insn 34 32 35 2 arch/arm/kernel/smp.c:292 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_switch_mm") [flags 0x41] <function_decl 0x111f0c80 cpu_v7_switch_mm>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 34 36 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 162)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 140 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 162)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 37 36 39 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8433656)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 39 37 40 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 140 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 40 39 41 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  gen 	 164
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 164)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 164)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8434296)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 146
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 44 43 45 4 108 "" [1 uses])

(note 45 44 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 4 NOTE_INSN_DELETED)

(insn 47 46 48 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 140 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 140 [ __tlb_flag ])
        (nil)))

(jump_insn 48 47 49 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 166
;; live  kill	 24 [cc]

;; Pred edge  4 [50.0%]  (fallthru)
(note 49 48 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 166)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 166)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8435064)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 139 168 169 171 172 174 176 177 179 180 181 182 183 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 133 137 139 168 169 171 172 174 176 177 179 180 181 182 183 187 188 189
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  4 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 52 51 53 6 109 "" [1 uses])

(note 53 52 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 58 53 85 6 NOTE_INSN_DELETED)

(note 85 58 88 6 NOTE_INSN_DELETED)

(note 88 85 54 6 NOTE_INSN_DELETED)

(insn 54 88 55 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8435448)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 55 54 56 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8435576)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(call_insn 56 55 123 6 arch/arm/kernel/smp.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_init") [flags 0x41] <function_decl 0x512d9780 cpu_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 123 56 124 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 139 [ D.27624 ])
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 124 123 60 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 139 [ D.27624 ])
        (and:SI (reg/f:SI 139 [ D.27624 ])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 60 124 61 6 arch/arm/kernel/smp.c:297 (set (reg:SI 168 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.27624 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 6 arch/arm/kernel/smp.c:297 (set (reg:SI 169)
        (plus:SI (reg:SI 168 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 168 [ <variable>.preempt_count ])
        (nil)))

(insn 62 61 63 6 arch/arm/kernel/smp.c:297 (set (mem/s/j:SI (plus:SI (reg/f:SI 139 [ D.27624 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg/f:SI 139 [ D.27624 ])
            (nil))))

(insn 63 62 64 6 arch/arm/kernel/smp.c:297 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8527585)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 64 63 65 6 arch/arm/kernel/smp.c:303 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 65 64 66 6 arch/arm/kernel/smp.c:303 (parallel [
            (call (mem:SI (symbol_ref:SI ("platform_secondary_init") [flags 0x41] <function_decl 0x10c9f180 platform_secondary_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 66 65 67 6 arch/arm/kernel/smp.c:305 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 67 66 68 6 arch/arm/kernel/smp.c:305 (parallel [
            (call (mem:SI (symbol_ref:SI ("notify_cpu_starting") [flags 0x41] <function_decl 0x1135a900 notify_cpu_starting>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 68 67 71 6 arch/arm/kernel/smp.c:307 (parallel [
            (call (mem:SI (symbol_ref:SI ("calibrate_delay") [flags 0x41] <function_decl 0x10e39a00 calibrate_delay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 71 68 76 6 arch/arm/kernel/smp.c:271 (set (reg/f:SI 171)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 76 71 79 6 arch/arm/kernel/smp.c:271 (set (reg/f:SI 176)
        (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>)) 167 {*arm_movsi_insn} (nil))

(insn 79 76 69 6 arch/arm/kernel/smp.c:316 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 69 79 80 6 arch/arm/kernel/smp.c:269 (set (reg/v:SI 137 [ __ptr ])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (nil))

(insn 80 69 72 6 arch/arm/kernel/smp.c:316 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 72 80 77 6 arch/arm/kernel/smp.c:271 (set (reg:SI 172)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 146 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 171)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 171)
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 146 [ cpu ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 77 72 70 6 arch/arm/kernel/smp.c:271 (set (reg:SI 177 [ loops_per_jiffy ])
        (mem/c/i:SI (reg/f:SI 176) [0 loops_per_jiffy+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 176)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("loops_per_jiffy") [flags 0xc0] <var_decl 0x10e34900 loops_per_jiffy>) [0 loops_per_jiffy+0 S4 A32])
            (nil))))

(insn 70 77 74 6 arch/arm/kernel/smp.c:269 (set (reg/v:SI 137 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 137 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8524033)) -1 (nil))

(insn 74 70 78 6 arch/arm/kernel/smp.c:271 (set (reg:SI 174)
        (plus:SI (reg/v:SI 137 [ __ptr ])
            (reg:SI 172))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg/v:SI 137 [ __ptr ])
            (nil))))

(insn 78 74 81 6 arch/arm/kernel/smp.c:271 (set (mem/s/j:SI (plus:SI (reg:SI 174)
                (const_int 56 [0x38])) [0 <variable>.loops_per_jiffy+0 S4 A32])
        (reg:SI 177 [ loops_per_jiffy ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 177 [ loops_per_jiffy ])
        (expr_list:REG_DEAD (reg:SI 174)
            (nil))))

(call_insn 81 78 82 6 arch/arm/kernel/smp.c:316 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 82 81 84 6 arch/arm/kernel/smp.c:321 (parallel [
            (call (mem:SI (symbol_ref:SI ("percpu_timer_setup") [flags 0x3] <function_decl 0x11513500 percpu_timer_setup>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 84 82 98 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 180)
        (plus:SI (reg/v:SI 146 [ cpu ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 98 84 86 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 187)
        (symbol_ref:SI ("cpu_active_mask") [flags 0xc0] <var_decl 0x10c66000 cpu_active_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 86 98 90 6 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 179 [ D.27601 ])
                (if_then_else:SI (ge (reg/v:SI 146 [ cpu ])
                        (const_int 0 [0x0]))
                    (reg/v:SI 146 [ cpu ])
                    (reg:SI 180)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 90 86 89 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 183)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 89 90 87 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 182)
        (and:SI (reg/v:SI 146 [ cpu ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ cpu ])
        (nil)))

(insn 87 89 99 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 181)
        (ashiftrt:SI (reg:SI 179 [ D.27601 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 179 [ D.27601 ])
        (expr_list:REG_EQUAL (div:SI (reg/v:SI 146 [ cpu ])
                (const_int 32 [0x20]))
            (nil))))

(insn 99 87 91 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 188 [ cpu_active_mask ])
        (mem/u/f/c/i:SI (reg/f:SI 187) [0 cpu_active_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 187)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_active_mask") [flags 0xc0] <var_decl 0x10c66000 cpu_active_mask>) [0 cpu_active_mask+0 S4 A32])
            (nil))))

(insn 91 99 100 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 133 [ shifttmp.991 ])
        (ashift:SI (reg:SI 183)
            (reg:SI 182))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183)
        (expr_list:REG_DEAD (reg:SI 182)
            (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                    (reg:SI 182))
                (nil)))))

(insn 100 91 121 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 189 [ D.27644 ])
        (plus:SI (mult:SI (reg:SI 181)
                (const_int 4 [0x4]))
            (reg/f:SI 188 [ cpu_active_mask ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 188 [ cpu_active_mask ])
        (expr_list:REG_DEAD (reg:SI 181)
            (nil))))

(jump_insn 121 100 122 6 arch/arm/kernel/smp.c:323 (set (pc)
        (label_ref 96)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189


;; Succ edge  8 [100.0%] 

(barrier 122 121 102)

;; Start of basic block ( 8) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189
;; live  gen 	
;; live  kill	

;; Pred edge  8 [91.0%] 
(code_label 102 122 94 7 111 "" [1 uses])

(note 94 102 95 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 7 arch/arm/kernel/smp.c:324 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 8531042)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189
;; lr  def 	 24 [cc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189
;; live  gen 	 24 [cc] 136
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
;; Pred edge  6 [100.0%] 
(code_label 96 95 97 8 110 "" [1 uses])

(note 97 96 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 103 97 101 8 NOTE_INSN_DELETED)

(insn 101 103 104 8 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 136 [ D.27643 ])
        (mem/v:SI (reg/f:SI 189 [ D.27644 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 104 101 105 8 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 136 [ D.27643 ])
                        (reg:SI 133 [ shifttmp.991 ]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 136 [ D.27643 ])
        (nil)))

(jump_insn 105 104 106 8 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 8 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 189
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 189


;; Succ edge  7 [91.0%] 
;; Succ edge  9 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  8 [9.0%]  (fallthru,loop_exit)
(note 106 105 107 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104376)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 108 107 109 9 arch/arm/kernel/smp.c:331 (parallel [
            (asm_operands/v ("cpsie f	@ __stf") ("") 0 []
                 [] 8531937)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(call_insn/j 109 108 110 9 arch/arm/kernel/smp.c:336 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_idle") [flags 0x41] <function_decl 0x10c8ed80 cpu_idle>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 110 109 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function cpu_die (cpu_die)[0:1409]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 6 (  1.2)


cpu_die

Dataflow summary:
def_info->table_size = 493, use_info->table_size = 40
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,2u} r1={5d} r2={5d} r3={5d} r11={1d,4u} r12={5d} r13={1d,10u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,1u} r25={1d,4u} r26={1d,3u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,2u} r136={1d,1u} r137={2d,2u} r139={1d,1u} r141={2d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u,1d} r146={1d,1u} 
;;    total ref usage 531{493d,37u,1e} in 22{18 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d11(1){ }d16(2){ }d21(3){ }d22(11){ }d27(12){ }d28(13){ }d33(14){ }d76(25){ }d77(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136 137 139
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 143 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 141 143 144 145 146
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u36(11){ }u37(13){ }u38(14){ }u39(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 17 to worklist
  Adding insn 32 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
Finished finding needed instructions:
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 31 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 8 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
;;   ======================================================
;;   -- basic block 2 from 42 to 15 -- before reload
;;   ======================================================

;;	  0-->    42 r137=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->    43 r137=r137&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->     8 r136=[r137+0x14]                  :cortex_a8_load_store_1
;;	  3-->     9 call [`idle_task_exit']           :cortex_a8_issue_branch
;;	  4-->    10 {asm_operands;clobber cc;clobber [:nothing
;;	  5-->    11 {asm_operands;clobber [scratch];} :nothing
;;	  6-->    12 r139=`outer_cache'                :cortex_a8_load_store_1
;;	  9-->    13 r134=[r139+0x18]                  :cortex_a8_load_store_1
;;	 11-->    14 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	 13-->    15 pc={(cc==0x0)?L18:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 13
;;   new head = 42
;;   new tail = 15

;;   ======================================================
;;   -- basic block 3 from 17 to 17 -- before reload
;;   ======================================================

;;	  0-->    17 call [r134]                       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 17
;;   new tail = 17

;;   ======================================================
;;   -- basic block 4 from 21 to 32 -- before reload
;;   ======================================================

;;	  0-->    21 r0=`*.LANCHOR3'                   :cortex_a8_load_store_1
;;	  1-->    22 call [`complete']                 :cortex_a8_issue_branch
;;	  1-->    23 r0=r136                           :cortex_a8_default
;;	  2-->    24 call [`platform_cpu_die']         :cortex_a8_issue_branch
;;	  2-->    40 r141=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  3-->    41 r141=r141&0xffffffffffffffc0      :cortex_a8_default
;;	  5-->    28 r143=[r141+0xc]                   :cortex_a8_load_store_1
;;	  8-->    29 r145=[r143+0x4]                   :cortex_a8_load_store_1
;;	 10-->    30 r146=r145+0x1fc0                  :cortex_a8_default
;;	 11-->    31 r144=r146+0x38                    :cortex_a8_default
;;	 12-->    32 asm_operands                      :nothing
;;	Ready list (final):  
;;   total time = 12
;;   new head = 21
;;   new tail = 32


;; Procedure interblock/speculative motions == 0/0 




cpu_die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,2u} r1={5d} r2={5d} r3={5d} r11={1d,4u} r12={5d} r13={1d,10u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,1u} r25={1d,4u} r26={1d,3u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r134={1d,2u} r136={1d,1u} r137={2d,2u} r139={1d,1u} r141={2d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u,1d} r146={1d,1u} 
;;    total ref usage 531{493d,37u,1e} in 22{18 regular + 4 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 137 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136 137 139
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 42 2 NOTE_INSN_DELETED)

(insn 42 6 43 2 arch/arm/kernel/smp.c:234 (set (reg:SI 137)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 8 2 arch/arm/kernel/smp.c:234 (set (reg:SI 137)
        (and:SI (reg:SI 137)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 43 9 2 arch/arm/kernel/smp.c:234 (set (reg/v:SI 136 [ cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 137)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/smp.c:236 (parallel [
            (call (mem:SI (symbol_ref:SI ("idle_task_exit") [flags 0x41] <function_decl 0x10fc4200 idle_task_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:35 (parallel [
            (asm_operands/v ("	cpsid i			@ arch_local_irq_disable") ("") 0 []
                 [] 1105528)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/smp.c:239 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8520161)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 139)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg/f:SI 134 [ D.27654 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 139)
                (const_int 24 [0x18])) [0 outer_cache.sync+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                        (const_int 24 [0x18]))) [0 outer_cache.sync+0 S4 A32])
            (nil))))

(insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.27654 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:94 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:95 (parallel [
            (call (mem:SI (reg/f:SI 134 [ D.27654 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 134 [ D.27654 ])
        (nil))
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 143 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 141 143 144 145 146
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [21.6%] 
(code_label 18 17 19 4 116 "" [1 uses])

(note 19 18 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 19 21 4 NOTE_INSN_DELETED)

(insn 21 26 22 4 arch/arm/kernel/smp.c:242 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(call_insn 22 21 23 4 arch/arm/kernel/smp.c:242 (parallel [
            (call (mem:SI (symbol_ref:SI ("complete") [flags 0x41] <function_decl 0x10d64000 complete>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 23 22 24 4 arch/arm/kernel/smp.c:248 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ cpu ])
        (nil)))

(call_insn 24 23 40 4 arch/arm/kernel/smp.c:248 (parallel [
            (call (mem:SI (symbol_ref:SI ("platform_cpu_die") [flags 0x41] <function_decl 0x10c9f480 platform_cpu_die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 40 24 41 4 arch/arm/kernel/smp.c:255 (set (reg:SI 141)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 41 40 28 4 arch/arm/kernel/smp.c:255 (set (reg:SI 141)
        (and:SI (reg:SI 141)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 41 29 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 143 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 141)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(insn 29 28 30 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 145 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 143 [ <variable>.task ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143 [ <variable>.task ])
        (nil)))

(insn 30 29 31 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 146)
        (plus:SI (reg/f:SI 145 [ <variable>.stack ])
            (const_int 8128 [0x1fc0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 145 [ <variable>.stack ])
        (nil)))

(insn 31 30 32 4 arch/arm/kernel/smp.c:255 (set (reg/f:SI 144)
        (plus:SI (reg/f:SI 146)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 145 [ <variable>.stack ])
                (const_int 8184 [0x1ff8]))
            (nil))))

(insn 32 31 44 4 arch/arm/kernel/smp.c:255 (asm_operands/v ("mov	sp, %0
	mov	fp, #0
	b	secondary_start_kernel") ("") 0 [
            (reg/f:SI 144)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8522209) -1 (expr_list:REG_DEAD (reg/f:SI 144)
        (nil)))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 44 32 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __cpu_die (__cpu_die)[0:1408]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 16 -- before reload
;;   ======================================================

;;	  0-->     2 r136=r0                           :cortex_a8_default
;;	  0-->     7 r0=0x1388                         :cortex_a8_default
;;	  1-->     8 r0=call [`msecs_to_jiffies']      :cortex_a8_issue_branch
;;	  1-->     9 r135=r0                           :cortex_a8_default
;;	  2-->    12 r1=r135                           :cortex_a8_default
;;	  2-->    11 r0=`*.LANCHOR3'                   :cortex_a8_load_store_1
;;	  3-->    13 r0=call [`wait_for_completion_time:cortex_a8_issue_branch
;;	 35-->    15 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 37-->    16 pc={(cc!=0x0)?L23:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 37
;;   new head = 2
;;   new tail = 16

;;   ======================================================
;;   -- basic block 3 from 19 to 21 -- before reload
;;   ======================================================

;;	  0-->    20 r1=r136                           :cortex_a8_default
;;	  0-->    19 r0=`*.LC16'                       :cortex_a8_load_store_1
;;	  1-->    21 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 19
;;   new tail = 21

;;   ======================================================
;;   -- basic block 4 from 26 to 33 -- before reload
;;   ======================================================

;;	  0-->    27 r1=r136                           :cortex_a8_default
;;	  0-->    26 r0=`*.LC17'                       :cortex_a8_load_store_1
;;	  1-->    28 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->    29 r0=r136                           :cortex_a8_default
;;	  2-->    30 r0=call [`platform_cpu_kill']     :cortex_a8_issue_branch
;;	 34-->    32 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 36-->    33 pc={(cc!=0x0)?L45:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 36
;;   new head = 26
;;   new tail = 33

;;   ======================================================
;;   -- basic block 5 from 36 to 38 -- before reload
;;   ======================================================

;;	  0-->    37 r1=r136                           :cortex_a8_default
;;	  0-->    36 r0=`*.LC18'                       :cortex_a8_load_store_1
;;	  1-->    38 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 36
;;   new tail = 38


;; Procedure interblock/speculative motions == 0/0 




__cpu_die

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,10u} r1={11d,4u} r2={7d} r3={7d} r11={1d,6u} r12={7d} r13={1d,12u} r14={5d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={8d,2u} r25={1d,6u} r26={1d,5u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r135={1d,1u} r136={1d,4u} 
;;    total ref usage 775{724d,51u,0e} in 22{16 regular + 6 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135 136
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 14 2 NOTE_INSN_FUNCTION_BEG)

(note 14 3 2 2 NOTE_INSN_DELETED)

(insn 2 14 7 2 arch/arm/kernel/smp.c:213 (set (reg/v:SI 136 [ cpu ])
        (reg:SI 0 r0 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ cpu ])
        (nil)))

(insn 7 2 8 2 arch/arm/kernel/smp.c:214 (set (reg:SI 0 r0)
        (const_int 5000 [0x1388])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 5000 [0x1388])
        (nil)))

(call_insn 8 7 9 2 arch/arm/kernel/smp.c:214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("msecs_to_jiffies") [flags 0x41] <function_decl 0x10ce4500 msecs_to_jiffies>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 12 2 arch/arm/kernel/smp.c:214 (set (reg:SI 135 [ D.26047 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 9 11 2 arch/arm/kernel/smp.c:214 (set (reg:SI 1 r1)
        (reg:SI 135 [ D.26047 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.26047 ])
        (nil)))

(insn 11 12 13 2 arch/arm/kernel/smp.c:214 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR3") [flags 0x182])
        (nil)))

(call_insn 13 11 15 2 arch/arm/kernel/smp.c:214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("wait_for_completion_timeout") [flags 0x41] <function_decl 0x10d1ad80 wait_for_completion_timeout>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 13 16 2 arch/arm/kernel/smp.c:214 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 16 15 17 2 arch/arm/kernel/smp.c:214 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6000 [0x1770])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  3 [40.0%]  (fallthru)
;; Succ edge  4 [60.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  2 [40.0%]  (fallthru)
(note 17 16 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 17 19 3 arch/arm/kernel/smp.c:215 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ cpu ])
        (nil)))

(insn 19 20 21 3 arch/arm/kernel/smp.c:215 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116062c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x116062c0>)
        (nil)))

(call_insn/j 21 19 22 3 arch/arm/kernel/smp.c:215 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 22 21 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [60.0%] 
(code_label 23 22 24 4 121 "" [1 uses])

(note 24 23 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 31 24 27 4 NOTE_INSN_DELETED)

(insn 27 31 26 4 arch/arm/kernel/smp.c:218 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 26 27 28 4 arch/arm/kernel/smp.c:218 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116c5210>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x116c5210>)
        (nil)))

(call_insn 28 26 29 4 arch/arm/kernel/smp.c:218 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 4 arch/arm/kernel/smp.c:220 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 32 4 arch/arm/kernel/smp.c:220 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_cpu_kill") [flags 0x41] <function_decl 0x10c9f500 platform_cpu_kill>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 32 30 33 4 arch/arm/kernel/smp.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 33 32 34 4 arch/arm/kernel/smp.c:220 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  4 [0.0%]  (fallthru)
(note 34 33 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 37 34 36 5 arch/arm/kernel/smp.c:221 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ cpu ])
        (nil)))

(insn 36 37 38 5 arch/arm/kernel/smp.c:221 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x116c5450>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC18") [flags 0x82] <string_cst 0x116c5450>)
        (nil)))

(call_insn/j 38 36 39 5 arch/arm/kernel/smp.c:221 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 39 38 45)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 45 39 48 6 123 "" [1 uses])

(note 48 45 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 50 48 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __cpu_disable (__cpu_disable)[0:1407]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 25 (  1.9)


__cpu_disable

Dataflow summary:
def_info->table_size = 989, use_info->table_size = 121
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,10u} r1={12d,3u} r2={9d} r3={9d} r11={1d,12u} r12={9d} r13={1d,21u} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={15d,5u} r25={1d,14u} r26={1d,11u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r133={1d,2u} r134={1d,2u} r135={2d,2u} r138={1d,1u} r139={1d,4u} r140={2d,4u,1d} r141={1d,3u} r143={1d,2u} r145={2d,3u} r148={1d,1u} r151={1d,1u,1d} r152={1d,1u} r154={1d,1u} r156={1d,1u} r160={1d,1u} r163={1d,1u} r167={1d,1u} r168={1d,1u} 
;;    total ref usage 1095{984d,109u,2e} in 56{48 regular + 8 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d15(0){ }d27(1){ }d36(2){ }d45(3){ }d46(11){ }d55(12){ }d56(13){ }d65(14){ }d153(25){ }d154(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 12 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 141 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 141 145
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 148 151 152 154 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 147 148 151 152 154 156
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141

( 3 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  gen 	
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141

( 3 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 160
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141

( 5 6 )->[7]->( 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 0 [r0] 140 167 168
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168

( 10 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  gen 	 24 [cc] 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168

( 9 8 7 )->[10]->( 8 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 167 168
;; lr  def 	 24 [cc] 138 140 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  gen 	 24 [cc] 138 140 163
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168

( 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139

( 2 11 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u116(0){ }u117(11){ }u118(13){ }u119(14){ }u120(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 40 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 18 to worklist
  Adding insn 17 to worklist
  Adding insn 43 to worklist
  Adding insn 48 to worklist
  Adding insn 51 to worklist
  Adding insn 110 to worklist
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 54 to worklist
  Adding insn 65 to worklist
  Adding insn 70 to worklist
  Adding insn 81 to worklist
  Adding insn 76 to worklist
  Adding insn 74 to worklist
  Adding insn 85 to worklist
  Adding insn 98 to worklist
Finished finding needed instructions:
processing block 12 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 92 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
  Adding insn 69 to worklist
  Adding insn 68 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168
  Adding insn 64 to worklist
  Adding insn 63 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
  Adding insn 84 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
  Adding insn 80 to worklist
  Adding insn 77 to worklist
  Adding insn 73 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
  Adding insn 79 to worklist
  Adding insn 75 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
  Adding insn 50 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
  Adding insn 47 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 145
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 26 (    2)
;;   ======================================================
;;   -- basic block 10 from 73 to 81 -- before reload
;;   ======================================================

changing bb of uid 68
  from 9 to 10
;;	  0-->    68 r0=r141                           :cortex_a8_default
;;	  0-->    73 r163=[r140+0x1d0]                 :cortex_a8_load_store_1
;;	  3-->    74 [sfp-0x4]=r163                    :cortex_a8_load_store_1
;;	  4-->    76 r138=[r167]                       :cortex_a8_load_store_1
;;	  6-->    77 r140=r138-0x1d0                   :cortex_a8_default
;;	  7-->    80 cc=cmp(r140,r168)                 :cortex_a8_default
;;	  9-->    81 pc={(cc!=0x0)?L78:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 73
;;   new tail = 81

;;   ======================================================
;;   -- basic block 8 from 63 to 65 -- before reload
;;   ======================================================

;;	  0-->    63 r143=[r140+0x1ec]                 :cortex_a8_load_store_1
changing bb of uid 69
  from 9 to 8
;;	  2-->    69 r1=r143+0x15c                     :cortex_a8_default
;;	  2-->    64 cc=cmp(r143,0x0)                  :cortex_a8_default
;;	  4-->    65 pc={(cc==0x0)?L109:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 63
;;   new tail = 65

;;   ======================================================
;;   -- basic block 9 from 70 to 70 -- before reload
;;   ======================================================

;;	  0-->    70 call [`_clear_bit']               :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 70
;;   new tail = 70

;;   ======================================================
;;   -- basic block 2 from 112 to 13 -- before reload
;;   ======================================================

;;	  0-->   112 r145=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  1-->   113 r145=r145&0xffffffffffffffc0      :cortex_a8_default
;;	  3-->     8 r141=[r145+0x14]                  :cortex_a8_load_store_1
;;	  5-->     9 r0=r141                           :cortex_a8_default
;;	  6-->    10 r0=call [`platform_cpu_disable']  :cortex_a8_issue_branch
;;	 38-->    12 {cc=cmp(r0,0x0);r139=r0;}         :cortex_a8_default
;;	 40-->    13 pc={(cc!=0x0)?L86:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 40
;;   new head = 112
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 15 to 40 -- before reload
;;   ======================================================

;;	  0-->    15 r0=r141                           :cortex_a8_default
;;	  0-->    16 r1=r139                           :cortex_a8_default
;;	  1-->    17 call [`set_cpu_online']           :cortex_a8_issue_branch
;;	  2-->    18 call [`migrate_irqs']             :cortex_a8_issue_branch
;;	  2-->    25 r151=[r145+0x14]                  :cortex_a8_load_store_1
;;	  3-->    22 r148=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  3-->    29 r0=r139                           :cortex_a8_default
;;	  4-->    20 r135=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  5-->    21 r135=asm_operands                 :nothing
;;	  6-->    26 r152=[r151*0x4+r148]              :cortex_a8_load_store_1
;;	  8-->    27 r134=r135+r152                    :cortex_a8_default
;;	  9-->    30 r1=r134                           :cortex_a8_default
;;	 10-->    31 call [[r134+0x38]]                :cortex_a8_issue_branch
;;	 10-->    32 r154=`cpu_cache'                  :cortex_a8_load_store_1
;;	 11-->    34 call [[r154+0x4]]                 :cortex_a8_issue_branch
;;	 11-->    35 r156=`cpu_tlb'                    :cortex_a8_load_store_1
;;	 14-->    36 r133=[r156+0x8]                   :cortex_a8_load_store_1
;;	 15-->    37 {asm_operands;clobber [scratch];} :nothing
;;	 16-->    39 cc=cmp(zxt(r133,0x1,0xc),0x0)     :cortex_a8_default
;;	 18-->    40 pc={(cc==0x0)?L44:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 18
;;   new head = 15
;;   new tail = 40

;;   ======================================================
;;   -- basic block 4 from 43 to 43 -- before reload
;;   ======================================================

;;	  0-->    43 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 43
;;   new tail = 43

;;   ======================================================
;;   -- basic block 5 from 47 to 48 -- before reload
;;   ======================================================

;;	  0-->    47 cc=cmp(zxt(r133,0x1,0x14),0x0)    :cortex_a8_default
;;	  2-->    48 pc={(cc==0x0)?L52:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 47
;;   new tail = 48

;;   ======================================================
;;   -- basic block 6 from 50 to 51 -- before reload
;;   ======================================================

;;	  0-->    50 r160=0x0                          :cortex_a8_default
;;	  1-->    51 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 50
;;   new tail = 51

;;   ======================================================
;;   -- basic block 7 from 54 to 110 -- before reload
;;   ======================================================

;;	  0-->    54 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    55 {asm_operands;clobber [scratch];} :nothing
;;	  2-->    59 r140=`init_task'                  :cortex_a8_load_store_1
;;	  2-->    75 r167=sfp-0x4                      :cortex_a8_default
;;	  3-->    57 r0=`tasklist_lock'                :cortex_a8_load_store_1
;;	  4-->    58 call [`_raw_read_lock']           :cortex_a8_issue_branch
;;	  4-->    79 r168=r140                         :cortex_a8_default
;;	  5-->   110 pc=L109                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 54
;;   new tail = 110

;;   ======================================================
;;   -- basic block 11 from 84 to 85 -- before reload
;;   ======================================================

;;	  0-->    84 r0=`tasklist_lock'                :cortex_a8_load_store_1
;;	  1-->    85 call [`_raw_read_unlock']         :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 84
;;   new tail = 85

;;   ======================================================
;;   -- basic block 12 from 92 to 98 -- before reload
;;   ======================================================

;;	  0-->    92 r0=r139                           :cortex_a8_default
;;	  0-->    98 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 92
;;   new tail = 98


;; Procedure interblock/speculative motions == 2/2 




__cpu_disable

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,10u} r1={12d,3u} r2={9d} r3={9d} r11={1d,12u} r12={9d} r13={1d,21u} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={15d,5u} r25={1d,14u} r26={1d,11u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r133={1d,2u} r134={1d,2u} r135={2d,2u} r138={1d,1u} r139={1d,4u} r140={2d,4u,1d} r141={1d,3u} r143={1d,2u} r145={2d,3u} r148={1d,1u} r151={1d,1u,1d} r152={1d,1u} r154={1d,1u} r156={1d,1u} r160={1d,1u} r163={1d,1u} r167={1d,1u} r168={1d,1u} 
;;    total ref usage 1095{984d,109u,2e} in 56{48 regular + 8 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 141 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 139 141 145
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 11 2 NOTE_INSN_DELETED)

(note 11 6 112 2 NOTE_INSN_DELETED)

(insn 112 11 113 2 arch/arm/kernel/smp.c:165 (set (reg:SI 145)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 113 112 8 2 arch/arm/kernel/smp.c:165 (set (reg:SI 145)
        (and:SI (reg:SI 145)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 113 9 2 arch/arm/kernel/smp.c:165 (set (reg/v:SI 141 [ cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/smp.c:169 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 12 2 arch/arm/kernel/smp.c:169 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_cpu_disable") [flags 0x41] <function_decl 0x10c9f300 platform_cpu_disable>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 10 13 2 arch/arm/kernel/smp.c:170 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 139 [ ret ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 13 12 14 2 arch/arm/kernel/smp.c:170 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 12 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 141 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145


;; Succ edge  12 [61.0%] 
;; Succ edge  3 [39.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 148 151 152 154 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141 145
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 148 151 152 154 156
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 14 13 28 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 28 14 33 3 NOTE_INSN_DELETED)

(note 33 28 38 3 NOTE_INSN_DELETED)

(note 38 33 15 3 NOTE_INSN_DELETED)

(insn 15 38 16 3 arch/arm/kernel/smp.c:177 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 arch/arm/kernel/smp.c:177 (set (reg:SI 1 r1)
        (reg/v:SI 139 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 17 16 18 3 arch/arm/kernel/smp.c:177 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_cpu_online") [flags 0x41] <function_decl 0x10c85600 set_cpu_online>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 18 17 25 3 arch/arm/kernel/smp.c:182 (parallel [
            (call (mem:SI (symbol_ref:SI ("migrate_irqs") [flags 0x41] <function_decl 0x11007580 migrate_irqs>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 25 18 22 3 arch/arm/kernel/smp.c:540 (set (reg:SI 151 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 22 25 29 3 arch/arm/kernel/smp.c:540 (set (reg/f:SI 148)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 29 22 20 3 arch/arm/kernel/smp.c:542 (set (reg:SI 0 r0)
        (reg/v:SI 139 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 20 29 21 3 arch/arm/kernel/smp.c:540 (set (reg/v:SI 135 [ __ptr ])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 26 3 arch/arm/kernel/smp.c:540 (set (reg/v:SI 135 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 135 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8558723)) -1 (nil))

(insn 26 21 27 3 arch/arm/kernel/smp.c:540 (set (reg:SI 152)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 151 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 148)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 148)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 151 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 27 26 30 3 arch/arm/kernel/smp.c:540 (set (reg/v/f:SI 134 [ evt ])
        (plus:SI (reg/v:SI 135 [ __ptr ])
            (reg:SI 152))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/v:SI 135 [ __ptr ])
            (nil))))

(insn 30 27 31 3 arch/arm/kernel/smp.c:542 (set (reg:SI 1 r1)
        (reg/v/f:SI 134 [ evt ])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 3 arch/arm/kernel/smp.c:542 (parallel [
            (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/v/f:SI 134 [ evt ])
                            (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/v/f:SI 134 [ evt ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 34 3 arch/arm/kernel/smp.c:193 (set (reg/f:SI 154)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1141de40 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(call_insn 34 32 35 3 arch/arm/kernel/smp.c:193 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 154)
                            (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 154)
        (nil))
    (nil))

(insn 35 34 36 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 156)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 156)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x114e7c00 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 37 36 39 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8433656)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 39 37 40 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 40 39 41 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%]  (fallthru)
(note 41 40 43 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 43 41 44 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg/v:SI 139 [ ret ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8434296)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139 141
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 44 43 45 5 129 "" [1 uses])

(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 5 NOTE_INSN_DELETED)

(insn 47 46 48 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 48 47 49 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 160
;; live  kill	 24 [cc]

;; Pred edge  5 [50.0%]  (fallthru)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 160)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 160)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8435064)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; live  gen 	 0 [r0] 140 167 168
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 52 51 53 7 130 "" [1 uses])

(note 53 52 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8435448)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 55 54 59 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8435576)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 59 55 75 7 arch/arm/kernel/smp.c:197 (set (reg/v/f:SI 140 [ p ])
        (symbol_ref:SI ("init_task") [flags 0xc0] <var_decl 0x10fc0ea0 init_task>)) 167 {*arm_movsi_insn} (nil))

(insn 75 59 57 7 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/f:SI 167 [ __ptr.396 ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 57 75 58 7 arch/arm/kernel/smp.c:196 (set (reg:SI 0 r0)
        (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)
        (nil)))

(call_insn 58 57 79 7 arch/arm/kernel/smp.c:196 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_read_lock") [flags 0x41] <function_decl 0x10aef700 _raw_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 79 58 110 7 arch/arm/kernel/smp.c:197 (set (reg/f:SI 168)
        (reg/v/f:SI 140 [ p ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_task") [flags 0xc0] <var_decl 0x10fc0ea0 init_task>)
        (nil)))

(jump_insn 110 79 111 7 arch/arm/kernel/smp.c:197 (set (pc)
        (label_ref 109)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168


;; Succ edge  10 [100.0%] 

(barrier 111 110 78)

;; Start of basic block ( 10) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 143
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  10 [91.0%] 
(code_label 78 111 62 8 132 "" [1 uses])

(note 62 78 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 69 8 arch/arm/kernel/smp.c:198 (set (reg/f:SI 143 [ D.26034 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ p ])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 69 63 64 8 include/linux/cpumask.h:266 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 143 [ D.26034 ])
            (const_int 348 [0x15c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 143 [ D.26034 ])
        (nil)))

(insn 64 69 65 8 arch/arm/kernel/smp.c:198 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 143 [ D.26034 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 66 8 arch/arm/kernel/smp.c:198 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168


;; Succ edge  9 [69.8%]  (fallthru)
;; Succ edge  10 [30.2%]  (dfs_back)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 143 167 168
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  8 [69.8%]  (fallthru)
(note 66 65 67 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 67 66 70 9 NOTE_INSN_DELETED)

(call_insn 70 67 109 9 include/linux/cpumask.h:266 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 167 168
;; lr  def 	 24 [cc] 138 140 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  gen 	 24 [cc] 138 140 163
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [30.2%]  (dfs_back)
;; Pred edge  7 [100.0%] 
(code_label 109 70 108 10 136 "" [2 uses])

(note 108 109 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 108 73 10 include/linux/cpumask.h:266 (set (reg:SI 0 r0)
        (reg/v:SI 141 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 73 68 74 10 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/f:SI 163 [ <variable>.tasks.next ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 140 [ p ])
                (const_int 464 [0x1d0])) [0 <variable>.tasks.next+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 140 [ p ])
        (nil)))

(insn 74 73 76 10 arch/arm/kernel/smp.c:197 discrim 1 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 __ptr+0 S4 A32])
        (reg/f:SI 163 [ <variable>.tasks.next ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163 [ <variable>.tasks.next ])
        (nil)))

(insn 76 74 77 10 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/v/f:SI 138 [ _________p1 ])
        (mem/v/f:SI (reg/f:SI 167 [ __ptr.396 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 80 10 arch/arm/kernel/smp.c:197 discrim 1 (set (reg/v/f:SI 140 [ p ])
        (plus:SI (reg/v/f:SI 138 [ _________p1 ])
            (const_int -464 [0xfffffffffffffe30]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 138 [ _________p1 ])
        (nil)))

(insn 80 77 81 10 arch/arm/kernel/smp.c:197 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 140 [ p ])
            (reg/f:SI 168))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v/f:SI 140 [ p ])
            (symbol_ref:SI ("init_task") [flags 0xc0] <var_decl 0x10fc0ea0 init_task>))
        (nil)))

(jump_insn 81 80 82 10 arch/arm/kernel/smp.c:197 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 10 -> ( 8 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141 167 168


;; Succ edge  8 [91.0%] 
;; Succ edge  11 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  10 [9.0%]  (fallthru,loop_exit)
(note 82 81 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 84 82 85 11 arch/arm/kernel/smp.c:201 (set (reg:SI 0 r0)
        (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("tasklist_lock") [flags 0xc0] <var_decl 0x10f3f300 tasklist_lock>)
        (nil)))

(call_insn 85 84 86 11 arch/arm/kernel/smp.c:201 (parallel [
            (call (mem:SI (symbol_ref:SI ("_raw_read_unlock") [flags 0x41] <function_decl 0x10aefc00 _raw_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 2 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [61.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 86 85 87 12 128 "" [1 uses])

(note 87 86 92 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 92 87 98 12 arch/arm/kernel/smp.c:204 (set (reg/i:SI 0 r0)
        (reg/v:SI 139 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ ret ])
        (nil)))

(insn 98 92 114 12 arch/arm/kernel/smp.c:204 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 12 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 114 98 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __cpu_up (__cpu_up)[0:1406] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)


__cpu_up

Dataflow summary:
def_info->table_size = 1852, use_info->table_size = 226
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,23u} r1={28d,12u} r2={21d,5u} r3={16d} r11={1d,20u} r12={16d} r13={1d,35u} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={24d,8u} r25={1d,20u} r26={1d,19u} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} r133={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u,1d} r140={1d,2u} r141={1d,1u} r142={2d,2u} r143={4d,2u} r144={1d,5u} r145={2d,7u} r146={1d,2u} r147={1d,1u} r149={1d,1u} r155={1d,10u,2d} r157={1d,1u} r158={1d,1u} r161={1d,6u} r162={1d,1u,1d} r163={1d,1u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r173={1d,1u} r181={1d,2u} r183={1d,1u} r184={1d,1u} r185={1d,2u} r186={1d,1u} r188={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r198={1d,2u} r199={1d,2u} r204={1d,1u} r205={1d,1u} 
;;    total ref usage 2068{1849d,215u,4e} in 117{102 regular + 15 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d29(0){ }d57(1){ }d78(2){ }d94(3){ }d95(11){ }d111(12){ }d112(13){ }d128(14){ }d288(25){ }d289(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 145 146 155 157 158
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 145 146 155 156 157 158
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 155
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 155
;; live  gen 	 0 [r0] 24 [cc] 145
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155

( 3 )->[4]->( 20 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  gen 	 0 [r0] 1 [r1] 143
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143

( 3 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155

( 2 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155

( 6 5 )->[7]->( 8 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  gen 	 0 [r0] 24 [cc] 144
;; live  kill	 14 [lr]
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145 155
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155

( 7 )->[8]->( 20 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 143
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143

( 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 161 162 163 164 166 168 169 173
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 140 161 162 163 164 166 168 169 173
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155

( 10 9 )->[11]->( 12 18 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 143
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155

( 11 )->[12]->( 15 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc] 133 136 139 141 149 181 183 184 185 186 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  gen 	 133 136 139 141 149 181 183 184 185 186 204 205
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205

( 15 )->[13]->( 16 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 205
;; lr  def 	 24 [cc] 138 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  gen 	 24 [cc] 138 188
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205

( 13 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205

( 14 12 )->[15]->( 13 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 204
;; lr  def 	 24 [cc] 147 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  gen 	 24 [cc] 147 191
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205

( 15 13 )->[16]->( 17 19 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144 155 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 185
;; lr  def 	 24 [cc] 135 192 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144 155 185
;; live  gen 	 24 [cc] 135 192 193 194
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155

( 16 )->[17]->( 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 155
;; live  gen 	 0 [r0] 1 [r1] 143
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144

( 11 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144

( 16 18 17 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u191(11){ }u192(13){ }u193(25){ }u194(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 198 199
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143

( 19 4 8 )->[20]->( 1 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0]
;; live  kill	
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 20 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u219(0){ }u220(11){ }u221(13){ }u222(14){ }u223(25){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 205 to worklist
  Adding insn 24 to worklist
  Adding insn 207 to worklist
  Adding insn 30 to worklist
  Adding insn 37 to worklist
  Adding insn 45 to worklist
  Adding insn 42 to worklist
  Adding insn 209 to worklist
  Adding insn 85 to worklist
  Adding insn 81 to worklist
  Adding insn 74 to worklist
  Adding insn 71 to worklist
  Adding insn 68 to worklist
  Adding insn 63 to worklist
  Adding insn 57 to worklist
  Adding insn 96 to worklist
  Adding insn 104 to worklist
  Adding insn 101 to worklist
  Adding insn 211 to worklist
  Adding insn 107 to worklist
  Adding insn 128 to worklist
  Adding insn 125 to worklist
  Adding insn 132 to worklist
  Adding insn 131 to worklist
  Adding insn 140 to worklist
  Adding insn 136 to worklist
  Adding insn 150 to worklist
  Adding insn 146 to worklist
  Adding insn 213 to worklist
  Adding insn 155 to worklist
  Adding insn 165 to worklist
  Adding insn 185 to worklist
  Adding insn 181 to worklist
  Adding insn 177 to worklist
  Adding insn 173 to worklist
  Adding insn 170 to worklist
  Adding insn 198 to worklist
Finished finding needed instructions:
processing block 20 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 192 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
  Adding insn 47 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
  Adding insn 184 to worklist
  Adding insn 183 to worklist
  Adding insn 180 to worklist
  Adding insn 179 to worklist
  Adding insn 178 to worklist
  Adding insn 176 to worklist
  Adding insn 175 to worklist
  Adding insn 174 to worklist
  Adding insn 169 to worklist
  Adding insn 168 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
  Adding insn 156 to worklist
  Adding insn 154 to worklist
  Adding insn 153 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
  Adding insn 149 to worklist
  Adding insn 147 to worklist
  Adding insn 144 to worklist
  Adding insn 143 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
  Adding insn 204 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
  Adding insn 127 to worklist
  Adding insn 123 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
  Adding insn 139 to worklist
  Adding insn 138 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
  Adding insn 122 to worklist
  Adding insn 135 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 116 to worklist
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 111 to worklist
  Adding insn 108 to worklist
  Adding insn 106 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
  Adding insn 164 to worklist
  Adding insn 163 to worklist
  Adding insn 162 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
  Adding insn 103 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
  Adding insn 95 to worklist
  Adding insn 94 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161
  Adding insn 84 to worklist
  Adding insn 83 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 75 to worklist
  Adding insn 73 to worklist
  Adding insn 70 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 62 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
processing block 7 lr out =  0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145 155
  Adding insn 44 to worklist
  Adding insn 41 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
  Adding insn 18 to worklist
  Adding insn 17 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
  Adding insn 36 to worklist
  Adding insn 35 to worklist
processing block 2 lr out =  0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 42 (    2)
;;   ======================================================
;;   -- basic block 15 from 136 to 140 -- before reload
;;   ======================================================

;;	  0-->   136 r147=[r204]                       :cortex_a8_load_store_1
changing bb of uid 204
  from 14 to 15
;;	  0-->   204 r0=0xa                            :cortex_a8_default
;;	  2-->   138 r191=r147-r141                    :cortex_a8_default
;;	  3-->   139 cc=cmp(r191,0x0)                  :cortex_a8_default
;;	  5-->   140 pc={(cc<0x0)?L137:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 136
;;   new tail = 140

;;   ======================================================
;;   -- basic block 13 from 123 to 128 -- before reload
;;   ======================================================

;;	  0-->   123 r188=[r205]                       :cortex_a8_load_store_1
;;	  3-->   125 r138=[r188+r136]                  :cortex_a8_load_store_1
;;	  5-->   127 {cc=cmp(r138&r133,0x0);clobber scr:cortex_a8_default
;;	  7-->   128 pc={(cc!=0x0)?L141:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 123
;;   new tail = 128

;;   ======================================================
;;   -- basic block 14 from 131 to 132 -- before reload
;;   ======================================================

;;	  0-->   131 call [`__udelay']                 :cortex_a8_issue_branch
;;	  1-->   132 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 131
;;   new tail = 132

;;   ======================================================
;;   -- basic block 2 from 2 to 13 -- before reload
;;   ======================================================

;;	  0-->     8 r157=`__per_cpu_offset'           :cortex_a8_load_store_1
;;	  0-->     2 r155=r0                           :cortex_a8_default
;;	  1-->     6 r142=`cpu_data'                   :cortex_a8_load_store_1
;;	  2-->     7 r142=asm_operands                 :nothing
;;	  3-->     9 r158=[r155*0x4+r157]              :cortex_a8_load_store_1
;;	  5-->    10 r146=r142+r158                    :cortex_a8_default
;;	  7-->    11 r145=[r146+0x34]                  :cortex_a8_load_store_1
;;	  9-->    12 cc=cmp(r145,0x0)                  :cortex_a8_default
;;	 11-->    13 pc={(cc!=0x0)?L33:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 2
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 16 to 19 -- before reload
;;   ======================================================

;;	  0-->    16 r0=call [`fork_idle']             :cortex_a8_issue_branch
;;	  0-->    17 r145=r0                           :cortex_a8_default
;;	  1-->    18 cc=cmp(r145,0xfffffffffffff000)   :cortex_a8_default
;;	  3-->    19 pc={(leu(cc,0x0))?L28:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 16
;;   new tail = 19

;;   ======================================================
;;   -- basic block 4 from 22 to 205 -- before reload
;;   ======================================================

;;	  0-->    23 r1=r155                           :cortex_a8_default
;;	  0-->    22 r0=`*.LC19'                       :cortex_a8_load_store_1
;;	  1-->    24 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->    25 r143=r145                         :cortex_a8_default
;;	  2-->   205 pc=L186                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 22
;;   new tail = 205

;;   ======================================================
;;   -- basic block 5 from 30 to 207 -- before reload
;;   ======================================================

;;	  0-->    30 [r146+0x34]=r145                  :cortex_a8_load_store_1
;;	  0-->   207 pc=L38                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 30
;;   new tail = 207

;;   ======================================================
;;   -- basic block 6 from 35 to 37 -- before reload
;;   ======================================================

;;	  0-->    35 r0=r145                           :cortex_a8_default
;;	  0-->    36 r1=r155                           :cortex_a8_default
;;	  1-->    37 call [`init_idle']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 35
;;   new tail = 37

;;   ======================================================
;;   -- basic block 7 from 41 to 45 -- before reload
;;   ======================================================

;;	  0-->    41 r0=`init_mm'                      :cortex_a8_load_store_1
;;	  1-->    42 r0=call [`pgd_alloc']             :cortex_a8_issue_branch
;;	 33-->    44 {cc=cmp(r0,0x0);r144=r0;}         :cortex_a8_default
;;	 35-->    45 pc={(cc!=0x0)?L50:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 41
;;   new tail = 45

;;   ======================================================
;;   -- basic block 8 from 47 to 209 -- before reload
;;   ======================================================

;;	  0-->    47 r143=0xfffffffffffffff4           :cortex_a8_default
;;	  0-->   209 pc=L186                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 47
;;   new tail = 209

;;   ======================================================
;;   -- basic block 9 from 55 to 85 -- before reload
;;   ======================================================

;;	  0-->    55 r1=const(`_stext'+0x40000000)     :cortex_a8_load_store_1
;;	  1-->    56 r2=const(`_etext'+0x40000000)     :cortex_a8_load_store_1
;;	  2-->    57 call [`identity_mapping_add']     :cortex_a8_issue_branch
;;	  2-->    60 r0=r144                           :cortex_a8_default
;;	  3-->    61 r1=const(`_sdata'+0x40000000)     :cortex_a8_load_store_1
;;	  4-->    62 r2=const(`_edata'+0x40000000)     :cortex_a8_load_store_1
;;	  5-->    63 call [`identity_mapping_add']     :cortex_a8_issue_branch
;;	  5-->    64 r161=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  6-->    65 r162=[r145+0x4]                   :cortex_a8_load_store_1
;;	  6-->    70 r166=r144+0x40000000              :cortex_a8_default
;;	  7-->    73 r168=const(`swapper_pg_dir'+0x4000:cortex_a8_load_store_1
;;	  7-->    79 r0=r161+0x1c                      :cortex_a8_default
;;	  8-->    66 r164=r162+0x1fc0                  :cortex_a8_default
;;	  8-->    71 [r161+0x1c]=r166                  :cortex_a8_load_store_1
;;	  9-->    67 r163=r164+0x38                    :cortex_a8_default
;;	  9-->    68 [r161+0x24]=r163                  :cortex_a8_load_store_1
;;	 10-->    74 [r161+0x20]=r168                  :cortex_a8_load_store_1
;;	 10-->    80 r1=0xc                            :cortex_a8_default
;;	 11-->    75 r169=`cpu_cache'                  :cortex_a8_load_store_1
;;	 12-->    81 call [[r169+0x18]]                :cortex_a8_issue_branch
;;	 12-->    82 r173=`outer_cache'                :cortex_a8_load_store_1
;;	 15-->    83 r140=[r173+0x4]                   :cortex_a8_load_store_1
;;	 17-->    84 cc=cmp(r140,0x0)                  :cortex_a8_default
;;	 19-->    85 pc={(cc==0x0)?L97:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 19
;;   new head = 55
;;   new tail = 85

;;   ======================================================
;;   -- basic block 10 from 94 to 96 -- before reload
;;   ======================================================

;;	  0-->    95 r1=r161+0x40000028                :cortex_a8_default
;;	  0-->    94 r0=r161+0x4000001c                :cortex_a8_default
;;	  1-->    96 call [r140]                       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 94
;;   new tail = 96

;;   ======================================================
;;   -- basic block 11 from 99 to 104 -- before reload
;;   ======================================================

;;	  0-->   100 r1=r145                           :cortex_a8_default
;;	  0-->    99 r0=r155                           :cortex_a8_default
;;	  1-->   101 r0=call [`boot_secondary']        :cortex_a8_issue_branch
;;	 33-->   103 {cc=cmp(r0,0x0);r143=r0;}         :cortex_a8_default
;;	 35-->   104 pc={(cc!=0x0)?L159:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 99
;;   new tail = 104

;;   ======================================================
;;   -- basic block 12 from 106 to 211 -- before reload
;;   ======================================================

;;	  0-->   106 r181=`jiffies'                    :cortex_a8_load_store_1
;;	  0-->   111 r184=r155+0x1f                    :cortex_a8_default
;;	  1-->   113 {r183={(r155>=0x0)?r155:r184};clob:cortex_a8_default
;;	  1-->   117 r186=0x1                          :cortex_a8_default
;;	  2-->   116 r139=r155&0x1f                    :cortex_a8_default
;;	  2-->   135 r204=r181                         :cortex_a8_default
;;	  3-->   114 r185=r183>>0x5                    :cortex_a8_default
;;	  3-->   107 r149=[r181]                       :cortex_a8_load_store_1
;;	  4-->   118 r133=r186<<r139                   :cortex_a8_default
;;	  4-->   122 r205=`cpu_online_mask'            :cortex_a8_load_store_1
;;	  5-->   108 r141=r149+0x64                    :cortex_a8_default
;;	  5-->   115 r136=r185<<0x2                    :cortex_a8_default
;;	  6-->   211 pc=L133                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 106
;;   new tail = 211

;;   ======================================================
;;   -- basic block 16 from 143 to 150 -- before reload
;;   ======================================================

;;	  0-->   143 r192=`cpu_online_mask'            :cortex_a8_load_store_1
;;	  3-->   144 r193=[r192]                       :cortex_a8_load_store_1
;;	  6-->   146 r135=[r185*0x4+r193]              :cortex_a8_load_store_1
;;	  9-->   147 r194=r135 0>>r139                 :cortex_a8_default
;;	 10-->   149 cc=cmp(zxt(r194,0x1,0x0),0x0)     :cortex_a8_default
;;	 12-->   150 pc={(cc!=0x0)?L166:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 12
;;   new head = 143
;;   new tail = 150

;;   ======================================================
;;   -- basic block 17 from 153 to 213 -- before reload
;;   ======================================================

;;	  0-->   154 r1=r155                           :cortex_a8_default
;;	  0-->   153 r0=`*.LC20'                       :cortex_a8_load_store_1
;;	  1-->   155 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   156 r143=0xfffffffffffffffb           :cortex_a8_default
;;	  2-->   213 pc=L166                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 2
;;   new head = 153
;;   new tail = 213

;;   ======================================================
;;   -- basic block 18 from 162 to 165 -- before reload
;;   ======================================================

;;	  0-->   163 r1=r155                           :cortex_a8_default
;;	  0-->   162 r0=`*.LC21'                       :cortex_a8_load_store_1
;;	  1-->   164 r2=r143                           :cortex_a8_default
;;	  2-->   165 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 162
;;   new tail = 165

;;   ======================================================
;;   -- basic block 19 from 168 to 185 -- before reload
;;   ======================================================

;;	  0-->   168 r198=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  0-->   174 r0=r144                           :cortex_a8_default
;;	  1-->   175 r1=const(`_stext'+0x40000000)     :cortex_a8_load_store_1
;;	  1-->   169 r199=0x0                          :cortex_a8_default
;;	  2-->   176 r2=const(`_etext'+0x40000000)     :cortex_a8_load_store_1
;;	  3-->   173 [r198+0x1c]=r199                  :cortex_a8_load_store_1
;;	  4-->   170 [r198+0x24]=r199                  :cortex_a8_load_store_1
;;	  4-->   177 call [`identity_mapping_del']     :cortex_a8_issue_branch
;;	  5-->   178 r0=r144                           :cortex_a8_default
;;	  5-->   179 r1=const(`_sdata'+0x40000000)     :cortex_a8_load_store_1
;;	  6-->   180 r2=const(`_edata'+0x40000000)     :cortex_a8_load_store_1
;;	  7-->   181 call [`identity_mapping_del']     :cortex_a8_issue_branch
;;	  7-->   184 r1=r144                           :cortex_a8_default
;;	  8-->   183 r0=`init_mm'                      :cortex_a8_load_store_1
;;	  9-->   185 call [`pgd_free']                 :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 168
;;   new tail = 185

;;   ======================================================
;;   -- basic block 20 from 192 to 198 -- before reload
;;   ======================================================

;;	  0-->   192 r0=r143                           :cortex_a8_default
;;	  0-->   198 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 192
;;   new tail = 198


;; Procedure interblock/speculative motions == 1/1 




__cpu_up

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,23u} r1={28d,12u} r2={21d,5u} r3={16d} r11={1d,20u} r12={16d} r13={1d,35u} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={24d,8u} r25={1d,20u} r26={1d,19u} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} r133={1d,1u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,2u,1d} r140={1d,2u} r141={1d,1u} r142={2d,2u} r143={4d,2u} r144={1d,5u} r145={2d,7u} r146={1d,2u} r147={1d,1u} r149={1d,1u} r155={1d,10u,2d} r157={1d,1u} r158={1d,1u} r161={1d,6u} r162={1d,1u,1d} r163={1d,1u} r164={1d,1u} r166={1d,1u} r168={1d,1u} r169={1d,1u} r173={1d,1u} r181={1d,2u} r183={1d,1u} r184={1d,1u} r185={1d,2u} r186={1d,1u} r188={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r198={1d,2u} r199={1d,2u} r204={1d,1u} r205={1d,1u} 
;;    total ref usage 2068{1849d,215u,4e} in 117{102 regular + 15 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142 145 146 155 157 158
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 142 145 146 155 157 158
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 3 2 2 arch/arm/kernel/smp.c:61 (set (reg/f:SI 157)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 2 8 6 2 arch/arm/kernel/smp.c:60 (set (reg/v:SI 155 [ cpu ])
        (reg:SI 0 r0 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 7 2 arch/arm/kernel/smp.c:61 (set (reg/v:SI 142 [ __ptr ])
        (symbol_ref:SI ("cpu_data") [flags 0xc0] <var_decl 0x11431540 cpu_data>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/smp.c:61 (set (reg/v:SI 142 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 142 [ __ptr ])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8497403)) -1 (nil))

(insn 9 7 10 2 arch/arm/kernel/smp.c:61 (set (reg:SI 158)
        (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 155 [ cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 157)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 157)
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg/v:SI 155 [ cpu ])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10c98e40 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 10 9 11 2 arch/arm/kernel/smp.c:61 (set (reg/v/f:SI 146 [ ci ])
        (plus:SI (reg/v:SI 142 [ __ptr ])
            (reg:SI 158))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/v:SI 142 [ __ptr ])
            (nil))))

(insn 11 10 12 2 arch/arm/kernel/smp.c:62 (set (reg/v/f:SI 145 [ idle ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 146 [ ci ])
                (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/smp.c:70 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ idle ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/kernel/smp.c:70 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1910 [0x776])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155


;; Succ edge  3 [80.9%]  (fallthru)
;; Succ edge  6 [19.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 155
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 155
;; live  gen 	 0 [r0] 24 [cc] 145
;; live  kill	 14 [lr]

;; Pred edge  2 [80.9%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 16 14 17 3 arch/arm/kernel/smp.c:71 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fork_idle") [flags 0x41] <function_decl 0x10fde780 fork_idle>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 18 3 arch/arm/kernel/smp.c:71 (set (reg/v/f:SI 145 [ idle ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 18 17 19 3 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ idle ])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 3 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  gen 	 0 [r0] 1 [r1] 143
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 20 19 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 20 22 4 arch/arm/kernel/smp.c:73 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ cpu ])
        (nil)))

(insn 22 23 24 4 arch/arm/kernel/smp.c:73 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116cec80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC19") [flags 0x82] <string_cst 0x116cec80>)
        (nil)))

(call_insn 24 22 25 4 arch/arm/kernel/smp.c:73 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 25 24 205 4 include/linux/err.h:29 (set (reg/v:SI 143 [ ret ])
        (reg/v/f:SI 145 [ idle ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ idle ])
        (nil)))

(jump_insn 205 25 206 4 arch/arm/kernel/smp.c:74 (set (pc)
        (label_ref 186)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143


;; Succ edge  20 [100.0%] 

(barrier 206 205 28)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 155
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 28 206 29 5 141 "" [1 uses])

(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 207 5 arch/arm/kernel/smp.c:76 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 146 [ ci ])
                (const_int 52 [0x34])) [0 <variable>.idle+0 S4 A32])
        (reg/v/f:SI 145 [ idle ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 146 [ ci ])
        (nil)))

(jump_insn 207 30 208 5 (set (pc)
        (label_ref 38)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155


;; Succ edge  7 [100.0%] 

(barrier 208 207 33)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [19.1%] 
(code_label 33 208 34 6 140 "" [1 uses])

(note 34 33 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 6 arch/arm/kernel/smp.c:82 (set (reg:SI 0 r0)
        (reg/v/f:SI 145 [ idle ])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 6 arch/arm/kernel/smp.c:82 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 37 36 38 6 arch/arm/kernel/smp.c:82 (parallel [
            (call (mem:SI (symbol_ref:SI ("init_idle") [flags 0x41] <function_decl 0x10f44680 init_idle>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; live  gen 	 0 [r0] 24 [cc] 144
;; live  kill	 14 [lr]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 38 37 39 7 143 "" [1 uses])

(note 39 38 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 43 39 41 7 NOTE_INSN_DELETED)

(insn 41 43 42 7 arch/arm/kernel/smp.c:91 (set (reg:SI 0 r0)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
        (nil)))

(call_insn 42 41 44 7 arch/arm/kernel/smp.c:91 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pgd_alloc") [flags 0x41] <function_decl 0x114f1a00 pgd_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 42 45 7 arch/arm/kernel/smp.c:92 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v/f:SI 144 [ pgd ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 45 44 46 7 arch/arm/kernel/smp.c:92 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7836 [0x1e9c])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145 155
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155


;; Succ edge  8 [21.6%]  (fallthru)
;; Succ edge  9 [78.4%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 143
;; live  kill	

;; Pred edge  7 [21.6%]  (fallthru)
(note 46 45 47 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 209 8 arch/arm/kernel/smp.c:93 (set (reg/v:SI 143 [ ret ])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))

(jump_insn 209 47 210 8 (set (pc)
        (label_ref 186)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143


;; Succ edge  20 [100.0%] 

(barrier 210 209 50)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 161 162 163 164 166 168 169 173
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 140 161 162 163 164 166 168 169 173
;; live  kill	 14 [lr]

;; Pred edge  7 [78.4%] 
(code_label 50 210 51 9 144 "" [1 uses])

(note 51 50 78 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 78 51 55 9 NOTE_INSN_DELETED)

(insn 55 78 56 9 arch/arm/kernel/smp.c:99 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 56 55 57 9 arch/arm/kernel/smp.c:99 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(call_insn 57 56 60 9 arch/arm/kernel/smp.c:99 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x41] <function_decl 0x11227580 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 60 57 61 9 arch/arm/kernel/smp.c:100 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 9 arch/arm/kernel/smp.c:100 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 62 61 63 9 arch/arm/kernel/smp.c:100 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(call_insn 63 62 64 9 arch/arm/kernel/smp.c:100 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x41] <function_decl 0x11227580 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 64 63 65 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 70 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 162 [ <variable>.stack ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 145 [ idle ])
                (const_int 4 [0x4])) [0 <variable>.stack+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 70 65 73 9 arch/arm/kernel/smp.c:108 (set (reg/f:SI 166)
        (plus:SI (reg/v/f:SI 144 [ pgd ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 73 70 79 9 arch/arm/kernel/smp.c:109 (set (reg/f:SI 168)
        (const:SI (plus:SI (symbol_ref:SI ("swapper_pg_dir") [flags 0xc0] <var_decl 0x11208000 swapper_pg_dir>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (nil))

(insn 79 73 66 9 arch/arm/kernel/smp.c:110 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 161)
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 28 [0x1c])))
        (nil)))

(insn 66 79 71 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 164)
        (plus:SI (reg/f:SI 162 [ <variable>.stack ])
            (const_int 8128 [0x1fc0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 162 [ <variable>.stack ])
        (nil)))

(insn 71 66 67 9 arch/arm/kernel/smp.c:108 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166)
        (nil)))

(insn 67 71 68 9 arch/arm/kernel/smp.c:107 (set (reg/f:SI 163)
        (plus:SI (reg/f:SI 164)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 164)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 162 [ <variable>.stack ])
                (const_int 8184 [0x1ff8]))
            (nil))))

(insn 68 67 74 9 arch/arm/kernel/smp.c:107 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
        (reg/f:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 163)
        (nil)))

(insn 74 68 80 9 arch/arm/kernel/smp.c:109 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 32 [0x20])) [0 secondary_data.swapper_pg_dir+0 S4 A32])
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 168)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("swapper_pg_dir") [flags 0xc0] <var_decl 0x11208000 swapper_pg_dir>)
                    (const_int 1073741824 [0x40000000])))
            (nil))))

(insn 80 74 75 9 arch/arm/kernel/smp.c:110 (set (reg:SI 1 r1)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 75 80 81 9 arch/arm/kernel/smp.c:110 (set (reg/f:SI 169)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1141de40 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(call_insn 81 75 82 9 arch/arm/kernel/smp.c:110 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 169)
                            (const_int 24 [0x18])) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 169)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 82 81 83 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 173)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 140 [ D.27709 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 173)
                (const_int 4 [0x4])) [0 outer_cache.clean_range+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 173)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)
                        (const_int 4 [0x4]))) [0 outer_cache.clean_range+0 S4 A32])
            (nil))))

(insn 84 83 85 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 140 [ D.27709 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 85 84 86 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 97)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161


;; Succ edge  10 [69.8%]  (fallthru)
;; Succ edge  11 [30.2%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144 145 155 161
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  9 [69.8%]  (fallthru)
(note 86 85 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 95 86 94 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 161)
            (const_int 1073741864 [0x40000028]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 1073741864 [0x40000028])))
            (nil))))

(insn 94 95 96 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 161)
            (const_int 1073741852 [0x4000001c]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 1073741852 [0x4000001c])))
        (nil)))

(call_insn 96 94 97 10 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (parallel [
            (call (mem:SI (reg/f:SI 140 [ D.27709 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 140 [ D.27709 ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 155
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 143
;; live  kill	 14 [lr]

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [30.2%] 
(code_label 97 96 98 11 145 "" [1 uses])

(note 98 97 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 102 98 100 11 NOTE_INSN_DELETED)

(insn 100 102 99 11 arch/arm/kernel/smp.c:116 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ idle ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ idle ])
        (nil)))

(insn 99 100 101 11 arch/arm/kernel/smp.c:116 (set (reg:SI 0 r0)
        (reg/v:SI 155 [ cpu ])) 167 {*arm_movsi_insn} (nil))

(call_insn 101 99 103 11 arch/arm/kernel/smp.c:116 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("boot_secondary") [flags 0x41] <function_decl 0x10c9f080 boot_secondary>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 103 101 104 11 arch/arm/kernel/smp.c:117 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 143 [ ret ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 104 103 105 11 arch/arm/kernel/smp.c:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 159)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 11 -> ( 12 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155


;; Succ edge  12 [100.0%]  (fallthru)
;; Succ edge  18 [0.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 24 [cc] 133 136 139 141 149 181 183 184 185 186 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  gen 	 133 136 139 141 149 181 183 184 185 186 204 205
;; live  kill	 24 [cc]

;; Pred edge  11 [100.0%]  (fallthru)
(note 105 104 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 112 105 106 12 NOTE_INSN_DELETED)

(insn 106 112 111 12 arch/arm/kernel/smp.c:124 (set (reg/f:SI 181)
        (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>)) 167 {*arm_movsi_insn} (nil))

(insn 111 106 113 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 184)
        (plus:SI (reg/v:SI 155 [ cpu ])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))

(insn 113 111 117 12 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:SI 183 [ D.25991 ])
                (if_then_else:SI (ge (reg/v:SI 155 [ cpu ])
                        (const_int 0 [0x0]))
                    (reg/v:SI 155 [ cpu ])
                    (reg:SI 184)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 117 113 116 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 186)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 116 117 135 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 139 [ D.27717 ])
        (and:SI (reg/v:SI 155 [ cpu ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 135 116 114 12 arch/arm/kernel/smp.c:125 discrim 3 (set (reg/f:SI 204)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 181)
        (expr_list:REG_EQUAL (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>)
            (nil))))

(insn 114 135 107 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 185)
        (ashiftrt:SI (reg:SI 183 [ D.25991 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183 [ D.25991 ])
        (expr_list:REG_EQUAL (div:SI (reg/v:SI 155 [ cpu ])
                (const_int 32 [0x20]))
            (nil))))

(insn 107 114 118 12 arch/arm/kernel/smp.c:124 (set (reg:SI 149 [ jiffies.388 ])
        (mem/v/c/i:SI (reg/f:SI 181) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 118 107 122 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 133 [ shifttmp.1090 ])
        (ashift:SI (reg:SI 186)
            (reg:SI 139 [ D.27717 ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
                (reg:SI 139 [ D.27717 ]))
            (nil))))

(insn 122 118 108 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 205)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 108 122 115 12 arch/arm/kernel/smp.c:124 (set (reg/v:SI 141 [ timeout ])
        (plus:SI (reg:SI 149 [ jiffies.388 ])
            (const_int 100 [0x64]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 149 [ jiffies.388 ])
        (nil)))

(insn 115 108 211 12 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 136 [ D.27720 ])
        (ashift:SI (reg:SI 185)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(jump_insn 211 115 212 12 arch/arm/kernel/smp.c:125 (set (pc)
        (label_ref 133)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205


;; Succ edge  15 [100.0%] 

(barrier 212 211 137)

;; Start of basic block ( 15) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 205
;; lr  def 	 24 [cc] 138 188
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  gen 	 24 [cc] 138 188
;; live  kill	

;; Pred edge  15 [95.5%] 
(code_label 137 212 121 13 149 "" [1 uses])

(note 121 137 126 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 126 121 123 13 NOTE_INSN_DELETED)

(insn 123 126 125 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 188 [ cpu_online_mask ])
        (mem/u/f/c/i:SI (reg/f:SI 205) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
        (nil)))

(insn 125 123 127 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.27718 ])
        (mem/v:SI (plus:SI (reg/f:SI 188 [ cpu_online_mask ])
                (reg:SI 136 [ D.27720 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 188 [ cpu_online_mask ])
        (nil)))

(insn 127 125 128 13 include/asm-generic/bitops/non-atomic.h:105 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 138 [ D.27718 ])
                        (reg:SI 133 [ shifttmp.1090 ]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 138 [ D.27718 ])
        (nil)))

(jump_insn 128 127 129 13 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 13 -> ( 16 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205


;; Succ edge  16 [4.5%]  (loop_exit)
;; Succ edge  14 [95.5%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  13 [95.5%]  (fallthru)
(note 129 128 131 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(call_insn 131 129 132 14 arch/arm/kernel/smp.c:129 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10e39780 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 132 131 133 14 arch/arm/kernel/smp.c:130 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8506211)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 204
;; lr  def 	 24 [cc] 147 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  gen 	 24 [cc] 147 191
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  12 [100.0%] 
(code_label 133 132 134 15 147 "" [1 uses])

(note 134 133 136 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 136 134 204 15 arch/arm/kernel/smp.c:125 discrim 3 (set (reg:SI 147 [ jiffies.390 ])
        (mem/v/c/i:SI (reg/f:SI 204) [0 jiffies+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/v/c/i:SI (symbol_ref:SI ("jiffies") [flags 0xc0] <var_decl 0x10ce23c0 jiffies>) [0 jiffies+0 S4 A32])
        (nil)))

(insn 204 136 138 15 arch/arm/kernel/smp.c:129 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 138 204 139 15 arch/arm/kernel/smp.c:125 discrim 3 (set (reg:SI 191)
        (minus:SI (reg:SI 147 [ jiffies.390 ])
            (reg/v:SI 141 [ timeout ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 147 [ jiffies.390 ])
        (nil)))

(insn 139 138 140 15 arch/arm/kernel/smp.c:125 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(jump_insn 140 139 141 15 arch/arm/kernel/smp.c:125 discrim 3 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 15 -> ( 13 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 139 141 143 144 155 185 204 205


;; Succ edge  13 [95.5%] 
;; Succ edge  16 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 15 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144 155 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 185
;; lr  def 	 24 [cc] 135 192 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 143 144 155 185
;; live  gen 	 24 [cc] 135 192 193 194
;; live  kill	

;; Pred edge  15 [4.5%]  (fallthru,loop_exit)
;; Pred edge  13 [4.5%]  (loop_exit)
(code_label 141 140 142 16 148 "" [1 uses])

(note 142 141 148 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 148 142 143 16 NOTE_INSN_DELETED)

(insn 143 148 144 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 192)
        (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>)) 167 {*arm_movsi_insn} (nil))

(insn 144 143 146 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg/f:SI 193 [ cpu_online_mask ])
        (mem/u/f/c/i:SI (reg/f:SI 192) [0 cpu_online_mask+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 192)
        (expr_list:REG_EQUAL (mem/u/f/c/i:SI (symbol_ref:SI ("cpu_online_mask") [flags 0xc0] <var_decl 0x10c5bf60 cpu_online_mask>) [0 cpu_online_mask+0 S4 A32])
            (nil))))

(insn 146 144 147 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 135 [ D.27732 ])
        (mem/v:SI (plus:SI (mult:SI (reg:SI 185)
                    (const_int 4 [0x4]))
                (reg/f:SI 193 [ cpu_online_mask ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 193 [ cpu_online_mask ])
        (expr_list:REG_DEAD (reg:SI 185)
            (nil))))

(insn 147 146 149 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 194)
        (lshiftrt:SI (reg:SI 135 [ D.27732 ])
            (reg:SI 139 [ D.27717 ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.27717 ])
        (expr_list:REG_DEAD (reg:SI 135 [ D.27732 ])
            (nil))))

(insn 149 147 150 16 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 194)
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))

(jump_insn 150 149 151 16 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 166)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 16 -> ( 17 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u173(11){ }u174(13){ }u175(25){ }u176(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 155
;; live  gen 	 0 [r0] 1 [r1] 143
;; live  kill	 14 [lr]

;; Pred edge  16 [0.0%]  (fallthru)
(note 151 150 154 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 154 151 153 17 arch/arm/kernel/smp.c:134 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ cpu ])
        (nil)))

(insn 153 154 155 17 arch/arm/kernel/smp.c:134 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x11607dc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC20") [flags 0x82] <string_cst 0x11607dc0>)
        (nil)))

(call_insn 155 153 156 17 arch/arm/kernel/smp.c:134 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 156 155 213 17 arch/arm/kernel/smp.c:135 (set (reg/v:SI 143 [ ret ])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))

(jump_insn 213 156 214 17 (set (pc)
        (label_ref 166)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144


;; Succ edge  19 [100.0%] 

(barrier 214 213 159)

;; Start of basic block ( 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u181(11){ }u182(13){ }u183(25){ }u184(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144 155
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  11 [0.0%] 
(code_label 159 214 160 18 146 "" [1 uses])

(note 160 159 163 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 163 160 162 18 arch/arm/kernel/smp.c:138 (set (reg:SI 1 r1)
        (reg/v:SI 155 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 155 [ cpu ])
        (nil)))

(insn 162 163 164 18 arch/arm/kernel/smp.c:138 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x116ec540>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC21") [flags 0x82] <string_cst 0x116ec540>)
        (nil)))

(insn 164 162 165 18 arch/arm/kernel/smp.c:138 (set (reg:SI 2 r2)
        (reg/v:SI 143 [ ret ])) 167 {*arm_movsi_insn} (nil))

(call_insn 165 164 166 18 arch/arm/kernel/smp.c:138 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 16 18 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u191(11){ }u192(13){ }u193(25){ }u194(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 198 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 198 199
;; live  kill	 14 [lr]

;; Pred edge  16 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%] 
(code_label 166 165 167 19 150 "" [2 uses])

(note 167 166 168 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 174 19 arch/arm/kernel/smp.c:141 (set (reg/f:SI 198)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 174 168 175 19 arch/arm/kernel/smp.c:148 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 169 19 arch/arm/kernel/smp.c:148 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x1150dc00 _stext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 169 175 176 19 arch/arm/kernel/smp.c:141 (set (reg:SI 199)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 176 169 173 19 arch/arm/kernel/smp.c:148 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x1150dc60 _etext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 173 176 170 19 arch/arm/kernel/smp.c:142 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 198)
                (const_int 28 [0x1c])) [0 secondary_data.pgdir+0 S4 A32])
        (reg:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg/f:SI 198)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 170 173 177 19 arch/arm/kernel/smp.c:141 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 198)
                (const_int 36 [0x24])) [0 secondary_data.stack+0 S4 A32])
        (reg:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 177 170 178 19 arch/arm/kernel/smp.c:148 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_del") [flags 0x41] <function_decl 0x11227600 identity_mapping_del>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 178 177 179 19 arch/arm/kernel/smp.c:149 (set (reg:SI 0 r0)
        (reg/v/f:SI 144 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 19 arch/arm/kernel/smp.c:149 (set (reg:SI 1 r1)
        (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x1150dd20 _sdata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 180 179 181 19 arch/arm/kernel/smp.c:149 (set (reg:SI 2 r2)
        (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x1150dd80 _edata>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(call_insn 181 180 184 19 arch/arm/kernel/smp.c:149 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_del") [flags 0x41] <function_decl 0x11227600 identity_mapping_del>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 184 181 183 19 arch/arm/kernel/smp.c:152 (set (reg:SI 1 r1)
        (reg/v/f:SI 144 [ pgd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ pgd ])
        (nil)))

(insn 183 184 185 19 arch/arm/kernel/smp.c:152 (set (reg:SI 0 r0)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x10fc0f00 init_mm>)
        (nil)))

(call_insn 185 183 186 19 arch/arm/kernel/smp.c:152 (parallel [
            (call (mem:SI (symbol_ref:SI ("pgd_free") [flags 0x41] <function_decl 0x114f1a80 pgd_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19 4 8) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
;; Pred edge  8 [100.0%] 
(code_label 186 185 187 20 142 "" [2 uses])

(note 187 186 192 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 192 187 198 20 arch/arm/kernel/smp.c:155 (set (reg/i:SI 0 r0)
        (reg/v:SI 143 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ ret ])
        (nil)))

(insn 198 192 215 20 arch/arm/kernel/smp.c:155 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 20 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 215 198 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
